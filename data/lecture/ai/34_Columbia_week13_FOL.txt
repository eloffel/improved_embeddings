arti   cial intelligence

first order logic

ansaf salleb-aouissi

columbia university - fall 2014 w4701 section 2

id118: review
    id118 (pl) is a formal language to describe the

world around us.

    logic can be used by an agent to model the world.
    sentences in pl have a    xed syntax.
    with symbols and connectives we can form logical sentences:
    symbols or terms that can be either true or false or un-

known.

    logical connectives
example: hot     sunny     beach     pool

    syntax and semantic represent two important and distinct

aspects in pl.

    semantic: con   gurations/instantiations of the world.

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

1

id118: review
    we say m is a model ((cid:54)= usual notion of model) of a logical

sentence    if    is true in m.

    m(  ) is the set of all models of   .
    id136: given a knowledge base (kb) (set of sentences
in pl), given a query   , output whether kb entails   , noted:
kb |=   

    the idea of id136 is to repeat applying id136 rules to

the kb.

    we have seen two ways of doing id136: (1) using syn-
tactic derivations with modus ponens (backward chaining and
forward chaining), and (2) model checking with truth tables.

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

2

id118: review
    modus ponens id136 rule:

p1, . . . , pn,

(p1     . . .     pn)     q
q

    example:

w arm

w arm   sunny
sunny

    modus ponens deals with horn clauses
    horn clauses: logic proposition of the form: p1     . . .     pn     q
    id136: we want an id136 algorithm that is:

1. sound (does not infer false formulas), and
2. ideally, complete too (derives all true formulas).

    id136 in pl with horn clauses is sound and complete.

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

3

id118: review

    limits of pl?

1. pl is not expressive enough to describe all the world around
us. it can   t express information about di   erent object and
the relation between objects.

2. pl is not compact.

it can   t express a fact for a set of
objects without enumerating all of them which is sometimes
impossible.

    example: we have a vacuum cleaner (roomba) to clean a
10  10 squares in the classroom. use pl to express information
about the squares.

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

4

id118: review

    the proposition square1 is clean expresses information about
square1 being clean. how can one write this in a less heavy
way?

    how can we express that all squares in the room are clean?
square1 is clean     square2 is clean     . . .     square100 is clean

    how can we express that some squares in the room are clean?

square1 is clean     square2 is clean     . . .     square100 is clean
    how can we express that some squares have chairs on them?
square1 has chair    square2 has chair    . . .    square100 has chair

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

5

first order logic
    alternative to pl: another more powerful language, first or-

der logic (fol).

    syntax of fol:

    terms are either:

    constants symbols (e.g., a, 10, columbia),
    variables (e.g., x, y)
    functions of terms, e.g., sqrt(x), sum(1,2).

    atomic formulas:

predicates applied to terms, e.g.,

brother(x,y), above(a,b)

    connectives:    ,    ,    ,    ,   
    equality: =
    quanti   ers:        
    connectives, equality, quanti   ers can be applied to atomic

formulas to create sentences in fol.

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

6

first order logic

all squares are clean:

    x square(x)     clean(x)

there exists some dirty squares:

    x square(x)       clean(x)

question: now, can we express that some squares have
chairs on top?

note:

       x p (x) is like p (a)     p (b)     . . .
       x p (x) is like p (a)     p (b)     . . .
         x p (x) is like     x   p (x)
       x     y likes(x, y) is not like    y    x likes(x, y)

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

7

first order logic

note: we use the     with     . we use     with    .

every kid likes candy:

    x kid(x)     likes(x, candy)

some kids like candy:

    x kid(x)     likes(x, candy)

question: why can   t express it be expressed by:

    x kid(x)     likes(x, candy)

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

8

first order logic

more examples:

    brothers are sibling:

   x, y brothers(x, y)     sibling(x, y)

    one   s mother is one   s female parent:

   x, y m other(x, y)     f emale(x)     p arent(x, y)

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

9

first order logic

id136: while a bit more complicated than pl, there are
procedures to do id136 with a knowledge base of fol formulas.
to investigate! (aima chapter 9     out of the scope of the    nal).

natural language: the expressiveness of fol suggests that it is
possible to automate the conversion between natural language and
logical expressions. this is very valuable for di   erent applications,
such as personal assistants (siri), question/answering systems, and
communicating with computers in general.

copyright c(cid:13)ansaf salleb-aouissi: fall 2014 computer science w4701 section 2 artificial intelligence

10

