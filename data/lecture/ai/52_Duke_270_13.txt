robot motion planning

george konidaris	
gdk@cs.duke.edu

spring 2016

robot motion planning

motion planning

motion planning

problem de   nition
robot has a con   guration space (c-space):	

    values for each joint	
    overall pose of reference frame	

!

start and end points	

    start point	
    goal region	

!

set of obstacles	

    dense regions of 3d-space (also regions of c-space) 	

!

objective: obstacle-free path through con   guration space 
from start to goal.

con   guration spaces
each joint is a dimension of the con   guration space.	
!
let   s say we have a robot with an arm with two revolute joints.	
!
con   guration space:	

   
   
   
   

 x, y, z of base frame	
 pitch, roll, yaw, of base frame	
 angle of    rst joint	
 angle of second joint	

!
a con   guration is a setting of values to these 8 variables.	
con   guration space is the space of all such settings.

con   guration space

obstacles are no-go regions	
of con   guration space.

(images from wikipedia)

planning
we wish to    nd a path through con   guration space such that:	
    path feasible 	
    no collisions

g

obstacle

obstacle

obstacle

obstacle

q0

a path in free space

a prm in free space

paths
simple de   nition of a path:	

    sequence of points p = {p1,    , pn}	
       easy    to go between pi and pi+1.	

!
!
solution - path such that:	

    p1 = start	
    pn inside goal	
    no collision between any pi and pi+1.	

!
!

g

obstacle

obstacle

obstacle

q0

a path in free space

broad approach: visibility graphs
1. break c-space up into convex regions.	
!
2. we know we can get from anywhere in a convex region to 
anywhere else with a straight line.	
!
3. build a graph: each node convex region, edge when they 
share a face.	
!
4. do search on the graph.

visibility graphs

issues
these are hard to use:	

    convex region numbers grow exponentially with 

dimension.	

    need analytical model of each obstacle in c-space. 	
    need analytical model of c-space!	

!
consequently, these methods only used for very low-d 
problems.

complexity
issue: motion planning is p-space complete (reif, 1979).

solution family: rrts
alternative solution:	

    rely on randomized algorithms.	
    build randomized trees starting from the start state.	
    high processing costs but probabilistic guarantees.	

!
!

rrts

rrts
what does an edge between two nodes mean?

swept
volume

n 2
sitio

o
p

position 1

must test:  collision between obstacle and swept volume.	
this can be done in 3-space.

rrt
property: the tree rapidly expands to    ll free space. 	
!
why?	
!

robot motion planning
absolutely critical for using robots in unstructured 
environments. 	
!
but:	

     fundamentally hard.	
     very well studied	
     no real-time solutions.	
!

(watch this space.) 

