python

cam allen 

cam@cs.duke.edu 

based on slides by zhenyu zhou, richard guo

what is python?

language principles

    beautiful is better than ugly 
    explicit is better than implicit 
    simple is better than complex 
    complex is better than complicated 
    readability counts 

   the zen of python

the interpreter

running scripts

indentation

indentation errors

dynamic typing

strings

lists

tuples

sequence types

type

string

list

tuple

(more)

example

s = "don   t touch that dial!"

l = [1, 2, 3, 4, 5]

t = ('check', 1, 2)

...

sequence types

operation
x in s

x not in s

s + t

s * n, n * s

s[i]
s[i:j]
s[i:j:k]
len(s)
min(s)
max(s)

s.index(x)
s.count(x)

result

true if an item of s is equal to x, else false
false if an item of s is equal to x, else true
concatenation of s and t
equivalent to adding s to itself n times
the i th item of s, starting with index 0
slice of s from i to j
slice of s from i to j, with step k
length of s
smallest item of s
largest item of s
index of the    rst occurrence of x in s
total number of occurrences of x in s

dictionaries

quick recap

    python: popular language, for good reasons 

    interactive mode and script mode 

    language basics 

    next up: control    ow, functions, classes, modules

control flow statements

functions

default arguments

classes

inheritance

importing modules

summary

    why we   re using python 

    how to use python 

    language basics 

    building blocks

references

    content is based on slides by zhenyu zhou, richard guo 

    python.org - of   cial python website 

    berkeley python/unix tutorial - available on course webpage 

    learnpython.org - basic tutorials, examples 

    a byte of python - beginner   s tutorial 

    oliver fromme - python information and examples 

    tiobe.com - language popularity index

