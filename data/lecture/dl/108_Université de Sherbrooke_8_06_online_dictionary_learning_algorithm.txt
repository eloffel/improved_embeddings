neural networks
sparse coding - online dictionary learning algorithm

universit  e de sherbrooke

sparse coding
hugo.larochelle@usherbrooke.ca

2

2

2

d

d

d

   

1
t

1
t

1
t

h(t)

min
d

min
h(t)

arg min

    d>d

    1
txt=1

2 +  ||h(x(t))||1

    x(t) h(t) d

1
2||x(t)   d h(x(t))||2

1
arg min
t
1
2||x(t)   d h(x(t))||2

min
d
1
l(x(t)) = min
t
d
math for my slides    sparse coding   .

hugo.larochelle@usherbrooke.ca
sparse coding
txt=1
txt=1
1
l(x(t)) = min
min
t
txt=1
abstract
november 1, 2012
d
h(t)
1
2 +  ||h(x(t))||1
2||x(t)   d h(x(t))||2
min
d
txt=1
1
1
topics: learning algorithm (putting it all together)
2||x(t)   d h(x(t))||2
min
t
txt=1
d
1
    x(t) h(t) d
2||x(t)   d h(x(t))||2
    learning alternates between id136 and dictionary learning
abstract
   
txt=1
2 =  txt=1
1
1
2||x(t)   d h(t)||2
txt=1
arg min
arg min
math for my slides    sparse coding   .
1
2||x(t)   d h(x(t))||2
t
x(t) h(x(t))>!  txt=1
h(x(t)) h(x(t))>! 1
2 =  txt=1
txt=1
1
    while     has not converged
t
d (=  txt=1
x(t) h(x(t))>!  txt=1
txt=1
1
       nd the sparse codes              for all        in my training set with ista
2||x(t)   d h(t)||2
    x(t) h(t) d
arg min
x(t) h(x(t))>!  txt=1
d (=  txt=1
h(x(t)) h(x(t))>! 1
    update the dictionary:
t=1 x(t) h(x(t))> b (=pt
    a (=pt
 
t=1 h(x(t)) h(x(t))> d (= b a 1
t=1 x(t) h(x(t))> b (=pt
 
h(x(t)) = arg min
t=1 h(x(t)) h(x(t))> d (= b a 1
   
x(t) h(x(t) (=    txt=1
t +1xt=1
 run block-coordinate descent algorithm to update 
    x(t) h(t) d
x(t) h(x(t) (=    txt=1
x(t) h(x(t))>! + (1    )x(t +1) h(x(t +1))>
t +1xt=1
    similar to the em algorithm
h(x(t)) h(x(t) (=    txt=1
t +1xt=1
h(x(t)) h(x(t) (=    txt=1
h(x(t)) h(x(t))>! + (1    )h(x(t +1)) h(x(t +1))>
t +1xt=1

x(t) h(x(t))>!  txt=1
2 +  ||h(t)||1
math for my slides    sparse coding   .
h(x(t)) h(x(t))>! 1
1
2 +  ||h(t)||1
2||x(t)   d h(t)||2

2 +  ||h(t)||1
txt=1
arg min
2 +  ||h(t)||1
x(t) h(x(t))>! + (1    )x(t +1) h(x(t +1))>
h(x(t)) = arg min
txt=1
1
t
h(x(t)) h(x(t))>! + (1    )h(x(t +1)) h(x(t +1))>

math for my slides    sparse coding   .
1
2||x(t)   d h(t)||2

h(x(t)) h(x(t))>! 1

h(x(t)) = arg min

arg min

1
t
h(t)

arg min

arg min

abstract
h(t)

-
-
   
-

1
t

h(t)

h(t)

h(t)

   

   

d

d

d

november 1, 2012

hugo larochelle

d  epartement d   informatique
universit  e de sherbrooke

hugo.larochelle@usherbrooke.ca

abstract

november 1, 2012

arg min

1
2||x(t)   d h(t)||2

1
2||x(t)   d h(t)||2

1
h(t)
2||x(t)   d h(t)||2

min
h(t)

l(x(t)) = min
d

1
t

txt=1

hugo.larochelle@usherbrooke.ca

2 +  ||h(x(t))||1

sparse coding

november 1, 2012

1
2||x(t)   d h(x(t))||2

txt=1
1
2||x(t)   d h(x(t))||2

2

universit  e de sherbrooke

sparse coding

hugo.larochelle@usherbrooke.ca
hugo.larochelle@usherbrooke.ca

hugo.larochelle@usherbrooke.ca
hugo larochelle
3
november 1, 2012
november 1, 2012

d  epartement d   informatique
universit  e de sherbrooke
d  epartement d   informatique
hugo.larochelle@usherbrooke.ca
universit  e de sherbrooke

hugo.larochelle@usherbrooke.ca

november 1, 2012

math for my slides    sparse coding   .

november 1, 2012

    x(t) h(t) d

1
t

min
d

hugo larochelle

topics: online learning algorithm
abstract
    this algorithm is       batch       (i.e. not online)
math for my slides    sparse coding   .
2||x(t)   d h(x(t))||2

txt=1
2 =  txt=1
x(t) h(x(t))>!  txt=1
h(x(t)) = arg min
   

abstract
d  epartement d   informatique
x(t) h(x(t))>!  txt=1
h(x(t)) h(x(t))>! 1
abstract
math for my slides    sparse coding   .
universit  e de sherbrooke
    single update of the dictionary per pass on the training set
txt=1
math for my slides    sparse coding   .
1
1
    for large datasets, we   d like to update      after visiting each       
2 +  ||h(t)||1
2||x(t)   d h(t)||2
    x(t) h(t) d
    x(t) h(t) d
h(x(t)) h(x(t))>! 1
t
d
1
november 1, 2012
    x(t) h(t) d
arg min
t
    perform id136 of             for the current 
1
1
d
h(t)
    x(t) h(t) d
2 +  ||h(t)||1
2||x(t)   d h(t)||2
arg min
arg min
t=1 h(x(t)) h(x(t))> d (= b a 1
    update running averages of the quantities required to update     :
t
   
    x(t) h(t) d
abstract

    solution: for each 

arg min

arg min

arg min

h(t)

h(t)

h(t)

d (=  txt=1
t=1 x(t) h(x(t))> b (=pt

-
-

 
b (=   b + (1    ) x(t) h(x(t))>
 
a (=   a + (1    ) h(x(t)) h(x(t))>
    use current value of      as       warm start       to block-coordinate descent
a (=   a + (1    ) h(x(t +1)) h(x(t +1))>

math for my slides    sparse coding   .

   

   

    x(t) h(t) d

d

arg min

txt=1
txt=1

hugo.larochelle@usherbrooke.ca
math for my slides    sparse coding   .
1
2||x(t)   d h(t)||2
arg min
math for my slides    sparse coding   .
1
2||x(t)   d h(t)||2
txt=1
1
arg min
1
txt=1
t
h(x(t)) = arg min
2||x(t)   d h(t)||2
h(x(t)) = arg min
d
arg min
1
2||x(t)   d h(t)||2
h(x(t)) = arg min
h(x(t)) = arg min
2 +  ||h(t)||1

1
2||x(t)   d h(t)||2

h(t)
h(x(t)) = arg min

h(t)
arg min

arg min

1
t

1
t

h(t)

h(t)

h(t)

d

d

h(t)

   
arg min

d

txt=1

4

2

2

2

1

(1)

1
t

min
d

1
t

min

min
d

min
h(t)

min
min
h(t)
d

arg min

min
1
d
t

txt=1

= min
d

l(x(t)) = min
d

txt=1

txt=1

abstract

abstract

2 +  ||h(x(t))||1

h(t) (= shrink(h(t),       sign(h(t)))

hugo.larochelle@usherbrooke.ca

txt=1
1
1
l(x(t)) = min
2||x(t)   d h(x(t))||2
l(x(t)) = min
d
1
t
d
2||x(t)   d h(x(t))||2
min
d
1
t

1
1
2||x(t)   d h(x(t))||2
november 1, 2012
t

november 1, 2012

txt=1
1
txt=1
november 1, 2012
sparse coding
2 +  ||h(x(t))||1
txt=1
t
1
t
txt=1
1
2||x(t)   d h(x(t))||2
txt=1
1
2||x(t)   d h(x(t))||2
abstract
2 =  txt=1
x(t) h(x(t))>!  txt=1
h(x(t)) h(x(t))>! 1
shrink(a, b) = [. . . , sign(ai) max(|ai|   bi, 0), . . . ]
topics: online learning algorithm
math for my slides    sparse coding   .
sparse coding
txt=1
1
1
2||x(t)   d h(x(t))||2
math for my slides    sparse coding   .
2 =  txt=1
h(x(t)) h(x(t))>! 1
x(t) h(x(t))>!  txt=1
2   d h(x(t))   > d h(x(t))
txt=1
1
1
t
x(t)>x(t)   x(t)>d h(x(t)) +
txt=1
1
    initialize     (not to 0!)
math for my slides    sparse coding   .
2||x(t)   d h(x(t))||2
2
    x(t) h(t) d
txt=1
txt=1
    x(t) h(t) d
1
1
1
2 +  ||h(x(t))||1
2||x(t)   d h(x(t))||2
2  txt=1   d h(x(t))   > d h(x(t)!
x(t)>d h(x(t))! +
t    txt=1
min
x(t) h(x(t))>!  txt=1
d (=  txt=1
h(x(t)) h(x(t))>! 1
txt=1
txt=1
t
t
math for my slides    sparse coding   .
h(t)
    while     hasn   t converged
d  epartement d   informatique
1
1
1
2 +  ||h(t)||1
2||x(t)   d h(t)||2
    x(t) h(t) d
= min
arg min
arg min
2||x(t)   d h(t)||2
2 +  ||h(t)||1
arg min
arg min
x(t) h(x(t))>!  txt=1
d (=  txt=1
h(x(t)) h(x(t))>! 1
universit  e de sherbrooke
d
txt=1
d
1
1
txt=1
    for each     
(1)
2||x(t)   d h(x(t))||2
1
1
d
h(t)
hugo.larochelle@usherbrooke.ca
    x(t) h(t) d
t
online dictionary learning for sparse coding.
2 +  ||h(t)||1
2||x(t)   d h(t)||2
arg min
arg min
t=1 x(t) h(x(t))> b (=pt
2   d h(x(t))   > d h(x(t))
txt=1
mairal, bach, ponce and sapiro, 2009.
txt=1
t=1 h(x(t)) h(x(t))> d (= b a 1
t
x(t)>x(t)   x(t)>d h(x(t)) +
1
(2)
infer code                 
1
1
-
d
november 1, 2012
2||x(t)   d h(t)||2
2 +  ||h(t)||1
t=1 x(t) h(x(t))> b (=pt
2||x(t)   d h(t)||2
arg min
txt=1
t=1 h(x(t)) h(x(t))> d (= b a 1
x(t)>d h(x(t))! +
t    txt=1
2  txt=1   d h(x(t))   > d h(x(t)!
1
1
(x(t)   d h(x(t))) h(x(t))>
t
d (= d +    
- update dictionary
h(x(t)) = arg min
2||x(t)   d h(t)||2
2 +  ||h(t)||1
(3)
t
b (=   b + (1    ) x(t) h(x(t))>
1
     
b (=   b + (1    ) x(t) h(x(t))>
2 +  ||h(t)||1
2||x(t)   d h(t)||2
h(x(t)) h(x(t))>! 1
x(t) h(x(t))>!  txt=1
2 =  txt=1
   
txt=1
     
1
1
math for my slides    sparse coding   .
a (=   a + (1    ) h(x(t +1)) h(x(t +1))>
2||x(t)   d h(x(t))||2
txt=1
(x(t)   d h(x(t))) h(x(t))>
t
d (= d +    
a (=   a + (1    ) h(x(t +1)) h(x(t +1))>
    while      hasn   t converged
    x(t) h(t) d
txt=1
h(x(t)) h(x(t))>! 1
x(t) h(x(t))>!  txt=1
2 =  txt=1
1
1
    for each column         perform gradient update
2||x(t)   d h(t)||2
d  ,j (= d  ,j/||d  ,j||2
a (=   a + (1    ) h(x(t +1)) h(x(t +1))>
1
2||x(t)   d h(x(t))||2
t
t=1 x(t) h(x(t))> b (=pt
(b  ,j   d a  ,j + d  ,j aj,j)
d  ,j (=
t=1 h(x(t)) h(x(t))> d (= b a 1
d  ,j (=

d
h(t)
h(x(t)) = arg min

1
2||x(t)   d h(t)||2

h(x(t)) = arg min

hugo larochelle

h(x(t)) = arg min

2 +  ||h(t)||1

abstract

arg min

(4)
abstract

arg min

arg min

1
t

arg min

= min
d

= min
d

txt=1

h(t)

h(t)

h(t)

h(t)

   

1
t

arg min

min
d

h(t)

h(t)

(2)

(3)

(4)

h(t)

   

1
t

1
t

1
t

 
 

1
2

d

d

1

1

1

2

1
aj,j
d  ,j
||d  ,j||2
b (=   b + (1    ) x(t) h(x(t))>

h(x(t)) = arg min

h(t)

1
2||x(t)   d h(t)||2

2 +  ||h(t)||1

t=1 x(t) h(x(t))> b (=pt

t=1 h(x(t)) h(x(t))> d (= b a 1

2 +  ||h(t)||1

2 +  ||h(t)||1

