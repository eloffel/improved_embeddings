neural networks
natural language processing - tree id136

id56

2

topics: id56 (id56)
    idea: recursively merge pairs of word/phrase representations

word representations{

    we need 2 things

figure 1. illustration of our id56 ar-
socher, lin, ng and manning, 2011
chitecture which parses images and natural language sen-
    a model that merges pairs of representations
tences. segment features and word indices (orange) are
    a model that determines the tree structure
   rst mapped into semantic feature space (blue) and then
recursively merged by the same neural network until they

id56

3

topics: id56 (id56)
    given two input representations c1 and c2, the recursive 
network computes the merged representation p as follows:

parsing natural scenes and natural language with id56s

s = w scorep
(9)
p = f (w [c1; c2] + b)

socher, lin, 
ng and manning, 2011

of the tree. the    nal score that we need for structure
prediction is simply the sum of all the local decisions:

s(id56(  , xi,   y)) =!d   n (  y)

sd.

to    nish the example, assume the next highest score
was s((4,5),3), so we merge the (4, 5) super segment
with segment 3, so c = {[a1, a2], [a1, p((4,5),3)], [a2, a1],
[a2, p((4,5),3)], [p((4,5),3), a1], [p((4,5),3), a2]}. if we then
merge segments (1, 2), we get c = {[p(1,2), p((4,5),3)],
[p((4,5),3), p(1,2)]}, leaving us with only the last choice
of merging the di   erently labeled super segments. this
results in the bottom tree in fig. 2.

    the network also computes a score s

figure 3. one id56 which is replicated
for each pair of possible input vectors. this network is
di   erent to the original id56 formulation in that it predicts
    it estimates the quality of the merge
a score for being a correct merging decision.
    it will be used to decide which pairs of representations to merge    rst
neural network. the network computes the potential
parent representation for these possible child nodes:

id56

4

topics: id56 (id56)
    the score of the full tree is the sum of all merging scores
recursive network

parse tree

s((1,2),(3,4))
wscore

w

s(3,4)

wscore

w

s(1,2)

wscore

w

       the       

       cat       

       is       

       here       

       cat       
score: s(1,2) + s(3,4) + s((1,2),(3,4))

       the       

       is       

       here       

id56

5

topics: id56 (id56)
    the score of the full tree is the sum of all merging scores
recursive network

parse tree

s(((1,2)3),4)
wscore

w

s((1,2),3)
wscore

w

s(1,2)

wscore

w

       the       

       cat       

       is       

       here       

       the       

       cat       

       is       

       here       

score: s(1,2) + s((1,2),3) + s(((1,2),3),4)

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

a[1,3] 

a[2,4] 

a[1,2] 

a[2,3] 

a[3,4] 

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

a[1,3] 

a[2,4] 

a[1,2] 

s(1,2)

a[2,3] 

a[3,4] 

s(2,3)

s(3,4)

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

a[1,3] 

a[2,4] 

s((1,2),3) + a[1,2] 
s(1,(2,3)) + a[2,3] 

a[1,2] 

s(1,2)

a[2,3] 

a[3,4] 

s(2,3)

s(3,4)

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

a[1,3] 

a[2,4] 

s((1,2),3) + a[1,2] 
s(1,(2,3)) + a[2,3] 

<

a[1,2] 

s(1,2)

a[2,3] 

a[3,4] 

s(2,3)

s(3,4)

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

a[1,3] 

a[2,4] 

s((1,2),3) + a[1,2] 
s(1,(2,3)) + a[2,3] 

<

s((2,3),4) + a[2,3] 
s(2,(3,4)) + a[3,4] 

a[2,3] 

s(2,3)

a[3,4] 

s(3,4)

a[1,2] 

s(1,2)

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

a[1,3] 

a[2,4] 

s((1,2),3) + a[1,2] 
s(1,(2,3)) + a[2,3] 

<

s((2,3),4) + a[2,3] 
s(2,(3,4)) + a[3,4] 

>

a[2,3] 

s(2,3)

a[3,4] 

s(3,4)

a[1,2] 

s(1,2)

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

s(((1,2),3),4) + a[1,3]

s((1,2),(3,4))+a[1,2]+ a[3,4] 

s(1,(2,(3,4))) + a[2,4]

a[2,4] 

a[1,3] 

s((1,2),3) + a[1,2] 
s(1,(2,3)) + a[2,3] 

<

s((2,3),4) + a[2,3] 
s(2,(3,4)) + a[3,4] 

>

a[2,3] 

s(2,3)

a[3,4] 

s(3,4)

a[1,2] 

s(1,2)

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

s(((1,2),3),4) + a[1,3]

s((1,2),(3,4))+a[1,2]+ a[3,4] 

>

s(1,(2,(3,4))) + a[2,4]

<

a[2,4] 

a[1,3] 

s((1,2),3) + a[1,2] 
s(1,(2,3)) + a[2,3] 

<

s((2,3),4) + a[2,3] 
s(2,(3,4)) + a[3,4] 

>

a[2,3] 

s(2,3)

a[3,4] 

s(3,4)

a[1,2] 

s(1,2)

       the       

       cat       

       is       

       here       

id56

6

topics: id56 (id56)
    approximate best tree by locally maximizing each subtree

a[1,4] 

s(((1,2),3),4) + a[1,3]

s((1,2),(3,4))+a[1,2]+ a[3,4] 

>

s(1,(2,(3,4))) + a[2,4]

<

a[2,4] 

a[1,3] 

s((1,2),3) + a[1,2] 
s(1,(2,3)) + a[2,3] 

<

s((2,3),4) + a[2,3] 
s(2,(3,4)) + a[3,4] 

>

a[2,3] 

s(2,3)

a[1,2] 

s(1,2)

       the       

       cat       

       is       

       here       

a[3,4] 

s(3,4)

       the       

       cat       

       is       

       here       

