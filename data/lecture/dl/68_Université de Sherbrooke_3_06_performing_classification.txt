neural networks
conditional random    elds - performing classi   cation

id136

2

topics: computing p(y|x) 
    then we have:
    ap(yk, yk+1) = 11   k<k vyk,yk+1
    p(y|x) = exp   pk
k=1 au(yk) +pk 1
    ap(yk, yk+1) = 11   k<k vyk,yk+1
    p(y|x) = exp   pk
k=1 ap(yk, yk+1)    /z(x)
k=1 au(yk) +pk 1
where
exp   pk
    pz(x) =py01py02       py0k
exp   pk
k=1 au(y0k) +pk 1
    z(x) =py01py02       py0k

k=1 ap(yk, yk+1)    /z(x)
k=1 au(y0k) +pk 1
k=1 ap(y0k, y0k+1)   

hard to compute

k=1 ap(y0k, y0k+1)   

exp(au(y0k) + ap(y0k, y0k+1))    k 1(y0k) y0k+1
exp(au(y0k) + ap(y0k, y0k+1))    k 1(y0k) y0k+1

3

       k(2)    k 1(1)    k 1(2)    k 1(3)

       1(y02) (=py01
       1(y02) (=py01
       k(y0k+1) (=py0k
       k(y0k+1) (=py0k
    z(x) (=py0k
    z(x) (=py0k
exp au(y0k) + ap(y0k 1, y0k) + log  k+1(y0k) 
exp au(y0k) + ap(y0k 1, y0k) + log  k+1(y0k) 
exp au(y0k) + ap(y0k, y0k+1) + log    k 1(y0k) 
exp au(y0k) + ap(y0k, y0k+1) + log    k 1(y0k) 
topics: computing p(yk|x), p(yk, yk+1|x)
       k(2)    k 1(1)    k 1(2)    k 1(3)
       k(2)    k 1(1)    k 1(2)    k 1(3)
    the    /    tables can be used to compute marginals
         
         
p(yk|x) =
p(yk|x) =

    log  k(y0k 1) (= logpy0k
    log  k(y0k 1) (= logpy0k
    log    k(y0k+1) (= logpy0k
    log    k(y0k+1) (= logpy0k
    logpi exp(zi) = maxi(zi) + logpi exp(zi   maxi(zi))
    logpi exp(zi) = maxi(zi) + logpi exp(zi   maxi(zi))

exp(au(y0k))    k 1(y0k)
exp(au(y0k))    k 1(y0k)

id136

exp(au(yk) + log    k 1(yk) + log  k+1(yk))
exp(au(yk) + log    k 1(yk) + log  k+1(yk))
exp(au(y0k) + log    k 1(y0k) + log  k+1(y0k))
exp(au(y0k) + log    k 1(y0k) + log  k+1(y0k))

py0k
py0k

p(yk, yk+1|x) =

exp    au(yk) + ap(yk, yk+1) + au(yk+1)
+ log    k 1(yk) + log  k+2(yk+1)    
exp    au(y0k) + ap(y0k, y0k+1) + au(y0k+1)
+ log    k 1(y0k) + log  k+2(y0k+1)    

py0kpy0k+1

py0k

exp    au(yk) + ap(yk, yk+1) + au(yk+1)

4

   

classification
py0kpy0k+1

p(yk, yk+1|x) =
    yk p(yk|x)

topics: making a prediction (option 1)
    at each position k, pick label      with highest marginal 
id203
    this choice is the one that minimizes the sum of the classi   cation errors over the 

    yk p(yk|x)

whole sequence, assuming the crf is the true distribution

exp    au(yk) + ap(yk, yk+1) + au(yk+1)
+ log    k 1(yk) + log  k+2(yk+1)    
p(yk, yk+1|x) =
exp    au(y0k) + ap(y0k, y0k+1) + au(y0k+1)
+ log    k 1(y0k) + log  k+2(y0k+1)    

py0kpy0k+1

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

1yk6=y   k! p(y|x)

min
y   

= min

. . . min

1yk6=y   k! p(y|x)
      xyk  xk
      xyk
1yk6=y   k xy1

e"xk
1yk6=y   k#
      xyk  xk
y    xy1
y   k xy1
y   k xk xy1
y   k xk xyk
y   k xk xyk
1y16=y   1 p(y1|x)! +        + min

p(yk|x)

1yk6=y   k

1yk6=y   k

y   1  xy1

. . . min

. . . min

. . . min

= min
y   1

= min
y   1

= min
y   1

= min
y   1

= min

= min
y   1

(1   p(y   1|x)) +        + min
y   k

= 1   max
y   1

p(y   1|x) +        + 1   max
y   k

      xyk 1xyk+1xyk
y   k  xyk

(1   p(y   k|x))
p(y   k|x)

p(y|x)

5

p(y|x)

1yk6=y   k p(yk|x)!

= 1   max
y   1

(1   p(y   1|x)) +        + min
y   k

p(y   1|x) +        + 1   max
y   k
topics: making a prediction (option 2)
     find most probable prediction:

    logpy0k
(1   p(y   k|x))
    a(1,0)(xk) = b(1) + w(1,0)xk
classification
    a(1, 1)(xk) = w(1, 1)xk
p(y   k|x)
    a(1,+1)(xk) = w(1,+1)xk
          1(y02) (= maxy01
        1 (y02) (= arg maxy01
          k(y0k+1) (= maxy0k
        k (y0k+1) (= arg maxy0k
    maxy    p(y|x) (= maxy0k
    forward pass: replace                              by                    and    ll the table
    backward pass: starting from the maximal value       at the last position,
    y   k (= arg maxy0k
    y   k (=       k(y   k+1)

follow the backward trace of the max operations to decode the maximizing 
sequence

    a viterbi decoding algorithm can be used for that

    logpy0k
    logpy0k

(  )
exp(  ) maxy0k
exp(  ) maxy0k
(  )

p(y|x)

arg max

y   

4

6

au(y01) + ap(y01, y02) y02

au(y01) + ap(y01, y02) y02
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1

au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
au(y0k) +       k 1(y0k)

au(y0k) +       k 1(y0k)

7

]

1 ,...,x(t)
kt

    x(t) = [x(t)
classification
    logpy0k
    logpy0k
exp(  ) maxy0k
(  )
exp(  ) maxy0k
(  )
    logpy0k
    logpy0k
(  )
exp(  ) maxy0k
    logpy0k
    logpy0k
    kt
(  )
exp(  ) maxy0k
    logpy0k
(  )
exp(  ) maxy0k
    a(1,0)(xk) = b(1) + w(1,0)xk
exp(  ) maxy0k
(  )
    a(1,0)(xk) = b(1) + w(1,0)xk
exp(  ) maxy0k
(  )
topics: making a prediction (option 2) 
    a(1,0)(xk) = b(1) + w(1,0)xk
    a(1,0)(xk) = b(1) + w(1,0)xk
    a(1, 1)(xk) = w(1, 1)xk
    a(1,0)(xk) = b(1) + w(1,0)xk
    a(1,0)(xk) = b(1) + w(1,0)xk
    a(1, 1)(xk) = w(1, 1)xk
    a(1,0)(xk) = b(1) + w(1,0)xk
     algorithm goes as follows:
    a(1, 1)(xk) = w(1, 1)xk
    a(1, 1)(xk) = w(1, 1)xk
    a(1, 1)(xk) = w(1, 1)xk
    a(1, 1)(xk) = w(1, 1)xk
    a(1,+1)(xk) = w(1,+1)xk
    a(1, 1)(xk) = w(1, 1)xk
    a(1,+1)(xk) = w(1,+1)xk
    x(t)
    initialize, for all values of       : 
exp(au(y01) + ap(y01, y02)) y02
    a(1,+1)(xk) = w(1,+1)xk
    a(1,+1)(xk) = w(1,+1)xk
    a(1,+1)(xk) = w(1,+1)xk
    a(1,+1)(xk) = w(1,+1)xk
          1(y02) (= maxy01
au(y01) + ap(y01, y02) y02
    a(1,+1)(xk) = w(1,+1)xk
          1(y02) (= maxy01
au(y01) + ap(y01, y02) y02
 
-
          1(y02) (= maxy01
au(y01) + ap(y01, y02) y02
          1(y02) (= maxy01
k
exp(au(y0k) + ap(y0k, y0k+1))    k 1(y0k) y0k+1
au(y01) + ap(y01, y02) y02
          1(y02) (= maxy01
exp(au(y01) + ap(y01, y02)) y02
au(y01) + ap(y01, y02) y02
          1(y02) (= maxy01
        1 (y02) (= arg maxy01
au(y01) + ap(y01, y02) y02
 
au(y01) + ap(y01, y02) y02
          1(y02) (= maxy01
-
        1 (y02) (= arg maxy01
au(y01) + ap(y01, y02) y02
au(y01) + ap(y01, y02) y02
        1 (y02) (= arg maxy01
        1 (y02) (= arg maxy01
au(y01) + ap(y01, y02) y02
        1 (y02) (= arg maxy01
au(y01) + ap(y01, y02) y02
        1 (y02) (= arg maxy01
    for k = 2 to k-1, for all values of          :
exp(au(y0k) + ap(y0k, y0k+1))    k 1(y0k) y0k+1
exp(au(y0k))    k 1(y0k)
        1 (y02) (= arg maxy01
au(y01) + ap(y01, y02) y02
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
          k(y0k+1) (= maxy0k
          k(y0k+1) (= maxy0k
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
          k(y0k+1) (= maxy0k
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
          k(y0k+1) (= maxy0k
          k(y0k+1) (= maxy0k
    (x,y)
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
          k(y0k+1) (= maxy0k
 
-
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
          k(y0k+1) (= maxy0k
        k (y0k+1) (= arg maxy0k
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
        k (y0k+1) (= arg maxy0k
        k (y0k+1) (= arg maxy0k
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
        k (y0k+1) (= arg maxy0k
 
-
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
        k (y0k+1) (= arg maxy0k
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
        k (y0k+1) (= arg maxy0k
        k (y0k+1) (= arg maxy0k
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1
       k(1)    k 1(1)    k 1(2)    k 1(3)
au(y0k)) + log       k 1(y0k)
     
    maxy    p(y|x) (= maxy0k
au(y0k) +       k 1(y0k)
    maxy    p(y|x) (= maxy0k
au(y0k)) + log       k 1(y0k)
au(y0k)) + log       k 1(y0k)
    maxy    p(y|x) (= maxy0k
    maxy    p(y|x) (= maxy0k
au(y0k)) + log       k 1(y0k)
au(y0k) +       k 1(y0k)
    maxy    p(y|x) (= maxy0k
    maxy    p(y|x) (= maxy0k
au(y0k) +       k 1(y0k)
    maxy    p(y|x) (= maxy0k
    y   k (= maxy0k
au(y0k)) + log       k 1(y0k)
au(y0k) +       k 1(y0k)
    y   k (= maxy0k
    y   k (= maxy0k
au(y0k)) + log       k 1(y0k)
au(y0k)) + log       k 1(y0k)
    y   k (= maxy0k
    {(x(t),y(t))}
    y   k (= maxy0k
au(y0k)) + log       k 1(y0k)
au(y0k) +       k 1(y0k)
    y   k (= arg maxy0k
     
    y   k (= arg maxy0k
au(y0k) +       k 1(y0k)
backward decoding
    y   k (=       k(y   k+1)
    y   k (=       k(y   k+1)
    y   k (=       k(y   k+1)
    y   k (=       k(y   k+1)
    y   k (=       k(y   k+1)
    for k = k-1 to 1:
    y   k (=     k (y   k+1)
    y   k (=       k(y   k+1)

au(y01) + ap(y01, y02) y02
au(y0k) + ap(y0k, y0k+1) +       k 1(y0k) y0k+1

nb. of classes
complexity in o(kc 2)

       k(y0k+1) (=py0k

exp(au(y0k))    k 1(y0k)
       k(1)    k 1(1)    k 1(2)    k 1(3)

au(y01) + ap(y01, y02) y02

