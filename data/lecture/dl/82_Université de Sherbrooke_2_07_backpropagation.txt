neural networks
training neural networks - id26 algorithm

   

   

   

2

arg min

abstract

t xt

l(f (x(t);    ), y(t)) +     (   )

math for my slides    feedforward neural network   .

september 13, 2012
hugo larochelle
hugo larochelle

feedforward neural network

d  epartement d   informatique
hugo larochelle
universit  e de sherbrooke

d  epartement d   informatique
universit  e de sherbrooke
d  epartement d   informatique
universit  e de sherbrooke

machine learning

    9w,t    x(t   ) =pt6=t    wtx(t)
    r(x) ={x2rh|9w x =pj wjx  ,j}
    {x2rh| x /2r(x)}
    { i,ui| xui =  iui et u>i uj = 1i=j}

txt
t xt
    l(f (x(t);    ), y(t))
    l (f (x(t);    ), y (t))
    l(f (x(t);    ), y(t))
       (   )
t pt r   l(f (x(t);    ), y(t))    r      (   )
      =   1
       (   )
       (   )
topics: stochastic id119 (sgd)
t pt r   l(f (x(t);    ), y(t))    r      (   )
   
              +  
t xt
      =   1
t pt r   l (f (x(t);    ), y (t))    r      (   )
arg min
      =   1
    algorithm that performs updates after each example
    {x 2 rd | rxf (x) = 0}
    f (x)
              +  
    v>r2
xf (x)v > 0 8v
    initialize           (                                                                    )
    {x 2 rd | rxf (x) = 0}
            {w(1), b(1), . . . , w(l+1), b(l+1)}
              +  
    l(f(x(t);    )
y (t))
    v>r2
xf (x)v < 0 8v
    for n iterations
    v>r2
xf (x)v > 0 8v
      =  r   l(f (x(t);    ), y(t))    r      (   )
    l(f (x(t);    ), y(t))
       (   )
    v>r2
for each training example
xf (x)v < 0 8v
    (x(t), y(t))
t pt r   l(f(x(t);    )
    r   l(f (x(t);    ), y(t))
      =   1
y (t))    r      (   )
    f (x)
     
=
      =  r   l(f (x(t);    ), y(t))    r      (   )
     
              +      
       (   )
    l(f (x(t);    ), y(t))
    f (x)
    f (x)
    {x 2 rd | rxf(x)
    r      (   )
    l(f (x(t);    ), y(t))
    r   l(f (x(t);    ), y(t))
    the id168
    l(f (x(t);    ), y(t))
    v>r2
8v
xf(x) v >
    f (x)c = p(y = c|x)
    r   l(f (x(t);    ), y(t))
       (   )
    a procedure to compute the parameter gradients
    r   l(f (x(t);    ), y(t))
    v>r2
8v
xf(x) v <
    the regularizer             (and the gradient                 )
    x(t) y(t)
    r      (   )
       (   )
      =  r   l(f(x(t);    )
       (   )
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y =
    initialization method
    f (x)c = p(y = c|x)
    r      (   )
y (t))
   (x(t),
    r      (   )

training epoch 
math for my slides    feedforward neural network   .
iteration over all examples
5
    f (x)
    l(f (x(t);    ), y(t))
    r   l(f (x(t);    ), y(t))
       (   )
    r      (   )

hugo.larochelle@usherbrooke.ca
hugo.larochelle@usherbrooke.ca
+     (   )

y (t))    r      (   )

l(f(x(t);    )

    to apply this algorithm to neural network training, we need

math for my slides    feedforward neural network   .
math for my slides    feedforward neural network   .

d  epartement d   informatique
universit  e de sherbrooke

september 13, 2012
hugo.larochelle@usherbrooke.ca

september 13, 2012
september 13, 2012

hugo.larochelle@usherbrooke.ca

september 13, 2012
abstract

math for my slides    feedforward neural network   .

abstract
abstract

abstract

y (t))

0 }

5

   

-

5
1
,
,
,
=
0
0
,
3

=

   

=

=

@a(k)(x)i
@a(k)(x)i
@a(k)(x)i
@b(k)
@b(k)
@b(k)
i
i
i

  log f (x)y
  log f (x)y
=  ra(k)(x)   log f (x)y  h(k 1)(x)>
  log f (x)y
b(k)
b(k)
b(k)
i
@a(k)(x)i
i
@   log f (x)y
id26
i
@   log f (x)y
@   log f (x)y
@a(k)(x)i
@b(k)
@   log f (x)y
=
=
i
=
@a(k)(x)i
@a(k)(x)i
@   log f (x)y
@a(k)(x)i
@
  log f (x)y
@   log f (x)y
@a(k)(x)i
@   log f (x)y
b(k)
@   log f (x)y
=
topics: id26 algorithm
=
i
=
@a(k)(x)i
@a(k)(x)i
@a(k)(x)i
@   log f (x)y
@a(k)(x)i
    this assumes a forward propagation has been made before
rb(k)   log f (x)y
@a(k)(x)i
@b(k)
= ra(k)(x)   log f (x)y
rb(k)   log f (x)y
@   log f (x)y
rb(k)   log f (x)y
rb(k)   log f (x)y
@a(k)(x)i
= ra(k)(x)   log f (x)y
= ra(k)(x)   log f (x)y
= ra(k)(x)   log f (x)y

    compute output gradient (before activation)
=
    ra(l+1)(x)   log f (x)y (=   (e(y)   f (x))
    for k from l+1 to 1
    rw(k)   log f (x)y (=  ra(k)(x)   log f (x)y  h(k)(x)>
    ra(l+1)(x)   log f (x)y (=   (e(y)   f (x))
    ra(l+1)(x)   log f (x)y (=   (e(y)   f (x))
    ra(l+1)(x)   log f (x)y (=   (e(y)   f (x))
- compute gradients of hidden layer parameter 
    rw(k)   log f (x)y (=  ra(k)(x)   log f (x)y  h(k)(x)>
    rw(k)   log f (x)y (=  ra(k)(x)   log f (x)y  h(k 1)(x)>
    rb(k)   log f (x)y (= ra(k)(x)   log f (x)y
    rw(k)   log f (x)y (=  ra(k)(x)   log f (x)y  h(k)(x)>
    ra(l+1)(x)   log f (x)y (=   (e(y)   f (x))
    rh(k 1)(x)   log f (x)y (= w(k)> ra(k)(x)   log f (x)y 
    rb(k)   log f (x)y (= ra(k)(x)   log f (x)y
    rw(k)   log f (x)y (=  ra(k)(x)   log f (x)y  h(k 1)(x)>
    rb(k)   log f (x)y (= ra(k)(x)   log f (x)y
    rb(k)   log f (x)y (= ra(k)(x)   log f (x)y
    ra(k 1)(x)   log f (x)y (=  rh(k 1)(x)   log f (x)y    ra(k 1)(x)h(k)(x)
    rh(k 1)(x)   log f (x)y (= w(k)> ra(k)(x)   log f (x)y 
- compute gradient of hidden layer below
    rh(k 1)(x)   log f (x)y (= w(k)> ra(k)(x)   log f (x)y 
    rh(k 1)(x)   log f (x)y (= w(k)> ra(k)(x)   log f (x)y 
    rb(k)   log f (x)y (= ra(k)(x)   log f (x)y
    ra(k 1)(x)   log f (x)y (=  rh(k 1)(x)   log f (x)y    ra(k 1)(x)h(k)(x)
    rh(k 1)(x)   log f (x)y (= w(k)> ra(k)(x)   log f (x)y 
    ra(k 1)(x)   log f (x)y (=  rh(k 1)(x)   log f (x)y    [. . . , g0(a(k 1)(x)j), . . . ]
    ra(k 1)(x)   log f (x)y (=  rh(k 1)(x)   log f (x)y    ra(k 1)(x)h(k)(x)
- compute gradient of hidden layer below (before activation)
    ra(k 1)(x)   log f (x)y (=  rh(k 1)(x)   log f (x)y    [. . . , g0(a(k 1)(x)j), . . . ]

= ra(k)(x)   log f (x)y

rb(k)   log f (x)y

3

i

3
3

3

hk h(k)(x)

4
i,j <0
hk h(k)(x)

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics:    ow graph
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    forward propagation can be
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
represented as an acyclic 
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
   ow graph
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    it   s a nice way of implementing
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
forward propagation in a modular
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
way
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    each box could be an object with an fprop method,
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

that computes the value of the box given its
children

    calling the fprop method of each box in the

right order yield forward propagation

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

hk h(k)(x)

respect to each children

5
i,j <0
hk h(k)(x)

    it computes the gradient of the loss with

p6phk+hk 1
p6phk+hk 1
    w(k)
i,j    2
       (   ) =pkpipj   w (k)
    w(k)
i,j u [ b, b] b =
=pk ||w(k)||2
p6phk+hk 1
i,j u [ b, b] b =
    rw(k)   (   ) = sign(w(k))
    r      (   )
    w(k)
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
hk h(k)(x)
       (   ) =pkpipj |w (k)
i,j u [ b, b] b =
    h(3)(x) = o(a(3)(x))
i,j <0
f
i,j |
flow graph
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(1) = b(1) + w(1)x
    f (x)c = p(y = c|x)
    a(3) = b(3) + w(3)h(2)
p6phk+hk 1
    w(k)
    rw(k)   (   ) = 2w(k)
    h(2)(x) = g(a(2)(x))
    a(3) = b(3) + w(3)h(2)
i,j u [ b, b] b =
    a(3) = b(3) + w(3)h(2)
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    h(3) = o(a(3)(x))
    a(2) = b(2) + w(2)h(1)
    x(t) y(t)
       (   ) =pkpipj |w (k)
    w(k)
i,j u [ b, b] b =
    a(2) = b(2) + w(2)h(1)
i,j |
    h(1)(x) = g(a(1)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
topics: automatic differentiation
    a(3)(x) = b(3) + w(3)h(2)
    a(2) = b(2) + w(2)h(1)
    l(f (x), y) =  pc 1(y=c) log f (x)c =   log f (x)y
    h(2) = g(a(2)(x))
    a(1) = b(1) + w(1)x
    a(1) = b(1) + w(1)x
    each object also has a bprop method
    rw(k)   (   ) = sign(w(k))
p6phk+hk 1
    a(3) = b(3) + w(3)h(2)
    b(3) b(2) b(1)
    a(2)(x) = b(2) + w(2)h(1)
    w(k)
    h(1) = g(a(1)(x))
    h(3) = o(a(3)(x))
i,j u [ b, b] b =
    a(1) = b(1) + w(1)x
   
    h(3) = o(a(3)(x))
    sign(w(k))i,j = 1w(k)
i,j >0   1w(k)
    a(2) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    a(3)(x) = b(3) + w(3)h(2)
    h(3) = o(a(3)(x))
    h(2) = g(a(2)(x))
p6phk+hk 1
    a(1) = b(1) + w(1)x
    w(3) w(2) w(1) x
    h(3)(x) = o(a(3)(x))
    w(k)
    h(1) = g(a(1)(x))
i,j u [ b, b] b =
    a(2)(x) = b(2) + w(2)h(1)
    h(1) = g(a(1)(x))
    h(2) = g(a(2)(x))
    h(3) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    b(3) b(2) b(1)
    h(2) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x
    h(1) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    a(1)(x) = b(1) + w(1)x
    h(2)(x) = g(a(2)(x))
    w(3) w(2) w(1) x f (x)
    b(3) b(2) b(1)
    h(3)(x) = o(a(3)(x))
    h(1)(x) = g(a(1)(x))
    w(3) w(2) w(1) x
    w(3) w(2) w(1) x
    h(2)(x) = g(a(2)(x))
    b(3) b(2) b(1)

    by calling bprop in the reverse order,
we get id26
    only need to reach the parameters

    fprop depends on the fprop of a box   s children,

while bprop depends the bprop of a box   s parents

@
hk h(k)(x)

hk h(k)(x)

i,j <0

i,j <0

f (x)c   log f (x)y =  1(y=c)

6

    a(3)(x) = b(3) + w(3)h(2)
    a(3)(x) = b(3) + w(3)h(2)
    a(2)(x) = b(2) + w(2)h(1)
    a(3)(x) = b(3) + w(3)h(2)
    a(1)(x) = b(1) + w(1)x
    h(1)(x) = g(a(1)(x))
    a(3)(x) = b(3) + w(3)h(2)
gradient checking
    a(2)(x) = b(2) + w(2)h(1)
    a(2)(x) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    a(2)(x) = b(2) + w(2)h(1)
    h(3)(x) = o(a(3)(x))
    a(2)(x) = b(2) + w(2)h(1)
    a(1)(x) = b(1) + w(1)x
    a(1)(x) = b(1) + w(1)x
    a(1)(x) = b(1) + w(1)x
    h(3)(x) = o(a(3)(x))
    b(3) b(2) b(1)
    h(2)(x) = g(a(2)(x))
topics:    nite difference approximation
    h(3)(x) = o(a(3)(x))
    a(1)(x) = b(1) + w(1)x
    h(3)(x) = o(a(3)(x))
    h(3)(x) = o(a(3)(x))
    h(2)(x) = g(a(2)(x))
    to debug your implementation of fprop/bprop, you can 
    h(1)(x) = g(a(1)(x))
    h(2)(x) = g(a(2)(x))
    h(3)(x) = o(a(3)(x))
    w(3) w(2) w(1) x f (x)
    h(2)(x) = g(a(2)(x))
compare with a    nite-difference approximation of the gradient
    h(2)(x) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    h(1)(x) = g(a(1)(x))
    b(3) b(2) b(1)
    h(2)(x) = g(a(2)(x))
    h(1)(x) = g(a(1)(x))
    h(1)(x) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    w(3) w(2) w(1) x f (x)
@x     f (x+   ) f (x    )
    @f (x)
    h(1)(x) = g(a(1)(x))
    b(3) b(2) b(1)
    b(3) b(2) b(1)
    w(3) w(2) w(1) x f (x)
    w(3) w(2) w(1) x f (x)
2   
@x     f (x+   ) f (x    )
    @f (x)
    b(3) b(2) b(1)
    w(3) w(2) w(1) x f (x)
    w(3) w(2) w(1) x f (x)
@x     f (x+   ) f (x    )
    @f (x)
@x     f (x+   ) f (x    )
    @f (x)
              would be the loss
    f (x) x    
    w(3) w(2) w(1) x f (x)
@x     f (x+   ) f (x    )
    @f (x)
@x     f (x+   ) f (x    )
    @f (x)
         would be a parameter
    f (x) x    
    f (x) x    
@x     f (x+   ) f (x    )
    @f (x)
    f (x) x    
                   would be the loss if you add    to the parameter
    f (x) x    
    f (x +    ) f (x      )
                   would be the loss if you subtract    to the parameter
    f (x) x    
    f (x +    ) f (x      )

2   

2   

2   

2   

2   

2   

