neural networks
id161 - discrete convolution

id161
jarret et al. 2009

math for my slides    id161   .

topics: parameter sharing
    each feature map forms a 2d grid of features

november 8, 2012

2

abstract

    h x    

    can be computed with a discrete convolution (   ) of a kernel matrix kij which is

the hidden weights matrix wij with its rows and columns    ipped

filter bank layer - fid19: the input of a    lter bank
layer is a 3d array with n1 2d feature maps of size n2    n3.
each component is denoted xijk, and each feature map is
denoted xi. the output is also a 3d array, y composed of
m1 feature maps of size m2    m3. a    lter in the    lter bank
kij has size l1    l2 and connects input feature map xi to
output feature map yj. the module computes:

    xi is the ith channel of input
    kij is the convolution kernel
    gj is a learned scaling factor
    yj is the hidden layer 

   (could have added a bias)

r
e 

at
u

p
s

fe

a

m

figure 1. a example of feature extraction stage of the type fid19   
rabs     n     pa. an input image (or a feature map) is passed
through a non-linear    lterbank, followed by recti   cation, local
contrast id172 and spatial pooling/sub-sampling.

yj = gj tanh(!
i

kij     xi)

figure 1. a example of feature extraction stage of the type fid19   

layer with 4x4 down-sampling is denoted: p 4  4
max-pooling and subsampling layer - pm : building lo-

(1)

id161

3

topics: discrete convolution
    the convolution of an image x with a kernel k is computed 
as follows:

                   (x * k)ij =     xi+p,j+q kr-p,r-q 
    example:

pq

k~ = k  with rows and columns    ipped

=

*

k

x

0804020400004000.250.5110.50.250id161

4

topics: discrete convolution
    the convolution of an image x with a kernel k is computed 
as follows:

                   (x * k)ij =     xi+p,j+q kr-p,r-q 
    example:

1	
   x	
   0	
   +	
   0.5	
   x	
   80	
   +	
   0.25	
   x	
   20	
   +	
   0	
   x	
   40

pq

=

*

k

x

00.250.51450804020400004010.50.250id161

5

topics: discrete convolution
    the convolution of an image x with a kernel k is computed 
as follows:

                   (x * k)ij =     xi+p,j+q kr-p,r-q 
    example:

pq

1	
   x	
   80	
   +	
   0.5	
   x	
   40	
   +	
   0.25	
   x	
   40	
   +	
   0	
   x	
   0

=

*

k

x

00.250.51451100804020400004010.50.250id161

6

topics: discrete convolution
    the convolution of an image x with a kernel k is computed 
as follows:

                   (x * k)ij =     xi+p,j+q kr-p,r-q 
    example:

pq

1	
   x	
   20	
   +	
   0.5	
   x	
   40	
   +	
   0.25	
   x	
   0	
   +	
   0	
   x	
   0

=

*

k

x

00.250.5145110400804020400004010.50.250id161

7

topics: discrete convolution
    the convolution of an image x with a kernel k is computed 
as follows:

                   (x * k)ij =     xi+p,j+q kr-p,r-q 
    example:

pq

1	
   x	
   40	
   +	
   0.5	
   x	
   0	
   +	
   0.25	
   x	
   0	
   +	
   0	
   x	
   40

=

*

k

x

00.250.514511040400804020400004010.50.250id161

8

topics: discrete convolution
    pre-activations from channel xi  into feature map yj can be 
computed by:
    getting the convolution kernel where kij =wij from the connection matrix wij
    applying the convolution xi * kij 

~

    this is equivalent to computing the discrete correlation 
of xi with wij

id161

9

example 
topics: discrete convolution
~
    simple illustration: xi * kij where wij =wij
       premi  re%  tape%:%calcul%de%la%convolu7on%%

example 
       calcul%d   une%couche%  %simple%cell%  %
       premi  re%  tape%:%calcul%de%la%convolu7on%%

       calcul%d   une%couche%  %simple%cell%  %

0%

0% 0.5%
0%

0.5% 0%
0%
0%

0%

0%

0%

0%

255%

0% 0.5%
0%
0%
255%
0%
0.5% 0%
0%
0%
255%
0%
0%
0%
255%
0%

0%
255%
0%

255%
0%
255%
0%
255%
0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

255%

0%
255%
0%
xi
%%%%%
x
% 

0%
0%
%%%%%
x
% 
couche)d   entr  e)

couche)d   entr  e)

0.5%
connexions%
connexions%
vers%les%neurones%
vers%les%neurones%
cach  s%
cach  s%

0%

0%

0.5%

0.5%
w

0%

0.5%
w
128%

0%

128%

0%

0%

128%

128%

255%

0%

0%

0%

0%

128%

128%

255%

255%

0%

255%

0%

0%

0%

0%

0%

0%

128%
0%
128%
0%

0%

0%

0%

0%

xi * kij
 x w
%%%%%
 x w
%%%%%
% 
% 
couche)  )simple)cell)  )

couche)  )simple)cell)  )

id161

10

example 

topics: discrete convolution
    with a non-linearity, we get a detector of a feature at any 
       calcul%d   une%couche%  %simple%cell%  %
position in the image

       premi  re%  tape%:%calcul%de%la%convolu7on%%
       deuxi  me%  tape%:%calcul%de%la%nonnlin  arit  %(%ex.:%logis6c(%(xn200)/50%)%)%

0%

0%

0%

0%

0%

0%

0%

255%

255%

255%

255%

0%

255%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%
xi
%%%%%
x
% 

couche)d   entr  e)

0.02% 0.19% 0.19% 0.02%
0%

128%

128%

0%

0.02% 0.19% 0.19% 0.02%
0%

128%

128%

0%

0.02% 0.75% 0.02% 0.02%
0%

255%

0%

0%

0.75% 0.02% 0.02% 0.02%
255%

0%

0%

0%

sigm(0.02 xi * kij -4)
logis6c(%(%%%%%%%%%%%%%n%200%)%/%50%)%

 x w
%%%%%
% 

couche)  )simple)cell)  )

id161
example 

topics: discrete convolution
connexions%
    can use       zero padding       to allow going over the borders ( * )
       convolu7on%avec%zero,padding%%
vers%les%neurones%
cach  s%

0.5%

0.5%

0%

0%

11

0% 0.5%
0%

0%

0%

0.5%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

255%

0%

255%

255%

255%

0%

0%

255%

0%

0%

0%

%%%%%
% 

0%

xi

couche)d   entr  e)

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

255%

128%

0%

w
0%
128%

128%

128%

128%

128%

255%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

0%

xi * kij
%%%%%
% 

couche)  )simple)cell)  )

0%

0%

0%

0%

0%

0%

