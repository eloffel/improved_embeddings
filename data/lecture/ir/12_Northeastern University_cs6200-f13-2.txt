cs6200	
   

informa.on	
   retrieval	
   

david	
   smith	
   

college	
   of	
   computer	
   and	
   informa.on	
   science	
   

northeastern	
   university	
   

ir	
   and	
   search	
   engines	
   

informa.on	
   retrieval	
   
	
   
relevance	
   
	
   	
   	
   	
   -     e   ec   ve	
   ranking	
   	
   
evalua.on	
   
	
   	
   	
   	
   -     tes   ng	
   and	
   measuring	
   
informa.on	
   needs	
   
	
   	
   	
   -     user	
   interac   on	
   
	
   

search	
   engines	
   

	
   
performance	
   
	
   	
   	
   	
   -     e   cient	
   search	
   and	
   indexing	
   	
   
incorpora.ng	
   new	
   data	
   
	
   	
   	
   	
   -     coverage	
   and	
   freshness	
   
scalability	
   
	
   	
   	
   -     growing	
   with	
   data	
   and	
   users	
   
adaptability	
   
	
   	
   	
   -     tuning	
   for	
   applica   ons	
   
speci   c	
   problems	
   
	
   	
   	
   -     e.g.	
   spam	
   
	
   

search	
   engine	
   architecture	
   
       a	
   sofware	
   architecture	
   consists	
   of	
   sofware	
   

components,	
   the	
   interfaces	
   provided	
   by	
   those	
   
components,	
   and	
   the	
   rela.onships	
   between	
   
them	
   
       describes	
   a	
   system	
   at	
   a	
   par.cular	
   level	
   of	
   abstrac.on	
   
       architecture	
   of	
   a	
   search	
   engine	
   determined	
   by	
   2	
   

requirements	
   
       e   ec.veness	
   (quality	
   of	
   results)	
   and	
   e   ciency	
   

(response	
   .me	
   and	
   throughput)	
   

query	
   process	
   

indexing	
   process	
   

details:	
   text	
   acquisi.on	
   

       crawler	
   

      iden.   es	
   and	
   acquires	
   documents	
   for	
   search	
   
engine	
   
      many	
   types	
      	
   web,	
   enterprise,	
   desktop	
   
      web	
   crawlers	
   follow	
   links	
   to	
      nd	
   documents	
   
       must	
   e   ciently	
      nd	
   huge	
   numbers	
   of	
   web	
   pages	
   
(coverage)	
   and	
   keep	
   them	
   up-     to-     date	
   (freshness)	
   
       single	
   site	
   crawlers	
   for	
   site	
   search	
   
       topical	
   or	
   focused	
   crawlers	
   for	
   ver.cal	
   search	
   

      document	
   crawlers	
   for	
   enterprise	
   and	
   desktop	
   
search	
   
       follow	
   links	
   and	
   scan	
   directories	
   

text	
   acquisi.on	
   

       feeds	
   	
   

       real-     .me	
   streams	
   of	
   documents	
   
       rss	
   is	
   common	
   standard	
   

       e.g.,	
   web	
   feeds	
   for	
   news,	
   blogs,	
   video,	
   radio,	
   tv	
   

       rss	
      reader   	
   can	
   provide	
   new	
   xml	
   documents	
   to	
   search	
   
engine	
   
       conversion	
   

       convert	
   variety	
   of	
   documents	
   into	
   a	
   consistent	
   text	
   

plus	
   metadata	
   format	
   
       e.g.	
   html,	
   xml,	
   word,	
   pdf,	
   etc.	
      	
   xml	
   

       convert	
   text	
   encoding	
   for	
   di   erent	
   languages	
   

       using	
   a	
   unicode	
   standard	
   like	
   utf-     8	
   

text	
   acquisi.on	
   

       document	
   data	
   store	
   

      stores	
   text,	
   metadata,	
   and	
   other	
   related	
   content	
   
for	
   documents	
   	
   
       metadata	
   is	
   informa.on	
   about	
   document	
   such	
   as	
   type	
   
and	
   crea.on	
   date	
   
       other	
   content	
   includes	
   links,	
   anchor	
   text	
   

      provides	
   fast	
   access	
   to	
   document	
   contents	
   for	
   
search	
   engine	
   components	
   
       e.g.	
   result	
   list	
   genera.on	
   
      could	
   use	
   rela.onal	
   database	
   system	
   	
   

       more	
   typically,	
   a	
   simpler,	
   more	
   e   cient	
   storage	
   system	
   
is	
   used	
   due	
   to	
   huge	
   numbers	
   of	
   documents	
   

indexing	
   process	
   

text	
   transforma.on	
   

       parser	
   

       processing	
   the	
   sequence	
   of	
   text	
   tokens	
   in	
   the	
   

document	
   to	
   recognize	
   structural	
   elements	
   
       e.g.,	
   .tles,	
   links,	
   headings,	
   etc.	
   

       tokenizer	
   recognizes	
      words   	
   in	
   the	
   text	
   

       must	
   consider	
   issues	
   like	
   capitaliza.on,	
   hyphens,	
   
apostrophes,	
   non-     alpha	
   characters,	
   separators	
   

       markup	
   languages	
   such	
   as	
   html,	
   xml	
   ofen	
   used	
   to	
   

specify	
   structure	
   
       tags	
   used	
   to	
   specify	
   document	
   elements	
   
       document	
   parser	
   uses	
   syntax	
   of	
   markup	
   language	
   (or	
   other	
   
formaeng)	
   to	
   iden.fy	
   structure	
   

       e.g.,	
   <h2>	
   overview	
   </h2>	
   

text	
   transforma.on	
   

       stopping	
   

       remove	
   common	
   words	
   
       e.g.,	
      and   ,	
      or   ,	
      the   ,	
      in   	
   
       some	
   impact	
   on	
   e   ciency	
   and	
   e   ec.veness	
   
       can	
   be	
   a	
   problem	
   for	
   some	
   queries	
   

       id30	
   

       e.g.,	
      computer   ,	
      computers   ,	
      compu.ng   ,	
      compute   	
   

       group	
   words	
   derived	
   from	
   a	
   common	
   stem	
   
       usually	
   e   ec.ve,	
   but	
   not	
   for	
   all	
   queries	
   
       bene   ts	
   vary	
   for	
   di   erent	
   languages	
   

text	
   transforma.on	
   

       link	
   analysis	
   

      makes	
   use	
   of	
   links	
   and	
   anchor	
   text	
   in	
   web	
   pages	
   
      link	
   analysis	
   iden.   es	
   popularity	
   and	
   community	
   
informa.on	
   
       e.g.,	
   id95	
   

      anchor	
   text	
   can	
   signi   cantly	
   enhance	
   the	
   
representa.on	
   of	
   pages	
   pointed	
   to	
   by	
   links	
   
      signi   cant	
   impact	
   on	
   web	
   search	
   
       less	
   importance	
   in	
   other	
   applica.ons	
   

text	
   transforma.on	
   

       informa.on	
   extrac.on	
   

some	
   applica.ons	
   

       iden.fy	
   classes	
   of	
   index	
   terms	
   that	
   are	
   important	
   for	
   
       named	
   en   ty	
   recognizers	
   iden.fy	
   classes	
   such	
   as	
   
       other	
   parsers	
   for	
   business	
   addresses,	
   event	
   

people,	
   loca   ons,	
   companies,	
   dates,	
   etc.	
   

informa.on,	
   job	
   pos.ngs,	
   etc.	
   

       classi   er	
   

       iden.   es	
   class-     related	
   metadata	
   for	
   documents	
   

       i.e.,	
   assigns	
   labels	
   to	
   documents	
   
       e.g.,	
   topics,	
   reading	
   levels,	
   sen.ment,	
   genre	
   

       use	
   depends	
   on	
   applica.on	
   

	
   

indexing	
   process	
   

index	
   crea.on	
   

       document	
   sta.s.cs	
   

      gathers	
   counts	
   and	
   posi.ons	
   of	
   words	
   and	
   other	
   
features	
   
      used	
   in	
   ranking	
   algorithm	
   

       weigh.ng	
   

      computes	
   weights	
   for	
   index	
   terms	
   
      used	
   in	
   ranking	
   algorithm	
   
      e.g.,	
   h.idf	
   weight	
   

       combina.on	
   of	
   term	
   frequency	
   in	
   document	
   and	
   
inverse	
   document	
   frequency	
   in	
   the	
   collec.on	
   

index	
   crea.on	
   

       inversion	
   

      core	
   of	
   indexing	
   process	
   
      converts	
   document-     term	
   informa.on	
   to	
   term-     
document	
   for	
   indexing	
   
       di   cult	
   for	
   very	
   large	
   numbers	
   of	
   documents	
   

      format	
   of	
   inverted	
      le	
   is	
   designed	
   for	
   fast	
   query	
   
processing	
   
       must	
   also	
   handle	
   updates	
   
       compression	
   used	
   for	
   e   ciency	
   

	
   

index	
   crea.on	
   

       index	
   distribu.on	
   

      distributes	
   indexes	
   across	
   mul.ple	
   computers	
   
and/or	
   mul.ple	
   sites	
   
      essen.al	
   for	
   fast	
   query	
   processing	
   with	
   large	
   
numbers	
   of	
   documents	
   
      many	
   varia.ons	
   

       document	
   distribu.on,	
   term	
   distribu.on,	
   replica.on	
   

      p2p	
   and	
   distributed	
   ir	
   involve	
   search	
   across	
   
mul.ple	
   sites	
   

query	
   process	
   

user	
   interac.on	
   

       query	
   input	
   

      provides	
   interface	
   and	
   parser	
   for	
   query	
   language	
   
      most	
   web	
   queries	
   are	
   very	
   simple,	
   other	
   
applica.ons	
   may	
   use	
   forms	
   
      query	
   language	
   used	
   to	
   describe	
   more	
   complex	
   
queries	
   and	
   results	
   of	
   query	
   transforma.on	
   
       e.g.,	
   boolean	
   queries,	
   indri	
   and	
   galago	
   query	
   languages	
   
       	
   similar	
   to	
   sql	
   language	
   used	
   in	
   database	
   applica.ons	
   
       ir	
   query	
   languages	
   also	
   allow	
   content	
   and	
   structure	
   
speci   ca.ons,	
   but	
   focus	
   on	
   content	
   

user	
   interac.on	
   

       query	
   transforma.on	
   

      improves	
   ini.al	
   query,	
   both	
   before	
   and	
   afer	
   
ini.al	
   search	
   
      includes	
   text	
   transforma.on	
   techniques	
   used	
   for	
   
documents	
   
      spell	
   checking	
   and	
   query	
   sugges   on	
   provide	
   
alterna.ves	
   to	
   original	
   query	
   
      query	
   expansion	
   and	
   relevance	
   feedback	
   modify	
   
the	
   original	
   query	
   with	
   addi.onal	
   terms	
   

user	
   interac.on	
   

       results	
   output	
   

      constructs	
   the	
   display	
   of	
   ranked	
   documents	
   for	
   a	
   
query	
   
      generates	
   snippets	
   to	
   show	
   how	
   queries	
   match	
   
documents	
   
      highlights	
   important	
   words	
   and	
   passages	
   
      retrieves	
   appropriate	
   adver   sing	
   in	
   many	
   
applica.ons	
   
      may	
   provide	
   id91	
   and	
   other	
   visualiza.on	
   
tools	
   

query	
   process	
   

ranking	
   

       scoring	
   

      calculates	
   scores	
   for	
   documents	
   using	
   a	
   ranking	
   
algorithm	
   
      core	
   component	
   of	
   search	
   engine	
   
      basic	
   form	
   of	
   score	
   is	
      	
   qi	
   di	
   	
   

       qi	
   and	
   di	
   are	
   query	
   and	
   document	
   term	
   weights	
   for	
   
term	
   i	
   

      many	
   varia.ons	
   of	
   ranking	
   algorithms	
   and	
   
retrieval	
   models	
   

ranking	
   
       performance	
   op.miza.on	
   

      designing	
   ranking	
   algorithms	
   for	
   e   cient	
   
processing	
   
       term-     at-     a	
      me	
   vs.	
   document-     at-     a-        me	
   processing	
   
       safe	
   vs.	
   unsafe	
   op.miza.ons	
   

       distribu.on	
   

      processing	
   queries	
   in	
   a	
   distributed	
   environment	
   
      query	
   broker	
   distributes	
   queries	
   and	
   assembles	
   
results	
   
      caching	
   is	
   a	
   form	
   of	
   distributed	
   searching	
   

query	
   process	
   

evalua.on	
   

       logging	
   

      logging	
   user	
   queries	
   and	
   interac.on	
   is	
   crucial	
   for	
   
improving	
   search	
   e   ec.veness	
   and	
   e   ciency	
   
      query	
   logs	
   and	
   clickthrough	
   data	
   used	
   for	
   query	
   
sugges.on,	
   spell	
   checking,	
   query	
   caching,	
   ranking,	
   
adver.sing	
   search,	
   and	
   other	
   components	
   

       ranking	
   analysis	
   

      measuring	
   and	
   tuning	
   ranking	
   e   ec.veness	
   

       performance	
   analysis	
   

      measuring	
   and	
   tuning	
   system	
   e   ciency	
   

how	
   does	
   it	
   really	
   work?	
   
       this	
   course	
   explains	
   these	
   components	
   of	
   a	
   
       ofen	
   many	
   possible	
   approaches	
   and	
   techniques	
   

search	
   engine	
   in	
   more	
   detail	
   

for	
   a	
   given	
   component	
   
       focus	
   is	
   on	
   the	
   most	
   important	
   alterna.ves	
   
       i.e.,	
   explain	
   a	
   small	
   number	
   of	
   approaches	
   in	
   detail	
   
          importance   	
   based	
   on	
   research	
   results	
   and	
   use	
   in	
   
       follow	
   up	
   references	
   in	
   text	
   for	
   alterna.ves	
   

rather	
   than	
   many	
   approaches	
   

actual	
   search	
   engines	
   

topics	
   

       overview	
   
       architecture	
   of	
   a	
   search	
   engine	
   
       data	
   acquisi*on	
   
       text	
   representa.on	
   
      
informa.on	
   extrac.on	
   
      
indexing	
   
       query	
   processing	
   
       ranking	
   
       evalua.on	
   
       classi   ca.on	
   and	
   id91	
   
       social	
   search	
   
       more   	
   

topics	
   

       for	
   background	
   read:	
   

      search	
   engines	
   chapter	
   3,	
   or	
   
      intro	
   to	
   ir,	
   chapters	
   19	
   and	
   20	
   

exercise	
   

       write	
   down	
   2	
   queries	
   for	
   a	
   web	
   search	
   
engine,	
   each	
   between	
   1	
   and	
   5	
   words.	
   

       before	
   you	
   run	
   the	
   queries,	
   write	
   down	
   what	
   

you	
   expect	
   to	
      nd.	
   

       run	
   these	
   queries	
   on	
   2	
   search	
   engines	
   and	
   

compare	
   the	
   top	
   10	
   results.	
   

       how	
   are	
   the	
   search	
   engines	
   di   erent?	
   
       what	
   criteria	
   did	
   you	
   use?	
   

