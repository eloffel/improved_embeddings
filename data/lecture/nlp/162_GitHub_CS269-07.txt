lecture 7:

language structure: 

grammar

kai-wei chang
cs @ ucla

kw@kwchang.net

couse webpage: https://uclanlp.github.io/cs269-17/

ml in nlp

1

basic sentence structure 

cs6501: nlp

2

a markov model

v i eat shshi; i eat meat; you eat banana   

v great, it covers many sentences

cs6501: nlp

3

words take different arguments

v [good] i eat sushi
v [bad] i run sushi
v [bad] i give sushi

v intransitive verbs (sleep): no object
v transitive verbs (eat): take one direct object
v ditransitive verbs (give): take an additional 

indirect object.

cs6501: nlp

4

a better model

cs6501: nlp

5

language is recursive

adjectives	can	modify	nouns.	
we	can	have	unlimited	modifiers	(in	theory)

cs6501: nlp

6

we know how to model the simple one

cs6501: nlp

7

recursion can be more complex

we	can	have	another	noun		
phrase	in	preposition

cs6501: nlp

8

syntactic parsing

v idea: model language as a recursive 

generating process
v often use a tree structure
v decompose a sentence 

cs6501: nlp

9

what is grammar?

v a compact way to define and describe the 

structure of sentences

v why we need grammar?
v number of c++ programs?

976	pages.

c++ standard (2014)

iso/iec 14882:2014

1358 pages

cs6501: nlp

10

can we define a program that 
generates all english sentences?

cs6501: nlp

from	julia	hockenmaier,	intro	to	nlp

11

what is sentence structure

v sentence structure is hierarchical
v a sentence consists of phrases (or 

constituents) 

cs6501: nlp

12

can have complex constituents

cs6501: nlp

13

can have complex constituents

v syntactically, constituents behave like 

simple ones

cs6501: nlp

14

constituency

v groups of words that behave as a single 

unit or phrase
v e.g., noun phrases: the man, a girl with glasses
v prepositional phrases: with classes, on a table
v verb phrase: eat sushi, sleep, sleep soundly

v phrases has a head:

v other parts called dependents
v e.g, the man, a girl with glasses

cs6501: nlp

15

v substitution

properties of constituents

v he talks [in class]     he talks [there]
v he talks [in class]     [in class], he talks.

v it can move around in a sentence

v can be used as an answer:

v where does he talk?     [in class]

cs6501: nlp

16

types of dependencies

v phrases has a head:

v other parts called dependents
v e.g, the man, a girl with glasses

v dependents can be arguments or adjuncts
v arguments are obligatory

v e.g., [john] likes [mary]
v adjuncts are optional
v e.g., john runs [fast] 
v adverbs, pps, adjectives    

all	arguments	have	to	be	
present	and	cannot	be	
occupied	multiple	times

can	be	an	arbitrary	number	
of	adjuncts

cs6501: nlp

17

how to represent the structure

cs6501: nlp

18

dependency trees

v dependency grammar describe the 

structure of sentences as a graph (tree)
v nodes represent words
v edges represent dependencies

cs6501: nlp

19

phrases structure trees

v can be modeled by context-free 

grammars

cs6501: nlp

20

context-free grammars

cs6501: nlp

21

parse tree defined by id18

cs6501: nlp

22

generate sentences by id18

cs6501: nlp

23

example: noun phrases

cs6501: nlp

24

example: verb phrase

cs6501: nlp

25

sentences

cs6501: nlp

26

