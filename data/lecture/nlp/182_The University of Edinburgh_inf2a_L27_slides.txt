the complexity of human language

informatics 2a: lecture 27

john longley

17 november 2017

1 / 15

1 are natural languages regular?

2 are natural languages context-free?

3 a glimpse at context-sensitive languages

reading: j&m. chapter 16.3   16.4.

2 / 15

recap: the id154

where exactly do human languages    t within this

complexity hierarchy?

3 / 15

context   sensitivecontext   freeregularrecursively enumerablein   nity and languages

how    complex    are human languages?

the potential in   niteness of language has been recognized for
centuries (by galileo, descartes, von humboldt...)

there is no longest sentence!

mary thinks that john thinks that george thinks that mary thinks
that this course is boring!
i woke up and had a co   ee and got dressed and checked facebook
and walked in the park and ate lunch . . .

4 / 15

is natural language regular?

of course, many in   nite languages are regular, e.g. {an|n     0} is
regular. but what about natural languages?

e.g. is english a regular language?

challenge: how can we even answer the question, given that we
don   t have a complete mathematical    de   nition    of english? (and
anyway, english is    fuzzy at the edges   .)

fortunately, we don   t need one. just need to agree that certain
sentences are de   nitely in, and certain others are de   nitely out.
we can then show that no regular language includes all the former,
but excludes all the latter.

tools:

pumping lemma
intersection property: if l and l(cid:48) are regular then so is l     l(cid:48).
(hence if l is regular but l     english isn   t regular, then
english can   t be regular.)

5 / 15

is english regular?

centre-embedding

[the cat1 likes tuna    sh1].
[the cat1 [the dog2 chased2] likes tuna    sh1].
[the cat1 [the dog2 [the rat3 bit3] chased2] likes tuna    sh1].
consider l = {(the n)n tvm likes tuna    sh | n, m     0}
where n = { cat, dog, rat, elephant, kangaroo . . .}

tv = { chased, bit, admired, ate, befriended . . .}

clearly l is regular. however, l     english is the language

{(the n)n tvn   1 likes tuna    sh | n     1}

can use pumping lemma to show l is not regular.
assumption 1.    (the n)n tvm likes tuna    sh    is ungrammatical
for m (cid:54)= n     1.
assumption 2.    (the n)n tvn   1 likes tuna    sh    is grammatical
for all n     1. (is this reasonable? you decide!)

6 / 15

are natural languages context-free?

are context-free grammars su   cient for modelling nl grammar?
or are there aspects of nls that they can   t capture?

how would we know if there were such aspects? again, there are
tools for showing a language isn   t context-free:

context-free pumping lemma (lecture 29). using this, we can
show (for example) that

{anbmc nd n | n, m     0}

is not context-free.
intersection property: if l is regular and l(cid:48) is context-free,
then l     l(cid:48) is context-free.
(idea: can    combine    an npda for l(cid:48) with an nfa for l to get
an npda for l     l(cid:48).)

note in passing that the intersection of two context-free languages
needn   t be context-free. (above trick doesn   t work: only allowed
one stack!)

7 / 15

non-context-freeness in natural languages

in swiss german, some verbs (e.g. let, paint) take an object in
accusative form, while others (e.g. help) take an object in dative
form. the nouns are case-marked even in subordinate clauses,
which in swiss-german, can exhibit cross-serial dependencies.

cross-serial dependencies

. . . das mer
. . . that we

d   chind
the children
np-acc

em hans
hans
np-dat

es huus
the house
np-acc

l  ond
let
v-acc

h  alfe
help
v-dat

aastriiche
paint
v-acc

. . . that we let the children help hans paint the house

8 / 15

back to question: is natural language context free?

claim 1. swiss german subordinate clauses can have a structure
in which all the vs follow all the nps.

claim 2. among such sentences, those with all dative nps
preceding all accusative nps, and all dative-subcategorizing vs
preceding all accusative-subcategorizing vs are acceptable.

claim 3. the number of vs requiring dative objects must equal
the number of dative nps and similarly for accusatives.

claim 4. an arbitrary number of vs can occur in a subordinate
clause. (cf. similar claim in our proof of english context-freeness)

9 / 15

back to question: is natural language context free?

claim. swiss-german is not context-free.

sketch of proof. represent dative nps, accusative nps,
dative-subcategorizing vs, and accusative-subcategorizing vs by
symbols a, b, c , and d, respectively.
then among all constructions of the form a   b   c   d   , the
grammatically acceptable ones are exactly those of the form
anb mc nd m.
so intersecting swiss german with a suitable regular language
yields the set of strings anb mc nd m.

but this language is known not to be context-free. since
context-free languages are closed under intersection with regular
languages, swiss-german can   t be context-free either!

10 / 15

review

id154: classi   es languages on scale of complexity:

regular languages: those whose phrases can be    recognized   
by a    nite state machine.

context-free languages: those describable via    context-free
rules    x       , where x     n and        (n       )   .
many aspects of pls and nls can be described at this level;

context-sensitive languages: those describable via
   context-sensitive rules      x              .
more than enough for all known features of fls and nls.
(e.g. typing/scoping rules in pls; swiss-german crossing
dependencies.)

recursively enumerable languages: all languages that can in
principle be de   ned via mechanical rules.

11 / 15

strong and weak adequacy

questions about the formal complexity of language are about the
computational power of syntax, as represented by a grammar
that   s adequate for it.

a strongly adequate grammar

generates all and only the strings of the language;

assigns them the    right    structures     e.g. ones that allow us
to compute a correct representation of meaning (as in
previous lecture).

a weakly adequate grammar
generates all and only the strings of a language but doesn   t
necessarily give a correct (insightful) account of their structures.

12 / 15

weaker examples

swiss-german    crossing dependencies    are non-context-free in a
very strong sense: no id18 is even weakly adequate for modelling
them.
there are other phenomena that in theory could be modelled using
id18s, though it seems unnatural to do so. e.g. a versus an in

english.

a banana
a large apple

an apple
an exceptionally large banana

over-simplifying a bit: a before consonants, an before vowels.

in theory, we could use a context-free grammar:
np     a np1c
np     an np1v
| apc np1
np1c     nc
np1v     nv
| advc ap
apc     ac
apv     av
but more natural to use context-sensitive rules, e.g.
det [c-word]     a [c-word]
det [v-word]     an [v-word]

| apv np1
| advv ap

13 / 15

between    context-free    and    context-sensitive   

linear indexed grammars (ligs) are a formalism more powerful
than id18s, but much less powerful than an arbitrary id19s. think
of them as mildly id19s. these seem to
su   ce for nl phenomena.

de   nition
an indexed grammar has three disjoint sets of symbols: terminals,
non-terminals and indices.

an index is a stack of symbols that can be passed from the lhs of
a rule to its rhs, allowing counting and recording what rules were
applied in what order. so think of ligs as id18s where a little bit
of    context information    may be passed down to subphrases.

14 / 15

summary

we can argue quite rigorously about the complexity of nls,
even without having a complete    de   nition    of any nl.

nls make frequent use of nested structures, which can be
used to show they can   t be regular.

some nls contain constructs which (in a strong sense)
surpass the power of context-free grammars.

many nls contain features that could in theory be modelled
by id18s, but are in practice better treated in some other way.

nls appear to surpass the power of context-free languages,
but only just. e.g. the mild form of context-sensitivity
captured by ligs seems at least weakly adequate for nl
structures.

15 / 15

