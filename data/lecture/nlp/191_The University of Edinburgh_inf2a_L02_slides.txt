what is inf2a about?
course overview

course roadmap

informatics 2a: lecture 2

john longley, shay cohen

school of informatics
university of edinburgh

jrl@inf.ed.ac.uk

scohen@inf.ed.ac.uk

19 september 2017

1 / 24

what is inf2a about?
course overview

1 what is inf2a about?

formal and natural languages
the language processing pipeline
comparison between fls and nls

2 course overview

levels of language complexity
formal language component
natural language component

2 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

formal and natural languages

this course is about methods for describing, specifying and
processing languages of various kinds:

formal (computer) languages, e.g. java, haskell, html,
sql, postscript, . . .

natural (human) languages, e.g. english, greek, japanese.

   languages    that represent the possible legal behaviours of
some machine or system. e.g. for a vending machine, the
following sequence might be legal:

insert50p . pressbutton1 . delivermarsbar

   languages    that represent the legal sequences of moves in a
game, e.g. chess.

3 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

a common theoretical core

we   ll be focusing on certain theoretical concepts that can be
applied to each of the above domains:

regular languages

   nite state machines

context-free languages, syntax trees

types, id152

the fact that the same underlying theory can be applied in such
diverse contexts suggests that the theory is somehow fundamental,
and worth learning about!

mostly, we   ll be looking at various aspects of formal languages
(mainly jl) and natural languages (mainly sc). as we   ll see, there
are some important similarities between formal and natural
languages     and some important di   erences.

4 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

syntax trees: a central concept

in both fls and nls, phrases have structure that can be
represented via syntax trees.

com

    

hhhh

var

assg

x2

=

expr
   hh
- var

x1

s
   
hhh
vp
np

   hh
n

det

v

the

sun

shone

determining the structure of a phrase is an important    rst step
towards doing other things with it. much of this course will be
about describing and computing syntax trees for phrases of some
given language.

5 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

the language processing    pipeline    (fl version)

think about the phases in which a java program is processed:

raw source text (e.g. x2=-x1)

stream of tokens (e.g. x2, =, -, x1)

syntax tree (as on previous slide)

annotated syntax tree

    lexing
    parsing
    typechecking etc.
    compiling
    linking
    running

java bytecode

jvm state

program behaviour

6 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

language processing for programming languages

in the case of programming languages, the pipeline typically works
in a very    pure    way: each phase depends only on the output from
the previous phase.

in this course, we   ll be concentrating mainly on the    rst half
of this pipeline: lexing, parsing, typechecking. (especially
parsing).

we   ll be looking both at the theoretical concepts involved
(e.g. what is a syntax tree?)

and at algorithms for the various phases (e.g. how do we
construct the syntax tree for a given program)?

we won   t say much about techniques for compilation etc.

however, we   ll brie   y touch on how the intended runtime
behaviour of programs (i.e. their semantics) may be speci   ed.

7 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

language processing for natural languages

we   ll look at fundamental parts of the nl processing pipeline. our
main focus is on how to get computers to perform these tasks, for
applications such as

machine translation (e.g. google translate)

id103 and dialogue systems (e.g. siri, google
voice)

id53 (e.g. ibm watson)

text summarization and simpli   cation

id133

but there   ll also be a couple of lectures on scienti   c studies of how
we as humans perform them.

8 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

the language processing    pipeline    (nl version)

a broadly similar pipeline may be considered e.g. for spoken
english:

raw soundwaves

phones (e.g. [ph]   pot, [p]   spot)

phonemes (e.g. /p/, /b/)

words, morphemes

parse tree

annotated parse tree

logical form or    meaning   

    id102
    phonology
    segmentation, tagging
    parsing
    agreement checking etc.
    semantics
          

9 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

comparison between fls and nls

there are close relationships between these two pipelines. however,
there are also important di   erences:

fls can be pinned down by a precise de   nition. nls are    uid,
fuzzy at the edges, and constantly evolving.

10 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

comparison between fls and nls (continued)

there are close relationships between these two pipelines. however,
there are also important di   erences:

nls are riddled with ambiguity at all levels. this is normally
avoidable in fls.

11 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

comparison between fls and nls (continued)

there are close relationships between these two pipelines. however,
there are also important di   erences:

for fls the pipeline is typically    pure   . in nls, information
from later stages is sometimes used to resolve ambiguities at
earlier stages, e.g.

time    ies like an arrow.
fruit    ies like a banana.

12 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

kinds of ambiguity in nl

phonological ambiguity: e.g.    an ice lolly    vs.    a nice lolly   .

lexical ambiguity: e.g.    fast    has many senses (as noun, verb,
adjective, adverb).

syntactic ambiguity: e.g. two possible syntax trees for
   complaints about referees multiplying   .

semantic ambiguity: e.g.    please use all available doors when
boarding the train   .

13 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

14 / 24

what is inf2a about?
course overview

formal and natural languages
the language processing pipeline
comparison between fls and nls

more on the nl pipeline

in the case of natural languages, one could in principle think of the
pipeline . . .

either as a model for how an arti   cial speech processing
system might be structured,

or as a proposed (crude) model for what naturally goes on in
human minds.

in this course, we mostly emphasize the former perspective.

also, in the nl setting, it   s equally sensible to think of running the
pipeline backwards: starting with a logical form or    meaning    and
generating a speech utterance to express it. but we won   t say
much about this in this course.

15 / 24

what is inf2a about?
course overview

formal language component
natural language component

levels of language complexity

some languages / language features are    more complex    (harder to
describe, harder to process) than others. in fact, we can classify
languages on a scale of complexity (the id154):

regular languages: those whose phrases can be    recognized   
by a    nite state machine (cf. informatics 1).
context-free languages. the basic structure of most
programming languages, and many aspects of natural
languages, can be described at this level.
context-sensitive languages. some nls involve features of this
level of complexity.
recursively enumerable languages: all languages that can in
principle be de   ned via mechanical rules.

roughly speaking, we   ll start with regular languages and work our
way up the hierarchy. context-free languages get most attention.

16 / 24

what is inf2a about?
course overview

formal language component
natural language component

the id154 (picture)

17 / 24

context   sensitivecontext   freeregularrecursively enumerablewhat is inf2a about?
course overview

formal language component
natural language component

formal language component: overview

regular languages:

de   nition using    nite state machines (as in inf1a).

equivalence of deterministic id122s, non-deterministic id122s,
id157.

applications: pattern matching, lexing, morphology.

the pumping lemma: proving a given language isn   t regular.

context-free languages:

context-free grammars, syntax trees.

the corresponding machines: pushdown automata.

parsing: constructing the syntax tree for a given phrase.

a parsing algorithm for ll(1) languages, in detail.

18 / 24

what is inf2a about?
course overview

formal language component
natural language component

formal language component: overview (continued)

after a break to cover some nl material, we   ll glance brie   y at
some concepts from further down the pipeline: e.g. typechecking
and semantics for programming languages.

then we continue up the id154:

context-sensitive languages:

de   nition, examples.

relationship to linear bounded automata.

recursively enumerable languages:

turing machines; theoretical limits of what   s    computable in
principle   .

undecidable problems.

19 / 24

what is inf2a about?
course overview

formal language component
natural language component

natural language component: overview

some speci   c topics:

complexity of human languages: e.g. whereabouts do human
languages sit in the id154?

parsing algorithms: because nls di   er from fls in various
ways, it turns out that di   erent kinds of parsing algorithms
are suitable.

probabilistic versions of fl concepts: in nl, because of
ambiguity, we   re typically looking for the most likely way of
analysing a phrase. for this purpose, probabilistic analogues of
e.g.    nite state machines or context-free grammars are useful.

use of text corpora: rather than building in all the relevant
knowledge of the language by hand, we sometimes get a nlp
system to    learn    it for itself from some large sample of
pre-existing text.

20 / 24

what is inf2a about?
course overview

formal language component
natural language component

natural language semantics

consider the sentence:

every student has access to a computer.

the    meaning    of this can be expressed by a logical formula:

   x. (student(x)        y . (computer(y )     hasaccessto(x, y )))

or perhaps:

   y . (computer(y )        x. (student(x)     hasaccessto(x, y )))

problem: how can (either of) these formulae be mechanically
generated from a syntax tree for the original sentence? this is
what semantics is all about.

21 / 24

what is inf2a about?
course overview

formal language component
natural language component

the python programming language

invented by guido van rossum (pictured)

object-oriented programming language (like java):
has classes and objects.

dynamic typing (unlike java). more    exibility but
more chance of run-time errors.

clear and powerful syntax     very succinct (unlike
java). especially convenient for string processing.

typically driven interactively via a console session
(like haskell).

interfaces to many system calls, libraries, window
systems, and other programming languages.

22 / 24

what is inf2a about?
course overview

formal language component
natural language component

natural language processing with python

nltk: natural language toolkit
developed by steven bird, ewan klein and edward loper; mainly
addresses education and research; the book is online:
http://www.nltk.org

the nltk provides support for many parts of the nl processing
pipeline, e.g.

part-of-speech tagging

parsing

meaning extraction (semantics)

lab sessions will introduce you to both python and nltk.

in assignment 2, we   ll show how one can    t these together to
construct a (very simple) natural language dialogue system.

23 / 24

what is inf2a about?
course overview

formal language component
natural language component

summary

what is inf2a about?

we will learn about formal and natural languages.

we will discuss their similarities and di   erences.

we will cover    nite state machines, context-free grammars,
syntax trees, parsing, pos-tagging, ambiguity.

we will use python for natural language processing.

we will have lots of fun!

next lecture: finite state machines (revision)
reading:

kozen chapter 1, 2; j&m[2nd ed] chapter 1

24 / 24

