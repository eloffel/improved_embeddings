showing a language isn   t regular
the pumping lemma
applying the pumping lemma

the pumping lemma:

limitations of regular languages

informatics 2a: lecture 8

john longley

school of informatics
university of edinburgh

jrl@inf.ed.ac.uk

3 october, 2017

1 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

recap of lecture 7

lexical classes in programming languages may typically be
speci   ed via regular languages.

the lexing algorithm runs a parallel nfa in order to    nd the
next lexeme using the principle of longest match.

regular language theory can also be used in verifying subtle
properties of large    nite-state systems (e.g. those arising from
interactions of several simpler systems).

2 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

non-regular languages

we   ve hinted before that not all languages are regular. e.g.

java (or any other general-purpose programming language).
the language {anbn | n     0}.
the language of all well-matched sequences of brackets (, ).
n.b. a sequence x is well-matched if it contains the same
number of opening brackets    (    and closing brackets    )   , and
no initial subsequence y of x contains more )   s than (   s.

but how do we know these languages aren   t regular?

can we come up with a general technique for proving the
non-regularity of languages?

3 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

the basic intuition: dfas can   t count!

consider l = {anbn | n     0}. just suppose, hypothetically, there
were some dfa m with l(m) = l.
suppose furthermore that m had just processed an, and some
continuation bm was to follow.

intuition: m would need to have counted the number of a   s, in
order to know how many b   s to require.

more precisely, let qn denote the state of m after processing an.
then for any m (cid:54)= n, the states qm, qn must be di   erent, since bm
takes us to an accepting state from qm, but not from qn.

in other words, m would need in   nitely many states, one for each
natural number. contradiction!

4 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

exercises

which of the following languages are regular?

1 strings with an odd number of a   s and an even number of b   s.

2 strings containing strictly more a   s than b   s.
3 strings such that (no. of a   s)  (no. of b   s)     6 mod 24.
4 strings over {0, . . . , 9} representing integers divisible by 43.

5 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

exercises

which of the following languages are regular?

1 strings with an odd number of a   s and an even number of b   s.

2 strings containing strictly more a   s than b   s.
3 strings such that (no. of a   s)  (no. of b   s)     6 mod 24.
4 strings over {0, . . . , 9} representing integers divisible by 43.

answer: 1 is regular (see similar example in lecture 4).
2 isn   t regular: intuitively, we   d need to keep track of di   erence between
no. of a   s and no. of b   s, which could be any integer.
3 is regular: we only need to keep track of no. of a   s mod 24 and no. of
b   s mod 24, which we can do with 24    24 = 576 states.
4 is regular: we can keep track of the number read so far mod 43.
on reading a new digit d, we go from state i to state (10i + d) mod 43.

5 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

loops in dfas

let m be a dfa with k states. suppose, starting from some state
of m, we process a string y of length |y|     k. we then pass
through a sequence of |y| + 1 states. so there must be some state
q that   s visited at least twice:

(note that u and w might be  , but v de   nitely isn   t.)
so any string y with |y|     k can be decomposed as uvw , where

u is the pre   x of y that leads to the    rst visit of q
v takes us once round the loop from q to q,
w is whatever is left of y after uv .

6 / 16

qvuwshowing a language isn   t regular
the pumping lemma
applying the pumping lemma

a general consequence

if l is any regular language, we can pick some dfa m for l, and it
will have some number of states     say k.
suppose we run m on a string xyz     l, where |y|     k. there must
be at least one state q visited twice in the course of processing y :

(there may be other    revisited states    not indicated here.)

7 / 16

qvuxwzshowing a language isn   t regular
the pumping lemma
applying the pumping lemma

the idea of    pumping   

so y can be decomposed as uvw , where

xu takes m from the initial state to q,
v (cid:54)=   takes m once round the loop from q to q,
wz takes m from q to an accepting state.

but now m will be oblivious to whether, or how many times, we go
round the v -loop!

so we can    pump in    as many copies of the substring v as we like,
knowing that we   ll still end in an accepting state.

8 / 16

qvuxwzshowing a language isn   t regular
the pumping lemma
applying the pumping lemma

the pumping lemma: o   cial form

the pumping lemma basically summarizes what we   ve just said.

pumping lemma. suppose l is a regular language. then l has
the following property.

(p) there exists k     0 such that, for all strings x, y , z
with xyz     l and |y|     k, there exist strings u, v , w such
that y = uvw , v (cid:54)=  , and for every i     0 we have
xuv i wz     l.

9 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

the pumping lemma: contrapositive form

since we want to use the pumping lemma to show a language isn   t
regular, we usually apply it in the following equivalent but
back-to-front form.

suppose l is a language for which the following property holds:

(  p) for all k     0, there exist strings x, y , z with
xyz     l and |y|     k such that, for every decomposition
of y as y = uvw where v (cid:54)=  , there is some i     0 for
which xuv i wz (cid:54)    l.

then l is not a regular language.

n.b. the pumping lemma can only be used to show a language
isn   t regular. showing l satis   es (p) doesn   t prove l is regular!

to show that a language is regular, give some dfa or nfa or
regular expression that de   nes it.

10 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

the pumping lemma: a user   s guide

so to show some language l is not regular, it   s enough to show
that l satis   es (  p).
note that (  p) is quite a complex statement:

   k           x, y , z           u, v , w           i       

helpful intuition: values for the variables quanti   ed by     are
chosen by an imaginary    opponent    who is claiming that p is true.
values for the variables quanti   ed by     are chosen by you.

we   ll look at a simple example    rst, then o   er some advice on the
general pattern of argument.

11 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

example 1

consider l = {anbn | n     0}.
we show that l satis   es (  p).
suppose we   re given k     0.
our argument has to work for all k.)
consider the strings x =  , y = ak , z = bk . note that xyz     l and
|y|     k as required.
suppose now we   re given a decomposition of y as uvw with v (cid:54)=  .
(opponent chooses this decomposition. our argument has to work
for all such u, v , w .)

(we make a cunning choice of x, y , z.)

(opponent chooses the value of k.

let i = 0. (we make a cunning choice of i.)
then uv i w = uw = al for some l < k. so xuv i wz = al bk (cid:54)    l.
(we win!)
thus l satis   es (  p), so l isn   t regular.

12 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

use of pumping lemma: general pattern

on the previous slide, the full argument is in black, whereas the
parenthetical comments in blue are for pedagogical purposes only.

the comments emphasise the care that is needed in dealing with
the quanti   ers in the property (  p). in general:

you are not allowed to choose the number k     0. your
argument has to work for every possible value of k.
you have to choose the strings x, y , z, which might depend on
k. you must choose these to satisfy xyz     l and |y|     k.
also, y should be chosen cunningly to    disallow pumping    . . .
you are not allowed to choose the strings u, v , w . your
argument has to work for every possible decomposition of y as
uvw with v (cid:54)=  .
you have to choose the number i ((cid:54)= 1) such that
xuv i wz (cid:54)    l. here i might depend on all the previous data.

13 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

example 2

consider l = {an2 | n     0}.
we show that l satis   es (  p):
suppose k     0.
let x = ak 2   k , y = ak , z =  , so xyz = ak 2     l.
given any splitting of y as uvw with v (cid:54)=  , we have 1     |v|     k.
take i = 2. since xuvwz = ak 2, we have that xuv 2wz = ak 2+|v|.
and 1     |v|     id116 that k 2 + 1     k 2 + |v|     k 2 + k.
however, there are no perfect squares between k 2 and k 2 + 2k + 1.
so the length of xuv 2wz isn   t a perfect square. thus xuv 2wz (cid:54)    l.
thus l satis   es (  p), so l isn   t regular.

14 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

subtle point: what are the x and z for?

all the action seems to happen within y = uvw . do we really need
x and z?

often, we can get away with taking x = z =  . but other choices
may of x, z may give us more control over where the    loop    occurs.

example: l is the set of strings containing more a   s than b   s.

first approach: given k, take x =  , y = ak+1bk , z =  . if
y = uvw , we have three cases to consider, according to where
v begins and ends.
second approach: given k, take x = ak+1, y = bk , z =  .
only one case to consider. taking i = 2 always works.

15 / 16

showing a language isn   t regular
the pumping lemma
applying the pumping lemma

reading and prospectus

relevant reading: kozen chapters 11, 12.

that concludes the course material on (formal) regular languages.

next time, we start on the next level up in the id154:
context-free languages.

16 / 16

