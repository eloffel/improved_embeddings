grounded	
   seman,cs	
   

berkeley	
   

n	
   	
   	
   	
   l	
   	
   	
   	
   p	
   

jacob	
   andreas	
   

what	
   does	
   the	
   world	
   look	
   like?	
   

hal0

^

close0

open0

bowman0

podbaydoors0

9

today   s	
   plan	
   

1.    how	
   do	
   we	
   relate	
   language	
   to	
   a	
   richer	
   

representa,on	
   of	
   the	
   world?	
   

2.    how	
   do	
   we	
   learn	
   meanings	
   without	
   

annotated	
   logical	
   forms?	
   

today   s	
   plan	
   

open	
   the	
   pod	
   bay	
   doors,	
   hal	
   

open(hal, podbaydoors)

	
   
	
   
	
   
	
   
	
   

today   s	
   plan	
   

grounded	
   

formal	
   seman,cs:	
   

	
   

how	
   do	
   we	
   learn	
   the	
   rela,onship	
   between	
   text	
   

and	
   logical	
   forms?	
   

the	
   world	
   

three	
   approaches	
   

1.    learning	
   with	
   hardcoded	
   predicates	
   

2.    jointly	
   learning	
   parsers	
   and	
   classi   ers	
   

3.    learning	
   a	
   policy	
   directly	
   

hard-     coded	
   predicates	
   

don   t	
   forget:	
   	
   
the	
     -     calculus	
   is	
   a	
   programming	
   language!	
   
	
   
final	
   entity	
   hal	
   =	
   ...	
   
entity	
   podbaydoors	
   =	
   ...	
   
void	
   open(entity	
   opener,	
   entity	
   opened)	
   {	
   

	
   ...	
   

}	
   
	
   

hard-     coded	
   predicates	
   

given	
   full	
   supervision	
   we	
   can	
   immediately	
   
execute	
   output	
   from	
   our	
   seman,c	
   parser.	
   
	
   
final	
   entity	
   hal	
   =	
   ...	
   
entity	
   podbaydoors	
   =	
   ...	
   
void	
   open(entity	
   opener,	
   entity	
   opened)	
   {	
   

	
   ...	
   

}	
   
	
   

hard-     coded	
   predicates	
   

open	
   the	
   pod	
   bay	
   doors,	
   hal	
   

open(hal,	
   podbaydoors)	
   

	
   
	
   
	
   
	
   
	
   

distant	
   supervision	
   

can	
   we	
   use	
   the	
   ability	
   to	
   execute	
   predicted	
   
parses	
   to	
   learn	
   with	
   weaker	
   supervision?	
   
	
   
	
   
	
   
	
   
	
   
	
   

distant	
   supervision	
   

can	
   we	
   use	
   the	
   ability	
   to	
   execute	
   predicted	
   
parses	
   to	
   learn	
   with	
   weaker	
   supervision?	
   
	
   
before:	
   
open	
   the	
   pod	
   bay	
   doors	
   
close(hal,	
   podbaydoors)	
   
open(hal,	
   podbaydoors)	
   
	
   
1.0

observe	
   text	
   

predict	
   lf	
   

observe	
   true	
   lf	
   

incur	
   loss	
   

distant	
   supervision	
   

can	
   we	
   use	
   the	
   ability	
   to	
   execute	
   predicted	
   
parses	
   to	
   learn	
   with	
   weaker	
   supervision?	
   
	
   
before:	
   
open	
   the	
   pod	
   bay	
   doors	
   
open(hal,	
   podbaydoors)	
   
open(hal,	
   podbaydoors)	
   
	
   
0.0

observe	
   text	
   

predict	
   lf	
   

observe	
   true	
   lf	
   

incur	
   loss	
   

distant	
   supervision	
   

can	
   we	
   use	
   the	
   ability	
   to	
   execute	
   predicted	
   
parses	
   to	
   learn	
   with	
   weaker	
   supervision?	
   
now:	
   
open	
   the	
   pod	
   bay	
   doors	
   
close(hal,	
   podbaydoors)	
   
doorsclosed	
   =	
   true	
   
doorsclosed	
   =	
   false	
   
	
   
1.0

predicted	
   outcome	
   

desired	
   outcome	
   

incur	
   loss	
   

observe	
   text	
   

predict	
   lf	
   

distant	
   supervision	
   

recall	
   our	
   previous	
   training	
   procedure.	
   
	
   
structured	
   id88	
   update:	
   
	
   
where	
   
	
   
	
   

   t+1 =    t + ( x, y)    (x,   y)
  y = arg max

   > (x, y)

y

distant	
   supervision	
   

now	
   only	
   supervision	
   is	
   an	
   outcome	
   z.	
   
	
   
structured	
   id88	
   update:	
   
	
   
where	
   
	
   
	
   

   t+1 =    t + ( x, y   )    (x,   y)
  y = arg max

   > (x, y)

y

   > (x, y)

y    = arg max
y:exec(y)=z

distant	
   supervision	
   

  y
y   

close(hal,	
   podbaydoors)	
   
open(hal,	
   podbaydoors)	
   
open(hal,	
   cockpitdoors)	
   
make(hal,	
   sandwich,	
   dave)	
   
   	
   
smash(hal,	
   podbaydoors,	
      lingcabinet)	
   

y   

distant	
   supervision	
   

open	
   the	
   pod	
   bay	
   doors,	
   hal	
   

open(hal,	
   podbaydoors)	
   

	
   
	
   
	
   
	
   
	
   

what	
   can	
   we	
   do	
   with	
   this?	
   

learn	
   to	
   answer	
   ques,ons	
   given	
   only	
   	
   
(ques,on,	
   answer)	
   pairs	
   and	
   a	
   database	
   of	
   facts	
   
[liang	
   et	
   al.	
   2011	
   &	
   various	
   others]	
   
	
   
learn	
   to	
   follow	
   direc,ons	
   given	
   only	
   
(source,	
   pairs)	
   and	
   a	
   model	
   environment	
   
[chen	
   &	
   mooney	
   2011,	
   artzi	
   &	
   ze_lemoyer	
   2013]	
   

joint	
   parsing	
   and	
   percep,on	
   

what	
   if	
   the	
   world	
   doesn   t	
   look	
   like	
   a	
   database	
   
underneath?	
   
	
   
open	
   the	
   elevator	
   doors,	
   hal	
   
	
   
what   s	
   a	
   door?	
   

joint	
   parsing	
   and	
   percep,on	
   

what   s	
   a	
   door?	
   
	
   
	
   
	
   
	
   
	
   
	
   

door	
   
window	
   
isopen	
   

f (podbaydoors) = true	
   

podbaydoor,	
   elevatordoor1,	
   cockpitdoor,	
      	
   
bridgewindow,	
   bathroomwindow,	
      	
   
podbaydoor,	
   bathroomwindow	
   

joint	
   parsing	
   and	
   percep,on	
   

what   s	
   a	
   door?	
   
	
   
	
   
	
   
	
   
	
   
	
   

f 

! =

true	
   

joint	
   parsing	
   and	
   percep,on	
   

what   s	
   a	
   door?	
   
	
   
	
   
	
   
	
   
	
   
	
   

f 

! =

true	
   

joint	
   parsing	
   and	
   percep,on	
   

what   s	
   a	
   door?	
   
	
   
	
   
	
   
	
   
	
   
	
   

f 

! =

false	
   

joint	
   parsing	
   and	
   percep,on	
   

fixed	
   inventory	
   of	
   func,ons	
   
	
   
	
   
	
   
	
   
	
   

joint	
   parsing	
   and	
   percep,on	
   

fixed	
   inventory	
   of	
   func,ons	
   
	
   
one	
   func,on	
   per	
   word	
   
	
   
door	
   
	
   
in 	
   

	
   door   :	
   	
   image	
   	
   	
   	
   	
   	
   	
   	
   boolean	
   
	
   in   :	
   (image,	
   image)	
   	
   	
   	
   	
   	
   	
   	
   boolean	
   

joint	
   parsing	
   and	
   percep,on	
   

environment d

know. base  
mug(1)
mug(3)
1	
   
blue	
   
blue(1)
1,	
   3	
   
mug	
   
table(4)
(1,4),	
   (2,4),	
   (3,4)	
   
on	
   
4	
   
table	
   
on-rel(1, 4)
on-rel(3, 4)
...

language z
   blue mug on table   
logical form `
 x.9y.blue(x) ^
mug(x) ^
on-rel(x, y) ^
table(y)

	
   

blue	
   mug	
   on	
   the	
   table	
   
(a) perception fper produces a logical knowl-
 x.9y.blue(x) ^ table(y) ^ on(x, y)
edge base   from the environment d using an
independent classi   er for each category and
relation.

(b) id29 fprs
maps language z to a log-
ical form `.
[krishnamurthy	
   et	
   al.	
   2013]	
   

figure 2: overview of logical semantics with perception (lsp).

joint	
   parsing	
   and	
   percep,on	
   

p   

environment d

blue	
   mug	
   
,
on	
   the	
   
table	
   
	
   

|

   

know. base  
mug(1)
mug(3)
blue(1)
table(4)
on-rel(1, 4)
on-rel(3, 4)
...

text	
   

image	
   

database	
   

(a) perception fper produces a logical knowl-
edge base   from the environment d using an
independent classi   er for each category and
relation.

query	
   

et al., 2010; dzifcak et al., 2009; cantrell et al.,
2010; chen and mooney, 2011). all of this work as-
sumes that the formal environment representation is
given, while lsp learns to produce this formal rep-
resentation from raw sensor input.

answer	
   

figure 2: overview of logical semantics with perception (lsp).

(a) perception fper produces a logical knowl-

most similar to lsp is work on simultaneously
understanding natural language and perceiving the
environment. this problem has been addressed in
the context of robot direction following (kollar et

joint	
   parsing	
   and	
   percep,on	
   

can	
   even	
   learn	
   to	
   compose	
   these	
   grounding	
   
func,ons:	
   
	
   
a	
   blue	
   eye	
   
	
   
a	
   dark	
   blue	
   eye	
   
	
   
a	
   dark	
   pastel	
   blue	
   eye	
   

[andreas	
   et	
   al.	
   2013]	
   

the	
   picture	
   so	
   far	
   

	
   
	
   
	
   
open	
   the	
   pod	
   bay	
   doors	
   
close(hal,	
   podbaydoors)	
   
doorsclosed	
   =	
   true	
   
doorsclosed	
   =	
   false	
   
	
   
1.0

observe	
   text	
   
predict	
   lf	
   

predicted	
   outcome	
   
desired	
   outcome	
   
incur	
   loss	
   

the	
   picture	
   so	
   far	
   

	
   
	
   
	
   
open	
   the	
   pod	
   bay	
   doors	
   
close(hal,	
   podbaydoors)	
   
doorsclosed	
   =	
   true	
   
doorsclosed	
   =	
   false	
   
	
   
1.0

observe	
   text	
   
predict	
   lf	
   

predicted	
   outcome	
   
desired	
   outcome	
   
incur	
   loss	
   

	
   	
   	
   learning	
   a	
   condi,onal	
   policy	
   

p(result|text) =xmr

learn	
   an	
   intermediate	
   meaning	
   representa,on	
   
	
   
p(result|mr) p(mr|text)
	
   
	
   

learn	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   directly	
   

p(result|text)

mdp	
   refresher	
   

       set	
   s	
   of	
   states	
   
       set	
   a	
   of	
   ac,ons	
   
       transi,on	
   func,on	
   t	
   :	
   (s	
   x	
   a)	
   	
   	
   	
   	
   s	
   
       reward	
   func,on	
   r	
   :	
   (s	
   x	
   a)	
   	
   	
   	
   	
   	
   
r

lots	
   of	
   algorithms	
   for	
   learning	
   a	
   policy	
   
	
   	
   	
   	
   :	
   s	
   	
   	
   	
   	
   a	
   given	
   only	
   black-     box	
   interac,on	
   
   

reading	
   as	
   an	
   mdp	
   

idea:	
   augment	
   base	
   mdp	
   state	
   space	
   with	
   
posi,on	
   in	
   document.	
   
	
   
open	
   the	
   pod	
   bay	
   doors	
   aeer	
   making	
   me	
   a	
   sandwich	
   
	
   
{sandwich=true,	
   dooropen=true},	
   	
   
{sandwich=true,	
   dooropen=false},	
   
...	
   

{	
   

sandwich=true,	
   dooropen=false	
   
text=open	
   the	
   pod	
   bay	
   doors	
   aeer	
   making	
   me	
   a	
   sandwich	
   

}	
   

reading	
   as	
   an	
   mdp	
   

f 

sandwich=true,	
   dooropen=false	
   
text=open	
   the	
   pod	
   bay	
   doors	
   aeer	
   making	
   me	
   a	
   sandwich	
   

now	
   just	
   want	
   to	
   pick	
   	
   
	
   
	
   
{a1, a2, ...}
	
   
maximizing	
   reward.	
   	
   
use	
   your	
   favorite	
   policy	
   learning	
   technique!	
   

  2

[vogel	
   &	
   jurafsky	
   2010,	
   branavan	
   et	
   al.	
   numerously]	
   

reading	
   as	
   an	
   mdp	
   

we	
   get	
   pragma,cs	
   for	
   free:	
   easy	
   to	
   learn	
   that	
   
	
   
open	
   the	
   pod	
   bay	
   doors	
   
i	
   want	
   you	
   to	
   open	
   the	
   pod	
   bay	
   doors	
   
i   m	
   ready	
   to	
   come	
   inside	
   now	
   
	
   
prefer	
   des,na,on	
   states	
   with	
   {dooropen	
   =	
   true}	
   

reading	
   as	
   an	
   mdp	
   

but	
   less	
   clear	
   how	
   to	
   handle	
   composi,on	
   
(syntac,c	
   or	
   seman,c)	
   in	
   this	
   framework:	
   
	
   
open	
   the	
   red	
   door	
   located	
   between	
   two	
   small	
   doors.	
   
	
   
need	
   some	
   way	
   of	
   handling	
   structured	
   ac,on	
   
spaces	
   that	
   don   t	
   correspond	
   to	
   syntax.	
   

what	
   else	
   is	
   hard?	
   

event	
   composi,onality	
   and	
   coreference:	
   
	
   
1.    before	
   disassembling	
   your	
   iphone,	
   be	
   sure	
   it	
   is	
   powered	
   o   	
   
2.    remove	
   the	
   two	
   3.6mm	
   pentalobe	
   or	
   phillips	
   #000	
   screws	
   next	
   to	
   

the	
   dock	
   connector	
   
   	
   

	
   iphone	
   

27. 	
   use	
   the	
   clear	
   plas,c	
   pull	
   tab	
   to	
   gently	
   lie	
   the	
   ba_ery	
   out	
   of	
   the	
   	
   
   	
   
59. 	
   de-     route	
   the	
   digi,zer	
   and	
   lcd	
   cables	
   through	
   the	
   steel	
   inner	
   	
   

	
   frame,	
   and	
   remove	
   the	
   display	
   from	
   the	
   iphone	
   

60. 	
   to	
   reassemble	
   your	
   device,	
   follow	
   these	
   instruc,ons	
   in	
   reverse	
   	
   

	
   order.	
   

summary	
   

       grounding	
   relates	
   language	
   to	
   a	
   model	
   
environment	
   with	
   more	
   (or	
   di   erent)	
   
structure	
   than	
   formal	
   calculus	
   

       lots	
   of	
   tools	
   for	
   using	
   environment	
   models	
   	
   
to	
   learn	
   seman,cs	
   without	
   annotated	
   	
   
logical	
   forms	
   

ques,on	
   ,me	
   

