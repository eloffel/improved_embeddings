syntactic attributes

morphology, heads, gaps, etc.

note: the properties of nonterminal symbols are often called    features.   

however, we will use the alternative name    attributes.   

(we   ll use    features    to refer only to the features that get
weights in a machine learning model, e.g., a log-linear model.)

600.465 - intro to nlp - j. eisner

1

3 views of a context-free rule

    generation (production): s     np vp
    parsing (comprehension): s     np vp
s = np vp
    verification (checking):
    today you should keep the third, declarative

perspective in mind.

    each phrase has

    an interface (s) saying where it can go
    an implementation (np vp) saying what   s in it

    to let the parts of the tree coordinate more

closely with one another, enrich the interfaces:
s[attributes   ] = np[attributes   ] vp[attributes   ]

600.465 - intro to nlp - j. eisner

2

examples

verb     thrills
vp    verb np
s     np vp

s

np

vp

verb

np

a roller coaster thrills every teenager

600.465 - intro to nlp - j. eisner

3

3 common ways to use attributes

morphology of a single word:
verb[head=thrill, tense=present, num=sing, person=3,   ]     thrills

projection of attributes up to a bigger phrase
vp[head=   , tense=   , num=      ]     v[head=   , tense=   , num=      ] np

provided     is in the set transitive-verbs

agreement between sister phrases:
s[head=   , tense=   ]     np[num=   ,   ] vp[head=   , tense=   , num=      ]

600.465 - intro to nlp - j. eisner

4

3 common ways to use attributes

verb[head=thrill, tense=present, num=sing, person=3,   ]     thrills
vp[head=   , tense=   , num=      ]     v[head=   , tense=   , num=      ] np
s[head=   , tense=   ]     np[num=   ,   ] vp[head=   , tense=   , num=      ]

(generation
perspective)

np
num=sing

vp

num=sing

s

verb
num=sing
thrills

np

a roller coaster thrills every teenager

600.465 - intro to nlp - j. eisner

5

3 common ways to use attributes

verb[head=thrill, tense=present, num=sing, person=3,   ]     thrills
vp[head=   , tense=   , num=      ]     v[head=   , tense=   , num=      ] np
s[head=   , tense=   ]     np[num=   ,   ] vp[head=   , tense=   , num=      ]

(comprehension

perspective)

np
num=sing

s

verb
num=sing
thrills

vp

num=sing

np

a roller coaster thrills every teenager

600.465 - intro to nlp - j. eisner

6

s

vp

v
has

vp

vp

v

been

vp

det
the

n

np

n
plan

to

vp

v

thrilling

np
otto

v

swallow

np

wanda

s    np[n=1] vp[n=1]

s

vp[n=1]     v[n=1] vp
v[n=1]     has

[num=1]

np

[num=1]

vp

det
the

[num=1]

n

[num=1]

v
has

vp

[num=1]

n
plan

vp

v

been

vp

np[n=1]     det n[n=1]
n[n=1]     n[n=1] vp
n[n=1]     plan

to

vp

v

thrilling

np
otto

v

swallow

np

wanda

s    np[n=   ] vp[n=   ]

s

vp[n=   ]     v[n=   ] vp
v[n=1]     has

[num=1]

np

[num=1]

vp

det
the

[num=1]

n

[num=1]

v
has

vp

[num=1]

n
plan

vp

v

been

vp

to

vp

np[n=   ]     det n[n=   ]
n[n=   ]     n[n=   ] vp
n[n=1]     plan

v

swallow

np

wanda

v

thrilling

np
otto

s

np

[head=plan]

vp

det
the

n

[head=plan]

[head=plan]

n
plan

vp

v
has

vp

v

been

vp

to

vp

np[h=   ]     det n[h=   ]
n[h=   ]     n[h=   ] vp
n[h=plan]     plan

v

swallow

np

wanda

v

thrilling

np
otto

s

[head=thrill]

np

[head=plan]

vp

[head=thrill]

det
the

n

[head=plan]

v
has

vp

[head=thrill]

[head=plan]

n
plan

vp

[head=swallow]

v

been

vp

[head=thrill]

to

vp

[head=swallow]

v

[head=thrill]
thrilling

np
[head=otto]
otto

np[h=   ]     det n[h=   ]
n[h=   ]     n[h=   ] vp
n[h=plan]     plan

v

[head=swallow] [head=wanda]

swallow

wanda

np

    why use heads?

s

[head=thrill]

np

[head=plan]

det
the

n

[head=plan]

[head=plan]

n
plan

vp

[head=swallow]

    morphology (e.g.,word endings)
    n[h=plan,n=1]     plan

vp

[head=thrill]

n[h=plan,n=2+]     plans

vp

v
has

    n[h=thrill,tense=prog]     thrilling
n[h=thrill,tense=past]     thrilled
[head=thrill]
n[h=go,tense=past]     went
vp

v

[head=thrill]

been

to

vp

[head=swallow]

v

[head=thrill]
thrilling

np
[head=otto]
otto

np[h=   ]     det n[h=   ]
n[h=   ]     n[h=   ] vp
n[h=plan]     plan

v

[head=swallow] [head=wanda]

swallow

wanda

np

    why use heads?

s

[head=thrill]

np

[head=plan]

det
the

n

[head=plan]

    subcategorization (i.e.,
transitive vs. intransitive)

    when is vp     v np ok?

[head=thrill]

vp[h=   ]     v[h=   ] np

vp

    when is n     n vp ok?
[head=thrill]

vp
n[h=   ]     n[h=   ] vp

restrict to         transitive_verbs
v
has
restrict to         {plan, plot, hope,   }

[head=plan]

n
plan

vp

[head=swallow]

v

been

vp

[head=thrill]

to

vp

[head=swallow]

v

[head=thrill]
thrilling

np
[head=otto]
otto

np[h=   ]     det n[h=   ]
n[h=   ]     n[h=   ] vp
n[h=plan]     plan

v

[head=swallow] [head=wanda]

swallow

wanda

np

    why use heads?

s

[head=thrill]

np

[head=plan]

det
the

n

[head=plan]

    selectional restrictions
    vp[h=   ]     v[h=   ] np
    i.e., vp[h=   ]     v[h=   ] np[h=   ]
    don   t fill template in all ways:

[head=thrill]

vp

v
vp[h=thrill]     v[h=thrill] np[h=otto]
has
*vp[h=thrill]     v[h=thrill] np[h=plan]
leave out, or low prob

[head=thrill]

vp

[head=plan]

n
plan

vp

[head=swallow]

v

been

vp

[head=thrill]

to

vp

[head=swallow]

v

[head=thrill]
thrilling

np
[head=otto]
otto

np[h=   ]     det n[h=   ]
n[h=   ]     n[h=   ] vp
n[h=plan]     plan

v

[head=swallow] [head=wanda]

swallow

wanda

np

id148 of rule probabilities

    what is the id203 of this rule?

s[head=thrill, tense=pres,    ]    

np[head=plan, num=1, animate=no   ]
vp[head=thrill, tense=pres, num=1,    ]

    we have many related rules.
    p(np[   ] vp[   ] | s[   ])

= (1/z) exp       k    k     fk(s[   ]     np[   ] vp[   ])

    we are choosing among all rules that expand s[   ].
    if a rule has positively-weighted features, they raise its

id203.  negatively-weighted features lower it.
    which features fire will depend on the attributes!

id148 of rule probabilities

s[head=thrill, tense=pres,    ]    

np[head=plan, num=1, animate=no,    ]
vp[head=thrill, tense=pres, num=1,    ]
    some features that might fire on this    

    the raw rule without attributes is s     np vp.

    is that good?  does this feature have positive weight?
    the np and the vp agree in number. is that good?
    the head of the np is    plan.   
    the verb    thrill    will get a subject.
    the verb    thrill    will get an inanimate subject.
    the verb    thrill    will get a subject headed by    plan.   

is that good?

    is that good?  is    plan    a good subject for    thrill   ?

post-processing

   

   

you don   t have to handle everything with tons
of attributes on the nonterminals
sometimes easier to compose your grammar
with a post-processor:
1. use your id18 + randsent to generate some
convenient internal version of the sentence.

2. run that sentence through a post-processor to

clean it up for external presentation.

3. the post-processor can even fix stuff up across

constituent boundaries!

we   ll see a good family of postprocessors later: finite-
state transducers.

simpler grammar + post-processing

root     caps s .

root
s

npproper     caps smith

vp

np

np

np

verb

npproper appositive

appositive

caps we will meet caps smith , 59 ,  , the chief , .

we

   ll

meet

smith,

59

, the chief

.

simpler grammar + post-processing

root
s

vp

vp

np

npproper

adverb

verb

npgenitive

np

caps caps smith already meet -ed me    s child -s .

smith

already

met

my children.

what do these enhancements give you?
and what do they cost?

   

   

   

in a sense, nothing and nothing!

   

can automatically convert our new fancy id18 to an old plain id18.

this is reassuring    
    we haven   t gone off into cloud-cuckoo land where

   ooh, look what languages i can invent.   
    even fancy id18s can   t describe crazy non-human languages such

as the language consisting only of prime numbers.

    because we already know that plain id18s can   t do that.

    we can still use our old algorithms, randsent and parse.

    just convert to a plain id18 and run the algorithms on that.

but we do get a benefit!

   
   
   

attributes and post-processing allow simpler grammars.
same log-linear features are shared across many rules.
a language learner thus has fewer things to learn.

   

   

   

analogy: what does dyna give you?

in a sense, nothing and nothing!
    we can automatically convert our fancy dyna program

to plain old machine code.

this is reassuring    

a standard computer can still run dyna.
no special hardware or magic wands are required.

   

but we do get a benefit!
    high-level programming languages allow shorter

programs that are easier to write, understand, and
modify.

what do these enhancements give you?
and what do they cost?

in a sense, nothing and nothing!

   

   

we can automatically convert our new fancy id18 to an old plain id18.

    nonterminals with attributes     more nonterminals

   
   
   
   

s[head=   , tense=   ]     np[num=   ,   ] vp[head=   , tense=   , num=      ]
can write out versions of this rule for all values of    ,    ,    
now rename np[num=1,   ] to np_num_1_...
so we just get a plain id18 with a ton of rules and nonterminals

   

   
   

   

   

post-processing     more nonterminal attributes
example: post-processor changes    a    to    an    before a vowel
but we could handle this using a    starts with vowel    attribute instead
    the determiner must    agree    with the vowel status of its nbar
this kind of conversion can always be done!  (automatically!)
    at least for post-processors that are finite-state transducers
and then we can convert these attributes to nonterminals as above

part of the english tense system

present past

future

infinitive

simple

eats

ate

will eat

to eat

perfect

had
eaten
progressive is eating was

has
eaten

perfect+
progressive

has been
eating

will have
eaten
will be
eating
will have
been
eating

to have
eaten
to be
eating
to have
been
eating

eating
had
been
eating

600.465 - intro to nlp - j. eisner

23

tenses by post-processing:
   affix-hopping    (chomsky)

mary jumps

mary has jumped

mary is jumping

mary has been jumping

mary [   s jump]

mary [-s have] [-en jump]

mary [-s be] [-ing jump]

mary [-s have] [-en be] [-ing jump]
agreement, meaning

where
    -s denotes    3rd person singular present tense   

on following verb (by an    s suffix)

    -en denotes    past participle    (often uses    en or    ed suffix)
    -ing denotes    present participle        etc.

could we instead describe the patterns via attributes?

s

[tense=pres,head=thrill]

np

[head=plan]

the plan    

vp

[tense=pres,head=thrill]

v
has

vp

[tense=perf,head=thrill]

    let   s distinguish
the different kinds
of vp by tense    

v

been

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling

past

s

[tense=pres,head=thrill]

np

[head=plan]

past

vp

[tense=pres,head=thrill]

the plan    

past

[tense=pres,head=thrill]
thrills
thrilled

v

np
[head=otto]
otto

past
    present tense

past

s

eat

[tense=pres,head=thrill]

np

[head=plan]

past

vp

eat

[tense=pres,head=thrill]

the plan    

past

v

np
[head=otto]
otto

[tense=pres,head=thrill]
thrills
thrilled
ate

past
    present tense

s

[tense=pres,head=thrill]

np

[head=plan]

vp

[tense=pres,head=thrill]

the plan    

[tense=pres,head=thrill]
thrills

v

np
[head=otto]
otto

    present tense
(again)

s

[tense=pres,head=thrill]

np

[head=plan]

vp

[tense=pres,head=thrill]

the plan    

[tense=pres,head=have]

v
has

vp

[tense=perf,head=thrill]

[tense=perf,head=thrill]
thrilled

v

np
[head=otto]
otto

    present perfect tense

s

[tense=pres,head=thrill]

np

[head=plan]

vp

[tense=pres,head=thrill]

the plan    

[tense=pres,head=have]

v
has

vp

[tense=perf,head=thrill]

[tense=perf,head=thrill]
thrilled

v

np
[head=otto]
otto

    present perfect tense

s

eat

[tense=pres,head=thrill]

np

[head=plan]

vp

eat

[tense=pres,head=thrill]

the plan    

[tense=pres,head=have]

v
has

vp

[tense=perf,head=thrill]

eat

v
eat
[tense=perf,head=thrill]
thrilled
eaten

np
[head=otto]
otto
not ate     why?

    present perfect tense
    the yellow material makes it
a perfect tense     what effects?

past

s

[tense=pres,head=thrill]

np

[head=plan]

past

vp

[tense=pres,head=thrill]

the plan    

past

[tense=pres,head=have]

v
has
had

vp

[tense=perf,head=thrill]

[tense=perf,head=thrill]
thrilled

v

np
[head=otto]
otto

past
    present perfect tense

s

[tense=pres,head=thrill]

np

[head=plan]

vp

[tense=pres,head=thrill]

the plan    

[tense=pres,head=thrill]
thrills

v

np
[head=otto]
otto

    present tense
(again)

s

[tense=pres,head=thrill]

np

[head=plan]

the plan    

vp

[tense=pres,head=thrill]

[tense=pres,head=be   ]

v
is

vp

[tense=prog,head=thrill]

[tense=prog,head=thrill]
thrilling

v

np
[head=otto]
otto

    present progressive tense

past

s

[tense=pres,head=thrill]

past

vp

[tense=pres,head=thrill]

np

[head=plan]

the plan    

past

[tense=pres,head=be   ]

v
is
was

vp

[tense=prog,head=thrill]

past
    present progressive tense

[tense=prog,head=thrill]
thrilling

v

np
[head=otto]
otto

s

[tense=pres,head=thrill]

np

[head=plan]

vp

[tense=pres,head=thrill]

the plan    

[tense=pres,head=have]

v
has

vp

[tense=perf,head=thrill]

[tense=perf,head=thrill]
thrilled

v

np
[head=otto]
otto

    present perfect tense

(again)

s

[tense=pres,head=thrill]

np

[head=plan]

vp

[tense=pres,head=thrill]

the plan    

[tense=pres,head=have]

v
has

vp

[tense=perf,head=thrill]

    present perfect

progressive tense

v

[tense=perf,head=be]
been

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling

s

[tense=pres,head=thrill]

np

[head=plan]

vp

[tense=pres,head=thrill]

the plan    

[tense=pres,head=have]

v
has

vp

[tense=perf,head=thrill]

    present perfect

progressive tense

v

[tense=perf,head=be]
been

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling

past

s

[tense=pres,head=thrill]

np

[head=plan]

past

vp

[tense=pres,head=thrill]

the plan    

past

[tense=pres,head=have]

v
has
had

vp

[tense=perf,head=thrill]

past
    present perfect
progressive tense

v

[tense=perf,head=be]
been

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling

cond

s

[tense=pres,head=thrill]

np

[head=plan]

cond

vp

[tense=pres,head=thrill]

[tense=stem,head=thrill]

vp

the plan    

v
[tense=cond,head=will]
would
stem

conditional

    present perfect

progressive tense

v
[tense=pres,head=have]
has
have

v

[tense=perf,head=be]
been

vp

[tense=perf,head=thrill]

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling

vp

[tense=pres,head=thrill]

[tense=pres,head=be]

v
is

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling
vp

[tense=past,head=eat]

[tense=past,head=be]

v
was

vp

[tense=prog,
head=eat]
v

np
[head=otto]
otto

[tense=prog,head=eat]
eating

    so what pattern do all

progressives follow?

vp

[tense=perf,head=thrill]

v

[tense=perf,head=be]
been

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling

vp

[tense=pres,head=thrill]

[tense=pres,head=be]

v
is

vp

[tense=prog,
head=thrill]
v

np
[head=otto]
otto

[tense=prog,head=thrill]
thrilling
vp

[tense=past,head=eat]

[tense=past,head=be]

v
was

vp

[tense=prog,
head=eat]
v

np
[head=otto]
otto

[tense=prog,head=eat]
eating

    so what pattern do all

progressives follow?

vp

   

[tense=perf,head=thrill]

   

v

   

[tense=perf,head=be]
been

[tense=prog,
head=thrill]
v
   
[tense=prog,head=thrill]
-ing

vp
   
np
[head=otto]
otto

progressive: vp[tense=   , head=   ,    ]     v[tense=   , head=be    ]

perfect:

future or
conditional:
infinitive:

vp[tense=prog, head=       ]
vp[tense=   , head=   ,    ]     v[tense=   , head=have    ]
vp[tense=perf, head=       ]
vp[tense=   , head=   ,    ]     v[tense=   , head=will    ]

vp[tense=stem, head=       ]

vp[tense=inf, head=   ,    ]     to

vp[tense=stem, head=       ]
[tense=perf,head=thrill]

vp

   

   

etc.

as well as the    ordinary    rules:
vp[tense=   , head=   ,    ]

    v[tense=   , head=   ,    ] np

v[tense=past, head=have    ]     had

v

   

[tense=perf,head=be]
been

[tense=prog,
head=thrill]
v
   
[tense=prog,head=thrill]
-ing

vp
   
np
[head=otto]
otto

gaps (   deep    grammar!)

    pretend    kiss    is a pure transitive verb.
    is    the president kissed    grammatical?

    if so, what type of phrase is it?

    the sandwich that
    i wonder what
    what else has

the president kissed e
sally said the president kissed e
sally consumed the pickle with e
sally consumed e with the pickle

600.465 - intro to nlp - j. eisner

44

gaps

    object gaps:
    the sandwich that
    i wonder what
    what else has

the president kissed e
sally said the president kissed e
sally consumed the pickle with e
sally consumed e with the pickle
[how could you tell the difference?]

    subject gaps:
    the sandwich that
    i wonder what
    what else has

600.465 - intro to nlp - j. eisner

e kissed the president
sally said e kissed the president

45

gaps

    all gaps are really the same     a missing np:
    the sandwich that
    i wonder what
    what else has

the president kissed e
sally said the president kissed e
sally consumed the pickle with e
sally consumed e with the pickle
e kissed the president
sally said e kissed the president

phrases with missing np:

x[missing=np]

or just x/np for short

600.465 - intro to nlp - j. eisner

46

vp

v

wonder

np
what
what else
could go
here?

vp

cp

[wh=yes]

v

wonder

cp[wh=yes]

[wh=yes]

s/np

[wh=yes]

np
what

s
/np

np
he

vp/np

v
was

vp/np

np
/np
e

v
was

vp

vp

v

kissing

np
him

v

kissing

np/np

e

what else could go here?

vp

v

wonder

cp

[wh=yes]

[wh=yes]

s/np

np

np

the sandwich
comp
that

cp

/np

[wh=no]

s
/np

np
what
what else
could go
here?

np
he

vp/np

v
was

vp/np

np
he

v
was

vp

/np

vp

/np

v

kissing

np
/np
e

v

kissing

np/np

e

what else could go here?

vp

v

wonder

vp

cp

[wh=yes]

v

believe

cp

[wh=no]

np
what
what else
could go
here?

[wh=yes]

s/np

comp
that

s

np
he

vp/np

v
was

vp/np

np
he

v
was

vp

vp

kissing

v

np
the
sandwich

v

kissing

np/np

e

what else could go here?

np

to indicate what fills
a gap, people
sometimes
   coindex    the gap
and its filler.
    each phrase has a unique index

np
i

the sandwich
comp
that

such as    i   .

    in some theories, coindexation is

used to help extract a meaning
from the tree.

    in other theories, it is just an aid
to help you follow the example.

cp

/np
i

[wh=no]

s
/np

i

np
he

v
was

vp

/np

i

vp

/np

i

v

kissing

np
/ np
e
i

i

the moneyi i spend ei on the happinessj i hope to buy ej
which violini is this sonataj easy to play ej on ei

    lots of attributes

(tense, number, person,
gaps, vowels, commas,
wh, etc., etc....)

    sorry, that   s just how language is    
    you know too much to write it down easily!

he

has

gone

