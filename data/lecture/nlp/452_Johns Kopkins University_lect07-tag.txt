tree-adjoining grammar 
(tag) 

one of several formalisms 
that are actually more 
powerful than id18 

note: id18 with features 
isn   t any more powerful than vanilla id18. 
(why?  what do we mean by    more powerful   ?)  

read the transparencies 

(cid:1)(cid:1) this lecture used transparencies. 
(cid:1)(cid:1) but here are some very brief notes to 

remind you what we covered. 

(cid:1)(cid:1) the transparencies are now online, too. 

600.465 - intro to nlp - j. eisner 

1 

600.465 - intro to nlp - j. eisner 

2 

what id18 and tag share 

substitution 

(cid:1)(cid:1) build a tree from a bunch of tree fragments 
(cid:1)(cid:1) technically, build a derived tree from elementary 

trees 

(cid:1)(cid:1) the collection of allowed fragments is the 

grammar! 

(cid:1)(cid:1) the fragments might correspond to context-free 

rules, but they might be bigger as in tag 
(cid:1)(cid:1) semantics associated with every fragment 

(cid:1)(cid:1) substitution: stick an appropriate initial 
tree fragment at the bottom of a tree (to 
expand a childless nonterminal node) 

(cid:1)(cid:1) fills semantic slots of other words 
(cid:1)(cid:1) get templates and idioms for free:    np 
called np up,       np kicked the bucket    

600.465 - intro to nlp - j. eisner 

3 

600.465 - intro to nlp - j. eisner 

4 

adjunction 

features 

(cid:1)(cid:1) adjunction: stick an appropriate auxiliary tree 

fragment into the middle of a tree 

(cid:1)(cid:1) splits a node into two parts and sticks some 

material between them 

(cid:1)(cid:1) good for adding optional modifiers 
(cid:1)(cid:1) good for long-distance dependencies 
(cid:1)(cid:1) why insert into the middle? 

(cid:1)(cid:1) because the insertion doesn   t affect the specified 

semantic relations among nodes in the original 
fragment 

(cid:1)(cid:1) still need features with tags 
(cid:1)(cid:1) every elementary tree has some features 
(cid:1)(cid:1) if a node can be split, it must specify which 

features will get associated with the top half vs. 
bottom half 

(cid:1)(cid:1) have to do unification or checking to figure out 

the values of the features after all the 
substitution and adjunction is done.  this tells 
us how to do morphology legally. 

600.465 - intro to nlp - j. eisner 

5 

600.465 - intro to nlp - j. eisner 

6 

