probabilistic 

id18s

lecture #14

computational linguistics
cmpsci 591n, spring 2006

andrew mccallum

(including slides from jason eisner)

ambiguity in parsing

    time flies like an arrow.
    fruit flies like a banana.

    i saw the man with the telescope.

andrew mccallum, umass

how to solve this combinatorial 

explosion of ambiguity?

1. first try parsing without any weird rules, 

throwing them in only if needed.
2. better: every rule has a weight.  

a tree   s weight is total weight of all its 
rules.  
pick the overall    lightest    parse of 
sentence.

3. can we pick the weights automatically?

we   ll get to this later    

andrew mccallum, umass

cyk parser

input: a string of words, grammar in cnf
output: yes/no
data structure:  n x n table

rows labeled 0 to n-1, columns 1 to n
cell (i,j) lists constituents spanning i,j

for each i from 1 to n

add to (i-1,i) all nonterminals that could 
produce the word at (i-1,i)

andrew mccallum, umass

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

0

1  

2  

3  
4  

 

np
 4
vp
 4

 

 

 

 

 

p
 2
v
 5
 

 

 

 

 

 

 

det
 1
 

 
n

8

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

cyk parser

for width from 2 to n

for start from 0 to n-width

define end to be start+width
for mid from start+1 to end-1

for every constituent in (start, mid)
for every constituent in (mid,end)

for all ways of combining them (if any)

add the resulting constituent to (start,end).

andrew mccallum, umass

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

0

1  

2  

3  
4  

 

 

p
 2
v
 5
 

 

np
 4
vp
 4

 

 

 

 

 

 

 

 

det
 1
 

 
n

8

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10

0

1  

2  

3  
4  

np
 4
vp
 4

 

 

 

 

 

p
 2
v
 5
 

 

 

 

 

 

 

det
 1
 

 
n

8

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s

8

0

1  

2  

3  
4  

np
 4
vp
 4

 

 

 

 

 

p
 2
v
 5
 

 

 

 

 

 

 

det
 1
 

 
n

8

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

 

 

det
 1
 

 
n

8

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

 

 

det
 1
 

 
n

8

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

 

 

det
 1
 

np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

 

 

det
 1
 

np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

 

pp
 12

np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

 

pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

 

 
 
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

 

np
 18
 
 
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

 

np
 18
s
21
 
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

 

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

time   1      ies   2     like    3      an    4    arrow    5

np
 24

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

np
 24
22
s

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

np
 24
22
s
s
27

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

np
 24
22
s
s
27

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

np
 24
22
s
s
27
np
 24

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
s
27

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22

np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

follow backpointers    
time   1      ies   2     like    3      an    4    arrow    5
np
 3
vst
 3

 

 

np
 10
s
s

8
13

s

0

1  

2  

3  
4  

 

np
 4
vp
 4

 

 

 

p
 2
v
 5
 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

s

np vp

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

s

np vp

vp pp

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

s

np vp

vp pp

p np

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

s

np vp

vp pp

p np

det n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

which entries do we need?
time   1      ies   2     like    3      an    4    arrow    5
np
 3
vst
 3

 

 

np
 10
s
s

8
13

0

1  

2  

3  
4  

 

np
 4
vp
 4

 

 

 

p
 2
v
 5
 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

which entries do we need?
time   1      ies   2     like    3      an    4    arrow    5
np
 3
vst
 3

 

 

np
 10
s
s

8
13

0

1  

2  

3  
4  

 

np
 4
vp
 4

 

 

 

p
 2
v
 5
 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

 

 

0

8
13

np
 10
s
s

not worth keeping    
time   1      ies   2     like    3      an    4    arrow    5
np
 3
np
 24
vst
 3
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

p
 2
v
 5
 

np
 4
vp
 4

det
 1
 

3  
4  

2  

1  

 

 

 

 

 

 

 

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

    since it just breeds worse options

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

p
 2
v
 5
 

 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

np
 4
vp
 4

 

 

 

0

1  

2  

3  
4  

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

keep only best-in-class!
time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
s
s

8
13

 

 

inferior stock

0

1  

2  

3  
4  

 

np
 4
vp
 4

 

 

 

p
 2
v
 5
 

 

 

 

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

keep only best-in-class!

(and backpointers so you can recover parse)

time   1      ies   2     like    3      an    4    arrow    5
  np
 3
vst
 3

 

 

np
 10
s
8
np
 4
vp
 4

1  

2  

3  
4  

 

 

 

 

p
 2
v
 5
 

 

 

 

det
 1
 

np
 24
s
22
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

id203 tree

probabilistic trees
    instead of lightest weight tree, take highest 
    given any tree, your assignment generator would 
    just like using id165s to choose among strings    
    what is the id203 of this tree?

have some id203 of producing it!  

s

np
time
vp
   ies

vp

pp

np

p
like

det
an

n   
 arrow

andrew mccallum, umass

id203 tree

have some id203 of producing it!  

probabilistic trees
    instead of lightest weight tree, take highest 
    given any tree, your assignment generator would 
    just like using id165s to choose among strings    
    what is the id203 of this tree?
p(
    you rolled a lot
of independent dice...

np
time
vp
   ies

| s)

vp

pp

s

np

p
like

andrew mccallum, umass

det
an

n   
 arrow

chain rule: one word at a time

p(time    ies like an arrow) 
   =	 p(time)
	
	
	
	

* p(   ies | time)
* p(like | time    ies)
* p(an | time    ies like)
* p(arrow | time    ies like an)

andrew mccallum, umass

chain rule + backoff 
(to get trigram model)

p(time    ies like an arrow) 
   =	 p(time)
	
	
	
	

* p(   ies | time)
* p(like | time    ies)
* p(an | time    ies like)
* p(arrow | time    ies like an)

andrew mccallum, umass

chain rule     written differently

p(time    ies like an arrow) 
   =	 p(time)
	
	
	
	

* p(time    ies | time)
* p(time    ies like | time    ies)
* p(time    ies like an | time    ies like)
* p(time    ies like an arrow | time    ies like an)

proof: p(x,y | x) = p(x | x) * p(y | x, x) = 1 * p(y | x)

andrew mccallum, umass

chain rule + backoff

p(time    ies like an arrow) 
   =
 p(time)
* p(time    ies | time)

* p(time    ies like | time    ies)

* p(time    ies like an | time    ies like)

* p(time    ies like an arrow | time    ies like an)

proof: p(x,y | x) = p(x | x) * p(y | x, x) = 1 * p(y | x)

 

45

chain rule: one node at a time

p(

s
vp

np
time
vp
   ies

pp
p
like

np
det
an

n   
 arrow

| s) = p(

s

| s) * p(

np vp

s
vp

|

s

np vp

)

np
time

s
vp

np
time

s

vp

np
time

)

) *    

* p(

* p(

s
vp

|

np
time

vp pp
|

s

vp

np
time
vp
   ies
 

pp

vp pp

46

chain rule + backoff

p(

s
vp

np
time
vp
   ies

pp
p
like

np
det
an

n   
 arrow

| s) = p(

s

| s) * p(

np vp

s
vp

|

s

np vp

)

np
time

s
vp

np
time

s

vp

np
time

)

) *    

* p(

* p(

s
vp

|

np
time

vp pp
|

s

vp

np
time
vp
   ies
 

pp

vp pp

47

simplified notation 

| s) = p(s     np vp | s) * p(np        ies | np)

p(

s
vp

np
time
vp
   ies

pp
p
like

np
det
an

n   
 arrow

* p(vp     vp np | vp) 

* p(vp        ies | vp) *    

 

48

already have a cky alg for weights    

| s) = w(s     np vp)     + w(np        ies | np)

w(

s
vp

np
time
vp
   ies

pp
p
like

np
det
an

n   
 arrow

+ w(vp     vp np) 

+ w(vp        ies) +    

just let w(x     y z) = -log p(x     y z | x)
then lightest tree has highest prob

 

49

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

np
 10
8  
s
s
13

 

 

2-8

0

1  

2  

3  
4  

multiply to get 2-22

 

np
 4
vp
 4

 

 

 

p
 2
v
 5
 

 

 

 

2-12

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

2-2
1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

need only best-in-class to get best parse

time   1      ies   2     like    3      an    4    arrow    5

np
 3
vst
 3

0

2-13

1  

2  

3  
4  

np
 10
8  
s
s
13

 

 

2-8

multiply to get 2-22

 

np
 4
vp
 4

 

 

 

p
 2
v
 5
 

 

 

 

2-12

det
 1
 

np
 24
22
s
s
27
np
 24
27
s
s
22
27
s
np
 18
s
21
vp
 18
pp
 12
vp
 16
np
 10
8
n

2-2
1  s     np vp
6  s     vst np
2  s     s pp
1  vp     v np
2  vp     vp pp
1  np     det n
2  np     np pp
3  np     np np
0  pp     p np 

why probabilities not weights?
    we just saw probabilities are really just a 
special case of weights    
        but we can estimate them from training 
data by counting and smoothing! use all 
of our lovely id203 theory machinery!

 

52

probabilistic 

id18s 

andrew mccallum, umass

whyweneedrecursivephrasestructure!thevelocityoftheseismicwavesrisesto...!kupiec(1992):id48taggergoesawry:waves   verbsnpsgdtthennvelocityppinofnppltheseismicwavesvpsgrisesto...307pid18sapid18gconsistsoftheusualpartsofaid18!asetofterminals,{wk},k=1,...,v!asetofnonterminals,{ni},i=1,...,n!adesignatedstartsymbol,n1!asetofrules,{ni     j},(where  jisasequenceofterminalsandnonterminals)and!acorrespondingsetofprobabilitiesonrulessuchthat:   i!jp(ni     j)=1308pid18notationsentence:sequenceofwordsw1      wmwab:thesubsequencewa      wbniab:nonterminalnidominateswa      wbnjwa      wbni   "     :repeatedderivationfromnigives  .309pid18id203ofastringp(w1n)=!tp(w1n,t)taparseofw1n=!{t:yield(t)=w1n}p(t)310asimplepid18(incnf)s   npvp1.0np   nppp0.4pp   pnp1.0np   astronomers0.1vp   vnp0.7np   ears0.18vp   vppp0.3np   saw0.04p   with1.0np   stars0.18v   saw1.0np   telescopes0.1311t1:s1.0np0.1astronomersvp0.7v1.0sawnp0.4np0.18starspp1.0p1.0withnp0.18ears312a simple pid18 (in cnf)

andrew mccallum, umass

whyweneedrecursivephrasestructure!thevelocityoftheseismicwavesrisesto...!kupiec(1992):id48taggergoesawry:waves   verbsnpsgdtthennvelocityppinofnppltheseismicwavesvpsgrisesto...307pid18sapid18gconsistsoftheusualpartsofaid18!asetofterminals,{wk},k=1,...,v!asetofnonterminals,{ni},i=1,...,n!adesignatedstartsymbol,n1!asetofrules,{ni     j},(where  jisasequenceofterminalsandnonterminals)and!acorrespondingsetofprobabilitiesonrulessuchthat:   i!jp(ni     j)=1308pid18notationsentence:sequenceofwordsw1      wmwab:thesubsequencewa      wbniab:nonterminalnidominateswa      wbnjwa      wbni   "     :repeatedderivationfromnigives  .309pid18id203ofastringp(w1n)=!tp(w1n,t)taparseofw1n=!{t:yield(t)=w1n}p(t)310asimplepid18(incnf)s   npvp1.0np   nppp0.4pp   pnp1.0np   astronomers0.1vp   vnp0.7np   ears0.18vp   vppp0.3np   saw0.04p   with1.0np   stars0.18v   saw1.0np   telescopes0.1311t1:s1.0np0.1astronomersvp0.7v1.0sawnp0.4np0.18starspp1.0p1.0withnp0.18ears312andrew mccallum, umass

whyweneedrecursivephrasestructure!thevelocityoftheseismicwavesrisesto...!kupiec(1992):id48taggergoesawry:waves   verbsnpsgdtthennvelocityppinofnppltheseismicwavesvpsgrisesto...307pid18sapid18gconsistsoftheusualpartsofaid18!asetofterminals,{wk},k=1,...,v!asetofnonterminals,{ni},i=1,...,n!adesignatedstartsymbol,n1!asetofrules,{ni     j},(where  jisasequenceofterminalsandnonterminals)and!acorrespondingsetofprobabilitiesonrulessuchthat:   i!jp(ni     j)=1308pid18notationsentence:sequenceofwordsw1      wmwab:thesubsequencewa      wbniab:nonterminalnidominateswa      wbnjwa      wbni   "     :repeatedderivationfromnigives  .309pid18id203ofastringp(w1n)=!tp(w1n,t)taparseofw1n=!{t:yield(t)=w1n}p(t)310asimplepid18(incnf)s   npvp1.0np   nppp0.4pp   pnp1.0np   astronomers0.1vp   vnp0.7np   ears0.18vp   vppp0.3np   saw0.04p   with1.0np   stars0.18v   saw1.0np   telescopes0.1311t1:s1.0np0.1astronomersvp0.7v1.0sawnp0.4np0.18starspp1.0p1.0withnp0.18ears312andrew mccallum, umass

t2:s1.0np0.1astronomersvp0.3vp0.7v1.0sawnp0.18starspp1.0p1.0withnp0.18ears313thetwoparsetrees   probabilitiesandthesen-tenceid203p(t1)=1.0  0.1  0.7  1.0  0.4  0.18  1.0  1.0  0.18=0.0009072p(t2)=1.0  0.1  0.3  0.7  1.0  0.18  1.0  1.0  0.18=0.0006804p(w15)=p(t1)+p(t2)=0.0015876314attachmentambiguities:akeyparsingdeci-sion!themainprobleminparsingisworkingouthowto   attach   variouskindsofconstituents   pps,adverbialorparticipialphrases,coordinations,andsoon!prepositionalphraseattachment"isawthemanwithatelescope!whatdoeswithatelescopemodify?"theverbsaw?"thenounman?!istheproblem   ai-complete   ?yes,but...315attachmentambiguities(2)!proposedsimplestructuralfactors"rightassociation(kimball1973)=   low   or   near   at-tachment=   lateclosure   (ofnp)[np   nppp]"minimalattachment(frazier1978)[dependsongram-mar]=   high   or   distant   attachment=   earlyclosure   (ofnp)[vp   vnppp]!suchsimplestructuralfactorsdominatedinearlypsy-cholinguistics,andarestillwidelyinvoked.!inthevnpppcontext,rightattachmentgetsitrightin55   67%ofcases.!butthatmeansitgetsitwrongin33   45%ofcases316importanceoflexicalfactors!wordsaregoodpredictors(oreveninducers)ofattach-ment(evenabsentunderstanding):"thechildrenatethecakewithaspoon."thechildrenatethecakewithfrosting."moscowsentmorethan100,000soldiersintoafghanistan"sydneywaterbreachedanagreementwithnswhealth!fordetal.(1982):"orderingisjointlydeterminedbystrengthsofal-ternativelexicalforms,alternativesyntacticrewriterules,andthesequenceofhypothesesinparsing317attachmentambiguitiessnpprpivpvvbdsawnpdtthennmanppinwithnpdtanntelescopesnpprpivpvvbdsawvnpnpdtthennmann1ppinwithpnpdtanntelescopen2318the two parse trees    probabilities

and the sentence id203

andrew mccallum, umass

t2:s1.0np0.1astronomersvp0.3vp0.7v1.0sawnp0.18starspp1.0p1.0withnp0.18ears313thetwoparsetrees   probabilitiesandthesen-tenceid203p(t1)=1.0  0.1  0.7  1.0  0.4  0.18  1.0  1.0  0.18=0.0009072p(t2)=1.0  0.1  0.3  0.7  1.0  0.18  1.0  1.0  0.18=0.0006804p(w15)=p(t1)+p(t2)=0.0015876314attachmentambiguities:akeyparsingdeci-sion!themainprobleminparsingisworkingouthowto   attach   variouskindsofconstituents   pps,adverbialorparticipialphrases,coordinations,andsoon!prepositionalphraseattachment"isawthemanwithatelescope!whatdoeswithatelescopemodify?"theverbsaw?"thenounman?!istheproblem   ai-complete   ?yes,but...315attachmentambiguities(2)!proposedsimplestructuralfactors"rightassociation(kimball1973)=   low   or   near   at-tachment=   lateclosure   (ofnp)[np   nppp]"minimalattachment(frazier1978)[dependsongram-mar]=   high   or   distant   attachment=   earlyclosure   (ofnp)[vp   vnppp]!suchsimplestructuralfactorsdominatedinearlypsy-cholinguistics,andarestillwidelyinvoked.!inthevnpppcontext,rightattachmentgetsitrightin55   67%ofcases.!butthatmeansitgetsitwrongin33   45%ofcases316importanceoflexicalfactors!wordsaregoodpredictors(oreveninducers)ofattach-ment(evenabsentunderstanding):"thechildrenatethecakewithaspoon."thechildrenatethecakewithfrosting."moscowsentmorethan100,000soldiersintoafghanistan"sydneywaterbreachedanagreementwithnswhealth!fordetal.(1982):"orderingisjointlydeterminedbystrengthsofal-ternativelexicalforms,alternativesyntacticrewriterules,andthesequenceofhypothesesinparsing317attachmentambiguitiessnpprpivpvvbdsawnpdtthennmanppinwithnpdtanntelescopesnpprpivpvvbdsawvnpnpdtthennmann1ppinwithpnpdtanntelescopen2318assumptions of pid18s

andrew mccallum, umass

assumptionsofpid18s1.placeinvariance(liketimeinvarianceinid48):   kp(njk(k+c)     )isthesame2.context-free:p(njkl     |wordsoutsidewk...wl)=p(njkl     )3.ancestor-free:p(njkl     |ancestornodesofnjkl)=p(njkl     )thesu   cientstatisticsofapid18arethussimplycountsofhowoftendi   erentlocaltreecon   gurationsoccurred(=countsofwhichgrammarruleswereapplied).319somefeaturesofpid18sreasonstouseapid18,andsomeideaoftheirlimitations:!partialsolutionforgrammarambiguity:apid18givessomeideaoftheplausibilityofasentence.!but,inthesimplecase,notaverygoodidea,asindepen-denceassumptionsaretwostrong(e.g.,notlexicalized).!givesaprobabilisticlanguagemodelforenglish.!inthesimplecase,apid18isaworselanguagemodelforenglishthanatrigrammodel.!betterforgrammarinduction(gold1967vs.horning1969)!robustness.(admiteverythingwithlowid203.)321somefeaturesofpid18s!apid18encodescertainbiases,e.g.,thatsmallertreesarenormallymoreprobable.!onecanhopetocombinethestrengthsofapid18andatrigrammodel.we   lllookatsimplepid18s   rst.theyhavecertaininade-quacies,butwe   llseethatmostofthestate-of-the-artprob-abilisticparsersarefundamentallypid18models,justwithvariousenrichmentstothegrammar322questionsforpid18sjustasforid48s,therearethreebasicquestionswewishtoanswer:!languagemodeling:p(w1m|g)!parsing:argmaxtp(t|w1m,g)!learningalgorithm:findgsuchthatp(w1m|g)ismax-imized.324chomskynormalformgrammarswe   lldothecaseofchomskynormalformgrammars,whichonlyhaverulesoftheform:ni   njnkni   wjanyid18canberepresentedbyaweaklyequivalentid18inchomskynormalform.it   sstraightforwardtogeneralizethealgorithm(recallchartparsing).325probabilisticregulargrammar:ni   wjnkni   wjstartstate,n1id48:!w1np(w1n)=1   nwhereasinapid18oraprg:!w   lp(w)=1327some features of pid18s

andrew mccallum, umass

assumptionsofpid18s1.placeinvariance(liketimeinvarianceinid48):   kp(njk(k+c)     )isthesame2.context-free:p(njkl     |wordsoutsidewk...wl)=p(njkl     )3.ancestor-free:p(njkl     |ancestornodesofnjkl)=p(njkl     )thesu   cientstatisticsofapid18arethussimplycountsofhowoftendi   erentlocaltreecon   gurationsoccurred(=countsofwhichgrammarruleswereapplied).319somefeaturesofpid18sreasonstouseapid18,andsomeideaoftheirlimitations:!partialsolutionforgrammarambiguity:apid18givessomeideaoftheplausibilityofasentence.!but,inthesimplecase,notaverygoodidea,asindepen-denceassumptionsaretwostrong(e.g.,notlexicalized).!givesaprobabilisticlanguagemodelforenglish.!inthesimplecase,apid18isaworselanguagemodelforenglishthanatrigrammodel.!betterforgrammarinduction(gold1967vs.horning1969)!robustness.(admiteverythingwithlowid203.)321somefeaturesofpid18s!apid18encodescertainbiases,e.g.,thatsmallertreesarenormallymoreprobable.!onecanhopetocombinethestrengthsofapid18andatrigrammodel.we   lllookatsimplepid18s   rst.theyhavecertaininade-quacies,butwe   llseethatmostofthestate-of-the-artprob-abilisticparsersarefundamentallypid18models,justwithvariousenrichmentstothegrammar322questionsforpid18sjustasforid48s,therearethreebasicquestionswewishtoanswer:!languagemodeling:p(w1m|g)!parsing:argmaxtp(t|w1m,g)!learningalgorithm:findgsuchthatp(w1m|g)ismax-imized.324chomskynormalformgrammarswe   lldothecaseofchomskynormalformgrammars,whichonlyhaverulesoftheform:ni   njnkni   wjanyid18canberepresentedbyaweaklyequivalentid18inchomskynormalform.it   sstraightforwardtogeneralizethealgorithm(recallchartparsing).325probabilisticregulargrammar:ni   wjnkni   wjstartstate,n1id48:!w1np(w1n)=1   nwhereasinapid18oraprg:!w   lp(w)=1327some features of pid18s

andrew mccallum, umass

assumptionsofpid18s1.placeinvariance(liketimeinvarianceinid48):   kp(njk(k+c)     )isthesame2.context-free:p(njkl     |wordsoutsidewk...wl)=p(njkl     )3.ancestor-free:p(njkl     |ancestornodesofnjkl)=p(njkl     )thesu   cientstatisticsofapid18arethussimplycountsofhowoftendi   erentlocaltreecon   gurationsoccurred(=countsofwhichgrammarruleswereapplied).319somefeaturesofpid18sreasonstouseapid18,andsomeideaoftheirlimitations:!partialsolutionforgrammarambiguity:apid18givessomeideaoftheplausibilityofasentence.!but,inthesimplecase,notaverygoodidea,asindepen-denceassumptionsaretwostrong(e.g.,notlexicalized).!givesaprobabilisticlanguagemodelforenglish.!inthesimplecase,apid18isaworselanguagemodelforenglishthanatrigrammodel.!betterforgrammarinduction(gold1967vs.horning1969)!robustness.(admiteverythingwithlowid203.)321somefeaturesofpid18s!apid18encodescertainbiases,e.g.,thatsmallertreesarenormallymoreprobable.!onecanhopetocombinethestrengthsofapid18andatrigrammodel.we   lllookatsimplepid18s   rst.theyhavecertaininade-quacies,butwe   llseethatmostofthestate-of-the-artprob-abilisticparsersarefundamentallypid18models,justwithvariousenrichmentstothegrammar322questionsforpid18sjustasforid48s,therearethreebasicquestionswewishtoanswer:!languagemodeling:p(w1m|g)!parsing:argmaxtp(t|w1m,g)!learningalgorithm:findgsuchthatp(w1m|g)ismax-imized.324chomskynormalformgrammarswe   lldothecaseofchomskynormalformgrammars,whichonlyhaverulesoftheform:ni   njnkni   wjanyid18canberepresentedbyaweaklyequivalentid18inchomskynormalform.it   sstraightforwardtogeneralizethealgorithm(recallchartparsing).325probabilisticregulargrammar:ni   wjnkni   wjstartstate,n1id48:!w1np(w1n)=1   nwhereasinapid18oraprg:!w   lp(w)=1327