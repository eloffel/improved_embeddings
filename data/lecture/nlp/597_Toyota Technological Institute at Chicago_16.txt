ttic	
   31210:	
   

advanced	
   natural	
   language	
   processing	
   

kevin	
   gimpel	
   
spring	
   2017	
   

	
   

lecture	
   16:	
   

structured	
   prediccon	
   in	
   nlp,	
   

syntaccc	
   &	
   semancc	
   formalisms	
   

1	
   

       assignment	
   3	
   due	
   tomorrow	
   
       final	
   project	
   report	
   due	
   friday,	
   june	
   9	
   

       guidelines	
   for	
      nal	
   project	
   report	
   have	
   been	
   posted	
   

2	
   

modeling,	
   id136,	
   learning	
   

id136:	
   solve	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   _	
   	
   

modeling:	
   de   ne	
   	
   score	
   funccon	
   

learning:	
   choose	
   _	
   	
   	
   

structured	
   predic+on:	
   	
   
output	
   space	
   is	
   exponencally-     sized	
   or	
   unbounded	
   
(we	
   can   t	
   just	
   enumerate	
   all	
   possible	
   outputs)	
   

3	
   

       2	
   categories	
   of	
   structured	
   prediccon:	
   
	
   	
   	
   	
   score-     based	
   and	
   search-     based	
   

4	
   

score-     based	
   structured	
   prediccon	
   

       focus	
   on	
   de   ning	
   the	
   score	
   funccon	
   of	
   the	
   

structured	
   input/output	
   pair:	
   

       cleanly	
   separates	
   score	
   funccon,	
   id136	
   

algorithm,	
   and	
   training	
   loss	
   

5	
   

id136	
   in	
   score-     based	
   sp	
   

       id136	
   algorithms	
   are	
   de   ned	
   based	
   on	
   

decomposicon	
   of	
   score	
   into	
   parts	
   

       smaller	
   parts	
   =	
   easier	
   to	
   de   ne	
   e   cient	
   exact	
   

id136	
   algorithms	
   

6	
   

name	
   

cost	
   
(   0-     1   )	
   

percep-     
tron	
   

hinge	
   

log	
   

sogmax
-     margin	
   

loss	
   funccons	
   for	
   score-     based	
   sp	
   

loss	
   

where	
   used	
   

mert	
   (och,	
   2003)	
   

structured	
   
id88	
   
(collins,	
   2002)	
   
structured	
   id166s	
   

(taskar	
   et	
   al.,	
   

inter	
   alia)	
   

crfs	
   (la   erty	
   et	
   

al.,	
   2001)	
   

povey	
   et	
   al.	
   

(2008),	
   gimpel	
   &	
   

smith	
   (2010)	
   

7	
   

id136	
   algorithms	
   for	
   score-     based	
   sp	
   

       dynamic	
   programming	
   

      exact,	
   but	
   parts	
   must	
   be	
   small	
   for	
   e   ciency	
   
       dynamic	
   programming	
   +	
      cube	
   pruning   	
   

      permits	
   approximate	
   incorporacon	
   of	
   large	
   parts	
   
(   non-     local	
   features   )	
   while	
   scll	
   using	
   dynamic	
   
program	
   backbone	
   

       integer	
   linear	
   programming	
   

8	
   

search-     based	
   structured	
   prediccon	
   
       focus	
   on	
   the	
   procedure	
   for	
   searching	
   through	
   the	
   
structured	
   output	
   space	
   (usually	
   involves	
   simple	
   
greedy	
   or	
   beam	
   search)	
   

       design	
   a	
   classi   er	
   to	
   score	
   a	
   small	
   number	
   of	
   

decisions	
   at	
   each	
   posicon	
   in	
   the	
   search	
   
       this	
   classi   er	
   can	
   use	
   informacon	
   about	
   the	
   current	
   state	
   

as	
   well	
   as	
   the	
   encre	
   history	
   of	
   the	
   search	
   

      

in	
   dependency	
   parsing,	
   this	
   is	
   called	
      transicon-     
based	
   parsing   	
   because	
   it	
   consists	
   of	
   greedily,	
   
sequencally	
   deciding	
   what	
   parsing	
   decision	
   to	
   make	
   

9	
   

transicon-     based	
   parsing	
   

       there	
   are	
   many	
   variacons	
   of	
   greedy	
   parsers	
   
that	
   build	
   parse	
   structures	
   as	
   they	
   process	
   a	
   
sentence	
   from	
   leg	
   to	
   right	
   
         shig-     reduce   ,	
      transicon-     based   ,	
   etc.	
   

       these	
   form	
   the	
   backbone	
   of	
   many	
   modern	
   

neural	
   dependency	
   (and	
   consctuency!)	
   
parsers	
   

       we   ll	
   go	
   through	
   an	
   example	
   (thanks	
   to	
   noah	
   

smith	
   for	
   these	
   slides!)	
   

10	
   

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

say 

millennials 

many 

estimated 

of  percent are 

voted 

which 

50 

to have 

listen 

must 

to 

concerns 

their 

parties 

political 

get 

to 

support 

greedy	
   parsing	
   with	
   a	
   stack	
   

see: 
nivre & scholz, 2004 
henderson, 2004 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

shift 

 

many 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

shift 

millennials 

many 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

reduce left 

 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

shift 

of 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

shift 

which 

of 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

reduce right 

 

of     which 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

shift 

 
50 

of     which 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

shift 

 

percent 

50 

of     which 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

reduce right 

 
 

50     percent 
of     which 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

shift 

 
are 

50     percent 
of     which 

many     millennials 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

 

estimated 

are 

50     percent 
of     which 

many     millennials 

shift 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

 
to 

estimated 

are 

50     percent 
of     which 

many     millennials 

shift 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

stack: 

buffer: 

 

have 

to 

estimated 

are 

50     percent 
of     which 

many     millennials 

shift 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

stack: 

buffer: 

 

voted 
have 

to 

estimated 

are 

50     percent 
of     which 

many     millennials 

shift 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

stack: 

buffer: 

 

have     voted 

to 

estimated 

are 

50     percent 
of     which 

many     millennials 

reduce left 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

 

(to have)     voted 

estimated 

are 

50     percent 
of     which 

many     millennials 

reduce left 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

 

estimated     ((to have)     voted) 

are 

50     percent 
of     which 

many     millennials 

reduce right 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

greedy	
   parsing	
   with	
   a	
   stack	
   

 

are     estimated     ((to have)     voted) 

50     percent 
of     which 

many     millennials 

reduce left 

stack: 

buffer: 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

say 

parties 

political 

listen 

must 

to 

concerns 

their 

get 

to 

support 

millennials 

many 

estimated 

of  percent are 

voted 

which 

50 

to have 

many millennials, of which 50 percent are estimated to have voted, say 
political parties must listen to their concerns to get support. 
 
 

dyer	
   et	
   al.	
   (acl	
   2015)	
   

34	
   

       chen	
   et	
   al.	
   (2014)	
   used	
   a	
   feed-     forward	
   

network	
   to	
   output	
   a	
   parsing	
   decision	
   (shig,	
   
reduce-     leg,	
   or	
   reduce-     right)	
   

       dyer	
   et	
   al.	
   (2015)	
   used	
   id56s	
   to	
   model	
   the	
   

history	
   of	
   parsing	
   decisions,	
   the	
   parcal	
   parses	
   
so	
   far	
   (the	
      stack   ),	
   and	
   the	
   sentence	
   

35	
   

stack	
   id56s	
   

dyer	
   et	
   al.	
   (acl	
   2015)	
   

36	
   

dyer	
   et	
   al.	
   (acl	
   2015)	
   

37	
   

stack	
   lstm	
   parser	
   

{shift, reduce right, reduce left} 

stack: 

action history: 

of 

which 

millennials 

many 

   

reduce right 

reduce left 

shift 
shift 

shift 
shift 
    

buffer: 

50   percent  are estimated  to     have voted     

       we   ve	
   talked	
   about	
   consctuency	
   and	
   

dependency	
   parsing	
   in	
   this	
   course	
   and	
   in	
   
31190	
   

       what	
   about	
   other	
   syntaccc	
   &	
   semancc	
   

formalisms?	
   

       today	
   we   ll	
   cover	
   2	
   you	
   should	
   know	
   about:	
   

      amr	
   
      id35	
   

39	
   

note:	
   slides	
   from	
   this	
   seccon	
   have	
   been	
   removed	
   due	
   to	
   large	
   size.	
   
please	
   see	
   the	
   original	
   tutorial	
   slides	
   by	
   schneider/flanigan/o   gorman	
   

40	
   

combinatory	
   categorial	
   grammar	
   

(steedman,	
   1987)	
   

       family	
   of	
   grammars	
   that	
   focus	
   on	
   func+on	
   

applica+on	
   

       id35s	
   are	
   useful	
   for	
   semancc	
   parsing	
   and	
   

parsing	
   to	
   logical	
   forms	
   

       in	
   one	
   simple	
   id35	
   instancacon,	
   there	
   are	
   only	
   

2	
   atomic	
   types:	
   nouns	
   (n)	
   and	
   sentences	
   (s)	
   

41	
   

id35	
   

       2	
   atomic	
   types:	
   nouns	
   (n)	
   and	
   sentences	
   (s)	
   
       complex	
   types	
   created	
   by	
   using	
      slash   	
   rules;	
   

think	
   of	
   these	
   as	
      funccons   :	
   
       x/y	
   =	
      something	
   that	
   combines	
   with	
   a	
   y	
   to	
   its	
   right	
   
       x\y	
   =	
      something	
   that	
   combines	
   with	
   a	
   y	
   to	
   its	
   le8	
   to	
   

to	
   form	
   an	
   x   	
   

form	
   an	
   x   	
   

       consider	
   the	
   type	
   s\n:	
   

this	
   type?	
   

       what	
   are	
   some	
   examples	
   of	
   words	
   that	
   would	
   have	
   
       that	
   is,	
   what	
   are	
   some	
   words	
   that,	
   when	
   preceded	
   by	
   
       verbs	
   like	
   sleeps,	
   ate,	
   walked	
   

a	
   noun,	
   form	
   a	
   sentence?	
   

42	
   

id35	
   
likes

m a r k
b.

other	
   id35	
   types	
   

      transicve	
   verbs:	
   likes,	
   sees,	
   ate,	
   etc	
   

this paper is intended to provide the shortest possible introduction to combinatory
categorial grammar.
       how	
   about	
   (s\n)/n?	
   

1 combinatory grammars.
in id35 (id35, steedman 1987, 1996b), as in other varieties
of categorial grammar reviewed by wood 1993 and exempli   ed in the bibli0graphy be-
low, elements like verbs are associated with a syntactic    category    which identi   es them
2
as functions, and speci   es the type and directionality of their arguments and the type of
their result. we here use the    result leftmost    notation in which a rightward-combining
(4) a. mary
functor over a domain    into a range    are written      , while the corresponding leftward-
combining functor is written      .1    and    may themselves be function categories. for
np
example, a transitive verb is a function from (object) nps into predicates   that is, into
functions from (subject) nps into s:
(1) likes := s np np
(2) forward application: (

it is important to note that such tree-structures are simply a representation of the process of
derivation. they are not structures that need to be built by a processor, nor do they provide
the input to any rules of grammar.
such categories can be regarded as encoding the semantic type of their translation, and
this translation can be made explicit in the following expanded notation, which associates
a translation with the entire syntactic category, via the colon operator, which is assumed
to have lower precedence than the categorial slash operators. (agreement features are also

these rules have the form of very general binary ps rule schemata. in fact, pure categorial

s t e e d m a n
mary
np

(3) backward application: (

pid18	
   
likes
v

musicals
np

s np np

steedman	
   (1996)	
   

musicals

y x y

x y y

s np

np

vp

x

x

s

s

)

)

43	
   

other	
   id35	
   types	
   

       how	
   about	
   n/n?	
   

      determiners,	
   adjeccves,	
   nouns	
   

44	
   

an	
   isomorphic	
   hierarchical	
   procedure:	
   

funccon	
   applicacon	
   as	
   	
   

it is important to note that such tree-structures are simply a representation of the process of
derivation. they are not structures that need to be built by a processor, nor do they provide
the input to any rules of grammar.
such categories can be regarded as encoding the semantic type of their translation, and
this translation can be made explicit in the following expanded notation, which associates
a translation with the entire syntactic category, via the colon operator, which is assumed
to have lower precedence than the categorial slash operators. (agreement features are also
included in the syntactic category, represented as subscripts, much as in bach 1983. the
feature 3s is    underspeci   ed    for gender and can combine with the more speci   ed 3sm by
a standard uni   cation mechanism that we will pass over here     cf. shieber 1986.)2
(5) likes := s np3s np : like
we must also expand the rules of functional application in the same way:
(6) forward application: (

)

(7) backward application: (

the	
   part	
   ager	
   the	
   colon	
   (:)	
   is	
   the	
      semancc   	
   component	
   

x y : f y : a

y : a x y : f

x : fa
)
x : fa

they yield derivations like the following:
(8)

mary

likes

np3sm : mary

musicals
s np3s np : like np : musicals

s np3s : like musicals

s : like musicals mary

45	
   

funccon	
   applicacon	
   as	
   	
   

an	
   isomorphic	
   hierarchical	
   procedure:	
   

this translation can be made explicit in the following expanded notation, which associates
a translation with the entire syntactic category, via the colon operator, which is assumed
to have lower precedence than the categorial slash operators. (agreement features are also
included in the syntactic category, represented as subscripts, much as in bach 1983. the
feature 3s is    underspeci   ed    for gender and can combine with the more speci   ed 3sm by
a standard uni   cation mechanism that we will pass over here     cf. shieber 1986.)2
(5) likes := s np3s np : like
we must also expand the rules of functional application in the same way:
(6) forward application: (

)

x y : f y : a

(7) backward application: (

y : a x y : f

x : fa
)
x : fa

they yield derivations like the following:
(8)

mary

likes

np3sm : mary

musicals
s np3s np : like np : musicals

s np3s : like musicals

s : like musicals mary

the derivation yields an s with a compositional interpretation, equivalent under a conven-
tion of left associativity to like musicals mary .
coordination might be included in cg via the following rule, allowing constituents of
like type to conjoin to yield a single constituent of the same type: 3

46	
   

funccon	
   applicacon	
   as	
   	
   

an	
   isomorphic	
   hierarchical	
   procedure:	
   

this translation can be made explicit in the following expanded notation, which associates
a translation with the entire syntactic category, via the colon operator, which is assumed
to have lower precedence than the categorial slash operators. (agreement features are also
included in the syntactic category, represented as subscripts, much as in bach 1983. the
feature 3s is    underspeci   ed    for gender and can combine with the more speci   ed 3sm by
a standard uni   cation mechanism that we will pass over here     cf. shieber 1986.)2
(5) likes := s np3s np : like
we must also expand the rules of functional application in the same way:
(6) forward application: (

)

x y : f y : a

(7) backward application: (

y : a x y : f

x : fa
)
x : fa

they yield derivations like the following:
(8)

mary

likes

np3sm : mary

musicals
s np3s np : like np : musicals

s np3s : like musicals

s : like musicals mary

the derivation yields an s with a compositional interpretation, equivalent under a conven-
tion of left associativity to like musicals mary .
coordination might be included in cg via the following rule, allowing constituents of
like type to conjoin to yield a single constituent of the same type: 3

47	
   

conclusions	
   

       we   ve	
   focused	
   on	
   core	
   techniques	
   in	
   this	
   

course	
   

       hope	
   is	
   that	
   you	
   can	
   now	
   understand	
   90%	
   of	
   

acl	
   papers	
   published	
   in	
   recent	
   years	
   

       we   ve	
   glossed	
   over	
   many	
   details	
   of	
   parccular	
   

nlp	
   problems	
   and	
   linguiscc	
   theories	
   
      some	
   of	
   that	
   was	
   covered	
   in	
   ttic	
   31190:	
   nlp	
   

48	
   

