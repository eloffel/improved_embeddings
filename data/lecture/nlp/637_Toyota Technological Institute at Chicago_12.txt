ttic	
   31190:	
   

natural	
   language	
   processing	
   

kevin	
   gimpel	
   
winter	
   2016	
   

	
   
	
   

lecture	
   12:	
   	
   

syntax	
   and	
   parsing	
   

1	
   

announcement	
   

       project	
   proposal	
   due	
   tuesday	
   

2	
   

announcement	
   

       midterm	
   is	
   one	
   week	
   from	
   today,	
   room	
   #530	
   
       it   ll	
   be	
   closed-     book	
   
       if	
   you	
   want,	
   you	
   can	
   bring	
   an	
   8.5x11	
   sheet,	
   

but	
   i	
   don   t	
   think	
   you   ll	
   need	
   to	
   

       on	
   tuesday	
   we	
   will	
   review	
   all	
   the	
   course	
   
material	
   and	
   go	
   through	
   some	
   example	
   
questons	
   

3	
   

o   ce	
   hours	
   next	
   week	
   

       unfortunately,	
   my	
   o   ce	
   hour	
   on	
   monday	
   

must	
   be	
   canceled	
   (eac	
   visit)	
   

       i	
   will	
   instead	
   have	
   it	
   on	
   tuesday	
   9:30-     10:30	
   

am	
   (right	
   before	
   class)	
   

       feel	
   free	
   to	
   email	
   me	
   and	
   make	
   an	
   

appointment	
   if	
   that	
   tme	
   does	
   not	
   work	
   for	
   
you	
   

4	
   

roadmap	
   

       classi   caton	
   
       words	
   
      
lexical	
   semantcs	
   
      
language	
   modeling	
   
       sequence	
   labeling	
   
       neural	
   network	
   methods	
   in	
   nlp	
   
       syntax	
   and	
   syntactc	
   parsing	
   
       semantc	
   compositonality	
   
       semantc	
   parsing	
   
       unsupervised	
   learning	
   
       machine	
   translaton	
   and	
   other	
   applicatons	
   

5	
   

what	
   is	
   syntax?	
   

       rules,	
   principles,	
   processes	
   that	
   govern	
   

sentence	
   structure	
   of	
   a	
   language	
   
       can	
   di   er	
   widely	
   among	
   languages	
   
       but	
   every	
   language	
   has	
   systematc	
   structural	
   

principles	
   

6	
   

subject,	
   verb,	
   object	
   

       syntax	
   determines	
   the	
   ordering	
   of	
   these	
   three	
   

objects	
   in	
   a	
   sentence	
   

7	
   

yodish	
   

       oden	
   (though	
   certainly	
   not	
   always)	
   yoda	
   uses	
   

object-     subject-     verb	
   order	
   

   powerful	
   you	
   have	
   become.	
   
the	
   dark	
   side	
   i	
   sense	
   in	
   you.   	
   	
   

8	
   

grammars	
   

       we	
   will	
   use	
   grammar	
   to	
   denote	
   a	
   formal	
   

object	
   that	
   represents	
   the	
   rules/principles/
processes	
   that	
   determine	
   sentence	
   structure	
   

9	
   

phrase	
   structure	
   /	
   consttuent	
   grammar	
   

       focuses	
   on	
   the	
   cons)tuent	
   relaton	
   
      
       a	
   sentence	
   is	
   made	
   up	
   of	
   two	
   pieces:	
   

informally:	
      sentences	
   have	
   hierarchical	
   structure   	
   

       subject,	
   typically	
   a	
   noun	
   phrase	
   (np)	
   
       predicate,	
   typically	
   a	
   verb	
   phrase	
   (vp)	
   

       nps	
   and	
   vps	
   are	
   in	
   turn	
   made	
   of	
   up	
   of	
   pieces:	
   

       old	
   books	
   =	
   (old	
   +	
   books)	
   
       the	
   old	
   books	
   =	
   (the	
   +	
   (old	
   +	
   books))	
   
       walked	
   to	
   the	
   park	
   =	
   (walked	
   +	
   (to	
   +	
   (the	
   +	
   park)))	
   

       each	
   parenthesized	
   phrase	
   is	
   a	
   cons)tuent	
   in	
   the	
   

cons)tuent	
   parse	
   

10	
   

bracketng	
   

       consttuent	
   parse	
   =	
   bracke)ng	
   (that	
   
represents	
   the	
   hierarchical	
   structure)	
   

       e.g.,	
   sentence:	
   
the	
   man	
   walked	
   to	
   the	
   park	
   
       bracketng:	
   
((the	
   man)	
   (walked	
   (to	
   (the	
   park))))	
   
	
   

11	
   

bracketng	
        	
   tree	
   

((the	
   man)	
   (walked	
   (to	
   (the	
   park))))	
   
we	
   oden	
   draw	
   the	
   bracketng	
   as	
   a	
   tree:	
   

the	
   man	
   walked	
   to	
   the	
   park	
   

12	
   

labeled	
   bracketngs/trees	
   

(s	
   (np	
   the	
   man)	
   (vp	
   walked	
   (pp	
   to	
   (np	
   the	
   park))))	
   

s	
   

np	
   

vp	
   

pp	
   

np	
   

key:	
   
s	
   =	
   sentence	
   
np	
   =	
   noun	
   phrase	
   
vp	
   =	
   verb	
   phrase	
   
pp	
   =	
   prepositonal	
   phrase	
   
	
   

the	
   man	
   walked	
   to	
   the	
   park	
   

13	
   

labeled	
   bracketngs/trees	
   

(s	
   (np	
   the	
   man)	
   (vp	
   walked	
   (pp	
   to	
   (np	
   the	
   park))))	
   

s	
   

np	
   

vp	
   

pp	
   

np	
   

dt	
    nn	
   
vbd	
   	
   	
   	
   	
   	
   in	
   	
   	
   	
   dt	
   	
   	
   	
   nn	
   
the	
   man	
   walked	
   to	
   the	
   park	
   

key:	
   
s	
   =	
   sentence	
   
np	
   =	
   noun	
   phrase	
   
vp	
   =	
   verb	
   phrase	
   
pp	
   =	
   prepositonal	
   phrase	
   
dt	
   =	
   determiner	
   
nn	
   =	
   noun	
   
vbd	
   =	
   verb	
   (past	
   tense)	
   
in	
   =	
   prepositon	
   
	
   

14	
   

labeled	
   bracketngs/trees	
   

(s	
   (np	
   the	
   man)	
   (vp	
   walked	
   (pp	
   to	
   (np	
   the	
   park))))	
   

s	
   

np	
   

vp	
   

pp	
   

np	
   

nonterminals	
   

dt	
    nn	
   
the	
   man	
   walked	
   to	
   the	
   park	
   

vbd	
   	
   	
   	
   	
   	
   in	
   	
   	
   	
   dt	
   	
   	
   	
   nn	
    preterminals	
   

terminals	
   

15	
   

penn	
   

treebank	
   
tag	
   set	
   

16	
   

penn	
   treebank	
   nonterminals	
   

17	
   

syntactc	
   ambiguites	
   

time	
      ies	
   like	
   an	
   arrow.	
   
fruit	
      ies	
   like	
   a	
   banana.	
   

18	
   

amachment	
   ambiguity	
   

19	
   

syntactc	
   ambiguites	
   

       pp	
   amachment	
   ambiguity	
   
       coordinaton	
   ambiguity	
   
       noun	
   compound	
   ambiguity	
   

20	
   

amachment	
   ambiguity	
   

21	
   

coordinaton	
   ambiguites	
   

       oden	
   found	
   when	
   modi   ers	
   are	
   used	
   with	
   

conjunctons:	
   
keyboard	
   and	
   monitor	
   with	
   the	
   apple	
   logo	
   
old	
   men	
   and	
   women	
   

22	
   

coordinaton	
   ambiguites	
   

       oden	
   found	
   when	
   modi   ers	
   are	
   used	
   with	
   

conjunctons:	
   
(keyboard	
   and	
   monitor)	
   with	
   the	
   apple	
   logo	
   
keyboard	
   and	
   (monitor	
   with	
   the	
   apple	
   logo)	
   
	
   
old	
   (men	
   and	
   women)	
   
(old	
   men)	
   and	
   women	
   

23	
   

other	
   amachment	
   ambiguites	
   

infant	
   pulled	
   from	
   car	
   involved	
   in	
   short	
   police	
   pursuit	
   

somali	
   ted	
   to	
   militants	
   held	
   on	
   u.s.	
   ship	
   for	
   months	
   

24	
   

other	
   amachment	
   ambiguites	
   

(infant	
   pulled	
   from	
   car)	
   involved	
   in	
   short	
   police	
   pursuit	
   
infant	
   pulled	
   from	
   (car	
   involved	
   in	
   short	
   police	
   pursuit)	
   
	
   
	
   
(somali	
   ted	
   to	
   militants)	
   held	
   on	
   u.s.	
   ship	
   for	
   months	
   
somali	
   ted	
   to	
   (militants	
   held	
   on	
   u.s.	
   ship	
   for	
   months)	
   

25	
   

nlp	
   task:	
   consttuent	
   parsing	
   

       given	
   a	
   sentence,	
   output	
   its	
   consttuent	
   parse	
   
       widely-     studied	
   task	
   with	
   a	
   rich	
   history	
   
       most	
   based	
   on	
   the	
   penn	
   treebank	
   (marcus	
   et	
   al.),	
   

developed	
   at	
   penn	
   in	
   early	
   1990s	
   

       treebank	
   =	
      corpus	
   of	
   annotated	
   parse	
   trees   	
   

26	
   

context-     free	
   grammar	
   (id18)	
   

       has	
      rewrite	
   rules   	
   to	
   rewrite	
   nonterminals	
   as	
   

terminals	
   or	
   other	
   nonterminals	
   
s	
        	
   np	
   	
   vp	
   
   s	
   goes	
   to	
   np	
   	
   vp   	
   
np	
        	
   dt	
   	
   nn	
   
vp	
        	
   vbd	
   	
   pp	
   
pp	
        	
   in	
   	
   np	
   
nn	
        	
   man	
   
dt	
        	
   the	
   

27	
   

context-     free	
   grammar	
   (id18)	
   

       sequence	
   of	
   rewrites	
   corresponds	
   to	
   a	
   

bracketng	
   (induces	
   a	
   hierarchical	
   tree	
   structure)	
   

s	
   

s	
        	
   np	
   	
   vp	
   

np	
   

np	
        	
   dt	
   	
   nn	
   

vp	
   

vp	
        	
   vbd	
   pp	
   
pp	
   

np	
   

dt	
        	
   the	
   

dt	
    nn	
   
vbd	
   	
   	
   	
   	
   	
   in	
   	
   	
   	
   dt	
   	
   	
   	
   nn	
   
the	
   man	
   walked	
   to	
   the	
   park	
   

28	
   

why	
      context-     free   ?	
   

       a	
   rule	
   to	
   rewrite	
   np	
   does	
   not	
   depend	
   on	
   the	
   

context	
   of	
   np	
   

       that	
   is,	
   the	
   led-     hand	
   side	
   of	
   a	
   rule	
   is	
   only	
   a	
   

single	
   non-     terminal	
   (without	
   any	
   other	
   
context)	
   

29	
   

probabilistc	
   context-     free	
   grammar	
   (pid18)	
   
       assign	
   probabilites	
   to	
   rewrite	
   rules:	
   

np	
        	
   dt	
   	
   nn 	
   0.5	
   
	
   0.3	
   
np	
        	
   nns 	
   
np	
        	
   np	
   	
   pp 	
   0.2	
   

same	
   nonterminal	
   can	
   be	
   on	
   both	
   led	
   and	
   right	
   sides	
   

30	
   

probabilistc	
   context-     free	
   grammar	
   (pid18)	
   
       assign	
   probabilites	
   to	
   rewrite	
   rules:	
   

np	
        	
   dt	
   	
   nn 	
   0.5	
   
	
   0.3	
   
np	
        	
   nns 	
   
np	
        	
   np	
   	
   pp 	
   0.2	
   
	
   
probabilites	
   must	
   sum	
   to	
   one	
   for	
   each	
   led-     hand	
   
side	
   nonterminal	
   

31	
   

probabilistc	
   context-     free	
   grammar	
   (pid18)	
   
       assign	
   probabilites	
   to	
   rewrite	
   rules:	
   

np	
        	
   dt	
   	
   nn 	
   0.5	
   
	
   0.3	
   
np	
        	
   nns 	
   
np	
        	
   np	
   	
   pp 	
   0.2	
   
	
   
nn	
        	
   man 	
   
nn	
        	
   park 	
   
nn	
        	
   walk 	
   
nn	
        	
      .	
   

	
   0.01	
   
	
   0.0004	
   
	
   0.002	
   

given	
   a	
   treebank,	
   we	
   can	
   
estmate	
   these	
   probabilites	
   
using	
   maximum	
   likelihood	
   
estmaton	
   (   relatve	
   frequency	
   
estmates   ;	
      count	
   and	
   
normalize   ),	
   
just	
   like	
   we	
   did	
   with	
   n-     gram	
   
language	
   models	
   and	
   id48s	
   for	
   
pos	
   tagging	
   

32	
   

probabilistc	
   context-     free	
   grammar	
   (pid18)	
   
       for	
   each	
   nonterminal,	
   a	
   pid18	
   has	
   a	
   id203	
   

distributon	
   over	
   possible	
   right-     hand	
   side	
   
sequences	
   

       so,	
   a	
   pid18	
   assigns	
   probabilites	
   to:	
   

       bracketngs	
   of	
   sentences	
   
       sequences	
   of	
   rewrite	
   operatons	
   (deriva)ons)	
   that	
   

eventually	
   terminate	
   in	
   terminals	
   

       hierarchical	
   tree	
   structures	
   that	
   ground	
   out	
   in	
   

sequences	
   of	
   terminals	
   

       these	
   are	
   di   erent	
   ways	
   of	
   saying	
   the	
   same	
   thing	
   

33	
   

consttuent	
   parsing	
   

       evaluaton:	
   evalb	
   score	
   

         rst	
   compute	
   precision	
   and	
   recall	
   (at	
   the	
   level	
   of	
   
consttuents)	
   
      then	
   compute	
   f1	
   (harmonic	
   mean	
   of	
   precision	
   
and	
   recall)	
   

34	
   

how	
   well	
   does	
   a	
   pid18	
   work?	
   

       a	
   pid18	
   learned	
   from	
   the	
   penn	
   treebank	
   with	
   

maximum	
   likelihood	
   estmaton	
   (count	
   &	
   
normalize)	
   gets	
   about	
   73%	
   f1	
   score	
   

       state-     of-     the-     art	
   parsers	
   are	
   around	
   92%	
   

35	
   

how	
   well	
   does	
   a	
   pid18	
   work?	
   

       a	
   pid18	
   learned	
   from	
   the	
   penn	
   treebank	
   with	
   

maximum	
   likelihood	
   estmaton	
   (count	
   &	
   
normalize)	
   gets	
   about	
   73%	
   f1	
   score	
   

       state-     of-     the-     art	
   parsers	
   are	
   around	
   92%	
   
       but,	
   simple	
   modi   catons	
   can	
   improve	
   the	
   

pid18	
   a	
   lot!	
   
      smoothing	
   
      tree	
   transformatons	
   (selectve	
      amening)	
   
         parent	
   annotaton   	
   

36	
   

parent	
   annotaton	
   

vp	
        	
   v	
   	
   np	
   	
   pp	
   
	
   
	
   
vps	
        	
   v	
   	
   npvp	
   	
   ppvp	
   
	
   
adds	
   more	
   informaton,	
   but	
   also	
   fragments	
   
counts,	
   making	
   parameter	
   estmates	
   noisier	
   
(since	
   we   re	
   just	
   using	
   id113)	
   

37	
   

johnson	
   (1998)	
   

38	
   

johnson	
   (1998)	
   

39	
   

classi   caton	
   framework	
   for	
   consttuent	
   parsing	
   

id136:	
   solve	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   	
   _	
   	
   

modeling:	
   de   ne	
   	
   score	
   functon	
   

learning:	
   choose	
   _	
   	
   	
   

       x	
   =	
   a	
   sentence	
   
       y	
   =	
   a	
   consttuent	
   parse	
   
       id136	
   requires	
   searching	
   all	
   possible	
   
       this	
   is	
   very	
   expensive	
   due	
   to	
   large	
   training	
   sets	
   

consttuent	
   parses!	
   

40	
   

how	
   are	
   consttuent	
   parses	
   used?	
   

       predict	
   the	
   next	
   word	
   bemer	
   by	
   using	
   syntactc	
   

       language	
   modeling	
   

structure	
   

       machine	
   translaton	
   

       there	
   are	
   many	
   syntactc	
   translaton	
   models	
   that	
   

require	
   parsers	
   for	
   one	
   or	
   both	
   languages	
   

       text	
   classi   caton	
   

       for	
   certain	
   kinds	
   of	
   classi   caton,	
   features	
   on	
   syntactc	
   

fragments	
   can	
   help	
   

       queston	
   answering,	
   coreference	
   resoluton,	
   etc.	
   

41	
   

recursive	
   neural	
   networks	
   for	
   nlp	
   

          rst,	
   run	
   a	
   consttuent	
   parser	
   on	
   the	
   sentence	
   
       convert	
   the	
   consttuent	
   tree	
   to	
   a	
   binary	
   tree	
   

(each	
   rewrite	
   has	
   exactly	
   two	
   children)	
   

       construct	
   vector	
   for	
   sentence	
   recursively	
   at	
   

each	
   rewrite	
   (   split	
   point   ):	
   	
   

42	
   

recursive	
   neural	
   networks	
   for	
   nlp	
   

43	
   

recursive	
   neural	
   networks	
   for	
   nlp	
   

44	
   

