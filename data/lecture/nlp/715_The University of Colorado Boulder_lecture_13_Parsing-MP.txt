 

natural language 

processing 

 

lecture 13   2/26/2015 

martha palmer 

 
 

today 

!    start on parsing 

!    top-down vs. bottom-up 

2/26/15 

                                         speech and language processing - jurafsky and martin        

2 

summary 

!    context-free grammars can be used to model 
various facts about the syntax of a language. 
!    when paired with parsers, such grammars 

consititute a critical component in many 
applications. 

!    constituency is a key phenomena easily 

captured with id18 rules. 
!    but agreement and subcategorization do pose 

significant problems 

!    treebanks pair sentences in a corpus with their 

corresponding trees. 

 

2/26/15 

                                         speech and language processing - jurafsky and martin        

3 

parsing 

!    parsing with id18s refers to the task of 
assigning proper trees to input strings 

!    proper here means a tree that covers all 
and only the elements of the input and 
has an s at the top 

!    it doesn   t actually mean that the system 
can select the correct tree from among all 
the possible trees 

2/26/15 

                                         speech and language processing - jurafsky and martin        

4 

automatic syntactic parse 

for now 

!    assume    

!    you have all the words already in some buffer 
!    the input is not pos tagged prior to parsing 
!    we won   t worry about morphological analysis 
!    all the words are known 

!    these are all problematic in various ways, 
and would have to be addressed in real 
applications. 

2/26/15 

                                         speech and language processing - jurafsky and martin        

6 

top-down search 

!    since we   re trying to find trees rooted 

with an s (sentences), why not start with 
the rules that give us an s. 

!    then we can work our way down from 

there to the words. 

2/26/15 

                                         speech and language processing - jurafsky and martin        

7 

top down space 

2/26/15 

                                         speech and language processing - jurafsky and martin        

8 

bottom-up parsing 

!    of course, we also want trees that cover 
the input words. so we might also start 
with trees that link up with the words in 
the right way. 

!    then work your way up from there to 

larger and larger trees. 

2/26/15 

                                         speech and language processing - jurafsky and martin        

9 

bottom-up search 

2/26/15 

                                         speech and language processing - jurafsky and martin        

10 

bottom-up search 

2/26/15 

                                         speech and language processing - jurafsky and martin        

11 

bottom-up search 

2/26/15 

                                         speech and language processing - jurafsky and martin        

12 

bottom-up search  

2/26/15 

                                         speech and language processing - jurafsky and martin        

13 

bottom-up search 

2/26/15 

                                         speech and language processing - jurafsky and martin        

14 

control 

!    of course, in both cases we left out how 
to keep track of the search space and how 
to make choices 
!    which node to try to expand next 
!    which grammar rule to use to expand a node 

!    one approach is called backtracking. 
!    make a choice, if it works out then fine 
!    if not then back up and make a different 
choice 
!    same as with nd-recognize 

2/26/15 

                                         speech and language processing - jurafsky and martin        

15 

problems 

!    even with the best filtering, backtracking 

methods are doomed because of two 
inter-related problems 
!    ambiguity and search control (choice) 
!    shared subproblems 

2/26/15 

                                         speech and language processing - jurafsky and martin        

16 

ambiguity 

2/26/15 

                                         speech and language processing - jurafsky and martin        

17 

structural ambiguities 

!    its very important to separate pp   s that 

are part of the verb subcategorization 
frame from pp   s that modify the entire 
event. 

 

!    the man saw the woman on the hill with the 
telescope. 

woman has telescope 

 
!    the man saw the woman on the hill with the 
telescope. 

18 

man has telescope 

shared sub-problems 

!    no matter what kind of search (top-down 
or bottom-up or mixed) that we choose... 
!    we can   t afford to redo work we   ve already 
done. 
!    without some help na  ve backtracking will 
lead to such duplicated work. 

2/26/15 

                                         speech and language processing - jurafsky and martin        

19 

sample l1 grammar 

2/26/15 

                                         speech and language processing - jurafsky and martin        

20 

state space representations: 
recursive transition nets  

s 

np 

s1 

s4 

np 

det 

noun 

s2 

s5 

pronoun 

vp 

noun 
adj 

s3 

s6 

pp 

!    s :- np,vp. 
!    np:- pronoun; noun; det,adj, noun; np,pp. 

np 

cse391     
2005 

                                    nlp 
 

21 

state space representations: 
recursive transition nets, cont.  

vp 

s13 

vp 

v 

pp 

np 

s14 

vp 

s7 

aux 

s8 

np 

s9 

pp 

s12 

s11 

np 

np 

s10 

v 
!    vp:- vp, pp. 
!    vp:- v; v,np; v,np,np; v,np,pp. 

v 

cse391     
2005 

                                    nlp 
 

22 

s1 

parses 

the cat sat on the mat 
 
s1: s       np, vp 

s 

np 

vp 

23 

s1 

s2 

parses 

the cat sat on the mat 
 
s1: s       np, vp 
s2: np     det, n 

s 

vp 

np 

n 
cat 

det 
the 

24 

s1 

s2 

parses 

the cat sat on the mat 
 
s1: s       np, vp 
s2: np     det, n 
s3: vp     v 

s3 

det 
the 

s 

np 

n 
cat 

v 
sat 

vp 

25 

s3 

s4 

det 
the 

s1 

s2 

parses 

s 

np 

the cat sat on the mat 
 
s1: s       np, vp 
s2: np     det, n 
s3: vp     v 
s4: vp     vp, pp 

vp 

n 
cat 

v 
sat 

prep 
on 

pp 

det 
the 

np 

n 
mat 

26 

multiple parses for a single 

sentence  

np 

n 
time 

s 

v 
flies 

vp 

time flies like an arrow. 

pp 

prep 
like 

np 

det 
an 

n 

arrow 

                                    nlp 
 

27 

multiple parses for a single 

sentence 

s 

v 
like 

n 
time 

np 

n 
flies 

time flies like an arrow. 

vp 

det 
an 

np 

n 

arrow 

                                    nlp 
 

28 

   

  noun(cat). 
  noun(mat). 
  det(the).   
  det(a). 
  verb(sat). 
  prep(on). 
 

lexicon 

  noun(flies). 
  noun(time). 
  noun(arrow). 
  det(an). 
  verb(flies). 
  verb(time). 
  prep(like). 

cse391     
2005 

                                    nlp 
 

29 

   

lexicon with roots 
noun(flies,fly). 
noun(time,time). 
noun(arrow,arrow). 
det(an,an). 
verb(flies,fly). 
verb(time,time). 
prep(like,like). 

noun(cat,cat). 
noun(mat,mat). 
det(the,the) 
det(a,a). 
verb(sat,sit). 
prep(on,on). 
 

cse391     
2005 

                                    nlp 
 

30 

parses 

s 

np 

det 
the 

adj 
old 

n 
can 

aux 
can 

v 
hold 

the old can can hold the water. 

vp 

np 

det 
the 

n 

water 

cse391     
2005 

                                    nlp 
 

31 

structural ambiguities 

!    that factory can can tuna. 

!    that factory cans cans of tuna and salmon. 

cse391     
2005 

                                    nlp 
 

32 

lexicon 

the old can can hold the water. 

   noun(can,can) 
noun(cans,can) 
noun(water,water) 
noun(hold,hold) 
noun(holds,hold) 
det(the,the) 

cse391     
2005 

                                    nlp 
 

verb(hold,hold) 
verb(holds,hold) 
verb(can, can) 
aux(can,can) 
adj(old,old) 
noun(old, old) 
 
 

33 

simple id18 in 

bnf 

s  
np 
 
 
 
pp 
v  
 
vp 
 
 
 
 

     
     
 
 
 
     
     
 
     
 
 
 
 

 np vp 
 pronoun  
 | noun  
 | det adj noun  
 |np pp  
 prep np 
 verb  
 | aux verb 
 v 
 | v np  
 | v np np  
 | v np pp  
 | vp pp 

                                    nlp 
 

34 

top-down parse in progress 

[the, old, can, can, hold, the, water] 

 

s     np vp  

                             

      np     np?  
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 
 
 succeed. 
 vp? 

 
 
 

 pronoun? fail    

 noun? fail 

 np     pronoun? 
 
 np     noun? 
 
 np     det adj noun?
 
  
 
 succeed. 

 det? the 
 adj?old
 

 

 noun? can 

 
cse391     
2005 

  

     

 

 

     

                                    nlp 
 

35 

top-down parse in progress 

[can, hold, the, water] 

vp     vp?  

 
 
 
 
 
 

 v     verb? 
 verb? fail 
 
 v      aux verb? 
 aux? can 
 
 
 verb? hold 
 succeed 

succeed 
fail

  [the, water] 

cse391     
2005 

                                    nlp 
 

36 

top-down parse in progress 

[can, hold, the, water] 

 verb? fail 

 vp     v np?  
 
 
 
 
 
 
 
 
 
 
 
 
 succeed 

 v     verb? 
 
 v      aux verb? 
 
 aux? can 
 
 verb? hold 
 np       pronoun? 
 
 np       noun? 
 
 np       det adj noun?   
 det? the 
 
 
 noun? water 

 pronoun?  fail 

 noun? fail 

 
 

succeed 
 

cse391     
2005 

                                    nlp 
 

37 

top-down approach 

!    start with goal of sentence  

s     np vp 
s     wh-word aux np vp 

!    will try to find an np 4 different ways 
before trying a parse where the verb 
comes first. 

!    what would be better? 

cse391     
2005 

                                    nlp 
 

38 

bottom-up approach 

!    start with words in sentence. 

!    what structures do they correspond to? 

!    once a structure is built, kept on a 

chart. 

 

cse391     
2005 

                                    nlp 
 

39 

bottom-up parse in progress 

det   adj      noun     aux      verb     det       noun. 
the   old       can      can       hold     the       water. 

det   noun    aux/verb  noun/verb  noun    det  noun.  

40 

bottom-up parse in progress 

s 

np 

vp 

np 

v 

det   adj      noun     aux      verb     det       noun. 
the   old       can      can       hold     the       water. 

det   noun    aux/verb  noun/verb  noun    det  noun.  

np 

vp 

v 

np 

np 

s 

vp 

bottom-up parse in progress     
what is  wrong w/ bottom parse? 

det   adj      noun     aux      verb     det       noun. 
the   old       can      can       hold     the       water. 

det   noun    aux/verb  noun/verb  noun    det  noun/verb.  

                                    
nlp 

42 

bottom-up parse, corrected 

the   old       can      can       hold     the       water. 

det   noun            verb  noun        noun    det  noun/verb.  

v 

np 

np 

np 

vp 

s 

                                    
nlp 

43 

headlines 

!    police begin campaign to run down jaywalkers 

!    iraqi head seeks arms 

!    teacher strikes idle kids 

!    miners refuse to work after death 

!    juvenile court to try shooting defendant 

44 

                                    
nlp 

headlines 
!    drunk gets nine months in violin case 

!    enraged cow injures farmer with ax 

!    hospitals are sued by 7 foot doctors 

!    milk drinkers turn to powder 

!    lung cancer in women mushrooms 

45 

                                    
nlp 

top-down vs. bottom-up 

!    helps with pos 

ambiguities     only 
consider relevant 
pos 

!    rebuilds the same 
structure repeatedly 
!    spends a lot of time 
on impossible parses 
(trees that are not 
consistent with any of 
the words) 

!    has to consider every 

pos 

!    builds each structure 

once 

!    spends a lot of time on 
useless structures (trees 
that make no sense 
globally) 

what would be better? 

                                    
nlp 

46 

