lecture 18: 

id14 &

id29

kai-wei chang

cs @ university of virginia

kw@kwchang.net

couse webpage: http://kwchang.net/teaching/nlp16

cs6501-nlp

1

computational semantics

v many high-level applications

v id53
v information extraction
v internet bots
v siri/cortana/alexa/google  now
v translation

v shallow vs. deep semantics

v cheap, fast, low-level techniques v.s. 

computational expensive, high-level techniques

cs6501-nlp

2

semantic roles

v predicates: some words represent events
v arguments: specific roles that involves in 

the event
v propbank

several	other	alternative	role	lexicons

cs6501-nlp

3

http://cogcomp.cs.illinois.edu/page/demo_view/srl

semantic roles
his	father	would	come	upstairs	and	stand	self-consciously
at	the	foot	of	the	bed	and	look	at	his	son.

cs6501-nlp

4

semantic role labelling

v give a sentence, identify predicate frames 

and annotate semantic roles

cs6501-nlp

5

role identification

we	can	model	it	as	multi-class	classification

cs6501-nlp

6

role labeling

conduct	constrained	id136

cs6501-nlp

7

id29

v motivation: programming language 

v what is the meaning of 3+5*6

examples	from	chris	manning   s	nlp	course

cs6501-nlp

8

id29

v more complex meaning

v 3+5*x: we don   t know x at the compile time

v    meaning    at a node

is a piece of code

v form is    rule-to-rule   

translation

we	provide	a	way	to	form	the	semantics	from	bottom-up

cs6501-nlp

9

id29

v parse a natural language narrative to a 

machine readable format
v logic form:

       x.smoke(x)   snore(x)
smoke(john)     snore(john)

john smokes.       everyone who smokes snores.   

v equations:

maria is now four times as old as kate. four years ago, 
maria was six times as old as kate. find their ages now.

m = 4    n          m     4 = 6    (n     4) 

cs6501-nlp

10

logic

v boolean: semantic values of sentences
v entities: e.g., objects, times, etc.
v function of various types

a function returning a boolean called    predicate   
e.g., green (x)
function can return other functions or take functions 
as arguments

cs6501-nlp

11

logic:      terms
v     terms:
square =     x x*x, square(3) = 3*3
even =     x (x mod 2 == 0)       a predicate
    	x.[    	y.times(x,y)]

v can take multiple arguments:

cs6501-nlp

12

parse tree with associated semantics

cs6501-nlp

13

cs6501-nlp

14

paper presentations

v we will learn recent nlp research

v techniques and applications

v go to collab   	select peer grading

v peer review

cs6501-nlp

15

