lecture 5: morphology

kai-wei chang

cs @ university of virginia

kw@kwchang.net

couse webpage: http://kwchang.net/teaching/nlp16

6501 natural language processing

1

this lecture

v what is the structure of words?
v can we build an analyzer to model the 

structure of words?
v finite-state automata and regular expression

6501 natural language processing

2

words

vfinite-state methods are particularly 

useful in dealing with a lexicon
vcompact representations of words

vagenda

vsome facts about words
vcomputational methods

6501 natural language processing

3

a turkish word

v how about english?

example	from	julia	hockenmaier,	 intro	to	nlp

6501 natural language processing

4

longest word in english

v longest word in shakespeare   s
honorificabilitudinitatibus (27 letters)

v longest non-technical  word:

antidisestablishmentarianism (28 letters)
v longest word in a major dictionary

pneumonoultramicroscopicsilicovolcanoconiosis (45 letters)

v longest word in literature

lopadotemachoselachogaleokranioleipsano...pterygon (182   
letters)     ancient greek id68

v methionylthreonylthreonylglutaminylarginyl...isoleucine  (189,819 

letters)      chemical name of a protein

6501 natural language processing

5

what is morphology?

v the ways that words are built up from 
smaller meaningful units (morphemes)

v two classes of morphemes

v stems: the core meaning-bearing units
v affixes: adhere to stems to change their 

meanings and grammatical functions 

v e.g,. dis-grace-ful-ly

6501 natural language processing

6

inflection morphology

create different forms of the same word:
v examples:

v verbs: walk, walked, walks
v nouns: book, books, book   s 
v personal pronouns: he, she, her, them, us 

v serves a grammatical/semantic purpose 

that is different from the original but is 
transparently related to the original 

6501 natural language processing

7

derivational morphology

create different words from the same lemma:
v nominalization:

v v+ -ation: e.g., computerization
v v+er: killer
v negation:

v un-: unod, unseen,    
v mis-: mistake, misunderstand ...

v adjectivization:
v v+-able: doable
v n+-al: national

6501 natural language processing

8

what else?

v combines words into a new word:

v cream, ice cream, ice cream cone, ice cream 

cone bakery

v word formation is productive

v google, googler, to google, to misgoogle, to 

googlefy, googlification

v google map, google book,    

6501 natural language processing

9

morphological parsing and generation 

v morphological parsing:

v morphological generation

v what words can be generated  from grace?

grace, graceful, gracefully, disgrace, ungrace, 
undisgraceful, undisgracefully

6501 natural language processing

10

finite state automata

v fsa and regular expression has the same 

expressive power

v the above fsa accepts string r/baa+!/

6501 natural language processing

11

finite state automata

v terminology: 
v it has 5 states
v alphabet: {b, a, !}

v start state:     "
v accept state:     #

v 5 transitions

alphabet	just	means	a	finite	
set	of	symbols	in	the	input

can	have	many	accept	states

v are there other machines that correspond to the 

same language r/baa+!/ ? 
v yes

6501 natural language processing

12

formal definition

v you can specify an fsa by enumerating 

the following things.
v the set of states: q
v a finite alphabet:   
v a start state
v a set of accept/final states
v a transition function that maps qx   to q

6501 natural language processing

13

example -- dollars and cents

6501 natural language processing

14

yet another view     table representation

b a
1

2
2,3

!

e

4

0
1
2
3
4

if	you   re	in	state	1	
and	you   re	looking	at	
an	a,	go	to	state	2

6501 natural language processing

15

non-deterministic fsa

v    - transition

v more than one possible next states
v equivalent to deterministic fsa

6501 natural language processing

16

regular expression 

v equivalent to fsa
v matching strings with id157 

(e.g., perl, python, grep)
v translating the regular expression into a machine (a 

table) and 

v passing the table and the string to an interpreter

6501 natural language processing

17

model morphology with fsa

v regular singular nouns are ok
v regular plural nouns have an -s on the end
v irregulars are ok as is

6501 natural language processing

18

now plug in the words

6501 natural language processing

19

derivational rules

6501 natural language processing

20

from recognition to parsing

v now we can use these machines to 

recognize strings

v can we use the machines to assign a 

structure to a string? (parsing)

v example:

v from    cats    to    cat +n +p   

6501 natural language processing

21

transitions 

c:c

a:a

t:t

  : +n

s: +p

v c:c reads a c and write a c
v  :+n reads nothing and write +n

6501 natural language processing

22

challenge: ambiguity

v books: book +n +p or book +v +z (3rd

person)

v non-deterministic fsa: allows multiple 

paths through a machine lead to the same 
accept state

v bias the search (or learn) so that a few 

likely paths are explored

6501 natural language processing

23

challenge: spelling rules

v the underlying morphemes (e.g., plural-s)

can have different surface realization (-s, -es)
v cat+s = cats
v fox+s = foxes
v make+ing = making

v how can we model it?

6501 natural language processing

24

intermediate representation

6501 natural language processing

25

overall scheme

v one fst that has explicit information

about the lexicon
v lexical level to intermediate forms

v large set of machines

that capture spelling rules
v intermediate forms to surface

6501 natural language processing

26

lexical to intermediate level

6501 natural language processing

27

intermediate level to surface

v example: fox^s#    foxes#

v the add and    e    rule for    s

6501 natural language processing

28

other application of fst

v eliza: https://en.wikipedia.org/wiki/eliza
v implemented using pattern matching -- fst

6501 natural language processing

29

eliza as a fst cascade

human: you don't argue with me.
computer: why do you think i don't argue 
with you

a simple rule:

v 1. replace you with i and me with you:

i don't argue with you.

v 2. replace <...> with why do you think <...>:

why do you think i don't argue with you.

6501 natural language processing

30

what about compounds?

v compounds have heretical structure:

v (((ice cream) cone) bakery) not 

(ice ((cream cone) bakery))

v ((computer science) (graduate student)) not 

(computer ((science graduate) student))

v we need context-free grammars to capture

this underlying structure

6501 natural language processing

31

