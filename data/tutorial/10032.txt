a neural attention model for abstractive sentence summarization

alexander m. rush
facebook ai research /

harvard seas

srush@seas.harvard.edu

sumit chopra

facebook ai research

spchopra@fb.com

jason weston

facebook ai research

jase@fb.com

5
1
0
2

 

p
e
s
3

 

 
 
]
l
c
.
s
c
[
 
 

2
v
5
8
6
0
0

.

9
0
5
1
:
v
i
x
r
a

abstract

summarization based on text extraction is
inherently limited, but generation-style ab-
stractive methods have proven challeng-
ing to build.
in this work, we propose
a fully data-driven approach to abstrac-
tive sentence summarization. our method
utilizes a local attention-based model that
generates each word of the summary con-
ditioned on the input sentence. while the
model is structurally simple, it can eas-
ily be trained end-to-end and scales to a
large amount of training data. the model
shows signi   cant performance gains on
the duc-2004 shared task compared with
several strong baselines.

1

introduction

summarization is an important challenge of natu-
ral language understanding. the aim is to produce
a condensed representation of an input text that
captures the core meaning of the original. most
successful summarization systems utilize extrac-
tive approaches that crop out and stitch together
portions of the text to produce a condensed ver-
in contrast, abstractive summarization at-
sion.
tempts to produce a bottom-up summary, aspects
of which may not appear as part of the original.

we focus on the task of sentence-level sum-
marization. while much work on this task has
looked at deletion-based sentence compression
techniques (knight and marcu (2002), among
many others), studies of human summarizers show
that it is common to apply various other operations
while condensing, such as id141, general-
ization, and reordering (jing, 2002). past work
has modeled this abstractive summarization prob-
lem either using linguistically-inspired constraints
(dorr et al., 2003; zajic et al., 2004) or with syn-
tactic transformations of the input text (cohn and

figure 1: example output of the attention-based summa-
rization (abs) system. the heatmap represents a soft align-
ment between the input (right) and the generated summary
(top). the columns represent the distribution over the input
after generating each word.

lapata, 2008; woodsend et al., 2010). these ap-
proaches are described in more detail in section 6.
we instead explore a fully data-driven approach
for generating abstractive summaries. inspired by
the recent success of id4,
we combine a neural language model with a con-
textual input encoder. our encoder is modeled
off of the attention-based encoder of bahdanau et
al. (2014) in that it learns a latent soft alignment
over the input text to help inform the summary (as
shown in figure 1). crucially both the encoder
and the generation model are trained jointly on the
sentence summarization task. the model is de-
scribed in detail in section 3. our model also in-
corporates a beam-search decoder as well as addi-
tional features to model extractive elements; these
aspects are discussed in sections 4 and 5.

this approach to summarization, which we call
attention-based summarization (abs), incorpo-
rates less linguistic structure than comparable ab-
stractive summarization approaches, but can easily

input (x1, . . . , x18). first sentence of article:
russian defense minister ivanov called sunday for the creation of a joint front for combating global terrorism
output (y1, . . . , y8). generated headline:
russia calls for joint front against terrorism

g(terrorism, x, for, joint, front, against)

   

figure 2: example input sentence and the generated summary. the score of generating yi+1 (terrorism) is based on the
context yc (for . . . against) as well as the input x1 . . . x18. note that the summary generated is abstractive which makes
it possible to generalize (russian defense minister to russia) and paraphrase (for combating to against),
in addition to compressing (dropping the creation of), see jing (2002) for a survey of these editing operations.

scale to train on a large amount of data. since our
system makes no assumptions about the vocabu-
lary of the generated summary it can be trained
directly on any document-summary pair.1 this
allows us to train a summarization model for
headline-generation on a corpus of article pairs
from gigaword (graff et al., 2003) consisting of
around 4 million articles. an example of genera-
tion is given in figure 2, and we discuss the details
of this task in section 7.

to test the effectiveness of this approach we
run extensive comparisons with multiple abstrac-
tive and extractive baselines, including traditional
syntax-based systems,
integer linear program-
constrained systems,
information-retrieval style
approaches, as well as statistical phrase-based ma-
chine translation. section 8 describes the results
of these experiments. our approach outperforms
a machine translation system trained on the same
large-scale dataset and yields a large improvement
over the highest scoring system in the duc-2004
competition.

2 background

we begin by de   ning the sentence summarization
task. given an input sentence, the goal is to pro-
duce a condensed summary. let the input con-
sist of a sequence of m words x1, . . . , xm com-
ing from a    xed vocabulary v of size |v| = v .
we will represent each word as an indicator vector
xi     {0, 1}v for i     {1, . . . , m}, sentences as a
sequence of indicators, and x as the set of possi-
ble inputs. furthermore de   ne the notation x[i,j,k]
to indicate the sub-sequence of elements i, j, k.

a summarizer takes x as input and outputs a
shortened sentence y of length n < m. we will
assume that the words in the summary also come
from the same vocabulary v and that the output is

1in contrast to a large-scale sentence compression sys-
tems like filippova and altun (2013) which require mono-
tonic aligned compressions.

a sequence y1, . . . , yn . note that in contrast to
related tasks, like machine translation, we will as-
sume that the output length n is    xed, and that
the system knows the length of the summary be-
fore generation.2

the

problem of

consider
summaries.

gen-
next
erating
set
y     ({0, 1}v , . . . ,{0, 1}v ) as all possible
sentences of length n, i.e. for all i and y     y, yi
is an indicator. we say a system is abstractive if it
tries to    nd the optimal sequence from this set y,

de   ne

the

arg max

y   y

s(x, y),

(1)

under a scoring function s : x   y (cid:55)    r. contrast
this to a fully extractive sentence summary3 which
transfers words from the input:

arg max
m   {1,...m}n

s(x, x[m1,...,mn ]),

(2)

or to the related problem of sentence compression
that concentrates on deleting words from the input:

arg max

m   {1,...m}n ,mi   1<mi

s(x, x[m1,...,mn ]).

(3)

while abstractive summarization poses a more dif-
   cult generation challenge, the lack of hard con-
straints gives the system more freedom in genera-
tion and allows it to    t with a wider range of train-
ing data.

in this work we focus on factored scoring func-
tions, s, that take into account a    xed window of
previous words:

s(x, y)     n   1(cid:88)

g(yi+1, x, yc),

(4)

i=0

2for the duc-2004 evaluation, it is actually the number
of bytes of the output that is capped. more detail is given in
section 7.

3unfortunately the literature is inconsistent on the formal
de   nition of this distinction. some systems self-described as
abstractive would be extractive under our de   nition.

where we de   ne yc (cid:44) y[i   c+1,...,i] for a window
of size c.

in particular consider

log-
the conditional
id203 of a summary given the input,
s(x, y) = log p(y|x;   ). we can write this as:

log p(y|x;   )     n   1(cid:88)

log p(yi+1|x, yc;   ),

i=0

where we make a markov assumption on the
length of the context as size c and assume for
i < 1, yi is a special start symbol (cid:104)s(cid:105).

with this scoring function in mind, our main
focus will be on modelling the local conditional
distribution: p(yi+1|x, yc;   ). the next section
de   nes a parameterization for this distribution, in
section 4, we return to the question of generation
for factored models, and in section 5 we introduce
a modi   ed factored scoring function.

3 model
the distribution of interest, p(yi+1|x, yc;   ), is
a conditional language model based on the in-
put sentence x. past work on summarization and
compression has used a noisy-channel approach to
split and independently estimate a language model
and a conditional summarization model (banko et
al., 2000; knight and marcu, 2002; daum  e iii and
marcu, 2002), i.e.,

arg max

y

log p(y|x) = arg max

log p(y)p(x|y)

y

where p(y) and p(x|y) are estimated separately.
here we instead follow work in neural machine
translation and directly parameterize the original
distribution as a neural network. the network con-
tains both a neural probabilistic language model
and an encoder which acts as a conditional sum-
marization model.

3.1 neural language model
the core of our parameterization is a language
model for estimating the contextual id203 of
the next word. the language model is adapted
from a standard feed-forward neural network lan-
guage model (nnlm), particularly the class of
nnlms described by bengio et al. (2003). the
full model is:
p(yi+1|yc, x;   )     exp(vh + wenc(x, yc)),

  yc = [eyi   c+1, . . . , eyi],
h = tanh(u  yc).

p(yi+1|x, yc;   )

enc3

v

h

u
  yc

e
yc

w

enc

x

(a)

p

p
  y(cid:48)
c
g
yc

  x

  x

f
x

(b)

figure 3:
(a) a network diagram for the nnlm decoder
with additional encoder element. (b) a network diagram for
the attention-based encoder enc3.

the parameters are    = (e, u, v, w) where
e     rd  v is a id27 matrix, u    
r(cd)  h, v     rv   h, w     rv   h are weight
matrices,4 d is the size of the id27s,
and h is a hidden layer of size h. the black-box
function enc is a contextual encoder term that re-
turns a vector of size h representing the input and
current context; we consider several possible vari-
ants, described subsequently. figure 3a gives a
schematic representation of the decoder architec-
ture.

3.2 encoders
note that without the encoder term this represents
a standard language model. by incorporating in
enc and training the two elements jointly we cru-
cially can incorporate the input text into genera-
tion. we discuss next several possible instantia-
tions of the encoder.

bag-of-words encoder our most basic model
simply uses the bag-of-words of the input sentence
embedded down to size h, while ignoring proper-
ties of the original order or relationships between
neighboring words. we write this model as:

enc1(x, yc) = p(cid:62)  x,

p = [1/m, . . . , 1/m ],
  x = [fx1, . . . , fxm ].

where the input-side embedding matrix f    
rh  v is the only new parameter of the encoder
and p     [0, 1]m is a uniform distribution over the
input words.

4each of the weight matrices u, v, w also has a cor-
responding bias term. for readability, we omit these terms
throughout the paper.

for summarization this model can capture the
relative importance of words to distinguish con-
tent words from stop words or embellishments.
potentially the model can also learn to combine
words; although it is inherently limited in repre-
senting contiguous phrases.
convolutional encoder to address some of the
modelling issues with bag-of-words we also con-
sider using a deep convolutional encoder for the
input sentence. this architecture improves on the
bag-of-words model by allowing local interactions
between words while also not requiring the con-
text yc while encoding the input.

we utilize a standard time-delay neural network
(tdnn) architecture, alternating between tempo-
ral convolution layers and max pooling layers.

   j, enc2(x, yc)j = max

i

  xl

i,j,

(5)

   i, l     {1, . . . l},   xl

j = tanh(max{  xl

2i   1,   xl

2i}),

   i, l     {1, . . . l},   xl

i = ql  xl   1
[i   q,...,i+q],
  x0 = [fx1, . . . , fxm ].

(6)
(7)
(8)

where f is a id27 matrix and
ql  h  2q+1 consists of a set of    lters for each
layer {1, . . . l}. eq. 7 is a temporal (1d) convolu-
tion layer, eq. 6 consists of a 2-element temporal
max pooling layer and a pointwise non-linearity,
and    nal output eq. 5 is a max over time. at each
layer   x is one half the size of   x. for simplicity
we assume that the convolution is padded at the
boundaries, and that m is greater than 2l so that
the dimensions are well-de   ned.
attention-based encoder while the convolu-
tional encoder has richer capacity than bag-of-
words, it still is required to produce a single rep-
resentation for the entire input sentence. a simi-
lar issue in machine translation inspired bahdanau
et al. (2014) to instead utilize an attention-based
contextual encoder that constructs a representation
based on the generation context. here we note that
if we exploit this context, we can actually use a
rather simple model similar to bag-of-words:

enc3(x, yc) = p(cid:62)  x,

p     exp(  xp  y(cid:48)
c),
  x = [fx1, . . . , fxm ],
  y(cid:48)
c = [gyi   c+1, . . . , gyi],

   i   xi =

  xi/q.

i+q(cid:88)

q=i   q

where g     rd  v is an embedding of the con-
text, p     rh  (cd) is a new weight matrix pa-
rameter mapping between the context embedding
and input embedding, and q is a smoothing win-
dow. the full model is shown in figure 3b.

informally we can think of this model as simply
replacing the uniform distribution in bag-of-words
with a learned soft alignment, p, between the in-
put and the summary. figure 1 shows an exam-
ple of this distribution p as a summary is gener-
ated. the soft alignment is then used to weight
the smoothed version of the input   x when con-
structing the representation. for instance if the
current context aligns well with position i then
the words xi   q, . . . , xi+q are highly weighted
by the encoder. together with the nnlm, this
model can be seen as a stripped-down version
of the attention-based id4
model.5

3.3 training

the lack of generation constraints makes it pos-
sible to train the model on arbitrary input-output
pairs. once we have de   ned the local condi-
tional model, p(yi+1|x, yc;   ), we can estimate
the parameters to minimize the negative log-
likelihood of a set of summaries. de   ne this train-
ing set as consisting of j input-summary pairs
(x(1), y(1)), . . . , (x(j), y(j)). the negative log-
likelihood conveniently factors6 into a term for
each token in the summary:

nll(  ) =     j(cid:88)
=     j(cid:88)

j=1

n   1(cid:88)

log p(y(j)|x(j);   ),

log p(y(j)

i+1|x(j), yc;   ).

j=1

i=1

we minimize nll by using mini-batch stochastic
id119. the details are described further
in section 7.

5to be explicit, compared to bahdanau et al. (2014)
our model uses an nnlm instead of a target-side lstm,
source-side windowed averaging instead of a source-side bi-
directional id56, and a weighted dot-product for alignment
instead of an alignment mlp.

6this is dependent on using the gold standard contexts
yc. an alternative is to use the predicted context within a
structured or reenforcement-learning style objective.

n   1(cid:88)

i=0

4 generating summaries
we now return to the problem of generating sum-
maries. recall from eq. 4 that our goal is to    nd,

y    = arg max

y   y

g(yi+1, x, yc).

unlike phrase-based machine translation where
id136 is np-hard, it actually is tractable in the-
ory to compute y   . since there is no explicit hard
alignment constraint, viterbi decoding can be ap-
plied and requires o(n v c) time to    nd an exact
solution. in practice though v is large enough to
make this dif   cult. an alternative approach is to
approximate the arg max with a strictly greedy or
deterministic decoder.

a compromise between exact and greedy de-
coding is to use a beam-search decoder (algo-
rithm 1) which maintains the full vocabulary v
while limiting itself to k potential hypotheses at
each position of the summary. this has been the
standard approach for neural mt models (bah-
danau et al., 2014; sutskever et al., 2014; luong
et al., 2015). the beam-search algorithm is shown
here, modi   ed for the feed-forward model:

algorithm 1 id125
input: parameters   , beam size k, input x
output: approx. k-best summaries
  [0]     { }
s = v if abstractive else {xi |    i}
for i = 0 to n     1 do

(cid:46) generate hypotheses

n    (cid:8)[y, yi+1]
(cid:26)y     n |

(cid:46) hypothesis recombination
h    

| y       [i], yi+1     s(cid:9)
(cid:27)

s(y, x) > s(y(cid:48), x)
   y(cid:48)     n s.t. yc = y(cid:48)

c

(cid:46) filter k-max
  [i + 1]     k-arg max

y   h

end for
return   [n ]

g(yi+1, yc, x) + s(y, x)

5 extension: extractive tuning
while we will see that the attention-based model
is effective at generating summaries, it does miss
an important aspect seen in the human-generated
references.
in particular the abstractive model
does not have the capacity to    nd extractive word
matches when necessary, for example transferring
unseen proper noun phrases from the input. simi-
lar issues have also been observed in neural trans-
lation models particularly in terms of translating
rare words (luong et al., 2015).

to address this issue we experiment with tuning
a very small set of additional features that trade-
off the abstractive/extractive tendency of the sys-
tem. we do this by modifying our scoring function
to directly estimate the id203 of a summary
using a log-linear model, as is standard in machine
translation:

p(y|x;   ,   )     exp(  (cid:62) n   1(cid:88)

f (yi+1, x, yc)).

i=0

where        r5 is a weight vector and f is a fea-
ture function. finding the best summary under this
distribution corresponds to maximizing a factored
scoring function s,

s(y, x) =

  (cid:62)f (yi+1, x, yc).

i=0

where g(yi+1, x, yc) (cid:44)   (cid:62)f (yi+1, x, yc) to sat-
isfy eq. 4. the function f is de   ned to combine
the local id155 with some addi-
tional indicator featrues:

f (yi+1, x, yc) = [ log p(yi+1|x, yc;   ),

1{   j. yi+1 = xj },
1{   j. yi+1   k = xj   k    k     {0, 1}},
1{   j. yi+1   k = xj   k    k     {0, 1, 2}},
1{   k > j. yi = xk, yi+1 = xj} ].

n   1(cid:88)

as with viterbi this id125 algorithm is
much simpler than id125 for phrase-based
mt. because there is no explicit constraint that
each source word be used exactly once there is
no need to maintain a bit set and we can sim-
ply move from left-to-right generating words. the
id125 algorithm requires o(kn v ) time.
from a computational perspective though, each
round of id125 is dominated by computing
p(yi|x, yc) for each of the k hypotheses. these
can be computed as a mini-batch, which in prac-
tice greatly reduces the factor of k.

these features correspond to indicators of uni-
gram, bigram, and trigram match with the input as
well as reordering of input words. note that set-
ting    = (cid:104)1, 0, . . . , 0(cid:105) gives a model identical to
standard abs.

after training the main neural model, we    x   
and tune the    parameters. we follow the statis-
tical machine translation setup and use minimum-
error rate training (mert) to tune for the summa-
rization metric on tuning data (och, 2003). this
tuning step is also identical to the one used for the
phrase-based machine translation baseline.

6 related work

abstractive sentence summarization has been tra-
ditionally connected to the task of headline gener-
ation. our work is similar to early work of banko
et al. (2000) who developed a statistical machine
translation-inspired approach for this task using a
corpus of headline-article pairs. we extend this
approach by:
(1) using a neural summarization
model as opposed to a count-based noisy-channel
model, (2) training the model on much larger scale
(25k compared to 4 million articles), (3) and al-
lowing fully abstractive decoding.

this task was standardized around the duc-
2003 and duc-2004 competitions (over et al.,
2007). the topiary system (zajic et al., 2004)
performed the best in this task, and is described in
detail in the next section. we point interested read-
ers to the duc web page (http://duc.nist.
gov/) for the full list of systems entered in this
shared task.

more recently, cohn and lapata (2008) give a
compression method which allows for more ar-
bitrary transformations. they extract tree trans-
duction rules from aligned, parsed texts and learn
weights on transfomations using a max-margin
learning algorithm. woodsend et al. (2010) pro-
pose a quasi-synchronous grammar approach uti-
lizing both context-free parses and dependency
parses to produce legible summaries. both of
these approaches differ from ours in that they di-
rectly use the syntax of the input/output sentences.
the latter system is w&l in our results; we at-
tempted to train the former system t3 on this
dataset but could not train it at scale.

in addition to banko et al. (2000) there has been
some work using id151
directly for abstractive summary. wubben et al.
(2012) utilize moses directly as a method for text
simpli   cation.

recently filippova and altun (2013) developed
a strictly extractive system that is trained on a rel-
atively large corpora (250k sentences) of article-
title pairs. because their focus is extractive com-
pression, the sentences are transformed by a series
of heuristics such that the words are in monotonic
alignment. our system does not require this align-
ment step but instead uses the text directly.

neural mt this work is closely related to re-
cent work on neural network language models
(nnlm) and to work on neural machine transla-

tion. the core of our model is a nnlm based on
that of bengio et al. (2003).

recently, there have been several papers about
models for machine translation (kalchbrenner and
blunsom, 2013; cho et al., 2014; sutskever et al.,
2014). of these our model is most closely related
to the attention-based model of bahdanau et al.
(2014), which explicitly    nds a soft alignment be-
tween the current position and the input source.
most of these models utilize recurrent neural net-
works (id56s) for generation as opposed to feed-
forward models. we hope to incorporate an id56-
lm in future work.

7 experimental setup

we experiment with our attention-based sentence
summarization model on the task of headline gen-
eration.
in this section we describe the corpora
used for this task, the baseline methods we com-
pare with, and implementation details of our ap-
proach.

7.1 data set
the standard sentence summarization evaluation
set is associated with the duc-2003 and duc-
2004 shared tasks (over et al., 2007).
the
data for this task consists of 500 news arti-
cles from the new york times and associated
press wire services each paired with 4 different
human-generated reference summaries (not actu-
ally headlines), capped at 75 bytes. this data
set is evaluation-only, although the similarly sized
duc-2003 data set was made available for the
task. the expectation is for a summary of roughly
14 words, based on the text of a complete arti-
cle (although we only make use of the    rst sen-
tence). the full data set is available by request at
http://duc.nist.gov/data.html.

for this shared task, systems were entered and
evaluated using several variants of the recall-
oriented id8 metric (lin, 2004). to make
recall-only evaluation unbiased to length, out-
put of all systems is cut-off after 75-characters
and no bonus is given for shorter summaries.
unlike id7 which interpolates various id165
matches, there are several versions of id8
for different match lengths. the duc evaluation
uses id8-1 (unigrams), id8-2 (bigrams),
and id8-l (longest-common substring), all of
which we report.

in addition to the standard duc-2014 evalu-

ation, we also report evaluation on single refer-
ence headline-generation using a randomly held-
out subset of gigaword. this evaluation is closer
to the task the model is trained for, and it allows
us to use a bigger evaluation set, which we will in-
clude in our code release. for this evaluation, we
tune systems to generate output of the average title
length.

for training data for both tasks, we utilize the
annotated gigaword data set (graff et al., 2003;
napoles et al., 2012), which consists of standard
gigaword, preprocessed with stanford corenlp
tools (manning et al., 2014). our model only uses
annotations for id121 and sentence separa-
tion, although several of the baselines use parsing
and tagging as well. gigaword contains around 9.5
million news articles sourced from various domes-
tic and international news services over the last
two decades.

for our training set, we pair the headline of each
article with its    rst sentence to create an input-
summary pair. while the model could in theory be
trained on any pair, gigaword contains many spu-
rious headline-article pairs. we therefore prune
training based on the following heuristic    lters:
(1) are there no non-stop-words in common? (2)
does the title contain a byline or other extrane-
ous editing marks? (3) does the title have a ques-
tion mark or colon? after applying these    lters,
the training set consists of roughly j = 4 million
title-article pairs. we apply a minimal preprocess-
ing step using ptb id121, lower-casing, re-
placing all digit characters with #, and replacing
of word types seen less than 5 times with unk.
we also remove all articles from the time-period
of the duc evaluation. release.

the complete input training vocabulary consists
of 119 million word tokens and 110k unique word
types with an average sentence size of 31.3 words.
the headline vocabulary consists of 31 million to-
kens and 69k word types with the average title
of length 8.3 words (note that this is signi   cantly
shorter than the duc summaries). on average
there are 4.6 overlapping word types between the
headline and the input; although only 2.6 in the
   rst 75-characters of the input.

7.2 baselines

due to the variety of approaches to the sentence
summarization problem, we report a broad set of
headline-generation baselines.

from the duc-2004 task we include the pre-
fix baseline that simply returns the    rst 75-
characters of the input as the headline. we
also report the winning system on this shared
task, topiary (zajic et al., 2004). topiary
merges a compression system using linguistically-
motivated transformations of the input (dorr et al.,
2003) with an unsupervised topic detection (utd)
algorithm that appends key phrases from the full
article onto the compressed output. woodsend et
al. (2010) (described above) also report results on
the duc dataset.

the duc task also includes a set of manual
summaries performed by 8 human summarizers
each summarizing half of the test data sentences
(yielding 4 references per sentence). we report the
average inter-annotater agreement score as ref-
erence. for reference, the best human evaluator
scores 31.7 id8-1.

we also include several baselines that have ac-
cess to the same training data as our system. the
   rst is a sentence compression baseline com-
press (clarke and lapata, 2008). this model
uses the syntactic structure of the original sentence
along with a language model trained on the head-
line data to produce a compressed output. the
syntax and language model are combined with a
set of linguistic constraints and decoding is per-
formed with an ilp solver.

to control for memorizing titles from training,
we implement an information retrieval baseline,
ir. this baseline indexes the training set, and
gives the title for the article with highest bm-25
match to the input (see manning et al. (2008)).

finally, we use a phrase-based statistical ma-
chine translation system trained on gigaword
to produce summaries, moses+ (koehn et al.,
2007). to improve the baseline for this task, we
augment the phrase table with    deletion    rules
mapping each article word to  , include an addi-
tional deletion feature for these rules, and allow
for an in   nite distortion limit. we also explic-
itly tune the model using mert to target the 75-
byte capped id8 score as opposed to standard
id7-based tuning. unfortunately, one remain-
ing issue is that it is non-trivial to modify the trans-
lation decoder to produce    xed-length outputs, so
we tune the system to produce roughly the ex-
pected length.

model
ir
prefix
compress
w&l
topiary
moses+
abs
abs+
reference

id8-1

duc-2004
id8-2 id8-l

id8-1 id8-2 id8-l

gigaword

11.06
22.43
19.77

22

25.12
26.50
26.55
28.18
29.21

1.67
6.49
4.02

6

6.46
8.13
7.06
8.49
8.38

9.67
19.65
17.30

17

20.12
22.85
22.05
23.81
24.46

16.91
23.14
19.63

-
-

28.77
30.88
31.00

5.55
8.25
5.13

-
-

12.10
12.22
12.65

15.58
21.73
18.28

-
-

26.44
27.77
28.34

-

-

-

ext. %
29.2
100
100
-
-

70.5
85.4
91.5
45.6

table 1: experimental results on the main summary tasks on various id8 metrics . baseline models are described in
detail in section 7.2. we report the percentage of tokens in the summary that also appear in the input for gigaword as ext %.

implementation

7.3
for training, we use mini-batch stochastic gradient
descent to minimize negative log-likelihood. we
use a learning rate of 0.05, and split the learning
rate by half if validation log-likelihood does not
improve for an epoch. training is performed with
shuf   ed mini-batches of size 64. the minibatches
are grouped by input length. after each epoch, we
renormalize the embedding tables (hinton et al.,
2012). based on the validation set, we set hyper-
parameters as d = 200, h = 400, c = 5, l = 3,
and q = 2.

our implementation uses the torch numerical
framework (http://torch.ch/) and will be
openly available along with the data pipeline. cru-
cially, training is performed on gpus and would
be intractable or require approximations other-
wise. processing 1000 mini-batches with d =
200, h = 400 requires 160 seconds. best valida-
tion accuracy is reached after 15 epochs through
the data, which requires around 4 days of training.
additionally, as described in section 5 we apply
a mert tuning step after training using the duc-
2003 data. for this step we use z-mert (zaidan,
2009). we refer to the main model as abs and the
tuned model as abs+.

8 results
our main results are presented in table 1. we
run experiments both using the duc-2004 eval-
uation data set (500 sentences, 4 references, 75
bytes) with all systems and a randomly held-out
gigaword test set (2000 sentences, 1 reference).
we    rst note that the baselines compress and ir
do relatively poorly on both datasets, indicating
that neither just having article information or lan-
guage model information alone is suf   cient for the
task. the prefix baseline actually performs sur-

prisingly well on id8-1 which makes sense
given the earlier observed overlap between article
and summary.
both abs

and moses+ perform better
than topiary, particularly on id8-2 and
id8-l in duc. the full model abs+ scores
the best on these tasks, and is signi   cantly better
based on the default id8 con   dence level
than topiary on all metrics, and moses+ on
id8-1 for duc as well as id8-1 and
id8-l for gigaword. note that the additional
extractive features bias the system towards re-
taining more input words, which is useful for the
underlying metric.

next we consider ablations to the model and al-
gorithm structure. table 2 shows experiments for
the model with various encoders. for these exper-
iments we look at the perplexity of the system as
a language model on validation data, which con-
trols for the variable of id136 and tuning. the
nnlm language model with no encoder gives a
gain over the standard id165 language model.
including even the bag-of-words encoder reduces
perplexity number to below 50. both the convo-
lutional encoder and the attention-based encoder
further reduce the perplexity, with attention giving
a value below 30.

we also consider model and decoding ablations
on the main summary model, shown in table 3.
these experiments compare to the bow encoding
models, compare id125 and greedy decod-
ing, as well as restricting the system to be com-
plete extractive. of these features, the biggest im-
pact is from using a more powerful encoder (atten-
tion versus bow), as well as using id125 to
generate summaries. the abstractive nature of the
system helps, but for id8 even using pure ex-
tractive generation is effective.

model
kn-smoothed 5-gram
feed-forward nnlm
bag-of-word
convolutional (tdnn)
attention-based (abs)

encoder

perplexity

none
none
enc1
enc2
enc3

183.2
145.9
43.6
35.9
27.1

table 2:
perplexity results on the gigaword validation
set comparing various language models with c=5 and end-
to-end summarization models. the encoders are de   ned in
section 3.

cons.
decoder model
abs+
greedy
abs
bow abs
beam
ext
abs+
beam
beam
abs+
abs

r-1
26.67
22.15
27.89
28.48

r-2
6.72
4.60
7.56
8.91

r-l
21.70
18.23
22.84
23.97

table 3: id8 scores on duc-2003 development data
for various versions of id136. greedy and beam are de-
scribed in section 4. ext. is a purely extractive version of the
system (eq. 2)

finally we consider example summaries shown
in figure 4. despite improving on the base-
line scores, this model is far from human per-
formance on this task. generally the models are
good at picking out key words from the input,
such as names and places. however, both models
will reorder words in syntactically incorrect ways,
for instance in sentence 7 both models have the
wrong subject. abs often uses more interesting
re-wording, for instance new nz pm after election
in sentence 4, but this can also lead to attachment
mistakes such a russian oil giant chevron in sen-
tence 11.

9 conclusion
we have presented a neural attention-based model
for abstractive summarization, based on recent de-
velopments in id4. we
combine this probabilistic model with a genera-
tion algorithm which produces accurate abstrac-
tive summaries. as a next step we would like
to further improve the grammaticality of the sum-
maries in a data-driven way, as well as scale this
system to generate paragraph-level summaries.
both pose additional challenges in terms of ef   -
cient alignment and consistency in generation.

references
dzmitry bahdanau, kyunghyun cho, and yoshua
2014. id4 by
corr,

bengio.
jointly learning to align and translate.
abs/1409.0473.

i(1): a detained iranian-american academic accused of acting against
national security has been released from a tehran prison after a hefty
bail was posted , a to p judiciary of   cial said tuesday .
g: iranian-american academic held in tehran released on bail
a: detained iranian-american academic released from jail after posting
bail
a+: detained iranian-american academic released from prison after
hefty bail

i(2): ministers from the european union and its mediterranean neighbors
gathered here under heavy security on monday for an unprecedented
conference on economic and political cooperation .
g: european mediterranean ministers gather for landmark conference
by julie bradford
a: mediterranean neighbors gather for unprecedented conference on
heavy security
a+: mediterranean neighbors gather under heavy security for unprece-
dented conference

i(3): the death toll from a school collapse in a haitian shanty-town rose
to ## after rescue workers uncovered a classroom with ## dead students
and their teacher , of   cials said saturday .
g: toll rises to ## in haiti school unk : of   cial
a: death toll in haiti school accident rises to ##
a+: death toll in haiti school to ## dead students

i(4): australian foreign minister stephen smith sunday congratulated
new zealand    s new prime minister-elect john key as he praised ousted
leader helen clark as a     gutsy     and respected politician .
g: time caught up with nz    s gutsy clark says australian fm
a: australian foreign minister congratulates new nz pm after election
a+: australian foreign minister congratulates smith new zealand as
leader

i(5): two drunken south african fans hurled racist abuse at the country
   s rugby sevens coach after the team were eliminated from the weekend
   s hong kong tournament , reports said tuesday .
g: rugby union : racist taunts mar hong kong sevens : report
a: south african fans hurl racist taunts at rugby sevens
a+: south african fans racist abuse at rugby sevens tournament

i(6): christian conservatives     kingmakers in the last two us presidential
elections     may have less success in getting their pick elected in #### ,
political observers say .
g: christian conservatives power diminished ahead of #### vote
a: christian conservatives may have less success in #### election
a+: christian conservatives in the last two us presidential elections

i(7): the white house on thursday warned iran of possible new sanctions
after the un nuclear watchdog reported that tehran had begun sensitive
nuclear work at a key site in de   ance of un resolutions .
g: us warns iran of step backward on nuclear issue
a: iran warns of possible new sanctions on nuclear work
a+: un nuclear watchdog warns iran of possible new sanctions

i(8): thousands of kashmiris chanting pro-pakistan slogans on sunday
attended a rally to welcome back a hardline separatist leader who
underwent cancer treatment in mumbai .
g: thousands attend rally for kashmir hardliner
a: thousands rally in support of hardline kashmiri separatist leader
a+: thousands of kashmiris rally to welcome back cancer treatment

i(9): an explosion in iraq    s restive northeastern province of diyala
killed two us soldiers and wounded two more , the military reported
monday .
g: two us soldiers killed in iraq blast december toll ###
a: # us two soldiers killed in restive northeast province
a+: explosion in restive northeastern province kills two us soldiers

i(10): russian world no. # nikolay davydenko became the    fth with-
drawal through injury or illness at the sydney international wednesday ,
retiring from his second round match with a foot injury .
g: tennis : davydenko pulls out of sydney with injury
a: davydenko pulls out of sydney international with foot injury
a+: russian world no. # davydenko retires at sydney international

i(11): russia    s gas and oil giant gazprom and us oil major chevron have
set up a joint venture based in resource-rich northwestern siberia , the
interfax news agency reported thursday quoting gazprom of   cials .
g: gazprom chevron set up joint venture
a: russian oil giant chevron set up siberia joint venture
a+: russia    s gazprom set up joint venture in siberia

figure 4: example sentence summaries produced on gi-
gaword. i is the input, a is abs, and g is the true headline.

michele banko, vibhu o mittal, and michael j wit-
brock. 2000. headline generation based on statis-
tical translation. in proceedings of the 38th annual
meeting on association for computational linguis-
tics, pages 318   325. association for computational
linguistics.

yoshua bengio, r  ejean ducharme, pascal vincent, and
christian janvin. 2003. a neural probabilistic lan-
guage model. the journal of machine learning re-
search, 3:1137   1155.

kyunghyun cho, bart van merrienboer, c   aglar
g  ulc  ehre, dzmitry bahdanau, fethi bougares, hol-
ger schwenk, and yoshua bengio. 2014. learning
phrase representations using id56 encoder-decoder
for id151. in proceedings of
emnlp 2014, pages 1724   1734.

james clarke and mirella lapata. 2008. global in-
ference for sentence compression: an integer linear
programming approach. journal of arti   cial intelli-
gence research, pages 399   429.

trevor cohn and mirella lapata.

2008. sentence
compression beyond word deletion. in proceedings
of the 22nd international conference on computa-
tional linguistics-volume 1, pages 137   144. asso-
ciation for computational linguistics.

hal daum  e iii and daniel marcu. 2002. a noisy-
channel model for document compression. in pro-
ceedings of the 40th annual meeting on association
for computational linguistics, pages 449   456. as-
sociation for computational linguistics.

bonnie dorr, david zajic, and richard schwartz.
2003. hedge trimmer: a parse-and-trim approach
to headline generation. in proceedings of the hlt-
naacl 03 on text summarization workshop-volume
5, pages 1   8. association for computational lin-
guistics.

katja filippova and yasemin altun. 2013. overcom-
ing the lack of parallel data in sentence compression.
in emnlp, pages 1481   1491.

david graff, junbo kong, ke chen, and kazuaki
maeda. 2003. english gigaword. linguistic data
consortium, philadelphia.

geoffrey e. hinton, nitish srivastava, alex
krizhevsky, ilya sutskever, and ruslan salakhut-
improving neural networks by
dinov.
preventing co-adaptation of
feature detectors.
corr, abs/1207.0580.

2012.

hongyan jing. 2002. using hidden markov modeling
to decompose human-written summaries. computa-
tional linguistics, 28(4):527   543.

nal kalchbrenner and phil blunsom. 2013. recurrent
in emnlp, pages

continuous translation models.
1700   1709.

kevin knight and daniel marcu. 2002. summariza-
tion beyond sentence extraction: a probabilistic ap-
proach to sentence compression. arti   cial intelli-
gence, 139(1):91   107.

philipp koehn, hieu hoang, alexandra birch, chris
callison-burch, marcello federico, nicola bertoldi,
brooke cowan, wade shen, christine moran,
richard zens, et al. 2007. moses: open source
in pro-
toolkit for id151.
ceedings of the 45th annual meeting of the acl on
interactive poster and demonstration sessions, pages
177   180. association for computational linguis-
tics.

chin-yew lin. 2004. id8: a package for automatic
in text summarization
evaluation of summaries.
branches out: proceedings of the acl-04 work-
shop, pages 74   81.

thang luong,

ilya sutskever, quoc v. le, oriol
vinyals, and wojciech zaremba. 2015. address-
ing the rare word problem in neural machine trans-
in proceedings of the 53rd annual meet-
lation.
ing of the association for computational linguis-
tics, pages 11   19.

christopher d manning, prabhakar raghavan, and
introduction to informa-
hinrich sch  utze. 2008.
tion retrieval, volume 1. cambridge university press
cambridge.

christopher d manning, mihai surdeanu, john bauer,
jenny finkel, steven j bethard, and david mc-
closky. 2014. the stanford corenlp natural lan-
in proceedings of 52nd
guage processing toolkit.
annual meeting of the association for computa-
tional linguistics: system demonstrations, pages
55   60.

courtney napoles, matthew gorid113y, and benjamin
in pro-
van durme. 2012. annotated gigaword.
ceedings of the joint workshop on automatic knowl-
edge base construction and web-scale knowledge
extraction, pages 95   100. association for compu-
tational linguistics.

franz josef och. 2003. minimum error rate training
in id151. in proceedings of
the 41st annual meeting on association for compu-
tational linguistics-volume 1, pages 160   167. as-
sociation for computational linguistics.

paul over, hoa dang, and donna harman. 2007. duc
in context. information processing & management,
43(6):1506   1520.

ilya sutskever, oriol vinyals, and quoc vv le. 2014.
sequence to sequence learning with neural net-
works. in advances in neural information process-
ing systems, pages 3104   3112.

kristian woodsend, yansong feng, and mirella lapata.
2010. generation with quasi-synchronous grammar.
in proceedings of the 2010 conference on empirical
methods in natural language processing, pages 513   
523. association for computational linguistics.

sander wubben, antal van den bosch, and emiel
krahmer. 2012. sentence simpli   cation by mono-
lingual machine translation. in proceedings of the
50th annual meeting of the association for compu-
tational linguistics: long papers-volume 1, pages
1015   1024. association for computational linguis-
tics.

omar zaidan. 2009. z-mert: a fully con   gurable
open source tool for minimum error rate training of
machine translation systems. the prague bulletin of
mathematical linguistics, 91:79   88.

david zajic, bonnie dorr, and richard schwartz.
in pro-
2004. bbn/umd at duc-2004: topiary.
ceedings of the hlt-naacl 2004 document under-
standing workshop, boston, pages 112   119.

