tgsum: build tweet guided id57 dataset

ziqiang cao1

chengyao chen1 wenjie li1

sujian li2

furu wei3 ming zhou3

1department of computing, the hong kong polytechnic university, hong kong
2key laboratory of computational linguistics, peking university, moe, china

{cszqcao, cscchen, cswjli}@comp.polyu.edu.hk

3microsoft research, beijing, china

lisujian@pku.edu.cn

{furu, mingzhou}@microsoft.com

5
1
0
2

 

v
o
n
6
2

 

 
 
]

r

i
.
s
c
[
 
 

1
v
7
1
4
8
0

.

1
1
5
1
:
v
i
x
r
a

abstract

the development of summarization research has been
signi   cantly hampered by the costly acquisition of ref-
erence summaries. this paper proposes an effective way
to automatically collect large scales of news-related
multi-document summaries with reference to social me-
dia   s reactions. we utilize two types of social labels
in tweets, i.e., hashtags and hyper-links. hashtags are
used to cluster documents into different topic sets. also,
a tweet with a hyper-link often highlights certain key
points of the corresponding document. we synthesize
a linked document cluster to form a reference sum-
mary which can cover most key points. to this aim,
we adopt the id8 metrics to measure the cover-
age ratio, and develop an integer id135
solution to discover the sentence set reaching the up-
per bound of id8. since we allow summary sen-
tences to be selected from both documents and high-
quality tweets, the generated reference summaries could
be abstractive. both informativeness and readability of
the collected summaries are veri   ed by manual judg-
ment. in addition, we train a support vector regression
summarizer on duc generic multi-document summa-
rization benchmarks. with the collected data as extra
training resource, the performance of the summarizer
improves a lot on all the test sets. we release this dataset
for further research1.

introduction

the rapid growth of on-line digital content calls for ef   -
cient id54 systems. so far, the learning-
based models have become the dominant summarization
approaches. despite decades of research, the quality of a
machine generated summary is still far from satisfactory.
a big bottleneck of supervised summarizers is the lack
of human summaries used for training. for instance, the
generic id57 task aims to sum-
marize a cluster of documents telling the same topic. in this
task, the most widely-used datasets are published by doc-
ument understanding conferences2 (duc) in 01, 02 and
copyright c(cid:13) 2016, association for the advancement of arti   cial
intelligence (www.aaai.org). all rights reserved.

1http://www4.comp.polyu.edu.hk/  cszqcao/
2http://duc.nist.gov/

04. totally, there are 139 document clusters with 376 hu-
man reference summaries. the limitation of labeled data
forces a learning-based summarization system to heavily
rely on well-designed features. sometimes unsupervised ap-
proaches (e.g., (rioux, hasan, and chali 2014)) even out-
perform supervised ones.

basically, there are two major factors restricting manual
annotation. on the one hand, summarization is an extremely
time consuming and labor-intensive process. before writ-
ing a summary, annotators have to read and understand the
whole document(s). on the other hand, it is very subjective.
even experts fail to reach a consensus. as a result, duc has
to provide multiple reference summaries in order to have a
relatively objective evaluation. in this paper, we suggest an
effective way to automatically collect large-scales of news
multi-document summaries with reference to social media   s
reactions on twitter. previously, a series of nlp tasks have
tried to utilize the social annotations like followers (chen et
al. 2014), emoticons (zhao et al. 2012) and responses (hu et
al. 2014) etc. here two kinds of common social labels, i.e.,
hyper-links and hashtags are leveraged for our purpose. a
hashtag in the news area often serves for the brief descrip-
tion of an event. for example, given    #bangkokblast   , we
know the tweets with this hashtag all talk about the recent
terrorist attack in bangkok. therefore, it is a nice indicator
to cluster documents into the same topic. on the other hand,
we take advantage of linked tweets (i.e., tweets with hyper-
links) to generate the optimal reference summary for a doc-
ument cluster. from our observation, linked tweets hold the
following properties:
    a large proportion of linked tweets can highlight key
    tags such as    #    and    @    frequently appears in a linked
    due to the length limitation, most tweets are shortened

tweet, bringing a large amount of noise;

points of related news;

and describe only one aspect of related documents.

the noise and incompleteness hamper a linked tweet to di-
rectly become a reference summary. take the tweets in ta-
ble 1 as an example. this document describes how greece   s
crisis drowns the life of a sardine    sherman. since the local
   sh industry owns the world    rst robotic sardine process-
ing line, tweet 1 is interested in how it works. tweet 2 and
3 both describe the key points of this paper, like    greece   ,

      sh industry    and    crisis   , but tweet 2 can be used as the ti-
tle while tweet 3 tells author   s writing experience. although
all the three tweets are able to indicate saliency, none of them
is appropriate to be a part of the summary. tweet 1 is short-
ened, tweet 2 is not a complete sentence, and tweet 3 con-
tains many tags.

tweet

news

(1) software determines which are sardines and ...
how much they weigh
(2) a    sh tale: how #greececrisis drowned an indus-
try and a way of life
(3) .@georgikantchev, @movingpicturetv, @vaniab-
turner and i look inside greece   s    sh industry and see
crisis
the fisherman   s lament     a way of life drowned
by greece   s crisis (http://t.co/fxgtuy3ibq)

table 1: an example of the tweets linked to the same news.
urls in tweets are elided for short.

notably, sentences in the news documents are usually
well-written. therefore, we do not directly treat linked
tweets as reference summaries. instead, we select sentences
from both the document cluster and high-quality tweets to
form a reference summary which can cover most key points
in tweets. this practice has the following advantages. first,
the summary is far more readable than tweets and mean-
while provides a complete description of a news document
cluster. second, the length of a reference summary is con-
trollable. a similar idea is adopted by (filippova and al-
tun 2013). they use the highlight and the    rst news sen-
tence to build the sentence compression pair. also because
the highlights are usually not the complete sentences, they
utilize highlights to indicate which syntactical structures in
the original sentences can be removed. in tgsum, we in-
troduce the most widely-used summary id74
id8 (lin 2004) to measure the coverage ratio of key
points, and develop an integer id135 (ilp)
solution to discover the sentence set which can reach the
id8 upper bound.

within one month, tgsum collects 4658 linked tweets in
overall. table 2 lists the basic information of tgsum and
compares it with duc datasets. on average, a document
cluster in tgsum contains 23 tweets, ensuring to gener-
ate reference summaries in different generalization degrees.
in terms of the cluster number, our dataset has already ex-
ceeded the scale of duc datasets, and it is still growing ev-
ery day. once the reference summaries are generated, we
conduct extensive experiments to verify the quality and ef-
fect of this dataset. about 30% summary sentences come
from linked tweets, indicating summaries in tgsum are ab-
stractive in certain degree. manual judgment demonstrates
that the majority of these summaries are informative and
readable. in addition, we train a support vector regression
(svr) summarizer on duc generic multi-document sum-
marization benchmarks. with the collected tgsum dataset
as the extra training resource, the performance of svr sum-
marizer improves a lot on all test sets.

the contributions of this paper are listed as follows:

dataset
duc 01
duc 02
duc 04
tgsum

cluster # doc. #
30
59
50
204

309
567
500
1114

sent. # ref. #
10639
15188
13129
33968

60
116
200
4658(tweets)

table 2: statistics of the summarization datasets.

with the help of social media   s reactions;

2. we develop an ilp solution to generate summaries reach-

ing the upper bound of id8;

3. we publish this dataset for further research.

tgsum construction

this section explains how we build tgsum, i.e., a multi-
document summarization dataset guided by tweets. there
are 4 main steps. the url acquisition step catches proper
news urls. these urls are in turn used in the data col-
lection step to extract the linked tweets and news docu-
ments. afterwards, news documents are clustered based on
the hashtags embedded in tweets. finally, for the news doc-
uments to be summarized, an integer id135
(ilp) solution is developed to generate reference summaries
which cover as many key points provided in tweets as possi-
ble. below is the detailed description of these steps.
url acquisition
at the beginning, we have tried to directly extract linked
tweets through searching trends on twitter. however, most
trends are concerned with the entertainment circle, refer-
ring people to the picture or video pages. it is thereby not
appropriate for document summarization. thus, we design
an alternative strategy which    rstly discovers news urls.
speci   cally, through the twitter search function, 74 active
news accounts like new york times, reuters and id98 who
have published tweets within a month are selected as seed
users. all the duc news providers are included to ensure
the generated dataset is uniform with duc. next, by apply-
ing the twitter user streaming api, we track all seed users   
tweets from august 13th to september 13th. despite many
replications of news titles, these tweets provide the urls of
hot news published by the corresponding news accounts. we
do not focus on a particular domain or type of news. from
observation, the collected pieces of news come from a wide
range of topics, including    nance, politics, sports, disaster
and so on. this open-domain dataset gives us the chance to
learn summarization behavior in different genres.
data collection
given a news url, we collect its document as well as linked
tweets. the news content is retrieved with the open python
package newspaper3. we just reserve the main body of a
document. then we apply the twitter term search api to
extract linked tweets, and conduct careful preprocessing as
below:
    discard retweets;

1. we propose to collect multi-document news summaries

3https://pypi.python.org/pypi/newspaper

    delete non-english tokens in a tweet;
    remove tweets which contains less than 5 tokens;
    merge identical tweets.
at the end, we collect 13207 valid tweets from 4483 news
documents.

cluster formation
it is common that different newswires publish multiple ver-
sions of documents about the same news. these documents
are clustered together to present a more complete description
of an event. with regard to our dataset, hashtags provide a
simple and accurate way to achieve this goal. after remov-
ing general hashtags such as #thisweek and #icymi (i.e.,
in case you missed it), the hashtags related to news are usu-
ally the key phrases of the event. for instance, #greececrisis
refers to the    nancial crisis of greece. when we further re-
strict to cluster documents in the same day, it is very likely
that the documents pointed by the same hashtag describe the
identical news. for a document attached to no hashtag, we
put it into an existing cluster if its tf cosine similarity with
the cluster exceeds a threshold, e.g., 0.5 as we set. after re-
moving clusters which have less than 3 documents or less
than 8 linked tweets, we retain 1114 documents in 204 clus-
ters.

reference generation
as mentioned above, most tweets are incomplete and con-
tain noises, which are not suitably included in a summary
directly. since the sentences in the original news documents
are usually well-written, we decide to    synthesize    refer-
ence summaries by selecting sentences from both news doc-
uments and high-quality tweets as long as they are good rep-
resentatives of the news information. we expect the gen-
erated reference summaries could cover most key points
of tweets. here we adopt id8 to measure the cover-
age ratio. through the analysis of id8, we develop an
ilp based solution to sentence selection, making sure the
generated reference summary reaching the upper bound of
id8.
analysis of id8 measurement id8 counts the
overlapping units such as the id165s, word sequences or
word pairs between the two pieces of text. take the widely-
used id8-2 as an example. the coverage score between
a candidate summary and a linked tweet i is:

rou ge     2i =

b gaini(b)
b ntwti(b)

(1)

where b stands for a bi-gram, and ntwti(b) is the number of
bi-gram b in the ith linked tweet. gaini(b) is the maximum
number of bi-gram co-occurring in the candidate summary
and linked tweet:

gaini(b) = min{ntwti(b), ncnd(b)}

(2)

given a linked tweet, its total bi-gram count is a    xed value.
therefore we can rewrite eq. 1 to
rou ge     2i = wb,twti

(cid:88)

gaini(b)

(3)

b

(cid:80)
(cid:80)

1(cid:80)
where wb,twti =
b ntwti (b) could be regarded as the weight
for the linked tweet. for a set of linked tweets, id8 av-
erages their scores.
rou ge     2 =
(4)
use z(s)     {0, 1} to indicate whether or not a sentence s
is selected in the candidate summary. we can represent the
maximization of id8-2 under the length constraint l as
the following optimization function:

(cid:88)k

(cid:88)

gaini(b)),

(wtwti

1
k

i=1

b

min{ntwti(b), ncnd(b)}) (5)
(6)

z(s)    ns(b)

b

(cid:88)

(cid:88)k
(cid:88)

max

(wb,twti

i=1

s.t. ncnd(b) =

(cid:88)

s

s

z(s)    |s|     l
   s

z(s)     {0, 1},

(7)
(8)
where ns(b) is the frequency of b in sentence s. the meaning
of each constraint as follows:
constraint 6 calculates the number of b in the current sum-

mary.

constraint 7 satis   es the summary length limit.
constraint 8 de   nes a binary variable z(s).

gaini(b)     ntwti(b)
gaini(b)     ncnd(b)

gaini(b) = ntwti(b) || gaini(b) = ncnd(b)
ensure gaini(b)

all the above formulas are linear expect the gain function.
note the minimization problem can be computed as follows:
(9)
(10)
(11)
   
constraints
min{ntwti(b), ncnd(b)}, while constraint 11 can be
solved by the big m formula or indicator constraints4.
but there is a much simpler solution in this task. since
the objective function is maximization of gaini(b), this
constraint will be realized automatically. finally, the whole
id135 formulas are listed below:

and

10

9

max

(wb,twti

i=1

(cid:88)

b

gaini(b))
z(s)    ns(b)

s.t. ncnd(b) =

(12)

(cid:88)

(cid:88)k
(cid:88)

s

z(s)    |s|     l

s

z(s)     {0, 1}
gaini(b)     ntwti(b),
gaini(b)     ncnd(b),

   b, i
   b, i

the work of (li, qian, and liu 2013) also proposes an lin-
ear programming function for the maximization of id8.
based on the fact that min(a, x) = 0.5(   |x     a| + x + a),
they introduce auxiliary variables and convert the maximiza-
tion of eq. 1 into

(cid:88)

(ncnd(b)     ci(b))

max
s.t. ci(b)     ncnd(b)     ntwti(b),
ci(b)     ntwti(b)     ncnd(b),

b

   b, i
   b, i

4http://www-01.ibm.com/support/docview.

wss?uid=swg21400084

abstraction: over 80% words of a tweet can be found in
the news document, and located in more than one sen-
tence.

other: the rest tweets. from our observation, most of them

are comments.
an example is provided for each tweet type in table 3.
all the four tweets are from a news cluster describing
#bangkokblast. we use bold font to indicate the words ap-
pearing in the news. it is noteworthy that the original docu-
ment uses the word    believe    whereas the abstraction tweet
chooses its synonym    think   . the second and third tweets
are really salient and condensed, which demonstrates twit-
ter users are willing to summarize the documents. the pro-
portions of different tweet types are shown in fig. 1. note
that our de   nition makes some abstraction tweets misclas-
si   ed into the other type. thus the real abstraction tweets
should occupy a larger proportion. the direct extraction be-
havior (except title) in linked tweets seems to be rare. users
prefer adding tags to raise social communication. in total,
over 70% of linked tweets are compression or abstraction,
which shows its potential applications in learning the sum-
mary sentence generation models. in the generated reference
summaries, we    nd 30% sentences come from linked tweets.
therefore tgsum provides the abstractive version of refer-
ences to some extent.

where ci(b) is an auxiliary variable equal to |ncnd(b)    
ntwti(b)| in the solution. however, they do not provide de-
tails to tackle the case of multiple measurements. compared
with their approach, our model represents the gain function
without transformation, which greatly speeds up the solution
procedure. in the next section, we illustrate how to extend
the model to multiple id8 variants.
extension to multiple id8 variants the above-
mentioned approach generates the optimal summary for
id8-2. actually, other id8 variants such as
id8-1 are also very useful (owczarzak et al. 2012). our
preliminary experiments also show that only 49% bi-grams
in the linked tweets appear in the original documents, while
over 83% uni-grams can be found. thus we attempt to gen-
erate reference summaries that optimize both id8-2 and
id8-1. we modify objective function 12 into

max (1       )

(wb,twti

i=1

gaini(b))

(cid:88)k
(cid:88)k

(cid:88)
(cid:88)

b

u

i=1

+   

(wu,twti

gaini(u)),

(13)
where u stands for a uni-gram and        [0, 1] is the trade-off
between id8-2 and id8-1. when    comes close to
0 (e.g., 0.0001 in the experiment), we implement the effect
that the selected summary is the optimum of id8-2 and
its id8-1 is as large as possible.

although ilp is np-hard in general, considerable re-
searches have produced a number of effective solution tools.
in this paper, we adopt the ibm cplex optimizer5 which
is a high-performance mathematical programming solver.

to ensure the sentence-level readability, we choose
declarative sentences in the documents and tweets as candi-
date summary sentences, and then adopt eq. 13 to generate
reference summaries. in line with duc, we set the summary
length to 100 words.

experiment

firstly, we inspect the content of the collected linked tweets.
we check whether they really provide certain news key
points. then, we analyze the quality of the generated sum-
maries. both automatic and manual evaluations are con-
ducted. finally, we design a supervised summarization
model to verify the effect of the tgsum dataset.

linked tweet analysis
during the data collection, we    nd that most linked tweets
are simply the extraction of news titles, but still each docu-
ment can receive three unique linked tweets on average. we
categorize these unique tweets in accordance with the sum-
marization task.
extraction: the tweet is directly extracted from original

text.

compression: the same word sequence in a tweet can be

found in a document sentence (except extraction).

5http://www-01.ibm.com/software/commerce/

optimization/cplex-optimizer/

figure 1: proportions of linked tweet types.

quality of tgsum
id8 evaluation now we verify the accuracy of our
ilp-based id8 upper bound generation algorithm. we
choose        0, 1, 0.0001, which means selecting sentences
according to id8-2, id8-1 and their combination.
we refer to the corresponding model summaries as ub-1,
ub-2 and ub-combination respectively. as a contrast, we
design a baseline applying the greedy algorithm. it itera-
tively adds the sentence bringing the maximal id8 gain
into the summary. likewise, the summaries generated ac-
cording to id8-1 and id8-2 are called ga-1 and
ga-2. the id8 scores measured by linked tweets are
shown in table 4. obviously, the ilp solution achieves much
larger id8 scores than the greedy algorithm. then we
compare three types of summaries derived from different
   values. it is noted that both ub-2 and ub-combination
reach the upper bound of id8-2, but the id8-1
score of ub-combination is higher. we thereby include the

type

extraction

tweet
police have released a sketch of the main suspect

compression

abstraction

suspect in bangkok bombing is    an unnamed male for-
eigner,    according to an arrest warrant issued by a thai
court.

taxi driver who thinks he picked up bangkok bombing
suspect says man was calm, spoke unfamiliar language
on a phone.

other(comment) id48, this face looks a bit familiar...

source
police have released a sketch of the main suspect, a
man in a yellow t-shirt who was    lmed by security cam-
eras leaving a backpack at the shrine.
the chief suspect in the deadly bombing of bangkok   s
popular erawan shrine is    an unnamed male for-
eigner,    according to an arrest warrant
issued
wednesday by a thai court.
a thai motorbike taxi driver who believes he picked
up the suspect shortly after the blast also said he did not
seem to be thai. ... who spoke an unfamiliar language
on his cell phone during the short ride ... ... he still ap-
peared very calm...
null

table 3: examples of different linked tweet types.

summaries generated by ub-combination in tgsum as ref-
erence summaries.

method
ub-1
ub-2
ub-combination
ga-1
ga-2

id8-1 id8-2
55.24
49.15
50.64
48.29
46.10

29.87
34.74
34.74
26.47
29.44

table 4: id8(%) comparison.

manual evaluation we manually evaluate the sentence
quality in the generated reference summaries. two metrics
are used, i.e., informativeness and readability. since tg-
sum serves for learning-based summarization models, we
do not consider the coherence of an entire summary. for
each metrics, a summary sentence is classi   ed into three
levels, namely good, ok and bad. linked tweets are also
evaluated for comparison. the results are presented in ta-
ble 5. as seen, most sentences in the reference summaries
are both informative and readable. the former owes to the
saliency of most linked tweets, while the candidate sentence
selection strategy brings the nice readability. since a gener-
ated reference is the id8 upper bound measured by the
set of linked tweets, a small amount of noised tweets will be
excluded. thus the number of unimportant sentences in ref-
erence summaries is much smaller than that in linked tweets.
a bad case we    nd is the cluster about    #bbcbizquiz   . all
the tweets are questions. as a result, the reference summary
fails to locate the salient sentences. with regard to readabil-
ity, a large part of linked tweets are merely regarded as ok
because they are not the complete sentences at all. by con-
trast, sentences in reference summaries are usually formal
and readable. quite a few summary sentences marked as ok
are due to the splitting errors. for instance, sometimes a sec-
tion title is attached to a sentence. meanwhile, a pronoun at
the beginning of a sentence brings the co-reference ambigu-
ity problem.

metrics

informativeness

readability

good
ok
bad
good
ok
bad

tgsum tweet
0.66
0.29
0.05
0.64
0.23
0.13

0.60
0.23
0.17
0.17
0.51
0.32

table 5: manual evaluation of tgsum   s quality.

effect of tgsum
to verify the effect of tgsum, we examine whether it can
be used to improve the performance of summarization sys-
tems on duc benchmarks. we design a supervised sup-
port vector regression (svr) summarizer (li et al. 2007;
cao et al. 2015b). to be concrete, each sentence in the train-
ing set is scored by id8-2. then we extract the fea-
tures such as tf (the averaged tf scores of the sentence),
length (sentence length), and stop-ratio (the ratio
of stopwords), and train svr to measure the saliency of
sentences. for testing, we follow the greedy algorithm (li
and li 2014) to select salient sentences into a summary.
according to (cao et al. 2015b), the svr summarizer
achieves competing performance against the best partici-
pates in duc. it is a standard learning-based summarization
model, which is enough to emphasize the effect of training
data. we train this summarizer on different datasets and test
it on duc. the id8 results are shown in table 6. here
   duc    stands for duc datasets except the testing year, and
   twt ref    means the same documents as tgsum but di-
rectly use tweets as reference summaries. seeing from this
table, id8 scores always enjoy a considerable increase
when adding tgsum as an extra training set. in addition,
even only given the tgsum dataset for training, the summa-
rizer can still achieve comparable performance, especially
on duc 02. thus, the effect of tgsum references is simi-
lar to the manual annotations of duc, although the former
is generated according to tweets automatically. in compar-
ison to tgsum, directly using tweets as references does
not always improve the summarization performance. the
noise in tweets may misguide the model learning. for exam-
ple, when treating tweets as references, the feature stop-

ratio holds extremely high positive weight. this improper
feature weight can be ascribed to the informal writing style
on twitter, and it obviously fails to match the informative-
ness requirement.

test set

01

02

04

training set
twt ref
tgsum
duc
duc+twt ref
duc+tgsum
twt ref
tgsum
duc
duc+twt ref
duc+tgsum
twt ref
tgsum
duc
duc+twt ref
duc+tgsum

id8-1 id8-2
29.23
29.40
29.78
30.13
30.32
31.10
31.71
31.56
31.74
32.15
35.73
35.97
36.18
36.19
36.64

5.45
5.73
6.01
6.08
6.26
6.34
6.73
6.78
6.80
6.89
8.83
9.16
9.34
9.23
9.51

table 6: summarization performance with different training
data.

related work

summarization with twitter
most summarization work on twitter try to directly sum-
marize tweets in a given topic. due to the lack of reference
summaries, most researchers have to use unsupervised meth-
ods. (shari   , hutton, and kalita 2010a) detected important
phrases in tweets with a graph-based algorithm. but soon,
the authors (shari   , hutton, and kalita 2010b) developed a
simpler    hybrid tf-idf    method, which ranked tweet sen-
tences using the tf-idf scheme and produced even better
results. a more complicated work was reported by (liu,
liu, and weng 2011), which relied on integer linear pro-
gramming to extract sentences with most salient id165s. it
is worth mentioning that this paper highlighted the use of
documents linked to the tweet set. the saliency was mea-
sured according to tf in the documents, and their experi-
ments demonstrated that allowing summary sentences to be
selected from both tweets and documents achieved the best
performance. recently, some papers (yang et al. 2011; wei
and gao 2014) simultaneously conducted single-document
and tweet summarization based on cross-media features.

the above researches focus on tweet summarization,
where documents provide additional features. there are a
limited number of papers about utilizing tweets to collect
summarization data. the only work we know is (lloret
and palomar 2013), who treated linked tweets as reference
summaries and attempted to apply extractive summariza-
tion techniques to generate them. they found that linked
tweets were informative but their writing quality was infe-
rior to extracted sentences. this work is equivalent to our
practice which synthesizes reference summaries on the ba-
sis of linked tweets. moreover, their dataset only has 100 en-

glish news documents and only suits single-document sum-
marization. in contrast, we build a far larger dataset and ap-
ply it to id57.

ilp for summarization
integer id135 has been widely applied in
summarization because it can appropriately model item se-
lection state. (mcdonald 2007) originally introduced ilp
in this area. he constructed summaries by maximizing the
importance of the selected sentences and minimizing their
pairwise similarity, which was the extension of a greedy ap-
proach called maximum marginal relevance (mmr) (car-
bonell and goldstein 1998). given n sentences, his model
contains o(n 2) binary variables. thus it is quite inef   -
cient when searching the optimal solution. later, (gillick
and favre 2009) proposed to treat summarization as concept
coverage maximization, where redundancy was implicitly
measured by bene   ting from including each concept only
once. they used bi-grams as the concept representation. the
same idea was followed by many researches (woodsend and
lapata 2012; li, qian, and liu 2013). recently, (schluter
and s  gaard 2015) reported that syntactic and semantic con-
cepts might also be helpful, and some papers such as (cao et
al. 2015a) combined sentence and concept selection process.
with heuristic rules, ilp can apply to compress (gillick and
favre 2009; berg-kirkpatrick, gillick, and klein 2011) or
even fuse (bing et al. 2015).

conclusion

this paper presents an effective way to automatically collect
large-scales of news multi-document summaries with refer-
ence to social media   s reactions. we use hashtags to cluster
documents into different topic sets, and then    synthesize   
reference summaries which are able to cover most important
key points embedded in the linked tweets within the cluster.
to measure the coverage ratio, we adopt id8 metrics
and develop an ilp solution to discover its upper bound.
manual evaluation veri   es the informativeness and readabil-
ity of the collected reference summaries. in addition, we
train a svr summarizer on duc generic multi-document
summarization benchmarks. with the collected data as extra
training resource, the performance of this summarizer im-
proves signi   cantly on all test sets.

the current work focuses on generic multi-document
summarization. however, we believe our dataset can be used
in many other scenarios. on the one hand, the compression
type of linked tweets is an ideal source for learning sen-
tence compression. on the other hand, we are interested in
adapting our dataset to update summarization by tracking
the same hashtag published on different dates.

acknowledgments

the work described in this paper was supported by the grants
from the research grants council of hong kong (polyu
5202/12e and polyu 152094/14e) and the national natu-
ral science foundation of china (61272291, 61273278 and
61572049). the correspondence authors of this paper are
wenjie li and sujian li.

references

[berg-kirkpatrick, gillick, and klein 2011] berg-
jointly
kirkpatrick, t.; gillick, d.; and klein, d. 2011.
in proceedings of the
learning to extract and compress.
49th annual meeting of the association for computational
linguistics: human language technologies-volume 1,
481   490. association for computational linguistics.
[bing et al. 2015] bing, l.; li, p.; liao, y.; lam, w.; guo,
w.; and passonneau, r. 2015. abstractive multi-document
in pro-
summarization via phrase selection and merging.
ceedings of the 53rd annual meeting of the association for
computational linguistics and the 7th international joint
conference on natural language processing (volume 1:
long papers), 1587   1597. beijing, china: association for
computational linguistics.
[cao et al. 2015a] cao, z.; wei, f.; dong, l.; li, s.; and
zhou, m. 2015a. ranking with id56s
and its application to id57.
in
twenty-ninth aaai conference on arti   cial intelligence.
[cao et al. 2015b] cao, z.; wei, f.; li, s.; li, w.; zhou, m.;
and wang, h. 2015b. learning summary prior repre-
in proceedings of
sentation for extractive summarization.
the 53rd annual meeting of the association for computa-
tional linguistics and the 7th international joint conference
on natural language processing (volume 2: short papers),
829   833. beijing, china: association for computational
linguistics.
[carbonell and goldstein 1998] carbonell, j., and goldstein,
j. 1998. the use of mmr, diversity-based reranking for re-
ordering documents and producing summaries. in proceed-
ings of sigir, 335   336.
[chen et al. 2014] chen, c.; gao, d.; li, w.; and hou, y.
2014.
inferring topic-dependent in   uence roles of twitter
users. in proceedings of the 37th international acm sigir
conference on research & development in information re-
trieval, 1203   1206. acm.
[filippova and altun 2013] filippova, k., and altun, y.
2013. overcoming the lack of parallel data in sentence com-
pression. in emnlp, 1481   1491.
[gillick and favre 2009] gillick, d., and favre, b. 2009. a
scalable global model for summarization. in proceedings of
the workshop on ilp for nlp, 10   18.
[hu et al. 2014] hu, b.; lu, z.; li, h.; and chen, q. 2014.
convolutional neural network architectures for matching
in advances in neural infor-
natural language sentences.
mation processing systems, 2042   2050.
[li and li 2014] li, y., and li, s. 2014. query-focused
id57: combining a topic model
with graph-based semi-supervised learning. in proceedings
of coling, 1197   1207.
[li et al. 2007] li, s.; ouyang, y.; wang, w.; and sun, b.
2007. id57 using support vector
regression. in proceedings of duc.
[li, qian, and liu 2013] li, c.; qian, x.; and liu, y. 2013.
using supervised bigram-based ilp for extractive summa-
rization. in proceedings of acl, 1004   1013.

[lin 2004] lin, c.-y. 2004. id8: a package for automatic
evaluation of summaries. in proceedings of the acl work-
shop, 74   81.
[liu, liu, and weng 2011] liu, f.; liu, y.; and weng, f.
2011. why is sxsw trending?: exploring multiple text
sources for twitter topic summarization. in proceedings of
the workshop on languages in social media, 66   75. asso-
ciation for computational linguistics.
[lloret and palomar 2013] lloret, e., and palomar, m. 2013.
towards automatic tweet generation: a comparative study
from the text summarization perspective in the journalism
genre. id109 with applications 40(16):6624   6630.
[mcdonald 2007] mcdonald, r. 2007. a study of global
id136 algorithms in id57.
springer.
[owczarzak et al. 2012] owczarzak, k.; conroy, j. m.;
dang, h. t.; and nenkova, a. 2012. an assessment of
the accuracy of automatic evaluation in summarization. in
proceedings of workshop on id74 and system
comparison for id54, 1   9.
[rioux, hasan, and chali 2014] rioux, c.; hasan, s. a.; and
chali, y. 2014. fear the reaper: a system for automatic
id57 with reinforcement learn-
in proceedings of the 2014 conference on empirical
ing.
methods in natural language processing (emnlp), 681   
690.
[schluter and s  gaard 2015] schluter, n., and s  gaard, a.
2015. unsupervised extractive summarization via cover-
age maximization with syntactic and semantic concepts. in
proceedings of the 53rd annual meeting of the associa-
tion for computational linguistics and the 7th international
joint conference on natural language processing (volume
2: short papers), 840   844. beijing, china: association for
computational linguistics.
[shari   , hutton, and kalita 2010a] shari   , b.; hutton, m.-
a.; and kalita, j. 2010a. summarizing microblogs automat-
ically. in human language technologies: the 2010 annual
conference of the north american chapter of the associa-
tion for computational linguistics, 685   688. association
for computational linguistics.
[shari   , hutton, and kalita 2010b] shari   , b.; hutton, m.-
a.; and kalita, j. k. 2010b. experiments in microblog sum-
marization. in social computing (socialcom), 2010 ieee
second international conference on, 49   56. ieee.
[wei and gao 2014] wei, z., and gao, w. 2014. utilizing
microblogs for automatic news highlights extraction. col-
ing.
[woodsend and lapata 2012] woodsend, k., and lapata, m.
2012. multiple aspect summarization using integer linear
programming. in proceedings of the 2012 joint conference
on empirical methods in natural language processing and
computational natural language learning, 233   243. as-
sociation for computational linguistics.
[yang et al. 2011] yang, z.; cai, k.; tang, j.; zhang, l.; su,
z.; and li, j. 2011. social context summarization.
in
proceedings of the 34th international acm sigir confer-

ence on research and development in information retrieval,
255   264. acm.
[zhao et al. 2012] zhao, j.; dong, l.; wu, j.; and xu, k.
2012. moodlens: an emoticon-based id31 sys-
in proceedings of the 18th acm
tem for chinese tweets.
sigkdd international conference on knowledge discovery
and data mining, 1528   1531. acm.

