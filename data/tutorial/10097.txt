multi-document abstractive summarization
using ilp based multi-sentence compression

siddhartha banerjee

the pennsylvania state university

university park, pa, usa

sub253@ist.psu.edu

prasenjit mitra

qcri

doha, qatar

pmitra@qf.org.qa

kazunari sugiyama

national university of singapore

singapore

sugiyama@comp.nus.edu.sg

6
1
0
2

 

p
e
s
2
2

 

 
 
]
l
c
.
s
c
[
 
 

1
v
4
3
0
7
0

.

9
0
6
1
:
v
i
x
r
a

abstract

abstractive summarization is an ideal form of sum-
marization since it can synthesize information from
multiple documents to create concise informative
summaries.
in this work, we aim at developing
an abstractive summarizer. first, our proposed ap-
proach identi   es the most important document in
the multi-document set. the sentences in the most
important document are aligned to sentences in
other documents to generate clusters of similar sen-
tences. second, we generate k-shortest paths from
the sentences in each cluster using a word-graph
structure. finally, we select sentences from the set
of shortest paths generated from all the clusters em-
ploying a novel integer id135 (ilp)
model with the objective of maximizing informa-
tion content and readability of the    nal summary.
our ilp model represents the shortest paths as bi-
nary variables and considers the length of the path,
information score and linguistic quality score in
the objective function. experimental results on the
duc 2004 and 2005 multi-document summariza-
tion datasets show that our proposed approach out-
performs all the baselines and state-of-the-art ex-
tractive summarizers as measured by the id8
scores. our method also outperforms a recent ab-
stractive summarization technique. in manual eval-
uation, our approach also achieves promising re-
sults on informativeness and readability.

1 introduction
abstractive summarization has gained popularity due to its
ability of generating new sentences to convey the important
information from text documents. an abstractive summa-
rizer should present the summarized information in a coher-
ent form that is easily readable and grammatically correct.
readability or linguistic quality is an important indicator of
the quality of a summary. several text-to-text (t2t) gener-
ation techniques that aim to generate novel text from tex-
tual input have been developed [knight and marcu, 2002;
zajic et al., 2007; barzilay and mckeown, 2005]. however,
to the best of our knowledge, none of the above methods ex-
plicitly model the role of linguistic quality and only aim at

maximizing information content of the summaries.
in this
work, we address readability by assigning a log probabil-
ity score from a language model as an indicator of linguis-
tic quality. more speci   cally, we build a novel optimization
model for summarization that jointly maximizes information
content and readability.

extractive summarizers [mani and maybury, 1999] often
lose a lot of information from the input as they only    extract   
a few important sentences from the documents to create the
   nal summary. we prevent information loss by aggregating
information from multiple sentences. we generate clusters
of similar sentences from a collection of documents. multi-
sentence compression (msc) [filippova, 2010] can be used
to fuse information from sentences in a cluster. however,
msc might generate sentences that convey similar informa-
tion from two different clusters. by contrast, our integer
id135 (ilp) based approach prevents redun-
dant information from being included in the summary using a
inter-sentence redundancy constraint. consequently, our ex-
periments reveal that our method generates more informative
and readable summaries than msc.

our proposed approach to abstractive summarization con-
sists of the following two steps: (1) aligning similar sen-
tences from multiple-documents and (2) generating the most
informative and linguistically well-formed sentence from
each cluster, and then appending them together.
in multi-
document summarization, all documents are not equally im-
portant; some documents contain more information on the
main topics in the document set. our    rst step estimates
the importance of a document in the whole dataset using
lexrank [erkan and radev, 2004], pairwise cosine similar-
ity and overall document collection similarity. each sen-
tence from the most important document are initialized into
separate clusters. thereafter, each sentence from the other
documents are assigned to the cluster that has the highest sim-
ilarity with the sentence. in the generation step, we    rst gen-
erate a word-graph structure from the sentences in each clus-
ter and construct k shortest paths from the graph between
the start and end nodes. we formulate a novel integer linear
programming (ilp) problem that maximizes the information
content and linguistic quality of the generated summary. our
ilp problem represents each of the k shortest paths as a bi-
nary variable. the coef   cients of each variable in the objec-
tive function is obtained by combining the information score

of the path and the linguistic quality score. we introduce sev-
eral constraints into our ilp model. we ensure that only one
sentence is generated from each cluster. second, we avoid
redundant sentences that carry the same or similar informa-
tion from different clusters. the solution to the optimization
problem decides the paths that would be included in the    nal
abstractive summary.

on the duc2004 and duc2005 datasets, we demon-
strate the effectiveness of our proposed method. our pro-
posed method outperforms not only some popular baselines
but also the state-of-the-art extractive summarization sys-
tems. id8 scores [lin, 2004] obtained by our sys-
tem outperforms the best extractive summarizer on both the
datasets. our method also outperforms an abstractive summa-
rizer based on multi-sentence compression [filippova, 2010]
when measured by id8-2, id8-l and id8-su4
scores. further, manual evaluation by human judges shows
that our technique produces summaries with acceptable lin-
guistic quality and high informativeness.

2 related work
several researchers have developed abstractive summariz-
ers. genest and lapalme [2010] used natural-language-
generation (id86) systems. however, id86 requires a lot of
manual effort in terms of de   ning schemas as well as using
deeper natural language analysis. wang and cardie [2013]
and oya et al. [2014] induced templates from the training set
in their meeting summarization tasks. such induction of tem-
plates, however, is not very effective in news summarization
because of the variability in topics. unlike these methods,
our method does not induce any templates but generates sum-
maries in an unsupervised manner by combining information
from several sentences on the same topic. berg-kirkpatrick
et al. [2011] used an ilp formulation that jointly extracts and
compresses sentences to generate summaries. however, their
method is supervised and requires signi   cant manual effort
to de   ne features for subtree deletions, which is required to
compress sentences. graph-based techniques have also been
very popular in summarization. ganesan et al. [2010] em-
ployed a graph-based approach to generate concise abstrac-
tive summaries from highly redundant opinions. compared
with their opinionated texts such as product reviews, the tar-
get documents in id57 do not con-
tain such high level of redundancy.

more recently, mehdad et al. [2013] proposed a super-
vised approach for meeting summarization, in which they
generate an entailment graph of sentences. the nodes in the
graph are the linked sentences and edges are the entailment
relations between nodes; such relations help to identify non-
redundant and informative sentences. their fusion approach
used msc [filippova, 2010], which generates an informa-
tive sentence by combining several sentences in a word-graph
structure. however, filippova   s method produces low lin-
guistic quality as the ranking of generated sentences is based
on edge weights calculated only using word collocations. by
contrast, our method selects sentences by jointly maximiz-
ing informativeness and readability and generates informa-
tive, well-formed and readable summaries.

figure 1: overview of our abstractive summarization approach.

3 proposed approach
figure 1 shows our proposed abstractive summarization ap-
proach, which consists of the following two steps:
s1: sentence id91,
s2: summary sentence generation.

given a document set d, that consists of n documents (d1,
d2, d3, ..., dn), our approach    rst generates m clusters (c1,
c2, c3, ..., cm) of similar sentences, and then use the in-
dividual clusters to create word-graphs. a maximum of one
novel sentence is generated from each word-graph with the
goal of maximizing information content and linguistic qual-
ity of the entire summary. the sentence id91 step (s1)
has two important components: the    rst (s1-1) identi   es the
most important document dimp in d before the    nal clus-
ter generation step (s1-2) that generates clusters of similar
sentences. we experiment with several techniques to identify
dimp, and then align sentences from other documents to the
sentences in dimp. it proves to be a simple, yet effective tech-
nique for generating clusters containing similar information.
our approach is inspired by the    ndings of wan [2008] that
showed how the incorporation of document impact can im-
prove the performance of summarization. in (s2), we create
a directed word-graph structure from the sentences in each
cluster.
in the word-graph, the nodes represent the words
and the edges de   ne the adjacency relations in the sentences.
from the word-graph, multiple paths between the start and
the end nodes can be extracted. we extract k shortest paths
from each cluster, and    nally retain the paths that maximize
information content and linguistic quality using an ilp based
approach. we impose constraints on the maximum number
of sentences that are generated from each cluster and also im-
pose constraints to avoid redundancies such that similar in-
formation from different clusters are not included in the sum-
mary. information content is measured using textrank [mi-
halcea and tarau, 2004], which scores sentences based on the
presence of keywords. we measure linguistic quality using
a 3-gram language model that assigns con   dence values to

sequences of words in the sentences. in this section, we de-
scribe both steps     s1 and s2.
s1: sentence id91
we initialize clusters of sentences using each sentence from
the most important document, dimp, in a document set d.
our intuition behind this approach is that dimp consists of
the most important content relevant across all the documents
in d. in other words, the document that is most close to the
central content of the collection is the most informative.
(s1-1) document importance
we propose several techniques to identify dimp.
lexrank (m dimp
lexrank): lexrank [erkan and radev, 2004]
constructs a graph of sentences where the edge weights are
obtained by the inter-sentence cosine similarities. while the
original lexrank constructs a graph of sentences, we con-
struct a graph of documents to compute document impor-
tance. equation (1) shows how lexrank scores are computed
using weighted links between the nodes (documents). this
equation measures the salience of a node in the graph, which
is the importance of the document in the entire document col-
lection. let p(u) be the centrality of node u. lexrank is then
de   ned as follows:

(cid:80)
z   adj[v] idf-modi   ed-cosine(z,v) p(v),
(1)
where adj[u] and n are the set of nodes that are adjacent to
u and the total number of nodes in the graph, respectively.
the damping factor d is usually set to 0.85, and we set d to
this value in our implementation. dimp is determined as the
document that has the highest lexrank score in d once the
above equation converges.
cossim): this method
pairwise cosine similarity (m dimp
computes the average cosine similarity between the target
document di and the other documents in the dataset. the
average similarity is calculated using the following formula:

n + (1     d)(cid:80)

idf-modi   ed-cosine(u,v)

p(u) = d

v   adj[u]

avecossim(di) =

di,dj   d

cossim(di, dj)
|d|     1

(i (cid:54)= j),

where |d| denotes the number of documents in the document
set d.
overall document collection similarity (m dimp
docsetsim):
this method computes the cosine similarity between the tar-
get document and the whole document set. we create the
whole document set by concatenating text from all the docu-
ments in d. this method is de   ned as follows:

docsetsim(di) = cossim(di, d).

lexrank, m dimp

cossim, and m dimp

in m dimp
docsetsim mentioned
above, we select the document dimp with the highest score as
the most important one in the dataset d. next, we generate
the clusters by aligning sentences and re-ordering them based
on original positions of the sentences in the documents.
(s1-2) cluster generation
the sentences from each of the other documents (di (cid:54)= dimp)
in d are assigned to the clusters one-by-one based on cosine

(cid:80)

j

similarity measure. our approach computes pairwise cosine
similarity of each sentence in di to all the sentences in dimp.
for example, a sentence in di, sdi
p has the highest similar-
ity with sdimp
, a sentence in dimp. then, we assign sdi
p
to cluster cj, in which sdimp
was initially assigned. some
sentences in di might not be similar to any of the sentences
in dimp. hence, we only align sentences when the similar-
ity > 0.5. further, we only retain clusters that have at least
|d|/2 sentences, assuming that a content is relevant only if it
exists in half of the documents in d.
cluster ordering: we implement two cluster ordering tech-
niques that reorder clusters based on the original position of
the sentences in the documents.

j

p and sdi
q

1. majority ordering (mo): given two clusters, ci and cj,
the set of common documents from which the sentences
are assigned to the two clusters are identi   ed. if ci and
cj have sentences sdi
(p < q), respectively,
where di is the common document, then ci precedes
cj. the    nal order is determined based on overall prece-
dence of the sentences of one cluster over the others.
2. average position ordering (apo): the sentences
{sp, sq, . . . , sz} in any cluster ci are each assigned a
normalized score. for example, the normalized score
of sp is computed as the ratio of the original position
of the sentence and the total number of sentences in di
(here, sp belongs to document di). when ordering two
clusters, the cluster that has the lower score obtained by
averaging the normalized scores of all the sentences is
ranked higher than the others.

s2: summary sentence generation
in order to generate a one-sentence representation from a
cluster of redundant sentences, we use multi-sentence com-
pression. we generate multiple sentences from a cluster us-
ing a word-graph [filippova, 2010]. suppose that a cluster
ci contains j sentences, s = {s1, s2, . . . , sj}. a directed
graph is created by adding sentences from s to the graph in
an iterative fashion. each sentence is connected to dummy
start and end nodes to mark the beginning and ending of the
sentences. the vertices or nodes are the words along with the
parts-of-speech (pos) tags. we connect adjacent words in
the sentences with directed edges. once the    rst sentence is
added, words from the following sentences are mapped onto
a node in the graph provided that they have exactly the same
word form and the same pos tag. the sequence of rules used
for the word-graph construction is as follows:

the existing graph,

such words that occur more than once in the sentence,

    content words are added for which there are no candidates in
    content words for which multiple mappings are possible or
    stopwords.
the context of the words are taken into consideration if
multiple mappings are possible, and the word is mapped to
that node that has the highest directed context. we also add
punctuations to the graph. figure 2 shows a simple exam-
ple of the word-graph generation technique. we do not show
pos and punctuations in the    gure for clarity. consider the

informativeness:
in principle, we can use any existing
method that computes the importance of a sentence to de   ne
informativeness. in our model, we use textrank scores [mi-
halcea and tarau, 2004] to generate an importance value of a
sentence within a cluster. textrank creates a graph of words
from the sentences. the score of each node in the graph is
calculated as shown in equation (2):

s(vi) = (1     d) + d    (cid:88)

(cid:80)

wji

s(vi),

(2)

vj   adj(vi)

vk   adj(vi) wjk

where vi represents the words, adj(vi) denotes the adjacent
nodes of vi and d is the damping factor set to 0.85. the com-
putation converges to return    nal word importance scores.
the informativeness score of a path (i(pcj
i )) is obtained by
adding the importance scores of the individual words in the
path.
linguistic quality: in order to compute linguistic quality,
we use a language model. more speci   cally, we use a 3-
gram (trigram) language model that assigns probabilities to
sequence of words. suppose that a path contains a sequence
of q words {w1, w2, ..., wq}. the score lq(pcj
i ) assigned to
each path is de   ned as follows:

lq(pcj

i ) =

1

1     ll(w1, w2, . . . , wq)

,

(3)

where ll(w1, w2, ..., wq) is de   ned as:

ll(w1, w2, . . . , wq) =

   log2

1
l

p (wt|wt   1wt   2).

(4)

as can be seen from equation (4), we obtain the con-
ditional id203 of different sets of 3-grams in the sen-
the scores are combined and averaged by l,
tence.
the number of conditional probabilities computed.
the
ll(w1, w2, . . . , wq) scores are negative; with higher magni-
tude implying lower readability. therefore, in equation (3),
we take the reciprocal of the logarithmic value with smooth-
ing to compute lq(pcj
i ). in our experiments, we used a 3-
gram model that is trained on the english gigaword corpus1.
ilp formulation
to select the best paths from the clusters, we combine infor-
mativeness i(pcj
i ) in an op-
timization framework. we maximize the following objective
function:

i ) and linguistic quality lq(pcj

m(cid:88)

k(cid:88)

j=1

i=1

f (pc1

1 , . . . , pcm

k ) =

1
t (pcj
i )

  i(pcj

i )  lq(pcj

i )  pcj

i

(5)

each pcj
i

represents a binary variable, that can take 0 or 1,
depending on whether the path is selected in the    nal sum-
mary or not. in addition, t (pcj
i ), the number of tokens in a

1the model

is available here: http://www.keithv.com/software/

giga/. we used the vp 20k vocab version.

q(cid:89)

t=3

figure 2: word-graph generation from sentences.

following two sentences as an illustration of our generation
approach:
eg.1 the american killed in the crash was 31-year-old seth j. foti,

a diplomatic courier carrying classi   ed information.

eg.2 31-year-old seth foti was carrying pouches containing classi-

   ed information.

as shown in the examples above, the two sentences contain
similar information, but they are syntactically different. the
solid directed arrows connect the nodes in eg.1, whereas the
dotted arrows join the nodes in eg.2. we can obtain several
shortest paths between the start and end nodes. in figure 2,
we highlight one such path using gray rectangles. several
other paths are possible, for example:

1: 31 year old seth foti was carrying pouches containing classi-

   ed information.

2: 31 year old seth foti a diplomatic courier carrying classi   ed

information.

the original input sentences from the cluster are also valid
paths between the start and end nodes. to ensure pure ab-
stractive summarization, we remove such paths that are same
or very similar (cosine similarity     0.8) to any of the original
sentences in the cluster. similar to filippova   s word-graph
construction, we set the minimum path length (in words) to
eight to avoid incomplete sentences. finally, we retain a max-
imum of 200 randomly selected paths from each cluster to re-
duce computational overload of the ilp based approach. our
aim is to select the best path from all available paths.
best path selection
from 200 paths in each cluster, we choose at most one path
that maximizes information content and linguistic quality to-
gether. let pcj

i be each path in a cluster cj, namely,
k },
2 , ..., pcj

   j     {1, ...., m}, cj (cid:51) {pcj

1 , pcj

where the total number of shortest paths is equal
to
k=min[|cj|, 200] where |cj| refers to the maximum num-
ber of paths that can be generated from a cluster. we ar-
gue that the shortest paths that we select in the    nal sum-
mary should be informative as well as linguistically readable.
hence, we introduce two factors     informativeness (i(pcj
i ))
and linguistic quality (lq(pcj

i )).

table 1: comparison of id8 scores on the duc 2004 and 2005 datasets: baselines, state-of-the-arts, our proposed methods and
abstractive summarization system using msc.           denotes the differences between [ilpsumm] and the baselines on the id8 scores are
statistically signi   cant for p < 0.05. we limit id8 evaluation to 665 bytes and 250 words for the 2004 and 2005 datasets, respectively.

duc-2004

baselines
greedykl
freqsum
centroid
tssum
lexrank
state-of-the-arts
dpp
submodular
regsum
classy04
occamsv
icsisumm
classy11
abstractive systems
m dimp
m dimp
m dimp
m dimp
m dimp
m dimp
m dimp

lexrank + apo + msc [filippova, 2010]
lexrank + mo + ilp
lexrank + apo + ilp
cossim + mo + ilp
cossim + apo + ilp
docsetsim + mo + ilp [ilpsumm]
docsetsim + apo + ilp

id8-2

id8-su4

0.08658
0.08218
0.08139
0.08068
0.07796

0.10079
0.09602
0.09712
0.09168
0.09420
0.09585
0.08912

0.09612
0.09799
0.10317
0.09799
0.10577
0.11992   
0.11712

0.13253
0.12448
0.12642
0.12209
0.12484

0.14556
0.14227
0.13812
0.13250
0.13105
0.13314
0.12779

0.13911
0.13884
0.14218
0.13884
0.14215
0.14765   
0.13567

duc-2005

baselines
random
centroid
lexrank

state-of-the-arts
duc best
lsa
nmf
km
fgb
rdms

m dimp
m dimp
m dimp
m dimp
m dimp
m dimp
m dimp

lexrank + apo + msc
lexrank + mo + ilp
lexrank + apo + ilp
cossim + mo + ilp
cossim + apo + ilp
docsetsim + mo + ilp [ilpsumm]
docsetsim + apo + ilp

id8-l

id8-su4

0.26395
0.32562
0.33179

0.34764
0.26476
0.28716
0.29107
0.35018
0.35376

0.35589
0.35281
0.35342
0.35661
0.35577
0.35772   
0.35679

0.09066
0.11007
0.12021

0.10012
0.10806
0.11278
0.10806
0.12006
0.12297

0.12211
0.12107
0.12117
0.12331
0.12298
0.12411   
0.12393

k(cid:88)

as-
path, is also taken into consideration and the term 1
t (p
signs more weight to shorter paths so that the system can fa-
vor shorter informative sentences. we introduce several con-
straints to solve the problem. first, we ensure that a maxi-
mum of one path is selected from each cluster using equa-
tion (6).

cj
i

)

   j     {1, . . . , m},

i     1
pcj

(6)

i=1

we introduce equation (7) so that we can prevent similar in-
formation (cosine similarity     0.5) from being selected from
different clusters.
in figure 2, this constraint ensures that
only one of the several possible paths mentioned in the exam-
ple is included in the    nal summary as they contain redundant
information.

   j, j

(cid:48)     [1, m], i, i
i(cid:48)     1 if sim(pcj
cj(cid:48)

(cid:48)     [1, k]     cj, cj(cid:48)
)     0.5.

cj(cid:48)
i(cid:48)

, p

i

pcj
i + p

(7)

4 experimental results
4.1 dataset and id74
we evaluated our approach on the duc 2004 and 2005
datasets2 on id57. we use
id8 (recall-oriented understudy of gisting evalua-
tion) [lin, 2004] for automatic evaluation of summaries
(compared against human-written model summaries) as it has
been proven effective in measuring qualities of summaries
and correlates well to human judgments.

2http://duc.nist.gov/data.html

4.2 id8 evaluation
we proposed three document importance measures and two
different sentence ordering techniques as described in sec-
tion 3. hence, we have six different systems in total. to the
best of our knowledge, no publicly available abstractive sum-
marizers have been used on the duc dataset. therefore, we
compare our system to msc [filippova, 2010] that generates
a sentence from a collection of similar sentences using only
syntactical information from the source sentences. in msc,
the input is a pre-de   ned cluster of similar sentences. there-
fore, we compare our ilp based technique with msc using
the same set of input clusters obtained by our system. table 1
shows the following id8 scores for our evaluation:

id8-2: id165 based id8, where n=2, denotes the
size of the sequence of words.
id8-l (longest common subsequence),
id8-su4: skip-bigrams with unigrams.

the summaries generated by the baselines and the state-of-
the-art extractive summarizers on the duc 2004 data were
collected from [hong et al., 2014]. id8-2 and id8-
su4 scores have been found to be highly correlated with
human judgments [nenkova and mckeown, 2011]. there-
fore, we computed id8-2 and id8-su4 scores of
the other systems on the duc2004 summaries directly using
id8. however, the system-generated summaries (base-
lines and state-of-the-arts) were not available for the duc
2005 dataset. hence, we used id8 scores of the various
systems as reported in [zheng et al., 2014].

according to table 1, all of the id8 scores obtained
by our systems outperform all the baselines on both datasets.
hereafter, we refer to the best performing system as ilp-
summ. we perform paired t-test and observe that ilpsumm
shows statistical signi   cance compared to all the baselines.
the summarization method using m dimp
docsetsim measure as

table 2: manual evaluation by 10 evaluators on informativeness
(inf) and linguistic quality (lq) of summaries. average log-
likelihood scores (avg.ll) from parser are also shown.

type
human written
extractive (dpp)
abstractive (msc)
abstractive (ilpsumm)

inf
4.42
3.90
3.78
4.10

lq avg.ll
-129.02
4.35
-142.70
3.81
2.83
-210.02
-180.76
3.63

the most informative document and ranked by majority or-
dering (mo) outperforms all of the other techniques. the
document that has the highest similarity to the total content
captures the central idea of the documents. the id91
scheme that works best with msc is m dimp
lexrank + apo.
ilpsumm also outperforms the msc-based method, i.e., our
approach can generate more informative summaries by glob-
ally maximizing content selection from multiple clusters of
sentences. in summary, content selection of our proposed ab-
stractive systems work at par with the best extractive systems.
discussion: our proposed system identi   es the most impor-
tant document, which is a general human strategy for summa-
rization. the majority ordering strategy prioritizes clusters
that contain sentences which should be mentioned earlier in
a summary. other systems tackle redundancy as a    nal step;
however, we integrate linguistic quality and informativeness
to select the best sentences in the summary using our ilp
based approach.

we performed the rest of our experiments only on the duc
2004 dataset as it has been widely used for multi-document
summarization.
4.3 manual evaluation
we also determine readability of the generated summaries
by obtaining ratings from human judges. following liu and
liu [2009], we ask 10 evaluators to rate 10 sets of four sum-
maries on two different factors     informativeness and linguis-
tic quality. the ratings range from 1 (lowest) to 5 (highest).
all the evaluators have a good command of english and seven
of them are native speakers. evaluators were asked to rate the
summaries based on informativeness (the amount of informa-
tion conveyed) and linguistic quality (readability of the sum-
mary). we randomized the sets of summaries to avoid any
bias.

the four summaries provided to the evaluators are human-
written summary (one summary collected randomly from
four model-summaries per cluster), extractive summary
(dpp), abstractive summary generated using msc (msc)
and abstractive summary generated using our ilp based
method (ilpsumm). we asked each evaluator to complete
10 such tasks, each containing four summaries as explained
above. we normalize ratings of different evaluators to the
same scale. table 2 shows the results obtained by manual
evaluation. according to the judges, the linguistic quality
of ilpsumm (3.63) is signi   cantly better than that of msc
(2.83). further, our summaries (ilpsumm) are more infor-
mative than dpp (3.90) and msc (3.78). dpp is extrac-
tive in nature, hence linguistically, the sentences are generally
more readable. to obtain a coarse estimate of grammatical-

table 3: example of duc2004 abstractive summaries obtained
using our approach (ilpsumm), extractive summaries (dpp) and
and human-written summaries. only a few initial sentences are dis-
played here.

abstractive summary (ilpsumm): hun sen   s cambodian people   s party won
64 of the 122 parliamentary seats in july. opposition ally sam rainsy charged that
hun sen   s party has rejected allegations of intimidation and fraud . hun sen and
ranariddh are to form working groups this week to divide remaining government
posts. but a deal reached between hun sen and his chief rival, prince norodom
ranariddh   s ally, sam rainsy.
extractive summary (dpp): ranariddh and sam rainsy have charged that hun
sen   s victory in the elections was achieved through widespread fraud. hun sen
said his current government would remain in power as long as the opposition
refused to form a new one. cambodian leader hun sen, who heads the cpp, has
offered to share the legislature   s top job with the royalist funcinpec party of
prince norodom ranariddh in order to break the impasse.
human-written summary: cambodian prime minister hun sen rejects demands
of 2 opposition parties for talks in beijing after failing to win a 2/3 majority in
recent elections. sihanouk refuses to host talks in beijing. opposition parties ask
the asian development bank to stop loans to hun sen   s government. ccp de-
fends hun sen to the us senate. funcinpec refuses to share the presidency.
hun sen and ranariddh eventually form a coalition at summit convened by si-
hanouk.
abstractive summary (ilpsumm): lebanese foreign minister kamal khar-
razi made the mediation offer sunday, in a telephone conversation with his syrian
counterpart, farouk al-sharaa. egyptian president hosni mubarak met here sun-
day with syrian president hafez assad to show lebanon   s support for syria and
turkey. in a show of force on friday, turkish troops were deployed this week on
the turkish-syrian border to eradicate krudish rebel bases.
extractive summary (dpp): egyptian president hosni mubarak met here sun-
day with syrian president hafez assad to try to defuse growing tension between
syria and turkey. the talks in damascus came as turkey has massed forces
near the border with syria after threatening to eradicate kurdish rebel bases in
the neighboring country. egypt already has launched a mediation effort to try to
prevent a military confrontation over turkish allegations that syria is harboring
turkish kurdish rebels.
human-written summary: tensions between syria and turkey increased as
turkey sent 10,000 troops to its border with syria. the dispute comes amid accu-
sations by turkey that syria helping kurdish rebels based in syria. kurdish rebels
have been conducting cross border raids into turkey in an effort to gain kurdish
autonomy in the region.

ity, we also compute the con   dence scores of the summaries
using the stanford dependency parser [chen and manning,
2014]. a language model assigns probabilities to sequence
of words; in contrast, the con   dence score of a parser assigns
probabilities to grammatical relations. the values (the lower
the magnitude, the better) are shown in the column avg.ll.
avg.ll obtained by ilpsumm (-180.76) is better than that ob-
tained by msc (-210.02), indicating that the language model
based linguistic quality estimation helps generate more read-
able summaries than the msc method.

table 3 shows a comparison of summaries from the differ-
ent systems using the duc 2004 dataset. as can be seen, the
linguistic quality of the abstractive summaries (ilpsumm) is
acceptable, and the content is well-formed and informative.
our ilp framework can combine information from various
sentences and present a fairly well-formed readable summary.
error analysis: there is still room for improvement in the
linguistic quality of the generated summaries. we analyzed
the summaries that were given lower ratings than the other
options on the basis of linguistic quality. consider the follow-
ing sentence in a system generated summary, which received
low scores from human judges:

the u.n. imposed sanctions since 1992 for its refusal to hand over
the two libyans wanted in the 1988 bombing that killed 270 people
killed.

as can be seen, the phrase    killed 270 people killed     is not
coherent. the language model fails to identify such cases as
the 3-gram sequences of killed 270 people and 270 people
killed are both grammatically coherent. in addition to a lan-
guage model, we can also use a dependency parser to assign
lower weights to paths that have redundant dependencies on
the same nodes. consider the following example:
the deal that will make hun sen prime minister and ranariddh
agreed to a government formed.

the last phrase        a government formed   , is grammatically
incoherent in the context of the sentence. linguistically cor-
rect modi   cations could be     a government being formed or
a government formation. in future work, we plan to address
such issues of grammaticality using dependency parses of
sentences rather than just adjacency relations when building
the word-graph.

5 conclusions and future work
we have proposed an approach to generate abstractive sum-
maries from a document collection. we capture the redundant
information using a simple yet effective id91 technique.
we proposed a novel ilp based technique to select the best
shortest paths in a word-graph to maximize information con-
tent and linguistic quality of a summary. experimental re-
sults on the duc 2004 and 2005 datasets show that our pro-
posed approach outperforms all the baselines and the state-of-
the-art extractive summarizers. based on human judgments,
our abstractive summaries are linguistically preferable than
the baseline abstractive summarization technique. in future
work, we plan to use id141 techniques to further en-
hance quality of the generated summaries. we also plan to
address phrase level redundancies to improve coherence.

acknowledgments
this material is based upon work supported by the national
science foundation under grant no. 0845487.

references
[barzilay and mckeown, 2005] regina barzilay and kathleen r.
mckeown. sentence fusion for multidocument news summa-
rization. computational linguistics, 31(3):297   328, 2005.

[berg-kirkpatrick et al., 2011] taylor berg-kirkpatrick,

dan
gillick, and dan klein. jointly learning to extract and com-
in proc. of the 49th annual meeting of the association
press.
for computational linguistics (acl-hlt 2011), pages 481   490,
2011.

[chen and manning, 2014] danqi chen and christopher d man-
ning. a fast and accurate dependency parser using neural net-
works. in proc. of the 2014 conference on empirical methods in
natural language processing (emnlp), pages 740   750, 2014.
[erkan and radev, 2004] g  unes erkan and dragomir r radev.
lexrank: graph-based lexical centrality as salience in text
journal of arti   cial intelligence research
summarization.
(jair), 22:457   479, 2004.

[filippova, 2010] katja filippova. multi-sentence compression:
in proc. of the 23rd

finding shortest paths in word graphs.

international conference on computational linguistics (coling
2010), pages 322   330, 2010.

[ganesan et al., 2010] kavita ganesan, chengxiang zhai, and ji-
awei han. opinosis: a graph-based approach to abstrac-
tive summarization of highly redundant opinions. in proc. of
the 23rd international conference on computational linguistics
(coling 2010), pages 340   348, 2010.

[genest and lapalme, 2010] pierre-etienne genest and guy la-
palme. text generation for abstractive summarization. in proc.
of the 3rd text analysis conference (tac 2010), 2010.

[hong et al., 2014] kai hong, john m conroy, benoit favre, alex
kulesza, hui lin, and ani nenkova. a repository of state of
the art and competitive baseline summaries for generic news
summarization. in proc. of the 9th international conference on
language resources and evaluation (lrec   14), pages 1608   
1616, 2014.

[knight and marcu, 2002] kevin knight and daniel marcu. sum-
marization beyond sentence extraction: a probabilistic ap-
intelligence,
proach to sentence compression.
139(1):91   107, 2002.

arti   cial

[lin, 2004] chin-yew lin. id8: a package for automatic
evaluation of summaries. in proc. of the acl-04 workshop on
text summarization branches out, pages 74   81, 2004.

[liu and liu, 2009] fei liu and yang liu. from extractive to ab-
stractive meeting summaries: can it be done by sentence com-
pression? in proc. of the 47th annual meeting of the association
for computational linguistics (acl-ijcnlp 2009), pages 261   
264, 2009.

[mani and maybury, 1999] inderjeet mani and mark t maybury.

advances in automatic text summarization. mit press, 1999.

[mehdad et al., 2013] yashar mehdad,

giuseppe carenini,
frank w tompa, and raymond t ng. abstractive meeting
summarization with entailment and fusion. in proc. of the 14th
european workshop on id86, pages
136   146, 2013.

[mihalcea and tarau, 2004] rada mihalcea and paul tarau. tex-
in proc. of the conference
trank: bringing order into texts.
on empirical methods in natural language processing (emnlp
2004), pages 404   411, 2004.

[nenkova and mckeown, 2011] ani nenkova and kathleen mck-
eown. id54. foundations and trends in
information retrieval, 5(2-3):103   233, 2011.

[oya et al., 2014] tatsuro oya, yashar mehdad, giuseppe
carenini, and raymond ng. a template-based abstractive
meeting summarization: leveraging summary and source
in proc. of the 8th international natural
text relationships.
language generation conference (iid86 2014), pages 45   53,
2014.

[wan, 2008] xiaojun wan. an exploration of document impact
in proc. of
on graph-based id57.
the 2008 conference on empirical methods in natural language
processing (emnlp 2008), pages 755   762, 2008.

[wang and cardie, 2013] lu wang and claire cardie. domain-
independent abstract generation for focused meeting summa-
in proc. of the the 51st annual meeting of the asso-
rization.
ciation for computational linguistics (acl 2013), pages 1395   
1405, 2013.

[zajic et al., 2007] david zajic, bonnie j dorr, jimmy lin, and
richard schwartz. multi-candidate reduction: sentence com-
pression as a tool for document summarization tasks. informa-
tion processing & management, 43(6):1549   1570, 2007.

[zheng et al., 2014] hai-tao zheng, shu-qin gong, hao chen,
yong jiang, and shu-tao xia. id57
based on sentence id91. in neural information processing,
pages 429   436. springer, 2014.

