improving id57 via text classi   cation

ziqiang cao1,2 wenjie li1,2

sujian li3

furu wei4

1department of computing, the hong kong polytechnic university, hong kong

2hong kong polytechnic university shenzhen research institute, china

3key laboratory of computational linguistics, peking university, moe, china

4microsoft research, beijing, china

{cszqcao, cswjli}@comp.polyu.edu.hk

lisujian@pku.edu.cn
fuwei@microsoft.com

6
1
0
2

 

v
o
n
8
2

 

 
 
]
l
c
.
s
c
[
 
 

1
v
8
3
2
9
0

.

1
1
6
1
:
v
i
x
r
a

abstract

developed so far, id57 has
reached its bottleneck due to the lack of suf   cient train-
ing data and diverse categories of documents. text clas-
si   cation just makes up for these de   ciencies. in this
paper, we propose a novel summarization system called
tcsum, which leverages plentiful text classi   cation
data to improve the performance of multi-document
summarization. tcsum projects documents onto dis-
tributed representations which act as a bridge between
text classi   cation and summarization. it also utilizes the
classi   cation results to produce summaries of different
styles. extensive experiments on duc generic multi-
document summarization datasets show that, tcsum
can achieve the state-of-the-art performance without us-
ing any hand-crafted features and has the capability to
catch the variations of summary styles with respect to
different text categories.

introduction

the increasing online information has necessitated the de-
velopment of effective automatic multi-document summa-
rization systems. through long-term research, the learning-
based summarization approaches have grown to become
dominant in the literature. by far, a prominent issue that
hinders the further improvement of supervised approaches
is the lack of suf   cient human summaries used for train-
ing (cao et al. 2016a). for instance, the widely-used duc1
generic id57 benchmark datasets
contain less than 400 human reference summaries in total.
writing summaries is an extremely labor-intensive and time-
consuming process. because of the limitation of training
data, a learning-based summarization system is often forced
to heavily rely on well-designed features. simple models
like support vector regression can achieve the state-of-the-
art performance with extensive linguistic and statistical fea-
tures (hong and nenkova 2014). to break through the bot-
tleneck of insuf   cient summarization training data, taking
advantage of other rich data sources might be a good idea
worth considering.
copyright c(cid:13) 2017, association for the advancement of arti   cial
intelligence (www.aaai.org). all rights reserved.

1http://duc.nist.gov/

compared with summarization,

meanwhile, existing summarization approaches basically
apply a uniform model to generate summaries for the doc-
uments in different text categories. however, according to
what we observe, summary styles in different categories
can vary to a large degree. take the two common cate-
gories in duc datasets, i.e., natural disaster and biogra-
phy as an example. to summarize a natural disaster like a
hurricane, people tend to present its moving path and the
loss it brings. by contrast, a biography summary is ex-
pected to include the personal pro   le and the main contri-
butions of the person. apparently, summaries should focus
on different aspects of the topics which belong to the corre-
sponding categories. when the document category is given,
(kedzie, mckeown, and diaz 2015)    nds that the introduc-
tion of category-speci   c language models largely promotes
the summarization performance. the experiments of (wan et
al. 2015) also show that a summarization model with good
overall performance still produces low-quality summaries in
certain document sets. the summary style issue previously
mentioned may partly explain these phenomena and suggest
a possible way to improve the summarization performance.
the text classi   cation
datasets are much richer. note that both summarization and
text classi   cation require models to understand the seman-
tics of documents. better text representations learned by
classi   cation data can help to train more effective summa-
rization models. moreover, if we know the category of a
document, we will have a chance to explore more proper
summary styles. to this end, we propose a novel summa-
rization system called tcsum, which leverages text classi-
   cation data to improve the performance of summarization.
since distributed representations of documents have demon-
strated advantages in both summarization (e.g., (kobayashi,
noguchi, and yatsuka 2015)) and text classi   cation (e.g.,
(lai et al. 2015)), tcsum projects all documents onto the
distributed representations that are shared by the two tasks.
then, for text classi   cation, the document embeddings are
followed by a classi   er to learn their association with the
categories. for summarization, the document embeddings
are transformed to match the    meaning    of the reference
summaries. to make the transformed embeddings also hold
the information of summary styles, we utilize the classi   -
cation result and develop a category-speci   c transformation
process. our model adopts the recent hot topic of neural net-

work based id21 (e.g., from syntactic parsing to
discourse parsing (li, li, and hovy 2014)). it is also noted
that our model is totally data-driven, i.e., all the abstract fea-
tures are learned automatically.

we verify the effectiveness of tcsum on duc generic
summarization benchmark datasets. tcsum is able to com-
pete with state-of-the-art summarization systems which usu-
ally heavily depends on hand-crafted features. we also ob-
serve that tcsum indeed catches the variations of the sum-
mary styles among different text categories.
    we leverage text classi   cation datasets to learn better doc-
    we explore the variations of summary styles with respect
    we develop a competitive summarization system which

the contributions of this paper are listed as follows:

ument representations for summarization.

to different text categories.

does not need any hand-crafted features.

method

let d denote a document which is composed of a set of
sentences {si|i     [1, n ]}. for text classi   cation, we use
c to stand for the entire set of categories. we assume d
belongs to one of c, i.e., cd     [1,|c|] where cd repre-
sents the actual category for of the document d. the text
classi   cation model is trained to predict a category for d.
for supervised sentence ranking required by learning-based
summarization, each sentence holds a saliency score, usu-
ally measured with respect to the human summaries (here-
after the reference summaries). the summarization model
is expected to learn how to rank sentences in accord with the
actual sentence saliency.

in this section, we describe how our summarization sys-
tem, called tcsum, ranks the sentences with the help of
text classi   cation. the overall framework of tcsum is illus-
trated in fig. 1. at    rst, a text classi   cation model is trained
using a convolutional neural network. this model projects
a document onto the distributed representation, and adds a
softmax classi   er to predict the category of the document.
the summarization model shares the same projection pro-
cess to generate document embeddings given that the se-
mantic analysis and understanding of documents are essen-
tial for both classi   cation and summarization. afterwards,
it transforms the document embedding to the summary em-
bedding and tries to maximize the match to the    meaning   
of the reference summaries. to make the transformed sum-
mary embedding sensitive to the different summary styles,
tcsum learns category-speci   c transformation matrices ac-
cording to the predicted categories. finally, the sentences are
ranked according to their saliency scores calculated based
on the similarity between the sentence embedding and the
summary embedding. the rest of this section describes the
details of our model.
text classi   cation model
convolutional neural networks (id98s) can learn the ab-
stract representations of id165s effectively and tackle
the sentences with variable lengths naturally. models us-
ing id98s have achieved excellent performance both in text

figure 1: overview of tcsum.

classi   cation (lai et al. 2015) and summarization (yin and
pei 2015). in this paper, we develop a simple id98-based
classi   cation model. speci   cally, we use a id98 to project
a sentence s onto its distributed representation v(s)     rm,
i.e.,

id98             v(s)

s

(1)
a basic id98 contains a convolution operation on the top
of id27s, which is followed by a pooling op-
eration. let v(wi)     rk refer to the k-dimensional word
embedding corresponding to the ith word in the sentence.
let v(wi : wi+j) be the concatenation of id27s
[v(wi),       , v(wi+j)]. a convolution operation involves a
   lter w       rm  hk, which is applied to a window of h
words to produce the abstract features gh

i     rm,

i = f (w      v(wi : wi+j)),
gh

(2)
where f (  ) is a non-linear function and the use of tanh is
the common practice. to make it simple, the bias term is left
out. this    lter is applied to each possible window of words
in the sentence to produce a feature map. subsequently, a
pooling operation is applied over the feature map to obtain
the    nal features   gh     rm of the    lter. here we use the
max-over-time pooling (collobert et al. 2011).

  gh = max{gh

2 ,      }

1 , gh

(3)

the primary purpose of this pooling is to capture the most
important features in a feature map.   gh is the output of the
id98, i.e., the embedding of a sentence.

then a document is represented by the average pooling of

its sentence embeddings, just like (lai et al. 2015),

v(d) =

1
|d|

v(s)

(4)

s   d

to learn the association between the document embedding
and the categories, the document embedding is followed by
a softmax classi   er:

vc(d) = softmax(w      v(d)),

(5)
where w       r|c|  m is the weight matrix, and vc(d)    
r|c| is the predicted id203 distribution over the cate-
gories.

(cid:88)

summarization model
as previously mentioned, the summarization model in tc-
sum, shares the same convolution and pooling operations
with the classi   cation model when generating the document
embedding v(d). then, tcsum transforms v(d) to match
the    meaning    of the reference summary, i.e.,
vs(d) = tanh(w      v(d)),

(6)
where vs(d)     rm is the transformed embedding called
summary embedding, and w       rm  m is the transforma-
tion matrix. note that we de   ne the same dimension for both
document and summary embeddings. this setting simpli   es
the sentence ranking process, which is explained later.

we would also like the summary embedding to hold the
information of summary styles. inspired by the work of
(dong et al. 2014), we develop the category-speci   c trans-
formation matrix w   according to the predicted category.
|c|
we introduce |c| sub-matrices (w1
   ), with each
directly corresponding to one text category. based on the
predicted category derived from eq. 5, the transformation
matrix w   is computed as the weighted sum of these sub-
matrices.

  ,       , w

i=1

w   =

(7)
in this way, w   is automatically biased to the sub-matrix of
the predicted text category.

vi
c(d)wi
  

the summary embedding vs(d) is expected to match the
   meaning    of the reference summaries. it should have the
ability to properly judge the sentence saliency, which is con-
sistent with the reference summaries. following (kobayashi,
noguchi, and yatsuka 2015), we use the cosine similarity
between the summary embedding vs(d) and a sentence
embedding v(s) to predict the sentence saliency rs.

(cid:88)|c|

rs =

v(s)     vt

s (d)

||v(s)||     ||vs(d)||

(8)

that is why both document and summary embeddings are of
the same dimensionality.
training
we use the pre-trained id27s and do not up-
date them to avoid over-   tting. thus, there are three types of
weight matrices in our models, i.e., w  , w   and the trans-
|c|
formation sub-matrices (w1
   ). since the text
classi   cation dataset is much larger than the summarization
dataset, w   and w   are learned from the classi   cation data
only. yet, the transformation matrices have to be trained with
the summarization data.

  ,       , w

for text classi   cation, we adopt the cross id178 as the

cost function, i.e.,

1{cd == i} ln vi

i=1

  c(d) =

(9)
where 1{cd == i} equals 1 iff the actual category is i. un-
der this cost function, the gradient of softmax is similar to a
linear function, which fastens the training process.

c(d),

for summarization, we apply the pairwise ranking strat-
egy (collobert et al. 2011) to tune the weights. speci   cally,

(cid:88)|c|

each time we randomly select a sentence with a high actual
saliency score and the other one with a low actual saliency
score. they are denoted as s+ and s   , respectively. by eq. 8,
we obtain their predicted saliency scores. with the pairwise
ranking criterion, tcsum should give s+ a higher score in
comparison with s   . therefore the cost function is de   ned
as follows:

  s(d) = max(0,         rs+ + rs    ),

(10)

where     is a margin threshold.

with the above two cost functions, we apply the diagonal
variant of adagrad with mini-batches (duchi, hazan, and
singer 2011) to update model parameters. adagrad adapts
the learning rate for different parameters at different steps.
thus it is less sensitive to initial parameters than the stochas-
tic id119.

experiments

datasets
summarization the most commonly used evaluation cor-
pora for summarization are the ones published by the docu-
ment understanding conferences (duc) and text analytics
conferences (tac2). in this work, we focus on the generic
id57 task, which was carried out
in duc 2001, 2002 and 2004. the documents are all from
the news domain and a collection of documents related to
the same topic are grouped together into a cluster. each clus-
ter is accompanied by 2 to 4 reference summaries written by
human experts. our summarization model compiles the doc-
uments in a cluster into a single document. table 1 shows
the size of the three datasets and the summary length lim-
itation for each task. the duc datasets come from a wide
range of categories, and we manually categorize the duc
documents into 11 categories, i.e., biography, culture, busi-
ness, health, politics, law, society, natural disaster, sci-
ence, sports and international. the category distribution of
duc 2002 is illustrated in fig. 2. among these categories,
natural disaster, politics and biography account for 60% of
the documents.

dataset
duc 01
duc 02
duc 04

cluster # doc. #
30
59
50

309
567
500

ref. #
60
116
200

limitation
100 words
100 words
665 bytes

table 1: statistics of the summarization datasets.

text classi   cation in order to bene   t from text classi   ca-
tion, we need to have a classi   cation dataset large enough to
cover all the 11 categories discovered in the duc datasets.
we build such a dataset from the new york times (nyt)
annotated corpus 3. the nyt corpus contains over 1.8
million articles published and annotated by the new york
times. notably, the new york times is also an important
data provider for duc. the nyt documents have rich meta-
data. we utilize three types of metadata (types of material,

2http://www.nist.gov/tac/ from 2007     now
3https://catalog.ldc.upenn.edu/ldc2008t19

ing, it employs a simple greedy algorithm, similar to our pre-
vious work (cao et al. 2016b), to select summary sentences.

baseline methods
we compare tcsum with the best peer systems participating
duc evaluations, which are named as    peer    plus their ids.
in addition, we include r2n2 (cao et al. 2015a)5, a state-
of-the-art supervised summarization model based on neural
networks. it applies the id56 to learn the
combination of hand-crafted features. notably, r2n2 still
heavily depends on hand-crafted features. by contrast, tc-
sum is fully data-driven, i.e., features are all learned auto-
matically.

we implement a widely-used learning-based summariza-
tion method support vector regression (svr) (li et al.
2007). it extracts a number of manually-compiled features
from a sentence, such as tf (the frequency of a word in the
cluster), cf(the number of documents containing this word
in the cluster) and number (whether the sentence contains
a number), etc. we also design three neural network based
baselines, named as notc, singlet and emsim. the    rst
two are used to verify the value of text classi   cation notc
does not use any classi   cation data and just applies the sum-
marization model of tcsum. it is designed to check whether
the summarization model can work alone. singlet ignores
the predicted text category and uses a single transformation
matrix. it explores the effect of summary styles. the last
one, emsim, aims to test whether or not we need to learn
the summary embedding. it just uses the cosine similarity
between a sentence embedding v(s) and the document em-
bedding v(d) to rank sentences. emsim is an unsupervised
summarization model and similar to (kobayashi, noguchi,
and yatsuka 2015). all these baselines employ the same sen-
tence selection process as our model.

summarization performance
we conduct three-fold validation. the model is trained on
two years    data and tested on the remaining year   s. the
id8 scores of the models being compared are presented
in table 2. we draw lines in this table to distinguish the mod-
els with and without hand-crafted features.

as can be seen, among the models completely dependent
on automatically learned features, tcsum achieves high-
est performance on all the three datasets. the poor perfor-
mance of emsim denotes that we could not directly use
the document embeddings learned from text classi   cation to
measure the sentence saliency for summarization. note that
even notc achieves competitive performance with svr.
thus summarization models without hand-crafted features
are doable. meanwhile, singlet greatly outperforms notc.
it veri   es that text classi   cation can indeed help a summa-
rization model to learn better id194s. al-
though tcsum does not always greatly surpass singlet in
terms of id8s, we will show in the next section that it
usually captures different summary styles.

figure 2: category distribution on duc 2002.

taxonomic classi   ers and online descriptors) to pick out
the documents within those 11 categories. we notice that the
numbers of documents in different categories are extremely
imbalanced. for example, the category of business contains
more than 140,000 documents, while there are only 3,200
documents in the category of natural disaster. therefore,
we conduct a sampling process to ensure that each category
contains 3000-5000 documents. this classi   cation dataset is
about 30 times larger than the summarization dataset.

the cross validation shows that the learned classi   ca-
tion model of tcsum achieves over 85% accuracy on this
dataset. since classi   cation is not the focus of this paper,
here we ignore the detailed performance evaluation of our
classi   cation model.

evaluation metric for summarization
for evaluation, we use id84 (lin 2004), which has
been regarded as a standard automatic evaluation metric
since 2004. id8 measures summary quality by count-
ing overlapping units such as id165s, word sequences and
word pairs between the candidate summary and the refer-
ence summary. following the common practice, we take
id8-1 and id8-2 recall scores as the main metrics
for comparison. id8-1 and id8-2 measure the uni-
gram and bi-gram similarities, respectively. during training,
the actual saliency of a sentence (eq. 10) is also evaluated
by id8-2.

model settings
for id98, we introduce a id27 set
trained
on a large english news corpus (1010 tokens) using
id97 (mikolov et al. 2013). the dimension of word
embeddings is set to 50, as in many previous papers (e.g.,
(collobert et al. 2011)). we also set the dimension of sen-
tence and document embeddings equivalent the dimension
of id27s, and the window size h to 2, to be con-
sistent with id8-2 evaluation. we empirically set the
margin threshold of pairwise ranking     = 0.1. the initial
learning rate is 0.1 and batch size is 128.

a summary is obliged to offer both informative and non-
redundant content. while tcsum focuses on sentence rank-

4id8-1.5.5 with options: -n 2 -m -u -c 95 -x -r 1000 -f a
-p 0.5 -t 0. the parameter of length constraint is    -l 100    for duc
2001/2002, and    -b 665    for duc 2004.

5although r2n2 can use integer id135 to select
better sentences, here we just consider the result of greedy selection
for a fair comparison.

2001

id8-1
year model
33.03
peer t
29.78
svr
35.88
r2n2
notc
33.45
emsim 24.66
singlet
35.22
tcsum 36.45
35.15
peer 26
31.56
svr
36.84
r2n2
notc
34.02
emsim 29.46
singlet
36.54
tcsum 36.90
37.88
peer 65
36.18
svr
r2n2
38.16
notc
35.66
emsim 30.80
singlet
37.94
tcsum 38.27

2002

2004

id8-2
7.86
6.01
7.64
6.07
2.67
7.42
7.66
7.64
6.78
8.52
7.39
5.28
8.44
8.61
9.18
9.34
9.52
8.66
5.07
9.46
9.66

table 2: id8 scores (%) of different methods.

compared with other models, tcsum largely outper-
forms svr and peer systems most of the time, and it is
always superior to the state-of-the-art method r2n2. con-
sidering tcsum is not supplemented with any hand-crafted
features, its performance is very promising. after taking a
closer look at the feature weights learned by svr, we    nd
the most important feature to measure sentence saliency is
cf. since we treat the documents in a topic cluster as a sin-
gle document, this feature is lost in our current summariza-
tion model. it may be an important aspect that impedes the
more excellent performance of tcsum.
discussion on summary style learning
we examine the ability of tcsum to learn summary styles
in two ways. at    rst, we speculate that similar transforma-
tion matrices tend to generate summaries with similar styles.
therefore, we calculate the similarity among the transforma-
|c|
tion matrices (w1
   ). here we    atten each matrix
into a vector and use the cosine similarity to measure the
similarity. the scores of different transformation matrices
are presented in fig. 3. for ease of reference, we only show
the results of three common categories on ducs, i.e., biog-
raphy, politics and natural disaster. as can be seen, the sim-
ilarity relations of these three categories vary greatly, which
matches the intuition that the large difference of the sum-
mary styles exists among these categories. for biography,
we    nd its transformation matrix is similar to 4 categories   .
they are business, culture, politics and international re-
lation. one possible reason is that summaries in biography
necessarily tell the career-related information of a person.
since duc prefers choosing biographies about artists, busi-
nessmen and politicians, it is reasonable the summary style
for biography to be associated with these categories. by
contrast, natural disaster does not present obvious similar-
ity to any other category. we observe that summaries in nat-

  ,       , w

ural disaster often contain a series of times, sites and num-
bers, while other categories seldom need so many details.
for politics, we    nd it is similar to international relation-
ship and law. the former is understandable since we may
use a number of terms of politics when describing interna-
tional relationships. the latter may be caused by the news
content. many documents in this category are concerned
with political scandals which often lead to lawsuits. interest-
ingly, there is an obvious negative similarity between poli-
tics and culture. the wordings in politics are often thought
to be serious while the documents in culture are usually re-
lated to entertainment.

we also inspect the style change of the summaries gener-
ated according to different categories. to this end, we man-
ually assign a category to a document cluster and then cal-
culate the sentence saliency based on our summarization
model. the salient sentences with respect to different cat-
egories are shown in table 3. due to the limit of space,
we only display the top ranked summary sentences with the
styles of three common text categories.
       d097    is about a hurricane (natural disaster).
       d066    introduces the founder of wall-mart (biography).
       d076    describes the resignation of a prime minister (pol-

itics).

as can be seen, the salient sentences calculated by the cor-
rect categories can properly represent the main idea of the
document cluster. although    d097    and    d066    are not re-
lated to politics, sentences selected by the corresponding
transformation matrix still contain many terms of politics. it
is also shown that the three biography sentences contain ei-
ther the words describing the careers (killer, mayor, founder)
or the evaluative words (better, boldly). the career is a part
of personal pro   le, and the description of main contributions
of a person usually involves the evaluative words. therefore,
the corresponding transformation matrix seems to well catch
the two types of needs for biography summaries. we read
the documents in    d066    and    d076    carefully, and    nd
there is no sentence exactly matching natural disaster. thus
it is not surprising that the sentences selected by natural dis-
aster in these two clusters are somewhat strange. however,
we can see both sentences contain the date and site infor-
mation. this is absolutely consistent with the style that a
summary of natural disaster is expected to have. moreover,
both the money value and the word    bombing    can be used
to describe the loss of a disaster. it appears that, the transfor-
mation matrix for natural disaster still works well even on
a topic other than natural disaster, with    due diligence    to
complete its own task.

related work

work on extractive summarization spans a large range of ap-
proaches. starting from unsupervised methods, one of the
widely known approaches is maximum marginal relevance
(mmr) (carbonell and goldstein 1998). it used a greedy
approach to select sentences and considered the trade-off
between saliency and redundancy. good results could be
achieved by reformulating it as an integer linear program-

cluster

d097

category
natural disaster
biography

d066

d076

politics
biography

natural disaster

politics
politics

biography

sentence
the storm, packing winds of up to 135 mph, raged into charleston thursday night.
   this is a dangerous, killer hurricane, the likes of which few people who have lived all
their lives in charleston have experienced,    warned mayor joseph p. riley jr.
gov. joe frank harris declared a state of emergency in six counties.
sam walton, founder of the wal-mart chain of discount supermarkets who died of
cancer in april, negotiated these pitfalls much better than most.
by 1991 the chain   s sales had risen to nearly dollars 44bn, making it the world   s largest
retailer in terms of revenues, and the walton family probably america   s richest.
bud is a senior vice president and board member of wal-mart.
flamboyant former defense minister hazeltine   s challenge to prime minister mar-
garet thatcher for leadership of the conservative party has caused a political sensa-
tion in britain.
in the persian gulf crisis, she boldly joined with george bush in sending troops to the
middle east.

natural disaster among western allies, she was alone at ronald reagan   s side in 1986 in supporting the

u.s. bombing of libya.

table 3: salient sentences selected by different categories. sentences in the correct categories are displayed    rst.

2015) trained a language model based on convolutional neu-
ral networks to project sentences onto distributed represen-
tations. (cheng and lapata 2016) treated single document
summarization as a sequence labeling task and modeled it by
recurrent neural networks. others like (kobayashi, noguchi,
and yatsuka 2015) simply used the sum of trained word em-
beddings to represent sentences or documents. in addition to
extractive summarization, deep learning technologies have
also been applied to compressive and abstractive summa-
rization (filippova et al. 2015; rush, chopra, and weston
2015).

conclusion and future work

in this paper, we propose a novel summarization system
called tcsum, which leverages text classi   cation to im-
prove the performance of summarization. extensive exper-
iments on duc generic summarization benchmark datasets
show that tcsum achieves the state-of-the-art performance,
even without using any hand-crafted features. we also ob-
serve that tcsum indeed catches the variations of summary
styles among different text categories. we believe our model
can be used to other summarization tasks including query-
focused summarization and guided summarization. in addi-
tion, we plan to let the model distinguish documents in a
topic cluster, which is better adapted to the multi-document
summarization.

acknowledgments

the work described in this paper was supported by re-
search grants council of hong kong (polyu 152094/14e),
national natural science foundation of china (61272291,
61672445) and the hong kong polytechnic university (g-
ybp6, 4-bcb5, b-q46c). the correspondence authors of
this paper are wenjie li and sujian li.

references

[cao et al. 2015a] cao, z.; wei, f.; dong, l.; li, s.; and
zhou, m. 2015a. ranking with id56s

figure 3: similarity among the transformation matrices (we
set the self similarity scores to 0).

ming (ilp) problem which was able to    nd the global op-
timal solution (mcdonald 2007; gillick and favre 2009).
graph-based models such as manifold (wan and xiao 2009)
played an important role in extractive summarization be-
cause of its ability to re   ect various sentence relationships.
in contrast to these unsupervised methods, there are also
many successful learning-based summarization approaches.
different classi   ers have been explored, including condi-
tional random field (galley 2006), support vector regres-
sion (li et al. 2007) and id28 (li, qian, and
liu 2013), etc.

recently, the application of deep neural network tech-
niques has attracted more and more interest in the summa-
rization research. (genest, gotti, and bengio 2011) used
unsupervised auto-encoders to represent both manual and
system summaries for summary evaluation. their method
, however, did not surpass id8.
(cao et al. 2015a;
cao et al. 2015b) tried to use neural networks to complement
sentence ranking features. although the models achieved the
state-of-the-art performance, they still relied on hand-crafted
features. a few researches explored to directly measure sim-
ilarity based on distributed representations. (yin and pei

[lai et al. 2015] lai, s.; xu, l.; liu, k.; and zhao, j. 2015.
recurrent convolutional neural networks for text classi   ca-
tion. in proceedings of aaai, 2267   2273.
[li et al. 2007] li, s.; ouyang, y.; wang, w.; and sun, b.
2007. id57 using support vector
regression. in proceedings of duc.
[li, li, and hovy 2014] li, j.; li, r.; and hovy, e. h. 2014.
recursive deep models for discourse parsing. in proceed-
ings of emnlp, 2061   2069.
[li, qian, and liu 2013] li, c.; qian, x.; and liu, y. 2013.
using supervised bigram-based ilp for extractive summa-
rization. in proceedings of acl, 1004   1013.
[lin 2004] lin, c.-y. 2004. id8: a package for automatic
evaluation of summaries. in proceedings of the acl work-
shop, 74   81.
[mcdonald 2007] mcdonald, r. 2007. a study of global
id136 algorithms in id57.
springer.
[mikolov et al. 2013] mikolov, t.; chen, k.; corrado, g.;
and dean, j. 2013. ef   cient estimation of word representa-
tions in vector space. arxiv preprint arxiv:1301.3781.
[rush, chopra, and weston 2015] rush, a. m.; chopra, s.;
and weston, j. 2015. a neural attention model for abstrac-
in proceedings of emnlp,
tive sentence summarization.
379   389.
[wan and xiao 2009] wan, x., and xiao, j. 2009. graph-
based multi-modality learning for
topic-focused multi-
document summarization. in proceedings of ijcai, 1586   
1591.
[wan et al. 2015] wan, x.; cao, z.; wei, f.; li, s.; and zhou,
m. 2015. id57 via discriminative
summary reranking. arxiv preprint arxiv:1507.02062.
[yin and pei 2015] yin, w., and pei, y. 2015. optimizing
sentence modeling and selection for document summariza-
tion. in proceedings of ijcai, 1383   1389.

in

and its application to id57.
proceedings of aaai.
[cao et al. 2015b] cao, z.; wei, f.; li, s.; li, w.; zhou, m.;
and wang, h. 2015b. learning summary prior represen-
tation for extractive summarization. proceedings of acl:
short papers 829   833.
[cao et al. 2016a] cao, z.; chen, c.; li, w.; li, s.; wei, f.;
and zhou, m. 2016a. tgsum: build tweet guided multi-
document summarization dataset. in proceedings of aaai.
[cao et al. 2016b] cao, z.; li, w.; li, s.; and wei, f. 2016b.
attsum: joint learning of focusing and summarization with
neural attention. in proceedings of coling.
[carbonell and goldstein 1998] carbonell, j., and goldstein,
j. 1998. the use of mmr, diversity-based reranking for re-
ordering documents and producing summaries. in proceed-
ings of sigir, 335   336.
[cheng and lapata 2016] cheng, j., and lapata, m. 2016.
neural summarization by extracting sentences and words.
arxiv preprint arxiv:1603.07252.
[collobert et al. 2011] collobert, r.; weston, j.; bottou, l.;
karlen, m.; kavukcuoglu, k.; and kuksa, p. 2011. natural
language processing (almost) from scratch. the journal of
machine learning research 12:2493   2537.
[dong et al. 2014] dong, l.; wei, f.; zhou, m.; and xu, k.
2014. adaptive multi-compositionality for recursive neural
models with applications to id31. in proceed-
ings of aaai.
[duchi, hazan, and singer 2011] duchi, j.; hazan, e.; and
singer, y. 2011. adaptive subgradient methods for online
learning and stochastic optimization. the journal of ma-
chine learning research 12:2121   2159.
[filippova et al. 2015] filippova, k.; alfonseca, e.; col-
menares, c. a.; kaiser, l.; and vinyals, o. 2015. sen-
tence compression by deletion with lstms. in proceedings of
emnlp, 360   368.
[galley 2006] galley, m. 2006. a skip-chain conditional
random    eld for ranking meeting utterances by importance.
in proceedings of emnlp, 364   372.
[genest, gotti, and bengio 2011] genest, p.-e.; gotti, f.;
and bengio, y. 2011. deep learning for automatic sum-
mary scoring. in proceedings of the workshop on automatic
text summarization, 17   28.
[gillick and favre 2009] gillick, d., and favre, b. 2009. a
scalable global model for summarization. in proceedings of
the workshop on ilp for nlp, 10   18.
[hong and nenkova 2014] hong, k., and nenkova, a. 2014.
improving the estimation of word importance for news
id57. in proceedings of eacl.
[kedzie, mckeown, and diaz 2015] kedzie, c.; mckeown,
k.; and diaz, f. 2015. predicting salient updates for disaster
summarization. in proceedings of acl, 1608   1617.
[kobayashi, noguchi, and yatsuka 2015] kobayashi,
h.;
noguchi, m.; and yatsuka, t. 2015. summarization based
in proceedings of emnlp,
on embedding distributions.
1984   1989.

