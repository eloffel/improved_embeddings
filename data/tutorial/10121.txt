8
0
0
2

 
t
c
o
8

 

 
 
]
s
d
.
s
c
[
 
 

1
v
5
5
3
1

.

0
1
8
0
:
v
i
x
r
a

community structure in large networks: natural cluster sizes

and the absence of large well-de   ned clusters    

jure leskovec    

kevin j. lang    

anirban dasgupta     michael w. mahoney   

abstract

a large body of work has been devoted to de   ning and identifying clusters or communities in social
and information networks, i.e., in graphs in which the nodes represent underlying social entities and
the edges represent some sort of interaction between pairs of nodes. most such research begins with
the premise that a community or a cluster should be thought of as a set of nodes that has more
and/or better connections between its members than to the remainder of the network. in this paper,
we explore from a novel perspective several questions related to identifying meaningful communities
in large social and information networks, and we come to several striking conclusions.

rather than de   ning a procedure to extract sets of nodes from a graph and then attempt to
interpret these sets as a    real    communities, we employ approximation algorithms for the graph
partitioning problem to characterize as a function of size the statistical and structural properties of
partitions of graphs that could plausibly be interpreted as communities. in particular, we de   ne the
network community pro   le plot, which characterizes the    best    possible community   according to the
conductance measure   over a wide range of size scales. we study over 100 large real-world networks,
ranging from traditional and on-line social networks, to technological and information networks and
web graphs, and ranging in size from thousands up to tens of millions of nodes.

our results suggest a signi   cantly more re   ned picture of community structure in large networks
than has been appreciated previously. our observations agree with previous work on small networks,
but we show that large networks have a very di   erent structure.
in particular, we observe tight
communities that are barely connected to the rest of the network at very small size scales (up to
    100 nodes); and communities of size scale beyond     100 nodes gradually    blend into    the expander-
like core of the network and thus become less    community-like,    with a roughly inverse relationship
between community size and optimal community quality. this observation agrees well with the
so-called dunbar number which gives a limit to the size of a well-functioning community.

however, this behavior is not explained, even at a qualitative level, by any of the commonly-used
network generation models. moreover, it is exactly the opposite of what one would expect based
on intuition from expander graphs, low-dimensional or manifold-like graphs, and from small social
networks that have served as testbeds of community detection algorithms. the relatively gradual
increase of the network community pro   le plot as a function of increasing community size depends in
a subtle manner on the way in which local id91 information is propagated from smaller to larger
size scales in the network. we have found that a generative graph model, in which new edges are
added via an iterative    forest    re    burning process, is able to produce graphs exhibiting a network
community pro   le plot similar to what we observe in our network datasets.

   a conference proceedings version of this paper appeared in www 2008 as [115]. in addition, this paper is substantially

the same as our manuscript of march 7, 2008 [114].

   carnegie mellon university, pittsburgh, pa 15213. email: jure@cs.cmu.edu
   yahoo! research, sunnyvale, ca 94089. email: {langk, anirban}@yahoo-inc.com
  stanford university, stanford, ca 94305. email: mmahoney@cs.stanford.edu

1

2

contents

1 introduction

1.1 overview of our approach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.2 summary of our results
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.3 outline of the paper . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2 background on communities and overview of our methods

2.1 social and information network datasets we analyze
. . . . . . . . . . . . . . . . . . . . .
2.2 clusters and communities in networks . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.3 approximation algorithms for    nding low-conductance cuts . . . . . . . . . . . . . . . . .

3 the network community pro   le plot (ncp plot)

3.1 de   nitions for the network community pro   le plot
3.2 community pro   le plots for expander, low-dimensional, and small social networks
3.3 community pro   le plots for large social and information networks
3.4 more community pro   le plots for large social and information networks

. . . . . . . . . . . . . . . . . . . . . .
. . . .
. . . . . . . . . . . . .
. . . . . . . . . .

4 more structural observations of our network datasets

4.1 general statistics on our network datasets . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.2 network    whiskers    and the    core    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4.3 bags of whiskers and communities of composed whiskers . . . . . . . . . . . . . . . . . . .
4.4 community pro   le of networks with no 1-whiskers
. . . . . . . . . . . . . . . . . . . . . .

5 comparison to other algorithms

5.1 cross-checking between algorithms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.2 lower bounds on cut conductance
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5.3 local spectral and metis+mqi . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

6 models for network community structure

6.1 community pro   le plots for commonly-used network generation models
. . . . . . . . . .
6.2 very sparse random graphs have very unbalanced deep cuts . . . . . . . . . . . . . . . . .
6.3 an intuitive toy model for generating an upward-sloping ncp plot . . . . . . . . . . . . .
6.4 a more realistic model of network community structure . . . . . . . . . . . . . . . . . . .

7 discussion

. . . . . . . . . . . . . . .
7.1 comparison with    ground truth    and sociological communities
7.2 connections and broader implications
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
7.3 relationship with community identi   cation methods . . . . . . . . . . . . . . . . . . . . .
7.4 relationship with other theoretical work . . . . . . . . . . . . . . . . . . . . . . . . . . . .

8 conclusion

3
3
5
8

9
9
14
15

17
17
18
20
24

28
28
28
29
32

32
34
36
37

40
41
43
48
49

53
53
56
58
59

60

community structure in large networks

3

1

introduction

a large amount of research has been devoted to the task of de   ning and identifying communities in
social and information networks, i.e., in graphs in which the nodes represent underlying social entities
and the edges represent interactions between pairs of nodes. most recent papers on the subject of
community detection in large networks begin by noting that it is a matter of common experience that
communities exist in such networks. these papers then note that, although there is no agreed-upon
de   nition for a community, a community should be thought of as a set of nodes that has more and/or
better connections between its members than between its members and the remainder of the network.
these papers then apply a range of algorithmic techniques and intuitions to extract subsets of nodes
and then interpret these subsets as meaningful communities corresponding to some underlying    true   
real-world communities. in this paper, we explore from a novel perspective several questions related to
identifying meaningful communities in large sparse networks, and we come to several striking conclusions
that have implications for community detection and graph partitioning in such networks. we emphasize
that, in contrast to most of the previous work on this subject, we look at very large networks of up to
millions of nodes, and we observe very di   erent phenomena than is seen in small commonly-analyzed
networks.

1.1 overview of our approach

at the risk of oversimplifying the large and often intricate body of work on community detection in
complex networks, the following    ve-part story describes the general methodology:

(1) data are modeled by an    interaction graph.    in particular, part of the world gets mapped to a
graph in which nodes represent entities and edges represent some type of interaction between pairs
of those entities. for example, in a social network, nodes may represent individual people and edges
may represent friendships, interactions or communication between pairs of those people.

(2) the hypothesis is made that the world contains groups of entities that interact more strongly
amongst themselves than with the outside world, and hence the interaction graph should contain
sets of nodes, i.e., communities, that have more and/or better-connected    internal edges    connecting
members of the set than    cut edges    connecting the set to the rest of the world.

(3) a objective function or metric is chosen to formalize this idea of groups with more intra-group than

inter-group connectivity.

(4) an algorithm is then selected to    nd sets of nodes that exactly or approximately optimize this
or some other related metric. sets of nodes that the algorithm    nds are then called    clusters,   
   communities,       groups,       classes,    or    modules   .

(5) the clusters or communities or modules are evaluated in some way. for example, one may map
the sets of nodes back to the real world to see whether they appear to make intuitive sense as
a plausible    real    community. alternatively, one may attempt to acquire some form of    ground
truth,    in which case the set of nodes output by the algorithm may be compared with it.

with respect to points (1)   (4), we follow the usual path.

in particular, we adopt points (1) and
(2), and we then explore the consequence of making such a choice, i.e., of making such an hypothesis
and modeling assumption. for point (3), we choose a natural and widely-adopted notion of community
goodness (community quality score) called conductance, which is also known as the normalized cut met-
ric [34, 147, 93]. informally, the conductance of a set of nodes (de   ned and discussed in more detail in
section 2.3) is the ratio of the number of    cut    edges between that set and its complement divided by
the number of    internal    edges inside that set. thus, to be a good community, a set of nodes should

4

leskovec, lang, dasgupta, and mahoney

figure 1: network communities. of the three 5-nodes sets that have been marked, b has the best (i.e., the
lowest) conductance, as it has the lowest ratio between the number of edges cut and the number of edges inside.
so, set b is the best 5-node community or the most community-like set of 5 nodes in this particular network.

have small conductance, i.e., it should have many internal edges and few edges pointing to the rest of
the network. conductance is widely used to capture the intuition of a good community; it is a funda-
mental combinatorial quantity; and it has a very natural interpretation in terms of id93 on
the interaction graph. moreover, since there exist a rich suite of both theoretical and practical algo-
rithms [87, 149, 107, 108, 17, 95, 96, 162, 54], we can for point (4) compare and contrast several methods
to approximately optimize it. to illustrate conductance, note that of the three 5-node sets a, b, and
c illustrated in the graph in figure 1, b has the best (the lowest) conductance and is thus the most
community-like.

however, it is in point (5) that we deviate from previous work. instead of focusing on individual
groups of nodes and trying to interpret them as    real    communities, we investigate statistical properties
of a large number of communities over a wide range of size scales in over 100 large sparse real-world social
and information networks. we take a step back and ask questions such as: how well do real graphs split
into communities? what is a good way to measure and characterize presence or absence of community
structure in networks? what are typical community sizes and typical community qualities?

to address these and related questions, we introduce the concept of a network community pro   le
(ncp) plot that we de   ne and describe in more detail in section 3.1. intuitively, the network community
pro   le plot measures the score of    best    community as a function of community size in a network.
formally, we de   ne it as the conductance value of the minimum conductance set of cardinality k in the
network, as a function of k. as de   ned, the ncp plot will be np-hard to compute exactly, so operationally
we will use several natural approximation algorithms for solving the minimum conductance cut problem
in order to compute di   erent approximations to it. by comparing and contrasting these plots for a large
number of networks, and by computing other related structural properties, we obtain results that suggest
a signi   cantly more re   ned picture of the community structure in large real-world networks than has
been appreciated previously.

we have gone to a great deal of e   ort to be con   dent that we are computing quantities fundamental
to the networks we are considering, rather than artifacts of the approximation algorithms we employ. in
particular:

    we use several classes of graph partitioning algorithms to probe the networks for sets of nodes that
could plausibly be interpreted as communities. these algorithms, including    ow-based methods,

community structure in large networks

5

id106, and hierarchical methods, have complementary strengths and weaknesses that
are well understood both in theory and in practice. for example,    ow-based methods are known
to have di   culties with expanders [107, 108], and    ow-based post-processing of other methods are
known in practice to yield cuts with extremely good conductance values [104, 106]. on the other
hand, id106 are known to have di   culties when they confuse long paths with deep
cuts [149, 84], a consequence of which is that they may be viewed as computing a    regularized   
approximation to the network community pro   le plot. (see section 5 for a more detailed discussion
of these and related issues.)

    we compute spectral-based lower bounds and also semide   nite-programming-based lower bounds

for the conductance of our network datasets.

    we compute a wide range of other structural properties of the networks, e.g., sizes, degree distri-
butions, maximum and average diameters of the purported communities, internal versus external
conductance values of the purported communities, etc.

    we recompute statistics on versions of the networks that have been modi   ed in well-understood

ways, e.g., by removing small barely-connected sets of nodes or by randomizing the edges.

    we compare our results across not only over 100 large social and information networks, but also
numerous commonly-studied small social networks, expanders, and low-dimensional manifold-like
objects, and we compare our results on each network with what is known from the    eld from which
the network is drawn. to our knowledge, this makes ours the most extensive such analysis of the
community structure in large real-world social and information networks.

    we compare results with analytical and/or simulational results on a wide range of commonly and

not-so-commonly used network generation models [127, 25, 9, 102, 138, 112, 71, 72].

1.2 summary of our results

main empirical findings: taken as a whole, the results we present in this paper suggest a rather
detailed and somewhat counterintuitive picture of the community structure in large social and information
networks. several qualitative properties of community structure, as revealed by the network community
pro   le plot, are nearly universal:

    up to a size scale, which empirically is roughly 100 nodes, there not only exist cuts with relatively
good conductance, i.e., good communities, but also the slope of the network community pro   le
plot is generally sloping downward. this latter point suggests that smaller communities can be
combined into meaningful larger communities, a phenomenon that we empirically observe in many
cases.

    at the size scale of roughly 100 nodes, we often observe the global minimum of the network com-
munity pro   le plot; these are the    best    communities, according to the conductance measure, in
the entire graph. these are, however, rather interestingly connected to the rest of the network; for
example, in most cases, we observe empirically that they are a small set of nodes barely connected
to the remainder of the network by just a single edge.

    above the size scale of roughly 100 nodes, the network community pro   le plot gradually increases,
and thus there is a nearly inverse relationship between community size and community quality. as
a function of increasing size, the best possible communities become more and more    blended into   
the remainder of the network. intuitively, communities blend in with one another and gradually
disappear as they grow larger. in particular, in many cases, larger communities can be broken into
smaller and smaller pieces, often recursively, each of which is more community-like than the original
supposed community.

6

leskovec, lang, dasgupta, and mahoney

(a) typical ncp plot

(b) caricature of network structure

figure 2:
(a) typical network community pro   le plot for a large social or information network: networks have
better and better communities up to a size scale of     100 nodes, and after that size scale communities    blend-in   
with the rest of the network (red curve). however, real networks still have more structure than their randomized
(conditioned on the same degree distribution) counterparts (black curve). even more surprisingly, if one allows
for disconnected communities (blue curve), the community quality scores often get even better (even though such
communities have no intuitive meaning). (b) network structure for a large social or information network, as
suggested by our empirical evaluations. see the text for more information on the    core    and    whiskers,    and note
that the core in our real-world networks is actually extremely sparse.

    even up to the largest size scales, we observe signi   cantly more structure than would be seen, for

example, in an expander-like random graph on the same degree sequence.

a schematic picture of a typical network community pro   le plot is illustrated in figure 2(a). in red
(labeled as    original network   ), we plot community size vs. community quality score for the sets of
nodes extracted from the original network. in black (rewired network), we plot the scores of communities
extracted from a random network conditioned on the same degree distribution as the original network.
this illustrates not only tight communities at very small scales, but also that at larger and larger size
scales (the precise cuto    point for which is di   cult to specify precisely) the best possible communities
gradually    blend in    more and more with the rest of the network and thus gradually become less and less
community-like. eventually, even the existence of large well-de   ned communities is quite questionable
if one models the world with an interaction graph, as in point (1) above, and if one also de   nes good
communities as densely linked clusters that are weakly-connected to the outside, as in hypothesis (2)
above. finally, in blue (bag of whiskers), we also plot the scores of communities that are composed of
disconnected pieces (found according to a procedure we describe in section 4). this blue curve shows,
perhaps somewhat surprisingly, that one can often obtain better community quality scores by combining
unrelated disconnected pieces.

to understand the properties of generative models su   cient to reproduce the phenomena we have
observed, we have examined in detail the structure of our social and information networks. although
nearly every network is an exception to any simple rule, we have observed that an    octopus    or    jelly   sh   
model [42, 152, 148] provides a rough    rst approximation to structure of many of the networks we have
examined. that is, most networks may be viewed as having a    core,    with no obvious underlying geometry
and which contains a constant fraction of the nodes, and then there is a periphery consisting of a large
number of relatively small    whiskers    that are only tenuously connected to the core. figure 2(b) presents
a caricature of this network structure. of course, our network datasets are far from random in numerous
ways   e.g., they have higher edge density in the core; the small barely-connected whisker-like pieces are
generally larger, denser, and more common than in corresponding random graphs; they have higher local

community structure in large networks

7

id91 coe   cients; and this local id91 information gets propagated globally into larger clusters
or communities in a subtle and location-speci   c manner. more interestingly, as shown in figure 13 in
section 4.4, the core itself consists of a nested core-periphery structure.

main modeling results: the behavior that we observe is not reproduced, at even a qualitative
level, by any of the commonly-used network generation models we have examined, including but not
limited to preferential attachment models, copying models, small-world models, and hierarchical network
models. moreover, this behavior is qualitatively di   erent than what is observed in networks with an under-
lying mesh-like or manifold-like geometry (which may not be surprising, but is signi   cant insofar as these
structures are often used as a sca   olding upon which to build other models), in networks that are good
expanders (which may be surprising, since it is often observed that large social networks are expander-
like), and in small social networks such as those used as testbeds for community detection algorithms
(which may have implications for the applicability of these methods to detect large community-like struc-
tures in these networks). for the commonly-used network generation models, as well as for expander-like,
low-dimensional, and small social networks, the network community pro   le plots are generally downward
sloping or relatively    at.

although it is well understood at a qualitative level that nodes that are    far apart    or    less alike   
(in some sense) should be less likely to be connected in a generative model, understanding this point
quantitatively so as to reproduce the empirically-observed relationship between small-scale and large-
scale community structure turns out to be rather subtle. we can make the following observations:

    very sparse random graph models with no underlying geometry have relatively deep cuts at small
size scales, the best cuts at large size scales are very shallow, and there is a relatively abrupt
transition in between. (this is shown pictorially in figure 2(a) for a randomly rewired version of
the original network.) this is a consequence of the extreme sparsity of the data: su   ciently dense
random graphs do not have these small deep cuts; and the relatively deep cuts in sparse graphs are
due to small tree-like pieces that are connected by a single edge to a core which is an extremely
good expander.

    a forest fire generative model [112, 113], in which edges are added in a manner that imitates a
   re-spreading process, reproduces not only the deep cuts at small size scales and the absence of
deep cuts at large size scales but other properties as well: the small barely connected pieces are
signi   cantly larger and denser than random; and for appropriate parameter settings the network
community pro   le plot increases relatively gradually as the size of the communities increases.

    the details of the    forest    re    burning mechanism are crucial for reproducing how local id91
information gets propagated to larger size scales in the network, and those details shed light on the
failures of commonly-used network generation models. in the forest fire model, a new node selects
a    seed    node and links to it. then with some id203 it    burns    or adds an edge to the each
of the seed   s neighbors, and so on, recursively. although there is a    preferential attachment    and
also a    copying       avor to this mechanism, two factors are particularly important:    rst is the local
(in a graph sense, as there is no underlying geometry in the model) manner in which the edges are
added; and second is that the number of edges that a new node can add can vary widely, depending
on the local structure around the seed node. depending on the neighborhood structure around the
seed, small    res will keep the community well-separated from the network, but occasional large    res
will connect the community to the rest of the network and make it blend into the network core.

thus, intuitively, the structure of the whiskers (components connected to the rest of the graph via a single
edge) are responsible for the downward part of the network community pro   le plot, while the core of the
network and the manner in which the whiskers root themselves to the core helps to determine the upward
part of the network community pro   le plot. due to local id91 e   ects, whiskers in real networks
are larger and give deeper cuts than whiskers in corresponding randomized graphs,    uctuations in the

8

leskovec, lang, dasgupta, and mahoney

core are larger and deeper than in corresponding randomized graphs, and thus the network community
pro   le plot increases more gradually and levels o    to a conductance value well below the value for a
corresponding rewired network.

main methodological contributions: to obtain these and other conclusions, we have employed
approximation algorithms for graph partitioning to investigate structural properties of our network
datasets. brie   y, we have done the following:

    we have used metis+mqi, which consists of using the popular graph partitioning package metis [95]
followed by a    ow-based mqi post-processing [106]. with this procedure, we obtain sets of nodes
that have very good conductance scores. at very small size scales, these sets of nodes could plausibly
be interpreted as good communities, but at larger size scales, we often obtain tenuously-connected
(and in some cases unions of disconnected) pieces, which perhaps do not correspond to intuitive
communities.

    thus, we have also used the local spectral method of anderson, chung, and lang [13] to obtain
sets of nodes with good conductance value that that are    compact    or more    regularized    than those
pieces returned by metis+mqi. since id106 confuse long paths with deep cuts [149, 84],
empirically we obtain sets of nodes that have worse conductance scores than sets returned by
metis+mqi, but which are    tighter    and more    community-like.    for example, at small size scales
the sets of nodes returned by the local spectral algorithm agrees with the output of metis+mqi,
but at larger scales this algorithm returns sets of nodes with substantially smaller diameter and
average diameter, which seem plausibly more community-like.

we have also used what we call the bag-of-whiskers heuristic to identify small barely connected sets of
nodes that exert a surprisingly large in   uence on the network community pro   le plot.

both metis+mqi and the local spectral algorithm scale well and thus either may be used to obtain
sets of nodes from very large graphs. for many of the small to medium-sized networks, we have checked
our results by applying one or more other spectral,    ow-based, or heuristic algorithms, although these do
not scale as well to very large graphs. finally, for some of our smaller network datasets, we have computed
spectral-based and semide   nite-programming-based lower bounds, and the results are consistent with the
conclusions we have drawn.

broader implications: our observation that, independently of the network size, compact com-
munities exist only up to a size scale of around 100 nodes agrees well with the    dunbar number    [59],
which predicts that roughly 150 individuals is the upper limit on the size of a well-functioning human
community. moreover, we should emphasize that our results do not disagree with the literature at small
sizes scales. one reason for the di   erence in our    ndings is that previous studies mainly focused on small
networks, which are simply not large enough for the clusters to gradually blend into one another as one
looks at larger size scales. in order to make our observations, one needs to look at large number (due to
the complex noise properties of real graphs) of large networks. it is only when dunbar   s limit is exceeded
by several orders of magnitude that it is relatively easy to observe large communities blurring together
and eventually vanishing. a second reason for the di   erence is that previous work did not measure and
examine the network community pro   le of cluster size vs. cluster quality. finally, we should note that our
explanation also aligns well with the common bond vs. common identity theory of group attachment [141]
from social psychology, where it has been noted that bond communities tend to be smaller and more
cohesive [19], as they are based on interpersonal ties, while identity communities are focused around
common theme or interest. we discuss these implications and connections further in section 7.

1.3 outline of the paper

the rest of the paper is organized as follows. in section 2 we describe some useful background, including
a brief description of the network datasets we have analyzed. then, in section 3 we present our main

community structure in large networks

9

results on the properties of the network community pro   le plot for our network datasets. we place an
emphasis on how the phenomena we observe in large social and information networks are qualitatively
di   erent than what one would expect based on intuition from and experience with expander-like graphs,
low-dimensional networks, and commonly-studied small social networks. then, in sections 4 and 5, we
summarize the results of additional empirical evaluations. in particular, in section 4, we describe some
of the observations we have made in an e   ort to understand what structural properties of these large
networks are responsible for the phenomena we observe; and in section 5, we describe some of the results
of probing the networks with di   erent approximation algorithms in an e   ort to be con   dent that the
phenomena we observed really are properties of the networks we study, rather than artifactual properties
of the algorithms we chose to use to study those networks. we follow this in section 6 with a discussion
of complex network generation models. we observe that the commonly-used network generation models
fail to reproduce the counterintuitive phenomena we observe. we also notice that very sparse random
networks reproduce certain aspects of the phenomena, and that a generative model based on an iterative
   forest    re    burning mechanism reproduces very well the qualitative properties of the phenomena we
observe. finally, in section 7 we provide a discussion of our results in a broader context, and in section 8
we present a brief conclusion.

2 background on communities and overview of our methods

in this section, we will provide background on our data and methods. we start in section 2.1 with a
description of the network datasets we will analyze. then, in section 2.2, we review related community
detection and graph id91 ideas. finally, in section 2.3, we provide a brief description of approxima-
tion algorithms that we will use. there exist a large number of reviews on topics related to those discussed
in this paper. for example, see the reviews on community identi   cation [128, 53], data id91 [91],
graph and spectral id91 [76, 154, 146], graph and heavy-tailed data analysis [129, 29, 50], surveys
on various aspects of complex networks [10, 56, 127, 25, 52, 117, 23], the monographs on spectral graph
theory and complex networks [34, 42], and the book on social network analysis [155]. see section 7 for a
more detailed discussion of the relationship of our work with some of this prior work.

2.1 social and information network datasets we analyze

we have examined a large number of real-world complex networks. see tables 1, 2, and 3 for a summary.
for convenience, we have organized the networks into the following categories: social networks; infor-
mation/id191; collaboration networks; web graphs; internet networks; bipartite a   liation
networks; biological networks; low-dimensional networks; imdb networks; and amazon networks. we
have also examined numerous small social networks that have been used as a testbed for community de-
tection algorithms (e.g., zachary   s karate club [160, 5], interactions between dolphins [119, 5], interactions
between monks [145, 5], newman   s network science network [130, 5], etc.), numerous simple network mod-
els in which by design there is an underlying geometry (e.g., power grid and road networks [156], simple
meshes, low-dimensional manifolds including graphs corresponding to the well-studied    swiss roll    data
set [153], a geometric preferential attachment model [71, 72], etc.), several networks that are very good
expanders, and many simulated networks generated by commonly-used network generation models(e.g.,
preferential attachment models [127], copying models [102], id187 [138], etc.).

social networks: the class of social networks in table 1 is particularly diverse and interesting. it in-
cludes several large on-line social networks: a network of professional contacts from linkedin (linkedin);
a friendship network of a livejournal blogging community (livejournal01); and a who-trusts-whom
network of epinions (epinions). it also includes an email network from enron (email-enron) and
from a large european research organization. for the latter we generated three networks: email-inside
uses only the communication inside organization; email-inout also adds external email addresses where

y
e
n
o
h
a
m
d
n
a

,
a
t
p
u
g
s
a
d

,

g
n
a
l

,
c
e
v
o
k
s
e
l

0
1

n

e

nb

eb

  d

  d

  c d

  d description

network
social networks

delicious
epinions
flickr
linkedin
livejournal01
livejournal11
livejournal12
messenger
email-all
email-inout
email-inside
email-enron
answers
answers-1
answers-2
answers-3
answers-4
answers-5
answers-6

147,567
75,877
404,733
6,946,668
3,766,521
4,145,160
4,843,953
1,878,736
234,352
37,803
986
33,696
488,484
26,971
25,431
45,122
93,971
5,313
290,351

information (citation) networks

cit-patents
cit-hep-ph
cit-hep-th
blog-nat05-6m
blog-nat06all
post-nat05-6m
post-nat06all

3,764,105
34,401
27,400
29,150
32,384
238,305
437,305

collaboration networks

ata-imdb
ca-astro-ph
ca-cond-mat
ca-gr-qc
ca-hep-ph
ca-hep-th
ca-dblp

883,963
17,903
21,363
4,158
11,204
8,638
317,080

301,921
405,739
2,110,078
30,507,070
30,629,297
34,469,135
42,845,684
4,079,161
383,111
114,199
16,064
180,811
1,240,189
91,812
65,551
165,648
266,199
11,528
613,237

16,511,682
420,784
352,021
182,212
315,713
297,338
565,072

27,473,042
196,972
91,286
13,422
117,619
24,806
1,049,866

0.40
0.48
0.33
0.47
0.78
0.77
0.76
0.53
0.18
0.47
0.90
0.61
0.45
0.56
0.48
0.53
0.49
0.41
0.40

0.82
0.96
0.94
0.74
0.87
0.21
0.22

0.87
0.89
0.81
0.64
0.81
0.68
0.67

0.65
0.90
0.86
0.88
0.97
0.97
0.97
0.78
0.50
0.82
0.99
0.90
0.78
0.87
0.80
0.87
0.82
0.73
0.71

0.96
1.00
0.99
0.96
0.99
0.34
0.38

0.99
0.98
0.93
0.78
0.97
0.85
0.84

4.09
10.69
10.43
8.78
16.26
16.63
17.69
4.34
3.27
6.04
32.58
10.73
5.08
6.81
5.16
7.34
5.67
4.34
4.22

8.77
24.46
25.69
12.50
19.50
2.50
2.58

62.16
22.00
8.55
6.46
21.00
5.74
6.62

48.44
183.88
442.75
351.66
111.24
122.44
170.66
15.40
576.87
165.73
74.66
142.36
251.78
59.17
56.57
417.83
94.48
29.55
57.16

21.34
63.50
106.40
342.51
153.08
39.51
35.54

517.40
65.70
22.47
17.98
130.88
12.99
21.75

0.30
0.26
0.40
0.23
0.36
0.36
0.35
0.09
0.50
0.58
0.45
0.71
0.11
0.08
0.10
0.21
0.08
0.12
0.09

0.09
0.30
0.33
0.24
0.20
0.13
0.11

0.79
0.67
0.70
0.66
0.69
0.58
0.73

24
15
18
23
23
23
20
26
14
8
7
13
22
16
15
15
16
14
22

26
14
15
10
18
45
54

15
14
15
17
13
18
23

del.icio.us collaborative tagging social network

flickr photo sharing social network [101]
social network of professional contacts
friendship network of a blogging community [20]
friendship network of a blogging community [20]
friendship network of a blogging community [20]
instant messenger social network

6.28
4.27 who-trusts-whom network from epinions.com [142]
5.42
5.43
5.55
5.61
5.53
7.42
4.07 research organization email network (all addresses) [113]
3.74
2.60
3.99
5.72 yahoo answers social network
4.49 cluster 1 from yahoo answers
4.76 cluster 2 from yahoo answers
3.94 cluster 3 from yahoo answers
4.91 cluster 4 from yahoo answers
4.75 cluster 5 from yahoo answers
5.92 cluster 6 from yahoo answers

(all addresses but email has to be sent both ways) [113]
(only emails inside the research organization) [113]
enron email dataset [100]

8.15 citation network of all us patents [112]
4.33 citations between physics (arxiv hep-th) papers [78]
4.20 citations between physics (arxiv hep-ph) papers [78]
3.40 blog citation network (6 months of data) [116]
3.94 blog citation network (1 year of data) [116]
10.34 blog post citation network (6 months) [116]
10.48 blog post citation network (1 year) [116]

imdb actor collaboration network from dec 2007

3.48
4.21 co-authorship in astro-ph of arxiv.org [112]
5.36 co-authorship in cond-mat category [112]
6.10 co-authorship in gr-qc category [112]
4.71 co-authorship in hep-ph category [112]
5.96 co-authorship in hep-th category [112]
6.75 dblp co-authorship network [20]

table 1: network datasets we analyzed. statistics of networks we consider: number of nodes n ; number of edges e; fraction nodes not in whiskers
(size of largest biconnected component) nb/n ; fraction of edges in biconnected component eb/e; average degree   d = 2e/n ; second order average
degree   d; average id91 coe   cient   c; diameter d; and average path length   d.

network
web graphs

web-berkstan
web-google
web-notredame
web-trec

internet networks

as-routeviews
as-caida
as-skitter
as-newman
as-oregon
gnutella-25
gnutella-30
gnutella-31
edonkey

bi-partite networks

iptraffic
atp-astro-ph
atp-cond-mat
atp-gr-qc
atp-hep-ph
atp-hep-th
atp-dblp
spending
hw7
netflix
queryterms
clickstream

biological networks

bio-proteins
bio-yeast
bio-yeastp0.001
bio-yeastp0.01

n

e

nb

eb

  d

  d

  c

d

  d description

319,717
855,802
325,729
1,458,316

6,474
26,389
1,719,037
22,963
13,579
22,663
36,646
62,561
5,792,297

2,250,498
54,498
57,552
14,832
47,832
39,986
615,678
1,831,540
653,260
497,959
13,805,808
199,308

1,542,940
4,291,352
1,090,108
6,225,033

12,572
52,861
12,814,089
48,436
37,448
54,693
88,303
147,878
147,829,887

21,643,497
131,123
104,179
22,266
86,434
64,154
944,456
2,918,920
2,278,448
100,480,507
17,498,668
951,649

4,626
1,458
353
1,266

14,801
1,948
1,517
8,511

0.57
0.75
0.41
0.59

0.62
0.61
0.99
0.65
0.72
0.59
0.55
0.54
0.93

1.00
0.70
0.65
0.47
0.60
0.53
0.49
0.34
0.99
1.00
0.28
0.39

0.72
0.37
0.73
0.79

0.88
0.92
0.76
0.78

0.80
0.81
1.00
0.83
0.90
0.83
0.81
0.81
1.00

1.00
0.87
0.79
0.60
0.76
0.68
0.64
0.58
0.99
1.00
0.41
0.87

0.91
0.51
0.93
0.97

9.65
10.03
6.69
8.54

3.88
4.01
14.91
4.22
5.52
4.83
4.82
4.73
51.04

19.23
4.81
3.62
3.00
3.61
3.21
3.07
3.19
6.98
403.57
2.53
9.55

6.40
2.67
8.59
13.45

1,067.55
170.35
280.68
682.89

164.81
281.93
9,934.01
261.46
235.97
10.75
11.46
11.60
6,139.99

94,889.05
16.67
10.54
9.72
16.80
13.07
13.61
1,536.35
346.85
28,432.89
14.92
430.74

24.25
7.13
20.18
47.73

0.32
0.62
0.47
0.68

0.40
0.33
0.17
0.35
0.46
0.01
0.01
0.01
0.08

0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00

0.12
0.14
0.57
0.44

35
24
46
112

5.66 web graph of stanford and uc berkeley [98]
6.27 web graph google released in 2002 [3]
7.22 web graph of university of notre dame [11]
8.58 web graph of trec wt10g web corpus [2]

9
17
5
11
9
11
11
11
5

5
28
31
35
27
36
48
26
24
5
86
7

12
19
11
12

3.72 as from oregon exchange bgp route view [112]
3.86 caida as relationships dataset
3.44 as from traceroutes run daily in 2005 by skitter
3.83 as graph from newman [5]
3.58 autonomous systems [1]
5.57 gnutella network on march 25 2000 [143]
5.75 gnutella p2p network on march 30 2000 [143]
5.94 gnutella network on march 31 2000 [143]
3.66

p2p edonkey graph for a period of 47 hours in 2004

ip tra   c graph a single router for 24 hours

2.53
7.78 authors-to-papers network of astro-ph [116]
9.96 authors-to-papers network of cond-mat [116]

11.08 authors-to-papers network of gr-qc [116]

8.55 authors-to-papers network of hep-ph [116]
10.74 authors-to-papers network of hep-th [116]
12.69 dblp authors-to-papers bipartite network

5.62 users-to-keywords they bid
6.26 downsampled advertiser-query bid graph
2.31 users-to-movies they rated. from net   ix prize [4]

19.81 users-to-queries they submit to a search engine

3.83 users-to-urls they visited [126]

4.24 yeast protein interaction network [51]
6.89 yeast protein interaction network data [92]
4.33 yeast protein-protein interaction map [135]
3.87 yeast protein-protein interaction map [135]

table 2: network datasets we analyzed. statistics of networks we consider: number of nodes n ; number of edges e; fraction nodes not in whiskers
(size of largest biconnected component) nb/n ; fraction of edges in biconnected component eb/e; average degree   d = 2e/n ; second order average
degree   d; average id91 coe   cient   c; diameter d; and average path length   d.

c
o
m
m
u
n
i
t
y

s
t
r
u
c
t
u
r
e

i

n

l
a
r
g
e

n
e
t
w
o
r
k
s

1
1

y
e
n
o
h
a
m
d
n
a

,
a
t
p
u
g
s
a
d

,

g
n
a
l

,
c
e
v
o
k
s
e
l

network
nearly low-dimensional networks

n

e

nb

eb

  d

  d

  c

d

  d description

road-ca
road-usa
road-pa
road-tx
powergrid
mani-faces7k
mani-faces4k
mani-faces2k
mani-facesk10
mani-facesk3
mani-facesk5
mani-swiss200k
mani-swiss100k
mani-swiss60k
mani-swissk10
mani-swissk5
mani-swissk3

1,957,027
126,146
1,087,562
1,351,137
4,941
696
663
551
698
698
698
20,000
19,990
19,042
20,000
20,000
20,000
imdb actor-to-movie graphs
2,076,978
198,430
601,481
35,827
21,258
12,999
19,189
15,042
13,783
15,494
42,133
241,360
12,120

atm-imdb
imdb-top30
imdb-raw07
imdb-france
imdb-germany
imdb-india
imdb-italy
imdb-japan
imdb-mexico
imdb-spain
imdb-uk
imdb-usa
imdb-wgermany

2,760,388
161,950
1,541,514
1,879,201
6,594
6,979
3,465
1,981
6,935
2,091
3,480
200,000
99,979
57,747
199,955
99,990
59,997

5,847,693
566,756
1,320,616
74,201
42,197
25,836
37,534
34,131
36,986
31,313
82,915
530,494
24,117

amazon product co-purchasing networks

amazon0302
amazon0312
amazon0505
amazon0601
amazonall
amazonallprod
amazonsrcprod

262,111
400,727
410,236
403,364
473,315
524,371
334,863

899,792
2,349,869
2,439,437
2,443,311
3,505,519
1,491,793
925,872

0.80
0.97
0.79
0.78
0.62
0.98
0.90
0.84
1.00
1.00
1.00
1.00
1.00
0.93
1.00
1.00
1.00

0.49
0.99
0.54
0.51
0.56
0.57
0.55
0.60
0.64
0.51
0.52
0.51
0.56

0.95
0.94
0.94
0.96
0.94
0.80
0.84

0.85
0.98
0.85
0.84
0.69
0.99
0.97
0.94
1.00
1.00
1.00
1.00
1.00
0.96
1.00
1.00
1.00

0.82
1.00
0.79
0.76
0.78
0.78
0.77
0.82
0.86
0.76
0.76
0.78
0.78

0.97
0.99
0.99
0.99
0.99
0.91
0.91

2.82
2.57
2.83
2.78
2.67
20.05
10.45
7.19
19.87
5.99
9.97
20.00
10.00
6.07
20.00
10.00
6.00

5.63
5.71
4.39
4.14
3.97
3.98
3.91
4.54
5.37
4.04
3.94
4.40
3.98

6.87
11.73
11.89
12.11
14.81
5.69
5.53

3.17
2.81
3.20
3.15
3.87
37.99
20.20
12.77
25.32
7.98
12.91
21.08
11.02
7.03
25.38
12.89
7.88

65.41
18.19
20.94
14.62
13.69
31.55
11.66
16.98
24.15
14.22
15.14
25.25
11.73

11.14
30.33
30.93
30.55
52.70
11.75
11.53

0.06
0.03
0.06
0.06
0.11
0.56
0.56
0.54
0.51
0.45
0.48
0.59
0.59
0.59
0.56
0.54
0.50

0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00
0.00

0.43
0.42
0.43
0.43
0.41
0.35
0.43

865
617
794
1,064
46
16
29
32
6
9
7
103
162
243
10
13
17

32
26
32
20
34
19
30
19
19
28
23
30
22

38
20
22
25
19
42
47

310.97 california road network
218.55 usa road network (only main roads)
306.89
418.73 texas road network

pennsylvania road network

19.07
5.52
8.96
11.07
3.25
4.89
4.03
37.21
58.32
89.15
5.47
8.34
6.89

power grid of western states power grid [156]
faces (64x64 grayscale images) (connect 7k closest pairs)
faces (connect 4k closest pairs)
faces (connect 2k closest pairs)
faces (connect every to 10 nearest neighbors)
faces (connect every to 5 nearest neighbors)
faces (connect every to 3 nearest neighbors)
swiss-roll (connect 200k nearest pairs of nodes)
swiss-roll (connect 100k nearest pairs of nodes)
swiss-roll (connect 60k nearest pairs of nodes)
swiss-roll (every node connects to 10 nearest neighbors)
swiss-roll (every node connects to 5 nearest neighbors)
swiss-roll (every node connects to 3 nearest neighbors)

6.82 actors-to-movies graph from imdb (imdb.com)
8.32 actors-to-movies graph heavily preprocessed
8.55 country clusters were extracted from this graph
6.57 cluster of french movies
7.47 german movies (to actors that played in them)
indian movies
6.00
italian movies
6.91
japanese movies
6.81
5.43 mexican movies
6.44
spanish movies
7.04 uk movies
7.63 usa movies
6.26 west german movies

8.85 amazon products from 2003 03 02 [49]
6.46 amazon products from 2003 03 12 [49]
6.48 amazon products from 2003 05 05 [49]
6.42 amazon products from 2003 06 01 [49]
5.66 amazon products (all 4 graphs merged) [49]
products (all products, source+target) [109]
products (only source products) [109]

11.18
12.11

table 3: network datasets we analyzed. statistics of networks we consider: number of nodes n ; number of edges e; fraction nodes not in whiskers
(size of largest biconnected component) nb/n ; fraction of edges in biconnected component eb/e; average degree   d = 2e/n ; second order average
degree   d; average id91 coe   cient   c; diameter d; and average path length   d.

2
1

community structure in large networks

13

email has been sent both way; and email-all adds all communication inside the organization and to the
outside world. also included in the class of social networks are networks that are not the central focus
of the websites from which they come, but which instead serve as a tool for people to share information
more easily. for example, we have: the networks of a social bookmarking site delicious (delicious); a
flickr photo sharing website (flickr); and a network from yahoo! answers id53 website
(answers). in all these networks, a node refers to an individual and an edge is used to indicate that
means that one person has some sort of interaction with another person, e.g., one person subscribes to
their neighbor   s bookmarks or photos, or answers their questions.

information and id191: the class of information/id191 contains several
di   erent id191. it contains two id191 of physics papers on arxiv.org, (cit-hep-
th and cit-hep-ph), and a network of citations of us patents (cit-patents). (these paper-to-paper
id191 are to be distinguished from scienti   c collaboration networks and author-to-paper
bipartite networks, as described below.) it also contains two types of blog id191. in the so-
called post networks, nodes are posts and edges represent hyperlinks between blog posts (post-nat05-6m
and post-nat06all). on the other hand, the so-called blog network is the blog-level-aggregation of the
same data, i.e., there is a link between two blogs if there is a post in    rst that links the post in a second
blog (blog-nat05-6m and blog-nat06all).

collaboration networks: the class of collaboration networks contain academic collaboration (i.e.,
co-authorship) networks between physicists from various categories in arxiv.org (ca-astro-ph, etc.)
and between authors in computer science (ca-dblp). it also contains a network of collaborations
between pairs of actors in imdb (ata-imdb), i.e., there is an edge connecting a pair of actors if they
appeared in the same movie. (again, this should be distinguished from actor-to-movie bipartite networks,
as described below.)

web graphs: the class of web graph networks includes four di   erent web-graphs in which nodes
represent web-pages and edges represent hyperlinks between those pages. networks were obtained from
google (web-google), the university of notre dame (web-notredame), trec (web-trec), and
stanford university (web-berkstan). the class of internet networks consists of various autonomous
systems networks obtained at di   erent sources, as well as a gnutella and edonkey peer-to-peer    le sharing
networks.

bipartite networks: the class of bipartite networks is particularly diverse and includes: authors-to-
papers graphs from both computer science (atp-dblp) and physics (atp-astro-ph, etc.); a network
representing users and the urls they visited (clickstream); a network representing users and the
movies they rated (netflix); and a users-to-queries network representing query terms that users typed
into a search engine (queryterms). (we also have analyzed several bipartite actors-to-movies networks
extracted from the imdb database, which we have listed separately below.)

biological networks: the class of biological networks include protein-protein interaction networks

of yeast obtained from various sources.

low dimensional grid-like networks: the class of low-dimensional networks consists of graphs
constructed from road (road-ca, etc.) or power grid (powergrid) connections and as such might be
expected to    live    on a two-dimensional surface in a way that all of the other networks do not. we also
added a    swiss roll    network, a 2-dimensional manifold embedded in 3-dimensions, and a    faces    dataset
where each point is an 64 by 64 gray-scale image of a face (embedded in 4, 096 dimensional space) and
where we connected the faces that were most similar (using the euclidean distance).

imdb, yahoo! answers and amazon networks: finally, we have networks from imdb,
amazon, and yahoo! answers, and for each of these we have separately analyzed subnetworks. the
imdb networks consist of actor-to-movie links, and we include the full network as well as subnetworks
associated with individual countries based on the country of production. for the amazon networks, recall
that amazon sells a variety of products, and for each item a one may compile the list the up to ten
other items most frequently purchased by buyers of a. this information can be presented as a directed

14

leskovec, lang, dasgupta, and mahoney

network in which vertices represent items and there is a edge from item a to another item b if b was
frequently purchased by buyers of a. we consider the network as undirected. we use    ve networks from
a study of clauset et al. [49], and two networks from the viral marketing study from leskovec et al. [109].
finally, for the yahoo! answers networks, we observe several deep cuts at large size scales, and so in
addition the full network, we analyze the top six most well-connected subnetworks.

in addition to providing a brief description of the network, tables 1, 2 and 3 show the number of nodes
and edges in each network, as well as other statistics which will be described in section 4.1. (in all cases,
we consider the network as undirected, and we extract and analyze the largest connected component.)
the sizes of these networks range from about 5, 000 nodes up to nearly 14 million nodes, and from about
6, 000 edges up to more than 100 million edges. all of the networks are quite sparse   their densities range
from an average degree of about 2.5 for the blog post network, up to an average degree of about 400 in
the network of movie ratings from net   ix, and most of the other networks, including the purely social
networks, have average degree around 10 (median average degree of 6). in many cases, we examined
several versions of a given network. for example, we considered the entire imdb actor-to-movie network,
as well as sub-pieces of it corresponding to di   erent language and country groups. detailed statistics for
all these networks are presented in tables 1, 2 and 3 and are described in section 4. in total, we have
examined over 100 large real-world social and information networks, making this, to our knowledge, the
largest and most comprehensive study of such networks.

2.2 clusters and communities in networks

hierarchical id91 is a common approach to community identi   cation in the social sciences [155], but
it has also found application more generally [80, 90]. in this procedure, one    rst de   nes a distance metric
between pairs of nodes and then produces a tree (in either a bottom-up or a top-down manner) describing
how nodes group into communities and how these group further into super-communities. a quite di   erent
approach that has received a great deal of attention (and that will be central to our analysis) is based on
ideas from graph partitioning [146, 26]. in this case, the network is a modeled as simple undirected graph,
where nodes and edges have no attributes, and a partition of the graph is determined by optimizing a
merit function. the graph partitioning problem is    nd some number k groups of nodes, generally with
roughly equal size, such that the number of edges between the groups, perhaps normalized in some way,
is minimized.

let g = (v, e) denote a graph, then the conductance    of a set of nodes s     v , (where s is assumed
to contain no more than half of all the nodes), is de   ned as follows. let v be the sum of degrees of nodes
in s, and let s be the number of edges with one endpoint in s and one endpoint in s, where s denotes
the complement of s. then, the conductance of s is    = s/v, or equivalently    = s/(s + 2e), where e is
the number of edges with both endpoints is s. more formally:

de   nion 1 given a graph g with adjacency matrix a the conductance of a set of nodes s is de   ned as:

  (s) = pi   s,j /   s aij
min{a(s), a(s)}

,

(6)

where a(s) = pi   s pj   v aij , or equivalently a(s) = pi   s d(i), where d(i) is a degree of node i in g.

moreover, in this case, the conductance of the graph g is:

  g = min
s   v

  (s).

(7)

thus, the conductance of a set provides a measure for the quality of the cut (s, s), or relatedly the

community structure in large networks

15

(a) three communities

(b) conductance bottleneck

figure 3:
intra-connections than inter-connections. (b) a graph with its minimum conductance bottleneck illustrated.

(a) caricature of the traditional view of communities as being sets of nodes with more and/or better

goodness of a community s.1

indeed, it is often noted that communities should be thought of as sets of nodes with more and/or
better intra-connections than inter-connections; see figure 3 for an illustration. when interested in
detecting communities and evaluating their quality, we prefer sets with small conductances, i.e., sets that
are densely linked inside and sparsely linked to the outside. although numerous measures have been
proposed for how community-like is a set of nodes, it is commonly noted   e.g., see shi and malik [147]
and kannan, vempala, and vetta [93]   that conductance captures the    gestalt    notion of id91 [161],
and as such it has been widely-used for graph id91 and community detection [76, 154, 146].

there are many other density-based measures that have been used to partition a graph into a set
of communities [76, 154, 146]. one that deserves particular mention is modularity [132, 131]. for a
given partition of a network into a set of communities, modularity measures the number of within-
community edges, relative to a null model that is usually taken to be a random graph with the same
degree distribution. thus, modularity was originally introduced and it typically used to measure the
strength or quality of a particular partition of a network. we, however, are interested in a quite di   erent
question than those that motivated the introduction of modularity. rather than seeking to partition a
graph into the    best    possible partition of communities, we would like to know how good is a particular
element of that partition, i.e., how community-like are the best possible communities that modularity or
any other merit function can hope to    nd, in particular as a function of the size of that partition.

2.3 approximation algorithms for    nding low-conductance cuts

in addition to capturing very well our intuitive notion of what it means for a set of nodes to be a
good community, the use of conductance as an objective function has an added bene   t: there exists
an extensive theoretical and practical literature on methods for approximately optimizing it. (finding
cuts with exactly minimal conductance is np-hard.) in particular, the theory literature contains several
algorithms with provable approximation performance guarantees.

1 throughout this chapter we consistently use shorthand phrases like    this piece has good conductance    to mean    this

piece is separated from the rest of the graph by a low-conductance cut.   

16

leskovec, lang, dasgupta, and mahoney

first, there is the spectral method, which uses an eigenvector of the graph   s laplacian matrix to
   nd a cut whose conductance is no bigger than    if the graph actually contains a cut with conductance
o(  2) [32, 55, 66, 123, 34]. the spectral method also produces lower bounds which can show that the
solution for a given graph is closer to optimal than promised by the worst-case guarantee. second, there
is an algorithm that uses multi-commodity    ow to    nd a cut whose conductance is within an o(log n)
factor of optimal [107, 108]. spectral and multi-commodity    ow based methods are complementary
in that the worst-case o(log n) approximation factor is obtained for    ow-based methods on expander
graphs [107, 108], a class of graphs which does not cause problems for id106, whereas spectral
methods can confuse long path with deep cuts [84, 149], a di   erence that does not cause problems for    ow-
based methods. third, and very recently, there exists an algorithm that uses semide   nite programming to
   nd a solution that is within o(   log n) of optimal [17]. this paper sparked a    urry of theoretical research
on a family of closely related algorithms including [15, 99, 16], all of which can be informally described
as combinations of spectral and    ow-based techniques which exploit their complementary strengths.
however, none of those algorithms are currently practical enough to use in our study.

of the above three theoretical algorithms, the spectral method is by far the most practical. also very
common are recursive bisection heuristics: recursively divide the graph into two groups, and then further
subdivide the new groups until the desired number of clusters groups is achieved. this may be combined
with local improvement methods like the kernighan-lin and fiduccia-mattheyses procedures [97, 65],
which are fast and can climb out of some local minima. the latter was combined with a multi-resolution
framework to create metis [95, 96], a very fast program intended to split mesh-like graphs into equal sized
pieces. the authors of metis later created cluto [162], which is better tuned for id91-type tasks.
finally we mention graclus [54], which uses multi-resolution techniques and kernel id116 to optimize
a metric that is closely related to conductance.

while the preceding were all approximate algorithms for    nding the lowest conductance cut in a whole
graph, we now mention mqi [77, 106], an exact algorithm for the slightly di   erent problem of    nding
the lowest conductance cut in half of a graph. this algorithm can be combined with a good method for
initially splitting the graph into two pieces (such as metis or the spectral method) to obtain a surprisingly
strong heuristic method for    nding low conductance cuts in the whole graph [106]. the exactness of the
second optimization step frequently results in cuts with extremely low conductance scores, as will be
visible in many of our plots. mqi can be implemented by solving single parametric max    ow problems,
or sequences of ordinary max    ow problems. parametric max    ow (with mqi described as one of the
applications) was introduced by [77], and recent empirical work is described in [18], but currently there
is no publicly available code that scales to the sizes we need. ordinary max    ow is a very thoroughly
studied problem. currently, the best theoretical time bounds are [82], the most practical algorithm is [83],
while the best implementation is hi pr by [33]. since metis+mqi using the hi pr code is very fast and
scalable, while the method empirically seems to usually    nd the lowest or nearly lowest conductance cuts
in a wide variety of graphs, we have used it extensively in this study.

we will also extensively use local spectral algorithm of andersen, chung, and lang [13] to    nd node
sets of low conductance, i.e., good communities, around a seed node. this algorithm is also very fast,
and it can be successfully applied to very large graphs to obtain more    well-rounded   ,    compact,    or
   evenly-connected    communities than those returned by meits+mqi. the latter observation (described
in more detail in section 5) is since local id106 also confuse long paths (which tend to occur
in our very sparse network datasets) with deep cuts. this algorithm takes as input two parameters   the
seed node and a parameter    that intuitively controls the locality of the computation   and it outputs a
set of nodes. local id106 were introduced by spielman and teng [150, 13], and they have
roughly the same kind of quadratic approximation guarantees as the global spectral method, but they
have computational cost is proportional to the size of the obtained piece [35, 37, 36].

community structure in large networks

17

3 the network community pro   le plot (ncp plot)

in this section, we discuss the network community pro   le plot (ncp plot), which measures the quality
of network communities at di   erent size scales. we start in section 3.1 by introducing it. then, in
section 3.2, we present the ncp plot for several examples of networks which inform peoples    intuition
and for which the ncp plot behaves in a characteristic manner. then, in sections 3.3 and 3.4 we present
the ncp plot for a wide range of large real world social and information networks. we will see that in
such networks the ncp plot behaves in a qualitatively di   erent manner.

3.1 de   nitions for the network community pro   le plot

in order to more    nely resolve community structure in large networks, we introduce the network com-
munity pro   le plot (ncp plot).
intuitively, the ncp plot measures the quality of the best possible
community in a large network, as a function of the community size. formally, we may de   ne it as the
conductance value of the best conductance set of cardinality k in the entire network, as a function of k.

de   nion 2 given a graph g with adjacency matrix a, the network community pro   le plot (ncp plot)
plots   (k) as a function of k, where

  (k) = min

s   v,|s|=k

  (s),

(8)

where |s| denotes the cardinality of the set s, and where the conductance   (s) of s is given by equa-
tion (6).

since this quantity is intractable to compute, we will employ well-studied approximation algorithms
for the minimum conductance cut problem to approximate it. in particular, operationally we will use
several natural heuristics based on approximation algorithms to do graph partitioning in order to compute
di   erent approximations to the ncp plot. although other procedures will be described in section 5, we
will primarily employ two procedures. first, metis+mqi, i.e., the graph partitioning package metis [95]
followed by the    ow-based post-processing procedure mqi [106]; this procedure returns sets that have
very good conductance values. second, the local spectral algorithm of andersen, chung, and lang [13];
this procedure returns sets that are somewhat more    compact    or    smoothed    or    regularized,    but that
often have somewhat worse conductance values.

just as the conductance of a set of nodes provides a quality measure of that set as a community, the
shape of the ncp plot provides insight into the community structure of a graph as a whole. for example,
the magnitude of the conductance tells us how well clusters of di   erent sizes are separated from the rest
of the network. one might hope to obtain some sort of    smoothed    measure of the notion of the best
community of size k (e.g., by considering an average of the conductance value over all sets of a given size
or by considering a smoothed extremal statistic such as a 95-th percentile) rather than conductance of
the best set of that size. we have not de   ned such a measure since there is no obvious way to average
over all subsets of size k and obtain a meaningful approximation to the minimum. on the other hand, our
approximation algorithm methodology implicitly incorporates such an e   ect. although metis+mqi    nds
sets of nodes with extremely good conductance value, empirically we observe that they often have little
or no internal structure   they can even be disconnected. on the other hand, since id106 in
general tend to confuse long paths with deep cuts [149, 84], the local spectral algorithm    nds sets that
are    tighter    and more    well-rounded    and thus in many ways more community-like. (see sections 2.3
and 5 for details on these algorithmic issues and interpretations.)

18

leskovec, lang, dasgupta, and mahoney

3.2 community pro   le plots for expander, low-dimensional, and small social

networks

the ncp plot behaves in a characteristic manner for graphs that are    well-embeddable    into an un-
derlying low-dimensional geometric structure. to illustrate this, consider figure 4. in figure 4(a), we
show the results for a 1-dimensional chain, a 2-dimensional grid, and a 3-dimensional cube. in each case,
the ncp plot is steadily downward sloping as a function of the number of nodes in the smaller cluster.
moreover, the curves are straight lines with a slope equal to    1/d, where d is the dimensionality of the
underlying grids. in particular, as the underlying dimension increases then the slope of the ncp plot
gets less steep. thus, we observe:

observation 1 if the network under consideration corresponds to a d-dimensional grid, then the ncp
plot shows that

1
d

   

=

log(  (k))

log(k)

.

(9)

this is simply a manifestation of the isoperimetric (i.e., surface area to volume) phenomenon: for a grid,
the    best    cut is obtained by cutting out a set of adjacent nodes, in which case the surface area (number of
edges cut) increases as o(md   1), while the volume (number of vertices/edges inside the cluster) increases
as o(md).

this qualitative phenomenon of a steadily downward sloping ncp plot is quite robust for networks
that    live    in a low-dimensional structure, e.g., on a manifold or the surface of the earth. for example,
figure 4(b) shows the ncp plot for a power grid network of western states power grid [156], and
figure 4(c) shows the ncp plot for a road network of california. these two networks have very di   erent
sizes   the power grid network has 4, 941 nodes and 6, 594 edges, and the road network has 1, 957, 027 nodes
and 2, 760, 388 edges   and they arise in very di   erent application domains. in both cases, however, we
see predominantly downward sloping ncp plot, very much similar to the pro   le of a simple 2-dimensional
grid. indeed, the    best-   t    line for power grid gives the slope of        0.45, which by (9) suggests that d    
2.2, which is not far from the    true    dimensionality of 2. moreover, empirically we observe that minima
in the ncp plot correspond to community-like sets, which are occasionally nested. this corresponds to
hierarchical community organization. for example, the nodes giving the dip at k = 19 are included in
the nodes giving the dip at k = 883, while dips at k = 94 and k = 105 are both included in the dip at
k = 262.

in a similar manner, figure 4(d) shows the pro   le plot for a graph generated from a    swiss roll    dataset
which is commonly examined in the manifold and machine learning literature [153]. in this case, we still
observe a downward sloping ncp plot that corresponds to internal dimensionally of the manifold (2 in
this case). finally, figures 4(e) and 4(f) show ncp plots for two graphs that are very good expanders.
the    rst is a gnm graph with 100, 000 nodes and a number of edges such that the average degree is 4,
6, and 8. the second is a constant degree expander: to make one with degree d, we take the union of
d disjoint but otherwise random complete matchings, and we have plotted the results for d = 4, 6, 8. in
both of these cases, the ncp plot is roughly    at, which we also observed in figure 4(a) for a clique,
which is to be expected since the minimum conductance cut in the entire graph cannot be too small for
a good expander [88].

somewhat surprisingly (especially when compared with large networks in section 3.3), a steadily
decreasing downward ncp plot is seen for small social networks that have been extensively studied in
validating community detection algorithms. several examples are shown in figures 5. for these networks,
the interpretation is similar to that for the low-dimensional networks: the downward slope indicates that
as potential communities get larger and larger, there are relatively more intra-edges than inter-edges; and
empirically we observe that local minima in the ncp plot correspond to sets of nodes that are plausible
communities. consider, e.g., zachary   s karate club [160] network (zacharykarate), an extensively-
analyzed social network [128, 131, 94]. the network has 34 nodes, each of which represents a member of

community structure in large networks

19

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-3

100

clique, -1/d   0

cube, -1/d   -.33

grid, -1/d   -.50

chain, -1/d   -1.0

101

102

103

104

105

106

k (number of nodes in the cluster)

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

k (number of nodes in the cluster)

(a) several low-dimensional meshes.

(b) powergrid

100

10-1

10-2

10-3

10-4

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-5

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-2

100

101

102

103

104

k (number of nodes in the cluster)

(c) road-ca

(d) manifold

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

101

average degree 4
average degree 6
average degree 8
103

102

104

k (number of nodes in the cluster)

(e) expander: dense gnm graph

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

degree 4 expander
degree 6 expander
degree 8 expander

101

102

103

104

105

k (number of nodes in the cluster)

(f) expander: union of matchings

figure 4: network community pro   le plots for expander-like graphs and several networks that    live    in low-
dimensional spaces. (4(a)) a large clique graph, a cube (3d mesh), a grid (2d mesh) and a chain (line). note that
the slope of community pro   le plot directly corresponds to dimensionality of the graph. (4(b)) and (4(c)) two
networks on the earth   s surface and thus that are reasonably well-embeddable in two dimensions. (4(d)) a 2d
   swiss roll    manifold embedded in 3 dimensions, where every we connected every point to 10 nearest neighbors.
(4(e)) and (4(f)) two networks that are very good expanders.

20

leskovec, lang, dasgupta, and mahoney

a karate club, and 78 edges, each of which represent a friendship tie between two members. figure 5(a)
depicts the karate club network, and figure 5(b) shows its ncp plot. there are two local minima in
the plot: the    rst dip at k = 5 corresponds to the cut a, and the second dip at k = 17 corresponds to
cut b. note that cut b, which separates the graph roughly in half, has better conductance value than
cut a. this corresponds with the intuition about the ncp plot derived from studying low-dimensional
graphs. note also that the karate network corresponds well with the intuitive notion of a community,
where nodes of the community are densely linked among themselves and there are few edges between
nodes of di   erent communities.

in a similar manner: figure 5(c) shows a social network (with 62 nodes and 159 edges) of interactions
within a group of dolphins [119]; figure 5(e) shows a social network of monks (with 18 nodes representing
individual monks and 41 edges representing social ties between pairs of monks) in a cloister [145]; and
figure 5(g) depicts newman   s network (with 914 collaborations between 379 researchers) of scientists
who conduct research on networks [132]. for each network, the ncp plot exhibits a downward trend,
and it has local minima at cluster sizes that correspond to good communities: the minimum for the
dolphins network (figure 5(d)) corresponds to the separation of the network into two communities denoted
with di   erent shape and color of the nodes (gray circles versus red squares); the minima of the monk
network (figure 5(f)) corresponds to the split of 7 turks (red squares) and the so-called loyal opposition
(gray circles) [145]; and empirically both local minima and the global minimum in the network science
network (figure 5(h)) correspond to plausible communities. note that in the last case, the    gure also
displays hierarchical structure in which case the community de   ned by cut c is included in a larger
community that has better conductance value.

at this point, we can observe that the following two general observations hold for networks that are
well-embeddable in a low-dimensional space and also for small social networks that have been extensively
studied and used to validate community detection algorithms. first, minima in the ncp plots, i.e., the
best low-conductance cuts of a given size, correspond to communities-like sets of nodes. second, the
ncp plots are generally relatively gradually sloping downwards, meaning that smaller communities can
be combined into larger sets of nodes that can also be meaningfully interpreted as communities.

3.3 community pro   le plots for large social and information networks

we have examined ncp plots for each of the networks listed in tables 1, 2 and 3. in figure 6, we present
ncp plots for six of these networks. (these particular networks were chosen to be representative of the
wide range of networks we have examined, and for ease of comparison we will compute other properties
for them in future sections. see figures 7, 8, and 9 in section 3.4 for the ncp plots of other networks
listed in tables 1, 2 and 3, and for a discussion of them.) the most striking feature of these plots is that
the ncp plot is steadily increasing for nearly its entire range.

consider,    rst, the ncp plot for the livejournal01 social network, as shown in figure 6(a), and
focus    rst on the red curve, which presents the results of applying the local spectral algorithm.2 we
make the following observations:

    up to a size scale, which empirically is roughly 100 nodes, the slope of the ncp plot is generally

2 the algorithm takes as input two parameters   the seed node and the parameter    that intuitively controls the locality
of the computation   and it outputs a set of nodes. for a given seed node and resolution parameter    we obtain a local
community pro   le plot, which tells us about conductance of cuts in vicinity of the seed node. by taking the lower-envelope
over community pro   les of di   erent seed nodes and    values we obtain the global network community pro   le plot. for our
experiments, we typically considered 100 di   erent values of   . since very local id93 discover small clusters, in
this case we considered every node as a seed node. as we examine larger clusters, the random walk computation spreads
farther away from the seed node, in which case the exact choice of seed node becomes less important. thus, in this case,
we sampled fewer seed nodes. additionally, in our experiments, for each value of    we randomly sampled nodes until each
node in the network was visited by id93 starting from, 10 di   erent seed nodes on average.

community structure in large networks

21

 1

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

cut a

cut a+b

(a) zachary   s karate club network . . .

 0.1

 1

 10

k (number of nodes in the cluster)

(b) . . . and it   s community pro   le plot

 1

 0.1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

(c) dolphins social network . . .

 0.01

 1

cut

 10

 100

k (number of nodes in the cluster)

(d) . . . and it   s community pro   le plot

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

 1

 0.1

 1

cut

 10

(e) monks social network . . .

k (number of nodes in the cluster)

(f) . . . and it   s community pro   le plot

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

 1

 0.1

 0.01

 0.001

 1

a

b

c

d
c+e

 10

 100

(g) network science network . . .

k (number of nodes in the cluster)

(h) . . . and it   s community pro   le plot

figure 5: depiction of several small social networks that are common test sets for community detection algorithms
and their network community pro   le plots. (5(a)   5(b)) zachary   s karate club network. (5(c)   5(d)) a network of
dolphins. (5(e)   5(f)) a network of monks. (5(g)   5(h)) a network of researchers researching networks.

22

leskovec, lang, dasgupta, and mahoney

100

10-1

10-2

10-3

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-4

100 101 102 103 104 105 106 107

10-3

100

k (number of nodes in the cluster)

(a) livejournal01

101

102

103

104

105

k (number of nodes in the cluster)

(b) epinions

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

10-3

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

101

102

103

104

105

k (number of nodes in the cluster)

(c) cit-hep-th

10-4

100

101

102

103

104

105

106

k (number of nodes in the cluster)

(d) web-google

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

(e) atp-dblp

10-2

100

101

102

103

104

105

k (number of nodes in the cluster)

(f) gnutella-31

[best viewed in color.] network community pro   le plots for a representative sample of large networks
figure 6:
listed in tables 1, 2 and 3. the red curves plot the results of the local spectral algorithm on the speci   ed network;
green curves plot the results of metis+mqi; blue curves plot the results of the bag-of-whiskers heuristic; and
black curves plot the results of the local spectral algorithm applied to a randomly rewired version of the same
network. notice that in all cases the    best    communities are quite small (typically between 10 and 100 nodes)
and that the network community pro   le plot steadily increases for nearly its entire range. see figures 7, 8, and
9 for the ncp plots of other networks.

community structure in large networks

23

sloping downward.

    at that size scale, we observe the global minimum of the ncp plot. this set of nodes as well as
others achieving local minima of the ncp plot in the same size range are the    best    communities,
according to the conductance measure, in the entire graph.

    these best communities (the best denoted by a square) are barely connected to the rest of the

graph, e.g., they are typically connected to the rest of the nodes by a single edge.

    above the size scale of roughly 100 nodes, the ncp plot gradually increases over several orders
of magnitude. the    best    communities in the entire graph are quite good (in that they have
size roughly 102 nodes and conductance scores less than 10   3) whereas the    best    communities
of size 105 or 106 have conductance scores of about 10   1.
in between these two size extremes,
the conductance scores get gradually worse, although there are numerous local dips and even one
relatively large dip between 105 and 106 nodes.

note that both axes in figure 6 are logarithmic, and thus the upward trend of the ncp plot is over a
wide range of size scales. note also that the green curve plots the results of metis+mqi (that returns
disconnected clusters), and the blue curve plots the results of applying the bag-of-whiskers heuristic, as
described in section 4.3. these procedures will be discussed in detail in sections 4 and 5.

the black curve in figure 6(a) plots the results of the local spectral algorithm applied to a rewired
version of the livejournal01 network, i.e., to a random graph conditioned on the same degree distri-
bution as the original network. (we obtain such random graph by starting with the original network and
then randomly selecting pairs of edges and rewiring the endpoints. by doing the rewiring long enough,
we obtain a random graph that has the same degree sequence as the original network [122].)

interestingly, the ncp of a rewired network    rst slightly decreases but then increases and    attens

out. several things should be noted:

    the original livejournal01 network has considerably more structure, i.e., deeper/better cuts,
than its rewired version, even up to the largest size scales. that is, we observe signi   cantly more
structure than would be seen, for example, in an random graph on the same degree sequence.

    relative to the original network, the    best    community in the rewired graph, i.e., the global min-
imum of the conductance curve, shifts upward and towards the left. this means that in rewired
networks the best conductance clusters get smaller and have worse conductance scores.

    sets at and near the minimum are small trees that are connected to the core of the random graph

by a single edge.

    after the small dip at a very small size scale (    10 nodes), the ncp plot increases to a high level

rather quickly. this is due to the absence of structure in the core.

finally, also note that the variance in the rewired version of the ncp plot (data not shown) is not much
larger than the width of the curve in the    gure.

we have observed qualitatively similar results in nearly every large social and information network we
have examined. for example, several additional examples are presented in figure 6: another network from
the class of social networks (epinions, in figure 6(b)); an information/citation network (cit-hep-th, in
figure 6(c)); a web graph (web-google, in figure 6(d)); a bipartite a   liation network (atp-dblp,
in figure 6(e)); and an internet network (gnutella-31, in figure 6(f)).

qualitative observations are consistent across the range of network sizes, densities, and di   erent
domains from which the networks are drawn. of course, these six networks are very di   erent than each
other   some of these di   erences are hidden due to the de   nition of the ncp plot, whereas others are
evident. perhaps the most obvious example of the latter is that even the best cuts in gnutella-31 are

24

leskovec, lang, dasgupta, and mahoney

not signi   cantly smaller or deeper than in the corresponding rewired network, whereas for web-google
we observe cuts that are orders of magnitude deeper.

intuitively, the upward trend in the ncp plot means that separating large clusters from the rest of
the network is especially expensive. it suggests that larger and larger clusters are    blended in    more and
more with the rest of the network. the interpretation we draw, based on these data and data presented in
subsequent sections is that, if a density-based concept such as conductance captures our intuitive notion
of community goodness and if we model large networks with interaction graphs, then the best possible
communities get less and less community-like as they grow in size.

3.4 more community pro   le plots for large social and information networks

figures 7, 8, and 9 show additional examples of ncp plots for networks from tables 1, 2 and 3. in the
   rst two rows of figure 7, we have several examples of purely social networks and two email networks,
in the third row we have patent and blog information/id191, and in the    nal row we have
three examples of actor and author collaboration networks. in figure 8, we see three examples each of
web graphs, internet networks, bipartite a   liation networks, and biological networks. finally, in the
   rst row of figure 9, we see low-dimensional networks, including two road and a manifold network; in
the second row, we have an imdb actor-to-movie graphs and two subgraphs induced by restricting to
individual countries; in the third row, we see three amazon product co-purchasing networks; and in the
   nal row we see a yahoo! answers networks and two subgraphs that are large good conductance cuts
from the full network.

for most of these networks, the same four versions of the ncp plot are plotted that were presented
in figure 6. note that, as before, the scale of the vertical axis in these graphs is not all the same; the
minima range from 10   2 to 10   5. these network datasets are drawn from a wide range of areas, and
these graphs contain a wealth of information, a full analysis of which is well beyond the scope of the
paper. note, however, that the general trends we discussed in section 3.3 still manifest themselves in
nearly every network.

the imdb-raw07 network is interesting in that its ncp plot does not increase much (at least not
the version computed by the local spectral algorithm) and we clearly observe large sets with good
conductance values. upon examination, many of the large good conductance cuts seem to be associated
with di   erent language groups. two things should be noted. first, and not surprisingly, in this network
and others, we have observed that there is some sensitivity to how the data are prepared. for example,
we obtain somewhat stronger communities if ambiguous nodes (and there are a lot of ambiguous nodes
in network datasets with millions of nodes) are removed than if, e.g., they are assigned to a country
based on a voting mechanism of some other heuristic. a full analysis of these data preparation issues is
beyond the scope of this paper, but our overall conclusions seem to hold independent of the preparation
details. second, if we examine individual countries   two representative examples are shown   then we
see substantially less structure at large size scales.

the yahoo! answers social network (see answers) also has several large cuts with good conductance
value   actually, the best cut in the network has more 105 nodes. (it is likely that exogenous factors
are responsible for these large deep cuts.) using standard graph partitioning procedures, we obtained
four large disjoint clusters consisting of ca. 5, 300, 25, 400, 27, 000, and 290, 000 nodes, respectively,
corresponding to the four dips (two of which visually overlap) in the ncp plot. we then examined the
community pro   le plots for each of these pieces. the two representative examples of which we show
clearly indicate a ncp plot that is much more like other network datasets we have examined.

community structure in large networks

25

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

social networks

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

10-3

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100 101 102 103 104 105 106 107

k (number of nodes in the cluster)

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-4

100

101

102

103

104

105

k (number of nodes in the cluster)

linkedin

messenger

delicious

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-2

100

flickr

101

102

103

104

105

k (number of nodes in the cluster)

email-inout

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

105

k (number of nodes in the cluster)

email-enron

information networks (citation and blog networks)

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100 101 102 103 104 105 106 107

k (number of nodes in the cluster)

10-3

100

patents

101

102

103

104

105

k (number of nodes in the cluster)
blog-nat06all

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

collaboration networks
100

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-1

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

101

102

103

104

105

106

k (number of nodes in the cluster)
post-nat06all

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-2

100

ata-imdb

101

102

103

104

105

k (number of nodes in the cluster)

ca-astro-ph

10-3

100

101

102

103

104

105

k (number of nodes in the cluster)

ca-hep-ph

figure 7:

[best viewed in color.] community pro   le plots of networks from table 1.

26

100

10-1

10-2

10-3

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

leskovec, lang, dasgupta, and mahoney

web graphs

100

10-1

10-2

10-3

10-4

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

10-3

10-4

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-4

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-5

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-5

100

101

102

103

104

105

106

k (number of nodes in the cluster)

web-berkstan

web-notredame

web-trec

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

internet networks

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

101

102

103

104

105

k (number of nodes in the cluster)

10-2

100

as-newman

101

102

103

104

105

k (number of nodes in the cluster)

gnutella-25

10-2

100

101

102

103

104

k (number of nodes in the cluster)

as-oregon

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

bipartite a   liation networks

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

101

102

103

104

105

k (number of nodes in the cluster)

atp-cond-mat

10-3

100

101

102

103

104

105

k (number of nodes in the cluster)

10-2

100

atp-hep-th

101

102

103

104

105

106

k (number of nodes in the cluster)

clickstream

biological networks

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

101

102

103

104

k (number of nodes in the cluster)

bio-proteins

10-2

100

101

102

103

k (number of nodes in the cluster)

10-2

100

101

102

103

k (number of nodes in the cluster)

bio-yeast

bio-yeastp0.01

figure 8:

[best viewed in color.] community pro   le plots of networks from table 2.

community structure in large networks

27

100

10-1

10-2

10-3

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

low-dimensional networks

100

10-1

10-2

10-3

10-4

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-4

100

101

102

103

104

105

k (number of nodes in the cluster)

10-5

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-2

100

road-usa

road-pa

101

102

103

k (number of nodes in the cluster)
mani-facesk5

imdb actor-to-movie graphs

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-2

100

101

102

103

104

k (number of nodes in the cluster)

10-2

100

101

102

103

104

k (number of nodes in the cluster)

imdb-raw07

imdb-mexico

imdb-wgermany

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

amazon product co-purchasing networks
100

100

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-1

10-2

10-3

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-1

10-2

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-4

100

amazonallprod

101

102

103

104

105

106

k (number of nodes in the cluster)
amazon0302

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

amazonall

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

(b)

(c)
original network
rewired network

(d)

101

102

103

104

105

106

k (number of nodes in the cluster)

answers

yahoo answers networks

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

original network
rewired network

101

102

103

104

k (number of nodes in the cluster)

answers-5

10-2

100

101

original network
rewired network
102

103

104

105

k (number of nodes in the cluster)

answers-6

figure 9:
two sub-pieces of answers.

[best viewed in color.] community pro   le plots of networks from table 3, as well as answers and

28

leskovec, lang, dasgupta, and mahoney

4 more structural observations of our network datasets

we have examined in greater detail our network datasets in order to understand which structural prop-
erties are responsible for the observed properties of the ncp plot. we    rst present statistics for our
network datasets in section 4.1. then, in section 4.2 we describe a heuristic to identify small sets of
nodes that have strong connections amongst themselves but that are connected to the remainder of the
network by only a single edge. in section 4.3, we show that these    whiskers    (or disjoint unions of them)
are often the    best    conductance communities in the network. last, in section 4.4 we examine ncp
plots for networks in which these whiskers have been removed.

4.1 general statistics on our network datasets

in tables 1, 2, and 3, we also present the following statistics for our network datasets: the number of
nodes n ; the number of edges e; the fraction of nodes in the largest biconnected component nb/n ; the
fraction of edges in the largest biconnected component eb/e; the average degree   d = 2e/n ; the empirical
second-order average degree [42]   d; average id91 coe   cient [156]   c; the estimated diameter d; and
the estimated average path length   d. (the diameter was estimated using the following algorithm: pick
a random node,    nd the farthest node x (via shortest path); move to x and    nd the farthest node from
x; iterate this procedure until the distance to the farthest node does not increase anymore. the average
path length was estimated based on 10, 000 randomly sampled nodes.)

in nearly every network we have examined, there is a substantial fraction of nodes that are barely
connected to the main part of the network, i.e., that are part of a small cluster of ca. 10 to 100 nodes
that are attached to the remainder of the network via one or a small number of edges. in particular, a
large fraction of the network is made out of nodes that are not in the biconnected core.3

for example, the epinions network has 75, 877 nodes and 405, 739 edges, and the core of the network
it
has only 36, 111 (47%) nodes and 365, 253 (90%) edges. for delicious, the core is even smaller:
contains only 40% of the nodes, and 65% of the edges. averaging over our network datasets, we see that
the largest biconnected component contains around only 60% of the nodes and 80% of the edges of the
original network. this is somewhat akin to the so-called    jelly   sh    model [152, 148] (which was proposed
as a model for the graph of internet topology) and also to the    octopus    model (for random power law
graphs [42], which is described in more detail in section 6.2). moreover, the global minimum of the
ncp plot is nearly always one of these pieces that is connected by only a single edge. since these small
barely-connected pieces seem to have a disproportionately large in   uence on the community structure of
our network datasets, we examine them in greater detail in the next section.

4.2 network    whiskers    and the    core   

we de   ne whiskers, or more precisely 1-whiskers, to be maximal subgraphs that can be detached from
the rest of the network by removing a single edge. (occasionally, we use the term whiskers informally
to refer to barely connected sets of nodes more generally.) to    nd 1-whiskers, we employ the following
algorithm. using a depth-   rst search algorithm, we    nd the largest biconnected component b of the
graph g. (a graph is biconnected if the removal of any single edge does not disconnect the graph.) we
then delete all the edges in g that have one of their end points in b. we call the connected components
of this new graph g    1-whiskers, since they correspond to largest subgraphs that can be disconnected
from g by removing just a single edge. recall that figure 2(b) contains a schematic picture a network,

3 in this paper, we are slightly abusing standard terminology by using the term bi-connectivity to mean 2-edge-
connectivity. we are running the classic dfs-based bi-connectivity algorithm, which identi   es both bridge edges and
articulation nodes, but then we are only knocking out the bridge edges, not the articulation nodes, so we end up with
2-edge-connected pieces.

community structure in large networks

29

including several of its whiskers.

not surprisingly, there is a wide range of whisker sizes and shapes. figure 10 shows the distribution
of 1-whisker sizes for a representative selection of our network datasets. empirically, 1-whisker size
distribution is heavy-tailed, with the largest whisker size ranging from around less than 10 to well above
100. the largest whiskers in co-authorship and id191 have around 10 nodes, whiskers in
bipartite graphs also tend to be small, and very large whiskers are found in a web graph. figure 10 also
compares the size of the whiskers with the sizes of whiskers in a rewired version of the same network.
(the    rst thing to note is that due to the sparsity of the networks, the rewired versions all have whiskers.)
in rewired networks the whiskers tend to be much smaller than in the original network. a particularly
noteworthy exception is found in the autonomous systems networks and the gnutella-31 network.
(see figure 10(f) for an example of the latter.) in these cases, the whiskers are so small that even the
rewired version of the network has more and larger whiskers. this makes sense, given how those networks
were designed: clearly, many large whiskers would have negative e   ects on the internet connectivity in
case of link failures.

figure 11 shows the ten largest whiskers of the epinions social network, the full size distribution of
which was plotted in figure 10(b), and figure 12 shows the ten largest whiskers of the ca-cond-mat
co-authorship network. in these networks, the whiskers have on the order of 10 nodes, and they are
seen to have a rich internal structure. similar but substantially more complex    gures could be generated
for networks with larger whiskers. in general, the results we observe are consistent with a knowledge of
the    elds from which the particular datasets have been drawn. for example, in web-google we see
very large whiskers. this probably represents a well-connected network between the main categories of a
website (e.g., di   erent projects), while the individual project websites have a main index page that then
points to the rest of the documents.

the discrepancy between the sizes of the whiskers in the original and the rewired networks gives hints
that real networks have much richer structure than that imposed by their heavy-tailed degree distribution.
one might ask whether the conclusion from this is that real-world graphs should be thought of as being
somewhat like sparse random graphs, since, e.g., both have whiskers, or should be thought of as very
di   erent than sparse random graphs, since, e.g., the whiskers have much more internal structure. we
will return to this issue in section 6.

4.3 bags of whiskers and communities of composed whiskers

empirically, if one looks at the sets of nodes achieving the minimum in the ncp plot (green metis+mqi
curve), then before the global ncp minimum communities are whiskers and above that size scale they are
often unions of disjoint whiskers. to understand the extent to which these whiskers and unions of whiskers
are responsible for the    best    conductance sets of di   erent sizes, we have developed the bag-of-whiskers
heuristic. we arti   cially compose    communities    from disconnected whiskers and measure conductance
of such clusters. clearly, interpreting and relating such communities to real-world communities makes
little sense as these communities are in fact disconnected.

problem:    nd a set c of whiskers such that pi   c n (wi) = k and pi   c

in more detail, we performed the following experiment: suppose we have a set w = {w1, w2, . . .} of
whiskers. in order to construct the optimal conductance cluster of size k, we need to solve the following
is maximized, where n (wi)
is the number of nodes in wi and d(wi) is its total internal degree. we then use a id145
to get an approximate solution to this problem. this way, for each size k, we    nd a cluster that is
composed solely from (disconnected) whiskers. figure 6 as well as figures 7, 8 and 9 show the results of
this heuristic applied to many of our network datasets (blue curve).

d(wi)

|c|

there are several observations we can make:

    the largest whisker (denoted with a red square) is the lowest point in nearly all ncp plots. this
means that the best conductance community is in a sense trivial as it cuts just a single edge, and

30

leskovec, lang, dasgupta, and mahoney

t
n
u
o
c

106
105
104
103
102
101
100

100

104

103

t

n
u
o
c

102

101

100

100

106
105
104
103
102
101
100

100

t

n
u
o
c

original network
rewired network

101

102

103

whisker size

(a) livejournal01

original network
rewired network

101

whisker size
(c) cit-hep-th

102

original network
rewired network

101

102

103

whisker size
(e) atp-dblp

105

104

103

102

101

t
n
u
o
c

100

100

106
105
104
103
102
101
100

100

t

n
u
o
c

105

104

103

102

101

t

n
u
o
c

100

100

original network
rewired network

101

whisker size

(b) epinions

102

original network
rewired network

101

102

whisker size
(d) web-google

103

original network
rewired network

whisker size
(f) gnutella-31

101

figure 10: distribution of whisker sizes in the true network and the rewired network (random graph with same
degree distribution) for the six networks presented in figure 6. the ten largest whiskers for the epinions social
network (the full distribution of which is presented here in panel (b)) are presented in figure 11.

community structure in large networks

31

figure 11: ten largest whiskers of the epinions social network. the green square node is the node from the
bi-connected core of the network to which the whisker is connected. for visual clarity, the whisker node that
connects to the core of the network is displayed in red, and thus it is the edge between the red circle and the green
square node that if cut disconnects the whisker from the core. the distribution of whisker sizes and comparison
to rewired network is plotted in figure 10(b).

figure 12: ten largest whiskers of the ca-cond-mat co-authorship network. the green square node belongs
to the network core, and by cutting the edge connecting it with red circular node we separate the community of
circles from the rest of the network (depicted as a green square).

32

leskovec, lang, dasgupta, and mahoney

in addition that a very simple heuristic can    nd this set.

    for community size below the critical size of     100 nodes (i.e., of size smaller than the largest
whisker), the best community in the network is actually a whisker and can be cut by a single edge
(blue and red curve overlap).

    for community size larger than the critical size of     100, the bag-of-whiskers communities have bet-
ter scores than the internally well-connected communities extracted by local spectral (red curve).
the shape of this blue curve in that size region depends on the distribution of sizes of whiskers, but
in nearly every case it is seen to yield better conductance sets than the local spectral algorithm.

moreover, the bag-of-whiskers heuristic often agrees, exactly or approximately, with results from metis+mqi
(green curve). in particular, the best conductance sets of a given size are often disconnected, and when
they are connected they are often only tenuously connected. thus, if one only cares about    nding good
cuts then the best cuts in these large sparse graphs are obtained by composing unrelated disconnected
pieces. intuitively, a compact cluster is internally well and evenly connected. possible measures for clus-
ter compactness include: cluster connectedness, diameter, conductance of the cut inside the cluster, ratio
of conductance of the cut outside versus the cut inside. we discuss this in more detail in section 5.

4.4 community pro   le of networks with no 1-whiskers

given the surprisingly signi   cant e   ect on the community structure of real-world networks that whiskers
and unions of disjoint whiskers have, one might wonder whether we see something qualitatively di   erent
if we consider a real-world network in which these barely-connected pieces have been removed. to study
this, we found all 1-whiskers and removed them from our networks, using the procedure we described in
section 4.2, i.e., we selected the largest biconnected component for each of our network datasets. this
way, we kept only the network core, and we then computed the ncp plots for these modi   ed networks.
figure 13 shows the ncp plots of networks constructed when we remove whiskers (i.e., keep only the
network core) for the six networks we studied in detail before.

notice that whisker removal does not change the ncp plot much: the plot shifts slightly upward, but
the general trends remain the same. upon examination, the global minimum occurs with a    2-whisker   
that is connected by two edges to the remainder of the graph. intuitively, the largest biconnected core has
a large number of barely connected pieces   connected now by two edges rather than by one edge   and
thus the    core    itself has a core-periphery structure. since the    volume    for these pieces is similar to
that for the original whiskers, whereas the    surface area    is a factor of two larger, the conductance value
is roughly a factor of two worse. thus, although we have been discussing 1-whiskers in this section, one
should really view them as the simplest example of weakly-connected pieces that exert a signi   cant e   ect
on the community structure in large real-world networks.

5 comparison to other algorithms

so far, we have been primarily relying on two graph partitioning algorithms: a local spectral algorithm
and metis+mqi. next, we want to demonstrate that what we are observing is a true structural property
of our network datasets, rather than properties of our algorithms; and we want to use the di   erences
between di   erent approximation algorithms to further highlight structural properties of our network
datasets.
in this section we discuss several meta-issues related to this, including whether or not our
algorithms are su   ciently powerful to recover the true shape of the minimal conductance curves, and
whether we should actually be trying to optimize a slightly di   erent measure that combines conductance
of the separating cut with the piece compactness.

recall that we de   ned the ncp plot to be a curve showing the minimum conductance    as a function
of piece size k. finding the points on this curve is np-hard. any cut that we    nd will only provide an

community structure in large networks

33

100

10-1

10-2

10-3

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-4

100

101

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 
  

105

106

10-3

100

original network
whiskers removed
102

103

104

k (number of nodes in the cluster)

(a) livejournal01

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

original network
whiskers removed

101

102

103

104

105

k (number of nodes in the cluster)

(c) cit-hep-th

original network
whiskers removed
103

102

101

104
n (number of nodes in the cluster)

(b) epinions

100

10-1

10-2

10-3

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-4

100

101

original network
whiskers removed
102

103

104

105

106

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

101

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

105

106

10-2

100

original network
whiskers removed
102

103

104

k (number of nodes in the cluster)

(e) atp-dblp

k (number of nodes in the cluster)

(d) web-google

original network
whiskers removed

101

102

103

104

k (number of nodes in the cluster)

(f) gnutella-31

figure 13:
[best viewed in color.] network community pro   le plots with (in red) and without (in green) 1-
whiskers, for each of the six networks shown figure 6. whiskers were removed as described in the text. in the
former case, we plot results for the full network, and in the latter case, we plot results for the largest bi-connected
component.

34

leskovec, lang, dasgupta, and mahoney

upper bound on the true minimum at the resulting piece   s size. given that fact, how con   dent can we be
that the curve of upper bounds that we have computed has the same rising or falling shape as the true
curve?

one method for    nding out whether any given algorithm is doing a good job of pushing down the
upper bounding curve in a non-size-biased way is to compare its curves for numerous graphs with those
produced by other algorithms. in such experiments, it is good if the algorithms are very powerful and
also independent of each other. we have done extensive experiments along these lines, and our choice of
local spectral and metis+mqi as the two algorithms for the main body of this paper was based on the
results. in section 5.1 we mention a few interesting points related to this.

a di   erent method for reducing our uncertainty about the shape of the true curve would be to also
compute lower bounds on the curve. ideally, one would compute a complete curve of tight lower bounds,
leaving a thin band between the upper- and lower-bounding curves, which would make the rising or
falling shape of the true curve obvious. in section 5.2 we discuss some experiments with lower bounds.
although we only obtained a few lower bounds rather than a full curve, the results are consistent with
our main results obtained from upper-bounding curves.

finally, in section 5.3 we will discuss our decision to use the local spectral algorithm in addition
to metis+mqi in the main body of the paper, despite the fact that metis+mqi clearly dominates
local spectral at the nominal task of    nding the lowest possible upper bounding curve for the minimal
conductance curve. the reason for this decision is that local spectral often returns    nicer    and more
   compact    pieces because rather than minimizing conductance alone, it optimizes a slightly di   erent
measure that produces a compromise between the conductance of the bounding cut and the    compactness   
of the resulting piece.

5.1 cross-checking between algorithms

as just mentioned, one way to gain some con   dence in the upper bounding curves produced by a given
algorithm is to compare them with the curves produced by other algorithms that are as strong as possible,
and as independent as possible. we have extensively experimented with several variants of the global
spectral method, both the usual eigenvector-based embedding on a line, and an sdp-based embedding
on a hypersphere, both with the usual hyperplane-sweep rounding method and a fancier    ow-based
rounding method which includes mqi as the last step. in addition, special post-processing can be done
to obtain either connected or disconnected sets. after examining the output of those 8 comparatively
expensive algorithms on more than 100 graphs, we found that our two cheaper main algorithms did
miss an occasional cut on an occasional graph, but nothing at all serious enough to change our main
conclusions. all of those detailed results are suppressed in this paper.

we have also done experiments with a practical version of the leighton-rao algorithm [107, 108],
similar to the implementation described in [105] and [106]. these results are especially interesting because
the leighton-rao algorithm, which is based on multi-commodity    ow, provides a completely independent
check on metis, and on id106 generally, and therefore on our two main algorithms, namely
metis+mqi and local spectral. the leighton-rao algorithm has two phases. in the    rst phase, edge
congestions are produced by routing a large number of commodities through the network. we adapted
our program to optimize conductance (rather than ordinary ratio cut score) by letting the expected
demand between a pair of nodes be proportional to the product of their degrees. in the second phase,
a rounding algorithm is used to convert edge congestions into actual cuts. our method was to sweep
over node orderings produced by running prim   s mst algorithm on the congestion graph, starting from
a large number of di   erent initial nodes, using a range of di   erent scales to avoid quadratic run time.
we used two variations of this method, one that only produces connected sets, and another one that can
also produce disconnected sets.

in the second row of figure 14, we show leighton-rao curves for three example graphs. our standard
local spectral and metis+mqi curves are drawn in black, while the leighton-rao curves for connected

community structure in large networks

35

lower bounds on the conductance of best cut in the network.

leighton-rao: connected clusters (green), disconnected clusters (magenta).

ncp plots obtained by graclus and newman   s dendrogram algorithm.

figure 14: result of other algorithms for three networks: epinions, email-enron, and ca-astro-ph. top
row plots (in black) conductance curves as obtained by local spectral and metis+mqi. top row also shows lower
bounds on conductance of any cut (spectral lower bound, dashed line) and the cut separating the graph in half
(sdp lower bound, red triangle). middle row shows ncp plots for connected (green) and disconnected (magenta)
pieces from our implementation of the leighton-rao algorithm. bottom row shows the conductance of some cuts
found by graclus and by newman   s dendrogram algorithm. the overall conclusion is that the qualitative shape
of the ncp plots is a structural property of large networks and the plot remains practically unchanged regardless
of what particular community detection algorithm we use.

and possibly disconnected sets are drawn in green and magenta respectively. we note that for small to
medium scales, the leighton-rao curves for connected sets resemble the local spectral curves, while the
leighton-rao curves for possibly disconnected sets resemble the metis+mqi curves. this is big hint
about the structure of the sets produced by local spectral and metis+mqi, that we will discuss further
in section 5.3.

at large scales, the leighton-rao curves for these example graphs shoot up and become much worse
than our standard curves. this is not surprising because expander graphs are known to be the worst
case input for the leighton-rao approximation guarantee, and we believe that these graphs contain an

36

leskovec, lang, dasgupta, and mahoney

expander-like core that is necessarily encountered at large scales. we remark that leighton-rao does not
work poorly at large scales on every kind of graph. (in fact, for large low-dimensional mesh-like graphs,
leighton-rao is a very cheap and e   ective method for    nding cuts at all scales, while our local spectral
method becomes impractically slow at medium to large scales. we will not discuss this point further,
except to note that in the main body of the paper we have silently substituted leighton-rao curves for
local spectral curves for the large road networks and similar graphs.)

we have now covered the main theoretical algorithms that are practical enough to actually run,
which are based on spectral embeddings and on multi-commodity    ow. starting with [17], there has
been a recent burst of theoretical activity showing that spectral and    ow-based ideas, which were already
known to have complementary strengths and weaknesses, can in fact be combined to obtain the best ever
approximations. at present none of the resulting algorithms are su   ciently practical at the sizes that we
require, so they were not included in this study.

finally, we mention that in addition to the above theoretically-based practical methods for    nd-
ing low-conductance cuts, there exist a very large number of heuristic graph id91 methods. we
have tried a number of them, including graclus [54] and newman   s modularity optimizing program
(we refer to it as dendrogram) [80]. graclus attempts to    nd a partitioning of a graph into pieces
bounded by low-conductance cuts using a kernel id116 algorithm. we ran graclus repeatedly, asking

for 2, 3, . . . , i, . . . , i        2, ... pieces. then we measured the size and conductance of all of the resulting

pieces. newman   s dendrogram program constructs a recursive partitioning of a graph (that is, a den-
drogram) from the bottom up by repeatedly deleting the surviving edge with the highest betweenness
centrality. a    at partitioning could then be obtained by cutting at the level which gives the highest
modularity score, but instead of doing that, we measured the size of conductance of every piece de   ned
by a subtree in the dendrogram.

in the bottom row of figure 14, we present these results as scatterplots. again our two standard
curves are drawn in black. no graclus or dendrogram point lies below the metis+mqi curve. the
lower-envelopes of the points are roughly similar to those produced by local spectral.

our main point with these experiments is that the lowest points produced by either graclus or
dendrogram gradually rise as one moves from small scales to larger scales, so in principle we could have
made the same observations about the structure of large social and information networks by running one
of those easily downloadable programs instead of the algorithms that we did run. we chose the algorithms
we did due to their speed and power, although they may not be as familiar to many readers.

5.2 lower bounds on cut conductance

as mentioned above, our main arguments are all based on curves which are actually upper bounds on
the true minimum conductance curve. to get a better idea of how good those upper bounds are, we also
compute some lower bounds. here we will discuss the spectral lower bound [34] on the conductance of cuts
of arbitrary balance, and we will also discuss a related sdp-based lower bound [28] on the conductance
of any cut that divides the graph into two pieces of equal volume.

first, we introduce the following notation: ~d is a column vector of the graph   s node degrees; d
is a square matrix whose only nonzero entries are the graph   s node degrees on the diagonal; a is the
adjacency matrix of g; l = d     a is then the non-normalized laplacian matrix of g; 1 is vector of 1   s;
and a     b = trace(at b) is the matrix dot-product operator.
now, consider the following optimization problem (which is well known to be equivalent to an eigen-
problem):

  g = min(cid:26) xt lx

xt dx

: x     ~d, x 6= 0(cid:27) .

let   x be a vector achieving the minimum value   g. then   g
is the spectral lower bound on the
2
conductance of any cut in the graph, regardless of balance, while   x de   nes a spectral embedding of the

community structure in large networks

37

graph on a line, to which rounding algorithms can be applied to obtain actual cuts that can serve as
upper bounds at various sizes.

next, we discuss an sdp-based lower bound on cuts which partition the graph into two sets of exactly

equal volume. consider:

cg = min(cid:26) 1

4

l     y : diag(y ) = 1, y     (~d ~d t ) = 0, y (cid:23) 0(cid:27) ,

and let   y be a matrix achieving the minimum value cg. then cg is a lower bound on the weight of any
cut with perfect volume balance, and 2cg/vol(g) is a lower bound on the conductance of any cut with
perfect volume balance. we brie   y mention that since y (cid:23) 0, we can view y as a gram matrix that
can be factored can be factored as rrt . then the rows of r are the coordinates of an embedding of the
graph on a hypersphere. again, rounding algorithms can be applied to the embedding to obtain actual
cuts that can server as upper bounds.

the spectral and sdp embeddings de   ned here were the basis for the extensive experiments with
global spectral partitioning methods that were alluded to in section 5.1. however, in this section, it is
the lower bounds that concern us. in the top row of figure 14, we present the spectral and sdp lower
bounds for three example graphs. the spectral lower bound, which applies to cuts of any balance, is
drawn as a horizontal line which appears near the bottom of each plot. the sdp lower bound, which only
applies to cuts separating a speci   c volume, namely vol(g)/2, appears as an upwards-pointing triangle
near the right side of the each plot. (note that plotting this point required us to use volume rather than
number of nodes for the x-axis of these three plots.)

clearly, for these graphs, the lower bound at vol(g)/2, is higher than the spectral lower bound which
applies at smaller scales. more importantly, the lower bound at vol(g)/2, is higher than our upper
bounds at many smaller scales, so the true curve must go up, at least at the very end, as one moves from
small to large scales.

take, for example, the top left plot of figure 14 where in black we plot the conductance curves
obtained by our (local spectral and metis+mqi) algorithms. with a red dashed line we also plot the
lower bound of best possible cut in the network, and with red triangle we plot the lower bound for the
cut that separates the graph in two equal volume parts. thus, the true conductance curve (which is
intractable to compute) lies below black but above red line and red triangle. this also demonstrates that
the conductance curve which starts at upper left corner of the ncp plot    rst goes down and reaches the
minimum close to the horizontal dashed line (spectral lower bound) and then sharply rise and ends up
above the red triangle (sdp lower bound). this veri   es that our conductance curves and obtained ncp
plots are not the artifacts of community detection algorithms we employed.

finally, in table 4 we list for about 40 graphs the spectral and sdp lower bounds on overall con-
ductance and on volume-bisecting conductance, and also the ratio between the two. it is interesting to
see that for these graphs this ratio of lower bounds does a fairly good job of discriminating between
falling-ncp-plot graphs, which have a small ratio, and rising-ncp-plot graphs, which have a large ratio.
small networks (like collegefootball, zacharykarate and monksnetwork) have downward
ncp plot and a small ratio of the sdp and spectral lower bounds. on the other hand large networks
(e.g., epinions or answers-3) that have downward and then upward ncp plot (as in figure 2(a)) have
large ratio of the two lower bounds. this is further evidence that small networks have fundamentally
di   erent community structure from large networks and that one has to examine very large networks to
observe the gradual absence of communities of size above     100 nodes.

5.3 local spectral and metis+mqi

in this section we discuss our rationale for using local spectral in addition to metis+mqi as one of
our two main algorithms for    nding sets bounded by low conductance cuts. this choice requires some

38

leskovec, lang, dasgupta, and mahoney

network
collegefootball [5]
monksnetwork [5]
zacharykarate [5]
powergrid
politicalbooks [5]
politicalblogs [5]
rb-hierarchical [138]
email-inout
networkscience [5]
as-oregon
blog-nat05-6m
imdb-india
cit-hep-ph
bio-proteins
as-routeviews
gnutella-31
imdb-japan
gnutella-30
dolphinsnetwork [5]
as-newman
atp-gr-qc
cit-hep-th
atp-cond-mat

spectral
lowerbnd
on   ,

sdp
lowerbnd
on   , at
any size. vol(g)/2
0.091017
0.068402
0.069660
0.117117
0.127625
0.066136
0.000268
0.000136
0.038031
0.018902
0.084052
0.040720
0.030335
0.011930
0.038669
0.113367
0.004502
0.001513
0.042976
0.012543
0.108979
0.031604
0.033318
0.009104
0.007858
0.029243
0.126137
0.033714
0.070462
0.018681
0.118711
0.029946
0.013396
0.003327
0.030621
0.124929
0.103676
0.019762
0.058952
0.009681
0.006040
0.000846
0.068880
0.009193
0.001703
0.013452

ratio
of
lower
bnds
1.330624
1.681269
1.929736
1.978484
2.011991
2.064157
2.542792
2.931752
2.974695
3.426417
3.448250
3.659573
3.721553
3.741358
3.771821
3.964127
4.026721
4.079853
5.246171
6.089191
7.141270
7.492522
7.897650

spectral
lowerbnd
on   ,

sdp
lowerbnd
on   , at
any size. vol(g)/2
0.131032
0.014185
0.009660
0.107422
0.047064
0.003593
0.159251
0.011896
0.048010
0.003462
0.124703
0.008714
0.070345
0.003893
0.000934
0.017421
0.009714
0.000514
0.013770
0.000723
0.065158
0.003025
0.027256
0.001183
0.001561
0.041125
0.086890
0.003143
0.036572
0.001283
0.021017
0.000661
0.092908
0.002361
0.000679
0.031954
0.089876
0.001763
0.052249
0.000889
0.150242
0.002395
0.185340
0.002636
0.000562
0.046327

ratio
of
lower
bnds
9.237332
11.120081
13.098027
13.386528
13.867591
14.311255
18.067513
18.659710
18.899660
19.040287
21.538867
23.036835
26.350412
27.648094
28.514376
31.810460
39.350874
47.077242
50.965424
58.755927
62.739252
70.306807
82.397702

network

gnutella-25
answers-2
ca-cond-mat
answers-1
imdb-france
answers-5
imdb-mexico
ca-gr-qc
atp-hep-th
atp-hep-ph
imdb-wgermany
atp-astro-ph
ca-hep-th
ca-astro-ph
imdb-uk
imdb-germany
blog-nat06all
imdb-italy
email-enron
ca-hep-ph
epinions
answers-3
imdb-spain

table 4: lower bounds on the conductance for our network datasets. recall that the spectral lower bound applies
to any cut, while the sdp lower bound applies to cuts at a speci   ed volume fraction, taken here to be half. see
the top row of figure 14 for plots for three of these networks.

justi   cation because the ncp plots are intended to show the tightest possible upper bound on the
lowest conductance cut for each piece size, while the curve for local spectral is generally above that for
metis+mqi.

our reason for using local spectral in addition to metis+mqi is that local spectral returns pieces
that are internally    nicer   . for graphs with a rising ncp plot, we have found that many of the low
conductance sets returned by metis+mqi (or leighton-rao, or the bag-of-whiskers heuristic) are actu-
ally disconnected. since internally disconnected sets are not very satisfying    communities   , it is natural
to wonder about ncp plot-style curves with the additional requirement that pieces must be internally
well connected. in section 5.1, we generated such a curve using leighton-rao, and found that the curve
corresponding to connected pieces was higher than a curve allowing disconnected sets.

in the top row of figure 15, we show scatter plots illustrating a similar comparison between the
conductance of the cuts bounding connected pieces generated by local spectral and by metis+mqi. our
method for getting connected pieces from metis+mqi here is simply to separately measure each of the
pieces in a disconnected set. the blue points in the    gures show the conductance of some cuts found by
local spectral. the red points show the conductance of some cuts found by metis+mqi. apparently,
local spectral and metis+mqi    nd similar pieces at very small scales, but at slightly larger scales a gap
opens up between the red cloud and the blue cloud. in other words, at those scales metis+mqi is    nding
lower conductance cuts than local spectral, even when the pieces must be internally connected.

however, there is still a measurable sense in which the local spectral pieces are    nicer    and more
   compact,    as shown in the second row of scatter plots in figure 15. for each of the same pieces for which
we plotted a conductance in the top row, we are now plotting the average shortest path length between
random node pairs in that piece. in these plots, we see that in the same size range where metis+mqi is

community structure in large networks

39

conductance of connected clusters found by local spectral (blue) and metis+mqi (red)

cluster compactness: average shortest path length

cluster compactness: external vs. internal conductance

figure 15: result of comparing local spectral (blue) and metis+mqi (red) on connected clusters for three
networks: atp-dblp, email-enron, and ca-astro-ph.
in the top row, we plot the conductance of the
bounding cut. in the middle row, we plot the average shortest path length in the cluster. in the bottom row, we
plot the ratio of the external conductance to the internal conductance. observe that generally metis+mqi yields
better (lower conductance) cuts while local spectral yields pieces that are more compact: they have shorter path
lengths and internal connectivity.

generating clearly lower conductance connected sets, we now see that local spectral is generating pieces
with clearly shorter internal paths. in other words, the local spectral pieces are more    compact   .

last, in figure 16, we further illustrate this point with drawings of some example subgraphs. the
two subgraphs shown on the left of figure 16 were found by local spectral, while the two subgraphs
shown on the right of figure 16 were found by metis+mqi. clearly, these two pairs of subgraphs have
a qualitatively di   erent appearance, with the metis+mqi pieces looking longer and stringier than the
local spectral pieces. all of these subgraphs contain roughly 500 nodes, which is a bit more than
the natural cluster size for that graph, and thus the di   erences between the algorithms start to show
up. in these cases, local spectral has grown a cluster out a bit past its natural boundaries (thus the
spokes), while metis+mqi has strung together a couple of di   erent sparsely connected clusters. (we

40

leskovec, lang, dasgupta, and mahoney

figure 16: two examples of    communities    found by the localspectral algorithm (on the left) and two from the
metis+mqi algorithm (on the right). note that the local spectral    communities    are more compact   they are
tighter and have smaller diameter since the algorithm has di   culty pushing id203 mass down long extended
paths   while the metis+mqi    communities    are more sprawling   they have larger diameter and more diverse
internal structure, but better conductance scores. in both cases, we have shown communities with ca. 500 nodes
(many of which overlap at resolution of this    gure), i.e., just above the    whisker    size scale.

remark that the tendency of local spectral to trade o    cut quality in favor of piece compactness isn   t
just an empirical observation, it is a well understood consequence of the theoretical analysis of spectral
partitioning methods.)

finally, in the bottom row of figure 15 we brie   y introduce the topic of internal vs. external cuts,
which is something that none of our algorithms are explicitly trying to optimize. these are again scatter
plots showing the same set of local spectral and metis+mqi pieces as before, but now the y-axis is
external conductance divided by internal conductance. external conductance is the quantity that we
usually plot, namely the conductance of the cut which separates the piece from the graph.
internal
conductance is the score of a low conductance cut inside the piece (that is, in the induced subgraph
on the piece   s nodes). intuitively, good communities should have small ratios, ideally below 1.0, which
would mean that they are well separated from the rest of the network, but that they are internally
well-connected. however, the three bottom-row plots show that for these three sample graphs, there are
mostly no ratios well below 1.0 except at small sizes. (of course, any given graph could happen to contain
a very distinct piece of any size, and the roughly thousand-node piece in the email-enron network is
a good example.)

this demonstrates another aspect of our    ndings: small communities of size below     100 nodes are
internally compact and well separated from the remainder of the network, whereas larger pieces are
so hard to separate that separating them from the network is more expensive than separating them
internally.

6 models for network community structure

in this section, we use results from previous sections to devise a model that explains the shape of ncp
plots. in section 6.1, we examine the ncp plot for a wide range of existing commonly-used network
generation models, and we see that none of them reproduces the observed properties, at even a qualitative
level. then, in section 6.2, we analytically demonstrate that certain aspects of the ncp plot, e.g., the
existence of deep cuts at small size scales, can be explained by very sparse random graph models. then,
in section 6.3, we present a simple toy model to develop intuition about the e   ect we must reproduce with
a realistic generative model. finally, in section 6.4, we will combine these and other ideas to describe a
forest fire graph generation model that reproduces quite well our main observations.

community structure in large networks

41

6.1 community pro   le plots for commonly-used network generation models

we have studied a wide range of commonly-used network generative models in an e   ort to reproduce the
upward-sloping ncp plots and to understand the structural properties of the real-world networks that
are responsible for this phenomenon. in each case, we have experimented with a range of parameters,
and in no case have we been able to reproduce our empirical observations, at even a qualitative level. in
figure 17, we summarize these results.

there has been a large body of work subsequent to that of albert and barab  asi [9] on models in which
edges are added via a preferential-attachment or rich-gets-richer mechanism [127, 25]. much of this work
aims at reproducing properties of real-world graphs such as heavy-tailed degree distributions [11, 27, 62].
in these preferential attachment models, one typically connects each new node to the existing network
by adding exactly m edges to existing nodes with a id203 that depends on the current degree of
that existing node. figure 17(a) shows the ncp plot for a 10, 000 node network generated according
to the original preferential attachment model [9], where at each time step a node joins the graph and
connects to m = 2 existing nodes. note that the ncp plot is very shallow and    at (more even than the
corresponding rewired graph), and thus the network that is generated is expander-like at all size scales.
a di   erent type of generative model is one in which edges are added via a copying mechanism [102].
in this copying model, a new node joins the network by attaching exactly m edges to existing nodes as
follows: the new node    rst selects uniformly at random a    seed    or    ambassador    node u; then, for each
of its m edges, with id203    the new node links to an existing node chosen randomly, and with
id203 1        it links to a random neighbor of node u. in figure 17(b), we show the results for a
network with 50, 000 nodes, generated with m = 2 and    = 0.05. although intuitively the copying model
aims to produce communities by linking a new node to neighbors of a existing node, this does not seem
to be the right mechanism to reproduce the ncp plot since potential ambassador nodes are all treated
similarly and since new nodes always create the same number of edges.

next, in figure 17(c), we consider an example of a network that was designed to have a recursively
hierarchical community structure [139, 138]. in this model, we start with a 5-node square-like structure
with a central node, and then recursively expand the square and link it to the middle node of the
network. this network has power-law degree distribution, and id91 coe   cient that decays as in a
characteristic manner [138]. in this case, however, the ncp plot is sloping downwards. the local dips
in the plot correspond to multiples of the size of the basic module of the graph. although the model
generates links such that nodes that are farther apart in the hierarchy link less frequently, the ncp plot
clearly indicates that in aggregate larger communities are easily separated than smaller communities.

a di   erent way to generate power-law degree distributions is the community guided attachment
model [112]. here we decompose the nodes of a graph into a nested groups of nodes, such that the
di   culty of forming links between nodes in di   erent groups increases exponentially with the distance in
the community hierarchy. graphs generated by this principle have both power-law degree distributions
and they also obey the densi   cation power law [112, 113]. as figure 17(d) shows, though, the ncp
plot is sloping downward. qualitatively this plot from cga is very similar to the plot of the recursive
hierarchical construction in figure 17(c), which is not surprising given the similarities of the models.

figure 17(e) shows the ncp plot for a geometric preferential attachment model [71, 72]. this model
aims to achieve a heavy-tailed degree distribution as well edge locality, and it does so by making the
connection probabilities depend both on the two-dimensional geometry and on the preferential attachment
scheme. as we see, the e   ect of the underlying geometry eventually dominates the ncp plot since the
best bi-partitions are fairly well-balanced [71]. intuitively, geometric preferential attachment graphs look
locally expander-like, but at larger size scales the the union of such small expander graphs behaves like
a geometric mesh. we also experimented with the small-world model by watts and strogatz [156], in
which the ncp plot in some sense behaves exactly the opposite (plot not shown):    rst the ncp plot
decreases, and then it    attens out. intuitively, a small-world network looks locally like a mesh, but when
one reaches larger size scales, the randomly rewired edges start to appear and the graph looks like an

42

leskovec, lang, dasgupta, and mahoney

100

10-1

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-2

100

original network
rewired network

101

103
k (number of nodes in the cluster)

102

(a) preferential attachment

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

101

original network
rewired network
102

103

104

105

k (number of nodes in the cluster)
(c) barabasi hierarchical

100

10-1

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-2

100

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

original network
rewired network

101

104
k (number of nodes in the cluster)

102

103

(b) copying model

original network
rewired network

100

101

102

103

104

k (number of nodes in the cluster)
(d) community guided attachment

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-2

100

original network
rewired network

101

102

103

104

k (number of nodes in the cluster)

(e) geometric pa [71]

10-3

100

original network
rewired network

101

102

103

k (number of nodes in the cluster)
(f) nested communities

figure 17:
[best viewed in color.] network community pro   le for networks generated from commonly-used
procedures to generate graphs with heavy-tailed degree distributions: (17(a)) preferential attachment; (17(b))
copying model; (17(c)) hierarchical model; (17(d)) community guided attachment; (17(e)) geometric preferential
attachment; and (17(f)) nested community model. see the text for details. red curves plot the results of the local
spectral algorithm on the speci   ed network, and black curves plot the results of the local spectral algorithm
applied to a randomly rewired version of the same network.

community structure in large networks

43

expander.

finally, we explored in more detail networks with explicitly planted community structure. for ex-
ample, we started with 10 isolated communities generated using the gn,p model, and then we generated
a random binary tree. for each internal node at height h we link the nodes in both sides of the tree
with id203 ph, for a id203 parameter p. this and other related networks gives a graph of
nested communities resembling the hierarchical id91 algorithm of newman and girvan [132]. we
see, however, from figure 17(f) that the ncp plot slopes steadily downward, and furthermore we observe
that dips correspond to the cuts that separate the communities.

these experiments demonstrate that hierarchically nested networks and networks with underlying
geometric or expander like structure exhibit very di   erent ncp plots than observed in real networks. so
the question still remains: what causes ncp plot to decrease and then start to increase?

6.2 very sparse random graphs have very unbalanced deep cuts

in this section, we will analyze a very simple random graph model which reproduces relatively deep cuts
at small size scales and which has a ncp plot that then    attens out. understanding why this happens
will be instructive as a baseline for understanding the community properties we have observed in our
real-world networks.

here we work with the random graph model with given expected degrees, as described by chung
and lu [42, 40, 44, 39, 41, 45, 46, 43]. let n, the number of nodes in the graph, and a vector w =
(w1, . . . , wn), which will be the expected degree sequence vector (where we will assume that maxi w2
i <
pk wk), be given. then, in this random graph model, an edge eij between nodes i and j is added,
independently, with id203 pij = wiwj/pk wk. thus, p (eij = 1) = pij and p (eij = 0) = 1     pij .

we use g(w) to denote a random graph generated in this manner. (note that this model is di   erent
than the so-called    con   guration model    in which the degree distribution is exactly speci   ed and which
was studied by molloy and reed [124, 125] and also aiello, chung, and lu [7, 8]. this model is also
di   erent than generative models such as preferential attachment models [9, 127, 25] or models based on
optimization [57, 58, 61], although common to all of these generative models is that they attempt to
reproduce empirically-observed power-law behavior [11, 62, 27, 129, 50].)

i=1 w2

in this random graph model, the expected average degree is wav = 1

i=1 wi and the expected
second-order average degree is   w = pn
i /pk wk. let wg = pi wi denote the expected total degree.
given a subset s of nodes, we de   ne the volume of s to be ws = pv   s wv and we say that s is c-giant
if its volume is at least cwg, for some constant c > 0. we will denote the actual degrees of the graph g
by {d1, d2, . . . , dn}, and will de   ne d(s) to be the sum of the actual degrees of the vertices in s. clearly,
by linearity of expectation, for any subset s, e(d(s)) = ws.
the special case of the g(w) model in which w has a power law distribution is of interest to us
here. (the other interesting special case, in which all the expected degrees wi are equal to np, for some
p     [0, 1], corresponds to the classical erd  os-renyi gnp random graph model [24].) given the number of
nodes n, the power-law exponent   , and the parameters w and wmax, chung and lu [42] give the degree
sequence for a power-law graph:

n pn

wi = ci   1/(     1) for i s.t. i0     i < n + i0,

(10)

where, for the sake of consistency with their notation, we index the nodes from i0 to n + i0    1, and where
c = c(  , w, n) and i0 = i0(  , w, n, wmax) are as follows:

where we have de   ned    =      2
degree; the average expected degree is given by wav = 1

c =   wn1/(     1) and i0 = n(cid:18)  
     1 . it is easy to verify that: wmax = maxi wi is the maximum expected
i=1 wi = w(1 + o(1)); the minimum expected

wmax(cid:19)     1

(11)

w

,

n pn

44

leskovec, lang, dasgupta, and mahoney

(a) ncp plot suggested by our main theorem

(b) structure of g(w) model

figure 18: the g(w) model in the sparse        (2, 3) parameter regime. (a) network community pro   le plot, as
suggested by our main theorem. (b) caricature of network structure.

degree is given by wmin = mini wi = w  (1     o(1)); and the number of vertices that have expected degree
in the range (k     1, k] is proportional to k     .
the following theorem characterizes the shape of the ncp plot for this g(w) model when the degree
distribution follows equation (10), with        (2, 3). the theorem makes two complementary claims. first,
there exists at least one (small but moderately deep) cut in the graph of size   (log n) and conductance
  ( 1
log n ). second, for some constants c    and   , there are no cuts in the graph of size greater than c    log n
having conductance less than   . that is, this model has clusters of of logarithmic size with logarithmically
deep cuts, and once we get beyond this size scale there do not exist any such deep cuts.

theorem 1 consider the random power-law graph model g(w), where w is given by equation (10),
where w > 5.88, and the power-law exponent    satis   es 2 <    < 3. then, then with id203 1     o(1):
1. there exists a cut of size   (log n) whose conductance is   (cid:16) 1

log n(cid:17).

2. there exists c   ,    > 0 such that there are no sets of size larger than c    log n having conductance

smaller than   .

proof: combine the results of lemma 1 and lemma 3.

the two claims of theorem 1 are illustrated in figure 18(a). note that when w     4

e and        (2, 3)
then a typical graph in this model is not fully connected but does have a giant component [42]. (the
well-studied gn,p random graph model [24] has a similar regime when p     (1/n, log n/n), as will be
discussed in section 7.4.)
in addition, under certain conditions on the average degree and second order average degree, the
average distance between nodes is in o (log log n) and yet the diameter of the graph is    (log n). thus, in
this case, the graph has an    octopus    structure, with a subgraph containing nc/(log log n) nodes constituting
a deep core of the graph. the diameter of this core is o(log log n) and almost all vertices are at a distance
of o(log log n) from this core. however, the pairwise average distance of nodes in the entire graph is
o(log n/ log   w). a schematic picture of the g(w) model when        (2, 3) is presented in figure 18(b).
our    rst lemma claims that for the g(w) model, if the degree distribution w follows the above power-
law, then there exists a moderately large cut with small conductance. in order to prove the existence of
a cut of size   (log n) and conductance   ( 1
log n ), it is su   cient to concentrate on the existence of whiskers
that are large enough. in particular, to prove the following lemma, we compute the id203 that there
exists a cut of both volume and size   (log n) and cut-size 1. (note that although we formally state the
lemma in terms of the power-law random graph model, the proof will show that the main claim holds for
a more general representation of the heavy-tailed degree distribution.)

community structure in large networks

45

lemma 1 for the g(w) model, where w follows a power-law degree distribution with 2 <    < 3 then,
with id203 1     o(1) there exists a set of size   (log n) with conductance   ( 1
proof: let s be a subset with the following description. s = {v0, v1, . . . , vk}, where k = c1 log n. let
wi denote the degree of vi. we have that w0     [c2 log n, 2c2 log n] and wi     w for all i > 0. thus the
expected volume of s is ws     [(2  wc2 + c1) log n, (2  wc2 + c1) log n], and the size of s is c1 log n + 1.
note that the expected volume of the graph can be computed as wg = wn, and hence    = 1
wg
now, let n1 denote the number of vertices of expected degree at most 2  w. by simple calculation,
n1     n/2. the number of possible choices for the vertex v0 can be computed as follows. let b be the
set of vertices having degree greater than 2  wc2 log n and a be the set of vertices with degree at most
2  wc2 log n. then the number of nodes with degree in [c2 log n, 2c2 log n] is given by the size of v \(a   b)
which is

log n ).

= 1

wn .

  w(cid:18) n

c2 log n(cid:19)     1

      w(cid:18)

n

2c2 log n(cid:19)     1

      w(cid:18) n

c2 log n(cid:19)     1

,

since    > 2. thus the number of possible such subsets s is given by the number of choices for v0 times
the number of possible choices for the nodes v     1, . . . , vk. thus, the number n of possible such subsets
s is at least

n = (cid:18) n1

c1 log n(cid:19)      (cid:18)

n

2c2 log n(cid:19)     1

.

we say that s is good if, after instantiating all the edges, s has a star of size c1 log n centered at v0, and
v0 is connected to   s by exactly one edge, and none of the other vertices in s have any edge to   s. the
id203 that a particular set s is good is the product of the following terms: the id203 p1 that
there is star of size c1 log n with v0 at the center, the id203 p2 that none of the nodes v1, . . . , vk link
to any nodes in   s, and the id203 p3 that v0 connects to   s using exactly one edge. we now calculate
the three probabilities as follows. first,

p1 = yi   [1...k]

w0wi       (w0  w  )c1 log n,

since each wi     wmin       w. next,
p2 = yi=1,...k yj /   s

(1     wj  )     yi=1,...k yj /   s

e   wi  /2 = e   (c1  2  ww   s log n)/2,

obtained by using 1     x     e   x/2 for 0 < x < 1, and wi     2  w for i     s, i > 1. finally, we get p3 as
follows. first note

(1     wkw0  )

w0wj    yk6=j,k      s
w0wj   e   (w   s    wj )w0  /2

p3 = xj      s
    xj      s
= w0  e   w   sw0  /2(xj      s
then, since wj w0       1 and since ex     1 + x, we have that

wj ewjw0  /2).

p3     w0  e   w   s w0  /2(xj      s

wj(1 +

wj w0  

2

))

    w0  e   w   s w0  /2(w   s + w0     w   s/2),

46

leskovec, lang, dasgupta, and mahoney

where   w   s = pj      s w2
p = p1    p2    p3

j . so the    nal id203 of goodness of s is

   
=

(w0  w  )c1 log n    e   (c1  2  ww   s log n)/2    w0  e   w   sw0  /2(w   s + w0     w   s/2)
(w0  w  )c1 log n    e   (c1  2  w log n)    w0  e     w0(w   s + w0     w   s/2),

using    =   w   s/2. so the expected number of such good subsets s is

n p     (cid:18) n1
    (cid:18) n1

c1 log n(cid:19)      w(cid:18)
c1 log n(cid:19)c1 log n

n

   (w0  w  )c1 log n    e   (c1  2  w log n)    w0  e     w0(w   s + w0     w   s/2)

2c2 log n(cid:19)     1
(2c2 log n)     1    (w0  w  )c1 log n    e   (c1  2  w log n)    w0  e     w0    nw/2,
  

  wn     1

using stirling   s formula and the fact that w   s     nw/2. using the value of n1 and since nw   = 1,

n p     (cid:18)

n

2c1 log n(cid:19)c1 log n
2c1 log n(cid:19)c1 log n

    (cid:18) w0  

  wn     1

(2c2 log n)     1    (w0  w  )c1 log n    e   (c1  2  w log n)    e     w0    w0/2

  wn     1

(2c2 log n)     1    (w0  w  )c1 log n    e   (c1  2  w log n)    e     w0    w0/2.

  

  

using w0     c2 log n, we have that have that

n p     (cid:18) c2  

2c1 (cid:19)c1 log n

  wn     1

2(2c2 log n)     2    e   (c1  2  w log n)    e     w0
  
  w

    e   log n   

2(2c2 log n)     2 ,

where    = c1 log( c2  
2c1
   = 1

) + (       1)        wc1     2  c2. note that for 2 <    < 3, we have that 0 <    < 1

2 . also,

2     o(1). thus, choosing c2 = 2ec1/   and c1 =

     2

2    w+4  e/     1 , we get    = 1. so,

n p     elog n   

  w

2(2c2 log n)     2 =    (log n)

then, the id203 is a particular set s is good is p        (cid:16) (log n)

n (cid:17). hence the id203 of getting

a good set is

1     (1     p)n     1    (cid:18)1        (cid:18) (log n)     2

n

n

(cid:19)(cid:19)

    1     o(1)

we next state the well-known cherno    bound [42], which we will use below.

i ). then,

lemma 2 let x = pi xi where the xi are independent random variables with xi        m . de   ne
kxk2 = pi e(x 2

pr(x     e(x)       )     exp(cid:18)   

2(kxk2 + m   /3)(cid:19) .
de   ne a connected set s to be   -de   cit set if it has actual volume d(s)     1
of the cut (s,   s) is at most   , i.e., if the number of edges leaving s is at most   d(s).

finally, we show that there are no deep cuts with size greater than   (log n). to state this lemma,
2 d(g) and if the conductance

(12)

  2

community structure in large networks

47

lemma 3 for the g(w) model, where w follows a power-law degree distribution with 2 <    < 3, if the
average degree w satis   es w     5.88, then with id203 1     o(1) there exists constants c   ,    such that
there is no   -de   cit set of size more than c    log n.
proof: let e(s,   s) denote the actual number of edges between s and   s. first we compute the id203
that a given set s is   -de   cit, that is, s satis   es e(s,   s) <   d(s). let    = 2  
1      . for our case, de   ne
the variables x(i,j) = eij for (i, j)     (s,   s) and x(i,j) =      eij for (i, j)     (s, s). then the sum
x = p x(i,j) = p(i,j)   (s,   s) eij       p(i,j)   (s,   s) eij. note that e(s,   s) <   d(s)        x     0. using the
fact that e(eij) = wiwj   , we have kxk2 = p e(x 2
s  . furthermore, exploiting the
fact that each xi          , we get that

ij) = wsw   s   +   2w2

pr(x     0)

=

   

=

e(x)2

pr(x     e(x)     e(x))
exp(cid:18)   
exp(cid:18)   

2(kxk2 +   e(x)/3)(cid:19)
2(ws  (w   s +   2ws) +   ws  (w   s       ws)/3)(cid:19) .

s(w   s       ws)2

  2w2

canceling   ws from both numerator and denominator,

pr(x     0)

   

   

   

exp(cid:18)   
exp(cid:18)   
exp(cid:18)   

  ws(w   s       ws)2

2(w   s +   2ws +   w   s/3       2ws/3)(cid:19)
  ws(w   s       ws)2
2(1 +   /3 + 2  2/3)w   s(cid:19)     exp(cid:18)   
2(1 +   /3 + 2  2/3)(cid:19)     exp (     wsw   sa  /2) ,
  wsw   s(1     2  )

2(1 +   /3 + 2  2/3) (cid:19)
  wsw   s(1     2  ws/w   s)

1   2  

(1+2  /3+2  2/3) . so this bounds the id203 that a particular set s of size k is   -de   cit. we
where a   =
will bound the expected number of such   -de   cit subsets of size k. first, let nk,  ,   denote the expected
number of   -de   cit sets of size k that have expected volume ws       wg. by linearity of expectation,

nk,  ,  

    xs:|s|=k

ws      wg

    xs:|s|=k

ws      wg

wi1 . . . wik wk   2

s

  k   1 exp (     wsw   sa  /2)

s

w2k   2
kk   k   1 exp((   ws(1       )a  )),

where we used the fact that    =   w   s/2 and also the am-gm inequality to say that qi   s wi    
(cid:16) pi   s wi
a  (1     ) . thus, the above sum is
maximized when ws = 2k   2

. now, f (x) = x2k   2e   xa  (1     ) is maximized at x = 2k   2

(cid:17)k

k

a  (1     ) . hence,

nk,  ,  

   

   

nk
k!

  k   1
kk

(n  )k

     k(k/e)k

2(2k   2)    (k     1)(2k   2)
(a  (1       ))(2k   2)
1
kk

2(2k   2)    (k     1)(2k   2)
(a  (1       ))(2k   2)

exp(   2k + 2)

exp(   2k + 2).

using (1     1

k )2k     e   2, it follows that

nk,  ,  

   

1

4e   k(k     1)2 (cid:18)

4

  (1       )2(cid:19)k

ewa2

.

48

leskovec, lang, dasgupta, and mahoney

we would like pcn

k=c log n nk,  ,   to be o(1), for which we need

4

ewa2

  (1       )2 < 1,

which gives a bound on average degree:

w    

4

a2
  (1       )2e

.

for sets of volume ws       wg, we have the following. from the double-sided cherno    bound, for any
   xed set s,

|ws     d(s)|        with id203 1     2 exp(cid:18)   

  2

2(ws +   /3)(cid:19) .

so if    =    ws log n, we have the above statement with id203 1     2 exp(   3 log2 n/8). similarly,

|e(s,   s)     e(e(s,   s))|        with id203 1     2 exp(cid:18)   

  2

2(  wsw   s +   /3)(cid:19) .

by having    =      wsw   s log n the above id203 becomes 1     2 exp(   3 log2 n/8). now, if both these

events occur, then the conductance of the set s is at least 1/3. so the only way we can get an   -de   cit
set is at by having one of these conditions to be invalid. the total number of sets of expected volume

  wg is bounded by (cid:0) wg

by

  wg(cid:1). so, the expected number of   -de   cit sets of volume at least   wg is bounded

x          1/2

(cid:18) wg
  wg(cid:19)4 exp(   3 log2 n/8)     z          1/2

1

     wg (cid:18) 1

  (cid:19)  wg

4 exp(   3 log2 n/8)     o(1).

thus, putting the two bounds together, the expected number of   -de   cit sets of size greater that c log n
is at most o(1). thus with id203 1     o(1) there does not exist an   -de   cit set of size greater than
c log n.

6.3 an intuitive toy model for generating an upward-sloping ncp plot

we have seen that commonly-studied models, including preferential attachment models, copying models,
simple id187, and models in which there is an underlying mesh-like or manifold-like geometry
are not the right way to think out the community structure of large social and information networks. we
have also seen that the extreme sparsity of the networks, coupled with randomness, can be responsible
for the deep cuts at small scales.

to build intuition as to what the gradually increasing ncp plot might mean, consider figure 19. this
is a toy example of a network construction in which the ncp plot has a deep dip at a small size scale and
then steadily increases. the network shown in figure 19(a) is an in   nite tree that has two parts. the top
part, a subtree (with one node in this example, but more generally consisting of nt nodes) is indicative
of the whiskers, or the    small scale    structure of the graph. the remaining tree has the property that
the number of children increases monotonically with the level of the node. this property is indicative of
the fact that as the size of a cluster grows, the number of neighbors that it has also increases. the key
insight in this construction is that the best conductance cuts    rst cut at the top of the growing tree and
then gradually work their way    down    the tree, starting with the small subtrees and moving gradually
down the levels, as depicted in figure 19(a).

community structure in large networks

49

100

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

b

a

(a) a toy network model . . .

100

101

102

103

104

k (number of nodes in the cluster)
(b) . . . and its community pro   le plot.

figure 19: schematic picture of the properties of a network responsible for the upward-sloping community pro   le
plot. (a) this toy model is designed so that the optimal conductance cuts are achieved by cutting nodes from the
top of the tree. (b) the minimum of the ncp plot is achieved by cutting the single top node, and then larger
and larger cuts have gradually worse and worse conductance values.

thus, intuitively, one can think of small well-separated communities   those below the nt size scale
that consist of subsets of the small trees   starting to grow, and as they pass the nt size scale and
become bigger and bigger, they blend in more and more with the central part of the network, which
(since it exhibits certain expander-like properties) does not have particularly well-de   ned communities.
note (more generally) that if there are nt nodes in the small tree at the top of the graph, then the dip
in the ncp plot in figure 19(b) is of depth 2/(nt + 1). in particular, if nt =   (log n) then the depth
of this cut is   (1/ log n).

intuitively, the ncp plot increases since the    cost    per edge for every additional edge inside a cluster
increases with the size of the cluster. for example, in cut a in figure 19(a), the    price    for having 3
internal edges is to cut 6 edges, i.e., 2 edges cut per edge inside. to expand the cluster by just a single
edge, one has to move one level down in the tree (toward the cut b) where now the price for a single
edge is 4 edges, and so on.

6.4 a more realistic model of network community structure

the question arises now as to whether we can    nd a simple generative model that can explain both the
existence of small well-separated whisker-like clusters and also an expander-like core whose best clusters
get gradually worse as the purported communities increase in size. intuitively, a satisfactory network
generation model must successfully take into account the following two mechanisms:

(a) the model should produce a relatively large number of relatively small   but still large when com-
pared to random graphs   well connected and distinct whisker-like communities. (this should re-
produce the downward part of the community pro   le plot and the minimum at small size scales.)

(b) the model should produce a large expander-like core, which may be thought of as consisting of
intermingled communities, perhaps growing out from the whisker-like communities, the boundaries
of which get less and less well-de   ned as the communities get larger and larger and as they gradually
blend in with rest of the network. (this should reproduce the gradual upward sloping part of the
community pro   le plot.)

50

leskovec, lang, dasgupta, and mahoney

figure 20: the forest fire burning process. left: a new node v joins the network and selects a seed node w.
middle: v then attaches itself by recursively linking to w   s neighbors, w   s neighbor-neighbors, and so on, according
to the    forest    re    burning mechanism described in the text. right: a new node v    joins the network, selects seed
w   , and recursively adds links using the same    forest    re    burning mechanism. notice that if v    causes a large
      re,    it links to a large number of existing nodes. in this way, as potential communities around node w grow,
the ncp plot is initially decreasing, but then larger communities around w gradually blend-in with the rest of
the network, which leads the ncp plot to increase.

the so-called forest fire model [112, 113] captures exactly these two competing phenomena. the
forest fire model is a model of graph generation (that generates directed graphs   an e   ect we will
ignore) in which new edges are added via a recursive    burning    mechanism in an epidemic-like fashion.
since the details of the recursive burning process are critical for the model   s success, we explain it in
some detail.

to describe the forest fire model of [112, 113], let us    x two parameters, a forward burning id203
pf and a backward burning id203 pr. we start the entire process with a single node, and at each
time step t > 1, we consider a new node v that joins the graph gt constructed thus far. the node v
forms out-links to nodes in gt as follows:

(i) node v    rst choose a node w, which we will refer to as a    seed    node or an    ambassador    node,

uniformly at random and forms a link to w.

(ii) node v selects x out-links and y in-links of w that have not yet been visited. (x and y are two geo-
metrically distributed random numbers with means pf /(1    pf ) and pr/(1    pr), respectively. if not
enough in-links or out-links are available, then v selects as many as possible.) let w1, w2, . . . , wx+y
denote the nodes at the other ends of these selected links.

(iii) node v forms out-links to w1, w2, . . . , wx+y, and then applied step (ii) recursively to each of the

w1, w2, . . . , wx+y, except that nodes cannot be visited a second time during the process.

thus, burning of links in the forest fire model begins at node w, spreads to w1, w2, . . . , wx+y, and
proceeds recursively until the process dies out. one can view such a process intuitively as corresponding
to a model in which a person comes to the party and    rst meets an ambassador who then introduces
him or her around.
if the person creates a small number of friendships these will likely be from the
ambassadors    community,    but if the person happens to create many friendships then these will likely go
outside the ambassador   s circle of friends. this way, the ambassador   s community might gradually get
intermingled with the rest of the network.

two properties of this model are particularly signi   cant. first, although many nodes might form one
or a small number of links, certain nodes can produce large con   agrations, burning many edges and thus
forming a large number of out-links before the process ends. such nodes will help generate a skewed
out-degree distribution, and they will also serve as    bridges    that connect formerly disparate parts of the
network. this will help make the ncp plot gradually increase. second, there is a locality structure in

community structure in large networks

51

that as each new node v arrives over time, it is assigned a    center of gravity    in some part of the network,
i.e., at the ambassador node w, and the manner in which new links are added depends sensitively on the
local graph structure around node w. not only does the id203 of linking to other nodes decrease
rapidly with distance to the current ambassador, but because of the recursive process regions with a
higher density of links tend to attract new links.

figure 20 illustrates this. initially, there is a small community around node w. then, node v joins
and using the forest fire mechanism locally attaches to nodes in the neighborhood of seed node w. the
growth of the community around w corresponds to downward part of the ncp plot. however, if a node v   
then joins and causes a large    re, this has the e   ect of larger and larger communities around w blending
into and merging with the rest of the network.

not surprisingly, however, the forest fire model is sensitive to the choice of the burning probabilities
pf and pb. we have experimented with a wide range of network sizes and values for these parameters, and
in figure 21, we show the community pro   le plots of several 10, 000 node forest fire networks generated
with pb = 0.3 and several di   erent values of pf . the    rst thing to note is that since we are varying pf the
six plots in figure 21, we are viewing networks with very di   erent densities. next, notice that if, e.g.,
pf = 0.33 or pf = 0.35 then we observe a very natural behavior: the conductance nicely decreases, reaches
the minimum somewhere between 10 and 100 nodes, and then slowly but not too smoothly increases.
not surprisingly, it is in this parameter region where the forest fire model has been shown to exhibit
realistic time evolving graph properties such as densi   cation and shrinking diameters [112, 113].

next, also notice that if pf is too low or too high, then we obtain qualitatively di   erent results. for
example, if pf = 0.26, then the community pro   le plot gradually decreases for nearly the entire plot. for
this choice of parameters, the forest fire does not spread well since the forward burning id203 is
too small, the network is extremely sparse and is tree-like with just a few extra edges, and so we get
large well separated    communities    that get better as they get larger. on the other hand, when burning
id203 is too high, e.g., pf = 0.40, then the ncp plot has a minimum and then rises extremely
rapidly. for this choice of parameters, if a node which initially attached to a whisker successfully burns
into the core, then it quickly establishes many successful connections to other nodes in the core. thus, the
network has relatively large whiskers that failed to establish such a connection and a very expander-like
core, with no intermediate region, and the increase in the community pro   le plot is quite abrupt.

we have examined numerous other properties of the graphs generated by the forest fire model and
have found them to be broadly consistent with the social and information networks we have examined.
one property, however, that is of particular interest is what the whiskers look like. figure 22 shows an
example of several whiskers generated by the forest fire model if we choose pb = 0.30 and pf = 0.37.
they are larger and more well-structured than the tree-like whiskers from the random graph model of
section 6.2. also notice that they all look plausibly community-like with a core of the nodes densely
linked among themselves and the bridge edge then connects the whisker to the rest of the network.

we conclude by noting that there has also been interest in developing hierarchical graph generation
models, i.e., models in which a hierarchy is given and the linkage id203 between pairs of nodes
decreases as a function of their distance in the hierarchy [139, 138, 31, 6, 110, 48, 159, 111]. the motivation
for this comes largely from the intuition that nodes in social networks and are joined in to small relatively
tight groups that are then further join into larger groups, and so on. as figures 17(c) and 17(d) make
clear, however, such models do not immediately lead to community structure similar to what we have
observed and which has been reproduced by the forest fire model. on the other hand, although there
are signi   cant di   erences between id187 and the forest fire model, [112, 113] notes that
there are similarities. in particular, in the forest fire model a new node v is assigned an ambassador
w as an entry point to the network. this is analogous to a child having a parent in the hierarchy which
helps to determine how that node links to the remainder of the network. similarly, many hierarchical
models have a connection id203 that decreases exponentially in the hierarchical tree distance. in
the forest fire model, the id203 that a node v will burn along a particular path to another node u   

52

leskovec, lang, dasgupta, and mahoney

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

k (number of nodes in the cluster)

10-3

100

101

102

103

104

k (number of nodes in the cluster)

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

k (number of nodes in the cluster)

10-3

100

101

102

103

104

k (number of nodes in the cluster)

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

100

10-1

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

k (number of nodes in the cluster)

10-2

100

101

102

103

104

k (number of nodes in the cluster)

figure 21:
[best viewed in color.] community pro   le plots for the forest fire model at various parameter
settings. the backward burning id203 is pb = 0.3, and we increase (left to right, top to bottom) the forward
burning id203 pf = {0.26, 0.31, 0.33, 0.35, 0.37, 0.40}. note that the largest and smallest values for pf lead
to less realistic community pro   le plots, as discussed in the text.

community structure in large networks

53

figure 22: examples of whiskers from a simulation of the forest fire model with parameter settings pf = 0.37
and pb = 0.3. the green square node belongs to the network core, and by cutting the edge connecting it with red
circular node we separate the community of circles from the rest of the network (depicted as a green square).

is exponentially small in the path length, although the analogy is not perfect since there may exist many
possible paths.

7 discussion

in this section, we discuss several aspects of our main results in a broader context.
in particular, in
section 7.1, we compare to several data sets in which there is some notion of    ground truth    community
and we also describe several broader non-technical implications of our results. then, in section 7.3, we
describe recent work on community detection and identi   cation. finally, in section 7.4, we discuss several
technical and algorithmic issues and questions raised by our work.

7.1 comparison with    ground truth    and sociological communities

in this subsection, we examine the relationship between network communities of the sort we have been
discussing so far and some notion of    ground truth.    when considering a real network, one hopes that
the output of a community    nding algorithms will be    real    communities that exist in some meaningful
sense in the real world. for example, in the karate club network in figure 5(a), the cut found by the
algorithm corresponds in some sense to a true community, in that it splits the nodes almost precisely
as they split into two newly formed karate clubs. in this section, we take a di   erent approach: we take
networks in which there are explicitly de   ned communities, and we examine how well these communities
are separated from the rest of the network. in particular, we examine a minimum conductance pro   le of
several network datasets, where we can associate with each node one or more community labels which are
exogenously speci   ed. note that we are overloading the term    community    here, as in this context the
term might mean one of two things:    rst, it can refer to groups of nodes with good conductance properties;
and second, it can refer to groups of nodes that belong to the same self-de   ned or exogenously-speci   ed
group.

we consider the following    ve datasets:

    livejournal12 [20]: livejournal is an on-line blogging site where users can create friendship links
to other users. in addition, users can create groups which other users can then join. in livejournal,
there are 385, 959 such groups, and a node belongs to 3.5 groups on the average. thus, in addition
to the information in the interaction graph, we have labels specifying those groups with which a user
is associated, and thus we may view each such group as determining a    ground truth    community.

    ca-dblp [20]: we considered a co-authorship network in which nodes are authors and there is
an edge if authors co-authored at least one paper. here, publication venues (e.g., journals and

54

leskovec, lang, dasgupta, and mahoney

conferences) can play the role of    ground truth    communities. that is, an author is a member of a
particular group or community if he or she published at a particular conference or in a particular
journal. in our dblp network, there are 2, 547 such groups, with a node belonging to 2.6 on the
average.

    amazonallprod [49]: this is a network of products that are commonly purchased together at
amazon.com. (intuitively one might expect that, e.g., gardening books are frequently purchased
together, so the network structure might re   ect a well-connected cluster of gardening books.) here,
each item belongs to one or more hierarchically organized categories (book, movie genres, product
types, etc.), and products from the same category de   ne a group which we will view as a    ground
truth    community.
items can belong to 49, 732 di   erent groups, and each item belongs to 14.3
groups on the average.

    atm-imdb: this network is a bipartite actors-to-movies network composed from imdb data, and
an actor a is connected to movie b if a appeared in b. for each movie we also know the language
and the country where it was produced. countries and languages may be taken as    ground truth   
communities or groups, where every movie belongs to exactly one group and actors belongs to all
groups to which movies that they appeared in belong. in our dataset, we have 393 language groups
and 181 country groups.

    email-inside and email-inout [113]: this is an email communication network from a large
european research organization conducting research in natural sciences: physics, chemistry, biology
and computer science. each of 986 members of the organization belongs to exactly one of 45
departments, and we use the department memberships to de   ne    ground truth    communities.

although none of these notions of    ground truth    is perfect, many community    nding algorithms
use precisely this form of anecdotal evaluation: a network is taken, network communities are found, and
then the correspondence of network communities to    ground truth    communities is evaluated. note, in
contrast, we are evaluating how    ground truth    communities behave at di   erent size scales with respect
to our methodology, rather than examining how the groups we    nd relate to    ground truth    communities.
furthermore, note that the notions of    ground truth    are not all the same   we might expect that people
publish papers across several di   erent venues in a very di   erent way than actors appear in movies from
di   erent countries. more detailed statistics for each of these networks may be found in tables 1, 2 and 3.
to examine the quality of    ground truth    communities in the these network datasets, we take all
groups and measure the conductance of the cut that separates that group from the rest of the network.
thus, we generated ncp plots in the following way. for every    ground truth    community, we measure
the conductance of the cut separating it from the rest of the graph, from which we obtain a scatter plot of
community size versus conductance. then, we take the lower-envelope of this plot, i.e., for every integer
k we    nd the conductance value of the community of size k that has the lowest conductance. figure 23
shows the results for these network datasets; the    gure also shows the ncp plot obtained from using
the local spectral algorithm on both the original network (plotted in red) and on the rewired network
(plotted in black).

several observations can be made:

    the conductance of    ground truth    communities follows that for the network communities up to
until size 10-100 nodes, i.e., larger communities get successively more community-like. as    ground
truth    communities get larger, their conductance values tend to get worse and worse, in agreement
with network communities discovered with graph partitioning approximation algorithms. thus,
the qualitative trend we observed in nearly every large sparse real-world network (of the best
communities blending in with the rest of the network as they grow in size) is seen to hold for small
   ground truth    communities.

community structure in large networks

55

100

10-1

10-2

10-3

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-4

100

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

101

102

103

104

105

k (number of nodes in the cluster)

(a) livejournal12

102

101

105
k (number of nodes in the cluster)

103

104

(c) amazonallprod

100

10-1

10-2

)
e
c
n
a
t
c
u
d
n
o
c
(
 

  

10-3

100

100

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

101

102

103

104

105

k (number of nodes in the cluster)

(b) ca-dblp

10-1

100

102
k (number of nodes in the cluster)

101

(d) email-inside

100

10-1

10-2

)
e
c
n
a

t
c
u
d
n
o
c
(
 

  

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

10-3

100

101

102

103

104

105

106

k (number of nodes in the cluster)

(e) atm-imdb country

(f) atm-imdb language

figure 23:
[best viewed in color.] network community pro   le plots for explicitly    ground truth    communities
(green), compared with that for the original network (red) and a rewired version of the network (black): (a)
livejournal12; (b) ca-dblp; (c) amazonallprod; (d) email-inside; and (e-f) atm-imdb.

56

leskovec, lang, dasgupta, and mahoney

    one might expect that the ncp plot for the    ground truth    communities (the green curves) will
be somewhere between the ncp plot of the original network (red curves) and that for the rewired
network (black curves), and this is seen to be the case in general. the ncp plot for network
communities goes much deeper and rises more gradually than for    ground truth    communities.
this is also consistent with our general observation that only small communities tend to be dense
and well separated, and to separate large groups one has to cut disproportionately many edges.

    for the two social networks we studied (livejournal12 and ca-dblp), larger    ground truth   
communities have conductance scores that get quite    random   , i.e., they are as well separated
as they would be in a randomly rewired network (green and black curves overlap). this is likely
associated with the relatively weak and overlapping notion of    ground truth    we associated with
those two network datasets. on the other hand, for amazonallprod and atm-imdb networks,
the general trend still remains but large    ground truth    communities have conductance scores that
lie well below the rewired network curve.

our email network illustrates a somewhat di   erent point. the ncp plot for email-inside should
be compared with that for email-inout, which is displayed in figure 7. the email-inside email
network is rather small, and so it has a decreasing community pro   le plot, in agreement with the results
for small social networks. since communication is mainly focused between the members of the same
department, both network and    ground truth    communities are well expressed. next, compare the ncp
plot of email-inside with that of email-inout (figure 7). we see that the ncp plot of email-
inside slopes downwards (as we consider only the communication inside the organization), but as soon
as we consider the communication inside the organization and to the outside world (email-inout, or
alternatively, see email-enron) then we see a completely di   erent and more familiar picture   the ncp
plot drops and then slowly increases. this suggests that the organizational structure, (e.g., departments)
manifest themselves in the internal communication network, but as soon as we put the organization into
the broader context (i.e., how it communicates to the rest of the world) then the internal department
structure seems to disappear.

7.2 connections and broader implications

in contrast to numerous studies of community structure, we    nd that there is a natural size scale to
communities. communities are relatively small, with sizes only up to about 100 nodes. we also    nd that
above size of about 100, the    quality    of communities gets worse and worse and communities more and
more    blend into    the network. eventually, even the existence of communities (at least when viewed as
sets with stronger internal than external connectivity) is rather questionable. we show that large social
and information networks can be decomposed into a large number of small communities and a large dense
and intermingled network    core      we empirically establish that the    core    contains on average 60% of
the nodes and 80% of all edges. but, as demonstrated by figure 13, the    core    itself has a nontrivial
structure   in particular, it has a core-whisker structure that is analogous to the original complete network.
the dunbar number: our observation on the limit of community size agrees with dunbar [59]
who predicted that roughly 150 is the upper limit on the size of a well-functioning human community.
moreover, allen [12] gives evidence that on-line communities have around 60 members, and on-line
discussion forums start to break down at about 80 active contributors. church congregations, military
companies, divisions of corporations, all are close to the sum of 150 [12]. we are thus led to ask: why,
above this size, is community quality inversely proportional to its size? and why are ncp plots of small
and large networks so di   erent?

previous studies mainly focused on small networks (e.g., see [53]), which are simply not large enough
for the clusters to gradually blend into one another as one looks at larger size scales. our results do
not disagree with literature at small sizes. but it seems that in order to make our observations one
needs to look at large networks. it is only when dunbar   s limit is passed that we    nd large communities

community structure in large networks

57

blurring and eventually vanishing. a second reason is that previous work did not measure and examine
the network community pro   le of cluster size vs. cluster quality.

common bond vs. common identity communities: dunbar   s explanation aligns well with the
common bond vs. common identity theory of group attachment [141] from social psychology. common
identity theory makes predictions about people   s attachment to the group as a whole, while common
bond theory predicts people   s attachment to individual group members. the distinction between the two
refers to people   s di   erent reasons for being in a group. because they like the group as a whole we get
identity-based attachment, or because they like individuals in the group we get bond-based attachment.
anecdotally, bond-based groups are based on social interaction with others, personal knowledge of them,
and interpersonal attraction to them. on the other hand, identity-based groups are based on common
identity of its members, e.g., liking to play a particular on-line game, contributing to wikipedia, etc. it
has been noted that bond communities tend to be smaller and more cohesive [19], as they are based on
interpersonal ties, while identity communities are focused around common theme or interest. see [141]
for a very good review of the topic.

translating this to our context, the bond vs.

identity communities mean that small, cohesive and
well-separated communities are probably based on common bonds, while bigger groups may be based on
common identity, and it is hard to expect such big communities to be well-separated or well-expressed
in a network sense. this further means the transition between common bond (i.e., maintaining close
personal ties) and common identity (i.e., sharing a common interest or theme) occurs at around one
hundred nodes. it seems that at this size the cost of maintaining bond ties becomes too large and the
group either dies or transitions into a common identity community. it would be very interesting as a
future research topic to explore di   erences in community network structure as the community grows and
transitions from common bond to common identity community.

edge semantics: another explanation could be that in small, carefully collected networks, the
semantics of edges is very precise while in large networks we know much less about each particular edge,
e.g., especially when online people have very di   erent criteria for calling someone a friend. traditionally
social scientists through questionnaires    normalized    the links by making sure each link has the same
semantics/strength.

evidence in previous work: there has also been some evidence that hints towards the    ndings
we make here. for example, clauset et al. [49] analyzed community structure of a graph related to the
amazonallprod, and they found that around 50% of the nodes belonged to the largest    miscellaneous   
community. this agrees with the typical size of the network core, and one could conclude that the largest
community they found likely corresponds to the intermingled core of the network, and most of the rest
of the communities are whisker-like.

in addition, recently there have been several works hinting that the network communities subject is
more complex than it seems at the    rst sight. for example, it has been found that even random graphs
can have good modularity scores [85].
intuitively, random graphs have no community structure, but
there can still exist sets of nodes with good community scores, at least as measured by modularity (due
to random    uctuations about the mean). moreover, very recently a study of robustness of community
structure showed that the canonical example of presence of community structure in networks [160] may
have no signi   cant community structure [94].

more general thoughts: our work also raises an important question of what is a natural community
size and whether larger communities (in a network sense) even exist. it seems that when community size
surpasses some threshold, the community becomes so diverse that it stops existing as a traditionally
understood    network community.    instead, it blends in with the network, and intuitions based on
connectivity and cuts seem to fail to identify it. approaches that consider both the network structure
and node attribute data might help to detect communities in these cases.

also, conductance seems like a very reasonable measure that satis   es intuition about community
quality, but we have seen that if one only worries about conductance, then bags of whiskers and other

58

leskovec, lang, dasgupta, and mahoney

internally disconnected sets have the best scores. this raises interesting questions about cluster com-
pactness, id173, and smoothness: what is a good de   nition of compactness, what is the best
way to regularize these noisy networks, and how should this be connected to the notion of community
separability?

a common assumption is that each node belongs to exactly one community. our approach does not
make such an assumption. instead, for each given size, we independently    nd best set of nodes, and
   communities    of di   erent sizes often overlap. as long there is a boundary between communities (even if
boundaries overlap), cut- and edge-density- based techniques (like modularity and conductance) may have
the opportunity to    nd those communities. however, it is the absence of clear community boundaries
that makes the ncp plot go upwards.

7.3 relationship with community identi   cation methods

a great deal of work has been devoted to    nding communities in large networks, and much of this has
been devoted to formalizing the intuition that a community is a set of nodes that has more and/or better
intra-linkages between its members than inter-linkages with the remainder of the network. very relevant
to our work is that of kannan, vempala, and vetta [93], who analyze spectral algorithms and describe
a community concept in terms of a bicriterion depending on the conductance of the communities and
the relative weight of inter-community edges. flake, tarjan, and tsioutsiouliklis [69] introduce a similar
bicriterion that is based on network    ow ideas, and flake et al. [67, 68] de   ned a community as a set of
nodes that has more intra-edges than inter-edges. similar edge-counting ideas were used by radicchi et
al. [136] to de   ne and apply the notions of a strong community and a weak community.

within the    complex networks    community, girvan and newman [80] proposed an algorithm that used
   centrality    indices to    nd community boundaries. following this, newman and girvan [132] introduced
modularity as a posteriori measure of the strength of community structure. modularity measures inter-
(and not intra-) connectivity, but it does so with reference to a randomized null model. modularity has
been very in   uential in the recent community detection literature [128, 53], and one can use spectral
techniques to approximate it [157, 131]. on the other hand, guimer`a, sales-pardo, and amaral [85] and
fortunato and barth  elemy [73] showed that random graphs have high-modularity subsets and that there
exists a size scale below which communities cannot be identi   ed. in part as a response to this, some
recent work has had a more statistical    avor [86, 140, 144, 94, 133]. in light of our results, this work seems
promising, both due to potential    over   tting    issues arising from the extreme sparsity of the networks,
and also due to the empirically-promising id173 properties exhibited by local id106.
we have made extensive use of the local spectral algorithm of andersen, chung, and lang [13].
similar results were originally proven by spielman and teng [150, 151], who analyzed local id93
on a graph; see chung [35, 37, 36] for an exposition of the relationship between these methods. andersen
and lang [14] showed that these techniques can    nd (in a scalable manner) medium-sized communities in
very large social graphs in which there exist reasonably well-de   ned communities. in light of our results,
such methods seem promising more generally. other recent work that has focused on developing local
and/or near-linear time heuristics for community detection include [49, 158, 47, 21, 137].

in addition to this work we have cited, there exists work which views communities from a very di   erent
perspective. for example, kumar et al. [103] view communities as a dense bipartite subgraph of the web;
gibson, kleinberg, and raghavan [79] view communities as consisting of a core of central authoritative
pages linked together by hub pages; hopcroft et al. [89, 90] are interested in the temporal evolution
of communities that are robust when the input data to id91 algorithms that identify them are
moderately perturbed; and palla et al. [134] view communities as a chain of adjacent cliques and focus
on the extent to which they are nested and overlap. the implications of our results for this body of work
remain to be explored.

community structure in large networks

59

7.4 relationship with other theoretical work

in this subsection, we describe the relationship between our work and recent work with similar    avor in
graph partitioning, algorithms, and id207.

recent work has focused on the expansion properties of power law graphs and the real-world networks
they model. for example, mihail, papadimitriou, and saberi [121], as well as gkantsidis, mihail, and
saberi [81], studied internet routing at the level of autonomous systems (as), and showed that the
preferential attachment model and a random graph model with power law degree distributions each have
good expansion properties if the minimum degree is greater than 2 or 3, respectively. this is consistent
with the empirical results, but as we have seen the as graphs are quite unusual, when compared with
nearly every other social and information network we have studied. on the other hand, estrada has
made the observation that although certain communication, information, and biological networks have
good expansion properties, social networks do not [60]. this is interpreted as evidence that such social
networks have good small highly-cohesive groups, a property which is not attributed to the biological
networks that were considered. from the perspective of our analysis, these results are interesting since
it is likely that these small highly-cohesive groups correspond to sets near the global minimum of the
network community pro   le plot. reproducing deep cuts was also a motivation for the development of the
geometric preferential attachment models of flaxman, frieze, and vera [71, 72]. note, however, that the
deep cuts they obtain arise from the underlying geometry of the model and thus are nearly bisections.

consider also recent results on the structural and spectral properties of very sparse random graphs.
recall that the gnp random graph model [24] consists of those graphs on n nodes, in which there is an
edge between every pair vertices with a id203 p, independently. recall also that if p     (1/n, log n/n),
then a typical graph in gnp has a giant component, i.e., connected subgraph consisting of a constant
fraction of the nodes, but the graph is not fully connected [24].
(if p < 1/n, the a typical graph is
disconnected and there does not exist a giant component, while if p > log n/n, then a typical graph is
fully connected.) as noted, e.g., by feige and ofek [63], this latter regime is particularly di   cult to
analyze since with fairly high id203 there exist vertices with degrees that are much larger than
their expected degree. as reviewed in section 6.2, however, this regime is not unlike that in a power law
random graph in which the power law exponent        (2, 3) [38, 118, 42].
chakrabarti et al. [30] de   ned the    min-cut    plot which has similarities with our ncp plot. they
used a di   erent approach in which a network was recursively bisected and then the quality of the obtained
clusters was plotted against as a function of size; and the    min-cut    plots were only used as yet-another
statistic to test when assessing how realistic are synthetically generated graphs. note, however, that the
   min-cut    plots have qualitatively similar behavior to our ncp plots, i.e., they initially decrease, reach
a minimum, and then increase.

of particular interest to us are recent results on the mixing time of id93 in this p    
(1/n, log n/n) regime of the gnp (and the related gnm) random graph model. benjamini, kozma, and
wormald [22] and fountoulakis and reed [75, 74] have established rapid mixing results by proving struc-
tural results about these very sparse graphs. in particular, they proved that these graphs may be viewed
as a    core    expander subgraph, whose deletion leaves a large number of    decorations,    i.e., small compo-
nents such that a bounded number are attached to any vertex in the core. the particular constructions
in their proofs is complicated, but they have a similar    avor to the core-and-whiskers structure we have
empirically observed. similar results were observed by fernholz and ramachandran [64], whose analysis
separately considered the 2-core of these graphs and then the residual pieces. they show that a typical
longest shortest path between two vertices u and v consists of a path of length o(log n) from u to the
2-core, then a path of length o(log n) across the 2-core, and    nally a path of length o(log n) from the
2-core to v. again, this is reminiscent of the core-and-whiskers properties we have observed. in all these
cases, the structure is very di   erent than traditional expanders [88], which we also empirically observe.
eigenvalues of power law graphs have also been studied by mihail and papadimitriou [120], chung, lu,
vu [44, 45, 46], and flaxman, frieze, and fenner [70].

60

leskovec, lang, dasgupta, and mahoney

8 conclusion

we investigated statistical properties of community-like sets of nodes in large real-world social and in-
formation networks. we discovered that community structure in these networks is very di   erent than
what we expected from the experience with small networks and from what commonly-used models would
suggest.

in particular, we de   ned a network community pro   le plot (ncp plot), and we observed that good
network communities exist only up to a size scale of     100 nodes. this agrees well with the observations
of dunbar. for size scales above     100 nodes, the ncp plot slopes upwards as the conductance score of
the best possible set of nodes gets gradually worse and worse as those sets increase in size. thus, if the
world is modeled by a sparse    interaction graph    and if a density-based notion such as conductance is an
appropriate measure of community quality, then the    best    possible    communities    in nearly every real-
world network we examined gradually gets less and less community-like and instead gradually    blends in   
with the rest of the network, as the purported communities steadily grow in size. although this suggests
that large networks have a core-periphery or jelly   sh type of structure, where small    whiskers    connect
themselves into a large dense intermingled network    core,    we also observed that the    core    itself has an
analogous core-periphery structure.

none of the commonly-used network generation models, including preferential-attachment, copying,
and id187, generates networks that even qualitatively reproduce this community structure
property. we found, however, that a model in which edges are added recursively, via an iterative    forest
   re    burning mechanism, produces remarkably good results. our work opens several new questions about
the structure of large social and information networks in general, and it has implications for the use of
graph partitioning algorithms on real-world networks and for detecting communities in them.

acknowledgement

we thank reid andersen, christos faloutsos and jon kleinberg for discussions, lars backstrom for data,
and arpita ghosh for assistance with the proof of theorem 1.

references

[1] university of oregon route views project. online data and reports. http://www.routeviews.org , 1997.

[2] trec web corpus: wt10g. http://ir.dcs.gla.ac.uk/test collections/wt10g.html , 2000.

[3] google programming contest. http://www.google.com/programming-contest/, 2002.

[4] net   ix prize. http://www.netflixprize.com/, 2006.

[5] network data. http://www-personal.umich.edu/   mejn/netdata/, july 16, 2007.

[6] j. abello. hierarchical graph maps. computers and graphics, 28(3):345   359, 2004.

[7] w. aiello, f.r.k. chung, and l. lu. a random graph model for massive graphs. in stoc    00: proceedings of the

32nd annual acm symposium on theory of computing, pages 171   180, 2000.

[8] w. aiello, f.r.k. chung, and l. lu. a random graph model for power law graphs. experimental mathematics,

10:53   66, 2001.

[9] r. z. albert and a-l. barab  asi. emergence of scaling in random networks. science, 286(5439):509   512, 1999.

[10] r. z. albert and a-l. barab  asi. statistical mechanics of complex networks. reviews of modern physics, 74:47   97,

2002.

[11] r. z. albert, h. jeong, and a-l. barab  asi. the diameter of the world wide web. nature, 401:130   131, 1999.

[12] christopher allen. life with alacrity: the dunbar number as a limit to group sizes, 2004.

[13] r. andersen, f.r.k. chung, and k. lang. local graph partitioning using id95 vectors. in focs    06: proceed-

ings of the 47th annual ieee symposium on foundations of computer science, pages 475   486, 2006.

community structure in large networks

61

[14] r. andersen and k. lang. communities from seed sets.

in www    06: proceedings of the 15th international

conference on world wide web, pages 223   232, 2006.

[15] s. arora, e. hazan, and s. kale. o(plog n) approximation to sparsest cut in   o(n2) time. in focs    04: proceedings

of the 45th annual symposium on foundations of computer science, pages 238   247, 2004.

[16] s. arora and s. kale. a combinatorial, primal-dual approach to semide   nite programs. in stoc    07: proceedings

of the 39th annual acm symposium on theory of computing, pages 227   236, 2007.

[17] s. arora, s. rao, and u. vazirani. expander    ows, geometric embeddings and graph partitioning. in stoc    04:

proceedings of the 36th annual acm symposium on theory of computing, pages 222   231, 2004.

[18] m. babenko, j. derryberry, a. goldberg, r. tarjan, and y. zhou. experimental evaluation of parametric max-   ow

algorithms. in wea    07: proceedings of the 6th workshop on experimental algorithms, pages 256   269, 2007.

[19] k.w. back. in   uence through social communication. journal of abnormal and social psychology, 46:9   23, 1951.

[20] l. backstrom, d. huttenlocher, j. kleinberg, and x. lan. group formation in large social networks: membership,
growth, and evolution. in kdd    06: proceedings of the 12th acm sigkdd international conference on knowledge
discovery and data mining, pages 44   54, 2006.

[21] j.p. bagrow and e.m. bollt. local method for detecting communities. physical review e, 72:046108, 2005.

[22] i. benjamini, g. kozma, and n. wormald. the mixing time of the giant component of a random graph.

arxiv:math/0610459, october 2006.

[23] s. boccaletti, v. latora, y. moreno, m. chavez, and d.u. hwang. complex networks: structure and dynamics.

physics reports, 424(4-5):175   308, 2006.

[24] b. bollob  as. random graphs. academic press, london, 1985.

[25] b. bollob  as and o. m. riordan. mathematical results on scale-free random graphs. in s. bornholdt and h.g. schuster,

editors, handbook of graphs and networks, pages 1   34. wiley, 2004.

[26] u. brandes, m. gaertler, and d. wagner. engineering graph id91: models and experimental evaluation. journal

of experimental algorithmics, 12(1), 2007.

[27] a. broder, r. kumar, f. maghoul, p. raghavan, s. rajagopalan, r. stata, a. tomkins, and j. wiener. graph
structure in the web. in www    00: proceedings of the 9th international conference on world wide web, pages
309   320, 2000.

[28] s. burer and r.d.c. monteiro. a nonid135 algorithm for solving semide   nite programs via low-rank

factorization. mathematical programming (series b), 95(2):329   357, 2003.

[29] d. chakrabarti and c. faloutsos. graph mining: laws, generators, and algorithms. acm computing surveys,

38(1):2, 2006.

[30] d. chakrabarti, c. faloutsos, and y. zhan. visualization of large networks with min-cut plots, a-plots and r-mat.

international journal of human-computer studies, 65(5):434   445, 2007.

[31] d. chakrabarti, y. zhan, and c. faloutsos. r-mat: a recursive model for graph mining. in sdm    04: proceedings

of the 4th siam international conference on data mining, 2004.

[32] j. cheeger. a lower bound for the smallest eigenvalue of the laplacian. in problems in analysis, papers dedicated to

salomon bochner, pages 195   199. princeton university press, 1969.

[33] b.v. cherkassky and a.v. goldberg. on implementing push-relabel method for the maximum    ow problem. in ipco
   95: proceedings of the 4th international ipco conference on integer programming and combinatorial optimization,
pages 157   171, 1995.

[34] f.r.k. chung. spectral id207, volume 92 of cbms regional conference series in mathematics. american

mathematical society, 1997.

[35] f.r.k chung. four proofs of cheeger inequality and graph partition algorithms. in proceedings of iccm, 2007.

[36] f.r.k. chung. the heat kernel as the id95 of a graph. proceedings of the national academy of sciences of the

united states of america, 104(50):19735   19740, 2007.

[37] f.r.k. chung. id93 and local cuts in graphs. id202 and its applications, 423:22   32, 2007.

[38] f.r.k. chung and l. lu. the diameter of sparse random graphs. advances in applied mathematics, 26(4):257   279,

2001.

[39] f.r.k. chung and l. lu. the average distances in random graphs with given expected degrees. proceedings of the

national academy of sciences of the united states of america, 99(25):15879   15882, 2002.

[40] f.r.k. chung and l. lu. connected components in random graphs with given expected degree sequences. annals

of combinatorics, 6(2):125   145, 2002.

62

leskovec, lang, dasgupta, and mahoney

[41] f.r.k. chung and l. lu. the average distances in a random graph with given expected degrees. internet mathematics,

1:91   113, 2003.

[42] f.r.k. chung and l. lu. complex graphs and networks, volume 107 of cbms regional conference series in

mathematics. american mathematical society, 2006.

[43] f.r.k. chung and l. lu. the volume of the giant component of a random graph with given expected degrees. siam

journal on discrete mathematics, 20:395   411, 2006.

[44] f.r.k. chung, l. lu, and van vu. eigenvalues of random power law graphs. annals of combinatorics, 7:21   33,

2003.

[45] f.r.k. chung, l. lu, and van vu. the spectra of random graphs with given expected degrees. proceedings of the

national academy of sciences of the united states of america, 100(11):6313   6318, 2003.

[46] f.r.k. chung, l. lu, and van vu. the spectra of random graphs with given expected degrees. internet mathematics,

1:257   275, 2004.

[47] a. clauset. finding local community structure in networks. physical review e, 72:026132, 2005.

[48] a. clauset, c. moore, and m.e.j. newman. structural id136 of hierarchies in networks. arxiv:physics/0610051,

october 2006.

[49] a. clauset, m.e.j. newman, and c. moore.

finding community structure in very large networks.

arxiv:cond-mat/0408187, august 2004.

[50] a. clauset, c.r. shalizi, and m.e.j. newman. power-law distributions in empirical data. arxiv:0706.1062, june

2007.

[51] v. colizza, a. flammini, m.a. serrano, and a. vespignani. characterization and modeling of protein protein

interaction networks. physica a statistical mechanics and its applications, 352:1   27, 2005.

[52] l. da f. costa, f.a. rodrigues, g. travieso, and p.r. villas boas. characterization of complex networks: a survey

of measurements. advances in physics, 56(1):167   242, 2007.

[53] l. danon, j. duch, a. diaz-guilera, and a. arenas. comparing community structure identi   cation. journal of

statistical mechanics: theory and experiment, 29(09):p09008, 2005.

[54] i.s. dhillon, y. guan, and b. kulis. weighted graph cuts without eigenvectors: a multilevel approach.

ieee

transactions on pattern analysis and machine intelligence, 29(11):1944   1957, 2007.

[55] w.e. donath and a.j. ho   man. algorithms for partitioning graphs and computer logic based on eigenvectors of

connection matrices. ibm technical disclosure bulletin, 15(3):938   944, 1972.

[56] s.n. dorogovtsev and j.f.f. mendes. evolution of networks. advances in physics, 51:1079   1187, 2002.

[57] j. doyle and j.m. carlson. power laws, highly optimized tolerance, and generalized source coding. physical review

letters, 84(24):5656   5659, 2000.

[58] j. doyle and j.m. carlson. complexity and robustness. proceedings of the national academy of sciences of the

united states of america, 99:2538   2545, 2002.

[59] robin dunbar. grooming, gossip, and the evolution of language. harvard univ press, october 1998.

[60] e. estrada. spectral scaling and good expansion properties in complex networks. europhysics letters, 73:649   655,

2006.

[61] a. fabrikant, e. koutsoupias, and c.h. papadimitriou. heuristically optimized trade-o   s: a new paradigm for power
laws in the internet. in icalp    02: proceedings of the 29th international colloquium on automata, languages and
programming, pages 110   122, 2002.

[62] m. faloutsos, p. faloutsos, and c. faloutsos. on power-law relationships of the internet topology. in sigcomm
   99: proceedings of the conference on applications, technologies, architectures, and protocols for computer commu-
nication, pages 251   262, 1999.

[63] u. feige and e. ofek. spectral techniques applied to sparse random graphs. random structures and algorithms,

27:251   275, 2005.

[64] d. fernholz and v. ramachandran. the diameter of sparse random graphs. random structures and algorithms,

31:482   516, 2007.

[65] c.m. fiduccia and r.m. mattheyses. a linear-time heuristic for improving network partitions. in dac    82: proceed-

ings of the 19th acm/ieee conference on design automation, pages 175   181, 1982.

[66] m. fiedler. algebraic connectivity of graphs. czechoslovak mathematical journal, 23(98):298   305, 1973.

[67] g.w. flake, s. lawrence, and c.l. giles. e   cient identi   cation of web communities. in kdd    00: proceedings of

the 6th acm sigkdd international conference on knowledge discovery and data mining, pages 150   160, 2000.

community structure in large networks

63

[68] g.w. flake, s. lawrence, c.l. giles, and f.m. coetzee. self-organization and identi   cation of web communities.

computer, 35(3):66   71, 2002.

[69] g.w. flake, r.e. tarjan, and k.tsioutsiouliklis. graph id91 and minimum cut trees. internet mathematics,

1(4):385   408, 2003.

[70] a. flaxman, a. frieze, and t. fenner. high degree vertices and eigenvalues in the preferential attachment graph.

internet mathematics, 2(1):1   19, 2005.

[71] a.d. flaxman, a.m. frieze, and j. vera. a geometric preferential attachment model of networks. in waw    04:

proceedings of the 3rd workshop on algorithms and models for the web-graph, pages 44   55, 2004.

[72] a.d. flaxman, a.m. frieze, and j. vera. a geometric preferential attachment model of networks ii. in waw    07:

proceedings of the 5th workshop on algorithms and models for the web-graph, pages 41   55, 2007.

[73] s. fortunato and m. barth  elemy. resolution limit in community detection. proceedings of the national academy of

sciences of the united states of america, 104(1):36   41, 2007.

[74] n. fountoulakis and b. reed. the evolution of the mixing rate. arxiv:math/0701474, january 2007.

[75] n. fountoulakis and b.a. reed. faster mixing and small bottlenecks. id203 theory and related fields, 137(3   

4):475   486, 2007.

[76] m. gaertler. id91. in u. brandes and t. erlebach, editors, network analysis: methodological foundations,

pages 178   215. springer, 2005.

[77] g. gallo, m.d. grigoriadis, and r.e. tarjan. a fast parametric maximum    ow algorithm and applications. siam

journal on computing, 18(1):30   55, 1989.

[78] j. gehrke, p. ginsparg, and j. kleinberg. overview of the 2003 kdd cup. sigkdd explorations, 5(2):149   151,

2003.

[79] d. gibson, j. kleinberg, and p. raghavan. inferring web communities from link topology. in ht    98: proceedings of

the 9th acm conference on hypertext and hypermedia, pages 225   234, 1998.

[80] m. girvan and m.e.j. newman. community structure in social and biological networks. proceedings of the national

academy of sciences of the united states of america, 99(12):7821   7826, 2002.

[81] c. gkantsidis, m. mihail, and a. saberi. conductance and congestion in power law graphs. in proceedings of the 2003
acm sigmetrics international conference on measurement and modeling of computer systems, pages 148   159,
2003.

[82] a.v. goldberg and s. rao. beyond the    ow decomposition barrier. journal of the acm, 45:783   797, 1998.

[83] a.v. goldberg and r.e. tarjan. a new approach to the maximum-   ow problem. journal of the acm, 35:921   940,

1988.

[84] s. guattery and g.l. miller. on the quality of spectral separators. siam journal on matrix analysis and applica-

tions, 19:701   719, 1998.

[85] r. guimer`a, m. sales-pardo, and l.a.n. amaral. modularity from    uctuations in random graphs and complex

networks. physical review e, 70:025101, 2004.

[86] m.b. hastings. community detection as an id136 problem. physical review e, 74:035102, 2006.

[87] b. hendrickson and r. leland. a multilevel algorithm for partitioning graphs. in supercomputing    95: proceedings

of the 1995 acm/ieee conference on supercomputing (cdrom), 1995.

[88] s. hoory, n. linial, and a. wigderson. expander graphs and their applications. bulletin of the american mathe-

matical society, 43:439   561, 2006.

[89] j. hopcroft, o. khan, b. kulis, and b. selman. natural communities in large linked networks.

in kdd    03:
proceedings of the 9th acm sigkdd international conference on knowledge discovery and data mining, pages
541   546, 2003.

[90] j. hopcroft, o. khan, b. kulis, and b. selman. tracking evolving communities in large linked networks. proceedings

of the national academy of sciences of the united states of america, 101:5249   5253, 2004.

[91] a.k. jain, m.n. murty, and p.j. flynn. data id91: a review. acm computing surveys, 31:264   323, 1999.

[92] h. jeong, s.p. mason, a-l. barab  asi, and z.n. oltvai. lethality and centrality in protein networks. nature, 411:41   42,

2001.

[93] r. kannan, s. vempala, and a. vetta. on id91s: good, bad and spectral. journal of the acm, 51(3):497   515,

2004.

[94] b. karrer, e. levina, and m.e.j. newman. robustness of community structure in networks. arxiv:0709.2108,

september 2007.

64

leskovec, lang, dasgupta, and mahoney

[95] g. karypis and v. kumar. a fast and high quality multilevel scheme for partitioning irregular graphs. siam journal

on scienti   c computing, 20:359   392, 1998.

[96] g. karypis and v. kumar. multilevel k-way partitioning scheme for irregular graphs. journal of parallel and

distributed computing, 48:96   129, 1998.

[97] b. kernighan and s. lin. an e   ective heuristic procedure for partitioning graphs. the bell system technical journal,

pages 291   308, 1970.

[98] a. khalil and y. liu. experiments with id95 computation. technical report 603, indiana university department

of computer science, december 2004.

[99] r. khandekar, s. rao, and u. vazirani. graph partitioning using single commodity    ows. in stoc    06: proceedings

of the 38th annual acm symposium on theory of computing, pages 385   390, 2006.

[100] b. klimt and y. yang. introducing the enron corpus. in ceas    04: proceedings of the 1st conference on email and

anti-spam, 2004.

[101] r. kumar, j. novak, and a. tomkins. structure and evolution of online social networks. in kdd    06: proceedings of
the 12th acm sigkdd international conference on knowledge discovery and data mining, pages 611   617, 2006.

[102] r. kumar, p. raghavan, s. rajagopalan, d. sivakumar, a. tomkins, and e. upfal. stochastic models for the web
graph. in focs    00: proceedings of the 41st annual symposium on foundations of computer science, pages 57   65,
2000.

[103] r. kumar, p. raghavan, s. rajagopalan, and a. tomkins. trawling the web for emerging cyber-communities.

computer networks, 31(11):1481   1493, 1999.

[104] k. lang. finding good nearly balanced cuts in power law graphs. technical report yrl-2004-036, yahoo! research

labs, pasadena, ca, november 2004.

[105] k. lang and s. rao. finding near-optimal cuts: an empirical evaluation. in soda    93: proceedings of the 4th annual

acm-siam symposium on discrete algorithms, pages 212   221, 1993.

[106] k. lang and s. rao. a    ow-based method for improving the expansion or conductance of graph cuts. in ipco    04:
proceedings of the 10th international ipco conference on integer programming and combinatorial optimization,
pages 325   337, 2004.

[107] t. leighton and s. rao. an approximate max-   ow min-cut theorem for uniform multicommodity    ow problems with
applications to approximation algorithms. in focs    88: proceedings of the 28th annual symposium on foundations
of computer science, pages 422   431, 1988.

[108] t. leighton and s. rao. multicommodity max-   ow min-cut theorems and their use in designing approximation

algorithms. journal of the acm, 46(6):787   832, 1999.

[109] j. leskovec, l.a. adamic, and b.a. huberman. the dynamics of viral marketing. acm transactions on the web,

1(1), 2007.

[110] j. leskovec, d. chakrabarti, j. kleinberg, and c. faloutsos. realistic, mathematically tractable graph generation
in ecml/pkdd    05: proceedings of the european international

and evolution, using kronecker multiplication.
conference on principles and practice of knowledge discovery in databases, pages 133   145, 2005.

[111] j. leskovec and c. faloutsos. scalable modeling of real graphs using kronecker multiplication. in icml    07: pro-

ceedings of the 24th international conference on machine learning, pages 497   504, 2007.

[112] j. leskovec, j. kleinberg, and c. faloutsos. graphs over time: densi   cation laws, shrinking diameters and possible
explanations. in kdd    05: proceeding of the 11th acm sigkdd international conference on knowledge discovery
in data mining, pages 177   187, 2005.

[113] j. leskovec, j. kleinberg, and c. faloutsos. graph evolution: densi   cation and shrinking diameters. acm transac-

tions on knowledge discovery from data, 1(1), 2007.

[114] j. leskovec, k.j. lang, a. dasgupta, and m.w. mahoney. statistical properties of community structure in large

social and information networks. manuscript. march 7, 2008.

[115] j. leskovec, k.j. lang, a. dasgupta, and m.w. mahoney. statistical properties of community structure in large
social and information networks. in www    08: proceedings of the 17th international conference on world wide
web, pages 695   704, 2008.

[116] j. leskovec, m. mcglohon, c. faloutsos, n.s. glance, and m. hurst. patterns of cascading behavior in large blog

graphs. in sdm    07: proceedings of the 7th siam conference on data mining, 2007.

[117] l. li, j.c. doyle, and w. willinger. towards a theory of scale-free graphs: de   nition, properties, and implications.

internet mathematics, 2(4):431   523, 2006.

[118] l. lu. the diameter of random massive graphs. in soda    01: proceedings of the 12th annual acm-siam symposium

on discrete algorithms, pages 912   921, 2001.

community structure in large networks

65

[119] d. lusseau, k. schneider, o.j. boisseau, p. haase, e. slooten, and s.m. dawson. the bottlenose dolphin community
of doubtful sound features a large proportion of long-lasting associations. behavioral ecology and sociobiology,
54:396   405, 2003.

[120] m. mihail and c.h. papadimitriou. on the eigenvalue power law. in random    02: proceedings of the 6th interna-

tional workshop on randomization and approximation techniques, pages 254   262, 2002.

[121] m. mihail, c.h. papadimitriou, and a. saberi. on certain connectivity properties of the internet topology. journal

of computer and system sciences, 72(2):239   251, 2006.

[122] r. milo, n. kashtan, s. itzkovitz, m.e.j. newman, and u. alon. on the uniform generation of random graphs with

prescribed degree sequences. arxiv:cond-mat/0312028v2, may 2004.

[123] b. mohar. the laplacian spectrum of graphs.

in y. alavi, g. chartrand, o.r. oellermann, and a.j. schwenk,

editors, id207, combinatorics, and applications, vol. 2, pages 871   898. wiley, 1991.

[124] m. molloy and b. reed. a critical point for random graphs with a given degree sequence. random structures and

algorithms, 6:161   180, 1995.

[125] m. molloy and b. reed. the size of the giant component of a random graph with a given degree sequence. combi-

natorics, id203 and computing, 7:295   305, 1998.

[126] a.l. montgomery and c. faloutsos. identifying web browsing trends and patterns. computer, 34(7):94   95, 2001.

[127] m.e.j. newman. the structure and function of complex networks. siam review, 45:167   256, 2003.

[128] m.e.j. newman. detecting community structure in networks. the european physical journal b, 38:321   330, 2004.

[129] m.e.j. newman. power laws, pareto distributions and zipf   s law. contemporary physics, 46:323   351, 2005.

[130] m.e.j. newman. finding community structure in networks using the eigenvectors of matrices. physical review e,

74:036104, 2006.

[131] m.e.j. newman. modularity and community structure in networks. proceedings of the national academy of sciences

of the united states of america, 103(23):8577   8582, 2006.

[132] m.e.j. newman and m. girvan. finding and evaluating community structure in networks. physical review e,

69:026113, 2004.

[133] m.e.j. newman and e.a. leicht. mixture models and exploratory analysis in networks. proceedings of the national

academy of sciences of the united states of america, 104(23):9564   9569, 2007.

[134] g. palla, i. der  enyi, i. farkas, and t. vicsek. uncovering the overlapping community structure of complex networks

in nature and society. nature, 435(7043):814   818, 2005.

[135] y. qi, j.k. seetharaman, and z.b. joseph. id79 similarity for protein-protein interaction prediction from

multiple sources. in paci   c symposium on biocomputing, 2005.

[136] f. radicchi, c. castellano, f. cecconi, v. loreto, and d. parisi. de   ning and identifying communities in networks.

proceedings of the national academy of sciences of the united states of america, 101(9):2658   2663, 2004.

[137] u. nandini raghavan, r.z. albert, and s. kumara. near linear time algorithm to detect community structures in

large-scale networks. physical review e, 76:036106, 2007.

[138] e. ravasz and a.-l. barab  asi. hierarchical organization in complex networks. physical review e, 67:026112, 2003.

[139] e. ravasz, a.l. somera, d.a. mongru, z.n. oltvai, and a.-l. barab  asi. hierarchical organization of modularity in

metabolic networks. science, 297(5586):1551   1555, 2002.

[140] j. reichardt and s. bornholdt. partitioning and modularity of graphs with arbitrary degree distribution. physical

review e, 76:015102, 2007.

[141] y. ren, r. kraut, and s. kiesler. applying common identity and bond theory to design of online communities.

organization studies, 28(3):377   408, 2007.

[142] m. richardson, r. agrawal, and p. domingos. trust management for the semantic web. in iswc    03: proceedings

of the 2nd international semantic web conference, pages 351   368, 2003.

[143] m. ripeanu, i. foster, and a. iamnitchi. mapping the gnutella network: properties of large-scale peer-to-peer systems

and implications for system design. ieee internet computing, 6(1):50   57, 2002.

[144] m. rosvall and c.t. bergstrom. an information-theoretic framework for resolving community structure in complex
networks. proceedings of the national academy of sciences of the united states of america, 104(18):7327   7331,
2007.

[145] s.f. sampson. a novitiate in a period of change: an experimental and case study of social relationships. technical

report, cornell university deptartment of sociology phd thesis, 1968.

[146] s.e. schae   er. graph id91. computer science review, 1(1):27   64, 2007.

66

leskovec, lang, dasgupta, and mahoney

[147] j. shi and j. malik. normalized cuts and image segmentation. ieee transcations of pattern analysis and machine

intelligence, 22(8):888   905, 2000.

[148] g. siganos, s.l. tauro, and m. faloutsos. jelly   sh: a conceptual model for the as internet topology. journal of

communications and networks, 8:339   350, 2006.

[149] d.a. spielman and s.-h. teng. spectral partitioning works: planar graphs and    nite element meshes. in focs    96:

proceedings of the 37th annual ieee symposium on foundations of computer science, pages 96   107, 1996.

[150] d.a. spielman and s.-h. teng. nearly-linear time algorithms for graph partitioning, graph sparsi   cation, and solving
in stoc    04: proceedings of the 36th annual acm symposium on theory of computing, pages

linear systems.
81   90, 2004.

[151] d.a. spielman and s.-h. teng. nearly-linear time algorithms for graph partitioning, graph sparsi   cation, and solving

linear systems. arxiv:cs/0310051v9, march 2004.

[152] s.l. tauro, c. palmer, g. siganos, and m. faloutsos. a simple conceptual model for the internet topology.

in

globecom    01: global telecommunications conference, pages 1667   1671, 2001.

[153] j.b. tenenbaum, v. de silva, and j.c. langford. a global geometric framework for nonlinear id84.

science, 290(5500):2319   2323, 2000.

[154] u. von luxburg. a tutorial on spectral id91. technical report 149, max plank institute for biological cyber-

netics, august 2006.

[155] s. wasserman and k. faust. social network analysis. cambridge university press, cambridge, 1994.

[156] d.j. watts and s.h. strogatz. collective dynamics of small-world networks. nature, 393:440   442, 1998.

[157] s. white and p. smyth. a spectral id91 approach to    nding communities in graphs. in sdm    05: proceedings

of the 5th siam international conference on data mining, pages 76   84, 2005.

[158] f. wu and b.a. huberman. finding communities in linear time: a physics approach. the european physical journal

b, 38(2):331   338, 2004.

[159] q. xuan, y. li, and t.-j. wu. growth model for complex networks with hierarchical and modular structures. physical

review e, 73:036105, 2006.

[160] w.w. zachary. an information    ow model for con   ict and    ssion in small groups. journal of anthropological

research, 33:452   473, 1977.

[161] c.t. zahn. graph-theoretical methods for detecting and describing gestalt clusters. ieee transactions on computers,

c-20(1):68   86, 1971.

[162] y. zhao and g. karypis. empirical and theoretical comparisons of selected criterion functions for document id91.

machine learning, 55:311   331, 2004.

