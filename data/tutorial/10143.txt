1
1
0
2

 

g
u
a
4
2

 

 
 
]
i
s
.
s
c
[
 
 

1
v
1
0
8
4

.

8
0
1
1
:
v
i
x
r
a

supervised rank aggregation for predicting in   uence in networks

karthik subbian and prem melville

ibm t.j. watson research center, yorktown heights, ny 10598

email: {ksubbian,pmelvil}@us.ibm.com

october 29, 2018

abstract   much work in social network analysis has
focused on the identi   cation of the most important actors
in a social network. this has resulted in several measures of
in   uence and authority. while most of such sociometrics (e.g.,
id95) are driven by intuitions based on an actors location
in a network, asking for the    most in   uential    actors in itself is
an ill-posed question, unless it is put in context with a speci   c
measurable task. constructing a predictive task of interest
in a given domain provides a mechanism to quantitatively
compare different measures of in   uence. furthermore, when
we know what type of actionable insight to gather, we need not
rely on a single network centrality measure. a combination
of measures is more likely to capture various aspects of the
social network that are predictive and bene   cial for the task.
towards this end, we propose an approach to supervised
rank aggregation, driven by techniques from social choice
theory. we illustrate the effectiveness of this method through
experiments on twitter and id191.

i. introduction
the rise of social media, with its focus on user-generated
content and social networks, has brought the study of
authority and in   uence in networks to the forefront. for
companies and other public entities, identifying and en-
gaging with in   uential authors in social media is critical,
since any opinions they express could rapidly spread far
and wide. for users, when presented with a vast amount
of content relevant to a topic of interest, ordering content
by the source   s authority or in   uence assists in information
triage,
thus overcoming the ever-increasing information
overload.

following this need, there has been a spate of recent
work studying in   uence and the diffusion of information
in social networks [1], [2], [3]. while these works are
important in furthering our understanding of the dynamics
of communication in networks, they do not directly give
us measures of in   uence and authority in social media. on
the other hand, there has been much work in the    eld of
social network analysis, from the 1930   s [4] onwards, that
has focused explicitly on sociometry, including quantitative
measures of in   uence, authority, centrality or prestige.
these measures are heuristics usually based on intuitive
notions such as access and control over resources, or bro-
kerage of information [5]; and has yielded measures such as

degree centrality, eigenvector centrality and betweeness
centrality [6].

in this paper, we address the problem of identifying
in   uence by posing it as a predictive task. in particular, we
compare different measures of in   uence on their ability to
accurately predict which users in twitter will be virally
rebroadcast (retweeted) in the near future. formulating
a concrete predictive task, such as this, allows us to
quantitatively compare the ef   cacy of different measures
of in   uence.

in addition to evaluating individual measures of in   u-
ence, such as degree centrality and id95, we propose
combining them to produce a more accurate measure of
in   uence. given that each measure produces an ordering
of elements, we can leverage rank aggregation techniques
from social choice theory, such as borda [7] and kemeny
optimal rank aggregation [8]. these classical techniques
were designed to combine rankings to ensure fairness
amongst voters and not to maximize performance on a
predictive task; and as such are unsupervised. in this paper,
we introduce supervised kemeny ranking in order to
aggregate individual rankings for the task of predicting
in   uence in networks. we demonstrate the effectiveness
of our approach in a case study of 40 million twitter
accounts; and we further corroborate these results in a study
of publication id191.

in this paper, we make the following key contributions:
(1) we propose a predictive, rather than a heuristic, per-
spective of in   uence, by formulating measurable predictive
tasks. (2) we combine ideas from sociometry and social
choice theory in novel ways. (3) we present a new
approach to supervised rank aggregation. (4) we show the
effectiveness of our approach on real-world network data.
(5) we demonstrate that our approach is signi   cantly better
than current practice and other baselines that we devised.

ii. data set and task de   nition
our primary study was based on the twitter discussion
around pepsi. what piqued our interest in twitter and the
role of in   uencers was the infamous sexist iphone app
called    amp up b4 u score   . an avalanche of twitter

users slammed the app ultimately leading to an apology
from pepsi. in this study, we found that the in   uence
of twitter users heavily depends upon the number of
rebroadcasts of his/her messages to millions of other users.
in the context of twitter, this suggests that a useful task
would be to predict which twitterers will be signi   cantly
rebroadcast via retweets.

one obvious indicator of in   uence could be the number
of followers a user has (in-degree of the follower graph).
however, many users follow 100k or more users and
therefore this may not be suf   cient indication of in   uence.
for this reason, we consider two alternatives, the retweet
graph and the mention graph, where edges correspond to
retweets and mentions of users in the past. we generate
two versions of both the retweet and the mention graph,
one collapsing all repeat connections from the same user
i to the user k into just one edge. the second version
uses the number of retweets/mentions as edge weights. for
our in   uence measures (rankings) we use in-degree, out-
degree and id95s (with a damping factor of 0.85). in
addition to degree and eigenvector centralities, there are
other important socio-metrics based on the paths between
vertices like, closeness and betweeness centrality. we
exclude them, as they come at the prohibitive computational
cost of calculating all-pairs shortest paths in a graph
(o(v 3)).1

we extracted the data2 to generate these graphs over
a two week period from 11/11/09 to 11/26/09. this gives
a follower graph with 40 million nodes (users) and 1.1
billion edges. we used the socio-metrics computed from
these graphs to predict which users will have viral outbursts
of retweets in the following week. we compare these
predictions with the actual amount of retweets in the
following week. for the purposes of testing, we monitored
all retweets of a set of 9,625 users. this is the set we use
for the train-test splits in our experiments.

we construct our prediction task from our data by
dividing users in our test period into two classes     people
who have been retweeted more than a threshold and below.
in our data set, we selected 10% of the maximum number
of retweets within a week as the threshold (100 retweets).
we treat this as a binary classi   cation problem, where the
ranking produced by each measure is used to predict the
potential for viral retweeting in the test time period. since
we are primarily concerned with how well these measures
perform at ranking users, we compare the area under the
roc curve (auc) based on using each measure [9]. for
some applications it is more important to correctly rank
relevant elements at the top of list, which we also measure
by average precision (ap) for the top k users [10].

de   nition
measure
follower graph indegree
followers
follower graph outdegree
friends
follower graph id95
follower id95
retweet graph indegree
distinct past retweets
retweet graph outdegree
people retweeted
retweet graph id95
retweet id95
wtd. retweet indegree
past retweets
retweets made
wtd. retweet outdegree
distinct mentions received mention graph indegree
people mentioned
mention id95
mentions received
mentions made

mention graph outdegree
mention graph id95
wtd. mention indegree
wtd. mention outdegree

auc
88.18
76.03
85.77
90.17
87.04
88.38
90.18
86.80
60.71
86.11
70.43
60.53
84.69

ap
0.4366
0.2821
0.4397
0.7246
0.3976
0.5135
0.7406
0.4707
0.5690
0.5923
0.3631
0.2737
0.2895

comparing ranking measures for identifying viral

potential, in terms of auc(%) and average precision@100.

table i

we compared all measures of in   uence averaged over
20 trials of random strati   ed samples of 80% of the
users (see table i). we    nd that 9 of the 13 individual
measures by themselves are quite effective at ranking the
top potentially viral twitterers with an auc > 80%. not
surprisingly, the number of times that someone has been
retweeted in the recent past produces very good rankings
    based on auc and average precision. the number
of followers and the number of people mentioned also
produce reasonably good rankings in terms of auc and
average precision respectively.3 however the spearman
rank correlation between recent past retweets and followers
is not very high (0.43), suggesting that there are multiple
forces at work here. this underscores the fact that each
aspect (network of followers, diffusion of past retweets,
and interactions through replies and mentions) contributes
to ones potential to reach a large audience. by focusing on
selecting a single centrality measure to capture in   uence
we would miss out on the opportunity to more precisely
detect potential viral users.

iii. rank aggregation
as each socio-metric captures only some aspect of the
user   s in   uence in the network, it is bene   cial to combine
them in order to more accurately identify in   uencers. one
straightforward approach to combining individual measures
is to use them as inputs to a classi   er, such as logistic
regression, which can be trained to predict
the target
variable (e.g., future retweets) on historical or held-out
data. however, given that the individual in   uence measures
produce an ordering of elements and not just a point-wise
score, we can, instead leverage approaches to aggregating
rankings for better results. the problem of rank aggregation
or preference aggregation has been extensively studied in

1in related work, we have been working on a scalable algorithm for
computing betweeness centrality, exploiting hierarchical parallelization.

2we will make all our data publicly available.

3despite its popularity, id95 does not perform as well as other

measures.

social choice theory, where there is no ground truth
ranking, and as such are unsupervised. in this section,
we explain the necessary background for appreciating our
proposed method supervised kemeny ranking, which is a
supervised order-based aggregation technique, that can be
trained based on the ground-truth ordering of a subset of
elements.

the rank aggregation task: let us begin by for-
mally de   ning the task of rank aggregation. given a set
of entities s, let v be a subset of s; and assume that
there is a total ordering among entities in v . we are
given r individual rankers   1, ...,   r who specify their order
preferences of the m candidates, where m is size of v ,
i.e.,   i = [d1, ..., dm], i = 1, ..., r, ifd1 > ... > dm, dj    
v, j = 1, ..., m. if di
is preferred over dj we denote
that by di > dj. rank aggregation function    takes
input orderings from r rankers and gives   , which is an
aggregated ranking order. if v equals s, then    is called a
full list (total ordering), otherwise it is called a partial list
(partial ordering).

all commonly-used rank aggregation methods, sat-
isfy one or more of the following desirable goodness
properties: unanimity, non-dictatorial criterion, neutrality,
consistency, condorcet criterion and extended condorcet
criterion (ecc) [11]. we will primarily focus on ecc,
de   ned below:

definition 3.1. the extended condorcet criterion [12]
requires that if there is any partition {c, r} of s, such that
for any di     c and dj     r a majority of rankers prefer di
to dj, then the aggregate ranking    should prefer di to dj.

the ecc property is highly preferred in our domains,
as it eliminates the possibility of inferior candidates being
introduced strategically in order to manipulate the choice
between superior candidates. in other words,
it offers
the property of independence of irrelevant alternatives.
additionally, ecc is a relaxed form of kemeny optimal
aggregation (de   ned below), where the partition c and r
are arranged in the    true    order, but not necessarily the
elements within partitions c and r. in addition to the
desirable theoretical properties, ecc proves to be very
valuable in ranking in practice, as we will demonstrate in
our experiments.

we will focus on two classical rank aggregation tech-
niques in this paper: borda and kemeny, describe below.
borda aggregation: in borda aggregation [7] each
candidate is assigned a score by each ranker; where the
score for a candidate is the number of candidates below him
in each ranker   s preferences. the borda aggregation is the
descending order arrangement of the average borda score
for each candidate averaged across all ranker preferences.
though borda aggregation satis   es neutrality, monotonic-
ity, and consistency,
it does not satisfy the condorcet

criterion [13] and ecc. in fact, it has been shown that
no method that assigns weights to each position and then
sorts the results by applying a function to the weights
associated with each candidate satis   es the extended con-
dorcet criterion [14]. this includes point-wise classi   ers
like id28. this motivates us to consider order-
based methods for rank aggregation that do satisfy ecc.

kemeny aggregation: a kemeny optimal aggrega-
tion [8] is an aggregation that has the minimum number of
pairwise disagreements with all rankers, i.e., a choice of   
k(  ,   i); where the
that minimizes k(  ,   1, ...,   r) = 1
r
function k(  ,    ) is the kendall tau distance measured as
|{(i, j)|i < j,   (i) >   (j), but    (i) <   (j)}|, where   (i)
is used to denote the position of i in ranking   .

r
p
i=1

kemeny aggregation satis   es neutrality, consistency,
and the extended condorcet criterion. kemeny optimal
aggregation also has a good maximum likelihood interpreta-
tion. suppose there is an underlying    correct    ordering    of
s, and each order   1, ...,   r is obtained from    by swapping
pairs of elements with some id203 less than 1/2. that
is, the      s are    noisy    versions of   . a kemeny optimal
aggregation of   1, ...,   r is one (not necessarily unique) that
is maximally likely to have produced the      s.

iv. supervised kemeny ranking
while kemeny aggregation is optimal in the sense de-
scribed above, it has two drawbacks when applied to our
setting: (1) it is computationally very expensive, and (2) it
does not distinguish between good and bad input rankings.
below we describe how we overcome these drawbacks.

kemeny (and borda) aggregation, being motivated
from social choice theory, strive for fairness and hence
treat all rankers as equally important. however, fairness
is not a desirable property in our setting, since we know
that some individual rankers (measures) perform better than
others in our target tasks. if we knew a priori which
rankers are better, we could leverage this information to
produce a better aggregate ranking. in fact, given the
ordering of a (small) set of candidates, we can estimate the
performance of individual rankers and use this to produce
a better ranking on a new set of candidates. we propose
supervised kemeny ranking (skr), which is based on
such an approach.

the problem of computing optimal kemeny aggrega-
tion is np-hard for r     4 [14]. however, there have been
some attempts to approximately solve kemeny optimal
aggregation [15]. ailon et al. [16] presents a solution to
the feedback arc set problem on tournaments, which can
be applied to rank aggregation for a 2-approximation of
kemeny optimal aggregation. we use this approach, which
we refer to as approximate kemeny; and we show here
that it satis   es a relaxation of kemeny optimality and the

extended condorcet criterion.

approximate kemeny can be described simply as a
quick sort on elements based using the majority prece-
dence relation     as a comparator, where di     dj if the
majority of input rankings has ranked di before dj. note
that, the relation     is not transitive, and hence different
comparison sort algorithms can produce different rankings.
in [14] dwork et al. propose the use of bubble sort, which
also leads to an aggregation that satis   es ecc, but comes
with no approximation guarantees. this approach, which
they refer to as local kemenization, is one of the baselines
in our experiments.

by extension from quick sort, it can be easily shown
that approximate kemeny runs in o(rm log m). we show
below that approximate kemeny also produces an aggre-
gation that satis   es the following optimality criterion.

definition 4.1. a permutation    is locally kemeny op-
timal [14], if there is no full list    + that can be obtained
from    by a single transposition of an adjacent pair of
elements, such that, k(   +,   1, ...,   r) < k(  ,   1, ...,   r).

lemma 4.1. the    nal aggregation    of the approximate
kemeny procedure produces a locally optimal kemeny
order.

proof: every element in the    nal order is compared at
least once with its neighboring elements in the quick sort
procedure. as such, di is placed immediately to the left
of dj only if di is preferred to dj by a majority of input
rankings. so, swapping any such adjacent elements can only
increase the number of input rankings that disagree with
this ordering, thus increasing the total kendall tau distance.
hence approximate kemeny is locally kemeny optimal. (cid:4)

theorem 4.1. let    be the    nal aggregation of the ap-
proximate kemeny procedure. then    satis   es the extended
condorcet criterion with respect
to the input rankings
  1,   2, ...,   r.

proof: the proof follows directly from lemma 6 of [14].
if the claim is false then there exist rankers   1,   2, ...,   r, an
approximate kemeny aggregation   , and a partition (t, u )
of the elements where for all a     t and b     u the majority
among   1,   2, ...,   r prefers a over b, but there is a c     t
and a d     u such that d > c in   . let (d, c) be a closest
such pair in   . consider the immediate successor of d       ,
and call it e. if e = c then c is adjacent to d        and
transposing this adjacent pair of elements produces a    +
such that k(   +,   1, ...,   r) < k(  ,   1, ...,   r), contradicting
lemma 4.1 that    is a locally kemeny optimal aggregation
of the   1,   2, ...,   r. if e does not equal c, then either e is
in t , in which case the pair (d, e) is a closer pair in    than
(d, c) and also violates the extended condorcet criterion,
or e is in u , in which case (e, c) is a closer pair than (d, c)
that violates the extended condorcet criterion. both cases

algorithm 1 supervised kemeny ranking (skr)

input:   i = [  i1, ...,   im],    i = 1, ..., r, ordered arrangement
of m candidates for r rankers.
w = [w1, ..., wr]     where wi is the weight of ranker i
   = [  1, ...,   m]     initial ordered arrangement of m candidates
k     the number candidates to consider in each ranker   s prefer-
ence list (k     m)
output:        rank aggregated arrangement of candidates in
decreasing order of importance

for each candidate i = 1 to k-1

for each candidate j = i + 1 to k

1) initialize majority table mi,j     0,    i, j = 1, ..., m
2) for each ranker p = 1 to r
3)
4)
5)
6) quick sort   , using m  i ,  j . if m  i ,  j     m  j ,  i > 0
then   i is greater than   j. if m  i ,  j     m  j ,  i = 0 then
  i is equal to   j. if m  i,  j     m  j ,  i < 0 then   i is
less than   j.

m  pi,  pj     m  pi ,  pj + wp

7) return   

contradict the choice of (d, c).

(cid:4)
the pseudo-code for supervised kemeny ranking is
presented in algo. 1. in order to accommodate supervision,
we extend approximate kemeny aggregation to incorporate
weights associated with each input ranking. the weights
correspond to the relative utility of each ranker, which
may depend on the task at hand. for the task of in   uence
prediction in twitter, we weigh each ranker based on its
(normalized) auc computed on a training set of candidates,
for which we know the target variable i.e., the true retweet
rates. when evaluating on average precision, we use
weights based on average precision instead. for supervised
kemeny ranking we incorporate weights directly in sorting
the elements through quick sort. instead of comparing
candidates based on the preference of the simple majority
of individual rankers, we use a weighted majority. this
can be achieved simply by using weighted votes during the
creation of the majority table m     which represents the sum
of weights of the rankers who prefer the row candidate to
the column candidate for each pairwise comparison.

instead of using total orderings provided by each
ranker, we can also use partial orderings (for a subset of
candidates). since identifying relevant candidates at the top
of the list is usually more important, we use the partial
orderings corresponding to the top k candidates for each
ranker. in our experiments, unless otherwise speci   ed, we
use the top-ranked 15% of candidates for each ranker.

v. empirical evaluation
we compared supervised kemeny ranking to using in-
dividual rankings, id28 using all input rank
scores as features, local kemenization [14], borda aggre-
gation, and a supervised version of borda aggregation. we
also compared to id166rank [17], which is a supervised
approach that tries to optimize performance on auc.

for supervised borda, we incorporate performance-
based (auc/ap) weights in borda aggregation. this is rela-
tively straightforward, where instead of simple averages, we
take weighted averages of borda scores. a similar approach
to supervised borda was used in [18], where weights were
based on average precision of each ranker for a meta-search
task. while, supervised versions of borda appear in prior
work, to our knowledge, we present the    rst supervised
version of kemeny aggregation.4

in order to verify the effectiveness of each component
of supervised kemeny ranking, we performed several
ablation studies. in particular, we compared supervised
kemeny ranking to the following variations of algo. 1:

    unsupervised, total orderings: using

uniform
weights (wi = 1,    i), and k = |s|, which reduces
to the unsupervised approximation to kemeny
aggregation on total orderings.

    supervised, total orderings: k = |s|, i.e., supervised

kemeny ranking on total orderings.

    unsupervised, partial orderings: using uniform

weights (wi = 1,    i).

    supervised, bubble sort: using bubble sort instead
of quick sort in step 6. this can be viewed as a
supervised version of local kemenization [14].

a. twitter network study: we compared our approach,
supervised kemeny ranking, to the different supervised
and unsupervised techniques described above on the task
of predicting viral potential, as in sec. ii. as inputs to
each aggregation method we use the 13 different measures
listed in table i. each measure is used to produce a total
ordering of preferences over the 9,625 candidates (twitter
users), where ties are broken randomly. we compared
the 10 aggregation methods (see table ii) to individual
rankers, but
the
best individual measure (past retweets) in the table. we
averaged performance, measured by auc and average
precision@100, over 10 runs of random strati   ed train-test
splits for different amounts of data used for training. these
results are summarized in tables ii and iii.

in the interest of space we only list

we note that, in terms of auc, in general, aggrega-
tion techniques perform better than using past retweets,
which is the best individual ranker. however, apart from
supervised kemeny ranking, this is not always the case for
average precision. so one must use rank aggregation with
caution, depending on the desired performance metric. the
results also show that our version of supervised borda per-
forms better than traditional borda aggregation. however,
local kemenization, outperforms supervised borda, show-
ing the bene   t of kemeny-based aggregation versus borda   s
score-based aggregation. our approach, of supervised ke-

4a very preliminary version of our work appears in [19]

meny ranking, further improves on this result, with the best
performance at all points in terms of average precision,
and 3 of 4 points in terms of auc. id28
is a little better than supervised kemeny ranking at one
point in terms of auc. however, overall id28
is less effective than the other aggregation methods, occa-
sionally performing worse than the best individual ranker.
supervised kemeny ranking, also outperforms id166rank,
consistently on all training sample sizes, in both auc and
ap.5

our ablations studies show that every component of
supervised kemeny ranking does contribute to its superior
performance. in particular, we see that supervised variants
of algo. 1 perform better than unsupervised variants. also,
focusing on the top k elements from each individual
ranker (partial orderings) is more effective that using total
orderings. finally, using the quick sort approximation
to kemeny aggregation makes a notable difference over
using bubble sort. as mentioned earlier, the bubble sort
variation, as used by dwork et al. [14] comes with no
approximation guarantees, which makes a perceptible dif-
ference in practice. in addition to using auc-based weights
for supervised kemeny ranking, we also experimented
with alternative weighting schemes in algo. 1, such as,
(au c     0.5) and (log(au c/(1     au c))). however, in
experiments (not presented) the simple auc based weights
outperformed other weighting schemes by a margin of
2     5%.

learning curves comparing our approach to existing
baselines are presented in fig. 1. we observe that, while
id28 performs well with ground truth on a
large number of candidates, its performance drops signi   -
cantly with lower levels of supervision. in contrast, the rank
aggregation methods are fairly stable, consistently beating
the best individual ranking and performing better than lo-
gistic regression in the more realistic setting of moderately-
sized training sets. the consistently good performance of
supervised kemeny ranking con   rms the advantages of
supervised locally optimal order-based ranking compared to
score-based aggregation, such as borda, and unsupervised
methods.

while fig. 1 shows the performance in terms of area
under the roc curve for different sample sizes, in fig. 2 we
present the roc curves for a single point (1,920 training
samples). we contrast supervised kemeny ranking, with
the methods most commonly used in practice, namely,
number of followers and follower id95 (e.g., as done
by twitaholic.com and tunrank.com). note that, all other
baselines in this paper are devised by us, and are much
better than these approaches. we observe that supervised

5note that, while some absolute differences may appear small, a relative
improvement of 1% is considered to be substantial in ranking domains
such as web search (see fig. 1 of [20]).

 90

 85

 80

 75

 

%
c
u
a

 70

 200

borda
id28
past retweets
local kemninization
supervised kemeny ranking

 400

 600

 800

 1000

 1200

 1400

 1600

 1800

 2000

training sample size

fig. 1. auc performance of rank aggregation techniques with increasing
training data.

ranking method
supervised kemeny ranking
past retweets
id28
borda
supervised borda
local keminization
id166 rank

unsupervised, total orderings
supervised, total orderings
unsupervised, partial orderings
supervised, bubble sort

training samples

320
92.97
89.47
46.87
91.02
91.50
92.03
87.98

88.49
88.89
92.73
92.23

480
92.52
88.86
70.92
90.78
91.09
91.68
89.33

88.29
88.36
92.42
91.88

table ii

960
93.28
89.73
87.02
90.95
91.22
91.78
92.15

89.91
89.92
92.72
92.03

1920
93.00
90.20
93.26
91.14
91.62
92.11
92.79

89.35
89.51
92.58
92.27

rank aggregation performance measured in auc(%) for

various training set sizes.

kemeny ranking performs 5 to 8% better in terms of auc
and 54 to 55% better in terms of ap compared to current
practice.

e

t

a
r
 

e
v
i
t
i
s
o
p

 

e
u
r
t

 1

 0.9

 0.8

 0.7

 0.6

 0.5

 0.4

 0.3

 0.2

 0.1

 0

 0

supervised kemeny ranking
follower id95
followers

 0.2

 0.4

 0.6

 0.8

 1

false positive rate

fig. 2. roc curves comparing supervised kemeny ranking to popular
measures in practice.

b. citation network study:
in addition to twitter data,
we also performed a case study on publication citation
networks. for this we used a collection of papers with
their citations that was used in the kdd cup contest
held in 2003.6 this data consists of 1,716 papers in the
   eld of high energy physics theory (hep-th), published
on arxiv.org during a 6 month period. the data set also
contains the number of times each paper was downloaded
during the 60 day period after it was published on arxiv.org.
this download information gives us an extrinsic proxy

6http://www.cs.cornell.edu/projects/kddcup/

ranking method
supervised kemeny ranking
past retweets
id28
borda
supervised borda
local keminization
id166 rank

unsupervised, total orderings
supervised, total orderings
unsupervised, partial orderings
supervised, bubble sort

320
0.7242
0.7210
0.3255
0.2600
0.3000
0.5240
0.1732

0.6982
0.6994
0.7018
0.5273

training samples

480
0.6837
0.6610
0.4862
0.2600
0.2733
0.4938
0.3180

0.5998
0.6024
0.6622
0.4963

960
0.6991
0.6766
0.6662
0.2333
0.2366
0.4768
0.3990

0.6706
0.6826
0.6745
0.4772

1920
0.6783
0.6668
0.6219
0.2133
0.2334
0.4891
0.3996

0.6357
0.6521
0.6619
0.4930

table iii

rank aggregation performance measured in average

precision@100 for various training set sizes.

for the in   uence of a paper. as such, we de   ne the task
of predicting highly in   uential papers, as measured by
downloads, based on the citation data of the papers. if a
paper received 600 or more downloads, we consider it as
a high-in   uence paper (77 papers); else we consider it to
have little or no in   uence.

first, we constructed a citation graph based on all
publications in hep-th, which was also provided as part of
kdd cup 2003. in this citation graph, each node represents
a paper and each edge represents a citation. as of may 1,
2003, there were 29,014 papers and 342,427 citations in
total in the hep-th data. next, for each of the 1,716 papers
with download information, we used this citation graph
to compute 5 in   uence measures - indegree, outdegree,
id95, hub and authority score [21].

we ran experiments as before, using 20% of the data
(343 papers) for training the supervised methods, and
setting k to 1,200 in algo. 1. the results in terms of auc
and average precision for each method are presented in
table iv. as expected, the number of papers citing a given
paper (in-degree) is a good indicator of how often the paper
will be downloaded. furthermore, having more citations
from highly-cited papers, as captured by id95 is a
better indicator of in   uence in this data. note that, this
was not the case in predicting viral potential in twitter.
the number of papers a paper is citing (out-degree) and
hub-score have some, though weaker, ability to predict
in   uence. this is probably because some survey papers do
become in   uential if they refer to many good papers in that
area.

in this study we    nd that not all aggregation techniques
are better than using individual rankers. in particular, high
in-degree is very correlated with high download rates, as
re   ected by average precision. so depending on the data
and the id74, one should always consider
using the best
individual ranker along with alternative
aggregation methods. nevertheless, in terms of auc, su-
pervised kemeny ranking still produces the best ranking,
outperforming individual rankers and other aggregation
techniques. the results on the ablation studies are similar

measure
id95
indegree
authority
outdegree
hub
supervised kemeny ranking
id28
borda
supervised borda
local keminization
id166rank

unsupervised, total orderings
supervised, total orderings
unsupervised, partial orderings
supervised, bubble sort

auc %
81.09
80.42
80.39
64.33
61.07
81.70
76.02
77.47
78.27
76.62
77.59

80.12
80.30
80.23
79.17

ap
0.4470
0.5376
0.5324
0.2820
0.2867
0.4950
0.5330
0.2363
0.2787
0.3668
0.4625

0.3518
0.4902
0.4928
0.4798

comparing ranking methods for identifying influential

papers, based on auc and average precision@60.

table iv

to before, further corroborating the contribution of each
component of the supervised kemeny ranking algorithm.

vi. related work
an associated growing area of research attempts to explain
content and link structures in social media, together with
their temporal evolution, based on tensor factorizations and
higher order extensions of techniques such as singular
value decomposition (svd) [22], [23]. recently, weng et
al. [24] propose twitterrank, a variant of id95 that
also takes topical similarity between users into account.

another interesting approach to quantitatively evalu-
ating the ranking of blogs is through the task of cascade
detection - selecting a set of blogs to read which link to
most of the stories that propagate over the blogosphere.
current solutions [25], [26] to this task do not attempt
to address the task of assigning an in   uence score to
individual bloggers, since they are focused on optimal set
selection. however, there is a lot of potential for using such
approaches to identify in   uencers.

in related work on rank aggregation, liu et al. [27]
present an alternative supervised approach for the task of
web-search     where they build on a markov chain (mc)
based approach to rank aggregation. however, it has been
shown that local kemenization improves on mc-based
approaches [14], which in turn, we show is outperformed
by supervised kemeny ranking.

in concurrent work on the analysis of twitter, cha
et al. [28] also conclude that number of followers alone
reveals little about a user   s in   uence. we go further in our
work, by comparing many more socio-metrics on differ-
ent tasks, and providing approaches to improve in   uence
prediction through rank aggregation. in recent work, suh et
al. [29] analyze factors that correlate with retweeting. while
they consider in- and out-degrees of the follower graph,
they do not look at other graphs, such as the retweet graph,
or other socio-metrics, such as id95. furthermore,
since their study only uses randomly sampled tweets, they

are limited to a very small subset of retweets. in contrast,
we collect all retweets for all users in our study.

in addition to id166rank,

there have been several
recent advances in learning to rank [30], [31], driven largely
by the application to web search. all of these approaches
produce a ranked list as an output. in their seminal work,
dwork et al. [14], showed how rank aggregation can be
used to improve on meta-search, by combining individual
search rankings. since, we demonstrate that supervised
kemeny ranking performs better than their local kem-
enization approach, we are hopeful that it can be used
to aggregate the rankings from different learning to rank
methods,
to improve results on web search and other
applications.

in recent work, ghosh and lerman [32] evaluate
various in   uence models based on geodesic-path based
distance measures and topological ranking measures. they
propose a normalized   -centrality algorithm and evaluate
its effectiveness on measuring in   uential users in digg.com.
their work aims to    nd the best individual socio-metric
and does not intend to improve the predictive accuracy
by combining various in   uence models. however, as we
have shown in this paper, often individual socio-metrics
fail
to capture all critical factors that are relevant for
predicting in   uence in networks. presumably, one could
use the normalized   -centrality algorithm as another input
ranker to supervised kemeny ranking, to further improve
predictive performance.

the work by agarwal et al. [33] does a

empirical
study on identifying in   uential people in blog networks.
they propose 4 main features that produce in   uence in the
bloggers network, based on recognition, activity, novelty,
and eloquence. they weigh these four features to produce
a combined score for each blogger. in [34], sayyadi and
getoor predict
the popularity of a paper using its ex-
pected future citations. they propose f uturerank, which
combines the id95 score of a paper in the citation
network, the authority score in the authorship network, and
the recency of the publication. both [33] and [34] propose
a score-based model, where they combine the scores from a
set of features de   ned on the underlying network data. note
that, neither of the methods are supervised and they require
further enhancements to accommodate such supervision. in
addition, their methods are score-based aggregations, and
not order-based. both dwork et al. [14] and this paper
shows clearly the inef   ciency of weighted combination of
score-based algorithms compared to order-based.

vii. conclusion and future work
understanding in   uence within blog and micro-blog net-
works has become a crucial technical problem with in-
creasing relevance to marketing and information retrieval.
we address the problem of assessing in   uence by casting

it in the form of a predictive task; which allows us to
objectively compare different measures of in   uence in light
of standard classi   cation and ranking metrics. furthermore,
we propose a novel supervised rank aggregation method,
which combines aspects of different in   uence measures
to produce a composite ranking mechanism that is most
effective for the desired task. we have applied this approach
to a case study involving 40 million twitter accounts, and
have examined the task of predicting the potential for
viral out-breaks. we further corroborated these results on
the task of identifying in   uential papers based on citation
networks. empirical results show that our proposed ap-
proach, supervised kemeny ranking, performs better than
several existing rank aggregation techniques, as well as
other supervised learning benchmarks.

the problem of choosing the optimal kemeny order
can be formulated as a mixed-integer programming problem
as discussed in [35]. however, the problem of    nding
the optimal weights for supervised kemeny ranking is
much more dif   cult, as it involves a quadratic objective
function, with two sets of variables; one for selecting the
optimal weights and one for the optimal order. an ef   cient
algorithm to solve this optimization could signi   cantly
improve results, and is a promising direction for future
work.

acknowledgements
we would like to thank estepan meliksetian for the help
in gathering the twitter data set. we are also grateful to
claudia perlich, richard lawrence and andrew davenport
for their suggestions and comments on this work.

references

[1] e. bakshy, b. karrer, and l. adamic,    social in   uence and

the diffusion of user-created content,    in acm ec, 2009.

[2] m. goetz, j. leskovec, m. mcglohon, and c. faloutsos,

   modeling blog dynamics,    in icwsm, 2009.

[3] g. kossinets, j. kleinberg, and d. watts,    the structure of
information pathways in a social communication network,   
in kdd, 2008.

[4] j. moreno, who shall survive? foundations of sociometry,
nervous and

group psychotherapy and sociodrama.
mental disease publishing co., 1934.

[5] d. knoke and r. burt, applied network analysis. newbury

park, ca: sage, 1983, ch. prominence.

[6] s. wasserman and k. faust, social network analysis: meth-
ods & applications. cambridge, uk: cambridge university
press, 1994.

[7] j. borda,    memoire sur les elections au scrutin,    in histoire

de l   academie royale des sciences, 1781.

[11] k. arrow,    social choice and individual values.   

new

haven: cowles foundation, 2nd edition 1963.

[12] m. truchon,    an extension of the condorcet criterion and

kemeny orders,    in j. eco. lit., 1998.

[13] h. young and a. levenglick,    a consistent extension of
condorcet   s election principle,    in siam j. on app. math,
vol. 35(2), 1978.

[14] c. dwork, r. kumar, r. naor, and d. sivakumar,    rank

aggregation methods for the web,    in www, 2001.

[15] f. schalekamp and a. van zuylen,    rank aggregation:

together we   re strong,    in alenex, 2009, pp. 38   51.

[16] n. ailon, m. charikar, and a. newman,    aggregating
inconsistent information: ranking and id91,    j. acm,
vol. 55, no. 5, 2008.

[17] t. joachims,    training linear id166s in linear time,    in kdd,

[18] j. a. aslam and m. montague,    models for metasearch,    in

2006.

sigir, 2001.

[19] p. melville, k. subbian, c. perlich, r. lawrence, and
e. meliksetian,    a predictive perspective on measures of
in   uence in networks,    in proceedings of the workshop on
information in networks, 2010.

[20] z. zheng, h. zha, t. zhang, o. chapelle, k. chen, and
g. sun,    a general boosting method and its application to
learning ranking functions for web search,    in nips, 2007.
[21] j. kleinberg,    authoritative sources in a hyperlinked envi-

ronment,    in j. acm, 1999.

[22] t. kolda and b. bader,    the tophits model for higher-
order web link analysis,    in sdm workshop on link analy-
sis, counterterrorism and security, 2006.

[23] y. chi, s. zhu, x. song, j. tatemura, and b. tseng,
   structural and temporal analysis of the blogosphere through
community factorization,    in kdd, 2007.

[24] j. weng, e.-p. lim, j. jiang, and q. he,    twitterrank:
finding topic-sensitive in   uential twitterers,    in wsdm,
2010.

[25] j. leskovec, a. krause, c. guestrin, c. faloutsos, j. van-
briesen, and n. glance,    a cost-effective outbreak detection
in networks,    kdd, 2007.

[26] d. kempe, j. kleinberg, and e. tardos,    maximizing the
spread of in   uence through a social network,    in kdd, 2003.
[27] y.-t. liu, t.-y. liu, t. qin, and h. li,    supervised rank

aggregation,    in www, 2007.

[28] m. cha, h. haddadi, f. benevenuto, and k. gummadi,
   measuring user in   uence in twitter: the million follower
fallacy,    in icwsm, 2010.

[29] b. suh, l. hong, p. pirolli, and e. h. chi,    want to be
retweeted? large scale analytics on factors impacting retweet
in twitter network,    in socialcom, 2010.

[30] y. freund, r. iyer, r. schapire, and y. singer,    an ef   cient
boosting algorithm for combining preferences,    in jmlr,
2003.

[31] c. j. c. burges, k. m. svore, p. n. bennett, a. pastusiak,
and q. wu,    learning to rank using an ensemble of lambda-
gradient models,    in jmlr, 2011, pp. 253   35.

[32] r. ghosh and k. lerman,    predicting in   uential users in

online social networks,    in sna-kdd, 2010.

[33] n. agarwal, h. liu, l. tang, and p. s. yu,    identifying the

[8] j. kemeny,    mathematics without numbers,    in daedalus,

in   uential bloggers in a community,    in wsdm, 2008.

vol. 88, 1959, pp. 571   591.

[9] t. fawcett,    an introduction to roc analysis,    in pattern

recognition letters, vol. 27, 2006, pp. 861   874.

[34] h. sayyadi and l. getoor,    futurerank: ranking scienti   c
articles by predicting their future id95,    in sdm, 2009.
[35] v. conitzer, a. j. davenport, and j. kalagnanam,    improved

[10] r. baeza-yates and b. ribeiro-neto,    modern information

retrieval.    addison wesley co, 1999.

bounds for computing kemeny rankings,    in aaai, 2006.

