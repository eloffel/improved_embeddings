2
1
0
2

 
r
p
a
7
2

 

 
 
]
h
c
e
m

-
t
a
t
s
.
t
a
m
-
d
n
o
c
[
 
 

2
v
9
6
3
4

.

1
0
2
1
:
v
i
x
r
a

exact solution of bond percolation on small arbitrary graphs

antoine allard, laurent h  ebert-dufresne, pierre-andr  e no  el, vincent marceau, and louis j. dub  e

d  epartement de physique, de g  enie physique, et d   optique,

universit  e laval, qu  ebec (qc), canada g1v 0a6

(dated: october 9, 2018)

we introduce a set of iterative equations that exactly solves the size distribution of components on
small arbitrary graphs after the random removal of edges. we also demonstrate how these equations
can be used to predict the distribution of the node partitions (i.e., the constrained distribution of the
size of each component) in undirected graphs. besides opening the way to the theoretical prediction
of percolation on arbitrary graphs of large but    nite size, we show how our results    nd application
in id207, epidemiology, percolation and fragmentation theory.

pacs numbers: 64.60.aq, 64.60.ah, 02.10.ox

introduction.    percolation on graphs is the study of
the behavior of components in graphs whose nodes/edges
are removed randomly. it has received a lot of attention
recently for its various applications in many disciplines.
among them, let us mention the modeling of epidemic
propagation [1   4] where the size distribution of compo-
nents corresponds to the outbreak size distribution. the
same distribution is also related to the size and compo-
sition of fragments in nuclear multifragmentation [5   8].
finally, the study of the percolation threshold allows an
assessment of the robustness (or reliability) of real net-
works to the failure of their nodes or edges [9   14]. along-
side the intrinsic theoretical interest, this type of stud-
ies has triggered the development of increasingly realistic
and complex models (see [15   17], and references therein).
in the quest for ever more realistic models, a promis-
ing idea is to consider real networks not at the level of
the nodes, but at higher levels of organization such as
motifs, subgraphs or communities. it has recently been
proposed that this perspective could help unify and ex-
plain many of the universal properties found in real net-
works [18]. from the modeling perspective, using motifs
as the fundamental building blocks of graphs has allowed
to relax some of the limiting assumptions behind exist-
ing bond percolation models [19   22]. this has e   ectively
extended the class of models for which exact results can
be obtained.

the advantages gained come at a price however: one
needs to solve beforehand the distribution of the size of
components in these motifs. while this can be done
systematically for erd  os-r  enyi subgraphs (or cliques)
[14, 22], the general problem must be solved by hand on
a case-by-case basis. hence, one is either limited to very
small graphs or one has to rely on numerical simulations.
in this letter, we introduce a set of iterative equations
that exactly compute the size distribution of components
in a multitype version of erd  os-r  enyi graphs.
in the
case where a di   erent type is assigned to each node of
a graph, the equations produce this distribution for any
small arbitrary graphs, de   ned by an asymmetric non-
negative adjacency matrix, after the random removal of

its edges. these equations therefore provide a systematic
way to compute the required distributions in the motif-
based bond percolation models mentioned previously.

we further show how these equations naturally o   er a
method to count the number of labeled multitype graphs
with a given number of nodes and edges. we also explain
how they can be used to study bond percolation on pe-
riodic in   nite lattices. we    nally demonstrate how these
equations allow the exact calculation of the constrained
distribution of the size of each component, or the parti-
tion of nodes, in undirected graphs. it is suggested that
this provides a null model for fragmentation processes.

percolation on multitype random graphs.    let us
consider a multitype generalization of the random graph
model gn,p [14]. these graphs are composed of n nodes
and an edge exists between any two nodes with probabil-
ity p regardless of other potential edges. we generalize
this model by labelling nodes using m types such that a
graph of size n     (n1, . . . , nm )t is composed of ni type-i
nodes (with i = 1, . . . , m ). directed edges from type-i
nodes to type-j nodes (noted i     j) exist with proba-
bility pij independently of one another. pij need not be
equal to pji since edges are directed. results statistically
equivalent to undirected graphs     where an undirected
edge exists with a given id203     are obtained in
the symmetric case (pij = pji). while the usefulness
of this multitype generalization will become manifest in
the next section, multitype erd  os-r  enyi graphs can be
used as a    rst approximation of structures in which cor-
relations exist in the way nodes are connected (with an
appropriate choice of pij).

we de   ne qi(l|n) as the id203 that the com-
ponent reached from a type-i node contains l    
(l1, . . . , lm )t nodes (including the initial type-i node)
given that the graph contains n nodes. because of the
presence of directed edges, we extend the de   nition of
a component to all nodes accessible from a given node.
thus, node a being in the component reached from node
b does not imply that the converse is true. in the same
spirit of [14, 22], we now derive two recurrence equations
allowing for the explicit calculation of qi(l|n).

2

(a)

(b)

fig. 1. (color online) (a) example of an arbitrary graph of 20 nodes. although not shown here, graphs with multiple edges
could as easily be considered by our method. (b) distribution of the size of the component reached from a randomly chosen
node in the graph shown in (a) where edges have been removed with id203 1     t . lines were obtained using eqs. (2)   (4),
and symbols were obtained by performing 107 simulations. the distributions are discrete; lines have been added to guide the
eye.

lj     ij

(cid:1) ways to choose

let us consider a graph of size n, a component of size l,
and an initial node of type i. we note   ij the kronecker
delta. among the nj       ij nodes of type j (excluding the

initial node of type i), there are(cid:0)nj     ij
id203 (cid:81)

the lj type-j nodes that are part of the component. these
lj type-j nodes will not lead to any of the remaining
n     l nodes that are not part of the component with
, where qjk     1     pjk. in other
words, this is the id203 that no directed edge j     k
exists between the lj type-j nodes in the component and
the n     l nodes of every other types excluded from it.
repeating this procedure for the other types of nodes in
the component, together with the observation that the
l nodes form a component with id203 qi(l|l), we
have that

k qlj (nk   lk)

jk

qi(l|n) = qi(l|l)

qlj (nk   lk)

jk

.

(1)

(cid:19)

(cid:89)

jk

(cid:18)nj       ij

lj       ij

that is, by knowing the id203 of    nding a compo-
nent of size l in a graph of size l, eq. (1) computes the
id203 of    nding a component of size l in a graph
of size n (with nj     lj for all j). finally, to obtain
qi(l|l), we note that the distribution {qi(m|l)} must be
normalized for a given graph size l, hence

qi(l|l) = 1    

qi(m|l) .

(2)

(cid:88)

m<l

the sum covers every possible instances of m such that
mj     lj for all j but excludes the case where mj = lj for
each j. starting with the initial condition qi(  i|  i) = 1,
where   i     (  i1, . . . ,   im )t, we can therefore calculate
every coe   cient qi(l|n) using eqs. (1)   (2) iteratively. in

using the identity 1 = (cid:81)
of (cid:81)

other words, from a graph made out of a single node,
eqs. (1)   (2) extend the graph to the desired size, and keep
track of the component size distribution along the way
to build the    nal distribution qi(l|n). a simple example
of such a calculation is given in the appendix. setting
m = 1, we retrieve the recurrence equations presented
in [14, 22]. also, a similar approach has been used to
analyse the reliablity of communication networks [13].
j,k(pjk + qjk)nj (nk     jk) in
eq. (2), where nj(nk       jk) is the maximal number of
j     k edges in the graph, the iteration of eqs. (1)   (2)
yields polynomials whose coe   cients have a direct com-
binatorial interpretation. indeed, the coe   cient in front
jk in qi(l|n) is simply the number of dis-
tinct ways to reach a component of size l in a graph of
size n from a type-i node using ajk existing and bjk ab-
sent j     k edges, respectively. the sum ajk + bjk may
be di   erent than nj(nk       jk) as the existence of some
edges may be irrelevant to the component. of particuliar
interest is the symmetric case where pjk = pkj for all j
and k for which qi(n|n) is independent of i and whose
coe   cients are the number of connected labeled graphs
of size n. hence, we see that eqs. (1)   (2) o   er an alter-
native method to enumerate the number of graphs with
a given number of edges and labeled nodes of di   erent
types.

j,k pajk

jk qbjk

percolation on arbitrary graphs.    by considering
that each node of an arbitrary graph belongs to its own
type, eqs. (1)   (2) can exactly predict the outcome of a
bond percolation process that has occurred on it. pre-
dicting the outcome here is as precise as knowing the
identity of the nodes that have been reached and of the
ones that have not. to illustrate this point, let us con-

10   410   310   210   110005101520id203sizet=0.2t=0.5t=0.6t=0.8t=0.9sider the simplest case where an edge is to be kept with
the same id203 t during the percolation process
[23]. the id203 pjk for the edge j     k to exist
then becomes pjk = 1     (1     t )ajk , where ajk     n is an
element of the adjacency matrix a corresponding to the
number of directed edges from node j to node k. arbi-
trary graphs with directed edges and multiple edges can
thus be considered with our method.

because each node belongs to its own type, the ele-
ments of the vectors l, m and n indicate whether each
node is present (value 1) or not (value 0). this allows us
to write eq. (1) in a simpler and more compact form

qi(l|n) = qi(l|l)(1     t )lta  l ,

(3)

where the elements of   l are de   ned such that lj +   lj = nj
for all j. that is, lta  l is the number of outgoing edges
that must not exist for the component of size l to be
isolated from the rest of the graph. using eqs. (2)   (3)
together with the initial condition qi(  i|  i) = 1, we can
calculate the exact id203 of each individual outcome
of a percolation process on an arbitrary graph de   ned by
its adjacency matrix a.

to support this claim,    g. 1(b) compares the predic-
tions of eqs. (2)   (3) with the results of numerical simula-
tions of bond percolation on the graph shown in    g. 1(a).
to lighten the presentation of the results,    g. 1(b) shows
the id203 qk of    nding a component of size k     re-
gardless of the identity of the nodes     from a randomly
chosen node. this quantity is computed using

(cid:88)

(cid:88)

i

l

qk =

1
m

(cid:16)(cid:80)

(cid:17)

qi(l|n)  

j lj     k

(4)

where   (       ) is the delta function. we observe an excel-
lent agreement between our theoretical predictions and
the numerical results. although for such a small net-
work no precise percolation threshold can be de   ned, it
is however clear that a qualitative change toward a    gi-
ant component    is initiated for t     0.5   0.6. also, the
irregular shape of the distribution for some values of t
highlights how qi(l|n) can depend on the precise struc-
ture of the graph. this advocates for the importance of
developing methods that consider explicitly the structure
of the graphs (i.e., the adjacency matrix).

since eqs. (1)   (3) consider every possible outcomes of
the percolation process, their predictions are exact. how-
ever, the calculational burden (e.g., required memory,
number of operations) increases very quickly with the
number of node types m . in the case of arbitrary graphs,
it grows exponentially with the number of nodes. thus,
although eqs. (1)   (3) are in principle valid for graphs of
any size, their use becomes cumbersome for large graphs.
with our present computer facilities, a straightforward
implementation of eqs. (2)   (3) have been able to handle
graphs of size of the order of 25. a wiser implementa-
tion could certainly push this limit somewhat further.

3

when dealing with a given graph, speci   c features of its
structure may however be used to reduce the numerical
e   ort. for instance, the distributions for di   erent mod-
ules could be solved separately, and then recombined to
obtain qi(l|n) for the whole graph. quantum computa-
tion of the sort described in [24] may also be a solution
for larger graphs.

despite these limitations, our method compares favor-
ably with an exact enumeration method where a com-
puter program explicitly considers each possible edge
con   guration, and then computes the component size dis-
tribution from them. firstly, the computational demands
of this approach scales exponentially with the number of
edges l, whereas our approach scales exponentially with
the number of nodes. the performance of our method
should therefore be comparable to direct enumeration for
sparse graphs, and should rapidly surpass it for denser
graphs. secondly, our method yields analytical solutions
(i.e., polynomial in pjk) valid for any value of pjk.

equations (2)   (3) can also be used to compute the
bond percolation threshold of in   nite periodic lattices.
by virtue of the triangle-triangle transformation [25], the
percolation threshold is the root of a polynomial related
to the connectivity of the basic cell of the lattice, which
is a combination of the coe   cients of qi(l|n). thus our
approach o   ers a systematic and exact way to compute
this polynomial for complicated basic cells. the ap-
pendix provides an example. furthermore, our approach
o   ers a systematic way to obtain the renormalisation-
group transformation to estimate the scaling exponents
and the bond percolation threshold of in   nite lattices (see
for instance eq. (3.4) in [26]).

finally, eqs. (1) and (3) can be combined to compute
qi(l|n) for graphs where nodes of di   erent types inter-
act through an arbitrary con   guration of edges (see [19]
for an explicit example). this allows to generate a wide
range of realistic subgraphs (or motifs) found for instance
in social networks, and to include them in motif-based
bond percolation models [19, 20]. as the component size
distribution is closely related to the outbreak size dis-
tribution, our approach allows to study the spread of
infectious diseases in more realistic urban settings [27].

predicting node partition distribution.    we can also
use eqs. (1)   (3) to calculate the distribution of the num-
ber of components (and their size) found in an undi-
rected graph after the removal of a fraction of its edges.
we restrict ourselves to undirected graphs because only
in undirected graphs are components uniquely de   ned.
that is, two nodes will be found in the same compo-
nent with one unique id203 regardless of the start-
ing node. we illustrate how to perform the calculation
using the gn,p model.
it should nevertheless be clear
that equations for undirected multitype random graphs
(pij = pji for all i and j) and undirected arbitrary graphs
(a = at) can be derived in a similar manner.

let us calculate the id203 for a random graph

labeled objects into k nonempty and unlabeled contain-
ers. indeed { n
k } is simply the sum of every sr such that

r has k elements(cid:26)n
(cid:27)

(cid:88)

r   pn

sr  (cid:0) dim(r)     k(cid:1) ,

=

k

4

(6)

where pn is the set of integer partition of n, i.e., the set
of decompositions of n into a unordered sum of integers
[29].

combining these three contributions, we obtain the
id203 for a random graph composed of n nodes to
be split into k components of size r to be

(cid:89)

l

(cid:89)

i<j

p (r) = sr

q(rl|rl)

(1     p)rirj .

(7)

to validate eq. (7),    g. 2 compares its predictions with
the results obtained from numerical simulations of the
gn,p model for n = 12 and for various values of p. again,
an excellent agreement between our theoretical predic-
tions and the results of the numerical simulations is ob-
served. figure 2 highlights the emergence of a    giant   
component     which occurs when (n     1)p = 1 in the
limit n             as the distribution migrates toward par-
titions with fewer components with increasing p. it also
shows that, for a same number of components, the parti-
tions with larger components are more likely to occur in
general. although partly shown in    g. 2, this trend holds
for all values of p     [0, 1], and is due to the simple fact
that there are more ways (i.e., possible con   guration of
edges) to build large connected components than small
ones.

our method can also serve as a null model for fragmen-
tation processes. in fact, p (r) is the id203 for n el-
ements to be distributed among r fragments when bonds
occur (or resist) randomly with id203 p. physical
correlations can therefore be highlighted by comparing
p (r) with experimental data. similar results for gn,m
[30], where the number m of edges (or energy) is    xed

rather than its average value (cid:0)n

(cid:1)p, have recently been

used in the context of nuclear multifragmentation [5]. as
gn,p and gn,m can be seen as the    canonical    and    micro-
canonical    version of erd  os-r  enyi random graphs, the
results for gn,m in [5] can be reobtained using our equa-
tions (see the number of connected graphs at the end of
the second section). our method therefore emcompasses
previous results, and    lls the gap in contexts where the
canonical approach is more relevant.

2

conclusion.    we have introduced a set of iterative
equations that computes the distribution of the size of the
components in small random or arbitrary graphs. as di-
rected and multiple edges can naturally be accounted for
in the equations, our method is suitable for a wide range
of arbitrary graphs. because the equations consider sys-
tematically all possible outcomes of the bond percolation

fig. 2. (color online) id203 of    nding each node par-
tition in gn,p with n = 12 and for various values of p. lines
were obtained using eq. (7), and symbols were obtained by
performing over 5    108 simulations. the |p12| = 77 integer
partitions of 12 are displayed in an increasing order of the
number of components, i.e., from the node partition where
there is only one component (noted {12}) on the left to the
case where there are 12 components of one single node (noted
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}) on the right. linebreaks and
vertical grey lines indicate where the number of components
changes. node partitions with the same number of compo-
nents are displayed in an decreasing order of the largest com-
ponents sizes (e.g., {8, 2, 2} before {7, 4, 1} before {7, 3, 2}).

size r     (r1, r2, . . . , rk) with (cid:80)

composed of n nodes to be split into k components of
i ri = n. each com-
ponent l will be connected, and therefore be a compo-
nent, with id203 q(rl|rl). we have dropped the
subscript in q(rl|rl) because the id203 to    nd one
single connected component in an undirected graph is
the same regardless of the starting node. these com-
ponents will be isolated from one another if none of the
(cid:81)
possible edges between nodes of di   erent components ex-
ist. for the whole graph, this happens with id203
i<j(1     p)rirj where p is the id203 for an edge to
the remaining step is to count the number of ways
the n nodes can be divided into r components, which
we note sr. this number is in fact equal to the number
of ways to put n labeled objects into k nonempty and
unlabeled containers of size r1, r2, . . . , and rk. first, let
us point out that the number of ways to put n labeled
objects into k labeled containers whose sizes are given
i ri!. to
obtain sr, we just remove the redundant con   gurations
due to containers of the same size. hence, noting dm    
i   (m     ri) the number of containers of size m, we get

by r is simply the multinomial coe   cient n!/(cid:81)
(cid:80)

exist between any two nodes.

((cid:81)

m dm!) ((cid:81)

n!

sr =

.

i ri!)

(5)

note that sr is related to the stirling number of the sec-
ond kind { n
k } [28] giving the number of ways to put n

10   710   610   510   410   310   210   1100id203partitionsp=0.01p=0.10p=0.30process, their predictions are exact. we have also demon-
strated that they can be used to calculate the constrained
distribution of the size of each component (i.e., node par-
tition) for undirected small graphs. we have illustrated
how these results    nd applications in various disciplines
like id207, percolation theory, epidemiology and
fragmentation theory. we believe that, despite the in-
creasing unwieldiness of the calculation with the number
of nodes, our results open the way to the theoretical pre-
diction of bond percolation on large, but    nite, arbitrary
graphs.

this work has been supported by the canadian insti-
tutes of health research (cihr), the natural sciences
and engineering research council of canada (nserc),
and le fonds de recherche du qu  ebec - nature et tech-
nologies (frq-nt).

explicit

appendix:

calculation of qi(l|n) and
application.    we perform an explicit calculation of
qi(l|n) to clarify the use of eqs. (1)   (2) and to illustrate
some of our claims.
let us consider a simple graph composed of 3 nodes
of type 0, 1 and 2. the directed i     j edge exists with
id203 pij and there are 6 possible directed edges.
we note qij = 1     pij. we take the node of type 0 as the
starting node without loss of generality as the two other
distributions can be obtained by permutation.

the calculation begins with the initial condition
q0(1, 0, 0|1, 0, 0) = 1 stating the obvious fact that the
id203 of    nding a component l = (1, 0, 0) in a graph
of size n = (1, 0, 0) is 1. equation (1) provides the prob-
ability of    nding the same component but in graphs re-
spectively of size (1, 1, 0), (1, 0, 1) and (1, 1, 1)

q0(1, 0, 0|1, 1, 0) = q01
q0(1, 0, 0|1, 0, 1) = q02
q0(1, 0, 0|1, 1, 1) = q01q02 .

using eq. (2), we then compute the id203 to    nd a
component of size 2 in the graphs of size (1, 1, 0), (1, 0, 1)

q0(1, 1, 0|1, 1, 0) = 1     q0(1, 0, 0|1, 1, 0) = p01
q0(1, 0, 1|1, 0, 1) = 1     q0(1, 0, 0|1, 0, 1) = p02 .

we use once more eq. (1) to compute the id203
of    nding the same components but in a graph of size
n = (1, 1, 1)

q0(1, 1, 0|1, 1, 1) = p01q12q02
q0(1, 0, 1|1, 1, 1) = p02q21q01 .

finally, the id203 of reaching the whole graph of
size (1, 1, 1) is obtained with eq. (2)

q0(1, 1, 1|1, 1, 1) = 1     q01q02     p01q12q02     p02q21q01
= p01p02 + p01p12q02 + p02p21q01 ,

5

where we have used the identity

1 = (p01 + q01)(p02 + q02)(p12 + q12)(p21 + q21)

to obtain a polynomial with positive coe   cients. as
claimed previously, each term in this last polynomial
can be interpreted as a path leading to the component
l = (1, 1, 1), and its coe   cient as the number of distinct
realisations of such a path.

with these results, we show how to compute the per-
colation threshold pc for the in   nite triangular lattice
using the triangle-triangle transformation [25]. setting
pij = p for all i and j in q0(1, 1, 1|1, 1, 1) with q = 1     p,
we retrieve the id203 for the three nodes to be con-
nected in some way, that is p3 +3p2q. remember that for
undirected graphs, the id203 of reaching the entire
graph is independent of the starting node. the triangle-
triangle transformation then stipulates that pc is the low-
est value in [0,1] for which this last id203 is equal to
the id203 q3 that none of the nodes are connected.
thus, pc satis   es

p3
c     3pc + 1 = 0 ,

whose only solution in [0,1] is pc = 2 sin (  /18), which is
the exact value of the bond percolation threshold for the
triangular lattice [31].

this simple example could have been solved without
using eqs. (1)   (2). however, repeating this exercise for
graphs of 4, 5 or 6 nodes should convince the reader
that a systematic procedure, as provided by eqs. (1)   (2),
quickly becomes necessary.

[1] d. j. salkeld, m. salath  e, p. stapp, and j. h. jones,

proc. natl. acad. sci. usa 107, 14247 (2010)

[2] s. davis, p. trapman, h. leirs, m. begon, and j. a. p.

heesterbeek, nature 454, 634 (2008)

[3] l. a. meyers, bull. amer. math. soc. 44, 63 (2007)
[4] s. bansal, b. pourbohloul, and l. a. meyers, plos med

3, e387 (2006)

[5] p. d  esesquelles, phys. lett. b 698, 284 (2011)
[6] a. d  avila, c. r. escudero, j. a. l  opeza, and c. o. dorso,

physica a 374, 663 (2007)

[7] k. paech, w. bauer, and s. pratt, phys. rev. c 76,

054603 (2007)

[8] w. trautmann, nucl. phys. a 752, 402c (2005)
[9] s. v. buldyrev, r. parshani, g. paul, h. e. stanley, and

s. havlin, nature 464, 1025 (2010)

[10] l. k. gallos, r. cohen, p. argyrakis, a. bunde, and

s. havlin, phys. rev. lett. 94, 188701 (2005)

[11] r. albert, h. jeong, and a.-l. barab  asi, nature 406,

378 (2000)

[12] d. s. callaway, m. e. j. newman, s. h. strogatz, and

d. j. watts, phys. rev. lett. 85, 5468 (2000)

[13] a. k. kel   mans, avtomatika i telemekhanika 26, 546

(1965)

[14] e. n. gilbert, ann. math. statist. 30, 1141 (1959)

6

[15] m. e. j. newman, networks: an introduction (oxford

university press, 2010)

[16] r. cohen and s. havlin, complex networks: structure,
robustness and function (cambridge university press,
2010)

one speci   c id203 is assigned for each direction of
each edge.

[24] f. gaitan and l. clark, phys. rev. lett. 108, 010501

(2012)

[25] c. r. scullard and r. m. zi   , phys. rev. lett. 100,

[17] s. n. dorogovtsev, a. v. goltsev, and j. f. f. mendes,

185701 (2008)

rev. mod. phys. 80, 1275 (2008)

[26] p. j. reynolds, h. e. stanley, and w. klein, phys. rev.

[18] l. h  ebert-dufresne, a. allard, v. marceau, p.-a. no  el,

b 21, 1223 (1980)

and l. j. dub  e, phys. rev. lett. 107, 158702 (2011)

[19] a. allard, l. h  ebert-dufresne, p.-a. no  el, v. marceau,

and l. j. dub  e, arxiv:1201.4602(2012)

[27] l. a. meyers, b. pourbohloul, m. e. j. newman, d. m.
skowronski, and r. c. brunham, j. theor. biol. 232, 71
(2005)

[20] b. karrer and m. e. j. newman, phys. rev. e 82, 066118

[28] handbook of mathematical functions, 9th ed., edited by

(2010)

[21] j. p. gleeson, phys. rev. e 80, 036107 (2009)
[22] m. e. j. newman, phys. rev. e 68, 026121 (2003)
[23] the generality of eqs. (1)   (2) naturally allows for the use
of various cases of type-dependent probabilities of exis-
tence of edges, all the way to the most general case where

m. abramowitz and i. a. stegun (dover, 1972)

[29] j. harris, j. l. hirst, and m. mossingho   , combinatorics

and id207, 2nd ed. (springer, 2008)

[30] p. erd  os and a. r  enyi, publ. math. debrecen 6, 290

(1959)

[31] m. f. sykes and j. w. essam, j. math. phys. 5, 1117

(1964)

