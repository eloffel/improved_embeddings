2
1
0
2

 
t
c
o
1

 

 
 
]

.

a
n
h
t
a
m

[
 
 

3
v
0
2
1
3

.

1
0
2
1
:
v
i
x
r
a

ranking hubs and authorities using

matrix functions

michele benzi   , ernesto estrada   , and christine klymko   

abstract. the notions of subgraph centrality and communicability, based on the exponential of
the adjacency matrix of the underlying graph, have been e   ectively used in the analysis of undirected
networks. in this paper we propose an extension of these measures to directed networks, and we apply
them to the problem of ranking hubs and authorities. the extension is achieved by bipartization, i.e.,
the directed network is mapped onto a bipartite undirected network with twice as many nodes in order
to obtain a network with a symmetric adjacency matrix. we explicitly determine the exponential of
this adjacency matrix in terms of the adjacency matrix of the original, directed network, and we give
an interpretation of centrality and communicability in this new context, leading to a technique for
ranking hubs and authorities. the matrix exponential method for computing hubs and authorities
is compared to the well known hits algorithm, both on small arti   cial examples and on more
realistic real-world networks. a few other ranking algorithms are also discussed and compared with
our technique. the use of gaussian quadrature rules for calculating hub and authority scores is
discussed.

key words. hubs, authorities, centrality, communicability, matrix exponential, directed net-

works, digraphs, bipartite graphs, hits, katz, id95, gauss quadrature

ams subject classi   cations. 05c50, 15a16, 65f60, 90b10.

1. introduction. in recent years, the study of networks has become central
to many disciplines [5, 8, 9, 15, 16, 36, 37, 38]. networks can be used to describe
and analyze many di   erent types of interactions, from those between people (social
networks), to the    ow of goods across an area (transportation networks), to links
between websites (the www graph), and so forth. in general, a network is a set of
objects (nodes) and the connections between them (edges). often, research is focused
on determining and describing important structural characteristics of a network or
the interactions among its components.

one common question in network analysis is to determine the most    important   
nodes (or edges) in the network, also called node or vertex (edge) centrality. the
interpretation of what is meant by    important    can change from application to appli-
cation. due to this, many di   erent measures of centrality have been developed. for
an overview, see [8]. a closely related notion is that of rank of a node in a network.
there exist a number of de   nitions and algorithms for computing rankings; see, e.g.,
[23, 31, 30, 32, 33, 41] for up-to-date overviews.

the main notion of node centrality considered in this paper, subgraph centrality,
was introduced by estrada and rodr    guez-vel  azquez in [20]. we refer readers to [20]
for the motivation behind this notion and for its name; see also the review article

    department of mathematics and computer science, emory university, atlanta, georgia 30322,
usa (benzi@mathcs.emory.edu). the work of this author was supported by national science foun-
dation grant dms1115692.

   department of mathematics and statistics and institute of complex systems, university of
strathclyde, glasgow g1 1xq, uk (ernesto.estrada@strath.ac.uk). the work of this author was
supported in part by the new professor   s fund, university of strathclyde, and by the project    math-
ematics of large technological evolving networks (molten)    funded by the engineering and phys-
ical sciences research council and by the research councils uk digital economy programme, grant
ref. ep/i016058/1.

   department of mathematics and computer science, emory university, atlanta, georgia 30322,
usa (cklymko@emory.edu). the work of this author was supported in part by the laney graduate
school of arts and sciences at emory university and by the national science foundation.

1

2

m. benzi, e. estrada, and c. klymko

[19], and the discussion in section 4. the interpretation of centrality described in
[19] applies mostly to undirected networks. however, many important real-world
networks (the world wide web, the internet, id191, food webs, certain
social networks, etc.) are directed. one goal of this paper is to extend the notions
of centrality and communicability described in [17, 19] to directed networks, with an
eye towards developing new ranking algorithms for, e.g., document collections, web
pages, and so forth. we further compare our approach with some standard algorithms,
such as hits (see [29]) and a few others. methods of quickly determining hub and
authority rankings using gauss-type quadrature rules are also discussed.

2. basic notions. here we brie   y review some basic graph-theoretic notions;
we refer to [13] for a comprehensive treatment. a graph g = (v, e) is formed
by a set of nodes (vertices) v and edges e formed by unordered pairs of vertices.
every network is naturally associated with a graph g = (v, e) where |v | is the
number of nodes in the network and e is the collection of edges between objects,
e = {(i, j)| there is an edge between node i and node j}. the degree di of a vertex i
is the number of edges incident to i.
a directed graph, or digraph g = (v, e) is formed by a set of vertices v and
edges e formed by ordered pairs of vertices. that is, (i, j)     e 6    (j, i)     e. in the
case of digraphs, which model directed networks, there are two types of degree. the
in-degree of node i is given by the number of edges which point to i. the out-degree
is given by the number of edges pointing out from i.

a walk is a sequence of vertices v1, v2, . . . , vk such that for 1     i < k, there is an
edge between vi and vi+1 (or a directed edge from vi to vi+1 in the case of a digraph).
vertices and edges may be repeated. a walk is closed if v1 = vk. a path is a walk
consisting only of distinct vertices.

a graph g is connected if every pair of vertices is linked by a path in g. a digraph
is strongly connected if for any pair of vertices vi and vk there is a walk starting at vi
and ending at vk. a digraph is weakly connected if the graph obtained by disregarding
the orientation of its edges is connected. unless otherwise speci   ed, every digraph
in this paper is simple (unweighted with no multiple edges or loops and connected).
note, however, that most of the techniques and results in the paper can be extended
without di   culty to more general digraphs, in particular weighted ones.

the adjacency matrix of a graph is a matrix a     r|v |  |v | de   ned in the following

way:

a = (aij);

aij = (cid:26) 1,

0,

if (i, j) is an edge in g,
else.

under the conditions imposed on g, a has zeros on the diagonal.

if g is an
undirected graph, a will be a symmetric matrix and the eigenvalues will be real. in
the case of digraphs, a is not symmetric and may have complex (non-real) eigenvalues.

3. kleinberg   s hits algorithm. here we brie   y recall the classical hypertext
induced topics search (hits) algorithm,    rst introduced by j. kleinberg in [29]. this
algorithm provides the motivation for the extension of subgraph centrality to directed
graphs given in section 5.

3.1. the basic iteration. the hits algorithm is based on the idea that in the
world wide web, and indeed in all document collections which can be represented by
directed networks, there are two types of important nodes: hubs and authorities. hubs
are nodes which point to many nodes of the type considered important. authorities

ranking hubs and authorities using matrix functions

3

are these important nodes. from this comes a circular de   nition: good hubs are those
which point to many good authorities and good authorities are those pointed to by
many good hubs.

thus, the hits ranking relies on an iterative method converging to a stationary
solution. each node i in the network is assigned two non-negative weights, an authority
weight xi and a hub weight yi. to begin with, each xi and yi is given an arbitrary
nonzero value. then, the weights are updated in the following ways:

j

x(k)

y(k   1)

and y(k)

x(k)
i = xj:(j,i)   e

i = xj:(i,j)   e
the weights are then normalized so that pj(x(k)
the above iterations occur sequentially and it can be shown that, under mild
conditions, both sequences of vectors {x(k)} and {y(k)} converge as k        .
in
practice, the iterative process is continued until there is no signi   cant change between
consecutive iterates.

)2 = 1 and pj(y(k)

for k = 1, 2, 3...

)2 = 1.

(3.1)

j

j

j

this iteration sequence shows the natural dependence relationship between hubs
and authorities:
if a node i points to many nodes with large x-values, it receives a
large y-value and, if it is pointed to by many nodes with large y-values, it receives a
large x-value.

in terms of matrices, the equation (3.1) becomes: x(k) = at y(k   1) and y(k) =
ax(k), followed by id172 in the 2-norm. this iterative process can be ex-
pressed as

x(k) = ckat ax(k   1) and y(k) = c   

kaat y(k   1),

(3.2)

where ck and c   
vectors x(0), y(0) would be the constant vector

k are id172 factors. a typical choice for the inizialization

x(0) = y(0) = [1/   n, 1/   n, . . . , 1/   n],

see [21]. hence, hits is just an iterative power method to compute the dominant
eigenvector for at a and for aat . the authority scores are determined by the entries
of the dominat eigenvector of the matrix at a, which is called the authority matrix
and the hub scores are determined by the entries of the dominant eigenvector of
aat , called the hub matrix. recall that the eigenvalues of both at a and aat are
the squares of the singular values of a. also, the eigenvectors of at a are the right
singular vectors of a, and the eigenvectors of aat are the left singular vectors of a.

3.2. hits reformulation. in a digraph the adjacency matrix a is generally
nonsymmetric, however, the two matrices used in the hits algorithm (at a and
aat ) are symmetric. note that, setting

a = (cid:18) 0 a

0 (cid:19) ,

at

a symmetric matrix is obtained. now,

a2 = (cid:18) aat

0

0

at a (cid:19) ; a3 = (cid:18)

0

aat a

at aat

0

(cid:19) .

in general,

a2k = (cid:18) (aat )k

0

0

(at a)k (cid:19) ; a2k+1 = (cid:18)

0

a(at a)k

(at a)kat

0

(cid:19) .

4

m. benzi, e. estrada, and c. klymko

applying hits to this matrix a, at = a so ata = aat = a2 and introducing

the vector u(k) = (cid:18) y(k)

x(k) (cid:19) for k = 1, 2, 3, . . ., equation (3.2) becomes
u(k) = a2u(k   1) = (cid:18) aat

at a (cid:19) u(k   1),

0

0

(3.3)

followed by id172 of the two vector components of u(k) so that each has 2-
norm equal to 1. now, if a is an n    n matrix, a is 2n    2n and vector u(k) is in
r2n. the    rst n entries of u(k) correspond to the hub rankings of the nodes, while
the last n entries give the authority rankings. under suitable assumptions (see the
discussion in [32, chapter 11.3]), as k         the sequence {u(k)} converges to the
dominant nonnegative eigenvector of a, which yields the desired hub and authority
rankings.
hence, in hits only information obtained from the dominant eigenvector of a
is used. it is natural to expect that taking into account spectral information corre-
sponding to the remaining eigenvalues and eigenvectors of a may lead to improved
results.
among the limitations of hits, we mention the possible dependence of the rank-
ings on the choice of the initial vectors x(0), y(0), see [21] for examples of this, and
the fact that hits hub/authority rankings tend to be    degree-biased   , i.e., they are
strongly correlated with the out-/in-degrees of the corresponding nodes [14]. the
latter property is in fact shared by most eigenvector-based rankings; for a discussion
of this phenomenon in the case of scale-free graphs, see [35].

4. subgraph centralities and communicabilities. in [19], the authors re-
view several measures to rank the nodes in an undirected network a based on the use
of matrix functions, such as the matrix exponential ea. the subgraph centrality [20] of
node i is given by [ea]ii and the communicability [17] between nodes i and j (i 6= j) is
given by [ea]ij. nodes i corresponding to higher values of [ea]ii are considered more
important than nodes corresponding to lower values. large values of [ea]ij indicate
that information    ows more easily between nodes i and j than between pairs of nodes
corresponding to lower values of the same quantity. the estrada index of the graph is
i=1[ea]ii. this index, which provides a global characterization
of a network, is analogous to the partition function in statistical mechanics and plays
an important role in the study of networks at the macroscopic level: quantities such
as the natural connectivity, the total energy, the helmholtz free energy and the id178
of a network can all be expressed in terms of the estrada index [18].

given by tr (ea) = pn

consider the power series expansion of ea,

ea = i + a +

a2
2!

+

a3
3!

+        +

ak
k!

+       

(4.1)

from id207, it is well known that if a is the adjacency matrix of an undirected
graph, [ak]ij = [ak]ji counts the number of walks of length k between nodes i and
j. thus, the subgraph centrality of node i, [ea]ii, counts the total number of closed
walks starting at node i, penalizing longer walks by scaling walks of length k by the
factor 1
k! . the communicability between nodes i and j, [ea]ij , counts the number of
walks between nodes i and j, again scaling walks of length k by a factor of 1
k! .

it is worth mentioning that id172 of the diagonal entries of ea by tr (ea)
yields a id203 distribution on the nodes of the network, which can be given

ranking hubs and authorities using matrix functions

5

the following interpretation: the ith diagonal entry of ea/tr (ea) is the id203
of selecting any weighted self-returning (closed) walk that starts and ends at node i
among all the weighted self-returning walks that start at any node and return to the
same node. the weights used (factorial penalization) ensure that the shortest walks
receive more weight than the longer ones: hence, the subgraph centrality of node i is
proportional to the id203 of    nding a random walker walking    nearby    node i.
although the matrix exponential is certainly well-de   ned for any matrix, whether
symmetric or not, the interpretation of the notion of subgraph centrality for directed
networks can be problematic. to see this, consider the directed path graph consisting
of n nodes, with edge set e = {(1, 2) , (2, 3) , . . . , (n     1, n)} and adjacency matrix

a =

0
0
...
0
0

   

                  

1
0
. . .
0
0

0
1
. . .
0
0

      
      
. . .
      
      

0
0
...
1
0

   

                  

.

(4.2)

the entries of ea are given by

[ea]ij = (cid:26) 1/(j     i)!,

0,

if j     i,
else.

in particular, the diagonal entries of ea are all equal to 1. therefore, it is impos-
sible to distinguish any of the nodes from the others on the basis of this centrality
measure; yet, it is clear that the    rst and last node are rather special, and certainly
more    peripheral    (less    central   ) than the other nodes. also, we note that the prob-
abilistic interpretation given above for undirected graphs is no longer meaningful for
this example. part of the problem, of course, is that the path digraph contains no
closed walks. in the next section we show one way to extend the notion of subgraph
centrality to digraphs that is immune from such shortcomings, and correctly di   er-
entiates between nodes in the example above. (on the other hand, it is interesting
to note that the interpretation of the o   -diagonal entries of ea in terms of commu-
nicabilities is straightforward for the directed path. all entries of ea below the main
diagonal are zero, re   ecting the fact that information can only    ow from a node to
higher-numbered nodes. also, the entries of ea decay rapidly away from the main
diagonal, re   ecting the fact that the    ease    of communication between a node and a
higher numbered one decreases rapidly with the distance.)

another issue when extending the notions of subgraph centrality and communi-
cability to directed graphs is that computational di   culties may arise. while the
computations involved do not pose a problem for small networks, many real-world
networks are large enough that directly computing the exponential of the adjacency
matrix is prohibitive. in [2], techniques for bounding and estimating individual entries
of the matrix exponential using gaussian quadrature rules are discussed; see also [6]
and section 9 below. the ability to    nd upper and lower bounds for the entries re-
quires that the matrix be symmetric, thus these bounds cannot be directly computed
using the adjacency matrix of a directed network. again, these di   culties can be
circumvented using the approach discussed in the next section.

6

m. benzi, e. estrada, and c. klymko

5. an extension to digraphs. although the techniques described in [2] cannot

be directly applied to non-symmetric matrices, setting

a = (cid:18) 0 a

0 (cid:19)

at

(5.1)

produces a symmetric matrix a and, thus, upper and lower bounds of individual en-
tries of ea can be computed. in proposition 1 below we relate ea to the underlying
hub and authority structure of the original digraph. by b    we denote the moore   
penrose generalized inverse of matrix b.

proposition 1. let a be as described in equation (5.1). then,
ea =    
      

sinh(cid:16)   at a(cid:17)(cid:16)   at a(cid:17)   

cosh(cid:16)   aat(cid:17)

cosh(cid:16)   at a(cid:17)

a(cid:16)   at a(cid:17)   

sinh(cid:16)   at a(cid:17)

at

.

   
      

proof. let a = u   v t be the svd of the original (non-symmetric) adjacency

0

v t (cid:19).

(5.2)

matrix a. then, a can be decomposed as a = (cid:18) u 0

0 v (cid:19)(cid:18) 0   

   0 (cid:19)(cid:18) u t

0

hence,

now,

thus,

ea = (cid:18) u 0

0 v (cid:19) exp(cid:18) 0   

   0 (cid:19)(cid:18) u t

0

0

v t (cid:19) .

exp(cid:18) 0   

   0 (cid:19) = cosh(cid:18) 0   

   0 (cid:19) + sinh(cid:18) 0   

   0 (cid:19)

= (cid:18) cosh(  )

0

0

cosh(  ) (cid:19) +(cid:18)

0

sinh(  )

sinh(  )

0

(cid:19).

exp(cid:18) 0   

   0 (cid:19) = (cid:18) cosh(  )

sinh(  )

sinh(  )

cosh(  ) (cid:19).

(5.3)

putting together equations (5.2) and (5.3),

ea = (cid:18) u 0

0 v (cid:19)(cid:18) cosh(  )

sinh(  )

=    
      

cosh(cid:16)   aat(cid:17)

sinh(cid:16)   at a(cid:17)(cid:16)   at a(cid:17)   

at

sinh(  )

cosh(  ) (cid:19)(cid:18) u t

0

0

v t (cid:19)

a(cid:16)   at a(cid:17)   

sinh(cid:16)   at a(cid:17)

cosh(cid:16)   at a(cid:17)

.

   
      

the identities involving the o   -diagonal blocks can be easily checked using the svd
of a.

ranking hubs and authorities using matrix functions

7

5.1. interpretation of diagonal entries. in the context of undirected net-
works, the interpretation of the entries of the matrix exponential in terms of subgraph
centralities and communicabilities is well-established, see e.g. [19]. in the case of di-
rected networks and ea, things are not as clear. the network behind a can be thought
of as follows: take the vertices from the original network a and make two copies of
them, v and v    . then, undirected edges exist between the two sets based on the
following rule: e    = {(i, j   )| there is a directed edge from i to j in the original network}.
this creates a bipartite graph with 2n nodes: 1, 2, . . . , n, n + 1, n + 2, . . . , 2n. we
denote by v (a) this set of nodes. the use of bipartization to treat rectangular and
structurally unsymmetric matrices is of course standard in numerical id202.
in the undirected case, each node had only one role to play in the network: any
information that came into the node could leave by any edge. in the directed case,
there are two roles for each node: that of a hub and that of an authority. it is unlikely
that a high ranking hub will also be a high ranking authority, but each node can still
be seen as acting in both of these roles. in the network a, the two aspects of each
node are separated. nodes 1, 2, . . . , n in v (a) represent the original nodes in their
role as hubs and nodes n + 1, n + 2, . . . , 2n in v (a) represent the original nodes in
their role as authorities.
given a directed network, an alternating walk of length k, starting with an out-
edge, from node v1 to node vk+1 is a list of nodes v1, v2, ..., vk+1 such that there exists
edge (vi, vi+1) if i is odd and edge (vi+1, vi) if i is even:

v1     v2     v3           

an alternating walk of length k, starting with an in-edge, from node v1 to node vk+1
in a directed network is a list of nodes v1, v2, ..., vk+1 such that there exists edge
(vi+1, vi) if i is odd and edge (vi, vi+1) if i is even:

v1     v2     v3           

from id207 (see also [11]), it is known that [aat a . . .]ij (where there are k
matrices being multiplied) counts the number of alternating walks of length k, starting
with an out-edge, from node i to node j, whereas [at aat . . .]ij (where there are k
matrices being multiplied) counts the number of alternating walks of length k, starting
with an in-edge, from node i to node j. that is, [(aat )k]ij and [(at a)k]ij count the
number of alternating walks of length 2k.

in the original network a, if node i is a good hub, it will point to many good
authorities, which will in turn be pointed at by many hubs. these hubs will also point
to many authorities, which will again be pointed at by many other hubs. thus, if i
is a good hub, it will show up many times in the sets of hubs described above. that
is, there should be many even length alternating walks, starting with an out-edge,
(2k)! , these walks can be
from node i to itself. giving a walk of length 2k a weight of
counted using the (i, i) entry of the matrix

1

i +

aat
2!

+

aat aat

4!

+        +

(aat )k

(2k)!

+       

letting a = u   v t be the svd of a, this becomes:

u (cid:18)i +

  2
2!

+

  4
4!

+        +

  2k
(2k)!

+       (cid:19) u t

8

m. benzi, e. estrada, and c. klymko

= u cosh(  )u t = cosh(   aat ) .

the hub centrality of node i (in the original network) is thus given by

[ea]ii = [cosh(   aat )]ii.

this measures how well node i transmits information to the authoritative nodes in
the network.

similarly, if node i is a good authority, there will be many even length alternating
walks, starting with an in-edge, from node i to itself. giving a walk of length 2k a
weight of

(2k)! , these walks can be counted using the (i, i) entry of cosh(   at a).

1

hence, the authority centrality of node i is given by

[ea]n+i,n+i = [cosh(   at a)]ii.

it measures how well node i receives information from the hubs in the network.

note that the traces of the two diagonal blocks in ea are identical, so each accounts
for half of the estrada index of the bipartite graph. also, recalling the well-known
fact that the eigenvalues of a are     i where   i denotes the singular values of a, we
have

tr (ea) =

n

xi=1

e  i +

n

xi=1

e     i = 2

n

xi=1

cosh (  i),

an identity that can also be obtained directly from the expression for ea given in
proposition 1.

returning to the example of the directed path graph with adjacency matrix a
given by (4.2), one    nds that using the diagonal entries of ea to rank the nodes
gives node 1 as the least authoritative node, and node n as the one with the lowest
hub ranking, with all the other nodes being tied. thus we see that, while ea fails
to di   erentiate between the nodes of this graph, using ea yields a very reasonable
hub/authority ranking of the nodes.

5.2. interpretation of o   -diagonal entries. although not used in the re-
mainder of this paper, for the sake of completeness we give here an interpretation of
the o   -diagonal entries of ea. as we will see, this interpretation is rather di   erent
from the one usually given for the o   -diagonal entries of ea, and provides information
of a di   erent nature on the structure of the underlying graph.
in discussing the o   -diagonal entries of a, there are three blocks to consider.
first, there are the o   -diagonal entries of the upper-left block, cosh(   aat ), then
there are the o   -diagonal entries of the lower-right block, cosh(   at a). finally, there
is the o   -diagonal block, a(cid:16)   at a(cid:17)   
sinh(cid:16)   at a(cid:17) (the fourth block in ea being its
from section 5.1, [ea]ij = [cosh(   aat )]ij , 1     i, j     n, counts the number
of even length alternating walks, starting with an out-edge, from node i to node j,
(2k)! . when i 6= j, these entries measure
weighting walks of length 2k by a factor of
how similar nodes i and j are as hubs. that is, if nodes i and j point to many of the
same nodes, there will be many short even length alternating walks between them.

transpose).

1

the hub communicability between nodes i and j, 1     i, j     n, is given by

[ea]ij = [cosh(   aat )]ij

ranking hubs and authorities using matrix functions

9

this measures how similar nodes i and j are in their roles as hubs. that is, a larger
value of hub communicability between nodes i and j indicates that they point to many
of the same authorities. in other words, they point to nodes which are authorities on
the same subjects.

similarly, [ea]n+i,n+j = [cosh(   at a)]ij , 1     i, j     n, counts the number of
even length alternating walks, starting with an in-edge, from node i to node j, also
(2k)! . when i 6= j, these entries measure
weighing walks of length 2k by a factor of
how similar the two nodes are as authorities. if i and j are pointed at by many of the
same hubs, there will be many short even length alternating walks between them.
the authority communicability between nodes i and j, 1     i, j,    n, is given by

1

[ea]i+n,j+n = [cosh(   at a)]ij

this measures how similar nodes i and j are in their roles as authorities. that is, a
larger value of authority communicability between nodes i and j means that they are
pointed to by many of the same hubs and, as such, are likely to contain information
on the same subjects.

let us now consider the o   -diagonal blocks of a. here, [sinh(   at a)]ij counts

the number of odd length alternating walks, starting with an out-edge, from node i to
node j, weighing walks of length 2k+1 by
(2k+1)! . this measures the communicability
between node i as a hub and node j as an authority.

1

the hub-authority communicability between nodes i and j (that is, the communi-

cability between node i as a hub and node j as an authority) is given by:

[ea]i,n+j = [a(cid:16)   at a(cid:17)   
= [sinh(cid:16)   at a(cid:17)(cid:16)   at a(cid:17)   

sinh(cid:16)   at a(cid:17)]ij

at ]ji = [ea]n+j,i.

a large hub-authority communicability between nodes i and j means that they are
likely in the same    part    of the directed network: node i tends to point to nodes that
contain information similar to that on which node j is an authority.

5.3. relationship with hits. as described in 3.2, the hits ranking of nodes
as hubs and authorities uses only information from the dominant eigenvector of a.
here we show that when using the diagonal of ea, we exploit information contained
in all the eigenvectors of a; moreover, the hits rankings can be regarded as an
approximation of those given by the diagonal entries of ea.
assume the eigenvalues of a can be ordered as   1 >   2       3                  2n.
i where u1, u2, . . . , u2n are the normalized

i=1   iuiut

then, a can be written as a = p2n
eigenvectors of a. taking the exponential of a, we get:
xi=2

i = e  1 u1ut

e  i uiut

xi=1

ea =

1 +

2n

2n

e  iuiut
i .

now, the hub and authority rankings come from the diagonal entries of ea:

diag (ea) = e  1diag (u1ut

1 ) +

2n

xi=2

e  idiag (uiut

i ).

10

m. benzi, e. estrada, and c. klymko

rescaling the hub and authority scores by e  1 does not alter the rankings; hence, we
can instead consider

diag (e     1 ea) = diag (ea     1i ) = diag (u1ut

1 ) +

2n

xi=2

e  i     1 diag (uiut

i ).

now, the diagonal entries of the rank-one matrix u1ut
1 are just the squares of the
(nonnegative) entries of the dominant eigenvector of a; hence, the rankings provided
by the    rst term in the expansion of ea in the eigenbasis of a are precisely those
given by hits.
it is also clear that if   1       2, then the rankings provided by the diagonal entries
of ea are unlikely to di   er much from those of hits, since the weights e  i     1 will
be tiny, for all i = 2, . . . , 2n. conversely, if the gap between   1 and the rest of the
spectrum is small (  1       2), then the contribution from the remaining eigenvectors,
p2n
i=2 e  i     1diag (uiut
i ), may be non-negligible relative to the    rst term and therefore
the resulting rankings could di   er signi   cantly from those obtained using hits. in
section 8 we will see examples of real networks illustrating both scenarios.

summarizing, use of the matrix exponential for ranking hubs and authorities
amounts to using the (squared) entries of all the eigenvectors of a, weighted by the
exponential of the corresponding eigenvalues. of course, in place of the exponential,
a number of other functions could be used; see the discussion in the next section.
although using an exponential weighting scheme may at    rst sight appear to be
arbitrary, its use can be rigorously justi   ed; see the discussion in the next section, and
[18] for a thorough treatment in the context of undirected graphs. as shown above, the
hits ranking scheme uses the leading term only, corresponding to the approximation
ea     e  1u1ut
1 . between these two extremes one could also use approximations of the
form

ea    

k

xi=1

e  iuiut

i ,

(5.4)

where 1 < k < n; indeed, in most cases of practical interest a modest value of k (    n)
will be su   cient for a very good approximation, since the eigenvalues of a are often
observed to decay rapidly from a certain index k onward. we return on this topic in
section 9.

6. other ranking schemes. in this section we discuss a few other schemes that
have been proposed in the literature, and compare them with the hub and authority
centrality measures based on the exponential of a.

6.1. resolvent-based measures. besides the matrix exponential, another func-
tion that has been successfully used to de   ne centrality and communicability measures
for an undirected network is the matrix resolvent, which can be de   ned as

r(a; c) = (i     ca)   1 = i + ca + c2a2 +        + ckak +        ,

with 0 < c < 1/  max(a). this approach was pioneered early on by katz [28], and
variants thereof have since been used by numerous authors; see, e.g., [6, 8, 18, 19,
23, 41]. here a is the symmetric adjacency matrix of the undirected network. the
condition on the parameter c ensures that r(a; c) is well de   ned (i.e., that i     ca is
invertible and the geometric series converges to its inverse) and nonnegative; indeed,

ranking hubs and authorities using matrix functions

11

i     ca will be a nonsingular m -matrix. it is hardly necessary to mention the close
relationship existing between the resolvent and the exponential function, which can
be expressed via the laplace transform. for the adjacency matrix a of a bipartite
graph given by (5.1), the resolvent is easily determined to be

r(a; c) = (cid:18) (i     c2aat )   1
c(i     c2at a)   1at

ca(i     c2at a)   1
(i     c2at a)   1 (cid:19) .

(6.1)

the condition on c can be expressed as 0 < c < 1/  1, where   1 = kak2 denotes
the largest singular value of a, the adjacency matrix of the undirected network. this
ensures that the matrix in (6.1) is well-de   ned and nonnegative, with positive diagonal
entries. the diagonal entries of (i     c2aat )   1 provide the hub scores, those of
(i     c2at a)   1 the authority scores. a drawback of this approach is the need to
select the parameter c, and the fact that di   erent values of c may lead to di   erent
rankings. we have performed numerical experiments with this approach and we
found that for certain values of c, particularly those close to the upper limit 1/  1,
the hub and authority rankings obtained with the resolvent function are not too
di   erent from those obtained with the matrix exponential. however, not surprisingly,
as the value of c is reduced, one obtains hub and authority rankings that are strongly
correlated with the out- and in-degree of the nodes, respectively.1 overall, because
the resolvent tends to weigh short walks more heavily than the exponential, and
since longer walks contribute relatively little to the centrality scores, it is fair to
say that the exponential is less    degree biased    than the resolvent function. also,
since the exponential rankings do not depend on a tuneable parameter, they provide
unambiguous rankings.

we note that    katz    authority and hub scores may also be obtained by consid-
ering the column and row sums of the (nonsymmetric) matrix resolvent (i     ca)   1,
where a is the adjacency matrix of the original digraph and c > 0 is again assumed
to be small enough for the corresponding neumann series to converge. indeed, the
row sums of (i     ca)   1 count the number of (weighted) walks out of each node, while
the column sums count the number of (weighted) walks into each node. denoting by
1 the vector of all ones, hub and authority rankings can be obtained by solving the
two linear systems

(i     ca)y = 1 and (i     cat )x = 1 ,

(6.2)

respectively. here the parameter c must satisfy 0 < c < 1/  (a), where   (a) denotes
the spectral radius of a. the results of numerical experiments comparing the katz
scores with those based on the exponential of a are given in section 8. here we
observe that these katz scores are also dependent on the choice of the parameter c,
and similar considerations to those made for (i     ca)   1 apply.
a natural analogue to this approach is the use of row and column sums of the ex-
ponential ea to rank hubs and authorities. some results obtained with this approach
are discussed in section 8. we note that this method is di   erent from the exponenti-
ated inputs hits method of [21]. the latter method is a modi   cation to hits which
was developed in order to correct the issue of non unique results in certain networks.
if the dominant eigenvalue of at a (and, consequently, of aat ) is not simple, then
the corresponding eigenspace is multidimensional. this means that the choice of the

1note that if c is taken too small, then the resolvent approaches the identity matrix and it

becomes impossible to have meaningful rankings of the nodes.

12

m. benzi, e. estrada, and c. klymko

initial vector a   ects the convergence of the hits algorithm and di   erent hub and
authority vectors can be produced using di   erent initial vectors. this can occur only
when at a is reducible, that is, when the original network is not strongly connected.
in [21], farahat et al. propose a modi   cation to the hits algorithm which amounts
to replacing a and at with ea     i and (ea     i)t in the hits iteration. they note
that, as long as the original network is weakly connected, the dominant eigenvalue
of (ea     i)t (ea     i) is simple. thus, hits with this exponentiated input produces
unique hub and authority rankings. however, a result of this replacement is that
nodes with zero in-degree (or a low in-degree) are less important in the calculation of
authority scores than nodes with a high in-degree. when there are many nodes with
zero in-degree or whose edges point to only a few other nodes, dropping these edges
can greatly a   ect the hits rankings. an obvious disadvantage of this algorithm is
its cost, since it requires iterating with a matrix exponential and its transpose. it
can be implemented using only matrix-vector products involving a and at by means
of techniques, like krylov subspace methods, for evaluating the action of a matrix
function on a given vector; see, e.g., [26, chapter 13]. this approach leads to a nested
iteration scheme, with hits as the outer iteration and the krylov method as the
inner one. generally speaking, we have found hits with exponentiated inputs to be
less reliable and more expensive than the other methods considered in this paper. we
refer to [3] for additional discussion and some examples.

6.2. id95 and reverse id95. as is well known, the (now) clas-
sical id95 algorithm provides a means of    nding the authoritative nodes in a
digraph. in id95, the importance of a node v is determined by the importance
of the nodes pointing to v. in the most basic formulation, the rank of v is given by

r(v) = xu   bv

r(u)
|u|

(6.3)

where bv = {u : there is a directed link from u to v} and |u| is the out-degree of
u. the ranks of the nodes are computed by initially setting, say, r(v) = 1
n (where n
is the size of the network) and iteratively computing the rankings until convergence.
this can also be written as

  t
k =   t

k   1p,

k = 1, 2, . . .

(6.4)

where   k is the vector of node ranks at iteration k and p is the matrix given by

pij = (cid:26) 1/|vi|,

0,

if there is a directed edge from vi to vj ,
else.

here, p can be viewed as a id203 transition matrix, where pij is the id203
of traveling from node vi to node vj along an edge and the iterations can be understood
as the evolution of a markov chain modeling a random walk on the network.

however, for an arbitrary network, there is no guarantee that the id95 algo-
rithm will converge. if there are nodes with zero out-degree, p will not be stochastic.
to correct this, the matrix   p is used, where each zero row of p is replaced with et /n.
although this guarantees that the algorithm will converge, it does not guarantee the
existence of a unique solution. even with the augmentation,   p might still be a re-
ducible matrix, corresponding to a reducible markov chain. when this happens, there
are rank sinks, i.e., nodes in which the random walk will become trapped and, subse-
quently, these nodes will receive a disproportionately high rank. however, if p were

ranking hubs and authorities using matrix functions

13

irreducible, there would be no rank sinks and the perron-frobenius theorem would
guarantee that the markov chain had a unique, positive stationary distribution.

the standard way to form a stochastic, irreducible id95 matrix     p is to
introduce the rank-1 matrix e = eet /n and to consider instead of   p the convex
combination

    p =      p + (1       )e ,

(6.5)

where    is a constant with 0 <    < 1. the coe   cient 1        is a measure of the
tendency of a person sur   ng the web to jump from one page to another without
following links. in practice, a frequently recommended value is    = 0.85. for a more
comprehensive overview of the id95 algorithm, see [23, 27, 31, 32].

it was pointed out in [22] that applying id95 to the digraph obtained by
reversing the direction of the edges provides a natural way to rank the hubs; this
is usually referred to as reverse id95. in other words, authority rankings are
obtained by applying id95 to the    google    matrix derived from a, and hub
rankings are obtained by the same process applied to at . like hits, id95 and
reverse id95 are eigenvector-based ranking algorithms that do not take into ac-
count information about the network contained in the non-dominant eigenvectors. as
already mentioned, it has been argued [35] that eigenvector-based algorithms tend to
be degree-biased. furthermore, like the katz-type algorithms, the rankings obtained
depend on the choice of a tuneable damping parameter. while the success of pager-
ank in    nding authoritative nodes is well known and very well documented, much
less is known about the e   ectiveness of reverse id95 in identifying hubs; some
references are [1, 10, 42, 43]. we present the results of a few numerical experiments
with id95 and reverse id95 in section 8.

7. examples. in this section and the next we illustrate the proposed method on
some simple networks of small size, as well as on some larger data sets corresponding to
real networks. we also compare our approach with hits and other rankings schemes,
including katz, id95 and reverse id95.

7.1. small digraphs. in this section we compare out and in-degree counts,
hits, and our proposed method to obtain hub and authority rankings in a few small
digraphs. the purpose of this section is mostly pedagogical.

7.1.1. example 1. consider the small directed network in fig. 7.1 (left panel).

the adjacency matrix is given by

a =

0
1
0
0

   
         

1 1
0 1
1 0
1 0

0
0
1
0

.

   
         

the corresponding bipartite graph is shown in fig. 7.1 (right panel). if hubs and
authorities are determined simply using in-degree and out-degree counts, the result is
as follows:

node

out-degree

in-degree

1
2
3
4

2
2
2
1

1
3
2
1

14

m. benzi, e. estrada, and c. klymko

2

1

4

3

1

2

3

4

5

6

7

8

fig. 7.1. the original directed network from example 1, with adjacency matrix a (left) and

the bipartite network with adjacency matrix a (right).

under this ranking, the hub ranking of the nodes is: {1, 2, 3 (tie); 4}. the au-
thority ranking of the nodes is: {2; 3; 1, 4 (tie)}. we obtain somewhat di   erent results
using the hits algorithm. the eigenvectors of aat and at a corresponding to the
largest eigenvalue   max     3.9563, which is simple, yield the following rankings for
hubs and authorities:

node

hub rank

authority rank

1
2
3
4

.3383
.1729
.2798
.2091

.0965
.4618
.2854
.1562

here, the ranking for hubs is: {1; 3; 4; 2}. the ranking for authorities is: {2; 3; 4; 1}.
note that node 2, which was given a top hub score by looking just at the out-degrees,
is judged by hits as the node with the lowest hub score.

using ea as described above, the rankings for hub centralities and authority

centralities are:

node

hub centrality = [ea]ii

authority centrality = [ea]4+i,4+i

1
2
3
4

2.3319
2.2289
2.2812
1.6414

1.5906
3.0209
2.2796
1.5922

with this method, the hub ranking of the nodes is: {1; 3; 2; 4}. the authority
ranking is: {2; 3; 4; 1}. on this example, our method produces the same authority
ranking as hits. the hub ranking, however, is slightly di   erent: both methods iden-
tify node 1 as the one with the highest hub score, followed by node 3; however, our
method assigns the lowest hub score to node 4 rather than node 2. this is arguably
a more meaningful ranking.

7.1.2. example 2. consider the small directed network in fig. 7.2 (left panel).

the adjacency matrix is given by

a =

0
1
0
0

   
         

0 1
0 0
1 0
1 0

0
1
0
0

.

   
         

ranking hubs and authorities using matrix functions

15

2

1

4

3

1

2

3

4

5

6

7

8

fig. 7.2. the original directed network from example 2, with adjacency matrix a (left) and

the bipartite network with adjacency matrix a (right).

the corresponding bipartite graph is shown in fig. 7.2 (right panel).

if hubs
and authorities are determined only using in-degrees and out-degrees, the result is as
follows:

node

out-degree

in-degree

1
2
3
4

1
2
1
1

1
2
1
1

under this criterion, the hub and authority rankings are both {2; 1, 3, 4 (tie)}.
while it is intuitive that node 2 should be given a high score (both as an authority
and as a hub), just looking at the degrees does not allow one to distinguish the
remaining nodes.

consider now the use of hits. the largest eigenvalue of aat (and at a) is
  max = 2 and it has multiplicity two. thus, di   erent starting vectors for the hits al-
gorithm may produce di   erent rankings, as discussed in [21]. starting from a constant
authority vector x(0), as suggested in [29], produces the following scores:

node

hub rank

authority rank

1
2
3
4

.0000
.5000
.2500
.2500

.3333
.3333
.0000
.3333

the ranking for hubs is: {2; 3, 4 (tie); 1}. the ranking for authorities is the following:
{1, 2, 4 (tie); 3}.
if the ranking is determined using ea as described above, the resulting scores are:

node

hub centrality = [ea]ii

authority centrality = [ea]4+i,4+i

1
2
3
4

1.5431
2.1782
1.5891
1.5891

1.5891
2.1782
1.5431
1.5891

with this method, the hub ranking of the nodes is the same as in hits: {2; 3, 4 (tie); 1}.
however, in the authority ranking, node 2 is the clear winner rather than being part

16

m. benzi, e. estrada, and c. klymko

2

3

1

6

4

5

1

2

3

4

5

6

7

8

9

10

11

12

fig. 7.3. the original directed network from example 3, with adjacency matrix a (left) and

the bipartite network with adjacency matrix a (right).

of a three-way tie for    rst place: {2; 1, 4 (tie); 3}. in this example, the method based
on the matrix exponential is able to identify a top authority node by making use of
additional spectral information.

7.2. example 3. let g be the small directed network in fig. 7.3. the adjacency

matrix is given by

a =

0
1
1
1
1
0

   

                     

0
0
0
0
0
1

0 0
0 0
0 0
0 0
0 0
1 1

0 0
0 0
0 0
0 0
0 0
1 0

.

   

                     

if hubs and authorities are determined using only in-degrees and out-degrees, the

result is:

node

out-degree

in-degree

1
2
3
4
5
6

0
1
1
1
1
4

4
1
1
1
1
0

the hub ranking of the nodes using degrees is: {6; 2,3,4,5 (tie); 1}. the authority
if the hits algorithm is used, the resulting rankings are similar, but not exactly

ranking is {1; 2,3,4,5 (tie); 6}.
the same. starting with a constant authority vector x(0), the results are:

node

hub rank

authority rank

1
2
3
4
5
6

.000
.125
.125
.125
.125
.500

.200
.200
.200
.200
.200
.000

the hub ranking of the nodes is: {6; 2, 3, 4, 5 (tie); 1}. the authority ranking is:
{1,2,3,4,5 (tie); 6}. here, hits does not di   erentiate between node 1 and nodes 2, 3,

ranking hubs and authorities using matrix functions

17

4, and 5 in terms of the authority score, even though node 1 has by far the highest
in-degree. this appears as a failure of hits, since it is intuitive that node 1 should
be regarded as very authoritative.

when ea is used to calculate the hub and authority scores, node 1 does get a

higher authority ranking than all the other nodes:

node

hub centrality = [ea]ii

authority centrality = [ea]6+i,6+i

1
2
3
4
5
6

1.0000
1.6905
1.6905
1.6905
1.6905
3.7622

3.7622
1.6905
1.6905
1.6905
1.6905
1.0000

note that, if desired, the value 1 can be subtracted from these scores since it does
not a   ect the relative ranking of the nodes. the hub ranking is {6; 2,3,4,5 (tie); 1},
and the authority ranking is: {1; 2,3,4,5 (tie); 6}.

8. application to web graphs. similarly to hits, and in analogy to subgraph
centrality for undirected networks, the rankings produced by the values on the diago-
nal of ea can be used to rank websites as hubs and authorities in web searches (many
other applications are of course also possible). three of the data sets considered here
are small web graphs consisting of web sites on various topics and can be found at
[40] along with the website associated with each node; see also [7]. the experiments
for this paper were run on the    expanded    version of the data sets. each data set is
named after the corresponding topic.2 in addition, we include results for the wb-cs-
stanford data set from the university of florida sparse matrix collection [12]. this
digraph represents a subset of the stanford university web. in this section, the hub
and authority rankings obtained from ea are compared with those from hits, katz
(using (6.2) with c = 1/(  (a) + 0.1)), the row and column sums of the exponential
ea of the nonsymmetric matrix a, and id95/reverse id95. for the latter
we use the standard value    = 0.85 for the damping parameter. all experiments are
performed using matlab version 7.9.0 (r2009b) on a macbook pro running os x
version 10.6.8, a 2.4 ghz intel core i5 processor and 4 gb of ram. for the purpose
of these tests we use the built-in matlab function expm to compute the matrix expo-
nentials, and backslash to compute the katz scores. other approximations of ea are
discussed in section 9.

8.1. abortion data set. the abortion data set contains n = 2293 nodes and

m = 9644 directed edges. the expanded matrix a = (cid:18) 0 a
0 (cid:19) has order n =
2n = 4586 and contains 2m = 19288 nonzeros. the maximum eigenvalue of a is
  n     31.91 and the second largest eigenvalue is   n    1     26.04. in this matrix, the
largest eigenvalue is fairly well-separated from the second largest so that one would
expect the hits rankings (which only use information from the dominant eigenpair
of a) to be reasonably close to the rankings from ea (which use information from
all of the eigenvalues and corresponding eigenvectors). a plot of the eigenvalues of
the expanded abortion data set matrix can be found in fig. 8.1. note the high

at

2it should be noted, however, that in the node list for the adjacency matrix, the node labeling
begins with 1 and in the list of websites associated with the nodes found at [40], node labeling begins
at 0. thus, node i in the adjacency matrix is associated with website i     1.

18

m. benzi, e. estrada, and c. klymko

40

30

20

10

0

   10

   20

   30

   40

0

500

1000

1500

2000

2500

3000

3500

4000

4500

5000

fig. 8.1. plot of the eigenvalues of the expanded abortion matrix a.

top 10 hubs of the abortion web graph, ranked using [ea]ii, hits, katz, ea row sums and

table 8.1

reverse id95 with    = 0.85.

[ea]ii hits katz
80

48

ea rs rpr
125
2184

80

48
1006
1007
1021
1053
1020
960
968
969
970

1021
1007
1006
1053
1020
987
990
985
989

1431
1432
1387
1388
1389
1397
1425
1426
1415

1431
1432
1426
1425
1415
1388
1389
1397
1387

79
81
48

1424
1447

78
134
1445

multiplicity of the zero eigenvalue in this matrix, as well as in the adjacency matrices
of the computational complexity and death penalty data sets. also, quite a few of the
nonzero eigenvalues are rather small. due to this, the numerical rank of the matrix
is very low, a property that can be exploited when estimating the entries of ea using
lanczos-based methods; see section 9 for further discussion on this.

the top 10 hubs and authorities of the abortion data set, as determined using
the diagonal entries of ea, hits with constant initial vector, the row/column sums of
(i     ca)   1 (   katz   ), the row/column sums of ea and reverse id95/id95
are shown in tables 8.1 and 8.2. we observe that there is a good deal of agreement
between the ea rankings and the hits ones:
indeed, both methods identify the
websites labeled 48, 1021, 1007, 1006, 1053, 1020 as the top 6 hubs, and both pick
web site 48 as the top one. also, there are 7 web sites identi   ed by both methods as
being among the top 10 authorities. the top authority identi   ed by hits is ranked

ranking hubs and authorities using matrix functions

19

top 10 authorities of the abortion web graph, ranked using [ea]ii, hits, katz, ea column sums

table 8.2

and id95 with    = 0.85.

[ea]ii hits katz
1430
967
1387
958
939
1425
1426
962
1429
963
1396
964
961
1405
1406
965
1409
966
587
1417

939
958
967
961
962
963
964
965
966
1582

ea cs
1430
1387
1425
1426
1417
1409
1429
1406
1396
1405

pr
1609
1941
1948
1608
587
1610
2045
317
2191
753

15

10

5

0

   5

   10

   15

0

200

400

600

800

1000

1200

1400

1600

1800

fig. 8.2. plot of the eigenvalues of the expanded computational complexity matrix a.

third by ea, and conversely the top authority identi   ed by ea is third in the hits
ranking. the katz rankings and those based on ea show considerable agreement
with one another, but are very di   erent from the hits ones and from those based
on ea. node 48, which is the top-ranked hub according to hits and ea, is now
not even among the top 100. conversely, node 80, which is ranked the top hub by
katz and ea, is not in the top 100 nodes according to hits or to ea. this is not
too surprising, since the metrics based on a and those based on a are obtained
by counting rather di   erent types of graph walks. finally, for this network reverse
id95 and id95 return rankings with almost no overlap with any of the
other methods.

8.2. computational complexity data set. the computational complexity
data set contains n = 884 nodes and m = 1616 directed edges. the expanded matrix
a has order n = 2n = 1768 and contains 2m = 2232 nonzeros. the maximum eigen-

20

m. benzi, e. estrada, and c. klymko

top 10 hubs of the computational complexity web graph, ranked using [ea]ii, hits, katz, ea

row sums and reverse id95 with    = 0.85.

table 8.3

[ea]ii hits katz
56
709
57
697
705
690
714
708
712
715

57
17
644
643
634
106
119
529
86
162

57
634
644
721
643
544
632
801
640
639

ea rs rpr

57
56
17
51
634
21
255
173
709
45

57
56
17
51
21
11
255
12
13
45

value of a is   n     10.93 and the second largest eigenvalue is   n    1     9.86. here, the
(relative) spectral gap between the    rst and the second eigenvalue is smaller than in
the previous example; consequently, we expect the rankings produced using ea and
hits to be less similar than for the abortion data set. a plot of the eigenvalues of
the expanded computational complexity data set matrix can be found in fig. 8.2.

the top 10 hubs and authorities of the computational complexity data set, de-
termined by the various ranking methods, can be found in tables 8.3 and 8.4. as
expected, we see less agreement between hits and the diagonals of ea. concerning
the hubs, both methods agree that the web site labelled 57 is by far the most impor-
tant hub on the topic of computational complexity. however, the method based on
ea identi   es as the second most important hub the web site corresponding to node 17,
which is ranked only 39th by hits. the two methods agree on the next three hubs,
but after that they return completely di   erent results. the di   erence is even more
pronounced for the authority rankings. the method based on ea clearly identi   es
web site 1 as the most authoritative one, whereas hits relegates this node to 8th
place. the top authority acording to hits, web site 719, places 5th in the ranking
obtained by ea. the two methods agree on only two other web sites as being in the
top 10 authorities (717 and 727). the katz rankings and those based on ea show
little overlap for this data set, although node 57 is clearly considered an important
hub by all measures. a natural question is how much these results are a   ected by the
choice of the parameter c used to compute the katz scores. we found experimentally
that, in contrast to the situation for the other data sets, small changes in the value of
c can signi   cantly a   ect the katz ranking for this particular data set. changing the
value of c to c = 1/(  (a) + 0.3) results in hub and authority rankings that are much
closer to those given by the column/row sums of ea. the potential sensitivity to c is
a clear drawback of the katz-based approach compared to the methods based on the
matrix exponential. coming to (reverse) id95, it is interesting to note that for
this data set it provides rankings that are at least in partial agreement with some of
the other measures, especially those based on ea. looking at the authority scores,
we also notice a good degree of overlap among all methods, except hits. due to the
small spectral gap, hits is probably the least reliable of all ranking methods on this
particular data set.

ranking hubs and authorities using matrix functions

21

top 10 authorities of the computational complexity web graph, ranked using [ea]ii, hits, katz,

ea column sums and id95 with    = 0.85.

table 8.4

719
717
727
723
808
735
737

[ea]ii hits katz
688
685
673
690
56
686
664
1
45
534

1
315
673
148
719
717
2
45
727
534

722
770

1

1

ea cs pr
673
673
664
534
45
2
1

664
534
45
473
315
376
688
599

376
341
50
51

30

20

10

0

   10

   20

   30

0

500

1000

1500

2000

2500

3000

3500

4000

fig. 8.3. plot of the eigenvalues of the expanded death penalty matrix a.

8.3. death penalty data set. the death penalty data set contains n = 1850
and m = 7363 directed edges. the expanded matrix a has order n = 2n = 3700 and
contains m = 14726 nonzeros. the maximum eigenvalue of a is   n     28.02 and the
second largest eigenvalue   n    1     17.68. in this case, the largest and second largest
eigenvalues are quite far apart, and the relative gap is larger than in the previous
examples. a plot of the eigenvalues of the expanded death penalty matrix can be
found in fig. 8.3.

due to the presence of a large spectral gap, much of the information used in
forming the rankings of ea is also used in the hits ranking, and we expect the two
methods to produce similar results; see section 5.3. indeed, as shown in table 8.5
(hubs) and table 8.6 (authorities), in this case the top 10 rankings produced by the
two methods are actually identical.

looking at the katz scores and those based on ea, we see in this case a great

22

m. benzi, e. estrada, and c. klymko

top 10 hubs of the death penalty web graph, ranked using [ea]ii, hits, katz, ea row sums and

table 8.5

reverse id95 with    = 0.85.

[ea]ii hits katz
1632
210
637
133
1671
413
1586
552
1651
552
1673
462
930
1328
1653
542
618
210
1709
1275

210
637
413
1586
552
462
930
542
618
1275

ea rs rpr
210
1632
133
1632
1671
552
1651
210
1673
1653
1328
1709

70
95
135
133
55
958
1077
315

top 10 authorities of the death penalty web graph, ranked using [ea]ii, hits, katz, ea column

table 8.6

sums and id95 with    = 0.85.

[ea]ii hits katz
1632
1662
1697
1689
1653
1671
1675
1684
798
1652

4
1
6
7
10
16
2
3
44
27

4
1
6
7
10
16
2
3
44
27

ea cs
1632
1662
1697
1689
1653
1671
1675
1684
789
1654

pr
993
667

3

736
735
1632

42
1
4

1212

deal of overlap between these two, but almost completely di   erent rankings compared
to hits and ea (although node 210 is clearly an important hub by any standard).
note that node 1632 is both the top hub and the top authority according to katz
and to ea. id95 and reverse id95 show a limited amount of overlap with
the other measures; nevertheless, nodes 210 and 1632 are also found to be important
hubs and nodes 1632, 1 and 4 are found to be authoritative, in agreeemnt with some
of the other measures.

8.4. stanford web graph. the wb-cs-stanford data set from the university of
florida sparse matrix collection contains n = 9914 nodes and m = 36854 directed
edges. the expanded matrix a has order n = 2n = 19828 and contains m = 73708
nonzeros. the maximum eigenvalue of a is   n     38.38 and the second largest is
  n    1     32.12, hence there is a sizeable gap. tables 8.7-8.8 report the results obtained
with the various ranking schemes.
the    rst thing to observe is the remarkable agreement between the hits, ea,
katz, and ea rankings of both hubs and authorities. this in stark contrast with the
results for the previous three data sets. moreover, many of the nodes that are ranked
highly as hubs are also ranked highly as authorities. a plausible explanation of these

ranking hubs and authorities using matrix functions

23

top 10 hubs of the wb-cs-stanford web graph, ranked using [ea]ii, hits, katz, ea row sums

and reverse id95 with    = 0.85.

table 8.7

[ea]ii hits katz
6562
6562
6837
6838
6840
6838
6839
6837
6840
6839
6669
6616
6765
6668
6670
6615
6616
6669
6731
6615

6562
6838
6837
6839
6840
6616
6615
6765
6669
6731

ea rs rpr
251
6562
252
6837
6838
253
254
6839
271
6840
2240
6669
6668
2241
2242
6670
2243
6616
6615
348

top 10 authorities of the wb-cs-stanford web graph, ranked using [ea]ii, hits, katz, ea column

table 8.8

sums and id95 with    = 0.85.

[ea]ii hits katz
6837
6837
6839
6840
6840
6839
6838
6838
6573
6617
6574
6615
6575
6766
6764
6576
6577
6616
6614
6578

6837
6839
6840
6838
6617
6615
6614
6616
6764
6766

ea cs
6837
6839
6840
6838
6573
6575
6576
6577
6578
6579

pr
2264
8226
8059
8057
4485
5707
8225
6837
6839
6840

observations is that the adjacency matrix a for this digraph is much closer to being
symmetric than in the other cases. indeed, the percentage of    bidirectional    edges in
the wb-cs-stanford graph is 47.63%; the corresponding percentages for the abortion,
computational complexity and death penalty graphs are just 2.72%, 2.97% and 4.02%,
respectively.

interestingly, the (reverse) id95 results are now drastically di   erent fron
the ones provides by all the other measures in nearly all cases. the only (partial)
exception is that id95    nds nodes 6837, 6839 and 6840 to be among the top 10
authorities; these three nodes are identi   ed as the three most authoritative ones by
the remaining methods.

9. approximating the matrix exponential. several approaches are avail-
able for computing the matrix exponential [26]. a commonly used scheme is the
one based on pad  e approximation combined with the scaling and squaring method
[25, 26], implemented in matlab by the expm function. for an n    n matrix, this
method requires o(n2) storage and o(n3) arithmetic operations; any sparsity in a,
if present, is not exploited in currently available implementations. evaluation of the
matrix exponential based on diagonalization also requires o(n2) storage and o(n3)

24

m. benzi, e. estrada, and c. klymko

operations. furthermore, these methods cannot be easily adapted to the case where
only selected entries (e.g., the diagonal ones) of the matrix exponential are of interest.
for the purpose of ranking hubs and authorities in a directed network, only the
main diagonal of ea is required. this can be done without having to compute all the
entries in ea. if some of the o   -diagonal entries (communicabilities) are desired, for
example those between the highest ranked hubs and/or authorities, it is also possible
to compute them without having to compute the whole matrix ea, which would be
prohibitive even for a moderately large network. we further emphasize that in most
applications one is not so much interested in computing an exact ranking of all the
nodes in a digraph, but only in identifying the top k ranked nodes, where the integer
k is small compared to n (for example, k = 10 or k = 20). it is highly desirable to
develop methods that are capable of quickly identifying the top k hubs/authorities
without having to compute accurate hub/authority scores for each node.

e   cient, accurate methods for estimating (or, in some cases, bounding) arbitrary
entries in a matrix function f (a) have been developed by golub, meurant and col-
laborators (see [24] and references therein) and    rst applied to problems of network
analysis by benzi and boito in [2]; see also [6]. here we limit ourselves to a brief de-
scription of these methods, referring the reader to [2] and [24] for further details. let
a be a real, symmetric, n   n matrix and let f be a function de   ned on the spectrum
of a. consider the eigendecompositions a = q  qt and f (a) = qf (  )qt , where
q = [  1, . . . ,   n] and    = diag (  1, . . . ,   n); here we assume that the eigenvalues of a
are ordered as   1     . . .       n. for given vectors u and v we have

n

ut f (a)v = ut qf (  )qt v = wt f (  )z =

f (  k)wkzk,

(9.1)

xk=1

where w = qt u = (wk) and z = qt v = (zk). in particular, for f (a) = ea we obtain

ut eav =

n

xk=1

e  k wkzk.

(9.2)

choosing u = v = ei (the vector with the ith entry equal to 1 and all the remaining
ones equal to 0) we obtain an expression for the subgraph centrality of node i:

sc(i) :=

n

xk=1

e  k   2

k,i ,

where   k,i denotes the ith component of vector   k. likewise, choosing u = ei and
v = ej we obtain the following expression for the communicability between node i
and node j:

c(i, j) :=

n

xk=1

e  k   k,i  k,j .

analogous expressions hold for other matrix functions, such as the resolvent.

hence, the problem is reduced to evaluating bilinear expressions of the form
ut f (a)v. such bilinear forms can be thought of as riemann- stieltjes integrals with
respect to a (signed) spectral measure:

ut f (a)v = z b

a

f (  )d  (  ),   (  ) =       
   

0,

k=1 wkzk,
k=1 wkzk,

pi
pn

if    < a =   1,
if   i        <   i+1,
if b =   n       .

ranking hubs and authorities using matrix functions

25

this integral can be approximated by means of a gauss-type quadrature rule:

p

q

z b

a

(9.3)

xj=1

j=1 are

cjf (tj) +

f (  )d  (  ) =

vkf (  k) + r[f ],

k=1 are prescribed. we have

j=1 and the weights {cj}p

xk=1
where r[f ] denotes the error. here the nodes {tj}p
unknown, whereas the nodes {  k}q
    q = 0 for the gauss rule,
    q = 1,   1 = a or   1 = b for the gauss   radau rule,
    q = 2,   1 = a and   2 = b for the gauss   lobatto rule.
for certain matrix functions, including the exponential and the resolvent, these
quadrature rules can be used to obtain lower and upper bounds on the quantities of
interest; prescribing additional quadrature nodes leads to tighter and tighter bounds,
which (in exact arithmetic) converge monotonically to the true values [24]. the eval-
uation of these quadrature rules is mathematically equivalent to the computation
of orthogonal polynomials via a three-term recurrence, or, equivalently, to the com-
putation of entries and spectral information of a certain tridiagonal matrix via the
lanczos algorithm. here we brie   y recall how this can be done for the case of the
gauss quadrature rule, when we wish to estimate the ith diagonal entry of f (a). it
j=1 cjf (tj). this can

follows from (9.3) that the quantity of interest has the form pp

be computed from the relation (theorem 3.4 in [24]):

where

p

xj=1

cjf (tj) = et

1 f (jp)e1,

jp =

  1
  1
  1   2
. . .

   

                  

  2
. . .
. . .
  p   2   p   1
  p   1

  p   1
  p

   

                  

is a tridiagonal matrix whose eigenvalues are the gauss nodes, whereas the gauss
weights are given by the squares of the    rst entries of the normalized eigenvectors of
jp. the entries of jp are computed using the lanczos algorithm with starting vectors
x   1 = 0 and x0 = ei. note that it is not required to compute all the components of
the eigenvectors of jp if one uses the golub   welsch qr algorithm; see [24].

for small p (i.e., for a small number of lanczos steps), computing the (1, 1) entry
of f (jp) is inexpensive. the main cost in estimating one entry of f (a) with this
approach is associated with the sparse matrix-vector multiplies in the lanczos algo-
rithm applied to the adjacency matrix a. if only a small,    xed number of iterations
are performed for each diagonal element of f (a), as is usually the case, the compu-
tational cost (per node) is at most o(n) for a sparse graph, resulting in a total cost
of o(n2) for computing the subgraph centrality of every node in the network. if only
k < n subgraph centralities are wanted, with k independent of n, then the overall cost
of the computation will be o(n) provided that sparsity is carefully exploited in the
lanczos algorithm and that only a small number p of iterations (independent of n) is
carried out. note, however, that depending on the connectivity characteristics of the
network under consideration, the prefactor in the o(n) estimate could be large. the

26

m. benzi, e. estrada, and c. klymko

the number of iterations necessary for the top 10 hubs or authorities to be determined (not

necessarily in the correct order).

table 9.1

dataset
abortion

comp. complex.

death penalty

stanford

hub (lower bound)

hub (upper bound)

> 40

3
5
8

> 40

3
3
8

dataset
abortion

comp. complex.

death penalty

stanford

authority (lower bound)

authority (upper bound)

2
4
4
7

2
5
2
8

algorithm can be implemented so that the storage requirements are o(n) for a sparse
network   that is, a network in which the total number of links grows linearly in the
number n of nodes.

when applying the approach based on gauss quadrature rules to the 2n    2n
matrix a, only matrix-vector products with a and its transpose are required, just
like in the hits algorithm.
if only the hub scores are wanted, it is also possible
to apply the described techniques to the symmetric matrix aat using the function
f (  ) = cosh(     ); the same applies if only the authority scores are wanted, working
this time with the matrix at a. the problem with this approach is that only estimates
(rather than increasingly accurate lower and upper bound) can be obtained, due to
the fact that the function f (  ) = cosh(     ) is not strictly completely monotonic on
the positive real axis. we refer to [4] for details. in our experiments we always work
with the matrix a, since we are interested in computing both hub and authority
scores.

9.1. test results. accurate evaluation of all the diagonal entries of ea using
quadrature rules may be too expensive for truly large-scale graphs. in most applica-
tions, fortunately, it is not necessary to rank all the nodes in the network: only the
top few hubs and authorities are likely to be of interest. when using quadrature rules,
the number of quadrature nodes (lanczos iterations) required to correctly rank the
nodes as hubs or authorities varies and depends on both the eigenvalues of ea and
how close the diagonal entries are in value. if the rankings of the nodes are very close,
it can take many iterations for the ordering to be exactly determined. however, since
estimates for diagonal entries are calculated individually, once the top 10 (say) nodes
have been identi   ed, additional iterations can be performed only on these nodes in
order to determine their exact ranking.

our approach exploits the monotonicity of the gauss-radau bounds: as soon as
the lower bound for node i is above the upper bounds for other nodes, we know that
node i will be ranked higher than those othe nodes. this observation leads to a simple
algorithm for identifying the top-k nodes. the number of lanczos iterations per node
necessary to identify the top k = 10 hubs and authorities, using gauss-radau lower
and upper bounds, for the four data sets from section 8 is given in table 9.1. our
implementation is based on meurant   s matlab code [34], from the table it can be
seen that, in most cases, only 2-5 iterations per node are needed. an exception is the

ranking hubs and authorities using matrix functions

27

the number of iterations necessary for the top 10 hubs or authorities to be ranked in the top 30.

table 9.2

dataset
abortion

comp. complex.

death penalty

stanford

hub (lower bound)

hub (upper bound)

5
2
2
7

4
2
2
4

dataset
abortion

comp. complex.

death penalty

stanford

authority (lower bound)

authority (upper bound)

2
4
2
2

2
2
2
4

determination of the top 10 hubs of the abortion data set, for which the number of
iterations is large (> 40). this is due to a cluster of nodes (nodes 960 and 968-990)
that have nearly identical hub rankings. these nodes    scores agree to 15 signi   cant
digits. however, for most applications, if a subset of nodes are so closely ranked, their
exact ordering may not be so important. table 9.2 reports the number of lanczos
iterations neeeded for the top k = 10 hubs and authorities to be ranked at least
in the top 30. here, the number of iterations per node needed is never more than
7. the total cost is thus o(n) lanczos iterations, again leading to an o(n2) overall
complexity. various enhancements can be used to reduce costs, including the use of
sparse-sparse mat-vecs in the lanczos iteration, and the exclusion of nodes with zero
out-degree (for hub computations) and zero in-degree (for authority computations)
from the top-k calculations. it is also safe to assume that in most cases of interest,
one can also exclude nodes with in- and out-degree 1 from the computations, leading
to further savings.

10. conclusions and outlook. in this paper we have presented a new approach
to ranking hubs and authorities in directed networks using functions of matrices. bi-
partization is used to transform the original directed network into an undirected
one with twice the number of nodes. the adjacency matrix of the bipartite graph
is symmetric, and this allows the use of subgraph centrality (and communicability)
measures for undirected networks. we showed that the diagonal entries of the matrix
exponential provide hub and authority rankings, and we gave an interpretation for
the o   -diagonal entries (communicabilities). unlike hits, the results are indepen-
dent of any starting vectors; and unlike the katz-based ranking schemes, there is no
dependency on an arbitrary parameter.

several examples, both synthetic and corresponding to real data sets, have been
used to demonstrate the e   ectiveness of the proposed ranking algorithms relative
to hits and to other ranking schemes based on the matrix resolvent and on the
exponential of the adjacency matrix of the original digraph. our experiments indicate
that our method results in rankings that are frequently di   erent from those computed
by hits, at least in the absence of large gaps between the dominant singular value
of the adjacency matrix a and the remaining ones. this is to be expected, since our
method uses information from all the singular spectrum of the network, not just the
dominant left and right singular pairs.

as usual in this    eld, there is no simple way to compare di   erent ranking schemes,

28

m. benzi, e. estrada, and c. klymko

and therefore it is impossible to state with certainty that a ranking scheme will give
   better    results than a di   erent scheme in practice. it is, however, certainly the case
that the method based on the exponential of a takes into account more spectral
information than hits does; moreover, the rankings so obtained are unambiguous,
in that they do not depend on an the choice of an initial guess or on a tuneable
parameter. as we saw, the latter is a weak spot of katz-like methods, and a similar
case can be made for id95 and reverse id95.

compared to hits, the new technique has a higher computational cost. we
showed how gaussian quadrature rules can be used to quickly identify the top ranked
hubs and authorities for networks involving thousands of nodes. we note that such
schemes require a symmetric input matrix and are not readily applicable to nonsym-
metric matrices, since in this case one can only hope for estimates instead of lower
and upper bounds.

future work should include a more e   cient implementation and tests on larger
networks.
it is likely that the proposed approach based on gaussian quadrature
will prove to be too expensive for truly large-scale networks with millions of nodes.
we hope to explore techniques similar to those presented in [6] and [39] in order to
extend our methodology to truly large-scale networks. another relevant question is
the study of the rate of convergence of the lanczos algorithm for estimating bilinear
forms associated with adjacency matrices of graphs of di   erent types.

acknowledgments. we are indebted to tammy kolda (sandia national labo-

ratories) and david gleich (purdue university) for valuable suggestions.

references

[1] z. bar-yossef and l.-t. mashiach, local approximation of id95 and reverse pager-

ank, proceedings ckim   08, october 26   30, 2008, napa valley, california.

[2] m. benzi and p. boito, quadrature rule-based bounds for functions of adjacency matrices,

lin. algebra appl., 433 (2010), pp. 637   652.

[3] m. benzi, e. estrada, and c. klymko, ranking hubs and authorities using matrix
functions, math/cs technical report tr-2012-003, emory university. available at
http://www.mathcs.emory.edu/publications.php#reports.

[4] m. benzi and g. h. golub, bounds on the entries of matrix functions with applications to

preconditioning, bit, 39 (1999), pp. 417   438.

[5] s. boccaletti, v. latora, y. moreno, m. chavez, and d.-u. hwang, complex networks:

structure and dynamics, phys. rep., 424 (2006), pp. 175   308.

[6] f. bonchi, p. esfandiar, d. f. gleich, c. greif, and l. v. s. lakshmanan, fast matrix
computations for pair-wise and column-wise commute times and katz scores, internet
math., 8 (2012), pp. 73   112.

[7] a. borodin, g. o. roberts, j. s. rosenthal, and p. tsaparas, finding authorities and
hubs from link structures on the world wide web, proceedings www10 (2001), acm
1-58113-348-0/01/0005.

[8] u. brandes and t. erlebach, eds., network analysis: methodological foundations, lecture

notes in computer science vol. 3418, springer, new york, 2005.

[9] g. caldarelli, scale-free networks, oxford university press, oxford, uk, 2007.

[10] m. c. crofoot, d. i. rubenstein, a. s. maiya, and t. y. berger-wolf, aggression,
grooming and group-level cooperation in white-faced capuchins (cebus capucinus): insights
from social networks, amer. j. primatology, 73 (2011), pp. 821   833.

[11] j. j. crofts, e. estrada, d. j. higham, and a. taylor, mapping directed networks,

electr. trans. numer. anal., 37 (2010), pp. 337   350.

[12] t. a. davis and y. hu, the university of florida sparse matrix collection, acm

trans. math. soft., 38(1) (2011), article 1.

[13] r. diestel, id207, springer-verlag, berlin, 2000.
[14] c. h. q. ding, h. zha, x. he, p. husbands, and h. d. simon, link analysis: hubs and

authorities on the world wide web, siam rev., 46 (2004), pp. 256   268.

ranking hubs and authorities using matrix functions

29

[15] e. estrada, the structure of complex networks, oxford university press, oxford, uk, 2011.
[16] e. estrada, m. fox, d. higham, and g.-l. oppo, eds., network science. complexity in

nature and technology, springer, new york, 2010.

[17] e. estrada and n. hatano, communicability in complex networks, phys. rev. e, 77 (2008),

article 036111.

[18] e. estrada, n. hatano, and m. benzi, the physics of communicability in complex networks,

phys. reports, 514 (2012), pp. 89-119.

[19] e. estrada and d. j. higham, network properties revealed through matrix functions, siam

rev., 52 (2010), pp. 671   696.

[20] e. estrada and j. a. rodr    guez-vel  azquez, subgraph centrality in complex networks,

phys. rev. e, 71 (2005), 056103.

[21] a. farahat, t. lofaro, j. c. miller, g. rae, and l. a. ward, authority rankings from
hits, id95, and salsa: existence, uniqueness, and e   ect of initialization, siam
j. sci. comput., 27 (2006), pp. 1181   1201.

[22] d. fogaras, where to start browsing the web?, in t. b  ohme, g. heyer, and h. unger (eds.),

proceedings iics 2003, lecture notes in computer science, 2877 (2003), pp. 65   79.

[23] m. franceschet, id95: standing on the shoulders of giants, comm. acm, 54 (2011),

pp. 92   101.

[24] g. h. golub and g. meurant, matrices, moments and quadrature with applications, prince-

ton university press, princeton, nj, 2010.

[25] n. j. higham, the scaling and squaring method for the matrix exponential revisited, siam

j. matrix anal. applic., 26 (2006), pp. 1179   1193.

[26] n. j. higham, functions of matrices. theory and computation, society for industrial and

applied mathematics, philadelphia, pa, 2008.

[27] s. kamvar, numerical algorithms for personalized search in self-organizing information

networks, princeton university press, princeton and oxford, 2010.

[28] l. katz, a new status index derived from sociometric data analysis, psychometrika, 18 (1953),

pp. 39   43.

[29] j. kleinberg, authoritative sources in a hyperlinked environment, j. acm, 46 (1999), pp. 604   

632.

[30] g. kollias and e. gallopoulos, functional rankings with multidamping: generalizing
id95 with inhomogeneous matrix products, tech. rep. tr hpclab-scg 01/09-11,
university of patras, greece, 2011.

[31] a. n. langville and c. d. meyer, a survey of eigenvector methods for web information

retrieval, siam rev., 47 (2005), pp. 135   161.

[32] a. n. langville and c. d. meyer, google   s id95 and beyond: the science of search

engine rankings, princeton university press, princeton, nj, 2006.

[33] a. n. langville and c. d. meyer, who   s #1? the science of rating and ranking, princeton

university press, princeton, nj, 2012.

[34] g. meurant, mmq toolbox for matlab, http://pagesperso-orange.fr/gerard.meurant/.
[35] m. mihail and c. papadimitriou, on the eigenvalue power law, in j. d. p. rolim and s. vad-
han (eds.), proceedings of random 2002, lectures notes in computer science, 2483
(2002), pp. 254   262.

[36] m. e. j. newman, the structure and function of complex networks, siam rev., 45 (2003),

pp. 167   256.

[37] m. e. j. newman, networks: an introduction, cambridge university press, cambridge, uk,

2010.

[38] m. e. j. newman, a.-l. barabasi, and d. j. watts, the structure and dynamics of net-

works, princeton university press, princeton, nj, 2003.

[39] b. savas and i. dhillon, clustered low rank approximation of graphs in information science

applications, proceedings of the 2011 siam conference on data mining, april 2011.

[40] p. tsaparas, datasets for experiments on link analysis ranking algorithms. available
at http://www.cs.toronto.edu/   tsap/experiments/datasets/index.html (last accessed june
2012).

[41] s. vigna, spectral ranking, arxiv:0912.0238v9 [cs.ir], 2 march 2011.
[42] g. wu and j. li, swrank: an approach for ranking semantic web reversely and consistently,
in third international conference on semantics, knowledge and grid, ieee, 2007. doi:
10.1109/skg.2007.81

[43] g. wu, j. li, l. feng, and k. wang, identifying potentially important concepts and relations
in an ontology, in a. sheth et al. (eds.), proceedings of iswc 2008, lecture notes in
computer science, 5318 (2008), pp. 33   49.

