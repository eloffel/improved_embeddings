multi-way, multilingual id4

with a shared attention mechanism

orhan firat

middle east technical university

kyunghyun cho

new york university

orhan.firat@ceng.metu.edu.tr

yoshua bengio

university of montreal
cifar senior fellow

6
1
0
2

 

n
a
j
 

6

 
 
]
l
c
.
s
c
[
 
 

1
v
3
7
0
1
0

.

1
0
6
1
:
v
i
x
r
a

abstract

we propose multi-way, multilingual neural
machine translation. the proposed approach
enables a single neural translation model to
translate between multiple languages, with a
number of parameters that grows only lin-
early with the number of languages. this
is made possible by having a single atten-
tion mechanism that is shared across all lan-
guage pairs. we train the proposed multi-
way, multilingual model on ten language pairs
from wmt   15 simultaneously and observe
clear performance improvements over models
trained on only one language pair. in partic-
ular, we observe that the proposed model sig-
ni   cantly improves the translation quality of
low-resource language pairs.

introduction

1
id4 it has been shown
that a deep (recurrent) neural network can success-
fully learn a complex mapping between variable-
length input and output sequences on its own. some
of the earlier successes in this task have, for in-
stance, been handwriting recognition (bottou et al.,
1997; graves et al., 2009) and speech recogni-
tion (graves et al., 2006; chorowski et al., 2015).
more recently, a general framework of encoder-
decoder networks has been found to be effective at
learning this kind of sequence-to-sequence mapping
by using two recurrent neural networks (cho et al.,
2014b; sutskever et al., 2014).

a basic encoder-decoder network consists of two
recurrent networks. the    rst network, called an en-
coder, maps an input sequence of variable length

into a point in a continuous vector space, resulting
in a    xed-dimensional context vector. the other re-
current neural network, called a decoder, then gener-
ates a target sequence again of variable length start-
ing from the context vector. this approach however
has been found to be inef   cient in (cho et al., 2014a)
when handling long sentences, due to the dif   culty
in learning a complex mapping between an arbitrary
long sentence and a single    xed-dimensional vector.
in (bahdanau et al., 2014), a remedy to this issue
was proposed by incorporating an attention mecha-
nism to the basic encoder-decoder network. the at-
tention mechanism in the encoder-decoder network
frees the network from having to map a sequence of
arbitrary length to a single,    xed-dimensional vec-
tor. since this attention mechanism was introduced
to the encoder-decoder network for machine trans-
lation, id4, which is purely
based on neural networks to perform full end-to-end
translation, has become competitive with the exist-
ing phrase-based id151 in
many language pairs (jean et al., 2015; gulcehre et
al., 2015; luong et al., 2015b).

multilingual id4 ex-
isting machine translation systems, mostly based on
a phrase-based system or its variants, work by di-
rectly mapping a symbol or a subsequence of sym-
bols in a source language to its corresponding sym-
bol or subsequence in a target language. this kind
of mapping is strictly speci   c to a given language
pair, and it is not trivial to extend this mapping to
work on multiple pairs of languages.

a system based on id4, on
the other hand, can be decomposed into two mod-

ules. the encoder maps a source sentence into a con-
tinuous representation, either a    xed-dimensional
vector in the case of the basic encoder-decoder net-
work or a set of vectors in the case of attention-
based encoder-decoder network. the decoder then
generates a target translation based on this source
representation. this makes it possible conceptually
to build a system that maps a source sentence in
any language to a common continuous representa-
tion space and decodes the representation into any
of the target languages, allowing us to make a multi-
lingual machine translation system.

it

this possibility is straightforward to implement
and has been validated in the case of basic encoder-
decoder networks (luong et al., 2015a).
is
however not so, in the case of the attention-based
encoder-decoder network, as the attention mecha-
nism, or originally called the alignment function in
(bahdanau et al., 2014), is conceptually language
pair-speci   c.
in (dong et al., 2015), the authors
cleverly avoided this issue of language pair-speci   c
attention mechanism by considering only a one-to-
many translation, where each target language de-
coder embedded its own attention mechanism. also,
we notice that both of these works have only eval-
uated their models on relatively small-scale tasks,
making it dif   cult to assess whether multilingual
id4 can scale beyond low-
resource language translation.

multi-way, multilingual neural machine trans-
lation in this paper, we    rst step back from the
currently available multilingual neural translation
systems proposed in (luong et al., 2015a; dong
et al., 2015) and ask the question of whether the
attention mechanism can be shared across multi-
ple language pairs. as an answer to this question,
we propose an attention-based encoder-decoder net-
work that admits a shared attention mechanism with
multiple encoders and decoders. we use this model
for all the experiments, which suggests that it is
indeed possible to share an attention mechanism
across multiple language pairs.

the next question we ask is the following:

in
which scenario would the proposed multi-way, mul-
tilingual neural translation have an advantage over
the existing, single-pair model? speci   cally, we
consider a case of the translation between a low-

resource language pair. the experiments show that
the proposed multi-way, multilingual model gener-
alizes better than the single-pair translation model,
when the amount of available parallel corpus is
small. furthermore, we validate that this is not only
due to the increased amount of target-side, monolin-
gual corpus.

finally, we train a single model with the pro-
posed architecture on all the language pairs from the
wmt   15; english, french, czech, german, rus-
sian and finnish. the experiments show that it is
indeed possible to train a single attention-based net-
work to perform multi-way translation.

2 background: attention-based neural

machine translation

the attention-based id4 was
proposed in (bahdanau et al., 2014).
it was mo-
tivated from the observation in (cho et al., 2014a)
that a basic encoder-decoder translation model from
(cho et al., 2014b; sutskever et al., 2014) suffers
from translating a long source sentence ef   ciently.
this is largely due to the fact that the encoder of this
basic approach needs to compress a whole source
sentence into a single vector. here we describe the
attention-based id4.

id4 aims at building a sin-
gle neural network that takes as input a source se-
quence x = (x1, . . . , xtx) and generates a corre-

sponding translation y =(cid:0)y1, . . . , yty

(cid:1). each sym-

bol in both source and target sentences, xt or yt, is
an integer index of the symbol in a vocabulary.

the encoder of the attention-based model en-
codes a source sentence into a set of context vec-
tors c = {h1, h2, . . . , htx}, whose size varies
w.r.t.
the length of the source sentence. this con-
text set is constructed by a bidirectional recurrent
neural network (id56) which consists of a forward
id56 and reverse id56. the forward id56 reads
the source sentence from the    rst token until the
last one, resulting in the forward context vectors

(cid:110)      

h 1, . . . ,

(cid:111)

      
h tx
      
h t =

(cid:16)      

, where
      
   enc

(cid:17)

h t   1, ex [xt]

,

and ex     r|vx|  d is an embedding matrix con-
taining row vectors of the source symbols. the

(cid:110)      

(cid:111)

.

(cid:17)

h 1, . . . ,

h t+1, ex [xt]

(cid:16)      

      
   enc and

, where
      
   enc

reverse id56 in an opposite direction, resulting in

      
h tx
      
h t =
      
   enc are recurrent activation func-
tions such as long short-term memory units (lstm,
(hochreiter and schmidhuber, 1997)) or gated re-
current units (gru, (cho et al., 2014b)). at each
position in the source sentence, the forward and re-
verse context vectors are concatenated to form a full
context vector, i.e.,

(cid:104)      

(cid:105)

      
h t

ht =

h t;

.

(1)

the decoder, which is implemented as an id56
as well, generates one symbol at a time, the trans-
lation of the source sentence, based on the context
set returned by the encoder. at each time step t in
the decoder, a time-dependent context vector ct is
computed based on the previous hidden state of the
decoder zt   1, the previously decoded symbol   yt   1
and the whole context set c.

this starts by computing the relevance score of

each context vector as

et,i = fscore(hi, zt   1, ey [  yt   1]),

(2)
for all i = 1, . . . , tx. fscore can be implemented in
various ways (luong et al., 2015b), but in this work,
we use a simple single-layer feedforward network.
this relevance score measures how relevant the i-th
context vector of the source sentence is in deciding
the next symbol in the translation. these relevance
scores are further normalized:

  t,i =

exp(et,i)
j=1 exp(et,j)
and we call   t,i the attention weight.

,

(3)

the time-dependent context vector ct

is then
the weighted sum of the context vectors with their
weights being the attention weights from above:

(cid:80)tx

tx(cid:88)

ct =

  t,ihi.

(4)

i=1

with this time-dependent context vector ct, the
previous hidden state zt   1 and the previously de-
coded symbol   yt   1, the decoder   s hidden state is up-
dated by

zt =   dec (zt   1, ey [  yt   1] , ct) ,

(5)

n(cid:88)

ty(cid:88)

n=1

t=1

where   dec is a recurrent activation function.

the initial hidden state z0 of the decoder is ini-
tialized based on the last hidden state of the reverse
id56:

(cid:16)      

(cid:17)

z0 = finit

h tx

,

(6)

where finit is a feedforward network with one or two
hidden layers.

the id203 distribution for the next target

symbol is computed by

p(yt = k|  y<t, x)     egk(zt,ct,e[  yt   1]),

(7)

where gk is a parametric function that returns the
unnormalized id203 for the next target symbol
being k.

training this attention-based model is done by

maximizing the conditional log-likelihood

l(  ) =

1
n

log p(yt = y(n)

t

|y(n)
<t , x (n)),

t

where the log id203 inside the inner summa-
tion is from eq. (7).
it is important to note that
the ground-truth target symbols y(n)
are used during
training. the entire model is differentiable, and the
gradient of the log-likelihood function with respect
to all the parameters    can be computed ef   ciently
by id26. this makes it straightforward
to use stochastic id119 or its variants to
train the whole model jointly to maximize the trans-
lation performance.

3 multi-way, multilingual translation
in this section, we discuss issues and our solutions
in extending the conventional single-pair attention-
based id4 into multi-way,
multilingual model.
problem de   nition we assume n > 1 source

languages (cid:8)x 1, x 2, . . . , x n(cid:9) and m > 1 tar-
get languages (cid:8)y 1, y 2, . . . , y m(cid:9) , and the avail-

ability of l     m    n bilingual parallel corpora
{d1, . . . , dl}, each of which is a set of sentence
pairs of one source and one target languages. we
use s(dl) and t(dl) to indicate the source and tar-
get languages of the l-th parallel corpus.

for each parallel corpus l, we can directly
use the log-likelihood function from eq. (7) to

de   ne a pair-speci   c log-likelihood ls(dl),t(dl).
the goal of multi-way, multilingual neu-
then,
(cid:80)l
ral machine translation is
to build a model
log-likelihood function
that maximizes the joint
l(  ) = 1
l=1 ls(dl),t(dl)(  ). once the training
is over, the model can do translation from any of
the source languages to any of the target languages
included in the parallel corpora.

l

3.1 existing approaches
id4 without attention
in (luong et al., 2015a), the authors extended the
basic encoder-decoder network for multitask neu-
ral machine translation. as they extended the ba-
sic encoder-decoder network, their model effectively
becomes a set of encoders and decoders, where each
of the encoder projects a source sentence into a com-
mon vector space. the point in the common space
is then decoded into different languages.

the major difference between (luong et al.,
2015a) and our work is that we extend the attention-
based encoder-decoder instead of the basic model.
this is an important contribution, as the attention-
based id4 has become de
facto standard in neural translation literatures re-
cently (jean et al., 2014; jean et al., 2015; luong
et al., 2015b; sennrich et al., 2015b; sennrich et al.,
2015a), by opposition to the basic encoder-decoder.
there are two minor differences as well. first,
they do not consider multilinguality in depth. the
authors of (luong et al., 2015a) tried only a sin-
gle language pair, english and german,
in their
model. second, they only report translation perplex-
ity, which is not a widely used metric for measur-
ing translation quality. to more easily compare with
other machine translation approaches it would be
important to evaluate metrics such as id7, which
counts the number of matched id165s between the
generated and reference translations.

one-to-many id4 the
authors of (dong et al., 2015) earlier proposed
a multilingual
translation model based on the
attention-based id4. unlike
this paper, they only tried it on one-to-many trans-
lation, similarly to earlier work by (collobert et al.,
2011) where one-to-many natural language process-
ing was done. in this setting, it is trivial to extend the

single-pair attention-based model into multilingual
translation by simply having a single encoder for a
source language and pairs of a decoder and attention
mechanism (eq. (2)) for each target language. we
will shortly discuss more on why, with the attention
mechanism, one-to-many translation is trivial, while
multi-way translation is not.

3.2 challenges
a quick look at id4 seems to
suggest a straightforward path toward incorporating
multiple languages in both source and target sides.
as described earlier already in the introduction, the
basic idea is simple. we assign a separate encoder
to each source language and a separate decoder to
each target language. the encoder will project a
source sentence in its own language into a common,
language-agnostic space, from which the decoder
will generate a translation in its own language.

unlike training multiple single-pair neural trans-
lation models, in this case, the encoders and de-
coders are shared across multiple pairs. this is com-
putationally bene   cial, as the number of parameters
grows only linearly with respect to the number of
languages (o(l)), in contrary to training separate
single-pair models, in which case the number of pa-
rameters grows quadratically (o(l2).)

the attention mechanism, which was initially
called a soft-alignment model in (bahdanau et al.,
2014), aligns a (potentially non-contiguous) source
phrase to a target word. this alignment process is
largely speci   c to a language pair, and it is not clear
whether an alignment mechanism for one language
pair can also work for another pair.

the most naive solution to this issue is to have
o(l2) attention mechanisms that are not shared
across multiple language pairs.
each attention
mechanism takes care of a single pair of source and
target languages. this is the approach employed in
(dong et al., 2015), where each decoder had its own
attention mechanism.

there are two issues with this naive approach.
first, unlike what has been hoped initially with mul-
tilingual id4, the number of
parameters again grows quadratically w.r.t. the num-
ber of languages. second and more importantly,
having separate attention mechanisms makes it less
likely for the model to fully bene   t from having mul-

# symbols

other
# en
1.022b
2.213b
186.57m 185.58m
50.62m
55.76m
111.77m 117.41m
52.76m
43.67m

# sentence

pairs
38.85m
12.12m
2.32m
4.15m
2.03m

en-fr
en-cs
en-ru
en-de
en-fi

table 1: statistics of the parallel corpora from wmt   15. sym-
bols are bpe-based sub-words.
volutional instead of recurrent.) this allows us to
ef   ciently incorporate varying types of languages in
the proposed multilingual translation model.

this however implies that the dimensionality of
the context vectors in eq. (1) may differ across
source languages. therefore, we add to the origi-
nal bidirectional encoder from sec. 2, a linear trans-
formation layer consisting of a weight matrix wn
adp
and a bias vector bn
adp, which is used to project each
context vector into a common dimensional space:

(cid:104)      
hn
t = wn
h t;
adp
      
adp     rd  (dim
h t+dim

+ bn

      
h t
      
h t) and bn

adp,

where wn

(8)
adp     rd.
in addition, each encoder exposes two transfor-
mation functions   n
init. the    rst transformer
att transforms a context vector to be compatible
  n
with a shared attention mechanism:

att and   n

(cid:105)

  hn
t =   n

att(hn

t ).

(9)

this transformer can be implemented as any type of
parametric function, and in this paper, we simply ap-
ply an element-wise tanh to hn
t .
init transforms the    rst
the second transformer   n
1 to be compatible with the initial-

context vector hn
izer of the decoder   s hidden state (see eq. (6)):

1 ).

init(hn

  hn
1 =   n

(10)
att, it can be implemented as any type
similarly to   n
in this paper, we use a
of parametric function.
feedforward network with a single hidden layer and
share one network   init for all encoder-decoder pairs,
like attention mechanism.
decoders we    rst start with an initialization of the
decoder   s hidden state. each decoder has its own
parametric function   m
init that maps the last context
vector   hn
of the source encoder from eq. (10) into
tx
the initial hidden state:
init(  hn

0 =   m
zm

tx) =   m

init(hn

init(  n

1 ))

figure 1: one step of the proposed multi-way. multilingual
id4 model, for the n-th encoder and
the m-th decoder at time step t. see sec. 4 for details.

tiple tasks (caruana, 1997), especially for transfer
learning towards resource-poor languages.

in short, the major challenge in building a multi-
way, multilingual id4 is in
avoiding independent (i.e., quadratically many) at-
tention mechanisms. there are two questions be-
hind this challenge. the    rst one is whether it is
even possible to share a single attention mechanism
across multiple language pairs. the second ques-
tion immediately follows: how can we build a neural
translation model to share a single attention mecha-
nism for all the language pairs in consideration?

4 multi-way, multilingual model

we describe in this section a proposed multi-
way, multilingual attention-based neural machine
translation. the proposed model consists of n
encoders {  n
n=1 (see eq. (1)), m decoders
{(  m
m=1 (see eqs.
(5)   (7)) and a
dec, gm, f m
shared attention mechanism fscore (see eq. (2) in the
single language pair case).

enc}n
init)}m

encoders similarly to (luong et al., 2015b), we
have one encoder per source language, meaning that
a single encoder is shared for translating the lan-
guage to multiple target languages. in order to han-
dle different source languages better, we may use for
each source language a different type of encoder, for
instance, of different size (in terms of the number
of recurrent units) or of different architecture (con-

init can be any parametric function, and in this pa-
  m
per, we used a feedforward network with a single
tanh hidden layer.

each decoder exposes a parametric function   m
att
that transforms its hidden state and the previously
decoded symbol to be compatible with a shared at-
tention mechanism. this transformer is a paramet-
ric function that takes as input the previous hidden
state zm
t   1 and returns
t   1 and the previous symbol   ym
a vector for the attention mechanism:

(cid:0)zm

(cid:2)  ym

t   1

(cid:3)(cid:1)

  zm
t   1 =   m
att

t   1, em
y

(11)

which replaces zt   1 in eq. 2. in this paper, we use
a feedforward network with a single tanh hidden
layer for each   m
att.

given the previous hidden state zm

t   1, previously
t   1 and the time-dependent con-
t , which we will discuss shortly, the

decoded symbol   ym
text vector cm
decoder updates its hidden state:

(cid:0)zm

(cid:2)  ym

t   1

(cid:3) , f m

adp(cm

t )(cid:1) ,

zt =   dec

t   1, em
y

where f m
adp af   ne-transforms the time-dependent
context vector to be of the same dimensionality as
the decoder. we share a single af   ne-transformation
layer f m

adp, for all the decoders in this paper.

once the hidden state is updated, the id203
distribution over the next symbol is computed ex-
actly as for the pair-speci   c model (see eq. (7).)
attention mechanism unlike the encoders and
decoders of which there is an instance for each lan-
guage, there is only a single attention mechanism,
shared across all the language pairs. this shared
mechanism uses the attention-speci   c vectors   hn
t
t   1 from the encoder and decoder, respectively.
and   zm
t is
computed based on the decoder   s previous hidden
state zm

the relevance score of each context vector hn

t   1 and previous symbol   ym

t   1:

(cid:16)  hn

(cid:17)

em,n
t,i =fscore

t ,   zm

t   1,   ym
t   1

these scores are normalized according to eq. (3) to
become the attention weights   m,n
t,i

with these attention weights, the time-dependent
context vector is computed as the weighted sum of
the original context vectors: cm,n
t,i hn
i .
see fig. 1 for the illustration.

t =(cid:80)tx

i=1   m,n

.

single

21/19.93

i
f
   
n
e

5.06/3.96
7.1/6.16
9.11/7.85
11.08/9.96
14.27/13.2
18.32/17.32

single+df
4.98/3.99
7.21/6.17
9.31/8.18
11.59/10.15
14.65/13.88
18.51/17.62
21.69/20.75
23.33/22.86
11.71/11.16
14.88/15.05
17.21/17.88
19.36/20.13

size
100k
200k
400k
800k
n 210k
420k
e
   
840k
e
d
1.68m 23.38/23.01
11.44/11.57
e 210k
14.28/14.25
420k
d
   
840k
17.09/17.44
n
e
1.68m 19.09/19.6

multi
6.2/5.17
8.84/7.53
11.09/9.98
12.73/11.28
16.96/16.26
19.81/19.63
22.17/21.93
23.86/23.52
12.63/12.68
15.01/15.67
17.33/18.14
19.23/20.59
table 2: id7 scores where the target pair   s parallel corpus is
constrained to be 5%, 10%, 20% and 40% of the original size.
we report the id7 scores on the development and test sets
(separated by /) by the single-pair model (single), the single-
pair model with monolingual corpus (single+df) and the pro-
posed multi-way, multilingual model (multi).
5 experiment settings
5.1 datasets
we evaluate the proposed multi-way, multilingual
translation model on all the pairs available from
wmt   15   english (en)     french (fr), czech (cs),
german (de), russian (ru) and finnish (fi)   , to-
talling ten directed pairs. for each pair, we concate-
nate all the available parallel corpora from wmt   15
and use it as a training set. we use newstest-2013 as
a development set and newstest-2015 as a test set, in
all the pairs other than fi-en. in the case of fi-en,
we use newsdev-2015 and newstest-2015 as a devel-
opment set and test set, respectively.
id174 each training corpus is tok-
enized using the tokenizer script from the moses de-
coder. the tokenized training corpus is cleaned fol-
lowing the procedure in (jean et al., 2015). instead
of using space-separated tokens, or words, we use
sub-word units extracted by byte pair encoding, as
recently proposed in (sennrich et al., 2015b). for
each and every language, we include 30k sub-word
symbols in a vocabulary. see table 1 for the statis-
tics of the    nal, preprocessed training corpora.
evaluation metric we mainly use id7 as an
evaluation metric using the multi-id7 script from
moses. id7 is computed on the tokenized text af-
ter merging the bpe-based sub-word symbols. we
further look at the average log-id203 assigned

to reference translations by the trained model as an
additional evaluation metric, as a way to measure the
model   s density estimation performance free from
any error caused by approximate decoding.

5.2 two scenarios
low-resource translation first, we investigate
the effect of the proposed multi-way, multilin-
gual model on low-resource language-pair transla-
tion. among the    ve languages from wmt   15, we
choose en, de and fi as source languages, and en
and de as target languages. we control the amount
of the parallel corpus of each pair out of three to
be 5%, 10%, 20% and 40% of the original corpus.
in other words, we train four models with different
sizes of parallel corpus for each language pair (en-
de, de-en, fi-en.)

as a baseline, we train a single-pair model for
each multi-way, multilingual model. we further
   netune the single-pair model to incorporate the
target-side monolingual corpus consisting of all the
target side text from the other language pairs (e.g.,
when a single-pair model was trained on fi-en, the
target-side monolingual corpus consists of the tar-
get sides from de-en.) this is done by the recently
proposed deep fusion (gulcehre et al., 2015). the
latter is included to tell whether any improvement
from the multilingual model is simply due to the in-
creased amount of target-side monolingual corpus.

large-scale translation we train one multi-way,
multilingual model that has    ve encoders and    ve
decoders, corresponding to the    ve languages from
wmt   15; en, fr, de, cs, ru, fi     en, fr, de, cs,
ru, fi. we use the full corpora for all of them.

5.3 model architecture
each symbol, either source or target, is projected on
a 620-dimensional space. the encoder is a bidirec-
tional recurrent neural network with 1,000 gated re-
current units (gru) in each direction, and the de-
coder is a recurrent neural network with also 1,000
gru   s. the decoder   s output function gk from
eq. (7) is a feedforward network with 1,000 tanh
hidden units. the dimensionalities of the context
in eq. (8), the attention-speci   c context
vector hn
t
vector   hn
in eq. (9) and the attention-speci   c de-
t
coder hidden state   hm
t   1 in eq. (11) are all set to

1,200.

we use the same type of encoder for every source
language, and the same type of decoder for every
target language. the only difference between the
single-pair models and the proposed multilingual
ones is the numbers of encoders n and decoders
m. we leave those multilingual translation speci   c
components, such as the ones in eqs. (8)   (11), in
the single-pair models in order to keep the number
of shared parameters constant.

5.4 training
basic settings we train each model using stochas-
tic id119 (sgd) with adam (kingma and
ba, 2015) as an adaptive learning rate algorithm. we
use the initial learning rate of 2    10   4 and leave all
the other hyperparameters as suggested in (kingma
and ba, 2015). each sgd update is computed us-
ing a minibatch of 80 examples, unless the model is
parallelized over two gpus, in which case we use
a minibatch of 60 examples. we only use sentences
of length up to 50 symbols. we clip the norm of the
gradient to be no more than 1 (pascanu et al., 2012).
all training runs are early-stopped based on id7
on the development set. as we observed in prelim-
inary experiments better scores on the development
set when    netuning the shared parameters and out-
put layers of the decoders in the case of multilingual
models, we do this for all the multilingual models.
during    netuning, we clip the norm of the gradient
to be no more than 5.

schedule as we have access only to bilingual cor-
pora, each sentence pair updates only a subset of
the parameters. excessive updates based on a sin-
gle language pair may bias the model away from the
other pairs. to avoid it, we cycle through all the lan-
guage pairs, one pair at a time, in fi(cid:28)en, de(cid:28)en,
fr(cid:28)en, cs(cid:28)en, ru(cid:28)en order.1
model parallelism the size of the multilingual
model grows linearly w.r.t. the number of languages.
we observed that a single model that handles    ve
source and    ve target languages does not    t in a sin-
gle gpu during training. we address this by dis-
tributing computational paths according to different
translation pairs over multiple gpus. the shared pa-

1(cid:28) indicates simultaneous updates on two gpus.

fr (39m)

cs (12m)

de (4.2m)

ru (2.3m)

dir     en
27.22
26.09
27.94
28.06
-50.53
-50.6
-43.34
-42.22

en         en
13.15
18.06
v single
e
12.97
17.89
multi
d
19.54
12.24
t single
s
12.61
e
19.39
multi
t
-88.44
-65.81
v single
-74.84
-63.75
multi
-60.29
-88.66
t single
s
-71.26
-58.63
e
multi
t
table 3: (a) id7 scores and (b) average log-probabilities for all the    ve languages from wmt   15.

en         en
21.24
26.91
21.23
25.04
29.7
20.32
20.57
27.88
-60.69
-53.38
-54.46
-56.55
-45.07
-60.03
-54.66
-46.29

en         en
21.04
20.49
21.48
19.17
21.75
22.44
23.44
20.59
-60.19
-61.21
-54.09
-62.34
-59.55
-60.65
-54.49
-60.23

en         en
24.13
15.9
14.42
23.66
13.84
13.29
-69.56
-70.76
-64.34
-64.80

24
24.20
-54.76
-54.14
-57.81
-53.85

e

u
e
l
b

)
a
(

l d
l
)
b
(

en    
9.59
8.92
9.23
8.98
-91.75
-88.02
-94.23
-88.09

fi (2m)

rameters, mainly related to the attention mechanism,
is duplicated on both gpus. the implementation
was based on the work in (ding et al., 2014).

6 results and analysis

low-resource translation it is clear from ta-
ble 2 that the proposed model (multi) outperforms
the single-pair one (single) in all the cases. this
is true even when the single-pair model is strength-
ened with a target-side monolingual corpus (sin-
gle+df). this suggests that the bene   t of general-
ization from having multiple languages goes beyond
that of simply having more target-side monolingual
corpus. the performance gap grows as the size of
target parallel corpus decreases.

large-scale translation in table 3, we observe
that the proposed multilingual model outperforms or
is comparable to the single-pair models for the ma-
jority of the all ten pairs/directions considered. this
happens in terms of both id7 and average log-
id203. this is encouraging, considering that
there are twice more parameters in the whole set of
single-pair models than in the multilingual model.

it is worthwhile to notice that the bene   t is more
apparent when the model translates from a foreign
language to english. this may be due to the fact
that all of the parallel corpora include english as ei-
ther a source or target language, leading to a better
parameter estimation of the english decoder. in the
future, a strategy of using a pseudo-parallel corpus
to increase the amount of training examples for the
decoders of other languages (sennrich et al., 2015a)
should be investigated to con   rm this conjecture.

7 conclusion
in this paper, we proposed multi-way, multilingual
attention-based id4. the pro-
posed approach allows us to build a single neural
network that can handle multiple source and target
languages simultaneously. the proposed model is a
step forward from the recent works on multilingual
neural translation, in the sense that we support atten-
tion mechanism, compared to (luong et al., 2015a)
and multi-way translation, compared to (dong et
al., 2015). furthermore, we evaluate the proposed
model on large-scale experiments, using the full set
of parallel corpora from wmt   15.

we empirically evaluate the proposed model in
large-scale experiments using all    ve languages
from wmt   15 with the full set of parallel corpora
and also in the settings with arti   cially controlled
amount of the target parallel corpus.
in both of
the settings, we observed the bene   ts of the pro-
posed multilingual neural translation model over
having a set of single-pair models. the improve-
ment was especially clear in the cases of translating
low-resource language pairs.

we observed the larger improvements when trans-
lating to english. we conjecture that this is due
to a higher availability of english in most parallel
corpora, leading to a better parameter estimation of
the english decoder. more research on this phe-
nomenon in the future will result in further improve-
ments from using the proposed model. also, all the
other techniques proposed recently, such as ensem-
bling and large vocabulary tricks, need to be tried to-
gether with the proposed multilingual model to im-
prove the translation quality even further. finally, an
interesting future work is to use the proposed model
to translate between a language pair not included in
a set of training corpus.

acknowledgments

the authors would like to thank the developers of
theano (bergstra et al., 2010; bastien et al., 2012)
and blocks (van merri  enboer et al., 2015). we ac-
knowledge the support of the following organiza-
tions for research funding and computing support:
nserc, samsung, ibm, calcul qu  ebec, compute
canada, the canada research chairs, cifar and
tubitak-2214a.

references
[bahdanau et al.2014] dzmitry bahdanau, kyunghyun
cho, and yoshua bengio.
2014. neural machine
translation by jointly learning to align and translate.
in iclr 2015.

[bastien et al.2012] fr  ed  eric bastien, pascal lamblin,
razvan pascanu, james bergstra, ian j. goodfellow,
arnaud bergeron, nicolas bouchard, and yoshua ben-
gio.
2012. theano: new features and speed im-
provements. deep learning and unsupervised fea-
ture learning nips 2012 workshop.

[bergstra et al.2010] james bergstra, olivier breuleux,
fr  ed  eric bastien, pascal lamblin, razvan pascanu,
guillaume desjardins, joseph turian, david warde-
farley, and yoshua bengio. 2010. theano: a cpu and
gpu math expression compiler. in proceedings of the
python for scienti   c computing conference (scipy),
june.

[bottou et al.1997] l  eon bottou, yoshua bengio, and
yann le cun. 1997. global training of document pro-
cessing systems using graph transformer networks. in
id161 and pattern recognition, 1997. pro-
ceedings., 1997 ieee computer society conference
on, pages 489   494. ieee.

[caruana1997] rich caruana. 1997. multitask learning.

machine learning, 28(1):41   75.

[cho et al.2014a] kyunghyun cho, bart van merri  enboer,
dzmitry bahdanau, and yoshua bengio. 2014a. on
the properties of id4: encoder   
decoder approaches. in eighth workshop on syntax,
semantics and structure in statistical translation, oc-
tober.

cho,

[cho et al.2014b] kyunghyun

bart
van merri  enboer, caglar gulcehre, dzmitry bah-
danau, fethi bougares, holger schwenk, and yoshua
bengio.
learning phrase representations
using id56 encoder-decoder for statistical machine
translation. arxiv preprint arxiv:1406.1078.

2014b.

bengio. 2015. attention-based models for speech
recognition. in advances in neural information pro-
cessing systems, pages 577   585.

[collobert et al.2011] ronan collobert, jason weston,
l  eon bottou, michael karlen, koray kavukcuoglu,
and pavel kuksa. 2011. natural language process-
ing (almost) from scratch. the journal of machine
learning research, 12:2493   2537.

[ding et al.2014] weiguang ding, ruoyan wang, fei
mao, and graham w. taylor. 2014. theano-based
large-scale visual recognition with multiple gpus.
arxiv:1412.2302.

[dong et al.2015] daxiang dong, hua wu, wei he, dian-
hai yu, and haifeng wang. 2015. id72
for multiple language translation. acl.

[graves et al.2006] alex graves, santiago fern  andez,
faustino gomez, and j  urgen schmidhuber.
2006.
connectionist temporal classi   cation: labelling unseg-
mented sequence data with recurrent neural networks.
in proceedings of the 23rd international conference on
machine learning, pages 369   376. acm.

[graves et al.2009] alex graves, marcus liwicki, san-
tiago fern  andez, roman bertolami, horst bunke,
and j  urgen schmidhuber. 2009. a novel connec-
tionist system for unconstrained handwriting recogni-
tion. pattern analysis and machine intelligence, ieee
transactions on, 31(5):855   868.

[gulcehre et al.2015] caglar gulcehre, orhan firat,
kelvin xu, kyunghyun cho, loic barrault, huei-
chi lin, fethi bougares, holger schwenk, and
yoshua bengio. 2015. on using monolingual cor-
arxiv preprint
pora in id4.
arxiv:1503.03535.

[hochreiter and schmidhuber1997] sepp hochreiter and
j  urgen schmidhuber. 1997. long short-term memory.
neural computation, 9(8):1735   1780.

[jean et al.2014] s  ebastien

jean, kyunghyun cho,
roland memisevic, and yoshua bengio. 2014. on
using very large target vocabulary for neural machine
translation. in acl 2015.

[jean et al.2015] s  ebastien jean, orhan firat, kyunghyun
cho, roland memisevic, and yoshua bengio. 2015.
montreal id4 systems for
in proceedings of the tenth workshop on
wmt   15.
id151, pages 134   140, lis-
bon, portugal, september. association for computa-
tional linguistics.

[kingma and ba2015] diederik kingma and jimmy ba.
2015. adam: a method for stochastic optimization.
the international conference on learning represen-
tations (iclr).

[chorowski et al.2015] jan k chorowski, dzmitry bah-
danau, dmitriy serdyuk, kyunghyun cho, and yoshua

[luong et al.2015a] minh-thang luong, quoc v le, ilya
sutskever, oriol vinyals, and lukasz kaiser. 2015a.

multi-task sequence to sequence learning.
preprint arxiv:1511.06114.

arxiv

[luong et al.2015b] minh-thang luong, hieu pham, and
christopher d manning. 2015b. effective approaches
to attention-based id4. arxiv
preprint arxiv:1508.04025.

[pascanu et al.2012] razvan pascanu, tomas mikolov,
2012. on the dif   culty of
arxiv preprint

and yoshua bengio.
training recurrent neural networks.
arxiv:1211.5063.

[sennrich et al.2015a] rico sennrich, barry haddow, and
alexandra birch.
improving neural ma-
chine translation models with monolingual data. arxiv
preprint arxiv:1511.06709.

2015a.

[sennrich et al.2015b] rico sennrich, barry haddow, and
alexandra birch. 2015b. neural machine transla-
tion of rare words with subword units. arxiv preprint
arxiv:1508.07909.

[sutskever et al.2014] ilya sutskever, oriol vinyals, and
quoc vv le. 2014. sequence to sequence learning
with neural networks. in advances in neural informa-
tion processing systems, pages 3104   3112.

[van merri  enboer et al.2015] bart

van merri  enboer,
dzmitry bahdanau, vincent dumoulin, dmitriy
serdyuk, david warde-farley, jan chorowski, and
yoshua bengio. 2015. blocks and fuel: frameworks
for deep learning. corr, abs/1506.00619.

