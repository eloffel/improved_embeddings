ultradense id27s by orthogonal transformation

sascha rothe and sebastian ebert and hinrich sch  utze

center for information and language processing

lmu munich, germany

6
1
0
2

 

y
a
m
8

 

 
 
]
l
c
.
s
c
[
 
 

2
v
2
7
5
7
0

.

2
0
6
1
:
v
i
x
r
a

{sascha|ebert}@cis.lmu.de

abstract

embeddings are generic representations that
are useful for many nlp tasks. in this paper,
we introduce densifier, a method that learns
an orthogonal transformation of the embed-
ding space that focuses the information rele-
vant for a task in an ultradense subspace of a
dimensionality that is smaller by a factor of
100 than the original space. we show that
ultradense embeddings generated by densi-
fier reach state of the art on a lexicon creation
task in which words are annotated with three
types of lexical information     sentiment, con-
creteness and frequency. on the semeval2015
10b id31 task we show that no
information is lost when the ultradense sub-
space is used, but training is an order of mag-
nitude more ef   cient due to the compactness
of the ultradense space.

introduction

1
embeddings are useful for many tasks, including
word similarity (e.g., pennington et al. (2014)),
id39 (ner) (e.g., collobert et
al. (2011)) and id31 (e.g., kim (2014),
kalchbrenner et al. (2014), severyn and moschitti
(2015)). embeddings are generic representations,
containing different types of information about a
word. statistical models can be trained to make best
use of these generic representations for a speci   c ap-
plication like ner or id31 (ebert et
al., 2015).

our hypothesis in this paper is that the informa-
tion useful for any given task is contained in an ul-
tradense subspace eu. we propose the new method

densifier to identify eu. given a set of word em-
beddings, densifier learns an orthogonal transfor-
mation of the original space eo on a task-speci   c
training set. the orthogonality of the transformation
can be considered a hard regularizer.

the bene   t of the proposed method is that embed-
dings are most useful if learned on unlabeled cor-
pora and performance-enhanced on a broad array of
tasks. this means we should try to keep all informa-
tion offered by them. orthogonal transformations
   reorder    the space without adding or removing in-
formation and preserve the bilinear form, i.e., eu-
clidean distance and cosine. the transformed em-
beddings concentrate all information relevant for the
task in eu.

the bene   ts of eu compared to eo are (i) high-
quality and (ii) ef   cient representations. (i) densi-
fier moves non-task-related information outside of
eu, i.e., into the orthogonal complement of eu. as
a result, eu provides higher-quality representations
for the task than eo; e.g., noise that could result in
over   tting is reduced in eu compared to eo. (ii) eu
has a dimensionality smaller by a factor of 100 in our
experiments. as a result, training statistical models
on these embeddings is much faster. these models
also have many fewer parameters, thus again helping
to prevent over   tting, especially for complex, deep
neural networks.

we show the bene   ts of ultradense representa-
tions in two text polarity classi   cation tasks (sem-
eval2015 task 10b, czech movie reviews).

in the most extreme form, ultradense representa-
tions     i.e., eu     have a single dimension. we ex-
ploit this for creating lexicons in which words are

annotated with lexical information, e.g., with senti-
ment. speci   cally, we create high-coverage lexicons
with up to 3 million words (i) for three lexical prop-
erties: for sentiment, concreteness and frequency;
(ii) for    ve languages: czech, english, french, ger-
man and spanish; (iii) for two domains, twitter and
news, in a id20 setup.

the main advantages of this method of lexicon
creation are: (i) we need a training lexicon of only a
few hundred words, thus making our method effec-
tive for new domains and languages and requiring
only a minimal manual annotation effort. (ii) the
method is applicable to any set of embeddings, in-
cluding phrase and sentence embeddings. assum-
ing the availability of a small hand-labeled lexicon,
densifier automatically creates a domain depen-
dent lexicon based on a set of embeddings learned
on a large corpus of the domain. (iii) while the in-
put lexicon is discrete     e.g., positive (+1) and nega-
tive (-1) sentiment     the output lexicon is continuous
and this more    ne-grained assessment is potentially
more informative than a simple binary distinction.

we show that lexicons created by densifier beat
the state of the art on semeval2015 task 10e (deter-
mining association strength).

one of our goals is to make embeddings more
interpretable. the work on sentiment, concrete-
ness and frequency we present in this paper is a
   rst step towards a general decomposition of embed-
ding spaces into meaningful, dense subspaces. this
would lead to cleaner and more easily interpretable
representations     as well as representations that are
more effective and ef   cient.

2 model
let q     rd  d be an orthogonal matrix that trans-
forms the original id27 space into a
space in which certain types of information are
represented by a small number of dimensions.
concretely, we learn q such that the dimensions
ds     {1, . . . , d} of the resulting space corre-
spond to a word   s sentiment information and the
{1, . . . , d}\ds remaining dimensions correspond to
non-sentiment information. analogously, the sets of
dimensions dc and df correspond to a word   s con-
creteness information and frequency information,
respectively.
in this paper, we assume that these

properties do not correlate and therefore the ultra-
dense subspaces do not overlap, e.g., ds     dc =    .
however, this might not be true for other settings,
e.g., sentiment and semantic information.
if ew     eo     rd is the original embedding
of word w, the transformed representation is qew.
we use     as a placeholder for s, c and f and call
d    = |d   | the dimensionality of the ultradense sub-
space of    . for each ultradense subspace, we create
p         rd     d, an identity matrix for the dimensions
in d        {1, . . . , d}. thus, the ultradense represen-
tation u   

of ew is de   ned as:

w     eu     rd   
u   
w := p    qew

(1)

2.1 separating words of different groups
we assume to have a lexicon resource l in which
each word w is annotated for a certain information
as either l   (w) = +1 (positive, concrete, frequent)
or l   (w) =    1 (negative, abstract, infrequent). let
l   
(cid:54)    be a set of word index pairs (v, w) for which
l   (v) (cid:54)= l   (w) holds. we want to maximize:

(cid:107)u   

v     u   
w(cid:107)

(2)

thus, our objective is given by:

argmax

q

(v,w)   l   
(cid:54)   

or, equivalently, by:

(cid:107)p    q(ew     ev)(cid:107)

(3)

argmin

q

(v,w)   l   
(cid:54)   

   (cid:107)p    q(ew     ev)(cid:107)

(4)

subject to q being an orthogonal matrix.

2.2 aligning words of the same group
another goal is to minimize the distance of two
words of the same group. let l       be a set of word
index pairs (v, w) for which l   (v) = l   (w) holds.
in contrast to eq. 3, we now want to minimize each
distance. thus, the objective is given by:

(cid:107)p    q(ew     ev)(cid:107)

(5)

(cid:88)

argmin

q

(v,w)   l      

subject to q being an orthogonal matrix.

the intuition behind the two objectives is graphi-

cally depicted in figure 1.

(v,w)   l   
(cid:54)   

(cid:88)
(cid:88)
(cid:88)

figure 1: the original id27 space (left) and the transformed embedding space (right). the training objective for q is
to minimize the distances in the sentiment dimension between words of the same group (e.g., positive/green:    like    &    peace   ) and
to maximize the distances between words of different groups (e.g., negative/red & positive/green:    war    &    peace   ; not necessarily
antonyms).

2.3 training
we combine the two objectives in eqs. 3/5 for each
subspace, i.e., for sentiment, concreteness and fre-
quency, and weight them with       and 1        . hence,
there is one hyperparameter       for each subspace.
we then perform stochastic id119 (sgd).
batch size is 100 and starting learning rate is 5, mul-
tiplied by .99 in each iteration.

2.4 orthogonalization
each step of sgd updates q. the updated matrix
q(cid:48) is in general no longer orthogonal. we therefore
reorthogonalize q(cid:48) in each step based on singular
value decomposition:

q(cid:48) = u sv t

where s is a diagonal matrix, and u and v are or-
thogonal matrices. the matrix

q := u v t

is the nearest orthogonal matrix to q(cid:48) in both the
2-norm and the frobenius norm (fan and hoffman,
1955).
(formalizing our id173 directly as
projected id119 would be desirable. how-
ever, id119 includes an additive operation
and orthogonal matrices are not closed under sum-
mation.)

sgd for this problem is sensitive to the learning
rate. if the learning rate is too large, a large jump

results and the reorthogonalized matrix q basically
is a random new point in the parameter space.
if
the learning rate is too small, then learning can take
long. we found that our training regime of start-
ing at a high learning rate (5) and multiplying by
.99 in each iteration is effective. typically, the cost
initially stays about constant (random jumps in pa-
rameter space), then cost steeply declines in a small
number of about 50 iterations (sweet spot); the curve
   attens after that. training q took less than 5 min-
utes per experiment for all experiments in this paper.

3 lexicon creation
for lexicon creation, the input is a set of embed-
dings and a lexicon resource l, in which words are
annotated for a lexical information such as senti-
ment, concreteness or frequency. densifier is
then trained to produce a one-dimensional ultra-
dense subspace. the output is an output lexicon.
it consists of all words covered by the embedding
set, each associated with its one-dimensional ultra-
dense subspace representation (which is simply a
real number), an indicator of the word   s strength for
that information.

the embeddings and lexicon resources used in
this paper cover    ve languages and three domains
(table 1). the google news embeddings for en-
glish1 and the frwac embeddings for french2 are

1https://code.google.com/p/id97/
2http://fauconnier.github.io/

dislikelikepeacewardochocolatedon'tmoneymaxmaxminqdislikelikepeacewardochocolatedon'tmoneymaxmaxminsentimentdimensionnon-sentimentdimensionstrain

test

sent cz web
sent de web
sent es web
sent fr web
sent en twitter
sent en news
conc en news
freq en news
freq fr web

resource
#tokens #types
3.3
sublex 1.0
8.0 german pc
3.7
full-strength
1.6
feel
5.4 whm all

   
2.44
2,492
1.34
10,718
0.37
824
0.12
7,496
3.34
12,601
3.00 100.0 whm train
7,633
3.00 100.0 bwk
14,361
3.00 100.0 id97 order 4,000
1.6 id97 order 4,000
0.12

  
.580
1
.654
2
.563
3
.544
4
.661
5
.622
6
.623
7
.361
8
.460
9
table 1: results for lexicon creation. #tokens: size of embedding training corpus (in billion). #types: size of output lexicon (in
million). for each resource, we give its size (   #words   ) and the size of the intersection of resource and embedding set (         ).
kendall   s    is computed on          .

resource
#words
sublex 1.0
4,125
37,901 german pc
full-strength
1,147
feel
10,979
trial 10e
19,329
10,270 whm val
29,954 bwk
4,000 id97 order
4,000 id97 order

#words
500
1,000
200
1,000
200
1,000
10,000
1,000
1,000

   
319
573
185
715
198
952
8,694
1,000
1,000

publicly available. we use id97 to train 400-
dimensional embeddings for english on a 2013
twitter corpus of size 5.4   109. for czech, german
and spanish, we train embeddings on web data of
sizes 3.3, 8.0 and 3.8   109, respectively. we use the
following lexicon resources for sentiment: sublex
1.0 (veselovsk  a and bojar, 2013) for czech; whm
for english [the combination of mpqa (wilson et
al., 2005), opinion lexicon (hu and liu, 2004)
and nrc emotion lexicons (mohammad and tur-
ney, 2013)]; feel (abdaoui et al., 2014) for french;
german polarity clues (waltinger, 2010) for ger-
man; and the sentiment lexicon of p  erez-rosas et
al. (2012) for spanish. for concreteness, we use
bwk, a lexicon of 40,000 english words (brysbaert
et al., 2014). for frequency, we exploit the fact
that id97 stores words in frequency order; thus,
the ranking provided by id97 is our lexicon re-
source for frequency.

for a resource/embedding-set pair (l, e), we in-
tersect the vocabulary of l with the top 80,000 words
of e to    lter out noisy, infrequent words that tend to
have low quality embeddings and we do not want
them to introduce noise when training the transfor-
mation matrix.
for the sentiment and concreteness resources,
l   (w)     {   1, 1} for all words w covered. we cre-
ate a resource lf for frequency by setting lf (w) = 1
for the 2000 most frequent words and lf (w) =    1
for words at ranks 20000-22000. 1000 words ran-
domly selected from the 5000 most frequent are
the test set.3 we designate three sets of dimen-

3the main result of the frequency experiment below is that

sions ds, dc and df to represent sentiment, con-
creteness and frequency, respectively, and arbitrar-
ily set (i) dc = {11} for english and dc =     for
the other languages since we do not have concrete-
ness resources for them, (ii) ds = {1} and (iii)
df = {21}. referring to the lines in table 1, we
then learn six orthogonal transformation matrices q:
for cz-web (1), de-web (2), es-web (3), fr-web
(4, 9), en-twitter (5) and en-news (6, 7, 8).

4 evaluation

4.1 top-ranked words
table 2 shows the top 10 positive/negative words
(i.e., most extreme values on dimension ds) when
we apply the transformation to the corpora en-
twitter, en-news and de-web and the top 10 con-
crete/abstract words (i.e., most extreme values on di-
mension dc) for en-news. for en-twitter (leftmost
double column), the selected words look promising:
they contain highly domain-speci   c words such as
hashtags (e.g., #happy). this is surprising because
there is not a single hashtag in the lexicon resource
whm that densifier was trained on. results for
the other three double columns show likewise ex-
treme examples for the corresponding information
and language. this initial evaluation indicates that
our method effectively learns high quality lexicons
for new domains. figure 3 depicts values for se-
lected words for the three properties. illustrative ex-
amples are    brother    /    brotherhood    for concrete-
ness and    hate    /    love    for sentiment.
   is low even in a setup that is optimistic due to train/test over-
lap; presumably it would be even lower without overlap.

en-twitter

en-news

en-news

de-web

positive
#blessed
inspiration

blessed
inspiring
foundation

provide
wishes
dedicated

offers
#happy

negative

rape
racist
horrible
nasty

jealousy
murder
waste
mess

disgusting

spam

positive
expertise
delighted
honored
thank

wonderful
commitment
affordable
passion
exciting
   exibility

negative
angry
delays
worse
anger
foul

blamed
blame

complained

bad
deaths

concrete

tree
truck
kitchen

dog
bike
bat

garden
homer
bed
gallon

abstract

fundamental

obvious
legitimate
reasonable
optimistic
satis   ed
surprising

honest
regard

positive
herzlichen
kenntnisse

hervorragende

ideale
bestens

gl  uckwunsch

optimale
anregungen

freuen

extraordinary

kompetenzen

negative
gesperrt
droht

verurteilt
gefahr
falsche
streit
angst

krankheit
falschen
verdacht

table 2: top 10 words in the output lexicons for the domains twitter and news (english) and web (german).

4.2 quality of predictions

system

table 1 presents experimental results. in each case,
we split the resource into train/test, except for twit-
ter where we used the trial data of semeval2015
task 10e for test. we train densifier on train and
compute kendall   s    on test. the size of the lexicon
resource has no big effect; e.g., results for spanish
(small resource; line 3) and french (large resource;
line 4) are about the same. see section 5.2 for a
more detailed analysis of the effect of resource size.

the quality of the output lexicon depends strongly
on the quality of the underlying id27s;
e.g., results for french (small embedding train-
ing corpus; line 4) are worse than results for en-
glish (large embedding training corpus; line 6) even
though the lexicon resources have comparable size.

in contrast to sentiment/concreteness,    values for
frequency are low (lines 8-9). for the other three
languages we obtain        [.34, .46] for frequency
(not shown). this suggests that id27s
represent sentiment and concreteness much better
than frequency. the reason for this likely is the
learning objective of id27s: modeling
the context. infrequent words can occur in frequent
contexts. thus, the frequency information in a sin-
gle id27 is limited. in contrast negative
words are likely to occur in negative contexts.

the nine output lexicons in table 1     each a list
of words annotated with predicted strength on one of
three properties     are available at www.cis.lmu.
de/  sascha/ultradense/.

1 amir et al. (2015)
2 hamdan et al. (2015)
3 zhang et al. (2015)
4
5
6 densifier
7
8 densifier, trial only

sentiment140

  ozdemir and bergler (2015)
plotnikova et al. (2015)

  

   

.650   
.538   

all
.626   
.621   
.591   
.584   
.577   
.654   
.508   
.627   

table 3: results for lexicon creation. the    rst column gives
the correlation with the entire test lexicon of semeval2015 10e,
the last column only on the intersection of our output lexicon
and sentiment140. of the 1315 words of task 10e, 985 and
1308 are covered by densifier and sentiment140, respec-
tively.    : signi   cantly worse than the best (bold) result in the
same column (   = .05, fisher z-transformation).

4.3 determining association strength

we also evaluate lexicon creation on semeval2015
task 10e. as before, the task is to predict the sen-
timent score of words/phrases. we use the trial
data of the task to tune the hyperparameter,   s =
.4. out-of-vocabulary words were predicted as neu-
tral (7/1315). table 3 shows that the lexicon com-
puted by densifier (line 5, table 1) has a    of
.654 (line 6, column all), signi   cantly better than
all other systems, including the winner of semeval
2015 (   = .626, line 1). densifier also beats sen-
timent140 (mohammad et al., 2013), a widely used
semi-automatic sentiment lexicon. the last column
is    on the intersection of densifier and senti-
ment140. it shows that densifier again performs
signi   cantly better than sentiment140.

figure 2: kendall   s    versus subspace size (top) and training resource size (bottom). see lines 6 & 8, table 1, for train/test split.

4.4 text polarity classi   cation

we now show that ultradense embeddings decrease
model training times without any noticeable de-
crease in performance compared to the original em-
beddings. we evaluate on semeval2015 task 10b,
classi   cation of twitter tweets as positive, nega-
tive or neutral. we reimplement the linguistically-
informed convolutional neural network (lingid98)
of ebert et al. (2015) that has close to state-of-the-
art performance on the task. we do not use sentence-
based features to focus on the evaluation of the em-
beddings. we initialize the    rst layer of lingid98,
the embedding layer, in three different ways:
(i)
400-dimensional twitter embeddings (section 3);
(ii) 40-dimensional ultradense embeddings derived
from (i); (iii) 4-dimensional ultradense embeddings
derived from (i). the objective weighting is   s = .4,
optimized on the development set.

the embedding layer converts a sentence into a
matrix of id27s. we also add linguistic
features for words, such as sentiment lexicon scores.
the combination of embeddings and linguistic fea-
tures is the input for a convolution layer with    lters
spanning 2-5 words (100    lters each). this is fol-

lowed by a max pooling layer, a recti   er nonlinear-
ity (nair and hinton, 2010) and a fully connected
softmax layer predicting the    nal label. the model
is trained with sgd using adagrad (duchi et al.,
2011) and (cid:96)2 id173 (   = 5    10   5). learn-
ing rate is 0.01. mini-batch size is 100.

we follow the of   cial guidelines and use the sem-
eval2013 training and development sets as train-
ing set, the semeval2013 test set as development
set and the semeval2015 test set to report    nal
scores (nakov et al., 2013; rosenthal et al., 2015).
we report macro f1 of positive and negative classes
(the of   cial semeval evaluation metric) and accu-
racy over the three classes. table 4 shows that 40-
dimensional ultradense embeddings perform almost
as well as the full 400-dimensional embeddings (no
signi   cant difference according to sign test). train-
ing time is shorter by a factor of 21 (85/4 exam-
ples/second). the 4-dimensional ultradense embed-
dings lead to only a small loss of 1.5% even though
the size of the embeddings is smaller by a factor of
100 (again not a signi   cant drop). training time is
shorter by a factor of 44 (178/4).

we perform the same experiment on csfd, a

050100150200250300size of subspace00.20.40.60.8correlationultradensepcarandom101102103104size of lexicon0.30.40.50.60.7correlationsentimentconcretenesslang.
en
en
en
cz
cz
cz

embeddings
original
densifier
densifier
original
densifier
densifier

#dim
400
40
4
400
40
4

acc
.666
.662
.646
.803
.803
.771

f1
.623
.620
.608
.802
.801
.769

ex./sec
4
85
178
1
24
83

table 4: performance on text polarity classi   cation

czech movie review dataset (habernal et al., 2013),
to show the bene   ts of ultradense embeddings for a
low-resource language where only one rather small
lexicon is available. as original word embed-
dings we train new 400 dimensional embeddings
on a large twitter corpus (3.3   109 tokens). we
use densifier to create 40 and 4 dimensional
embeddings out of these embeddings and sublex
1.0 (veselovsk  a and bojar, 2013). word polarity
features are also taken from sublex. a simple bi-
nary negation indicator is implemented by searching
for all tokens beginning with    ne   . since that in-
cludes superlative forms having the pre   x    nej   , we
remove them with the exception of common negated
words, such as    nejsi           you are not   . we randomly
split the 91,000 dataset instances into 90% train and
10% test and report accuracy and macro f1 score
over all three classes.

table 4 shows that what we found for english is
also true for czech. there is only a small perfor-
mance drop when using ultradense embeddings (not
signi   cant for 40 dimensional embeddings) while
the speed improvement is substantial.

5 parameter analysis

in this section, we analyze two parameters: size of
ultradense subspace and size of lexicon resource.
we leave an evaluation of another parameter, the
size of the embedding training corpus, for future
work, but empirical results suggest that this corpus
should ideally have a size of several billion tokens.

5.1 size of subspace
with the exception of the two text polarity classi   -
cation experiments, all our subspaces have dimen-
sionality d    = 1. the question arises: does a one-
dimensional space perhaps have too low a capacity
to encode all relevant information and could we fur-
ther improve our results by increasing the dimen-

sionality of the subspace to values d    > 1? the
lexicon resources that we train and test on are all bi-
nary; thus, if we use values d    > 1, then we need to
map the subspace embeddings to a one-dimensional
scale for evaluation. we do this by training, on the
train part of the resource, a linear transformation
from the ultradense subspace to the one-dimensional
scale (e.g., to the sentiment scale).

figure 2 compares different values of ds for
three different types of subspaces in this setup,
i.e., the setup in which the subspace representa-
tions are mapped via linear transformation to a one-
dimensional sentiment value: (i) random: we take
the    rst ds dimensions of the original embeddings;
(ii) pca: we compute a pca and take the    rst ds
principal components; (iii) ultradense subspace of
dimensionality ds. we use the id27s
and lexicon resources of line 6 in table 1. for ran-
dom, the performance starts dropping when the sub-
space is smaller than 200 dimensions. for pca, the
performance is relatively stable until the subspace
becomes smaller than 100. in contrast, ultradense
subspaces have almost identical performance for all
values of ds, even for ds = 1. this suggests that
a single dimension is suf   cient to encode all senti-
ment information needed for sentiment lexicon cre-
ation. however, for other sentiment tasks more di-
mensions may be needed, e.g., for modeling differ-
ent emotional dimensions of polarity: fear, sadness,
anger etc.

is

space

an alternative approach to create a low-
dimensional
to simply train low-
dimensional id97 embeddings. the following
experiment suggests that this does not work very
well. we used id97 to train 60-dimensional
twitter embeddings with the same settings as
on line 5 in table 1. while the correlation for
400-dimensional embeddings shown in table 1 is
.661, the correlation of 60-dimensional embeddings
is only .568. thus, even though we show that the
information in 400-dimensional embeddings that
is relevant for sentiment can be condensed into a
single dimension, hundreds of dimensions seem to
be needed if we use id97 to collect sentiment
information.
if we run id97 with a small
dimensionality, only a subset of available sentiment
information is    harvested    from the corpus.

figure 3: illustration of en-twitter output lexicon: densifier values are x coordinate (sentiment), y coordinate (concreteness)
and font size (frequency)

5.2 size of training resource
next, we analyze what size of training resource is
required to learn a good transformation q. labeled
resources covering many words may not be available
or suffer from lack of quality. we use the settings of
lines 6 (sentiment) and 7 (concreteness) in table 1.
figure 2 shows that a small training resource of 300
entries is suf   cient for high performance. this sug-
gests that densifier can create a high quality out-
put lexicon for a new language by hand-labeling
only 300 words; and that a small, high-quality re-
source may be preferable to a large lower-quality re-
source (semi-automatic or out of domain).

to provide further evidence for this, we train
densifier on only the trial data of semeval2015
task 10e. to convert the continuous trial data to bi-
nary    1 / 1 labels, we discard all words with sen-
timent values between    0.5 and 0.5 and round the
remaining values, giving us 39 positive and 38 neg-
ative training words. the resulting lexicon has    =
.627 (table 3, line 8).4 this is worse than    =

.654 (line 6) for the setup in which we used sev-
eral large resources, but still better than all previ-
ous work. this indicates that densifier is espe-
cially suited for languages or domains for which lit-
tle training data is available.

6 related work

to the best of our knowledge, this paper is the    rst to
train an orthogonal transformation to reorder word
embedding dimensions into ultradense subspaces.
however, there is much prior work on postprocess-
ing id27s.

faruqui et al. (2015) perform postprocessing
based on a semantic lexicon with the goal of    ne-
tuning id27s. their transformation is
not orthogonal and therefore does not preserve dis-
tances. they show that their approach optimizes
id27s for a given application, i.e., word
similarity, but also that it worsens them for other ap-
plications like detecting syntactic relations. faruqui
et al. (2015)   s approach also does not have the bene-

4here, we tune   s on train (equals trial data of sem-
eval2015 task 10e). this seems to work due to the different

objectives for training (maximize/minimize difference) and de-
velopment (correlation).

positivenegativeabstractconcretefriendfriendshipenemy#friday#monday:):(happy#happy#sad#follower#unfollowchildchildhoodbrotherbrotherhoodromance#lovelovehatejourneyroadtripdemocracydictatorshipdictatorpresidentmoneypregnantabortiontrophysuccessbabyrobberysuncappuccinoteachocolatepukehangoverhurtpain#starwars#sotrue#storyofmylife#thatawkwardmoment#goaway#wedding#valentinesday#hiring#proud#hipster#lolvacationhomesickcoconutbeachslum   t of ultradense embeddings, in particular the bene   t
of increased ef   ciency.

in a tensor framework, rothe and sch  utze (2015)
transform the id27s to sense (synset)
embeddings. in their work, all embeddings live in
the same space whereas we explicitly want to change
the embedding space to create ultradense embed-
dings with several desirable properties.

xing et al. (2015) restricted the work of mikolov
et al. (2013) to an orthogonal transformation to en-
sure that normalized embeddings stay normalized.
this transformation is learned between two embed-
ding spaces of different languages to exploit simi-
larities. they normalized id27s in a    rst
step, something that did not improve our results.

as a reviewer pointed out, our method is also
related to oriented pca (diamantaras and kung,
1996). however in contrast to pca a solution for
oriented pca is not orthogonal.

sentiment

lexicons are often created semi-
automatically, e.g., by extending manually labeled
seed sets of sentiment words or adding for each word
its syno-/antonyms. alternatively, words frequently
cooccurring with a seed set of manually labeled sen-
timent words are added (turney, 2002; kiritchenko
et al., 2014). heerschop et al. (2011) used word-
net together with a id95-based algorithm to
propagate the sentiment of the seed set to unknown
words. scheible (2010) presented a semi-automatic
approach based on machine translation of sentiment
lexicons. the winning system of semeval2015 10e
(amir et al., 2015) was based on structured skip-
gram embeddings with 600 dimensions and support
vector regression with rbf kernels. hamdan et al.
(2015), the second ranked team, used the average of
six sentiment lexicons as a    nal sentiment score, a
method that cannot be applied to low resource lan-
guages. we showed that the lexicons created by
densifier achieve better performance than other
semi-automatically created lexicons.

tang et al. (2014b) train sentiment speci   c em-
beddings by extending collobert & weston   s model
and tang et al. (2014a)   s skip-gram model. the
   rst model automatically labels tweets as posi-
tive/negative based on emoticons, a process that can-
not be easily transferred to other domains like news.
the second uses the urban dictionary to expand a
small list of 350 sentiment seeds. in our work, we

showed that a training resource of about the same
size is suf   cient without an additional dictionary.
densifier differs from this work in that it does not
need a text corpus, but can transform existing, pub-
licly available id27s. densifier is in-
dependent of the embedding learning algorithm and
therefore extensible to other id27 mod-
els like glove (pennington et al., 2014), to phrase
embeddings (yu and dredze, 2015) and even to sen-
tence embeddings (kiros et al., 2015).

7 conclusion

we have introduced densifier, a method that is
trained to focus embeddings used for an application
to an ultradense subspace that contains the informa-
tion relevant for the application. in experiments on
semeval, we demonstrate two bene   ts of the ultra-
dense subspace.
(i) information is preserved even
if we focus on a subspace that is smaller by a fac-
tor of 100 than the original space. this means that
unnecessary noisy information is removed from the
embeddings and robust learning without over   tting
is better supported. (ii) since the subspace is 100
times smaller, models that use the embeddings as
their input representation can be trained more ef   -
ciently and have a much smaller number of parame-
ters. the subspace can be learned with just 80    300
training examples, achieving state-of-the-art results
on lexicon creation.

we have shown in this paper that up to three or-
thogonal ultradense subspaces can be created. many
training datasets can be restructured as sets of simi-
lar/dissimilar pairs. for instance, in part-of-speech
tasks verb/verb pairs would be similar, verb/noun
pairs dissimilar. hence, our objective is widely ap-
plicable. in future work, we will explore the possi-
bility of factoring all information present in an em-
bedding into a dozen or so orthogonal subspaces.
this factorization would not change the information
embeddings contain, but it would make them more
compact for any given application, more meaningful
and more interpretable.

the nine large densifier lexicons shown in ta-

ble 1 are publicly available.5

acknowledgments. we gratefully acknowledge

the support of dfg: grant schu 2246/10-1.

5www.cis.lmu.de/  sascha/ultradense/

references

[abdaoui et al.2014] amine abdaoui, j  er  ome az  e, san-
feel:
islrn: 041-

dra bringay, and pascal poncelet.
french extended emotional lexicon:
639-484-224-2.

2014.

[amir et al.2015] silvio amir, ram  on astudillo, wang
ling, bruno martins, mario j. silva, and isabel tran-
coso. 2015.
inesc-id: a regression model for large
scale twitter sentiment lexicon induction. in proceed-
ings of semeval.

[brysbaert et al.2014] marc brysbaert, amy beth war-
riner, and victor kuperman. 2014. concreteness rat-
ings for 40 thousand generally known english word
lemmas. behavior research methods, 46(3):904   911.
[collobert et al.2011] ronan collobert, jason weston,
l  eon bottou, michael karlen, koray kavukcuoglu,
and pavel kuksa. 2011. natural language processing
(almost) from scratch. jmlr, 12:2493   2537.

[diamantaras and kung1996] k. i. diamantaras and s. y.
kung. 1996. principal component neural networks:
theory and applications. john wiley & sons, inc.

[duchi et al.2011] john c. duchi, elad hazan, and yoram
singer.
2011. adaptive subgradient methods for
online learning and stochastic optimization. jmlr,
12:2121   2159.

[ebert et al.2015] sebastian ebert, ngoc thang vu, and
hinrich sch  utze. 2015. a linguistically informed
in proceedings of
convolutional neural network.
wassa.

[fan and hoffman1955] ky fan and alan j hoffman.
1955. some metric inequalities in the space of ma-
trices. volume 6, pages 111   116.

[faruqui et al.2015] manaal faruqui, jesse dodge, su-
jay kumar jauhar, chris dyer, eduard hovy, and
noah a. smith. 2015. retro   tting word vectors to
semantic lexicons. in proceedings of naacl.

[habernal et al.2013] ivan habernal, tom  a  s pt  a  cek, and
josef steinberger. 2013. id31 in czech
social media using supervised machine learning. in
proceedings of wassa.

[hamdan et al.2015] hussam hamdan, patrice bellot,
and frederic bechet. 2015. lsislif: feature extraction
and label weighting for id31 in twitter.
in proceedings of semeval.

[heerschop et al.2011] bas

alexander
hogenboom, and flavius frasincar. 2011. sentiment
in business
lexicon creation from lexical resources.
information systems.

heerschop,

[hu and liu2004] minqing hu and bing liu. 2004. min-
ing and summarizing customer reviews. in proceed-
ings of kdd.

[kalchbrenner et al.2014] nal kalchbrenner,

edward
grefenstette, and phil blunsom. 2014. a convolu-
tional neural network for modelling sentences.
in
proceedings of acl.

[kim2014] yoon kim. 2014. convolutional neural net-
works for sentence classi   cation. in proceedings of
emnlp.

[kiritchenko et al.2014] svetlana kiritchenko, xiaodan
zhu, and saif m mohammad. 2014. sentiment analy-
sis of short informal texts. jair, pages 723   762.

[kiros et al.2015] ryan kiros, yukun zhu, ruslan r
salakhutdinov, richard zemel, raquel urtasun, an-
tonio torralba, and sanja fidler. 2015. skip-thought
vectors. in proceedings of nips.

[mikolov et al.2013] tomas mikolov, quoc v le, and
ilya sutskever. 2013. exploiting similarities among
arxiv preprint
languages for machine translation.
arxiv:1309.4168.

[mohammad and turney2013] saif m. mohammad and
peter d. turney.
2013. id104 a word-
emotion association lexicon. computational intel-
ligence, 29(3).

[mohammad et al.2013] saif m. mohammad, svetlana
kiritchenko, and xiaodan zhu. 2013. nrc-canada:
building the state-of-the-art in id31 of
tweets. in proceedings of semeval.

[nair and hinton2010] vinod nair and geoffrey e. hin-
ton. 2010. recti   ed linear units improve restricted
id82s. in proceedings of icml.

[nakov et al.2013] preslav nakov, sara rosenthal, zor-
nitsa kozareva, veselin stoyanov, alan ritter, and
theresa wilson. 2013. semeval-2013 task 2: senti-
ment analysis in twitter. in proceedings of semeval.
[   ozdemir and bergler2015] canberk   ozdemir and sabine
bergler. 2015. clac-sentipipe: semeval2015 subtasks
10 b,e, and task 11. in proceedings of semeval.

[pennington et al.2014] jeffrey

richard
socher, and christopher d. manning. 2014. glove:
global vectors for word representation. in proceed-
ings of emnlp.

pennington,

[p  erez-rosas et al.2012] ver  onica p  erez-rosas, carmen
banea, and rada mihalcea. 2012. learning senti-
ment lexicons in spanish. in proceedings of lrec.

[plotnikova et al.2015] nataliia plotnikova, micha kohl,
kevin volkert, stefan evert, andreas lerner, natalie
dykes, and heiko ermer. 2015. klueless: polarity
classi   cation and association. in proceedings of sem-
eval.

[rosenthal et al.2015] sara rosenthal, preslav nakov,
svetlana kiritchenko, saif m. mohammad, alan rit-
ter, and veselin stoyanov. 2015. semeval-2015 task
10: id31 in twitter. in proceedings of
semeval.

[rothe and sch  utze2015] sascha rothe

and hinrich
sch  utze. 2015. autoextend: extending word em-
beddings to embeddings for synsets and lexemes. in
proceedings of acl.

[scheible2010] christian scheible.

sentiment
translation through lexicon induction. in proceedings
of acl, student research workshop.

2010.

[severyn and moschitti2015] aliaksei

and
alessandro moschitti. 2015. unitn: training deep
convolutional neural network for twitter sentiment
classi   cation. in proceedings of semeval.

severyn

[tang et al.2014a] duyu tang, furu wei, bing qin, ming
2014a. building large-scale
zhou, and ting liu.
twitter-speci   c sentiment lexicon : a representation
learning approach. in proceedings of coling.

[tang et al.2014b] duyu tang, furu wei, nan yang,
ming zhou, ting liu, and bing qin. 2014b. learning
sentiment-speci   c id27 for twitter sen-
timent classi   cation. in proceedings of acl.

[turney2002] peter d. turney. 2002. thumbs up or
thumbs down? semantic orientation applied to un-
supervised classi   cation of reviews. in proceedings
of acl.

[veselovsk  a and bojar2013] kate  rina veselovsk  a

ond  rej bojar. 2013. czech sublex 1.0.

and

[waltinger2010] ulli waltinger. 2010. germanpolari-
tyclues: a lexical resource for german sentiment
analysis. in proceedings of lrec.

[wilson et al.2005] theresa wilson, janyce wiebe, and
paul hoffmann. 2005. recognizing contextual polar-
ity in phrase-level id31. in proceedings
of hlt/emnlp.

[xing et al.2015] chao xing, dong wang, chao liu, and
yiye lin. 2015. normalized id27 and
orthogonal transform for bilingual word translation. in
proceedings of naacl.

[yu and dredze2015] mo yu and mark dredze. 2015.
learning composition models for phrase embeddings.
tacl, 3:227   242.

[zhang et al.2015] zhihua zhang, guoshun wu, and man
lan. 2015. ecnu: multi-level id31 on
twitter using traditional linguistic features and word
embedding features. in proceedings of semeval.

