tree-to-sequence attentional id4

akiko eriguchi, kazuma hashimoto, and yoshimasa tsuruoka
the university of tokyo, 3-7-1 hongo, bunkyo-ku, tokyo, japan

{eriguchi, hassy, tsuruoka}@logos.t.u-tokyo.ac.jp

6
1
0
2

 

n
u
j
 

8

 
 
]
l
c
.
s
c
[
 
 

3
v
5
7
0
6
0

.

3
0
6
1
:
v
i
x
r
a

abstract

most of
the existing neural machine
translation (id4) models focus on the
conversion of sequential data and do
not directly use syntactic information.
we propose a novel end-to-end syntac-
tic id4 model, extending a sequence-
to-sequence model with the source-side
phrase structure. our model has an at-
tention mechanism that enables the de-
coder to generate a translated word while
softly aligning it with phrases as well as
words of the source sentence. experi-
mental results on the wat   15 english-
to-japanese dataset demonstrate that our
proposed model considerably outperforms
sequence-to-sequence attentional id4
models and compares favorably with the
state-of-the-art tree-to-string smt system.

introduction

1
machine translation (mt) has traditionally been
one of the most complex language processing
problems, but recent advances of neural machine
translation (id4) make it possible to perform
translation using a simple end-to-end architecture.
in the encoder-decoder model (cho et al., 2014b;
sutskever et al., 2014), a recurrent neural net-
work (id56) called the encoder reads the whole
sequence of source words to produce a    xed-
length vector, and then another id56 called the
decoder generates the target words from the vec-
tor. the encoder-decoder model has been ex-
tended with an attention mechanism (bahdanau et
al., 2015; luong et al., 2015a), which allows the
model to jointly learn the soft alignment between
the source language and the target language. id4
models have achieved state-of-the-art results in
english-to-french and english-to-german trans-

figure 1: alignment between an english phrase
and a japanese word.

lation tasks (luong et al., 2015b; luong et al.,
2015a). however, it is yet to be seen whether
id4 is competitive with traditional statistical
machine translation (smt) approaches in trans-
lation tasks for structurally distant language pairs
such as english-to-japanese.

figure 1 shows a pair of parallel sentences in
english and japanese. english and japanese are
linguistically distant in many respects; they have
different syntactic constructions, and words and
phrases are de   ned in different lexical units.
in
this example, the japanese word            is aligned
with the english words    green    and    tea   , and
the english word sequence    a cup of    is aligned
with a special symbol    null   , which is not explic-
itly translated into any japanese words. one way
to solve this mismatch problem is to consider the
phrase structure of the english sentence and align
the phrase    a cup of green tea    with           . in
smt, it is known that incorporating syntactic con-
stituents of the source language into the models
improves word alignment (yamada and knight,
2001) and translation accuracy (liu et al., 2006;
neubig and duh, 2014). however, the existing
id4 models do not allow us to perform this kind
of alignment.

in this paper, we propose a novel attentional
id4 model to take advantage of syntactic infor-

mation. following the phrase structure of a source
sentence, we encode the sentence recursively in a
bottom-up fashion to produce a vector representa-
tion of the sentence and decode it while aligning
the input phrases and words with the output. our
experimental results on the wat   15 english-to-
japanese translation task show that our proposed
model achieves state-of-the-art translation accu-
racy.

2 id4

2.1 encoder-decoder model
id4 is an end-to-end approach to data-driven
machine translation (kalchbrenner and blunsom,
2013; sutskever et al., 2014; bahdanau et al.,
2015). in other words, the id4 models directly
estimate the id155 p(y|x) given
a large collection of source and target sentence
pairs (x, y). an id4 model consists of an en-
coder process and a decoder process, and hence
they are often called encoder-decoder models. in
the encoder-decoder models, a sentence is treated
as a sequence of words.
in the encoder pro-
cess, the encoder embeds each of the source words
x = (x1, x2,       , xn) into a d-dimensional vector
space. the decoder then outputs a word sequence
y = (y1, y2,       , ym) in the target language given
the information on the source sentence provided
by the encoder. here, n and m are the lengths
of the source and target sentences, respectively.
id56s allow one to effectively embed sequential
data into the vector space.
in the id56 encoder, the i-th hidden unit hi    
rd  1 is calculated given the i-th input xi and the
previous hidden unit hi   1     rd  1,

hi = fenc(xi, hi   1),

(1)

where fenc is a non-linear function, and the initial
hidden unit h0 is usually set to zeros. the encod-
ing function fenc is recursively applied until the n-
th hidden unit hn is obtained. the id56 encoder-
decoder models assume that hn represents a vec-
tor of the meaning of the input sequence up to the
n-th word.

after encoding the whole input sentence into
the vector space, we decode it in a similar way.
the initial decoder unit s1 is initialized with the
input sentence vector (s1 = hn). given the pre-
vious target word and the j-th hidden unit of the
decoder, the id155 that the j-th

target word is generated is calculated as follows:

p(yj|y<j, x) = g(sj),

(2)

where g is a non-linear function. the j-th hidden
unit of the decoder is calculated by using another
non-linear function fdec as follows:

sj = fdec(yj   1, sj   1).

(3)

we employ long short-term memory (lstm)
units (hochreiter and schmidhuber, 1997; gers et
al., 2000) in place of vanilla id56 units. the t-
th lstm unit consists of several gates and two
different types of states: a hidden unit ht     rd  1
and a memory cell ct     rd  1,

it =   (w (i)xt + u (i)ht   1 + b(i)),
ft =   (w (f )xt + u (f )ht   1 + b(f )),
ot =   (w (o)xt + u (o)ht   1 + b(o)),
  ct = tanh(w (  c)xt + u (  c)ht   1 + b(  c)),
ct = it (cid:12)   ct + ft (cid:12) ct   1,
ht = ot (cid:12) tanh(ct),

(4)
where each of it, ft, ot and   ct     rd  1 denotes
an input gate, a forget gate, an output gate, and a
state for updating the memory cell, respectively.
w (  )     rd  d and u (  )     rd  d are weight matri-
ces, b(  )     rd  1 is a bias vector, and xt     rd  1
is the id27 of the t-th input word.   (  )
is the logistic function, and the operator (cid:12) denotes
element-wise multiplication between vectors.

2.2 attentional encoder-decoder model
the id4 models with an attention mecha-
nism (bahdanau et al., 2015; luong et al., 2015a)
have been proposed to softly align each decoder
state with the encoder states. the attention mech-
anism allows the id4 models to explicitly quan-
tify how much each encoder state contributes to
the word prediction at each time step.

in the attentional id4 model in luong et al.
(2015a), at the j-th step of the decoder process,
the attention score   j(i) between the i-th source
hidden unit hi and the j-th target hidden unit sj is
calculated as follows:

  j(i) =

(cid:80)n
exp(hi    sj)
k=1 exp(hk    sj)

,

(5)

where hi    sj is the inner product of hi and sj,
which is used to directly calculate the similarity
score between hi and sj. the j-th context vector

figure 2: attentional encoder-decoder model.

n(cid:88)

dj is calculated as the summation vector weighted
by   j(i):

dj =

  j(i)hi.

(6)

i=1

to incorporate the attention mechanism into the
decoding process, the context vector is used for the
the j-th word prediction by putting an additional
hidden layer   sj:

  sj = tanh(wd[sj; dj] + bd),

(7)
where [sj; dj]     r2d  1 is the concatenation of sj
and dj, and wd     rd  2d and bd     rd  1 are a
weight matrix and a bias vector, respectively. the
model predicts the j-th word by using the softmax
function:

p(yj|y<j, x) = softmax(ws   sj + bs),

(8)
where ws     r|v |  d and bs     r|v |  1 are a weight
matrix and a bias vector, respectively. |v | stands
for the size of the vocabulary of the target lan-
guage. figure 2 shows an example of the id4
model with the attention mechanism.

2.3 objective function of id4 models
the objective function to train the id4 models
is the sum of the log-likelihoods of the translation
pairs in the training data:

j(  ) =

1
|d|

log p(y|x),

(9)

(cid:88)

(x,y)   d

where d denotes a set of parallel sentence pairs.
the model parameters    are learned through
stochastic id119 (sgd).
3 attentional tree-to-sequence model
3.1 tree-based encoder + sequential

encoder

the exsiting id4 models treat a sentence as a
sequence of words and neglect the structure of

figure 3: proposed model: tree-to-sequence at-
tentional id4 model.

a sentence inherent in language. we propose a
novel tree-based encoder in order to explicitly take
the syntactic structure into consideration in the
id4 model. we focus on the phrase structure of
a sentence and construct a sentence vector from
phrase vectors in a bottom-up fashion. the sen-
tence vector in the tree-based encoder is there-
fore composed of the structural information rather
than the sequential data. figure 3 shows our pro-
posed model, which we call a tree-to-sequence at-
tentional id4 model.

in head-driven phrase structure grammar
(hpsg) (sag et al., 2003), a sentence is composed
of multiple phrase units and represented as a bi-
nary tree as shown in figure 1. following the
structure of the sentence, we construct a tree-based
encoder on top of the standard sequential encoder.
the k-th parent hidden unit h(phr)
for the k-th
phrase is calculated using the left and right child
hidden units hl

k as follows:

k and hr

k

h(phr)

k

= ftree(hl

k, hr

k),

(10)

where ftree is a non-linear function.

we construct a tree-based encoder with lstm
units, where each node in the binary tree is repre-
sented with an lstm unit. when initializing the
leaf units of the tree-based encoder, we employ the
sequential lstm units described in section 2.1.
each non-leaf node is also represented with an
lstm unit, and we employ tree-lstm (tai et
al., 2015) to calculate the lstm unit of the par-
ent node which has two child lstm units. the
    rd  1 and the memory cell
hidden unit h(phr)
    rd  1 for the k-th parent node are calcu-
c(phr)
k

k

lated as follows:

k + b(fl)),
k + b(fr)),

k + b(i)),

ik =   (u (i)
l hl
k =   (u (fl)
f l
l hl
k =   (u (fr)
l hl
f r
ok =   (u (o)
l hl
  ck = tanh(u (  c)

r hr
k + u (i)
(fl)
r hr
k + u
k + u (fr)
r hr
k + b(o)),
k + u (o)
r hr
r hr
k + u (  c)
l hl
= ik (cid:12)   ck + f l
k (cid:12) cl
k + f r
= ok (cid:12) tanh(c(phr)
),

k + b(  c)),
k (cid:12) cr
k,

c(phr)
k
h(phr)

k

k

k, f r

(11)
k , oj,   cj     rd  1 are an input
where ik, f l
gate, the forget gates for left and right child units,
an output gate, and a state for updating the mem-
ory cell, respectively. cl
k are the mem-
ory cells for the left and right child units, respec-
tively. u (  )     rd  d denotes a weight matrix, and
b(  )     rd  1 represents a bias vector.

k and cr

our proposed tree-based encoder is a natural
extension of the conventional sequential encoder,
since tree-lstm is a generalization of chain-
structured lstm (tai et al., 2015). our encoder
differs from the original tree-lstm in the cal-
culation of the lstm units for the leaf nodes.
the motivation is to construct the phrase nodes in
a context-sensitive way, which, for example, al-
lows the model to compute different representa-
tions for multiple occurrences of the same word in
a sentence because the sequential lstms are cal-
culated in the context of the previous units. this
ability contrasts with the original tree-lstm, in
which the leaves are composed only of the word
embeddings without any contextual information.

initial decoder setting

3.2
we now have two different sentence vectors: one
is from the sequence encoder and the other from
the tree-based encoder. as shown in figure 3, we
provide another tree-lstm unit which has the    -
nal sequential encoder unit (hn) and the tree-based
encoder unit (h(phr)
root ) as two child units and set it
as the initial decoder s1 as follows:

s1 = gtree(hn, h(phr)

root ),

(12)

where gtree is the same function as ftree with an-
other set of tree-lstm parameters. this initial-
ization allows the decoder to capture information
from both the sequential data and phrase struc-
tures. zoph and knight (2016) proposed a simi-
lar method using a tree-lstm for initializing the

decoder, with which they translate multiple source
languages to one target language. when the syn-
tactic parser fails to output a parse tree for a sen-
tence, we encode the sentence with the sequential
encoder by setting h(phr)
root = 0. our proposed tree-
based encoder therefore works with any sentences.

3.3 attention mechanism in our model
we adopt the attention mechanism into our tree-
to-sequence model in a novel way. our model
gives attention not only to sequential hidden units
but also to phrase hidden units. this attention
mechanism tells us which words or phrases in the
source sentence are important when the model de-
codes a target word. the j-th context vector dj
is composed of the sequential and phrase vectors
weighted by the attention score   j(i):

n(cid:88)

2n   1(cid:88)

dj =

  j(i)hi +

  j(i)h(phr)

i

.

(13)

i=1

i=n+1

in addition, we

note that a binary tree has n     1 phrase nodes if
the tree has n leaves. we set a    nal decoder   sj in
the same way as equation (7).
adopt

input-feeding
method (luong et al., 2015a) in our model, which
is a method for feeding   sj   1, the previous unit
to predict the word yj   1, into the current target
hidden unit sj,

the

sj = fdec(yj   1, [sj   1;   sj   1]),

(14)

where [sj   1;   sj   1] is the concatenation of sj   1
and   sj   1. the input-feeding approach contributes
to the enrichment in the calculation of the decoder,
because   sj   1 is an informative unit which can be
used to predict the output word as well as to be
compacted with attentional context vectors. lu-
ong et al. (2015a) showed that the input-feeding
approach improves id7 scores. we also ob-
served the same improvement in our preliminary
experiments.

3.4 sampling-based approximation to the

id4 models

the biggest computational bottleneck of train-
ing the id4 models is in the calculation of the
softmax layer described in equation (8), because
its computational cost increases linearly with the
size of the vocabulary. the speedup technique
with gpus has proven useful for sequence-based
id4 models (sutskever et al., 2014; luong et al.,

2015a) but it is not easily applicable when deal-
ing with tree-structured data. in order to reduce
the training cost of the id4 models at the soft-
max layer, we employ blackout (ji et al., 2016), a
sampling-based approximation method. blackout
has been shown to be effective in id56 language
models (id56lms) and allows a model to run rea-
sonably fast even with a million word vocabulary
with cpus.

at each word prediction step in the training,
blackout estimates the id155 in
equation (2) for the target word and k neg-
ative samples using a weighted softmax func-
tion. the negative samples are drawn from the
unigram distribution raised to the power       
[0, 1] (mikolov et al., 2013). the unigram dis-
tribution is estimated using the training data and
   is a hyperparameter. blackout is closely re-
lated to noise contrastive estimation (nce) (gut-
mann and hyv  arinen, 2012) and achieves better
perplexity than the original softmax and nce in
id56lms. the advantages of blackout over the
other methods are discussed in ji et al. (2016).
note that blackout can be used as the original
softmax once the training is    nished.

4 experiments

4.1 training data
we applied the proposed model to the english-to-
japanese translation dataset of the aspec corpus
given in wat   15.1 following zhu (2015), we ex-
tracted the    rst 1.5 million translation pairs from
the training data. to obtain the phrase structures
of the source sentences, i.e., english, we used the
probabilistic hpsg parser enju (miyao and tsu-
jii, 2008). we used enju only to obtain a binary
phrase structure for each sentence and did not use
any hpsg speci   c information. for the target
language, i.e., japanese, we used kytea (neubig
et al., 2011), a japanese segmentation tool, and
performed the pre-processing steps recommended
in wat   15.2 we then    ltered out the translation
pairs whose sentence lengths are longer than 50
and whose source sentences are not parsed suc-
cessfully. table 1 shows the details of the datasets
used in our experiments. we carried out two ex-
periments on a small training dataset to investigate

1http://orchid.kuee.kyoto-u.ac.jp/wat/

wat2015/index.html

2http://orchid.kuee.kyoto-u.ac.jp/wat/

wat2015/baseline/datapreparationje.html

train
development
test

sentences parsed successfully
1,346,946
1,346,946
1,789
1,790
1,812
1,811

table 1: dataset in aspec corpus.

train (small) train (large)
1,346,946
87,796
65,680

sentence pairs
|v | in english
|v | in japanese
table 2: training dataset and the vocabulary sizes.

100,000
25,478
23,532

the effectiveness of our proposed model and on
a large training dataset to compare our proposed
methods with the other systems.

the vocabulary consists of words observed in
the training data more than or equal to n times.
we set n = 2 for the small training dataset and
n = 5 for the large training dataset. the out-of-
vocabulary words are mapped to the special token
   unk   . we added another special symbol    eos    for
both languages and inserted it at the end of all the
sentences. table 2 shows the details of each train-
ing dataset and its corresponding vocabulary size.

4.2 training details

the biases,
softmax weights, and blackout
weights are initialized with zeros. the hyperpa-
rameter    of blackout is set to 0.4 as recom-
mended by ji et al. (2016). following j  ozefowicz
et al. (2015), we initialize the forget gate biases of
lstm and tree-lstm with 1.0. the remaining
model parameters in the id4 models in our ex-
periments are uniformly initialized in [   0.1, 0.1].
the model parameters are optimized by plain sgd
with the mini-batch size of 128. the initial learn-
ing rate of sgd is 1.0. we halve the learning rate
when the development loss becomes worse. gra-
dient norms are clipped to 3.0 to avoid exploding
gradient problems (pascanu et al., 2012).

small training dataset we conduct experi-
ments with our proposed model and the sequential
attentional id4 model with the input-feeding ap-
proach. each model has 256-dimensional hidden
units and id27s. the number of nega-
tive samples k of blackout is set to 500 or 2000.

large training dataset our proposed model
has 512-dimensional id27s and d-
dimensional hidden units (d     {512, 768, 1024}).
k is set to 2500.

our code3 is implemented in c++ using the
eigen library,4 a template library for linear alge-
bra, and we run all of the experiments on multi-
core cpus.5 it takes about a week to train a model
on the large training dataset with d = 512.

4.3 decoding process
we use id125 to decode a target sentence
for an input sentence x and calculate the sum
of the log-likelihoods of the target sentence y =
(y1,       , ym) as the beam score:

score(x, y) =

log p(yj|y<j, x).

(15)

m(cid:88)

j=1

decoding in the id4 models is a generative pro-
cess and depends on the target language model
given a source sentence. the score becomes
smaller as the target sentence becomes longer, and
thus the simple id125 does not work well
when decoding a long sentence (cho et al., 2014a;
pouget-abadie et al., 2014).
in our preliminary
experiments, the id125 with the length nor-
malization in cho et al. (2014a) was not effective
in english-to-japanese translation. the method
in pouget-abadie et al. (2014) needs to estimate
the id155 p(x|y) using another
id4 model and thus is not suitable for our work.
in this paper, we use statistics on sentence
lengths in id125. assuming that the length
of a target sentence correlates with the length of
a source sentence, we rede   ne the score of each
candidate as follows:

score(x, y) = lx,y +

log p(yj|y<j, x),(16)

lx,y = log p(len(y)|len(x)),

j=1

(17)

where lx,y is the penalty for the conditional prob-
ability of the target sentence length len(y) given
the source sentence length len(x).
it allows
the model to decode a sentence by considering
the length of the target sentence.
in our exper-
iments, we computed the id155

3https://github.com/tempra28/tree2seq
4http://eigen.tuxfamily.org/index.php
516 threads on intel(r) xeon(r) cpu e5-2667 v3 @

3.20ghz

m(cid:88)

p(len(y)|len(x)) in advance following the statis-
tics collected in the    rst one million pairs of the
training dataset. we allow the decoder to generate
up to 100 words.

4.4 evaluation
we evaluated the models by two automatic eval-
uation metrics, ribes (isozaki et al., 2010) and
id7 (papineni et al., 2002) following wat   15.
we used the kytea-based evaluation script for the
translation results.6 the ribes score is a metric
based on rank correlation coef   cients with word
precision, and the id7 score is based on id165
word precision and a brevity penalty (bp) for out-
puts shorter than the references. ribes is known
to have stronger correlation with human judge-
ments than id7 in translation between english
and japanese as discussed in isozaki et al. (2010).

5 results and discussion
5.1 small training dataset
table 3 shows the perplexity, id7, ribes, and
the training time on the development data with the
attentional id4 (aid4) models trained on the
small dataset. we conducted the experiments with
our proposed method using blackout and soft-
max. we decoded a translation by our proposed
id125 with a beam size of 20.

as shown in table 3, the results of our proposed
model with blackout improve as the number of
negative samples k increases. although the result
of softmax is better than those of blackout (k =
500, 2000), the training time of softmax per epoch
is about three times longer than that of blackout
even with the small dataset.

as to the results of the aid4 model, reversing
the word order in the input sentence decreases the
scores in english-to-japanese translation, which
contrasts with the results of other language pairs
reported in previous work (sutskever et al., 2014;
luong et al., 2015a). by taking syntactic infor-
mation into consideration, our proposed model
improves the scores, compared to the sequential
attention-based approach.

we found that better perplexity does not always
lead to better translation scores with blackout as
shown in table 3. one of the possible reasons is
that blackout distorts the target word distribution

6http://lotus.kuee.kyoto-u.ac.jp/wat/
evaluation/automatic_evaluation_systems/
automaticevaluationja.html

proposed model
proposed model
proposed model (softmax)
aid4 (luong et al., 2015a)
+ reverse input
aid4 (luong et al., 2015a)
+ reverse input

k
500
2000
   
500
500
2000
2000

perplexity ribes id7 time/epoch (min.)

19.6
21.0
17.9
21.6
22.6
23.1
26.1

71.8
72.6
73.2
70.7
69.8
71.5
69.5

20.0
20.5
21.8
18.5
17.7
19.4
17.5

55
70
180
45
45
60
60

table 3: evaluation results on the development data using the small training data. the training time per
epoch is also shown, and k is the number of negative samples in blackout.

simple bs
proposed bs

beam size ribes id7 (bp)
20.0 (90.1)
19.5 (85.1)
20.5 (91.7)

72.3
72.3
72.6

6
20
20

table 4: effects of the id125 (bs) on the
development data.

by the modi   ed unigram-based negative sampling
where frequent words can be treated as the nega-
tive samples multiple times at each training step.

effects of the proposed id125 table 4
shows the results on the development data of pro-
posed method with blackout (k = 2000) by
the simple id125 and our proposed beam
search. the beam size is set to 6 or 20 in the sim-
ple id125, and to 20 in our proposed search.
we can see that our proposed search outperforms
the simple id125 in both scores. unlike
ribes, the id7 score is sensitive to the beam
size and becomes lower as the beam size increases.
we found that the bp had a relatively large im-
pact on the id7 score in the simple id125
as the beam size increased. our search method
works better than the simple id125 by keep-
ing long sentences in the candidates with a large
beam size.

effects of the sequential lstm units we also
investigated the effects of the sequential lstms
at the leaf nodes in our proposed tree-based en-
coder. table 5 shows the result on the develop-
ment data of our proposed encoder and that of an
attentional tree-based encoder without sequential
lstms with blackout (k = 2000).7 the results
show that our proposed encoder considerably out-

7for this evaluation, we used the 1,789 sentences that
were successfully parsed by enju because the encoder with-
out sequential lstms always requires a parse tree.

without sequential lstms
with sequential lstms

ribes id7
19.5
69.4
72.3
20.0

table 5: effects of the sequential lstms in our
proposed tree-based encoder on the development
data.

performs the encoder without sequential lstms,
suggesting that the sequential lstms at the leaf
nodes contribute to the context-aware construction
of the phrase representations in the tree.

5.2 large training dataset
table 6 shows the experimental results of ribes
and id7 scores achieved by the trained models
on the large dataset. we decoded the target sen-
tences by our proposed id125 with the beam
size of 20.8 the results of the other systems are the
ones reported in nakazawa et al. (2015).

all of our proposed models show similar per-
formance regardless of the value of d. our ensem-
ble model is composed of the three models with
d = 512, 768, and 1024, and it shows the best
ribes score among all systems.9

as for the time required for training, our im-
plementation needs about one day to perform one
epoch on the large training dataset with d = 512.
it would take about 11 days without using the
blackout sampling.

comparison with the id4 models the model
of zhu (2015) is an aid4 model (bahdanau et
al., 2015) with a bi-directional lstm encoder,
and uses 1024-dimensional hidden units and 1000-

8we found two sentences which ends without eos with
d = 512, and then we decoded it again with the beam size of
1000 following zhu (2015).

9our ensemble model yields a meteor (denkowski and

lavie, 2014) score of 53.6 with language option    -l other   .

model
proposed model (d = 512)
proposed model (d = 768)
proposed model (d = 1024)
ensemble of the above three models
aid4 with lstms (zhu, 2015)
+ ensemble, unk replacement
+ system combination,

3 pre-reordered ensembles

aid4 with grus (lee et al., 2015)
+ character-based decoding,

begin/inside representation

ribes id7
81.46
34.36
34.78
81.89
34.87
81.58
82.45
36.95
32.19
79.70
80.27
34.19
36.21
80.91

81.15

35.75

pb baseline
hpb baseline
t2s baseline
t2s model (neubig and duh, 2014)
+ aid4 rerank (neubig et al., 2015)

69.19
74.70
75.80
79.65
81.38

29.80
32.56
33.44
36.58
38.17

table 6: evaluation results on the test data.

dimensional id27s. the model of lee
et al. (2015) is also an aid4 model with a bi-
directional gated recurrent unit (gru) encoder,
and uses 1000-dimensional hidden units and 200-
dimensional id27s. both models are
sequential aid4 models. our single proposed
model with d = 512 outperforms the best result of
zhu (2015)   s end-to-end id4 model with ensem-
ble and unknown replacement by +1.19 ribes
and by +0.17 id7 scores. our ensemble model
shows better performance,
in both ribes and
id7 scores, than that of zhu (2015)   s best sys-
tem which is a hybrid of the aid4 and smt
models by +1.54 ribes and by +0.74 id7
scores and lee et al. (2015)   s aid4 system
with special character-based decoding by +1.30
ribes and +1.20 id7 scores.
comparison with the smt models pb, hpb
and t2s are the baseline smt systems in
wat   15: a phrase-based model, a hierarchical
phrase-based model, and a tree-to-string model,
respectively (nakazawa et al., 2015). the best
model in wat   15 is neubig et al. (2015)   s tree-
to-string smt model enhanced with reranking by
aid4 using a bi-directional lstm encoder. our
proposed end-to-end id4 model compares favor-
ably with neubig et al. (2015).

5.3 qualitative analysis
we illustrate the translations of test data by our
model with d = 512 and several attentional rela-
tions when decoding a sentence. in figures 4 and
5, an english sentence represented as a binary tree
is translated into japanese, and several attentional
relations between english words or phrases and

figure 4: translation example of a short sen-
tence and the attentional relations by our proposed
model.

japanese word are shown with the highest atten-
tion score   . the additional attentional relations
are also illustrated for comparison. we can see the
target words softly aligned with source words and
phrases.

in figure 4, the japanese word            means
   liquid crystal   , and it has a high attention score
(   = 0.41) with the english phrase    liquid crystal
for active matrix   . this is because the j-th tar-
get hidden unit sj has the contextual information
about the previous words y<j including          
            (   for active matrix    in english).
the japanese word          is softly aligned with
the phrase    the cells    with the highest attention
score (   = 0.35). in japanese, there is no de   -
nite article like    the    in english, and it is usually
aligned with null described as section 1.

in figure 5, in the case of the japanese word
         (   showed    in english), the attention score
with the english phrase    showed excellent perfor-
mance    (   = 0.25) is higher than that with the
english word    showed    (   = 0.01). the japanese
word          (   of    in english) is softly aligned with
the phrase    of si dot mos capacitor    with the
highest attention score (   = 0.30). it is because
our attention mechanism takes each previous con-
text of the japanese phrases               p    (   ex-
cellent performance    in english) and    !1   
    !          (   si dot mos capaci-
tor    in english) into account and softly aligned the
target words with the whole phrase when trans-
lating the english verb    showed    and the prepo-
sition    of   . our proposed model can thus    exibly
learn the attentional relations between english and
japanese.

we observed that our model translated the word
   active    into           , a synonym of the reference
word            . we also found similar ex-

figure 5: translation example of a long sentence and the attentional relations by our proposed model.

amples in other sentences, where our model out-
puts synonyms of the reference words, e.g.          
and               (   female    in english) and    nasa   
and                  (   national aeronautics and
space administration    in english). these trans-
lations are penalized in terms of id7 scores, but
they do not necessarily mean that the translations
were wrong. this point may be supported by the
fact that the id4 models were highly evaluated
in wat   15 by crowd sourcing (nakazawa et al.,
2015).

6 related work
kalchbrenner and blunsom (2013) were the    rst
to propose an end-to-end id4 model using con-
volutional neural networks (id98s) as the source
encoder and using id56s as the target decoder.
the encoder-decoder model can be seen as an ex-
tension of their model, and it replaces the id98s
with id56s using grus (cho et al., 2014b) or
lstms (sutskever et al., 2014).

sutskever et al. (2014) have shown that mak-
ing the input sequences reversed is effective in a
french-to-english translation task, and the tech-
nique has also proven effective in translation tasks
between other european language pairs (luong et
al., 2015a). all of the id4 models mentioned
above are based on sequential encoders. to incor-
porate structural information into the id4 mod-
els, cho et al. (2014a) proposed to jointly learn
structures inherent in source-side languages but
did not report improvement of translation perfor-
mance. these studies motivated us to investigate
the role of syntactic structures explicitly given by
existing syntactic parsers in the id4 models.

the attention mechanism (bahdanau et al.,
2015) has promoted id4 onto the next stage. it

enables the id4 models to translate while align-
ing the target with the source. luong et al. (2015a)
re   ned the attention model so that it can dynami-
cally focus on local windows rather than the entire
sentence. they also proposed a more effective at-
tentional path in the calculation of aid4 models.
subsequently, several aid4 models have been
proposed (cheng et al., 2016; cohn et al., 2016);
however, each model is based on the existing se-
quential attentional models and does not focus on
a syntactic structure of languages.

7 conclusion

in this paper, we propose a novel syntactic ap-
proach that extends attentional id4 models. we
focus on the phrase structure of the input sen-
tence and build a tree-based encoder following
the parsed tree. our proposed tree-based encoder
is a natural extension of the sequential encoder
model, where the leaf units of the tree-lstm
in the encoder can work together with the origi-
nal sequential lstm encoder. moreover, the at-
tention mechanism allows the tree-based encoder
to align not only the input words but also input
phrases with the output words. experimental re-
sults on the wat   15 english-to-japanese transla-
tion dataset demonstrate that our proposed model
achieves the best ribes score and outperforms
the sequential attentional id4 model.

acknowledgments

we thank the anonymous reviewers for their con-
structive comments and suggestions. this work
was supported by crest, jst, and jsps kak-
enhi grant number 15j12597.

references
[bahdanau et al.2015] dzmitry bahdanau, kyunghyun
cho, and yoshua bengio. 2015. neural machine
translation by jointly learning to align and trans-
late. in proceedings of the 3rd international con-
ference on learning representations.

[cheng et al.2016] yong cheng, shiqi shen, zhongjun
he, wei he, hua wu, maosong sun, and yang liu.
2016. agreement-based joint training for bidirec-
tional attention-based id4.
in proceedings of the 25th international joint con-
ference on arti   cial intelligence. to appear.

[cho et al.2014a] kyunghyun cho, bart van merrien-
boer, dzmitry bahdanau, and yoshua bengio.
2014a. on the properties of neural machine trans-
lation: encoder-decoder approaches. in proceed-
ings of eighth workshop on syntax, semantics and
structure in statistical translation (ssst-8).

[cho et al.2014b] kyunghyun cho, bart van merrien-
boer, caglar gulcehre, dzmitry bahdanau, fethi
bougares, holger schwenk, and yoshua bengio.
2014b. learning phrase representations using id56
encoder   decoder for statistical machine transla-
in proceedings of the 2014 conference on
tion.
empirical methods in natural language process-
ing, pages 1724   1734.

[cohn et al.2016] trevor cohn, cong duy vu hoang,
ekaterina vymolova, kaisheng yao, chris dyer,
and gholamreza haffari.
incorporating
structural alignment biases into an attentional
in proceedings of the
neural translation model.
15th annual conference of
the north american
chapter of the association for computational lin-
guistics: human language technologies. to appear.

2016.

[denkowski and lavie2014] michael denkowski and
alon lavie. 2014. meteor universal: language spe-
ci   c translation evaluation for any target language.
in proceedings of the 14th conference of the euro-
pean chapter of the association for computational
linguistics 2014 workshop on statistical machine
translation.

[gers et al.2000] felix a. gers, j  urgen schmidhuber,
and fred a. cummins. 2000. learning to forget:
continual prediction with lstm. neural computa-
tion, 12(10):2451   2471.

[gutmann and hyv  arinen2012] michael u. gutmann
and aapo hyv  arinen. 2012. noise-contrastive esti-
mation of unnormalized statistical models, with ap-
plications to natural image statistics. journal of ma-
chine learning research, 13(1):307   361.

[hochreiter and schmidhuber1997] sepp hochreiter
and j  urgen schmidhuber. 1997. long short-term
memory. neural computation, 9(8):1735   1780.

[isozaki et al.2010] hideki

isozaki, tsutomu hirao,
kevin duh, katsuhito sudoh, and hajime tsukada.
2010. automatic evaluation of translation quality

in proceedings of the
for distant language pairs.
2010 conference on empirical methods in natural
language processing, pages 944   952.

[ji et al.2016] shihao ji, s. v. n. vishwanathan, na-
dathur satish, michael j. anderson, and pradeep
dubey. 2016. blackout: speeding up recurrent
neural network language models with very large
in proceedings of the 4th interna-
vocabularies.
tional conference on learning representations.

[j  ozefowicz et al.2015] rafal

j  ozefowicz, wojciech
zaremba, and ilya sutskever. 2015. an empiri-
cal exploration of recurrent network architectures.
in proceedings of the 32nd international confer-
ence on machine learning, volume 37, pages 2342   
2350.

[kalchbrenner and blunsom2013] nal kalchbrenner
and phil blunsom. 2013. recurrent continuous
in proceedings of the 2013
translation models.
conference on empirical methods
in natural
language processing, pages 1700   1709.

[lee et al.2015] hyoung-gyu lee, jaesong lee, jun-
seok kim, and chang-ki lee. 2015. naver ma-
in pro-
chine translation system for wat 2015.
ceedings of the 2nd workshop on asian translation
(wat2015), pages 69   73.

[liu et al.2006] yang liu, qun liu, and shouxun lin.
2006. tree-to-string alignment template for statisti-
cal machine translation. in proceedings of the 21st
international conference on computational lin-
guistics and 44th annual meeting of the association
for computational linguistics, pages 609   616.

[luong et al.2015a] thang luong, hieu pham, and
christopher d. manning.
2015a. effective ap-
proaches to attention-based neural machine trans-
in proceedings of the 2015 conference on
lation.
empirical methods in natural language process-
ing, pages 1412   1421.

[luong et al.2015b] thang luong,

ilya sutskever,
quoc le, oriol vinyals, and wojciech zaremba.
2015b. addressing the rare word problem in neu-
ral machine translation. in proceedings of the 53rd
annual meeting of the association for computa-
tional linguistics and the 7th international joint
conference on natural language processing (vol-
ume 1: long papers), pages 11   19.

[mikolov et al.2013] tomas mikolov, ilya sutskever,
kai chen, greg s corrado, and jeff dean. 2013.
distributed representations of words and phrases
in advances in neu-
and their compositionality.
ral information processing systems 26, pages 3111   
3119.

[miyao and tsujii2008] yusuke miyao and jun   ichi
tsujii. 2008. feature forest models for proba-
bilistic hpsg parsing. computational linguistics,
34(1):35   80.

conference on natural language processing (vol-
ume 1: long papers), pages 1556   1566.

[yamada and knight2001] kenji yamada and kevin
knight. 2001. a syntax-based statistical translation
model. in proceedings of the 39th annual meeting
on association for computational linguistics, pages
523   530.

[zhu2015] zhongyuan zhu. 2015. evaluating neural
in
machine translation in english-japanese task.
proceedings of the 2nd workshop on asian transla-
tion (wat2015), pages 61   68.

[zoph and knight2016] barret zoph and kevin knight.
in pro-
2016. multi-source neural translation.
ceedings of the 15th annual conference of the north
american chapter of the association for computa-
tional linguistics: human language technologies.
to appear.

[nakazawa et al.2015] toshiaki nakazawa, hideya
mino, isao goto, graham neubig, sadao kuro-
hashi, and eiichiro sumita. 2015. overview of
in pro-
the 2nd workshop on asian translation.
ceedings of the 2nd workshop on asian translation
(wat2015), pages 1   28.

[neubig and duh2014] graham neubig and kevin
duh. 2014. on the elements of an accurate tree-
in proceed-
to-string machine translation system.
ings of the 52nd annual meeting of the association
for computational linguistics (volume 2: short pa-
pers), pages 143   149.

[neubig et al.2011] graham neubig, yosuke nakata,
and shinsuke mori. 2011. pointwise prediction for
robust, adaptable japanese morphological analy-
sis. in proceedings of the 49th annual meeting of
the association for computational linguistics: hu-
man language technologies, pages 529   533.

[neubig et al.2015] graham neubig, makoto mor-
ishita, and satoshi nakamura.
2015. neural
reranking improves subjective quality of machine
translation: naist at wat2015. in proceedings of
the 2nd workshop on asian translation (wat2015),
pages 35   41.

[papineni et al.2002] kishore papineni, salim roukos,
todd ward, and wei-jing zhu.
2002. id7:
a method for automatic evaluation of machine
in proceedings of the 40th annual
translation.
meeting on association for computational linguis-
tics, pages 311   318.

[pascanu et al.2012] razvan pascanu, tomas mikolov,
and yoshua bengio. 2012. understanding the ex-
ploding gradient problem. arxiv: 1211.5063.

[pouget-abadie et al.2014] jean
bart

pouget-abadie,
van merrienboer,
dzmitry bahdanau,
kyunghyun cho, and yoshua bengio.
2014.
overcoming the curse of sentence length for neural
machine translation using automatic segmentation.
in proceedings of ssst-8, eighth workshop on
syntax, semantics and structure in statistical
translation, pages 78   85.

[sag et al.2003] ivan a. sag, thomas wasow, and
emily bender. 2003. syntactic theory: a formal
introduction. center for the study of language and
information, stanford, 2nd edition.

[sutskever et al.2014] ilya sutskever, oriol vinyals,
2014. sequence to sequence
and quoc v. le.
in advances in
learning with neural networks.
neural information processing systems 27, pages
3104   3112.

[tai et al.2015] kai sheng tai, richard socher, and
christopher d. manning. 2015. improved semantic
representations from tree-structured long short-
in proceedings of the
term memory networks.
53rd annual meeting of the association for compu-
tational linguistics and the 7th international joint

