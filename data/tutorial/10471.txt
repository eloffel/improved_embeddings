a neural network for factoid id53 over

paragraphs

mohit iyyer1, jordan boyd-graber2, leonardo claudino1,

1university of maryland, department of computer science and umiacs

richard socher3, hal daum  e iii1

2university of colorado, department of computer science

3stanford university, department of computer science

{miyyer,claudino,hal}@umiacs.umd.edu,

jordan.boyd.graber@colorado.edu, richard@socher.org

abstract

text classi   cation methods for tasks
like factoid id53 typi-
cally use manually de   ned string match-
ing rules or bag of words representa-
tions. these methods are ine   ective
when question text contains very few
individual words (e.g., named entities)
that are indicative of the answer. we
introduce a id56
(id56) model that can reason over such
input by modeling textual composition-
ality. we apply our model, qanta, to
a dataset of questions from a trivia
competition called quiz bowl. unlike
previous id56 models, qanta learns
word and phrase-level representations
that combine across sentences to reason
about entities. the model outperforms
multiple baselines and, when combined
with information retrieval methods, ri-
vals the best human players.

1 introduction

deep neural networks have seen widespread
use in natural language processing tasks such
as parsing, id38, and sentiment
analysis (bengio et al., 2003; socher et al.,
2013a; socher et al., 2013c). the vector spaces
learned by these models cluster words and
phrases together based on similarity. for exam-
ple, a neural network trained for a sentiment
analysis task such as restaurant review classi   -
cation might learn that    tasty    and    delicious   
should have similar representations since they
are synonymous adjectives.

these models have so far only seen success in
a limited range of text-based prediction tasks,

later in its existence, this polity   s leader was chosen
by a group that included three bishops and six laymen,
up from the seven who traditionally made the decision.
free imperial cities in this polity included basel and
speyer. dissolved in 1806, its key events included the
investiture controversy and the golden bull of 1356.
led by charles v, frederick barbarossa, and otto i,
for 10 points, name this polity, which ruled most of
what is now germany through the middle ages and
rarely ruled its titular city.

figure 1: an example quiz bowl question about
the holy roman empire. the    rst sentence
contains no words or named entities that by
themselves are indicative of the answer, while
subsequent sentences contain more and more
obvious clues.

where inputs are typically a single sentence and
outputs are either continuous or a limited dis-
crete set. neural networks have not yet shown
to be useful for tasks that require mapping
paragraph-length inputs to rich output spaces.

consider factoid id53: given
a description of an entity, identify the per-
son, place, or thing discussed. we describe a
task with high-quality mappings from natural
language text to entities in section 2. this
task   quiz bowl   is a challenging natural lan-
guage problem with large amounts of diverse
and compositional data.

to answer quiz bowl questions, we develop
a dependency tree id56
in section 3 and extend it to combine predic-
tions across sentences to produce a question
answering neural network with trans-sentential
averaging (qanta). we evaluate our model
against strong computer and human baselines
in section 4 and conclude by examining the
latent space and model mistakes.

2 matching text to entities: quiz

3 dependency-tree recursive

bowl

neural networks

every weekend, hundreds of high school and
college students play a game where they map
raw text to well-known entities. this is a trivia
competition called quiz bowl. quiz bowl ques-
tions consist of four to six sentences and are
associated with factoid answers (e.g., history
questions ask players to identify speci   c battles,
presidents, or events). every sentence in a quiz
bowl question is guaranteed to contain clues
that uniquely identify its answer, even without
the context of previous sentences. players an-
swer at any time   ideally more quickly than
the opponent   and are rewarded for correct
answers.

automatic approaches to quiz bowl based on
existing nlp techniques are doomed to failure.
quiz bowl questions have a property called
pyramidality, which means that sentences early
in a question contain harder, more obscure
clues, while later sentences are    giveaways   .
this design rewards players with deep knowl-
edge of a particular subject and thwarts bag
of words methods. sometimes the    rst sen-
tence contains no named entities   answering
the question correctly requires an actual un-
derstanding of the sentence (figure 1). later
sentences, however, progressively reveal more
well-known and uniquely identifying terms.

previous work answers quiz bowl ques-
tions using a bag of words (na    ve bayes) ap-
proach (boyd-graber et al., 2012). these mod-
els fail on sentences like the    rst one in figure 1,
a typical hard, initial clue. recursive neural
networks (id56s), in contrast to simpler models,
can capture the compositional aspect of such
sentences (hermann et al., 2013).

id56s require many redundant training exam-
ples to learn meaningful representations, which
in the quiz bowl setting means we need multiple
questions about the same answer. fortunately,
hundreds of questions are produced during the
school year for quiz bowl competitions, yield-
ing many di   erent examples of questions ask-
ing about any entity of note (see section 4.1
for more details). thus, we have built-in re-
dundancy (the number of    askable    entities is
limited), but also built-in diversity, as di   cult
clues cannot appear in every question without
becoming well-known.

to compute distributed representations for the
individual sentences within quiz bowl ques-
tions, we use a dependency-tree id56 (dt-id56).
these representations are then aggregated and
fed into a multinomial id28 clas-
si   er, where class labels are the answers asso-
ciated with each question instance.

in previous work, socher et al. (2014) use
dt-id56s to map text descriptions to images.
dt-id56s are robust to similar sentences with
slightly di   erent syntax, which is ideal for our
problem since answers are often described by
many sentences that are similar in meaning
but di   erent in structure. our model improves
upon the existing dt-id56 model by jointly
learning answer and question representations
in the same vector space rather than learning
them separately.

3.1 model description
as in other id56 models, we begin by associ-
ating each word w in our vocabulary with a
vector representation xw     rd. these vectors
are stored as the columns of a d    v dimen-
sional id27 matrix we, where v is
the size of the vocabulary. our model takes
dependency parse trees of question sentences
(de marne   e et al., 2006) and their correspond-
ing answers as input.

each node n in the parse tree for a partic-
ular sentence is associated with a word w, a
word vector xw, and a hidden vector hn     rd
of the same dimension as the word vectors. for
internal nodes, this vector is a phrase-level rep-
resentation, while at leaf nodes it is the word
vector xw mapped into the hidden space. un-
like in constituency trees where all words reside
at the leaf level, internal nodes of dependency
trees are associated with words. thus, the dt-
id56 has to combine the current node   s word
vector with its children   s hidden vectors to form
hn. this process continues recursively up to
the root, which represents the entire sentence.
we associate a separate d  d matrix wr with
each dependency relation r in our dataset and
learn these matrices during training.1 syntac-
tically untying these matrices improves com-

1we had 46 unique dependency relations in our quiz

bowl dataset.

root

poss

nsubj

det

possessive

prep

pobj

amod

vmod

dobj

this

city

   s

economy

depended

on

subjugated

peasants

called

helots

figure 2: dependency parse of a sentence from a question about sparta.

positionality over the standard id56 model by
taking into account relation identity along with
tree structure. we include an additional d    d
matrix, wv, to incorporate the word vector xw
at a node into the node vector hn.

given a parse tree (figure 2), we    rst com-
pute leaf representations. for example, the
hidden representation hhelots is

hhelots = f (wv    xhelots + b),

(1)

where f is a non-linear activation function such
as tanh and b is a bias term. once all leaves
are    nished, we move to interior nodes with
already processed children. continuing from
   helots    to its parent,    called   , we compute
hcalled =f (wdobj    hhelots + wv    xcalled

+ b).

(2)

we repeat this process up to the root, which is
hdepended =f (wnsubj    heconomy + wprep    hon
(3)

+ wv    xdepended + b).

the composition equation for any node n with
children k(n) and word vector xw is hn =

f (wv    xw + b +

wr(n,k)    hk),

(4)

(cid:88)

k   k(n)

where r(n, k) is the dependency relation be-
tween node n and child node k.

3.2 training

our goal is to map questions to their corre-
sponding answer entities. because there are
a limited number of possible answers, we can
view this as a multi-class classi   cation task.
while a softmax layer over every node in the
tree could predict answers (socher et al., 2011;
iyyer et al., 2014), this method overlooks that
most answers are themselves words (features)
in other questions (e.g., a question on world

war ii might mention the battle of the bulge
and vice versa). thus, word vectors associated
with such answers can be trained in the same
vector space as question text,2 enabling us to
model relationships between answers instead
of assuming incorrectly that all answers are
independent.

to take advantage of this observation, we
depart from socher et al. (2014) by training
both the answers and questions jointly in a
single model, rather than training each sep-
arately and holding embeddings    xed during
dt-id56 training. this method cannot be ap-
plied to the multimodal text-to-image mapping
problem because text captions by de   nition are
made up of words and thus cannot include im-
ages; in our case, however, question text can
and frequently does include answer text.

intuitively, we want to encourage the vectors
of question sentences to be near their correct
answers and far away from incorrect answers.
we accomplish this goal by using a contrastive
max-margin objective function described be-
low. while we are not interested in obtaining a
ranked list of answers,3 we observe better per-
formance by adding the weighted approximate-
rank pairwise (warp) loss proposed in weston
et al. (2011) to our objective function.

given a sentence paired with its correct an-
swer c, we randomly select j incorrect answers
from the set of all incorrect answers and denote
this subset as z. since c is part of the vocab-
ulary, it has a vector xc     we. an incorrect
answer z     z is also associated with a vector
xz     we. we de   ne s to be the set of all nodes
in the sentence   s dependency tree, where an
individual node s     s is associated with the

2of course, questions never contain their own answer

as part of the text.

3in quiz bowl, all wrong guesses are equally detri-
mental to a team   s score, no matter how    close    a guess
is to the correct answer.

hidden vector hs. the error for the sentence is

(cid:88)

(cid:88)

s   s

z   z

c(s,   ) =

l(rank(c, s, z))max(0,
1     xc    hs + xz    hs),

(5)

where the function rank(c, s, z) provides the
rank of correct answer c with respect to the
incorrect answers z. we transform this rank
into a id1684 shown by usunier et al.
(2009) to optimize the top of the ranked list,

r(cid:80)

i=1

l(r) =

1/i.

since rank(c, s, z) is expensive to compute,
we approximate it by randomly sampling k
incorrect answers until a violation is observed
(xc    hs < 1 + xz    hs) and set rank(c, s, z) =
(|z|    1)/k, as in previous work (weston et al.,
2011; hermann et al., 2014). the model mini-
mizes the sum of the error over all sentences t
normalized by the number of nodes n in the
training set,

(cid:88)

t   t

j(  ) =

1
n

c(t,   ).

(6)

the parameters    = (wr   r, wv, we, b), where
r represents all dependency relations in the
data, are optimized using adagrad(duchi et
al., 2011).5 in section 4 we compare perfor-
mance to an identical model (fixed-qanta)
that excludes answer vectors from we and show
that training them as part of    produces signif-
icantly better results.

the gradient of the objective function,

(cid:88)

t   t

   c
     

=

1
n

   j(t)

     

,

(7)

is computed using id26 through
structure (goller and kuchler, 1996).

3.3 from sentences to questions

the model we have just described considers
each sentence in a quiz bowl question indepen-
dently. however, previously-heard sentences
within the same question contain useful infor-
mation that we do not want our model to ignore.

4our experiments show that adding this loss term to
the objective function not only increases performance
but also speeds up convergence

5we set the initial learning rate    = 0.05 and reset

the squared gradient sum to zero every    ve epochs.

while past work on id56 models have been re-
stricted to the sentential and sub-sentential
levels, we show that sentence-level representa-
tions can be easily combined to generate useful
representations at the larger paragraph level.
the simplest and best6 aggregation method
is just to average the representations of each
sentence seen so far in a particular question.
as we show in section 4, this method is very
powerful and performs better than most of our
baselines. we call this averaged dt-id56 model
qanta: a id53 neural network
with trans-sentential averaging.

4 experiments

we compare the performance of qanta against
multiple strong baselines on two datasets.
qanta outperforms all baselines trained only
on question text and improves an information
retrieval model trained on all of wikipedia.
qanta requires that an input sentence de-
scribes an entity without mentioning that
entity, a constraint that is not followed by
wikipedia sentences.7 while ir methods can
operate over wikipedia text with no issues,
we show that the representations learned by
qanta over just a dataset of question-answer
pairs can signi   cantly improve the performance
of ir systems.

4.1 datasets

we evaluate our algorithms on a corpus of over
100,000 question/answer pairs from two di   er-
ent sources. first, we expand the dataset used
in boyd-graber et al. (2012) with publically-
available questions from quiz bowl tournaments
held after that work was published. this gives
us 46,842 questions in fourteen di   erent cate-
gories. to this dataset we add 65,212 questions
from naqt, an organization that runs quiz
bowl tournaments and generously shared with
us all of their questions from 1998   2013.

6we experimented with weighting earlier sentences
less than later ones in the average as well as learning an
additional id56 on top of the sentence-level representa-
tions. in the former case, we observed no improvements
over a uniform average, while in the latter case the
model over   t even with strong id173.

7we tried transforming wikipedia sentences into
quiz bowl sentences by replacing answer mentions with
appropriate descriptors (e.g.,    joseph heller    with    this
author   ), but the resulting sentences su   ered from a
variety of grammatical issues and did not help the    nal
result.

because some categories contain substan-
tially fewer questions than others (e.g., astron-
omy has only 331 questions), we consider only
literature and history questions, as these two
categories account for more than 40% of the
corpus. this leaves us with 21,041 history ques-
tions and 22,956 literature questions.

4.1.1 data preparation

to make this problem feasible, we only consider
a limited set of the most popular quiz bowl an-
swers. before we    lter out uncommon answers,
we    rst need to map all raw answer strings to
a canonical set to get around formatting and
redundancy issues. most quiz bowl answers are
written to provide as much information about
the entity as possible. for example, the follow-
ing is the raw answer text of a question on the
chinese leader sun yat-sen: sun yat-sen; or
sun yixian; or sun wen; or sun deming; or
nakayama sho; or nagao takano. quiz bowl
writers vary in how many alternate acceptable
answers they provide, which makes it tricky to
strip super   uous information from the answers
using rule-based approaches.

instead, we use whoosh,8 an information re-
trieval library, to generate features in an active
learning classi   er that matches existing answer
strings to wikipedia titles. if we are unable
to    nd a match with a high enough con   dence
score, we throw the question out of our dataset.
after this standardization process and manual
vetting of the resulting output, we can use the
wikipedia page titles as training labels for the
dt-id56 and baseline models.9

65.6% of answers only occur once or twice
in the corpus. we    lter out all answers that
do not occur at least six times, which leaves
us with 451 history answers and 595 literature
answers that occur on average twelve times
in the corpus. these pruning steps result in
4,460 usable history questions and 5,685 liter-
ature questions. while ideally we would have
used all answers, our model bene   ts from many
training examples per answer to learn mean-
ingful representations; this issue can possibly
be addressed with techniques from zero shot
learning (palatucci et al., 2009; pasupat and
liang, 2014), which we leave to future work.

8https://pypi.python.org/pypi/whoosh/
9code and non-naqt data available at http://cs.

umd.edu/~miyyer/qblearn.

we apply basic named entity recogni-
tion (ner) by replacing all occurrences of
answers in the question text with single
entities (e.g., ernest hemingway becomes
ernest hemingway). while we experimented
with more advanced ner systems to detect
non-answer entities, they could not handle
multi-word named entities like the book love
in the time of cholera (title case) or battle
names (e.g., battle of midway). a simple
search/replace on all answers in our corpus
works better for multi-word entities.

the preprocessed data are split into folds
by tournament. we choose the past two na-
tional tournaments10 as our test set as well
as questions previously answered by players in
boyd-graber et al. (2012) and assign all other
questions to train and dev sets. history results
are reported on a training set of 3,761 ques-
tions with 14,217 sentences and a test set of
699 questions with 2,768 sentences. literature
results are reported on a training set of 4,777
questions with 17,972 sentences and a test set
of 908 questions with 3,577 sentences.

finally, we initialize the id27
matrix we with id97 (mikolov et al., 2013)
trained on the preprocessed question text in
our training set.11 we use the hierarchical skip-
gram model setting with a window size of    ve
words.

4.2 baselines
we pit qanta against two types of baselines:
id159s, which enable comparison
to a standard nlp baseline, and information
retrieval models, which allow us to compare
against traditional id53 tech-
niques.
bow the bow baseline is a logistic regres-
sion classi   er trained on binary unigram indi-
cators.12 this simple discriminative model is
an improvement over the generative quiz bowl
answering model of boyd-graber et al. (2012).

10the tournaments were selected because naqt does
not reuse any questions or clues within these tourna-
ments.

11out-of-vocabulary words from the test set are ini-

tialized randomly.

12raw word counts,

frequencies, and tf-idf
weighted features did not increase performance, nor
did adding bigrams to the feature set (possibly because
multi-word named entities are already collapsed into
single words).

bow-dt the bow-dt baseline is identical
to bow except we augment the feature set with
dependency relation indicators. we include
this baseline to isolate the e   ects of the depen-
dency tree structure from our compositional
model.
ir-qb the ir-qb baseline maps questions to
answers using the state-of-the-art whoosh ir
engine. the knowledge base for ir-qb consists
of    pages    associated with each answer, where
each page is the union of training question text
for that answer. given a partial question, the
text is    rst preprocessed using a query lan-
guage similar to that of apache lucene. this
processed query is then matched to pages uses
bm-25 term weighting, and the top-ranked page
is considered to be the model   s guess. we also
incorporate fuzzy queries to catch misspellings
and plurals and use whoosh   s built-in query ex-
pansion functionality to add related keywords
to our queries. ir-wiki the ir-wiki model
is identical to the ir-qb model except that each
   page    in its knowledge base also includes all
text from the associated answer   s wikipedia
article. since all other baselines and dt-id56
models operate only on the question text, this
is not a valid comparison, but we o   er it to
show that we can improve even this strong
model using qanta.

4.3 dt-id56 con   gurations
for all dt-id56 models the vector dimension d
and the number of wrong answers per node j
is set to 100. all model parameters other than
we are randomly initialized. the non-linearity
f is the normalized tanh function,13

f (v) =

tanh(v)
(cid:107)tanh(v)(cid:107) .

(8)

qanta is our dt-id56 model with feature
averaging across previously-seen sentences in a
question. to obtain the    nal answer prediction
given a partial question, we    rst generate a
feature representation for each sentence within
that partial question. this representation is
computed by concatenating together the word
embeddings and hidden representations aver-
aged over all nodes in the tree as well as the

13the standard tanh function produced heavy sat-
uration at higher levels of the trees, and corrective
weighting as in socher et al. (2014) hurt our model
because named entities that occur as leaves are often
more important than non-terminal phrases.

root node   s hidden vector. finally, we send
the average of all of the individual sentence fea-
tures14 as input to a id28 classi   er
for answer prediction.

fixed-qanta uses the same dt-id56 con   gu-
ration as qanta except the answer vectors are
kept constant as in the text-to-image model.

4.4 human comparison

previous work provides human answers (boyd-
graber et al., 2012) for quiz bowl questions.
we use human records for 1,201 history guesses
and 1,715 literature guesses from twenty-two of
the quiz bowl players who answered the most
questions.15

the standard scoring system for quiz bowl is
10 points for a correct guess and -5 points for
an incorrect guess. we use this metric to com-
pute a total score for each human. to obtain
the corresponding score for our model, we force
it to imitate each human   s guessing policy. for
example, figure 3 shows a human answering
in the middle of the second sentence. since our
model only considers sentence-level increments,
we compare the model   s prediction after the
   rst sentence to the human prediction, which
means our model is privy to less information
than humans.

the resulting distributions are shown in fig-
ure 4   our model does better than the average
player on history questions, tying or defeat-
ing sixteen of the twenty-two players, but it
does worse on literature questions, where it
only ties or defeats eight players. the    gure
indicates that literature questions are harder
than history questions for our model, which is
corroborated by the experimental results dis-
cussed in the next section.

5 discussion

in this section, we examine why qanta im-
proves over our baselines by giving examples
of questions that are incorrectly classi   ed by
all baselines but correctly classi   ed by qanta.
we also take a close look at some sentences that
all models fail to answer correctly. finally, we
visualize the answer space learned by qanta.

14initial experiments with l2 id173 hurt per-

formance on a validation set.

15participants were skilled quiz bowl players and are

not representative of the general population.

history

literature

model

pos 1 pos 2

full pos 1 pos 2

full

bow
bow-dt
ir-qb
fixed-qanta
qanta

ir-wiki
qanta+ir-wiki

27.5
35.4
37.5
38.3
47.1

53.7
59.8

53.1
51.3
60.2
57.7
71.4
65.9
64.4
66.2
72.1 73.7

76.6
77.5
81.8 82.3

19.3
24.4
27.4
28.9
36.4

41.8
44.7

46.7
43.4
55.7
51.8
61.9
54.0
57.7
62.3
68.2 69.1

74.0
73.3
78.7 76.6

table 1: accuracy for history and literature at the    rst two sentence positions of each question
and the full question. the top half of the table compares models trained on questions only, while
the ir models in the bottom half have access to wikipedia. qanta outperforms all baselines
that are restricted to just the question data, and it substantially improves an ir model with
access to wikipedia despite being trained on much less data.

figure 4: comparisons of qanta+ir-wiki to human quiz bowl players. each bar represents an
individual human, and the bar height corresponds to the di   erence between the model score and
the human score. bars are ordered by human skill. red bars indicate that the human is winning,
while blue bars indicate that the model is winning. qanta+ir-wiki outperforms most humans
on history questions but fails to defeat the    average    human on literature questions.

a minor character in this play can be summoned
by a bell that does not always work; that character
also doesn   t have eyelids. near the end, a woman
who drowned her illegitimate child attempts to stab
another woman in the second empire-style 3 room
in which the entire play takes place. for 10 points,
estelle and ines are characters in which existentialist
play in which garcin claims    hell is other people   ,
written by jean-paul sartre?

figure 3: a question on the play    no exit   
with human buzz position marked as 3. since
the buzz occurs in the middle of the second
sentence, our model is only allowed to see the
   rst sentence.

5.1 experimental results

table 1 shows that when bag of words and
information retrieval methods are restricted to
question data, they perform signi   cantly worse
than qanta on early sentence positions. the

performance of bow-dt indicates that while
the dependency tree structure helps by itself,
the compositional distributed representations
learned by qanta are more useful. the signif-
icant improvement when we train answers as
part of our vocabulary (see section 3.2) indi-
cates that our model uses answer occurrences
within question text to learn a more informa-
tive vector space.

the disparity between ir-qb and ir-wiki
indicates that the information retrieval models
need lots of external data to work well at all
ir-wiki performs better
sentence positions.
than other models because wikipedia contains
many more sentences that partially match spe-
ci   c words or phrases found in early clues than
the question training set. in particular, it is
impossible for all other models to answer clues
in the test set that have no semantically similar

20015010050050100150200score differencehistory: model vs. humanmodel losesmodel wins4003002001000100200score differenceliterature: model vs. humanmodel losesmodel winsor equivalent analogues in the training ques-
tion data. with that said, ir methods can
also operate over data that does not follow the
special constraints of quiz bowl questions (e.g.,
every sentence uniquely identi   es the answer,
answers don   t appear in their corresponding
questions), which qanta cannot handle. by
combining qanta and ir-wiki, we are able to
leverage access to huge knowledge bases along
with deep compositional representations, giv-
ing us the best of both worlds.

5.2 where the attribute space helps

answer questions

we look closely at the    rst sentence from a
literature question about the author thomas
mann:    he left un   nished a novel whose title
character forges his father   s signature to get
out of school and avoids the draft by feigning
desire to join   .

all baselines, including ir-wiki, are unable
to predict the correct answer given only this
sentence. however, qanta makes the correct
prediction. the sentence contains no named
entities, which makes it almost impossible for
bag of words or string matching algorithms to
predict correctly. figure 6 shows that the plot
description associated with the    novel    node
is strongly indicative of the answer. the    ve
highest-scored answers are all male authors,16
which shows that our model is able to learn the
answer type without any hand-crafted rules.

our next example, the    rst sentence in ta-
ble 2, is from the    rst position of a question
on john quincy adams, which is correctly an-
swered by only qanta. the bag of words
model guesses henry clay, who was also a sec-
retary of state in the nineteenth century and
helped john quincy adams get elected to the
presidency in a    corrupt bargain   . however,
the model can reason that while henry clay
was active at the same time and involved in
the same political problems of the era, he did
not represent the amistad slaves, nor did he
negotiate the treaty of ghent.

5.3 where all models struggle

quiz bowl questions are intentionally written to
make players work to get the answer, especially
at early sentence positions. our model fails to

16three of whom who also have well-known un   nished

novels

answer correctly more than half the time after
hearing only the    rst sentence. we examine
some examples to see if there are any patterns
to what makes a question    hard    for machine
learning models.

consider this question about the italian ex-
plorer john cabot:    as a young man, this
native of genoa disguised himself as a muslim
to make a pilgrimage to mecca   .

while it is obvious to human readers that
the man described in this sentence is not actu-
ally a muslim, qanta has to accurately model
the verb disguised to make that id136. we
show the score plot of this sentence in figure 7.
the model, after presumably seeing many in-
stances of muslim and mecca associated with
mughal emperors, is unable to prevent this
information from propagating up to the root
node. on the bright side, our model is able to
learn that the question is expecting a human
answer rather than non-human entities like the
umayyad caliphate.

more examples of impressive answers by
qanta as well as incorrect guesses by all sys-
tems are shown in table 2.

5.4 examining the attribute space

figure 5 shows a id167 visualization (van der
maaten and hinton, 2008) of the 451 answers
in our history dataset. the vector space is
divided into six general clusters, and we focus
in particular on the us presidents. zooming
in on this section reveals temporal id91:
presidents who were in o   ce during the same
timeframe occur closer together. this observa-
tion shows that qanta is capable of learning
attributes of entities during training.

6 related work

there are two threads of related work relevant
to this paper. first, we discuss previous ap-
plications of compositional vector models to
related nlp tasks. then, we examine existing
work on factoid question-answering and review
the similarities and di   erences between these
tasks and the game of quiz bowl.

6.1 id56s for

nlp

the principle of semantic composition states
that the meaning of a phrase can be derived

figure 5: id167 2-d projections of 451 answer
vectors divided into six major clusters. the
blue cluster is predominantly populated by u.s.
presidents. the zoomed plot reveals temporal
id91 among the presidents based on the
years they spent in o   ce.

from the meaning of the words that it con-
tains as well as the syntax that glues those
words together. many computational models
of compositionality focus on learning vector
spaces (zanzotto et al., 2010; erk, 2012; grefen-
stette et al., 2013; yessenalina and cardie,
2011). recent approaches towards modeling
compositional vector spaces with neural net-
works have been successful, although simpler
functions have been proposed for short phrases
(mitchell and lapata, 2008).

id56s have achieved
state-of-the-art performance in sentiment anal-
ysis and parsing (socher et al., 2013c; hermann
and blunsom, 2013; socher et al., 2013a). id56s
have not been previously used for learning at-
tribute spaces as we do here, although recursive
tensor networks were unsuccessfully applied to
a knowledge base completion task (socher et
al., 2013b). more relevant to this work are the
dialogue analysis model proposed by kalchbren-
ner & blunsom (2013) and the paragraph vec-
tor model described in le and mikolov (2014),
both of which are able to generate distributed
representations of paragraphs. here we present
a simpler approach where a single model is able
to learn complex sentence representations and
average them across paragraphs.

6.2 factoid question-answering

factoid id53 is often functionally
equivalent to information retrieval. given a
knowledge base and a query, the goal is to

figure 6: a question on the german novelist
thomas mann that contains no named entities,
along with the    ve top answers as scored by
qanta. each cell in the heatmap corresponds
to the score (inner product) between a node
in the parse tree and the given answer, and
the dependency parse of the sentence is shown
on the left. all of our baselines, including ir-
wiki, are wrong, while qanta uses the plot
description to make a correct guess.

return the answer. many approaches to this
problem rely on hand-crafted pattern matching
and answer-type classi   cation to narrow down
the search space (shen, 2007; bilotti et al.,
2010; wang, 2006). more recent factoid qa
systems incorporate the web and social media
into their retrieval systems (bian et al., 2008).
in contrast to these approaches, we place the
burden of learning answer types and patterns
on the model.

7 future work

while we have shown that dt-id56s are e   ec-
tive models for quiz bowl id53,
other factoid qa tasks are more challenging.
questions like what does the aarp stand for?
from trec qa data require additional infras-
tructure. a more apt comparison would be to
ibm   s proprietary watson system (lally et al.,
2012) for jeopardy, which is limited to single
sentences, or to models trained on yago (hof-
fart et al., 2013).

we would also like to fairly compare qanta

tsne-1tsne-2wars,rebellions,andbattlesu.s.presidentsprimeministersexplorers&emperorspoliciesothertammany_hallcalvin_coolidgelollardyfourth_crusadesonghai_empirepeace_of_westphaliainca_empireatahualpacharles_sumnerjohn_paul_joneswounded_knee_massacrehuldrych_zwinglidarius_ibattle_of_ayacuchojohn_cabotghanaulysses_s._granthartford_conventioncivilian_conservation_corpsroger_williams_(theologian)george_h._pendletonwilliam_mckinleyvictoria_woodhullcredit_mobilier_of_america_scandalhenry_cabot_lodge,_jr.mughal_empirejohn_marshallcultural_revolutionguadalcanallouisiana_purchasenight_of_the_long_kniveschandragupta_mauryasamuel_de_champlainthirty_years'_warcompromise_of_1850battle_of_hastingsbattle_of_salamisakbarlewis_cassdawes_planhernando_de_sotocarthagejoseph_mccarthymainesalvador_allendebattle_of_gettysburgmikhail_gorbachevaaron_burrequal_rights_amendmentwar_of_the_spanish_successioncoxey's_armygeorge_meadefourteen_pointsmapp_v._ohiosam_houstonming_dynastyboxer_rebellionanti-masonic_partyporfirio_diaztreaty_of_portsmouththebes,_greecegolden_hordefrancisco_i._maderohittitesjames_g._blaineschenck_v._united_statescaligulawilliam_walker_(filibuster)henry_vii_of_englandkonrad_adenauerkellogg-briand_pactbattle_of_cullodentreaty_of_brest-litovskwilliam_penna._philip_randolphhenry_l._stimsonwhig_party_(united_states)caroline_affairclarence_darrowwhiskey_rebellionbattle_of_midwaybattle_of_lepantoadolf_eichmanngeorges_clemenceaubattle_of_the_little_bighornpontiac_(person)black_hawk_warbattle_of_tannenbergclayton_antitrust_actprovisions_of_oxfordbattle_of_actiumsuez_crisisspartacusdorr_rebellionjay_treatytriangle_shirtwaist_factory_firekamakura_shogunatejulius_nyererefrederick_douglasspierre_trudeaunagasakisuleiman_the_magnificentfalklands_warwar_of_devolutioncharlemagnedaniel_booneedict_of_nantesharry_s._trumanshakapedro_alvares_cabralthomas_hart_benton_(politician)battle_of_the_coral_seapeterloo_massacrebattle_of_bosworth_fieldroger_b._taneybernardo_o'higginsneville_chamberlainhenry_hudsoncyrus_the_greatjane_addamsrough_ridersjames_a._garfieldnapoleon_iiimissouri_compromisebattle_of_leyte_gulfambrose_burnsidetrent_affairmaria_theresawilliam_ewart_gladstonewalter_mondalebarry_goldwaterlouis_rielhideki_tojomarco_polobrian_mulroneytruman_doctrineroald_amundsentokugawa_shogunateeleanor_of_aquitainelouis_brandeisbattle_of_trentonkhmer_empirebenito_juarezbattle_of_antietamwhiskey_ringotto_von_bismarckbooker_t._washingtonbattle_of_bannockburneugene_v._debserie_canaljameson_raidgreen_mountain_boyshaymarket_affairfinlandfashoda_incidentbattle_of_shilohhannibaljohn_jayeaster_risingjamaicabrook_farmumayyad_caliphatemuhammadfrancis_drakeclara_bartonshays'_rebellionverdunhadrianvyacheslav_molotovoda_nobunagacanossasamuel_gompersbattle_of_bunker_hillbattle_of_plasseydavid_livingstonesolonpericlestang_dynastyteutonic_knightssecond_vatican_councilalfred_dreyfushenry_the_navigatornelson_mandelapeasants'_revoltgaius_mariusgetulio_vargashoratio_gatesjohn_t._scopesleague_of_nationsfirst_battle_of_bull_runalfred_the_greatleonid_brezhnevcherokeelong_marchemiliano_zapatajames_monroewoodrow_wilsonvandalswilliam_henry_harrisonbattle_of_pueblabattle_of_zamajustinian_ithaddeus_stevenscecil_rhodeskwame_nkrumahdiet_of_wormsgeorge_armstrong_custerbattle_of_agincourtseminole_warsshah_jahanamerigo_vespuccijohn_foster_dulleslester_b._pearsonoregon_trailclaudiuslateran_treatychester_a._arthuropium_warstreaty_of_utrechtknights_of_laboralexander_hamiltonplessy_v._fergusonhorace_greeleymary_baker_eddyalexander_kerenskyjacquerietreaty_of_ghentbay_of_pigs_invasionantonio_lopez_de_santa_annagreat_northern_warhenry_i_of_englandcouncil_of_trentchiang_kai-sheksamuel_j._tildenfidel_castrowilmot_provisoyuan_dynastybastillebenjamin_harrisonwar_of_the_austrian_successioncrimean_warjohn_brown_(abolitionist)teapot_dome_scandalalbert_b._fallmarcus_licinius_crassusearl_warrenwarren_g._hardinggunpowder_plothomestead_strikesamuel_adamsjohn_peter_zengerthomas_painefree_soil_partyst._bartholomew's_day_massacrearthur_wellesley,_1st_duke_of_wellingtoncharles_de_gaulleleon_trotskyhugh_capetalexander_h._stephenshaile_selassiewilliam_h._sewardrutherford_b._hayessafavid_dynastymuhammad_ali_jinnahkulturkampfmaximilien_de_robespierrehubert_humphreyludditehull_housephilip_ii_of_macedonguelphs_and_ghibellinesbyzantine_empirealbigensian_crusadediocletianfort_ticonderogaparthian_empirecharles_martelwilliam_jennings_bryanalexander_ii_of_russiaferdinand_magellanstate_of_franklinivan_the_terriblemartin_luther_(1953_film)millard_fillmorefrancisco_francoaethelred_the_unreadyronald_reaganbenito_mussolinihenry_claykitchen_cabinetblack_hole_of_calcuttaancient_corinthjohn_wilkes_boothjohn_tylerrobert_walpolehuey_longtokugawa_ieyasuthomas_nastnikita_khrushchevandrew_jacksonportugallabour_party_(uk)monroe_doctrinejohn_quincy_adamscongress_of_berlintecumsehjacques_cartierbattle_of_the_thamesspanish_civil_warethiopiafugitive_slave_lawsjohn_a._macdonaldcouncil_of_chalcedonpancho_villawar_of_the_pacificgeorge_wallacesusan_b._anthonymarcus_garveygrover_clevelandjohn_haygeorge_b._mcclellanoctober_manifestovitus_beringjohn_hancockwilliam_lloyd_garrisonplatt_amendmentmary,_queen_of_scotsfirst_triumviratefrancisco_vasquez_de_coronadomargaret_thatchersherman_antitrust_acthanseatic_leaguehenry_morton_stanleyjuly_revolutionstephen_a._douglasxyz_affairjimmy_carterfrancisco_pizarrokublai_khanvasco_da_gamaspartabattle_of_caporettoostend_manifestomustafa_kemal_ataturkpeter_the_greatgang_of_fourbattle_of_chancellorsvilledavid_lloyd_georgecardinal_mazarinembargo_act_of_1807brigham_youngcharles_lindberghhudson's_bay_companyattilaparis_communejefferson_davisamelia_earhartmali_empireadolf_hitlerbenedict_arnoldcamillo_benso,_count_of_cavourmeiji_restorationblack_panther_partymark_antonyfranklin_piercemolly_maguireszachary_taylorhan_dynastyadlai_stevenson_iijames_k._polkdouglas_macarthurboston_massacretoyotomi_hideyoshigreenback_partysecond_boer_warthird_crusadejames_buchananjohn_shermangeorge_washingtonwars_of_the_rosesatlantic_chartereleanor_rooseveltcongress_of_viennajohn_wycliffewinston_churchillemilio_aguinaldomiguel_hidalgo_y_costillasecond_bank_of_the_united_statescouncil_of_constanceseneca_falls_conventionfirst_crusadespiro_agnewtaiping_rebellionmao_zedongpaul_von_hindenburgalbany_congressjawaharlal_nehrubattle_of_blenheimethan_allenantonio_de_oliveira_salazarherbert_hooverpepin_the_shortindira_gandhiwilliam_howard_taftthomas_jeffersongamal_abdel_nasseroliver_cromwellsalmon_p._chasebattle_of_austerlitzbenjamin_disraeligadsden_purchasegirolamo_savonarolatreaty_of_tordesillasbattle_of_marathonelizabeth_cady_stantonbattle_of_kings_mountainchristopher_columbuswilliam_the_conquerorbattle_of_trafalgarcharles_evans_hughescleistheneswilliam_tecumseh_shermanmobutu_sese_sekoprague_springbaburpeloponnesian_warjacques_marquetteneroparaguayhyksosmartin_van_burenbonus_armycharles_stewart_parnelledward_the_confessorbartolomeu_diassalem_witch_trialsbattle_of_the_bulgejohn_adamsmaginot_linehenry_cabot_lodgegiuseppe_garibaldidaniel_websterjohn_c._calhountreaty_of_waitangizebulon_pikegenghis_khancalvin_coolidgewilliam_mckinleyjames_monroewoodrow_wilsonwilliam_henry_harrisonbenjamin_harrisonmillard_fillmoreronald_reaganjohn_tylerandrew_jacksonjohn_quincy_adamsgrover_clevelandjimmy_carterfranklin_piercezachary_taylorjames_buchanangeorge_washingtonherbert_hooverwilliam_howard_taftthomas_jeffersonmartin_van_burenjohn_adamsthomas mannjoseph conradhenrik ibsenfranz kafkahenry jamesq he also successfully represented the amistad
slaves and negotiated the treaty of ghent and
the annexation of    orida from spain during his
stint as secretary of state under james monroe
a john quincy adams, henry clay, andrew jack-

son

q this work refers to people who fell on their
knees in hopeless cathedrals and who jumped
o    the brooklyn bridge

a howl, the tempest, paradise lost
q despite the fact that twenty six martyrs were
cruci   ed here in the late sixteenth century it
remained the center of christianity in its coun-
try

a nagasaki, guadalcanal, ethiopia
q this novel parodies freudianism in a chapter
about the protagonist    s dream of holding a
live    sh in his hands

a

billy budd, the ambassadors, all my sons

q a contemporary of elizabeth i he came to power
two years before her and died two years later

a

grover cleveland, benjamin harrison, henry
cabot lodge

table 2: five example sentences occuring at
the    rst sentence position along with their top
three answers as scored by qanta; correct an-
swers are marked with blue and wrong answers
are marked with red. qanta gets the    rst
three correct, unlike all other baselines. the
last two questions are too di   cult for all of
our models, requiring external knowledge (e.g.,
freudianism) and temporal reasoning.

tations with more predictive power than those
of the individual sentences.

acknowledgments

we thank the anonymous reviewers, stephanie
hwa, bert huang, and he he for their insight-
ful comments. we thank sharad vikram, r.
hentzel, and the members of naqt for pro-
viding our data. this work was supported by
nsf grant iis-1320538. boyd-graber is also
supported by nsf grant ccf-1018625. any
opinions,    ndings, conclusions, or recommen-
dations expressed here are those of the authors
and do not necessarily re   ect the view of the
sponsor.

figure 7: an extremely misleading question
about john cabot, at least to computer models.
the words muslim and mecca lead to three
mughal emperors in the top    ve guesses from
qanta; other models are similarly led awry.

with ir-wiki. a promising avenue for future
work would be to incorporate wikipedia data
into qanta by transforming sentences to look
like quiz bowl questions (wang et al., 2007) and
to select relevant sentences, as not every sen-
tence in a wikipedia article directly describes
its subject. syntax-speci   c annotation (sayeed
et al., 2012) may help in this regard.

finally, we could adapt the attribute space
learned by the dt-id56 to use information from
knowledge bases and to aid in knowledge base
completion. having learned many facts about
entities that occur in question text, a dt-id56
could add new facts to a knowledge base or
check existing relationships.

8 conclusion

we present qanta, a dependency-tree recursive
neural network for factoid id53
that outperforms bag of words and informa-
tion retrieval baselines. our model improves
upon a contrastive max-margin objective func-
tion from previous work to dynamically update
answer vectors during training with a single
model. finally, we show that sentence-level
representations can be easily and e   ectively
combined to generate paragraph-level represen-

akbarshah jahanmuhammadbaburghanareferences

yoshua bengio, r  ejean ducharme, pascal vincent, and
christian jauvin. 2003. a neural probabilistic lan-
guage model. jmlr.

jiang bian, yandong liu, eugene agichtein, and
hongyuan zha. 2008. finding the right facts in
the crowd: factoid id53 over social
media. in www.

matthew w. bilotti, jonathan elsas, jaime carbonell,
and eric nyberg. 2010. rank learning for factoid
id53 with linguistic and semantic con-
straints. in cikm.

jordan boyd-graber, brianna satino   , he he, and
hal daume iii. 2012. besting the quiz master:
id104 incremental classi   cation games. in
emnlp.

marie-catherine de marne   e, bill maccartney, christo-
pher d manning, et al. 2006. generating typed
dependency parses from phrase structure parses. in
lrec.

john duchi, elad hazan, and yoram singer. 2011.
adaptive subgradient methods for online learning
and stochastic optimization. jmlr, 999999:2121   
2159.

katrin erk. 2012. vector space models of word mean-
ing and phrase meaning: a survey. language and
linguistics compass.

nal kalchbrenner and phil blunsom. 2013. recurrent
convolutional neural networks for discourse compo-
sitionality. proceedings of the 2013 workshop on
continuous vector space models and their composi-
tionality.

adam lally, john m prager, michael c mccord,
bk boguraev, siddharth patwardhan, james fan,
paul fodor, and jennifer chu-carroll. 2012. ques-
tion analysis: how watson reads a clue. ibm journal
of research and development.

quoc v le and tomas mikolov. 2014. distributed

representations of sentences and documents.

tomas mikolov, kai chen, greg corrado, and jef-
2013. e   cient estimation of word
arxiv preprint

frey dean.
representations in vector space.
arxiv:1301.3781.

je    mitchell and mirella lapata. 2008. vector-based

models of semantic composition. in acl.

mark palatucci, dean pomerleau, geo   rey e. hinton,
and tom m. mitchell. 2009. zero-shot learning with
semantic output codes. in nips.

p. pasupat and p. liang. 2014. zero-shot entity extrac-

tion from web pages. in acl.

asad b sayeed, jordan boyd-graber, bryan rusk, and
amy weinberg. 2012. grammatical structures for
word-level sentiment detection. in naacl.

dan shen. 2007. using semantic role to improve ques-

tion answering. in emnlp.

christoph goller and andreas kuchler. 1996. learning
task-dependent distributed representations by back-
propagation through structure. in neural networks,
1996., ieee international conference on, volume 1.

richard socher, je   rey pennington, eric h. huang,
andrew y. ng, and christopher d. manning. 2011.
semi-supervised recursive autoencoders for predict-
ing sentiment distributions. in emnlp.

edward grefenstette, georgiana dinu, yao-zhong
zhang, mehrnoosh sadrzadeh, and marco baroni.
2013. multi-step regression learning for composi-
tional id65. corr.

karl moritz hermann and phil blunsom. 2013. the
role of syntax in vector space models of composi-
tional semantics. in acl.

karl moritz hermann, edward grefenstette, and phil
blunsom. 2013.    not not bad    is not    bad   : a
distributional account of negation. proceedings of the
acl workshop on continuous vector space models
and their compositionality.

karl moritz hermann, dipanjan das, jason weston,
and kuzman ganchev. 2014. semantic frame iden-
ti   cation with distributed word representations. in
acl.

johannes ho   art, fabian m suchanek, klaus berberich,
and gerhard weikum. 2013. yago2: a spatially and
temporally enhanced knowledge base from wikipedia.
arti   cial intelligence, 194:28   61.

richard socher, john bauer, christopher d. manning,
and andrew y. ng. 2013a. parsing with composi-
tional vector grammars. in acl.

richard socher, danqi chen, christopher d. manning,
and andrew y. ng. 2013b. reasoning with neural
tensor networks for knowledge base completion.
in nips.

richard socher, alex perelygin, jean y wu, jason
chuang, christopher d manning, andrew y ng, and
christopher potts. 2013c. recursive deep models for
semantic compositionality over a sentiment treebank.
in emnlp.

richard socher, quoc v le, christopher d manning,
and andrew y ng. 2014. grounded compositional
semantics for    nding and describing images with
sentences. tacl.

nicolas usunier, david bu   oni, and patrick gallinari.
2009. ranking with ordered weighted pairwise clas-
si   cation. in icml.

laurens van der maaten and geo   rey hinton. 2008.

visualizing data using id167. jmlr.

mohit iyyer, peter enns, jordan boyd-graber, and
philip resnik. 2014. political ideology detection
using id56s.

mengqiu wang, noah a. smith, and teruko mita-
mura. 2007. what is the jeopardy model? a quasi-
synchronous grammar for qa. in emnlp.

mengqiu wang. 2006. a survey of answer extraction
techniques in factoid id53. computa-
tional linguistics, 1(1).

jason weston, samy bengio, and nicolas usunier. 2011.
wsabie: scaling up to large vocabulary image anno-
tation. in ijcai.

ainur yessenalina and claire cardie. 2011. compo-
sitional matrix-space models for id31.
in emnlp.

fabio massimo zanzotto,

ioannis korkontzelos,
francesca fallucchi, and suresh manandhar. 2010.
estimating linear models for compositional distribu-
tional semantics. in colt.

