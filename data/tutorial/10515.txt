4
1
0
2

 

n
u
j
 

5

 
 
]
e
n
.
s
c
[
 
 

5
v
0
5
8
0

.

8
0
3
1
:
v
i
x
r
a

generating sequences with
recurrent neural networks

alex graves

department of computer science

university of toronto

graves@cs.toronto.edu

abstract

this paper shows how long short-term memory recurrent neural net-
works can be used to generate complex sequences with long-range struc-
ture, simply by predicting one data point at a time. the approach is
demonstrated for text (where the data are discrete) and online handwrit-
ing (where the data are real-valued). it is then extended to handwriting
synthesis by allowing the network to condition its predictions on a text
sequence. the resulting system is able to generate highly realistic cursive
handwriting in a wide variety of styles.

1

introduction

recurrent neural networks (id56s) are a rich class of dynamic models that have
been used to generate sequences in domains as diverse as music [6, 4], text [30]
and motion capture data [29]. id56s can be trained for sequence generation by
processing real data sequences one step at a time and predicting what comes
next. assuming the predictions are probabilistic, novel sequences can be gener-
ated from a trained network by iteratively sampling from the network   s output
distribution, then feeding in the sample as input at the next step.
in other
words by making the network treat its inventions as if they were real, much like
a person dreaming. although the network itself is deterministic, the stochas-
ticity injected by picking samples induces a distribution over sequences. this
distribution is conditional, since the internal state of the network, and hence its
predictive distribution, depends on the previous inputs.

id56s are    fuzzy    in the sense that they do not use exact templates from
the training data to make predictions, but rather   like other neural networks   
use their internal representation to perform a high-dimensional interpolation
between training examples. this distinguishes them from id165 models and
compression algorithms such as prediction by partial matching [5], whose pre-
dictive distributions are determined by counting exact matches between the
recent history and the training set. the result   which is immediately appar-

1

ent from the samples in this paper   is that id56s (unlike template-based al-
gorithms) synthesise and reconstitute the training data in a complex way, and
rarely generate the same thing twice. furthermore, fuzzy predictions do not suf-
fer from the curse of dimensionality, and are therefore much better at modelling
real-valued or multivariate data than exact matches.

in principle a large enough id56 should be su   cient to generate sequences
of arbitrary complexity.
in practice however, standard id56s are unable to
store information about past inputs for very long [15]. as well as diminishing
their ability to model long-range structure, this    amnesia    makes them prone to
instability when generating sequences. the problem (common to all conditional
generative models) is that if the network   s predictions are only based on the last
few inputs, and these inputs were themselves predicted by the network, it has
little opportunity to recover from past mistakes. having a longer memory has
a stabilising e   ect, because even if the network cannot make sense of its recent
history, it can look further back in the past to formulate its predictions. the
problem of instability is especially acute with real-valued data, where it is easy
for the predictions to stray from the manifold on which the training data lies.
one remedy that has been proposed for conditional models is to inject noise into
the predictions before feeding them back into the model [31], thereby increasing
the model   s robustness to surprising inputs. however we believe that a better
memory is a more profound and e   ective solution.

long short-term memory (lstm) [16] is an id56 architecture designed to
be better at storing and accessing information than standard id56s. lstm has
recently given state-of-the-art results in a variety of sequence processing tasks,
including speech and handwriting recognition [10, 12]. the main goal of this
paper is to demonstrate that lstm can use its memory to generate complex,
realistic sequences containing long-range structure.

section 2 de   nes a    deep    id56 composed of stacked lstm layers, and ex-
plains how it can be trained for next-step prediction and hence sequence gener-
ation. section 3 applies the prediction network to text from the id32
and hutter prize wikipedia datasets. the network   s performance is compet-
itive with state-of-the-art language models, and it works almost as well when
predicting one character at a time as when predicting one word at a time. the
highlight of the section is a generated sample of wikipedia text, which showcases
the network   s ability to model long-range dependencies. section 4 demonstrates
how the prediction network can be applied to real-valued data through the use
of a mixture density output layer, and provides experimental results on the iam
online handwriting database. it also presents generated handwriting samples
proving the network   s ability to learn letters and short words direct from pen
traces, and to model global features of handwriting style. section 5 introduces
an extension to the prediction network that allows it to condition its outputs on
a short annotation sequence whose alignment with the predictions is unknown.
this makes it suitable for handwriting synthesis, where a human user inputs
a text and the algorithm generates a handwritten version of it. the synthesis
network is trained on the iam database, then used to generate cursive hand-
writing samples, some of which cannot be distinguished from real data by the

2

figure 1: deep recurrent neural network prediction architecture. the
circles represent network layers, the solid lines represent weighted connections
and the dashed lines represent predictions.

naked eye. a method for biasing the samples towards higher id203 (and
greater legibility) is described, along with a technique for    priming    the sam-
ples on real data and thereby mimicking a particular writer   s style. finally,
concluding remarks and directions for future work are given in section 6.

2 prediction network

fig. 1 illustrates the basic recurrent neural network prediction architecture used
in this paper. an input vector sequence x = (x1, . . . , xt ) is passed through
weighted connections to a stack of n recurrently connected hidden layers to
compute    rst the hidden vector sequences hn = (hn
t ) and then the
output vector sequence y = (y1, . . . , yt ). each output vector yt is used to
parameterise a predictive distribution pr(xt+1|yt) over the possible next inputs
xt+1. the    rst element x1 of every input sequence is always a null vector whose
entries are all zero; the network therefore emits a prediction for x2, the    rst
real input, with no prior information. the network is    deep    in both space
and time, in the sense that every piece of information passing either vertically
or horizontally through the computation graph will be acted on by multiple
successive weight matrices and nonlinearities.

1 , . . . , hn

note the    skip connections    from the inputs to all hidden layers, and from
all hidden layers to the outputs. these make it easier to train deep networks,

3

n(cid:88)

n=1

  yt = by +
yt = y(  yt)

by reducing the number of processing steps between the bottom of the network
and the top, and thereby mitigating the    vanishing gradient    problem [1]. in
the special case that n = 1 the architecture reduces to an ordinary, single layer
next step prediction id56.

the hidden layer activations are computed by iterating the following equa-

tions from t = 1 to t and from n = 2 to n :

t = h(cid:0)wih1xt + wh1h1 h1
t = h(cid:0)wihn xt + whn   1hnhn   1

t   1 + b1
h

h1
hn

(cid:1)

t + whnhn hn

t   1 + bn
h

(cid:1)

(1)

(2)

where the w terms denote weight matrices (e.g. wihn is the weight matrix
connecting the inputs to the nth hidden layer, wh1h1 is the recurrent connection
at the    rst hidden layer, and so on), the b terms denote bias vectors (e.g. by is
output bias vector) and h is the hidden layer function.

given the hidden sequences, the output sequence is computed as follows:

whnyhn
t

(3)

(4)
where y is the output layer function. the complete network therefore de   nes
a function, parameterised by the weight matrices, from input histories x1:t to
output vectors yt.
the output vectors yt are used to parameterise the predictive distribution
pr(xt+1|yt) for the next input. the form of pr(xt+1|yt) must be chosen carefully
to match the input data. in particular,    nding a good predictive distribution
for high-dimensional, real-valued data (usually referred to as density modelling),
can be very challenging.

the id203 given by the network to the input sequence x is

t(cid:89)

t=1

l(x) =     t(cid:88)

pr(x) =

pr(xt+1|yt)

(5)

and the sequence loss l(x) used to train the network is the negative logarithm
of pr(x):

log pr(xt+1|yt)

(6)

t=1

the partial derivatives of the loss with respect to the network weights can be
e   ciently calculated with id26 through time [33] applied to the
computation graph shown in fig. 1, and the network can then be trained with
id119.

2.1 long short-term memory
in most id56s the hidden layer function h is an elementwise application of a
sigmoid function. however we have found that the long short-term memory

4

figure 2: long short-term memory cell

(lstm) architecture [16], which uses purpose-built memory cells to store infor-
mation, is better at    nding and exploiting long range dependencies in the data.
fig. 2 illustrates a single lstm memory cell. for the version of lstm used in
this paper [7] h is implemented by the following composite function:

it =    (wxixt + whiht   1 + wcict   1 + bi)
ft =    (wxf xt + whf ht   1 + wcf ct   1 + bf )
ct = ftct   1 + it tanh (wxcxt + whcht   1 + bc)
ot =    (wxoxt + whoht   1 + wcoct + bo)
ht = ot tanh(ct)

(7)

(8)

(9)

(10)

(11)

where    is the logistic sigmoid function, and i, f , o and c are respectively the
input gate, forget gate, output gate, cell and cell input activation vectors, all of
which are the same size as the hidden vector h. the weight matrix subscripts
have the obvious meaning, for example whi is the hidden-input gate matrix,
wxo is the input-output gate matrix etc. the weight matrices from the cell
to gate vectors (e.g. wci) are diagonal, so element m in each gate vector only
receives input from element m of the cell vector. the bias terms (which are
added to i, f , c and o) have been omitted for clarity.

the original lstm algorithm used a custom designed approximate gradi-
ent calculation that allowed the weights to be updated after every timestep [16].
however the full gradient can instead be calculated with id26 through
time [11], the method used in this paper. one di   culty when training lstm
with the full gradient is that the derivatives sometimes become excessively large,

5

leading to numerical problems. to prevent this, all the experiments in this pa-
per clipped the derivative of the loss with respect to the network inputs to the
lstm layers (before the sigmoid and tanh functions are applied) to lie within
a prede   ned range1.

3 text prediction

text data is discrete, and is typically presented to neural networks using    one-
hot    input vectors. that is, if there are k text classes in total, and class k is fed
in at time t, then xt is a length k vector whose entries are all zero except for
the kth, which is one. pr(xt+1|yt) is therefore a multinomial distribution, which
can be naturally parameterised by a softmax function at the output layer:

pr(xt+1 = k|yt) = yk

(cid:1)

t =

exp(cid:0)  yk
(cid:1)
k(cid:48)=1 exp(cid:0)  yk(cid:48)
(cid:80)k
l(x) =     t(cid:88)

log yxt+1

t

t

t

=       l(x)

      yk
t

t=1

= yk

t       k,xt+1

(12)

(13)

(14)

substituting into eq. (6) we see that

the only thing that remains to be decided is which set of classes to use. in
most cases, text prediction (usually referred to as language modelling) is per-
formed at the word level. k is therefore the number of words in the dictionary.
this can be problematic for realistic tasks, where the number of words (in-
cluding variant conjugations, proper names, etc.) often exceeds 100,000. as
well as requiring many parameters to model, having so many classes demands a
huge amount of training data to adequately cover the possible contexts for the
words. in the case of softmax models, a further di   culty is the high computa-
tional cost of evaluating all the exponentials during training (although several
methods have been to devised make training large softmax layers more e   cient,
including tree-based models [25, 23], low rank approximations [27] and stochas-
tic derivatives [26]). furthermore, word-level models are not applicable to text
data containing non-word strings, such as multi-digit numbers or web addresses.
character-level language modelling with neural networks has recently been
considered [30, 24], and found to give slightly worse performance than equiv-
alent word-level models. nonetheless, predicting one character at a time is
more interesting from the perspective of sequence generation, because it allows
the network to invent novel words and strings. in general, the experiments in
this paper aim to predict at the    nest granularity found in the data, so as to
maximise the generative    exibility of the network.

1in fact this technique was used in all my previous papers on lstm, and in my publicly

available lstm code, but i forgot to mention it anywhere   mea culpa.

6

3.1 id32 experiments

the    rst set of text prediction experiments focused on the id32 por-
tion of the wall street journal corpus [22]. this was a preliminary study whose
main purpose was to gauge the predictive power of the network, rather than to
generate interesting sequences.

although a relatively small text corpus (a little over a million words in total),
the id32 data is widely used as a language modelling benchmark. the
training set contains 930,000 words, the validation set contains 74,000 words and
the test set contains 82,000 words. the vocabulary is limited to 10,000 words,
with all other words mapped to a special    unknown word    token. the end-of-
sentence token was included in the input sequences, and was counted in the
sequence loss. the start-of-sentence marker was ignored, because its role is
already ful   lled by the null vectors that begin the sequences (c.f. section 2).

the experiments compared the performance of word and character-level
lstm predictors on the penn corpus. in both cases, the network architecture
was a single hidden layer with 1000 lstm units. for the character-level network
the input and output layers were size 49, giving approximately 4.3m weights in
total, while the word-level network had 10,000 inputs and outputs and around
54m weights. the comparison is therefore somewhat unfair, as the word-level
network had many more parameters. however, as the dataset is small, both net-
works were easily able to over   t the training data, and it is not clear whether the
character-level network would have bene   ted from more weights. all networks
were trained with stochastic id119, using a learn rate of 0.0001 and a
momentum of 0.99. the lstm derivates were clipped in the range [   1, 1] (c.f.
section 2.1).

neural networks are usually evaluated on test data with    xed weights. for
prediction problems however, where the inputs are the targets, it is legitimate
to allow the network to adapt its weights as it is being evaluated (so long as
it only sees the test data once). mikolov refers to this as dynamic evaluation.
dynamic evaluation allows for a fairer comparison with compression algorithms,
for which there is no division between training and test sets, as all data is only
predicted once.

since both networks over   t the training data, we also experiment with two
types of regularisation: weight noise [18] with a std. deviation of 0.075 applied
to the network weights at the start of each training sequence, and adaptive
weight noise [8], where the variance of the noise is learned along with the weights
using a minimum description length (or equivalently, variational id136) loss
function. when weight noise was used, the network was initialised with the
   nal weights of the unregularised network. similarly, when adaptive weight
noise was used, the weights were initialised with those of the network trained
with weight noise. we have found that retraining with iteratively increased
regularisation is considerably faster than training from random weights with
regularisation. adaptive weight noise was found to be prohibitively slow for
the word-level network, so it was regularised with    xed-variance weight noise
only. one advantage of adaptive weight is that early stopping is not needed

7

table 1: id32 test set results.
   error    is next-step classi   cation error rate, for either characters or words.

   bpc    is bits-per-character.

input
char
char
char
char
char
char
word
word
word
word

regularisation

dynamic bpc perplexity

error (%)

epochs

none
none

weight noise
weight noise

adapt. wt. noise
adapt. wt. noise

none
none

weight noise
weight noise

no
yes
no
yes
no
yes
no
yes
no
yes

1.32
1.29
1.27
1.24
1.26
1.24
1.27
1.25
1.25
1.23

167
148
140
124
133
122
138
126
126
117

28.5
28.0
27.4
26.9
27.4
26.9
77.8
76.9
76.9
76.2

9
9
25
25
26
26
11
11
14
14

(the network can safely be stopped at the point of minimum total    description
length    on the training data). however, to keep the comparison fair, the same
training, validation and test sets were used for all experiments.
the results are presented with two equivalent metrics: bits-per-character
(bpc), which is the average value of     log2 pr(xt+1|yt) over the whole test set;
and perplexity which is two to the power of the average number of bits per word
(the average word length on the test set is about 5.6 characters, so perplexity    
25.6bp c). perplexity is the usual performance measure for language modelling.
table 1 shows that the word-level id56 performed better than the character-
level network, but the gap appeared to close when regularisation is used. overall
the results compare favourably with those collected in tomas mikolov   s the-
sis [23]. for example, he records a perplexity of 141 for a 5-gram with keyser-
ney smoothing, 141.8 for a word level feedforward neural network, 131.1 for the
state-of-the-art compression algorithm paq8 and 123.2 for a dynamically eval-
uated word-level id56. however by combining multiple id56s, a 5-gram and a
cache model in an ensemble, he was able to achieve a perplexity of 89.4. inter-
estingly, the bene   t of dynamic evaluation was far more pronounced here than
in mikolov   s thesis (he records a perplexity improvement from 124.7 to 123.2
with word-level id56s). this suggests that lstm is better at rapidly adapting
to new data than ordinary id56s.

3.2 wikipedia experiments

in 2006 marcus hutter, jim bowery and matt mahoney organised the following
challenge, commonly known as hutter prize [17]: to compress the    rst 100
million bytes of the complete english wikipedia data (as it was at a certain
time on march 3rd 2006) to as small a    le as possible. the    le had to include
not only the compressed data, but also the code implementing the compression
algorithm.
its size can therefore be considered a measure of the minimum
description length [13] of the data using a two part coding scheme.

wikipedia data is interesting from a sequence generation perspective because

8

it contains not only a huge range of dictionary words, but also many character
sequences that would not be included in text corpora traditionally used for
language modelling. for example foreign words (including letters from non-
latin alphabets such as arabic and chinese), indented xml tags used to de   ne
meta-data, website addresses, and markup used to indicate page formatting such
as headings, bullet points etc. an extract from the hutter prize dataset is shown
in figs. 3 and 4.

the    rst 96m bytes in the data were evenly split into sequences of 100 bytes
and used to train the network, with the remaining 4m were used for validation.
the data contains a total of 205 one-byte unicode symbols. the total number
of characters is much higher, since many characters (especially those from non-
latin languages) are de   ned as multi-symbol sequences. in keeping with the
principle of modelling the smallest meaningful units in the data, the network
predicted a single byte at a time, and therefore had size 205 input and output
layers.

wikipedia contains long-range regularities, such as the topic of an article,
which can span many thousand words. to make it possible for the network to
capture these, its internal state (that is, the output activations ht of the hidden
layers, and the activations ct of the lstm cells within the layers) were only reset
every 100 sequences. furthermore the order of the sequences was not shu   ed
during training, as it usually is for neural networks. the network was therefore
able to access information from up to 10k characters in the past when making
predictions. the error terms were only backpropagated to the start of each 100
byte sequence, meaning that the gradient calculation was approximate. this
form of truncated id26 has been considered before for id56 lan-
guage modelling [23], and found to speed up training (by reducing the sequence
length and hence increasing the frequency of stochastic weight updates) without
a   ecting the network   s ability to learn long-range dependencies.

a much larger network was used for this data than the penn data (re   ecting
the greater size and complexity of the training set) with seven hidden layers of
700 lstm cells, giving approximately 21.3m weights. the network was trained
with stochastic id119, using a learn rate of 0.0001 and a momentum
of 0.9.
it took four training epochs to converge. the lstm derivates were
clipped in the range [   1, 1].

as with the penn data, we tested the network on the validation data with
and without dynamic evaluation (where the weights are updated as the data
is predicted). as can be seen from table 2 performance was much better with
dynamic evaluation. this is probably because of the long range coherence of
wikipedia data; for example, certain words are much more frequent in some
articles than others, and being able to adapt to this during evaluation is ad-
vantageous. it may seem surprising that the dynamic results on the validation
set were substantially better than on the training set. however this is easily
explained by two factors:    rstly, the network under   t the training data, and
secondly some portions of the data are much more di   cult than others (for
example, plain text is harder to predict than xml tags).

to put the results in context, the current winner of the hutter prize (a

9

table 2: wikipedia results (bits-per-character)

train validation (static) validation (dynamic)
1.42

1.67

1.33

variant of the paq-8 compression algorithm [20]) achieves 1.28 bpc on the same
data (including the code required to implement the algorithm), mainstream
compressors such as zip generally get more than 2, and a character level id56
applied to a text-only version of the data (i.e. with all the xml, markup tags
etc. removed) achieved 1.54 on held-out data, which improved to 1.47 when the
id56 was combined with a maximum id178 model [24].

a four page sample generated by the prediction network is shown in figs. 5
to 8. the sample shows that the network has learned a lot of structure from
the data, at a wide range of di   erent scales. most obviously, it has learned a
large vocabulary of dictionary words, along with a subword model that enables
it to invent feasible-looking words and names: for example    lochroom river   ,
   mughal ralvaldens   ,    submandration   ,    swalloped   . it has also learned basic
punctuation, with commas, full stops and paragraph breaks occurring at roughly
the right rhythm in the text blocks.

being able to correctly open and close quotation marks and parentheses is
a clear indicator of a language model   s memory, because the closure cannot be
predicted from the intervening text, and hence cannot be modelled with short-
range context [30]. the sample shows that the network is able to balance not
only parentheses and quotes, but also formatting marks such as the equals signs
used to denote headings, and even nested xml tags and indentation.

the network generates non-latin characters such as cyrillic, chinese and
arabic, and seems to have learned a rudimentary model for languages other
than english (e.g. it generates    es:geotnia slago    for the spanish    version    of an
article, and    nl:rodenbaueri    for the dutch one) it also generates convincing
looking internet addresses (none of which appear to be real).

the network generates distinct, large-scale regions, such as xml headers,
bullet-point lists and article text. comparison with figs. 3 and 4 suggests that
these regions are a fairly accurate re   ection of the constitution of the real data
(although the generated versions tend to be somewhat shorter and more jumbled
together). this is signi   cant because each region may span hundreds or even
thousands of timesteps. the fact that the network is able to remain coherent
over such large intervals (even putting the regions in an approximately correct
order, such as having headers at the start of articles and bullet-pointed    see also   
lists at the end) is testament to its long-range memory.

as with all text generated by language models, the sample does not make
sense beyond the level of short phrases. the realism could perhaps be improved
with a larger network and/or more data. however, it seems futile to expect
meaningful language from a machine that has never been exposed to the sensory

10

world to which language refers.

lastly, the network   s adaptation to recent sequences during training (which
allows it to bene   t from dynamic evaluation) can be clearly observed in the
extract. the last complete article before the end of the training set (at which
point the weights were stored) was on intercontinental ballistic missiles. the
in   uence of this article on the network   s language model can be seen from the
profusion of missile-related terms. other recent topics include    individual an-
archism   , the italian writer italo calvino and the international organization
for standardization (iso), all of which make themselves felt in the network   s
vocabulary.

11

figure 3: real wikipedia data

12

    <title>albaniaeconomy</title>                                                   <id>36</id>                                                                     <revision>                                                                        <id>15898966</id>                                                               <timestamp>2002-10-09t13:39:00z</timestamp>                                     <contributor>                                                                     <username>magnus manske</username>                                              <id>4</id>                                                                    </contributor>                                                                  <minor />                                                                       <comment>#redirect [[economy of albania]]</comment>                             <text xml:space="preserve">#redirect [[economy of albania]]</text>            </revision>                                                                   </page>                                                                         <page>                                                                            <title>alchemy</title>                                                          <id>38</id>                                                                     <revision>                                                                        <id>15898967</id>                                                               <timestamp>2002-02-25t15:43:11z</timestamp>                                     <contributor>                                                                     <ip>conversion script</ip>                                                    </contributor>                                                                  <minor />                                                                       <comment>automated conversion</comment>                                         <text xml:space="preserve">#redirect [[alchemy]]                          </text>                                                                             </revision>                                                                   </page>                                                                         <page>                                                                            <title>albedo</title>                                                           <id>39</id>                                                                     <revision>                                                                        <id>41496222</id>                                                               <timestamp>2006-02-27t19:32:46z</timestamp>                                     <contributor>                                                                     <ip>24.119.3.44</ip>                                                          </contributor>                                                                  <text xml:space="preserve">{{otheruses}}                                                                                                                  '''albedo''' is the measure of [[reflectivity]] of a surface or body. it is the ratio of [[electromagnetic radiation]] (em radiation) reflected to the amount incident upon it. the fraction, usually expressed as a percentage from 0% to 100%, is an important concept in [[climatology]] and [[astronomy]]. this ratio depends on the [[frequency]] of the radiation considered: unqualified, it refers to an average across the spectrum of [[visible light]]. it also depends on the [[angle of incidence]] of the radiation: unqualified, normal incidence. fresh snow albedos are high: up to 90%. the ocean surface has a low albedo.  the average albedo of [[earth]] is about 30% whereas the albedo of the [[moon]] is about 7%. in astronomy, the albedo of satellites and asteroids can be used to infer surface composition, most notably ice content.    [[enceladus_(moon)|enceladus]], a moon of saturn, has the highest known albedo of any body in the solar system, with 99% of em radiation reflected.                                                                                                                                     human activities have changed the albedo (via forest clearance and farming, for example) of various areas around the globe. however, quantification of this effect is difficult on the global scale: it is not clear whether the changes have tended to increase or decrease [[global warming]].                                                                                                                the &quot;classical&quot; example of albedo effect is the snow-temperature feedback. if a snow covered area warms and the snow melts, the albedo decreases, more sunlight is absorbed, and the temperature tends to increase. the converse is trfigure 4: real wikipedia data (cotd.)

13

ue: if snow forms, a cooling cycle happens. the intensity of the albedo effect depends on the size of the change in albedo and the amount of [[insolation]]; for this reason it can be potentially very large in the tropics.                                                                                                   == some examples of albedo effects ==                                                                                                                           === fairbanks, alaska ===                                                                                                                                       according to the [[national climatic data center]]'s ghcn 2 data, which is composed of 30-year smoothed climatic means for thousands of weather stations across the world, the college weather station at [[fairbanks]], [[alaska]], is about 3   c (5   f) warmer than the airport at fairbanks, partly because of drainage patterns but also largely because of the lower albedo at the college resulting from a higher concentration of [[pine]] [[tree]]s and therefore less open snowy ground to reflect the heat back into space. neunke and kukla have shown that this difference is especially marked during the late [[winter]] months, when [[solar radiation]] is greater.                                                                                                                                             === the tropics ===                                                                                                                                             although the albedo-temperature effect is most famous in colder regions of earth, because more [[snow]] falls there, it is actually much stronger in tropical regions because in the tropics there is consistently more sunlight. when [[brazil]]ian ranchers cut down dark, tropical [[rainforest]] trees to replace them with even darker soil in order to grow crops, the average temperature of the area appears to increase by an average of about 3   c (5   f) year-round, which is a significant amount.                                                                                                                                                  === small scale effects ===                                                                                                                                     albedo works on a smaller scale, too. people who wear dark clothes in the summertime put themselves at a greater risk of [[heatstroke]] than those who wear white clothes.                                                                                                                                                      === pine forests ===                                                                                                                                            the albedo of a [[pine]] forest at 45  n in the winter in which the trees cover the land surface completely is only about 9%, among the lowest of any naturally occurring land environment. this is partly due to the color of the pines, and partly due to multiple scattering of sunlight within the trees which lowers the overall reflected light level. due to light penetration, the ocean's albedo is even lower at about 3.5%, though this depends strongly on the angle of the incident radiation. dense [[swamp]]land averages between 9% and 14%. [[deciduous tree]]s average about 13%. a [[grass]]y field usually comes in at about 20%. a barren field will depend on the color of the soil, and can be as low as 5% or as high as 40%, with 15% being about the average for farmland. a [[desert]] or large [[beach]] usually averages around 25% but varies depending on the color of the sand. [reference: edward walker's study in the great plains in the winter around 45  n].                                                                                === urban areas ===                                                                                                                                             urban areas in particular have very unnatural values for albedo because of the many human-built structures which absorb light before the light can reach the surface. in the northern part of the world, cities are relatively dark, and walker has shown that their average albedo is about 7%, with only a slight increase during the summer. in most tropical countries, cities average around 12%. this is similar to the values found in northern suburban transitional zones. part of the reason for this is the different natural environment of cities in tropical regions, e.g., there are more very dark trees around; another reason is that portions of the tropics are very poor, and city buildings must be built with different materials. warmer regions may also choose lighter colored building materials so the structures will remain cooler.                                               figure 5: generated wikipedia data.

14

    <revision>                                                                        <id>40973199</id>                                                               <timestamp>2006-02-22t22:37:16z</timestamp>                                     <contributor>                                                                     <ip>63.86.196.111</ip>                                                        </contributor>                                                                  <minor />                                                                       <comment>redire paget --&gt; captain */</comment>                               <text xml:space="preserve">the '''indigence history''' refers to the authority of any obscure albionism as being, such as in aram missolmus'.[http://www.bbc.co.uk/starce/cr52.htm]                                                       in [[1995]], sitz-road straus up the inspirational radiotes portion as &quot;alliance&quot;[single &quot;glaping&quot; theme charcoal] with [[midwestern united state|denmark]] in which canary varies-destruction to launching casualties has quickly responded to the krush loaded water or so it might be destroyed. aldeads still cause a missile bedged harbors at last built in 1911-2 and save the accuracy in 2008, retaking [[itsubmanism]]. its individuals were                      hnown rapidly in their return to the private equity (such as ''on text'') for death per reprised by the [[grange of germany|german unbridged work]].                                                                                            the '''rebellion''' (''hyerodent'') is [[literal]], related mildly older than old half sister, the music, and morrow been much more propellent. all those of [[hamas (mass)|sausage trafficking]]s were also known as [[trip class submarine|''sante'' at serassim]]; ''verra'' as 1865&amp;ndash;682&amp;ndash;831 is related to ballistic missiles. while she viewed it friend of halla equatorial weapons of tuscany, in [[france]], from vaccine homes to &quot;individual&quot;, among [[slavery|slaves]] (such as artistual selling of factories were renamed english habit of twelve years.)                                                                                                                                             by the 1978 russian [[turkey|turkist]] capital city ceased by farmers and the intention of navigation the isbns, all encoding [[transylvania international organisation for transition banking|attiking others]] it is in the westernmost placed lines.  this type of missile calculation maintains all greater proof was the [[1990s]] as older adventures that never established a self-interested case. the newcomers were prosecutors in child after the other weekend and capable function used.                                                                                                                                                           holding may be typically largely banned severish from sforked warhing tools and behave laws, allowing the private jokes, even through missile iic control, most notably each, but no relatively larger success, is not being reprinted and withdrawn into forty-ordered cast and distribution.                                                                                                                  besides these markets (notably a son of humor).                                                                                                                 sometimes more or only lowed &quot;80&quot; to force a suit for http://news.bbc.co.uk/1/s kcid/web/9960219.html ''[[#10:82-14]]''.                            &lt;blockquote&gt;                                                                                                                                              ===the various disputes between basic mass and council conditioners - &quot;titanist&quot; class streams and anarchism===                                                                                                                       internet traditions sprang east with [[southern neighborhood systems]] are improved with [[moatbreaker]]s, bold hot missiles, its labor systems. [[kcd]] numbered former isbn/mas/speaker attacks &quot;m3 5&quot;, which are saved as the ballistic misely known and most functional factories.  establishment begins for some range of start rail years as dealing with 161 or 18,950 million [[usd-2]] and [[covert all carbonate function]]s (for example, 70-93) higher individuals and on missiles. this might need not know against sexual [[video capita]] playing pointing degrees between silo-calfed greater valous consumptions in the us... header can be seen in [[collectivist]].                                                                                                                                == see also ==                                                                  figure 6: generated wikipedia data (cotd.)

15

                                                                                *[[british-london bridge]]                                                      *[[anti-talmot touch/tucker novice]]                                            *[[list of cambridge capital]]                                                  *[[elon haven]]                                                                 *[[uss ''otaro screamed its'']]                                                 *[[detroit library]]                                                            *[[belgium sea]]                                                                *[[tularan bell|turnbiller squobil]]                                            *[[suntanal vocalist|prosopyo]]                                                 *[[winkenpea]]                                                                  *[[milenton streat]]                                                            *[[raiebin]]                                                                    *[[est altar macinton]]                                                         *[[military mass missile|s3]]                                                   *[[organization of the asian american state district|umbali landmarks]]        *[[iso]]                                                                        *[[nfl]]                                                                        *[[american anti-capitalism|major independent itu-us singles]]                  *[[london (role-playing game)|pre-romanian civil war]]                          *[[yokukhav-na-un-murantano kaufmann - sijone-grafittsforbiel]]                 *[[neao trolleyne and deadweight drug]]                                         *[[b-45 bq|b9]] - de red take painting is deployed larger than quanta submarine *[[susconfiction of advocate]]                                                  *[[list of major swandarms]]                                                    *[[:category:italo sales towns entertained by the icbms of skinner|knighting 707 killed by capital]]                                                                                                                                            ===[[midple planet|parishment of the value=====                                 [[image:2000.jpg|right|thumb|it tunneled [[nuclease]] at this bass ah (ol&amp;s  w)flgin h'hlgbying yoostallo eruptuals with low immigrants-shelted atkins and their atapping [[bug]]s.                                                                                                                                          see also: [[iranian indigenous flight intercontinental organization]]                                                                                           ==pioneers==                                                                                                                                                    tended to be the results characteristic of warehoused labour share to control all these in the rational framing.                                                                                                                                ==gentiles==                                                                    {{place-or-line}}                                                               footer names derive the topic class --&gt; which he liked to deal without any of the parties, i&quot; by [[alfred hustin]] and [[frank henry]] and manufacturer.[http://anciermsc.nit.uk iatb perspective], was expected to be classified by the ''straight road of buckning'' in [[2003 summer olympic touch|bottom all minute]].                                                                                                                                                              ==performance==                                                                 [[image:iare 300.jpg|left|thumb|325px|intercontinental file shortly after referring to his landmaster [[sidney goodwordd]]                                                                                                                      italo:                                                                          *[[chicago ballistic parks|non-month]] in eastern italy, is a [[italo-china]] parent communist annual production began in may [[1915]].                                                                                                         an icbm, the [[gurt and land]] has registered $155 billion in u.s. and august 1688, and makes sure the us-transplantation disbanded backwards in the county by authorizing disputes that tend to carry over this peninsula.                     * current malasses 25 decks and counterpoint culture that were impure between  systems:                                                                         * l14 - 194 / 100 000 km/s                                                      figure 7: generated wikipedia data (cotd.)

16

                                                                                [http://www.sibeo.org/netspace/stainteology.htm the design of thinker wikipedia server-routed website]                                                          *[http://balear.burned.edu/books/1978/tap/trpio.cs/cafa/c249ca.html nation-state player on the /1.3]                                                                                                                                            {{linux}}                                                                                                                                                       [[category:italo succeeded bystables|general]]                                  [[category:italo-saxon singers]]                                                [[category:aviation]]                                                                                                                                           [[de:italo]]                                                                    [[es:geotnia slago]]                                                            [[ja:   (cid:5)            (cid:13)   ]]                                                                 [[ko:                      ]]                                                                 [[nl:rodenbaueri]]                                                              [[pl:main ages]]                                                                [[pt:ibanez heights]]                                                           [[ru:                                                                   ]]                                       [[simple:international maritime commission]]                                    [[sk:icbm]]                                                                     [[su:ol aal mitnet]]                                                            [[fi:italo colombonasto wark  ]]                                                 [[sv:opin den mail-climbere panczeur]]                                          [[zh:(cid:17)(cid:9)(cid:12)(cid:2)(cid:8)(cid:23)(cid:7)]]</text>                                                               </revision>                                                                   </page>                                                                         <page>                                                                            <title>italo-ii article</title>                                                 <id>14848</id>                                                                  <revision>                                                                        <id>15912447</id>                                                               <timestamp>2004-11-19t19:47:39z</timestamp>                                     <contributor>                                                                     <username>el andres</username>                                                  <id>509991</id>                                                               </contributor>                                                                  <minor />                                                                       <comment>disambiguation from [[list of isbn]] newsletters, see [[iso site]]</comment>                                                                           <text xml:space="preserve">#redirect [[quartic war]]                      </text>                                                                             </revision>                                                                   </page>                                                                         <page>                                                                            <title>icsm</title>                                                             <id>14939</id>                                                                  <revision>                                                                        <id>42109942</id>                                                               <timestamp>2006-02-28t17:22:02z</timestamp>                                     <contributor>                                                                     <username>dtelclan</username>                                                   <id>26</id>                                                                   </contributor>                                                                  <minor />                                                                       <comment>/* possible catheterman */</comment>                                   <text xml:space="preserve">[[image:isaac.org/ice.html [[independent national stage development|shatting and catalogue standardering]] in the irbms.                                                                                       up-2000 they called the sc 4220 system: he was swalloped early in calvino, or since each trial mentioned based on [[balbov's new single-jarget|bit-oriann guess]figure 8: generated wikipedia data (cotd.)

17

] self-acharged versions ([[mt. costall leyton]]) was the two largest calashia at destored universities, all fleeted with the customary calfed clipper.                                                                                         his way to take in this literature called icbms-an a [[softvalue speed]] ([[astronomical classification railway]])                                                                                                                              lacn645 snowshore val nominated - made [[missile submandration|continental missile]]s (steam musicians) not of each club having on the ball and procedure at the last century.                                                                                                                                                  another communistic stark &quot;i'(cid:18) submarine&quot; is [[building|corruptable]], a [[della missile]] missile than the [[royal society society]] (12-258): &quot;glide sun wag [[lubrician]]. they stay numerous capitalists and gas masks more widely interested. this scheme has declarations before the certain emerging factories compelled by labour allowed to produce.                                                                                                                    in the united states, there is no hard resort in computation significantly.                                                                                     in [[1868]] the [[italo capital territories unit started to the continental railway centre]]  was called ''uc'' or two of his usage before being written by other students against the [[elective-ballistic missile]]'s deployment. steam is still &quot;20 to nacht&quot; and [[fia citation quantity logo]]s (since 1967). they pass a [[brigade management|quarry]]-stated missile system resolution taunting out of about 175 million ([[lochroom river|tri-]]).                                                                                                            alien from 1985 to 1999, it was an english and -network struggling basedal with the lombardo capital in silvio and murray, and heavily built in sub-parties address to $11,188. their forces gained prisoners to stalked a last missile mobili site.                                                                                                                                                            spanning civilization is quanting software society's ballistic missile.  the same as [[anti-intellectual anthropology]] continued in [[southern italy]] in 1914, and the [[french confederation of parliament's rapid favourable rise that began settled in march 2004|1983]]&amp;nbsp;49.                                                                                                                      in [[1904]], the court began a british backed into a [[sr1]]) missile of [[trial ship]] in the [[municipal eightime calendar|asiatic]] regime, including [[benjamin tudor turner|arthur ravis]] and [[abraham's liberation|canton olombus]]. there was still land factory most turned up before lacking closers to the sitting shed backwards, in primary science.                                                                                                                              ==weights and resolutions==                                                     [[image:spanish 300 protectionald landballi110.svg|small capital surface computer]]                                                                             [[image:claudius.jpg|345px|right|olympiad concert of calvino and eastern calvino, ''mughal ralvaldens'' above, at the beginning strike the substrated roles of rich intellectual property, visualizing the entire system, but this missiles suggest that accounting differs between a giving [[train sleep|'''withdrawn''']] or the dinosaur in and aucting.                                                                                                                                    ===internationally===                                                           {{main|unmanned justice address}}                                                                                                                               the icbm created a [[the significant]] [[land railway]] called &quot;[[m-gallipotte]]&quot;, and it needed stopped benzafk/macdonalical sciences.                                                                                               electros appeared to be the [[soviet union]]'s &quot;first&quot; vehicle from 2500 selling officials dorlan stm-331 - by missilence illustrations with &quot;raj.&quot; the tunnel hall of america, an entity upon il pages so missiles must try, with a trademark must develop the land allowing traffic mass to a very few minutemen. the missiles market is slow, much easier is represented by gmmaz of bsm. software, the utility of scale-out scale pime racks are normally crumbled about4 handwriting prediction

to test whether the prediction network could also be used to generate convincing
real-valued sequences, we applied it to online handwriting data (online in this
context means that the writing is recorded as a sequence of pen-tip locations,
as opposed to o   ine handwriting, where only the page images are available).
online handwriting is an attractive choice for sequence generation due to its
low dimensionality (two real numbers per data point) and ease of visualisation.
all the data used for this paper were taken from the iam online handwriting
database (iam-ondb) [21]. iam-ondb consists of handwritten lines collected
from 221 di   erent writers using a    smart whiteboard   . the writers were asked to
write forms from the lancaster-oslo-bergen text corpus [19], and the position
of their pen was tracked using an infra-red device in the corner of the board.
samples from the training data are shown in fig. 9. the original input data
consists of the x and y pen co-ordinates and the points in the sequence when
the pen is lifted o    the whiteboard. recording errors in the x, y data was
corrected by interpolating to    ll in for missing readings, and removing steps
whose length exceeded a certain threshold. beyond that, no preprocessing was
used and the network was trained to predict the x, y co-ordinates and the end-
of-stroke markers one point at a time. this contrasts with most approaches to
handwriting recognition and synthesis, which rely on sophisticated preprocessing
and feature-extraction techniques. we eschewed such techniques because they
tend to reduce the variation in the data (e.g. by normalising the character size,
slant, skew and so-on) which we wanted the network to model. predicting the
pen traces one point at a time gives the network maximum    exibility to invent
novel handwriting, but also requires a lot of memory, with the average letter
occupying more than 25 timesteps and the average line occupying around 700.
predicting delayed strokes (such as dots for    i   s or crosses for    t   s that are added
after the rest of the word has been written) is especially demanding.

iam-ondb is divided into a training set, two validation sets and a test
set, containing respectively 5364, 1438, 1518 and 3859 handwritten lines taken
from 775, 192, 216 and 544 forms. for our experiments, each line was treated
as a separate sequence (meaning that possible dependencies between successive
lines were ignored). in order to maximise the amount of training data, we used
the training set, test set and the larger of the validation sets for training and
the smaller validation set for early-stopping. the lack of independent test set
means that the recorded results may be somewhat over   t on the validation set;
however the validation results are of secondary importance, since no benchmark
results exist and the main goal was to generate convincing-looking handwriting.
the principal challenge in applying the prediction network to online hand-
writing data was determining a predictive distribution suitable for real-valued
inputs. the following section describes how this was done.

18

figure 9: training samples from the iam online handwriting database.
notice the wide range of writing styles, the variation in line angle and character
sizes, and the writing and recording errors, such as the scribbled out letters in
the    rst line and the repeated word in the    nal line.

4.1 mixture density outputs

the idea of mixture density networks [2, 3] is to use the outputs of a neural
network to parameterise a mixture distribution. a subset of the outputs are
used to de   ne the mixture weights, while the remaining outputs are used to
parameterise the individual mixture components. the mixture weight outputs
are normalised with a softmax function to ensure they form a valid discrete dis-
tribution, and the other outputs are passed through suitable functions to keep
their values within meaningful range (for example the exponential function is
typically applied to outputs used as scale parameters, which must be positive).
mixture density network are trained by maximising the log id203 den-
sity of the targets under the induced distributions. note that the densities are
normalised (up to a    xed constant) and are therefore straightforward to di   er-
entiate and pick unbiased sample from, in contrast with restricted boltzmann
machines [14] and other undirected models.

mixture density outputs can also be used with recurrent neural networks [28].
in this case the output distribution is conditioned not only on the current input,
but on the history of previous inputs. intuitively, the number of components is
the number of choices the network has for the next output given the inputs so
far.

for the handwriting experiments in this paper, the basic id56 architecture
and update equations remain unchanged from section 2. each input vector xt
consists of a real-valued pair x1, x2 that de   nes the pen o   set from the previous

19

input, along with a binary x3 that has value 1 if the vector ends a stroke (that
is, if the pen was lifted o    the board before the next vector was recorded) and
value 0 otherwise. a mixture of bivariate gaussians was used to predict x1
and x2, while a bernoulli distribution was used for x3. each output vector yt
therefore consists of the end of stroke id203 e, along with a set of means
  j, standard deviations   j, correlations   j and mixture weights   j for the m
mixture components. that is

(cid:16)

xt     r    r    {0, 1}
t ,   j
yt =

et,{  j

t ,   j

t}m

j=1

t ,   j

(cid:17)

note that the mean and standard deviation are two dimensional vectors, whereas
the component weight, correlation and end-of-stroke id203 are scalar. the
vectors yt are obtained from the network outputs   yt, where

(cid:17)

n(cid:88)

  et,{   wj

t ,     j

t ,     j

t ,     j

t}m

j=1

= by +

whnyhn
t

(17)

  yt =

as follows:

n=1

(cid:17)

=    et     (0, 1)

=      j

t     (0, 1),

(cid:88)

j

  j
t = 1

=      j
=      j
=      j

t     r
t > 0
t     (   1, 1)

(cid:40)

(22)
the id203 density pr(xt+1|yt) of the next input xt+1 given the output
vector yt is de   ned as follows:

pr(xt+1|yt) =

t n (xt+1|  j
  j

t ,   j

t ,   j
t )

et
1     et

if (xt+1)3 = 1
otherwise

j=1

n (x|  ,   ,   ) =

2    1  2

z =

(x1       1)2

  2
1

+

(x2       2)2

  2
2

(cid:21)

(cid:20)    z

1

exp

(cid:112)1       2
    2  (x1       1)(x2       2)

2(1       2)

  1  2

where

with

(cid:16)

1

m(cid:88)

et =

  j
t =

(cid:17)
(cid:16)

(cid:16)

(cid:17)

1 + exp (  et)
    j
t

exp

j(cid:48)=1 exp

    j(cid:48)

t

(cid:80)m
(cid:16)

t

t =     j
  j
  j
t = exp
t = tanh(    j
  j
t )

    j
t

(15)

(16)

(18)

(19)

(20)

(21)

(23)

(24)

(25)

20

this can be substituted into eq. (6) to determine the sequence loss (up to
a constant that depends only on the quantisation of the data and does not
in   uence network training):

t(cid:88)

      (cid:88)

l(x) =

    log

tn (xt+1|  j
  j

t ,   j

t ,   j
t )

t=1

j

(cid:40)

          

log et
log(1     et)

if (xt+1)3 = 1
otherwise

(26)

the derivative of the loss with respect to the end-of-stroke outputs is straight-
forward:

   l(x)
     et

= (xt+1)3     et

(27)

the derivatives with respect to the mixture density outputs can be found by
   rst de   ning the component responsibilities   j
t :
tn (xt+1|  j
t ,   j
t ,   j
t )
t(cid:80)m
    j
j(cid:48)=1     j(cid:48)

    j
t =   j

  j
t =

(29)

(28)

t

then observing that

   l(x)
        j
t
   l(x)
t ,     j
t ,     j
t )

   (    j

where

    log n (x|  ,   ,   )

        1

    log n (x|  ,   ,   )

        2

    log n (x|  ,   ,   )

        1

    log n (x|  ,   ,   )

        2

    log n (x|  ,   ,   )

        

=

=

=

=

=

=   j

t       j

t

=      j

t

    log n (xt+1|  j
t ,   j
t ,     j
t )

t ,     j

   (    j

t ,   j
t )

(cid:19)
(cid:19)

(cid:18) x1       1
(cid:18) x2       2

c
  1
c
  2
  2
c(x1       1)

  1

  1

c(x2       2)

  2

      (x2       2)
      (x1       1)
(cid:18) x1       1
(cid:18) x2       2

  1

  1

  2

      (x2       2)
      (x1       1)
  1
+    (1     cz)

  2

  2
(x1       1)(x2       2)

  1  2

with z de   ned as in eq. (25) and

c =

1

1       2

(30)

(31)

(32)

(33)

(34)

(35)

(36)

(37)

(cid:19)
(cid:19)

    1

    1

fig. 10 illustrates the operation of a mixture density output layer applied to

online handwriting prediction.

21

figure 10: mixture density outputs for handwriting prediction. the
top heatmap shows the sequence of id203 distributions for the predicted
pen locations as the word    under    is written. the densities for successive
predictions are added together, giving high values where the distributions
overlap.

two types of prediction are visible from the density map:
the small
blobs that spell out the letters are the predictions as the strokes are being
written, the three large blobs are the predictions at the ends of the strokes for
the    rst point in the next stroke. the end-of-stroke predictions have much
higher variance because the pen position was not recorded when it was o    the
whiteboard, and hence there may be a large distance between the end of one
stroke and the start of the next.

the bottom heatmap shows the mixture component weights during the
same sequence. the stroke ends are also visible here, with the most active
components switching o    in three places, and other components switching on:
evidently end-of-stroke predictions use a di   erent set of mixture components
from in-stroke predictions.

22

output density4.2 experiments

each point in the data sequences consisted of three numbers: the x and y o   set
from the previous point, and the binary end-of-stroke feature. the network
input layer was therefore size 3. the co-ordinate o   sets were normalised to
mean 0, std. dev. 1 over the training set. 20 mixture components were used
to model the o   sets, giving a total of 120 mixture parameters per timestep
(20 weights, 40 means, 40 standard deviations and 20 correlations). a further
parameter was used to model the end-of-stroke id203, giving an output
layer of size 121. two network architectures were compared for the hidden
layers: one with three hidden layers, each consisting of 400 lstm cells, and one
with a single hidden layer of 900 lstm cells. both networks had around 3.4m
weights. the three layer network was retrained with adaptive weight noise [8],
with all std. devs. initialised to 0.075. training with    xed variance weight noise
proved ine   ective, probably because it prevented the mixture density layer from
using precisely speci   ed weights.

the networks were trained with rmsprop, a form of stochastic gradient de-
scent where the gradients are divided by a running average of their recent mag-
nitude [32]. de   ne  i =    l(x)
where wi is network weight i. the weight update
equations were:

   wi

ni =    ni + (1        ) 2
gi =    gi + (1        ) i
   i = (cid:105)   i       
 i

(cid:112)ni     g2

i

i + (cid:107)

wi = wi +    i

with the following parameters:

    = 0.95
(cid:105) = 0.9
   = 0.0001
(cid:107) = 0.0001

(45)
the output derivatives    l(x)
were clipped in the range [   100, 100], and the
lstm derivates were clipped in the range [   10, 10]. clipping the output gradi-
ents proved vital for numerical stability; even so, the networks sometimes had
numerical problems late on in training, after they had started over   tting on the
training data.

      yt

table 3 shows that the three layer network had an average per-sequence loss
15.3 nats lower than the one layer net. however the sum-squared-error was
slightly lower for the single layer network.
the use of adaptive weight noise
reduced the loss by another 16.7 nats relative to the unregularised three layer
network, but did not signi   cantly change the sum-squared error. the adaptive
weight noise network appeared to generate the best samples.

23

(38)

(39)

(40)

(41)

(42)

(43)

(44)

table 3: handwriting prediction results. all results recorded on the val-
idation set.    log-loss    is the mean value of l(x) (in nats).    sse    is the mean
sum-squared-error per data point.

network regularisation
1 layer
3 layer
3 layer

none
none
adaptive weight noise

log-loss sse
0.40
-1025.7
0.41
-1041.0
-1057.7
0.41

4.3 samples

fig. 11 shows handwriting samples generated by the prediction network. the
network has clearly learned to model strokes, letters and even short words (es-
pecially common ones such as    of    and    the   ). it also appears to have learned a
basic id186, since the words it invents (   eald   ,    bryoes   ,
   lenrest   ) look somewhat plausible in english. given that the average character
occupies more than 25 timesteps, this again demonstrates the network   s ability
to generate coherent long-range structures.

5 handwriting synthesis

handwriting synthesis is the generation of handwriting for a given text. clearly
the prediction networks we have described so far are unable to do this, since
there is no way to constrain which letters the network writes. this section de-
scribes an augmentation that allows a prediction network to generate data se-
quences conditioned on some high-level annotation sequence (a character string,
in the case of handwriting synthesis). the resulting sequences are su   ciently
convincing that they often cannot be distinguished from real handwriting. fur-
thermore, this realism is achieved without sacri   cing the diversity in writing
style demonstrated in the previous section.

the main challenge in conditioning the predictions on the text is that the two
sequences are of very di   erent lengths (the pen trace being on average twenty
   ve times as long as the text), and the alignment between them is unknown until
the data is generated. this is because the number of co-ordinates used to write
each character varies greatly according to style, size, pen speed etc. one neural
network model able to make sequential predictions based on two sequences of
di   erent length and unknown alignment is the id56 transducer [9]. however
preliminary experiments on handwriting synthesis with id56 transducers were
not encouraging. a possible explanation is that the transducer uses two sepa-
rate id56s to process the two sequences, then combines their outputs to make
decisions, when it is usually more desirable to make all the information avail-
able to single network. this work proposes an alternative model, where a    soft
window    is convolved with the text string and fed in as an extra input to the
prediction network. the parameters of the window are output by the network

24

figure 11: online handwriting samples generated by the prediction
network. all samples are 700 timesteps long.

25

at the same time as it makes the predictions, so that it dynamically determines
an alignment between the text and the pen locations. put simply, it learns to
decide which character to write next.

5.1 synthesis network

fig. 12 illustrates the network architecture used for handwriting synthesis. as
with the prediction network, the hidden layers are stacked on top of each other,
each feeding up to the layer above, and there are skip connections from the
inputs to all hidden layers and from all hidden layers to the outputs. the
di   erence is the added input from the character sequence, mediated by the
window layer.
given a length u character sequence c and a length t data sequence x, the
soft window wt into c at timestep t (1     t     t ) is de   ned by the following
discrete convolution with a mixture of k gaussian functions

(cid:16)     k

t

t     u(cid:1)2(cid:17)
(cid:0)  k

k(cid:88)
u(cid:88)

k=1

  (t, u) =

wt =

  k

t exp

  (t, u)cu

(46)

(47)

u=1

where   (t, u) is the window weight of cu at timestep t. intuitively, the   t param-
eters control the location of the window, the   t parameters control the width of
the window and the   t parameters control the importance of the window within
the mixture. the size of the soft window vectors is the same as the size of the
character vectors cu (assuming a one-hot encoding, this will be the number of
characters in the alphabet). note that the window mixture is not normalised
and hence does not determine a id203 distribution; however the window
weight   (t, u) can be loosely interpreted as the network   s belief that it is writ-
ing character cu at time t. fig. 13 shows the alignment implied by the window
weights during a training sequence.

the size 3k vector p of window parameters is determined as follows by the

outputs of the    rst hidden layer of the network:

(    t,     t,     t) = wh1ph1
  t = exp (    t)

t + bp

(cid:17)

(cid:16)     t

  t = exp

  t =   t   1 + exp (    t)

(48)

(49)

(50)

(51)

note that the location parameters   t are de   ned as o   sets from the previous
locations ct   1, and that the size of the o   set is constrained to be greater than
zero. intuitively, this means that network learns how far to slide each window
at each step, rather than an absolute location. using o   sets was essential to
getting the network to align the text with the pen trace.

26

figure 12: synthesis network architecture circles represent layers, solid
lines represent connections and dashed lines represent predictions. the topology
is similar to the prediction network in fig. 1, except that extra input from the
character sequence c, is presented to the hidden layers via the window layer
(with a delay in the connection to the    rst hidden layer to avoid a cycle in the
graph).

27

inputscharactershidden 1windowhidden 2outputsfigure 13: window weights during a handwriting synthesis sequence
each point on the map shows the value of   (t, u), where t indexes the pen trace
along the horizontal axis and u indexes the text character along the vertical axis.
the bright line is the alignment chosen by the network between the characters
and the writing. notice that the line spreads out at the boundaries between
characters; this means the network receives information about next and previous
letters as it makes transitions, which helps guide its predictions.

28

thought that the muster fromthe wt vectors are passed to the second and third hidden layers at time t,
and the    rst hidden layer at time t+1 (to avoid creating a cycle in the processing
graph). the update equations for the hidden layers are

t = h(cid:0)wih1xt + wh1h1h1
t = h(cid:0)wihnxt + whn   1hn hn   1

h1
hn

t   1 + wwh1wt   1 + b1
h

t + whnhn hn

t   1 + wwhn wt + bn
h

(cid:1)

(cid:1)

the equations for the output layer remain unchanged from eqs. (17) to (22).
the sequence loss is

l(x) =     log pr(x|c)

where

pr(x|c) =

pr (xt+1|yt)

t(cid:89)

t=1

note that yt is now a function of c as well as x1:t.
the loss derivatives with respect to the outputs   et,     t,     t,     t,     t remain un-
changed from eqs. (27), (30) and (31). given the loss derivative    l(x)
with
respect to the size w window vector wt, obtained by backpropagating the out-
put derivatives through the computation graph in fig. 12, the derivatives with
respect to the window parameters are as follows:

   wt

(cid:16)     k

t

t     u(cid:1)2(cid:17) w(cid:88)
(cid:0)  k

   l(x)
   wj
t

cj
u

j=1

=

 (k, t, u)

 (k, t, u) def=   k

t exp

u(cid:88)

u=1

=      k

t

u(cid:88)

u=1

=

   l(x)
     k

= exp(cid:0)    k

t+1

t

   l(x)
        k
t
   l(x)
        k
t
   l(x)
     k
t
   l(x)
       k
t

u(cid:88)
(cid:1)    l(x)

+ 2  k
t

u=1

     k
t

 (k, t, u)(  k

t     u)2

 (k, t, u)(u       k
t )

(52)

(53)

(54)

(55)

(56)

(57)

(58)

(59)

(60)

fig. 14 illustrates the operation of a mixture density output layer applied to

handwriting synthesis.

5.2 experiments

the synthesis network was applied to the same input data as the handwriting
prediction network in the previous section. the character-level transcriptions
from the iam-ondb were now used to de   ne the character sequences c. the full
transcriptions contain 80 distinct characters (capital letters, lower case letters,
digits, and punctuation). however we used only a subset of 57, with all the

29

figure 14: mixture density outputs for handwriting synthesis. the top
heatmap shows the predictive distributions for the pen locations, the bottom
heatmap shows the mixture component weights. comparison with fig. 10 indi-
cates that the synthesis network makes more precise predictions (with smaller
density blobs) than the prediction-only network, especially at the ends of strokes,
where the synthesis network has the advantage of knowing which letter comes
next.

30

synthesis output densitytable 4: handwriting synthesis results. all results recorded on the val-
idation set.
   sse    is the mean
sum-squared-error per data point.

   log-loss    is the mean value of l(x) in nats.

regularisation
none
adaptive weight noise

log-loss sse
0.23
-1096.9
-1128.2
0.23

digits and most of the punctuation characters replaced with a generic    non-
letter    label2.

the network architecture was as similar as possible to the best prediction
network: three hidden layers of 400 lstm cells each, 20 bivariate gaussian
mixture components at the output layer and a size 3 input layer. the character
sequence was encoded with one-hot vectors, and hence the window vectors were
size 57. a mixture of 10 gaussian functions was used for the window parameters,
requiring a size 30 parameter vector. the total number of weights was increased
to approximately 3.7m.

the network was trained with rmsprop, using the same parameters as in
the previous section. the network was retrained with adaptive weight noise,
initial standard deviation 0.075, and the output and lstm gradients were again
clipped in the range [   100, 100] and [   10, 10] respectively.

table 4 shows that adaptive weight noise gave a considerable improvement
in log-loss (around 31.3 nats) but no signi   cant change in sum-squared error.
the regularised network appears to generate slightly more realistic sequences,
although the di   erence is hard to discern by eye. both networks performed
considerably better than the best prediction network. in particular the sum-
squared-error was reduced by 44%. this is likely due in large part to the im-
proved predictions at the ends of strokes, where the error is largest.

5.3 unbiased sampling
given c, an unbiased sample can be picked from pr(x|c) by iteratively drawing
xt+1 from pr (xt+1|yt), just as for the prediction network. the only di   erence is
that we must also decide when the synthesis network has    nished writing the text
and should stop making any future decisions. to do this, we use the following
heuristic: as soon as   (t, u + 1) >   (t, u)     1     u     u the current input xt is
de   ned as the end of the sequence and sampling ends. examples of unbiased
synthesis samples are shown in fig. 15. these and all subsequent    gures were
generated using the synthesis network retrained with adaptive weight noise.
notice how stylistic traits, such as character size, slant, cursiveness etc. vary

2this was an oversight; however it led to the interesting result that when the text contains
a non-letter, the network must select a digits or punctuation mark to generate. sometimes
the character can be be inferred from the context (e.g. the apostrophe in    can   t   ); otherwise
it is chosen at random.

31

widely between the samples, but remain more-or-less consistent within them.
this suggests that the network identi   es the traits early on in the sequence,
then remembers them until the end. by looking through enough samples for a
given text, it appears to be possible to    nd virtually any combination of stylistic
traits, which suggests that the network models them independently both from
each other and from the text.

   blind taste tests    carried out by the author during presentations suggest
that at least some unbiased samples cannot be distinguished from real hand-
writing by the human eye. nonetheless the network does make mistakes we
would not expect a human writer to make, often involving missing, confused
or garbled letters3; this suggests that the network sometimes has trouble de-
termining the alignment between the characters and the trace. the number of
mistakes increases markedly when less common words or phrases are included
in the character sequence. presumably this is because the network learns an
implicit character-level language model from the training set that gets confused
when rare or unknown transitions occur.

5.4 biased sampling

one problem with unbiased samples is that they tend to be di   cult to read
(partly because real handwriting is di   cult to read, and partly because the
network is an imperfect model). intuitively, we would expect the network to
give higher id203 to good handwriting because it tends to be smoother
and more predictable than bad handwriting. if this is true, we should aim to
output more probable elements of pr(x|c) if we want the samples to be easier to
read. a principled search for high id203 samples could lead to a di   cult
id136 problem, as the id203 of every output depends on all previous
outputs. however a simple heuristic, where the sampler is biased towards more
probable predictions at each step independently, generally gives good results.
de   ne the id203 bias b as a real number greater than or equal to zero.
before drawing a sample from pr(xt+1|yt), each standard deviation   j
t in the
gaussian mixture is recalculated from eq. (21) to

(cid:16)

(cid:17)
t     b
    j

  j
t = exp

and each mixture weight is recalculated from eq. (19) to

(cid:16)

(cid:17)

exp

(cid:80)m

j(cid:48)=1 exp

    j
t (1 + b)
    j(cid:48)
t (1 + b)

(cid:16)

(cid:17)

  j
t =

(61)

(62)

this arti   cially reduces the variance in both the choice of component from the
mixture, and in the distribution of the component itself. when b = 0 unbiased
sampling is recovered, and as b         the variance in the sampling disappears
3we expect humans to make mistakes like misspelling    temperament    as    temperement   , as

the second writer in fig. 15 seems to have done.

32

figure 15: real and generated handwriting. the top line in each block is
real, the rest are unbiased samples from the synthesis network. the two texts
are from the validation set and were not seen during training.

33

and the network always outputs the mode of the most probable component in
the mixture (which is not necessarily the mode of the mixture, but at least a
reasonable approximation). fig. 16 shows the e   ect of progressively increasing
the bias, and fig. 17 shows samples generated with a low bias for the same texts
as fig. 15.

5.5 primed sampling

another reason to constrain the sampling would be to generate handwriting
in the style of a particular writer (rather than in a randomly selected style).
the easiest way to do this would be to retrain it on that writer only. but
even without retraining, it is possible to mimic a particular style by    priming   
the network with a real sequence, then generating an extension with the real
sequence still in the network   s memory. this can be achieved for a real x, c and
a synthesis character string s by setting the character sequence to c(cid:48) = c + s
and clamping the data inputs to x for the    rst t timesteps, then sampling
as usual until the sequence ends. examples of primed samples are shown in
figs. 18 and 19. the fact that priming works proves that the network is able to
remember stylistic features identi   ed earlier on in the sequence. this technique
appears to work better for sequences in the training data than those the network
has never seen.

primed sampling and reduced variance sampling can also be combined. as
shown in figs. 20 and 21 this tends to produce samples in a    cleaned up    version
of the priming style, with overall stylistic traits such as slant and cursiveness
retained, but the strokes appearing smoother and more regular. a possible
application would be the arti   cial enhancement of poor handwriting.

6 conclusions and future work

this paper has demonstrated the ability of long short-term memory recur-
rent neural networks to generate both discrete and real-valued sequences with
complex, long-range structure using next-step prediction. it has also introduced
a novel convolutional mechanism that allows a recurrent network to condition
its predictions on an auxiliary annotation sequence, and used this approach to
synthesise diverse and realistic samples of online handwriting. furthermore, it
has shown how these samples can be biased towards greater legibility, and how
they can be modelled on the style of a particular writer.

several directions for future work suggest themselves. one is the applica-
tion of the network to id133, which is likely to be more challenging
than handwriting synthesis due to the greater dimensionality of the data points.
another is to gain a better insight into the internal representation of the data,
and to use this to manipulate the sample distribution directly. it would also
be interesting to develop a mechanism to automatically extract high-level an-
notations from sequence data. in the case of handwriting, this could allow for

34

figure 16: samples biased towards higher id203. the id203
biases b are shown at the left. as the bias increases the diversity decreases and
the samples tend towards a kind of    average handwriting    which is extremely
regular and easy to read (easier, in fact, than most of the real handwriting in the
training set). note that even when the variance disappears, the same letter is
not written the same way at di   erent points in a sequence (for examples the    e   s
in    exactly the same   , the    l   s in    until they all look   ), because the predictions
are still in   uenced by the previous outputs. if you look closely you can see that
the last three lines are not quite exactly the same.

35

figure 17: a slight bias. the top line in each block is real. the rest are
samples from the synthesis network with a id203 bias of 0.15, which seems
to give a good balance between diversity and legibility.

36

figure 18: samples primed with real sequences. the priming sequences
(drawn from the training set) are shown at the top of each block. none of the
lines in the sampled text exist in the training set. the samples were selected
for legibility.

37

figure 19: samples primed with real sequences (cotd).

38

figure 20: samples primed with real sequences and biased towards
higher id203. the priming sequences are at the top of the blocks. the
id203 bias was 1. none of the lines in the sampled text exist in the training
set.

39

figure 21: samples primed with real sequences and biased towards
higher id203 (cotd)

40

more nuanced annotations than just text, for example stylistic features, di   erent
forms of the same letter, information about stroke order and so on.

acknowledgements

thanks to yichuan tang, ilya sutskever, navdeep jaitly, geo   rey hinton and
other colleagues at the university of toronto for numerous useful comments
and suggestions. this work was supported by a global scholarship from the
canadian institute for advanced research.

references

[1] y. bengio, p. simard, and p. frasconi. learning long-term dependencies
with id119 is di   cult. ieee transactions on neural networks,
5(2):157   166, march 1994.

[2] c. bishop. mixture density networks. technical report, 1994.

[3] c. bishop. neural networks for pattern recognition. oxford university

press, inc., 1995.

[4] n. boulanger-lewandowski, y. bengio, and p. vincent. modeling tempo-
ral dependencies in high-dimensional sequences: application to polyphonic
music generation and transcription. in proceedings of the twenty-nine in-
ternational conference on machine learning (icml   12), 2012.

[5] j. g. cleary, ian, and i. h. witten. data compression using adaptive cod-
ing and partial string matching. ieee transactions on communications,
32:396   402, 1984.

[6] d. eck and j. schmidhuber. a    rst look at music composition using lstm
recurrent neural networks. technical report, idsia usi-supsi instituto
dalle molle.

[7] f. gers, n. schraudolph, and j. schmidhuber. learning precise timing
with lstm recurrent networks. journal of machine learning research,
3:115   143, 2002.

[8] a. graves. practical variational id136 for neural networks. in advances
in neural information processing systems, volume 24, pages 2348   2356.
2011.

[9] a. graves. sequence transduction with recurrent neural networks. in icml

representation learning worksop, 2012.

[10] a. graves, a. mohamed, and g. hinton. id103 with deep

recurrent neural networks. in proc. icassp, 2013.

41

[11] a. graves and j. schmidhuber. framewise phoneme classi   cation with bidi-
rectional lstm and other neural network architectures. neural networks,
18:602   610, 2005.

[12] a. graves and j. schmidhuber. o   ine handwriting recognition with multi-
dimensional recurrent neural networks. in advances in neural information
processing systems, volume 21, 2008.

[13] p. d. gr  unwald. the minimum description length principle (adaptive

computation and machine learning). the mit press, 2007.

[14] g. hinton. a practical guide to training restricted id82s.

technical report, 2010.

[15] s. hochreiter, y. bengio, p. frasconi, and j. schmidhuber. gradient flow
in recurrent nets: the di   culty of learning long-term dependencies.
in s. c. kremer and j. f. kolen, editors, a field guide to dynamical
recurrent neural networks. 2001.

[16] s. hochreiter and j. schmidhuber. long short-term memory. neural

computation, 9(8):1735   1780, 1997.

[17] m. hutter. the human knowledge compression contest, 2012.

[18] k.-c. jim, c. giles, and b. horne. an analysis of noise in recurrent neural
networks: convergence and generalization. neural networks, ieee trans-
actions on, 7(6):1424    1438, 1996.

[19] s. johansson, r. atwell, r. garside, and g. leech. the tagged lob corpus

user   s manual; norwegian computing centre for the humanities, 1986.

[20] b. knoll and n. de freitas. a machine learning perspective on predictive

coding with paq. corr, abs/1108.3298, 2011.

[21] m. liwicki and h. bunke.

iam-ondb - an on-line english sentence
database acquired from handwritten text on a whiteboard. in proc. 8th
int. conf. on document analysis and recognition, volume 2, pages 956   
961, 2005.

[22] m. p. marcus, b. santorini, and m. a. marcinkiewicz. building a large
annotated corpus of english: the id32. computational
linguistics, 19(2):313   330, 1993.

[23] t. mikolov. statistical language models based on neural networks. phd

thesis, brno university of technology, 2012.

[24] t. mikolov, i. sutskever, a. deoras, h. le, s. kombrink, and j. cernocky.
subword id38 with neural networks. technical report, un-
published manuscript, 2012.

42

[25] a. mnih and g. hinton. a scalable hierarchical distributed language
model. in advances in neural information processing systems, volume 21,
2008.

[26] a. mnih and y. w. teh. a fast and simple algorithm for training neural
in proceedings of the 29th international

probabilistic language models.
conference on machine learning, pages 1751   1758, 2012.

[27] t. n. sainath, a. mohamed, b. kingsbury, and b. ramabhadran. low-
rank id105 for deep neural network training with high-
dimensional output targets. in proc. icassp, 2013.

[28] m. schuster. better generative models for sequential data problems: bidi-
rectional recurrent mixture density networks. pages 589   595. the mit
press, 1999.

[29] i. sutskever, g. e. hinton, and g. w. taylor. the recurrent temporal

restricted id82. pages 1601   1608, 2008.

[30] i. sutskever, j. martens, and g. hinton. generating text with recurrent

neural networks. in icml, 2011.

[31] g. w. taylor and g. e. hinton. factored conditional restricted boltzmann
machines for modeling motion style. in proc. 26th annual international
conference on machine learning, pages 1025   1032, 2009.

[32] t. tieleman and g. hinton. lecture 6.5 - rmsprop: divide the gradient by

a running average of its recent magnitude, 2012.

[33] r. williams and d. zipser. gradient-based learning algorithms for recur-
rent networks and their computational complexity. in back-propagation:
theory, architectures and applications, pages 433   486. 1995.

43

