a decomposable attention model for natural language id136

ankur p. parikh

google

new york, ny

oscar t  ackstr  om

google

new york, ny

dipanjan das

google

new york, ny

jakob uszkoreit

google

mountain view, ca

6
1
0
2

 

p
e
s
5
2

 

 
 
]
l
c
.
s
c
[
 
 

2
v
3
3
9
1
0

.

6
0
6
1
:
v
i
x
r
a

{aparikh,oscart,dipanjand,uszkoreit}@google.com

abstract

we propose a simple neural architecture for nat-
ural language id136. our approach uses at-
tention to decompose the problem into subprob-
lems that can be solved separately, thus making
it trivially parallelizable. on the stanford natu-
ral language id136 (snli) dataset, we ob-
tain state-of-the-art results with almost an order
of magnitude fewer parameters than previous
work and without relying on any word-order in-
formation. adding intra-sentence attention that
takes a minimum amount of order into account
yields further improvements.

introduction

1
natural language id136 (nli) refers to the prob-
lem of determining entailment and contradiction re-
lationships between a premise and a hypothesis. nli
is a central problem in language understanding (katz,
1972; bos and markert, 2005; van benthem, 2008;
maccartney and manning, 2009) and recently the
large snli corpus of 570k sentence pairs was cre-
ated for this task (bowman et al., 2015). we present
a new model for nli and leverage this corpus for
comparison with prior work.

a large body of work based on neural networks
for text similarity tasks including nli has been pub-
lished in recent years (hu et al., 2014; rockt  aschel
et al., 2016; wang and jiang, 2016; yin et al., 2016,
inter alia). the dominating trend in these models is
to build complex, deep text representation models,
for example, with convolutional networks (lecun et
al., 1990, id98s henceforth) or long short-term mem-
ory networks (hochreiter and schmidhuber, 1997,

lstms henceforth) with the goal of deeper sen-
tence comprehension. while these approaches have
yielded impressive results, they are often computa-
tionally very expensive, and result in models having
millions of parameters (excluding embeddings).

here, we take a different approach, arguing that
for natural language id136 it can often suf   ce to
simply align bits of local text substructure and then
aggregate this information. for example, consider
the following sentences:

    bob is in his room, but because of the thunder

and lightning outside, he cannot sleep.

    bob is awake.
    it is sunny outside.
the    rst sentence is complex in structure and it
is challenging to construct a compact representation
that expresses its entire meaning. however, it is fairly
easy to conclude that the second sentence follows
from the    rst one, by simply aligning bob with bob
and cannot sleep with awake and recognizing that
these are synonyms. similarly, one can conclude
that it is sunny outside contradicts the    rst sentence,
by aligning thunder and lightning with sunny and
recognizing that these are most likely incompatible.
we leverage this intuition to build a simpler and
more lightweight approach to nli within a neural
framework; with considerably fewer parameters, our
model outperforms more complex existing neural ar-
chitectures. in contrast to existing approaches, our
approach only relies on alignment and is fully com-
putationally decomposable with respect to the input
text. an overview of our approach is given in fig-
ure 1. given two sentences, where each word is repre-

sented by an embedding vector, we    rst create a soft
alignment matrix using neural attention (bahdanau
et al., 2015). we then use the (soft) alignment to
decompose the task into subproblems that are solved
separately. finally, the results of these subproblems
are merged to produce the    nal classi   cation. in ad-
dition, we optionally apply intra-sentence attention
(cheng et al., 2016) to endow the model with a richer
encoding of substructures prior to the alignment step.
asymptotically our approach does the same total
work as a vanilla lstm encoder, while being triv-
ially parallelizable across sentence length, which can
allow for considerable speedups in low-latency set-
tings. empirical results on the snli corpus show that
our approach achieves state-of-the-art results, while
using almost an order of magnitude fewer parameters
compared to complex lstm-based approaches.
2 related work
our method is motivated by the central role played by
alignment in machine translation (koehn, 2009) and
previous approaches to sentence similarity modeling
(haghighi et al., 2005; das and smith, 2009; chang
et al., 2010; fader et al., 2013), natural language
id136 (marsi and krahmer, 2005; maccartney
et al., 2006; hickl and bensley, 2007; maccartney
et al., 2008), and id29 (andreas et al.,
2013). the neural counterpart to alignment, atten-
tion (bahdanau et al., 2015), which is a key part
of our approach, was originally proposed and has
been predominantly used in conjunction with lstms
(rockt  aschel et al., 2016; wang and jiang, 2016) and
to a lesser extent with id98s (yin et al., 2016). in
contrast, our use of attention is purely based on word
embeddings and our method essentially consists of
feed-forward networks that operate largely indepen-
dently of word order.
3 approach
let a = (a1, . . . , a(cid:96)a) and b = (b1, . . . , b(cid:96)b) be
the two input sentences of length (cid:96)a and (cid:96)b, re-
spectively. we assume that each ai, bj     rd
is a id27 vector of dimension d and
that each sentence is prepended with a    null   
token. our training data comes in the form of
labeled pairs {a(n), b(n), y(n)}n
n=1, where y(n) =
(y(n)
1 , . . . , y(n)
c ) is an indicator vector encoding the
label and c is the number of output classes. at test

figure 1: pictoral overview of the approach, showing the attend
(left), compare (center) and aggregate (right) steps.

time, we receive a pair of sentences (a, b) and our
goal is to predict the correct label y.
input representation. let   a = (  a1, . . . ,   a(cid:96)a) and
  b = (  b1, . . . ,   b(cid:96)b) denote the input representation of
each fragment that is fed to subsequent steps of the
algorithm. the vanilla version of our model simply
de   nes   a := a and   b := b. with this input rep-
resentation, our model does not make use of word
order. however, we discuss an extension using intra-
sentence attention in section 3.4 that uses a minimal
amount of sequence information.

the core model consists of the following three
components (see figure 1), which are trained jointly:
attend. first, soft-align the elements of   a and   b
using a variant of neural attention (bahdanau et al.,
2015) and decompose the problem into the compari-
son of aligned subphrases.
compare. second,
separately compare each
aligned subphrase to produce a set of vectors
{v1,i}(cid:96)a
j=1 for b. each v1,i is
a nonlinear combination of ai and its (softly) aligned
subphrase in b (and analogously for v2,j).
aggregate. finally, aggregate the sets {v1,i}(cid:96)a
i=1
and {v2,j}(cid:96)b
j=1 from the previous step and use the
result to predict the label   y.

i=1 for a and {v2,j}(cid:96)b

3.1 attend
we    rst obtain unnormalized attention weights eij,
computed by a function f (cid:48), which decomposes as:

eij := f (cid:48)(  ai,   bj) := f (  ai)t f (  bj) .

(1)

this decomposition avoids the quadratic complexity
that would be associated with separately applying f (cid:48)
(cid:96)a    (cid:96)b times. instead, only (cid:96)a + (cid:96)b applications of
f are needed. we take f to be a feed-forward neural
network with relu activations (glorot et al., 2011).

     h (                 )++   +=  yintheparkaliceplayssomeoneplayingmusicoutside   uteasolog (    ,    )g (    ,    )parkoutsidealicesomeone   ute+   solomusic   g (    ,    )===   utemusicf (    ,    )these attention weights are normalized as follows:

(cid:96)b(cid:88)
(cid:96)a(cid:88)

j=1

i=1

(cid:80)(cid:96)b
(cid:80)(cid:96)a

  i :=

  j :=

exp(eij)
k=1 exp(eik)

  bj ,

exp(eij)
k=1 exp(ekj)

  ai .

(2)

here   i is the subphrase in   b that is (softly) aligned
to   ai and vice versa for   j.

3.2 compare
next, we separately compare the aligned phrases
{(  ai,   i)}(cid:96)a
j=1 using a function g,
which in this work is again a feed-forward network:

i=1 and {(  bj,   j)}(cid:96)b

v1,i := g([  ai,   i])    i     [1, . . . , (cid:96)a] ,
v2,j := g([  bj,   j])    j     [1, . . . , (cid:96)b] .

(3)
where the brackets [  ,  ] denote concatenation. note
that since there are only a linear number of terms in
this case, we do not need to apply a decomposition
as was done in the previous step. thus g can jointly
take into account both   ai, and   i.

3.3 aggregate
we now have two sets of comparison vectors
i=1 and {v2,j}(cid:96)b
{v1,i}(cid:96)a
j=1. we    rst aggregate over
each set by summation:
(cid:96)a(cid:88)

(cid:96)b(cid:88)

v1 =

v1,i

,

v2 =

v2,j .

(4)

i=1

j=1

and feed the result through a    nal classi   er h, that
is a feed forward network followed by a linear layer:

  y = h([v1, v2]) ,

(5)
where   y     rc represents the predicted (unnormal-
ized) scores for each class and consequently the pre-
dicted class is given by   y = argmaxi   yi.

for training, we use multi-class cross-id178 loss
with dropout id173 (srivastava et al., 2014):

l(  f ,   g,   h ) =

1
n

n(cid:88)

c(cid:88)

n=1

c=1

(cid:80)c

exp(  yc)
c(cid:48)=1 exp(  yc(cid:48))

y(n)
c

log

here   f ,   g,   h denote the learnable parameters of
the functions f, g and h, respectively.

intra-sentence attention (optional)

3.4
in the above model, the input representations are
simple id27s. however, we can augment
this input representation with intra-sentence attention
to encode compositional relationships between words
within each sentence, as proposed by cheng et al.
(2016). similar to eqs. 1 and 2, we de   ne

fij := fintra(ai)t fintra(aj) ,

(6)

where fintra is a feed-forward network. we then cre-
ate the self-aligned phrases

(cid:96)a(cid:88)

j=1

(cid:80)(cid:96)a

a(cid:48)
i :=

exp(fij + di   j)
k=1 exp(fik + di   k)

aj .

(7)

the distance-sensitive bias terms di   j     r provides
the model with a minimal amount of sequence infor-
mation, while remaining parallelizable. these terms
are bucketed such that all distances greater than 10
words share the same bias. the input representation
for subsequent steps is then de   ned as   ai := [ai, a(cid:48)
i]
and analogously   bi := [bi, b(cid:48)
i].
4 computational complexity
we now discuss the asymptotic complexity of our
approach and how it offers a higher degree of par-
allelism than lstm-based approaches. recall that
d denotes embedding dimension and (cid:96) means sen-
tence length. for simplicity we assume that all hid-
den dimensions are d and that the complexity of
matrix(d    d)-vector(d    1) multiplication is o(d2).
a key assumption of our analysis is that (cid:96) < d,
which we believe is reasonable and is true of the
snli dataset (bowman et al., 2015) where (cid:96) < 80,
whereas recent lstm-based approaches have used
d     300. this assumption allows us to bound the
complexity of computing the (cid:96)2 attention weights.
complexity of lstms. the complexity of an
lstm cell is o(d2), resulting in a complexity of
o((cid:96)d2) to encode the sentence. adding attention as
in rockt  aschel et al. (2016) increases this complexity
to o((cid:96)d2 + (cid:96)2d).
complexity of our approach. application of a
feed-forward network requires o(d2) steps. thus,
the compare and aggregate steps have complexity
o((cid:96)d2) and o(d2) respectively. for the attend step,

.

method
lexicalized classi   er (bowman et al., 2015)
300d lstm id56 encoders (bowman et al., 2016)
1024d pretrained gru encoders (vendrov et al., 2015)
300d tree-based id98 encoders (mou et al., 2015)
300d spinn-pi encoders (bowman et al., 2016)
100d lstm with attention (rockt  aschel et al., 2016)
300d mlstm (wang and jiang, 2016)
450d lstmn with deep attention fusion (cheng et al., 2016)
our approach (vanilla)
our approach with intra-sentence attention

train acc test acc

99.7
83.9
98.8
83.3
89.2
85.3
92.0
88.5
89.5
90.5

78.2
80.6
81.4
82.1
83.2
83.5
86.1
86.3
86.3
86.8

#parameters
   
3.0m
15.0m
3.5m
3.7m
252k
1.9m
3.4m
382k
582k

table 1: train/test accuracies on the snli dataset and number of parameters (excluding embeddings) for each approach.

method
bowman et al. (2016)
wang and jiang (2016)
our approach (vanilla)
our approach w/ intra att.
table 2: breakdown of accuracy with respect to classes on snli
development set. n=neutral, e=entailment, c=contradiction.

n
80.6
81.6
83.6
83.7

e
88.2
91.6
91.3
92.1

c
85.5
87.4
85.8
86.7

f is evaluated o((cid:96)) times, giving a complexity of
o((cid:96)d2). each attention weight eij requires one dot
product, resulting in a complexity of o((cid:96)2d).

thus the total complexity of the model is o((cid:96)d2 +
(cid:96)2d), which is equal to that of an lstm with atten-
tion. however, note that with the assumption that
(cid:96) < d, this becomes o((cid:96)d2) which is the same com-
plexity as a regular lstm. moreover, unlike the
lstm, our approach has the advantage of being par-
allelizable over (cid:96), which can be useful at test time.

5 experiments
we evaluate our approach on the stanford natural
language id136 (snli) dataset (bowman et al.,
2015). given a sentences pair (a, b), the task is to
predict whether b is entailed by a, b contradicts a,
or whether their relationship is neutral.

implementation details

5.1
the method was implemented in tensorflow (abadi
et al., 2015).

id174: following bowman et al.
(2015), we remove examples labeled           (no gold
label) from the dataset, which leaves 549,367 pairs

for training, 9,842 for development, and 9,824 for
testing. we use the tokenized sentences from the
non-binary parse provided in the dataset and prepend
each sentence with a    null    token. during training,
each sentence was padded up to the maximum length
of the batch for ef   cient training (the padding was
explicitly masked out so as not to affect the objec-
tive/gradients). for ef   cient batching in tensorflow,
we semi-sorted the training data to    rst contain ex-
amples where both sentences had length less than
20, followed by those with length less than 50, and
then the rest. this ensured that most training batches
contained examples of similar length.

embeddings: we use 300 dimensional glove
embeddings (pennington et al., 2014) to represent
words. each embedding vector was normalized to
have (cid:96)2 norm of 1 and projected down to 200 di-
mensions, a number determined via hyperparameter
tuning. out-of-vocabulary (oov) words are hashed
to one of 100 random embeddings each initialized
to mean 0 and standard deviation 1. all embeddings
remain    xed during training, but the projection ma-
trix is trained. all other parameter weights (hidden
layers etc.) were initialized from random gaussians
with mean 0 and standard deviation 0.01.

each hyperparameter setting was run on a sin-
gle machine with 10 asynchronous gradient-update
threads, using adagrad (duchi et al., 2011) for opti-
mization with the default initial accumulator value of
0.1. dropout id173 (srivastava et al., 2014)
was used for all relu layers, but not for the    nal
linear layer. we additionally tuned the following
hyperparameters and present their chosen values in

id sentence 1

sentence 2

da (vanilla) da (intra att.) spinn-pi mlstm gold

a

b

two kids are standing in the ocean hugging
each other.
a dancer in costumer performs on stage while
a man watches.

c they are sitting on the edge of a fountain
d two dogs play with tennis ball in    eld.

e

f

g

h

i

two kids begin to make a snowman on a sunny
winter day.
the horses pull the carriage, holding people
and a dog, through the rain.
a woman closes her eyes as she plays her
cello.
two women having drinks and smoking
cigarettes at the bar.
a band playing with fans watching.

two kids enjoy their day at the beach.

the man is captivated

the fountain is splashing the persons seated.
dogs are watching a tennis match.

two penguins making a snowman.

horses ride in a carriage pulled by a dog.

the woman has her eyes open.

three women are at a bar.

a band watches the fans play

n

n
n
n

n

e

e

e

e

n

n
n
c
c

e

e

e

e

e

e

c
c
c

c

e

e

e

e

e

c
c
c

c

e

e

e

n

n
n
c
c

c

c

c
c

table 3: example wins and losses compared to other approaches. da (decomposable attention) refers to our approach while
spinn-pi and mlstm are previously developed methods (see table 1).

parentheses: network size (2-layers, each with 200
neurons), batch size (4), 1 dropout ratio (0.2) and
learning rate (0.05   vanilla, 0.025   intra-attention).
all settings were run for 50 million steps (each step
indicates one batch) but model parameters were saved
frequently as training progressed and we chose the
model that did best on the development set.

5.2 results
results in terms of 3-class accuracy are shown in
table 1. our vanilla approach achieves state-of-the-
art results with almost an order of magnitude fewer
parameters than the lstmn of cheng et al. (2016).
adding intra-sentence attention gives a considerable
improvement of 0.5 percentage points over the ex-
isting state of the art. table 2 gives a breakdown of
accuracy on the development set showing that most
of our gains stem from neutral, while most losses
come from contradiction pairs.

table 3 shows some wins and losses. examples a-
c are cases where both variants of our approach are
correct while both spinn-pi (bowman et al., 2016)
and the mlstm (wang and jiang, 2016) are incor-
rect. in the    rst two cases, both sentences contain
phrases that are either identical or highly lexically
related (e.g.    two kids    and    ocean / beach   ) and our
approach correctly favors neutral in these cases. in
example c, it is possible that relying on word-order
may confuse spinn-pi and the mlstm due to how
   fountain    is the object of a preposition in the    rst
sentence but the subject of the second.

the second set of examples (d-f) are cases where

116 or 32 also work well and are a bit more stable.

our vanilla approach is incorrect but mlstm and
spinn-pi are correct. example f requires sequen-
tial information and neither variant of our approach
can predict the correct class. examples d-e are in-
teresting however, since they don   t require word or-
der information, yet intra-attention seems to help.
we suspect this may be because the word embed-
dings are not    ne-grained enough for the algorithm
to conclude that    play/watch    is a contradiction, but
intra-attention, by adding an extra layer of composi-
tion/nonlinearity to incorporate context, compensates
for this.

finally, examples g-i are cases that all methods
get wrong. the    rst is actually representative of many
examples in this category where there is one critical
word that separates the two sentences (close vs open
in this case) and goes unnoticed by the algorithms.
examples h requires id136 about numbers and
example i needs sequence information.
6 conclusion
we presented a simple attention-based approach to
natural language id136 that is trivially paralleliz-
able. the approach outperforms considerably more
complex neural methods aiming for text understand-
ing. our results suggest that, at least for this task,
pairwise comparisons are relatively more important
than global sentence-level representations.

acknowledgements
we thank slav petrov, tom kwiatkowski, yoon kim,
erick fonseca, mark neumann for useful discussion
and sam bowman and shuohang wang for providing
us their model outputs for error analysis.

references
[abadi et al.2015] mart    n abadi, ashish agarwal, paul
barham, eugene brevdo, zhifeng chen, craig citro,
greg s corrado, andy davis, jeffrey dean, matthieu
devin, et al. 2015. tensorflow: large-scale machine
learning on heterogeneous systems. software available
from tensor   ow. org.

[andreas et al.2013] jacob andreas, andreas vlachos,
and stephen clark. 2013. id29 as ma-
chine translation. in proceedings of acl.

[bahdanau et al.2015] dzmitry bahdanau, kyunghyun
cho, and yoshua bengio. 2015. neural machine trans-
lation by jointly learning to align and translate.
in
proceedings of iclr.

[bos and markert2005] johan bos and katja markert.
2005. recognising id123 with logical in-
ference. in proceedings of emnlp.

[bowman et al.2015] samuel r. bowman, gabor angeli,
christopher potts, and christopher d. manning. 2015.
a large annotated corpus for learning natural language
id136. in proceedings of emnlp.

[bowman et al.2016] samuel r. bowman, jon gauthier,
abhinav rastogi, raghav gupta, christopher d. man-
ning, and christopher potts. 2016. a fast uni   ed model
for parsing and sentence understanding. in proceedings
of acl.

[chang et al.2010] ming-wei chang, dan goldwasser,
dan roth, and vivek srikumar. 2010. discrimina-
tive learning over constrained latent representations. in
proceedings of hlt-naacl.

[cheng et al.2016] jianpeng cheng, li dong, and mirella
lapata. 2016. long short-term memory-networks for
machine reading. in proceedings of emnlp.

[das and smith2009] dipanjan das and noah a. smith.
2009. paraphrase identi   cation as probabilistic quasi-
in proceedings of acl-
synchronous recognition.
ijcnlp.

[duchi et al.2011] john duchi, elad hazan, and yoram
singer. 2011. adaptive subgradient methods for online
learning and stochastic optimization. the journal of
machine learning research, 12:2121   2159.

[fader et al.2013] anthony fader, luke s zettlemoyer,
and oren etzioni. 2013. paraphrase-driven learning
for open id53. in proceedings of acl.
[glorot et al.2011] xavier glorot, antoine bordes, and
yoshua bengio. 2011. deep sparse recti   er neural
networks. in proceedings of aistats.

[haghighi et al.2005] aria d. haghighi, andrew y. ng,
and christopher d. manning. 2005. robust textual
id136 via graph matching. in proceedings of hlt-
naacl.

[hickl and bensley2007] andrew hickl and jeremy bens-
ley. 2007. a discourse commitment-based framework

for recognizing id123. in proceedings of
the acl-pascal workshop on id123 and
id141. association for computational linguis-
tics.

[hochreiter and schmidhuber1997] sepp hochreiter and
j  urgen schmidhuber. 1997. long short-term memory.
neural computation, 9(8):1735   1780.

[hu et al.2014] baotian hu, zhengdong lu, hang li, and
qingcai chen. 2014. convolutional neural network
architectures for matching natural language sentences.
in advances in nips.

[katz1972] jerrold j. katz.

harper & row.

1972.

semantic theory.

[koehn2009] philipp koehn. 2009. statistical machine

translation. cambridge university press.

[lecun et al.1990] y. lecun, b. boser, j.s. denker,
d. henderson, r.e. howard, w. hubbard, and l.d.
jackel. 1990. handwritten digit recognition with a
back-propagation network. in advances in nips.

[maccartney and manning2009] bill maccartney and
christopher d. manning. 2009. an extended model of
natural logic. in proceedings of the iwcs.
[maccartney et al.2006] bill maccartney,

trond
grenager, marie-catherine de marneffe, daniel cer,
and christopher d manning.
2006. learning to
recognize features of valid id123s.
in
proceedings of hlt-naacl.

[maccartney et al.2008] bill maccartney, michel galley,
and christopher d manning. 2008. a phrase-based
alignment model for natural language id136.
in
proceedings of emnlp.

[marsi and krahmer2005] erwin marsi and emiel krah-
mer. 2005. classi   cation of semantic relations by
in proceedings of the acl
humans and machines.
workshop on empirical modeling of semantic equiva-
lence and entailment.

[mou et al.2015] lili mou, men rui, ge li, yan xu,
lu zhang, rui yan, and zhi jin. 2015. natural lan-
guage id136 by tree-based convolution and heuristic
matching. in proceedings of acl (short papers).

[pennington et al.2014] jeffrey pennington, richard
socher, and christopher d. manning. 2014. glove:
global vectors for word representation. in proceedings
of emnlp.

[rockt  aschel et al.2016] tim rockt  aschel,

edward
grefenstette, karl moritz hermann, tom  a  s ko  cisk`y,
and phil blunsom. 2016. reasoning about entailment
with neural attention. in proceedings of iclr.

[srivastava et al.2014] nitish srivastava, geoffrey hinton,
alex krizhevsky, ilya sutskever, and ruslan salakhut-
dinov. 2014. dropout: a simple way to prevent neural
networks from over   tting. the journal of machine
learning research, 15(1):1929   1958.

[van benthem2008] johan van benthem. 2008. a brief

history of natural logic. college publications.

[vendrov et al.2015] ivan vendrov, ryan kiros, sanja fi-
dler, and raquel urtasun. 2015. order-embeddings of
images and language. in proceedings of iclr.

[wang and jiang2016] shuohang wang and jing jiang.
2016. learning natural language id136 with lstm.
in proceedings of naacl.

[yin et al.2016] wenpeng yin, hinrich sch  utze, bing xi-
ang, and bowen zhou. 2016. abid98: attention-
based convolutional neural network for modeling sen-
tence pairs. in transactions of the association of com-
putational linguistics.

