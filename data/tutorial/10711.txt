iterative alternating neural attention for machine reading

alessandro sordonif and philip bachmanf and adam trischlerf and yoshua bengiog

fmaluuba research, montr  eal, qu  ebec

guniversity of montr  eal, montr  eal, qu  ebec

6
1
0
2

 

v
o
n
9

 

 
 
]
l
c
.
s
c
[
 
 

4
v
5
4
2
2
0

.

6
0
6
1
:
v
i
x
r
a

{alessandro.sordoni, phil.bachman, adam.trischler}@maluuba.com

bengioy@iro.umontreal.ca

abstract

we propose a novel neural attention architec-
ture to tackle machine comprehension tasks,
such as answering cloze-style queries with re-
spect to a document. unlike previous models,
we do not collapse the query into a single vec-
tor, instead we deploy an iterative alternating
attention mechanism that allows a    ne-grained
exploration of both the query and the docu-
ment. our model outperforms state-of-the-art
baselines in standard machine comprehension
benchmarks such as id98 news articles and the
children   s book test (cbt) dataset.

introduction

1
recently, the idea of training machine comprehen-
sion models that can read, understand, and answer
questions about a text has come closer to reality prin-
cipally through two factors. the    rst is the advent of
deep learning techniques (goodfellow et al., 2016),
which allow manipulation of natural language beyond
its surface forms and generalize beyond relatively
small amounts of labeled data. the second factor
is the formulation of standard machine comprehen-
sion benchmarks based on cloze-style queries (hill
et al., 2015; hermann et al., 2015), which permit
fast integration loops between model conception and
experimental evaluation.

cloze-style queries (taylor, 1953) are created by
deleting a particular word in a natural-language state-
ment. the task is to guess which word was deleted.
in a pragmatic approach, recent work (hill et al.,
2015) formed such questions by extracting a sentence
from a larger document. in contrast to considering
a stand-alone statement, the system is now required

to handle a larger amount of information that may
possibly in   uence the prediction of the missing word.
such contextual dependencies may also be injected
by removing a word from a short human-crafted sum-
mary of a larger body of text. the abstractive nature
of the summary is likely to demand a higher level of
comprehension of the original text (hermann et al.,
2015). in both cases, the machine comprehension
system is presented with an ablated query and the
document to which the original query refers. the
missing word is assumed to appear in the document.
encouraged by the recent success of deep learn-
ing attention architectures (bahdanau et al., 2015;
sukhbaatar et al., 2015), we propose a novel neural
attention-based id136 model designed to perform
id17 tasks. the model
   rst reads the document and the query using a recur-
rent neural network (goodfellow et al., 2016). then,
it deploys an iterative id136 process to uncover
the inferential links that exist between the missing
query word, the query, and the document. this phase
involves a novel alternating attention mechanism; it
   rst attends to some parts of the query, then    nds
their corresponding matches by attending to the doc-
ument. the result of this alternating search is fed
back into the iterative id136 process to seed the
next search step. this permits our model to reason
about different parts of the query in a sequential way,
based on the information that has been gathered pre-
viously from the document. after a    xed number of
iterations, the model uses a summary of its id136
process to predict the answer.

this paper makes the following contributions. we
present a novel iterative, alternating attention mecha-
nism that, unlike existing models (hill et al., 2015;

kadlec et al., 2016), does not compress the query to a
single representation, but instead alternates its atten-
tion between the query and the document to obtain a
   ne-grained query representation within a    xed com-
putation time. our architecture tightly integrates pre-
vious ideas related to bidirectional readers (kadlec et
al., 2016) and iterative attention processes (hill et al.,
2015; sukhbaatar et al., 2015). it obtains state-of-the-
art results on two machine comprehension datasets
and shows promise for application to a broad range
of natural language processing tasks.

2 task description

one of the advantages of using cloze-style questions
to evaluate machine comprehension systems is that
a suf   cient amount of training and test data can be
obtained without human intervention. the cbt (hill
et al., 2015) and id98 (hermann et al., 2015) corpora
are two such datasets.

the cbt1 corpus was generated from well-known
children   s books available through project guten-
berg. documents consist of 20-sentence excerpts
from these books. the related query is formed from
an excerpt   s 21st sentence by replacing a single word
with an anonymous placeholder token. the dataset is
divided into four subsets depending on the type of the
word replaced. the subsets are named entity, com-
mon noun, verb, and preposition. we will focus our
evaluation solely on the    rst two subsets, i.e. cbt-
ne (named entity) and cbt-cn (common nouns),
since the latter two are relatively simple as demon-
strated by (hill et al., 2015).

the id982 corpus was generated from news arti-
cles available through the id98 website. the doc-
uments are given by the full articles themselves,
which are accompanied by short, bullet-point sum-
mary statements. instead of extracting a query from
the articles themselves, the authors replace a named
entity within each article summary with an anony-
mous placeholder token.

for both datasets, the training and evaluation data
consist of tuples (q,d,a, a), where q is the query
(represented as a sequence of words), d is the docu-
ment, a is the set of possible answers, and a     a is
1available at http://www.thespermwhale.com/

jaseweston/babi/cbtest.tgz.

2available

at https://github.com/deepmind/

rc-data.

cbt-ne cbt-cn
120,769
108,719
2,000
2,000
2,500
2,500
10
10
   430
   460

# train
# valid
# test
# cand. (|a|)
avg. |d|
table 1: statistics of cbt-ne, cbt-cn and id98.

id98
380,298
3,924
3,198
   26
   750

the correct answer. all words come from a vocabu-
lary v , and, by construction, a     d. for each query,
a placeholder token is substituted for the real answer
a. statistics on the datasets are reported in table 1.

3 alternating iterative attention

our model is represented in fig. 1. its work   ow has
three steps. first is the encoding phase, in which we
compute a set of vector representations, acting as a
memory of the content of the input document and
query. next, the id136 phase aims to untangle the
complex semantic relationships linking the document
and the query in order to provide suf   ciently strong
evidence for the answer prediction to be success-
ful. to accomplish this, we use an iterative process
that, at each iteration, alternates attentive memory
accesses to the query and the document. finally,
the prediction phase uses the information gathered
from the repeated attentions through the query and
the document to maximize the id203 of the cor-
rect answer. we describe each of the phases in the
following sections.

3.1 bidirectional encoding

the input to the encoding phase is a sequence of
words x = (x1, . . . , x|x|), such as a document or
a query, drawn from a vocabulary v . each word is
represented by a continuous id27 x     rd
stored in a id27 matrix x     r|v |  d.
the sequence x is processed using a recurrent neural
network encoder (goodfellow et al., 2016) with gated
recurrent units (gru) (cho et al., 2014). for each
position i in the input sequence, the gru takes as
input the id27 xi and updates a hidden
state hi   1 to hi = f (xi, hi   1), where f is de   ned

figure 1: our model    rst encodes the query and the document by means of bidirectional gru networks. then, it
deploys an iterative id136 mechanism that alternates between attending query encodings (1) and document encodings
(2) given the query attended state. the results of the alternating attention is gated and fed back into the id136
gru. even if the encodings are computed only once, the query representation is dynamic and changes throughout the
id136 process. after a    xed number of steps t , the weights of the document attention are used to estimate the
id203 of the answer p (a|q,d).

by:

ri =   (ir xi + hrhi   1),
ui =   (iu xi + huhi   1),
  hi = tanh(ih xi + hh(ri    hi   1)),
hi = (1     ui)    hi   1 + ui      hi,

(1)

where hi, ri and ui     rh are the recurrent state, the
reset gate and update gate respectively, i{r,u,h}    
rh  d, h{r,u,h}     rh  h are the parameters of the
gru,    is the sigmoid function and    is the element-
wise multiplication. the hidden state hi acts as a
representation of the word xi in the context of the
preceding sequence inputs x<i. in order to incor-
porate information from the future tokens x>i, we
choose to process the sequence in reverse with an
additional gru (kadlec et al., 2016). therefore, the
encoding phase maps each token xi to a contextual
representation given by the concatenation of the for-
ward and backward gru hidden states   xi = [      hi,      hi].
we denote by   qi     r2h and   di     r2h the contex-
tual encodings for word i in the query q and the
document d respectively.
3.2
this phase can be considered a means to uncover a
possible id136 chain that starts at the query and
the document and leads to the answer. the id136

iterative alternating attention

is modelled by an additional recurrent gru network.
the recurrent network iteratively performs an alter-
nating search step to gather information that may be
useful to predict the answer. in particular, at each
time step: (1) it performs an attentive read on the
query encodings, resulting in a query glimpse, qt,
and (2) given the current query glimpse, it extracts a
conditional document glimpse, dt, representing the
parts of the document that are relevant to the cur-
rent query glimpse. in turn, both attentive reads are
conditioned on the previous hidden state of the infer-
ence gru st   1, summarizing the information that
has been gathered from the query and the document
up to time t. the id136 gru uses both glimpses
to update its recurrent state and thus decides which
information needs to be gathered to complete the
id136 process.
query attentive read given the query encodings
{  qi}, we formulate a query glimpse qt at timestep t
by:

qi, t = softmax

i=1,...,|q|   q

(cid:62)
i (aq st   1 + aq),

(cid:88)

qt =

qi, t   qi

i

where qi, t are the query attention weights and aq    
r2h  s, where s is the dimensionality of the id136
gru state, and aq     r2h. the attention we use here
is similar to the formulation used in (hill et al., 2015;

qdstbidirectionalencodings122st+1search gatesdocument attentionquery attentionid136state12stp(a|q,d)sukhbaatar et al., 2015), but with two differences.
first, we use a bilinear term instead of a simple dot
product in order to compute the importance of each
query term in the current time step. this simple bi-
linear attention has been successfully used in (luong
et al., 2015). second, we add a term aq that allows to
bias the attention mechanism towards words which
tend to be important across the questions indepen-
dently of the search key st   1. this is similar to what
is achieved by the original attention mechanism pro-
posed in (bahdanau et al., 2015) without the burden
of the additional tanh layer.
document attentive read the alternating atten-
tion continues by probing the document given the
current query glimpse qt. in particular, the document
attention weights are computed based on both the
previous search state and the currently selected query
glimpse qt:

di, t = softmax
i=1,...,|d|

(cid:62)
i (ad [st   1, qt] + ad),

  d

(cid:88)

dt =

di, t   di,

network with sigmoid output unit activation. the
fourth argument of the gate takes into account multi-
plicative interactions between query and document
glimpses, making it easier to determine the degree
of matching between them. given a query gate gq,
producing rq, and a document gate gd, producing rd,
the inputs of the id136 gru are given by the re-
set version of the query and document glimpses, i.e.,
st = f ([rq    qt, rd    dt], st   1). intuitively, the model
reviews the query glimpse with respect to the con-
tents of the document glimpse and vice versa.

3.3 answer prediction
after a    xed number of time-steps t , the document
attention weights obtained in the last search step
di,t are used to predict the id203 of the an-
swer given the document and the query p (a|q,d).
formally, we follow (kadlec et al., 2016) and apply
the    pointer-sum    loss:

(cid:88)

p (a|q,d) =

i   i(a,d)

di,t ,

(2)

i

where di, t are the attention weights for each word in
the document and ad     r2h  (s+2h) and ad     r2h.
note that the document attention is also conditioned
on st   1. this allows the model to perform transitive
reasoning on the document side, i.e. to use previ-
ously obtained document information to bias future
attended locations, which is particularly important
for natural language id136 tasks (sukhbaatar et
al., 2015).
gating search results
in order to update its re-
current state, the id136 gru may evolve on the
basis of the information gathered from the current
id136 step, i.e. st = f ([qt, dt], st   1), where f is
de   ned in eq. 1. however, the current query glimpse
may be too general or the document may not contain
the information speci   ed in the query glimpse, i.e. the
query or the document attention weights may be
nearly uniform. we include a gating mechanism
that is designed to reset the current query and docu-
ment glimpses in the case that the current search is
not fruitful. formally, we implement a gating mech-
anism r = g([st   1, qt, dt, qt    dt]), where    is the
element-wise multiplication and g : rs+6h     r2h.
the gate g takes the form of a 2-layer feed-forward

where i(a,d) is a set of positions where a occurs
in the document. the model is trained to maximize
log p (a|q,d) over the training corpus.
4 training details

to train our model, we used stochastic gradient de-
scent with the adam optimizer (kingma and ba,
2014), with an initial learning rate of 0.001. we set
the batch size to 32 and we decay the learning rate by
0.8 if the accuracy on the validation set does not in-
crease after a half-epoch, i.e. 2000 batches (for cbt)
and 5000 batches for (id98). we initialize all weights
of our model by sampling from the normal distribu-
tion n (0, 0.05). following (saxe et al., 2013), the
gru recurrent weights are initialized to be orthog-
onal and biases are initialized to zero. in order to
stabilize the learning, we clip the gradients if their
norm is greater than 5 (pascanu et al., 2013). we
performed a hyperparameter search with embedding
id173 in {0.001, 0.0001}, id136 steps
t     {3, 5, 8}, embedding size d     {256, 384}, en-
coder size h     {128, 256} and the id136 gru
size s     {256, 512}. we regularize our model by ap-
plying a dropout (srivastava et al., 2014) rate of 0.2
on the input embeddings, on the search gates and on

# model

cbt-ne

cbt-cn

1 humans (query) 1
2 humans (context+query) 1

3 lstms (context+query) 1

4 memnns (window memory + self-sup.) 1
5 as reader 2

6 ours (   xed query attention)
7 ours

8 as reader (ensemble) 2
9 ours (ensemble)

valid

-
-

51.2

70.4
73.8

73.3
75.2

74.5
76.9

test

52.0
81.6

41.8

66.6
68.6

66.0
68.6

70.6
72.0

valid

-
-

62.6

64.2
68.8

69.9
72.1

71.1
74.1

test

64.4
81.6

56.0

63.0
63.4

64.3
69.2

68.9
71.0

table 2: results on the cbt-ne (named entity) and cbt-cn (common noun) datasets. results marked with 1 are from
(hill et al., 2015) and those marked with 2 are from (kadlec et al., 2016).

the inputs to both the query and the document atten-
tion mechanisms. we found that setting embedding
id173 to 0.0001, t = 8, d = 384, h = 128,
s = 512 worked robustly across the datasets. our
model is implemented in theano (bastien et al.,
2012), using the keras (chollet, 2015) library.
computational complexity similar to previous
state-of-the-art models (kadlec et al., 2016; chen
et al., 2016) which use a bidirectional encoder, the
major bottleneck of our method is computing the
document and query encodings. the alternating at-
tention mechanism runs only for a    xed number of
steps (t = 8 in our tests), which is orders of mag-
nitude smaller than a typical document or query in
our datasets (see table 1). the repeated attentions
each require a softmax over    1000 locations which
is typically fast on recent gpu architectures. thus,
our computation cost is comparable to (kadlec et al.,
2016; chen et al., 2016), but we outperform the latter
models on the datasets tested.

5 results
we report the results of our model on the cbt-cn,
cbt-ne and id98 datasets, previously described in
section 2.

5.1 cbt
table 2 reports our results on the cbt-cn and cbt-
ne dataset. the humans, lstms and memory net-
works (memnns) results are taken from (hill et al.,
2015) and the attention-sum reader (as reader) is

a state-of-the-art result recently obtained by (kadlec
et al., 2016).

main result our model (line 7) sets a new state-
of-the-art on the common noun category by gaining
3.6 and 5.6 points in validation and test over the best
baseline as reader (line 5). this performance gap is
only partially re   ected on the cbt-ne dataset. we
observe that the 1.4 accuracy points on the validation
set do not re   ect better performance on the test set,
which sits on par with the best baseline. in cbt-
ne, the missing word is a named entity appearing
in the story which is likely to be less frequent than a
common noun. we found that approximatively 27.5%
of validation examples and 29.6% of test examples
contain an answer that has never been predicted in the
training set. these numbers are considerably lower
for the cbt-cn, for which only 2.5% and 4.6% of
validation and test examples respectively contain an
answer that has not been previously seen.

ensembles fusing multiple models generally
achieves better generalization. in order to investigate
whether this could help achieving better held-out per-
formance on cbt-ne, we adopt a simple strategy
and average the predictions of 5 models trained with
different random seeds (line 9). in this case, our en-
semble outperforms the as reader ensemble both on
cbt-cn and cbt-ne setting new state-of-the-art for
this task. on cbt-ne, it achieves a validation and
test performance of 76.9 and 72.0 accuracy points
respectively (line 9). on cbt-cn it shows additional

# model

1 word distance model 1
2
deep lstm reader 1
attentive reader 1
3
4
impatient reader 1

5 memnns (window memory) 2
6 memnns (window memory + self sup.) 2
7
8

as reader 3
ours

9

stanford ar (with glove) 4

10 memnns (ensemble) 2
11 as reader (ensemble) 3
13 ours (ensemble)

id98

valid

50.5
55.0
61.6
61.8

50.8
63.4
68.6
72.6

72.4

66.2
73.9
75.2

test

50.9
57.0
63.0
63.8

60.6
66.8
69.9
73.3

72.4

69.4
75.4
76.1

table 3: results on the id98 datasets. results marked with 1 are from (hermann et al., 2015), 2 from (hill et al., 2015),
3 from (kadlec et al., 2016) and 4 from (chen et al., 2016).

improvements over the single model and sits at 74.1
on validation and 71.0 on test.
fixed query attention in order to measure the im-
pact of the query attention step in our model, we
constrain the query attention weights qi,t to be uni-
form, i.e. qi,t = 1/|q|, for all t = 1, . . . , t (line
6). this corresponds to    xing the query represen-
tation to the average pooling over the bidirectional
query encodings and is similar in spirit to previous
work (kadlec et al., 2016; chen et al., 2016). by
comparing line 6 and line 7, we see that the query
attention mechanism allows improvements up to 2.3
points in validation and 4.9 points in test with re-
spect to    xing the query representation throughout
the search process. a similar scenario was observed
on the id98 dataset.

5.2 id98
table 3 reports our results on the id98 dataset. we
compare our model with a simple word distance
model, the three neural approaches from (hermann et
al., 2015) (deep lstm reader, attentive reader and
impatient reader), and with the as reader (kadlec
et al., 2016).
main result the results show that our model (line
8) improves state-of-the-art accuracy by 4 percent ab-
solute on validation and 3.4 on test with respect to the
most recent published result (as reader) (line 7). we

also report the very recent results of the stanford ar
system that came to our attention during the write-
up of this article (chen et al., 2016) (line 9). our
model slightly improves over this strong baseline by
0.2 percent on validation and 0.9 percent on test. we
note that the latter comparison may be in   uenced by
different training and initialization strategies. first,
stanford as uses glove embeddings (pennington et
al., 2014), pre-trained from a large external corpus.
second, the system normalizes the output probabili-
ties only over the candidate answers in the document.
ensembles we also report the results using ensem-
bled models. similarly to the single model case, our
ensembles achieve state-of-the-art test performance
of 75.2 and 76.1 on validation and test respectively,
outperforming previously published results.
category analysis
(chen et al., 2016) classi   ed a
sample of 100 id98 stories based on the type of in-
ference required to guess the answer. categories that
only require local context matching around the place-
holder and the answer in the text are exact match,
id141, and partial clue, while those which re-
quire higher reasoning skills are multiple sentences
and ambiguous. for example, in exact match exam-
ples, the question placeholder and the answer in the
document share several neighboring exact words.

category-speci   c results are reported in table 5.2.
local context categories generally seem to be easily

category
exact match
id141
partial clue
multiple sent.
ambig. / hard
coref. errors
all

stanford ar
(100.0%)
13
(95.1%)
39
17
(89.5%)
(50.0%)
1
(5.9%)
1
3
(37.5%)
74

13
39
16
1
5
3
77

ours
(100.0%)
(95.1%)
(84.2%)
(50.0%)
(29.4%)
(37.5%)

table 4: per-category performance of the stanford ar
and our system. the    rst three categories require local
context matching, the next two global context matching
and coreference errors are unanswerable questions (chen
et al., 2016).

tackled by the neural models, which perform simi-
larly. it seems that the iterative alternating attention
id136 is better able to solve more dif   cult exam-
ples such as ambiguous/hard. one hypothesis is that,
in contrast to stanford ar, which uses only one    xed-
query attention step, our iterative attention may better
explore the documents and queries. finally, coref-
erence errors (   25% of the corpus) includes exam-
ples with critical coreference resolution errors which
may make the questions    unanswerable   . this is a
barrier to achieving accuracies considerably above
75% (chen et al., 2016). if this estimate is accurate,
our ensemble model (76.1%) may be approaching
near-optimal performance on this dataset.

5.3 discussion
we inspect the query and document attention weights
for an example article from the id98 dataset. the
title of the article is    dante turns in his grave as ital-
ian language declines   , and it discusses the decline
of italian language in schools. the plot is shown in
figure 5.2, where locations attended to in the query
and document are in the left and right column re-
spectively. each row corresponds to an id136
timestep 1     t     8. at the    rst step, the query at-
tention focuses on the placeholder token, as its local
context is generally important to discriminate the an-
swer. the model    rst focuses on @entity148, which
corresponds to    greek    in this article. at this point,
the model is still uncertain about other possible loca-
tions in the document (we can observe small weights

figure 2: visualization of the alternated attention mecha-
nism for an article in id98, treating about the decline of
the italian language in schools. the title of the plot is the
query. each row correspond to a timestep. the target is
@entity3 which corresponds to the word    italian   .

across document locations). at t = 2, the query
attention moves towards    schools    and the model
hesitates between    italian    and    european union   
(@entity28, see step 3), both of which may satisfy
the query. at step 3, the most likely candidates are
   european union    and    rome    (@entity159). as the
timesteps unfold, the model learns that    needs    may
be important to infer the correct entity, i.e.    italian   .
the query sits on the same attended location, while
the document attention evolves to become more con-
   dent about the answer.

we    nd that, across cbt and id98 examples, the
query attention wanders near or focuses on the place-
holder location, attempting to discriminate its identity
using only local context. for these particular datasets,
the majority of questions can be answered after at-
tending only to the words directly neighbouring the
placeholder. this aligns with the    ndings of (chen
et al., 2016) concerning id98, which state that the re-
quired reasoning and id136 levels for this dataset
are quite simple. it would be worthwhile to formu-
late a dataset in which the placeholder is harder to
infer using only local neighboring words, and thereby
necessitates deeper query exploration.

finally, across this work we    xed the number of
id136 steps t . we found that using 8 timesteps
works well consistently across the tested datasets.
however, we hypothesize that more (fewer) time-
steps would bene   t harder (easier) examples. a

0.00.5schools@placeholder0.00.9schoolsneeds0.00.8schoolsneeds0.00.5needsschools0.00.5needsschools0.00.5needsschools0.00.5needsschools024681012query attention0.00.5needsschools0.00.1@entity148@entity30.00.2@entity30.00.1@entity28@entity1590.00.2@entity3@entity1590.00.3@entity3@entity60.00.5@entity3@entity1590.00.3@entity3@entity302004006008001000document attention0.00.2@entity3@entity3the approach to teaching @entity6 in @placeholder schools needs a makeover , she saysstraight-forward extension of the model would be
to dynamically select the number of id136 steps
conditioned on each example.

6 related works

neural id12 have been applied recently
to a sm  org  asbord of machine learning and natural
language processing problems. these include, but
are not limited to, handwriting recognition (graves,
2013), digit classi   cation (mnih et al., 2014), ma-
chine translation (bahdanau et al., 2015), question
answering (sukhbaatar et al., 2015; hermann et al.,
2015) and id134 (xu et al., 2015). in
general, id12 keep a memory of states
that can be accessed at will by learned attention poli-
cies. in our case, the memory is represented by the
set of document and query contextual encodings.

our model is closely related to (sukhbaatar et al.,
2015; kumar et al., 2015; hermann et al., 2015;
kadlec et al., 2016; hill et al., 2015), which were
also applied to id53. the pointer-style
attention mechanism that we use to perform the    nal
answer prediction has been proposed by (kadlec et
al., 2016), which in turn was based on the earlier
id193 of (vinyals et al., 2015). however,
differently from our work, (kadlec et al., 2016) per-
form only one attention step and embed the query
into a single vector representation, corresponding to
the concatenation of the last state of the forward and
backward gru networks. to our knowledge, embed-
ding the query into a single vector representation is a
choice that is shared by most machine reading com-
prehension models. in our model, the repeated, tight
integration between query attention and document
attention allows the model to explore dynamically
which parts of the query are most important to predict
the answer, and then to focus on the parts of the doc-
ument that are most salient to the currently-attended
query components.

a similar attempt in attending different compo-
nents of the query may be found in (hermann et al.,
2015). in that model, the document is processed once
for each query word. this can be computationally
intractable for large documents, since it involves un-
rolling a bidirectional recurrent neural network over
the entire document multiple times. in contrast, our
model only estimates query and document encodings
once and can learn how to attend different parts of

those encodings in a    xed number of steps. the infer-
ence network is responsible for making sense of the
current attention step with respect to what has been
gathered before. in addition to achieving state-of-
the-art performance, this technique may also prove
to be more scalable than alternative query attention
models.

finally, our iterative id136 process shares
similarities to the iterative hops in memory net-
works (sukhbaatar et al., 2015; hill et al., 2015).
in that model, the query representation is updated
iteratively from hop to hop, although its different
components are not attended to separately. moreover,
we substitute the simple linear update with a gru
network. the gating mechanism of the gru network
made it possible to use multiple steps of attention
and to propagate the learning signal effectively back
through to the    rst timestep.

7 conclusion

we presented an iterative neural attention model and
applied it to machine comprehension tasks. our ar-
chitecture deploys a novel alternating attention mech-
anism, and tightly integrates successful ideas from
past works in id17 to ob-
tain state-of-the-art results on three datasets. the
iterative alternating attention mechanism continually
re   nes its view of the query and document while ag-
gregating the information required to answer a query.
multiple future research directions may be envi-
sioned. we plan to dynamically select the optimal
number of id136 steps required for each example.
moreover, we suspect that shifting towards stochastic
attention should permit us to learn more interesting
search policies. finally, we believe that our model is
fully general and may be applied in a straightforward
way to other tasks such as information retrieval.

references

dzmitry bahdanau, kyunghyun cho, and yoshua bengio.
2015. id4 by jointly learning to
align and translate. in proc. iclr.

f. bastien, p. lamblin, r. pascanu, j. bergstra, i. j. good-
fellow, a. bergeron, n. bouchard, and y. bengio. 2012.
theano: new features and speed improvements. deep
learning and unsupervised id171 nips
2012 workshop.

sainbayar sukhbaatar, jason weston, rob fergus, et al.
2015. end-to-end memory networks. in proc. of nips,
pages 2431   2439.

wilson l taylor. 1953. cloze procedure: a new tool for
measuring readability. journalism and mass commu-
nication quarterly, 30.

oriol vinyals, meire fortunato, and navdeep jaitly. 2015.
id193. in advances in neural information
processing systems, pages 2674   2682.

kelvin xu, jimmy ba, ryan kiros, kyunghyun cho,
aaron courville, ruslan salakhudinov, rich zemel,
and yoshua bengio. 2015. show, attend and tell: neu-
ral image id134 with visual attention. in
proc. of icml, pages 2048   2057.

danqi chen, jason bolton, and christopher d. manning.
2016. a thorough examination of the id98 / daily mail
reading comprehension task. in proc. of acl.

kyunghyun cho, bart van merrienboer, c   aglar g  ulc  ehre,
dzmitry bahdanau, fethi bougares, holger schwenk,
and yoshua bengio. 2014. learning phrase representa-
tions using id56 encoder-decoder for statistical machine
translation. in proc. of emnlp, pages 1724   1734.

franc  ois chollet. 2015. keras. https://github.

com/fchollet/keras.

i. goodfellow, y. bengio, and a. courville. 2016. deep

learning. book in preparation for mit press.

a. graves. 2013. generating sequences with recurrent

neural networks. corr, abs/1308.0850.

karl moritz hermann, tomas kocisky, edward grefen-
stette, lasse espeholt, will kay, mustafa suleyman,
and phil blunsom. 2015. teaching machines to read
and comprehend. in proc. of nips, pages 1684   1692.
felix hill, antoine bordes, sumit chopra, and jason
weston. 2015. the goldilocks principle: reading
children   s books with explicit memory representations.
arxiv preprint arxiv:1511.02301.

rudolf kadlec, martin schmid, ondrej bajgar, and
2016. text understanding with
arxiv preprint

jan kleindienst.
the attention sum reader network.
arxiv:1603.01547.

diederik p. kingma and jimmy ba. 2014. adam: a

method for stochastic optimization. proc. of iclr.

ankit kumar, ozan irsoy, jonathan su, james bradbury,
robert english, brian pierce, peter ondruska, ishaan
gulrajani, and richard socher. 2015. ask me any-
thing: dynamic memory networks for natural language
processing. arxiv preprint arxiv:1506.07285.

thang luong, hieu pham, and christopher d. manning.
2015. effective approaches to attention-based neural
machine translation. in proc. emnlp.

volodymyr mnih, nicolas heess, alex graves, et al. 2014.
recurrent models of visual attention. in proc. of nips,
pages 2204   2212.

r. pascanu, t. mikolov, and y. bengio. 2013. on the
dif   culty of training recurrent neural networks. in proc.
of icml.

jeffrey pennington, richard socher, and christopher d
manning. 2014. glove: global vectors for word
representation. proc. emnlp, 12.

andrew m saxe, james l mcclelland, and surya ganguli.
2013. exact solutions to the nonlinear dynamics of
learning in deep linear neural networks. arxiv preprint
arxiv:1312.6120.

n. srivastava, g. hinton, a. krizhevsky, i. sutskever, and
r. salakhutdinov. 2014. dropout: a simple way to
prevent neural networks from over   tting. jmlr, 15(1).

