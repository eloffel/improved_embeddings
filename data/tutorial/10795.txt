google   s multilingual id4 system:

enabling zero-shot translation

melvin johnson, mike schuster, quoc v. le, maxim krikun, yonghui wu,

zhifeng chen, nikhil thorat

melvinp,schuster,qvl,krikun,yonghui,zhifengc,nsthorat@google.com

7
1
0
2

 

g
u
a
1
2

 

 
 
]
l
c
.
s
c
[
 
 

2
v
8
5
5
4
0

.

1
1
6
1
:
v
i
x
r
a

fernanda vi  gas, martin wattenberg, greg corrado,

macdu    hughes, je   rey dean

abstract

we propose a simple solution to use a single id4 (id4) model to translate
between multiple languages. our solution requires no changes to the model architecture from a standard
id4 system but instead introduces an arti   cial token at the beginning of the input sentence to specify
the required target language. the rest of the model, which includes an encoder, decoder and attention
module, remains unchanged and is shared across all languages. using a shared wordpiece vocabulary, our
approach enables multilingual id4 using a single model without any increase in parameters, which is
signi   cantly simpler than previous proposals for multilingual id4. on the wmt   14 benchmarks, a single
multilingual model achieves comparable performance for english   french and surpasses state-of-the-art
results for english   german. similarly, a single multilingual model surpasses state-of-the-art results
for french   english and german   english on wmt   14 and wmt   15 benchmarks, respectively. on
production corpora, multilingual models of up to twelve language pairs allow for better translation of
many individual pairs. in addition to improving the translation quality of language pairs that the model
was trained with, our models can also learn to perform implicit bridging between language pairs never
seen explicitly during training, showing that id21 and zero-shot translation is possible for
neural translation. finally, we show analyses that hints at a universal interlingua representation in our
models and show some interesting examples when mixing languages.

introduction

1
end-to-end id4 (id4) [27, 2, 5] is an approach to machine translation that has
rapidly gained adoption in many large-scale settings [31, 29, 6]. almost all such systems are built for a single
language pair     so far there has not been a su   ciently simple and e   cient way to handle multiple language
pairs using a single model without making signi   cant changes to the basic id4 architecture.

in this paper we introduce a simple method to translate between multiple languages using a single model,
taking advantage of multilingual data to improve id4 for all languages involved. our method requires no
change to the traditional id4 model architecture. instead, we add an arti   cial token to the input sequence
to indicate the required target language, a simple amendment to the data only. all other parts of the system
    encoder, decoder, attention, and shared wordpiece vocabulary as described in [29]     stay exactly the same.
this method has several attractive bene   ts:

    simplicity: since no changes are made to the architecture of the model, scaling to more languages is
trivial     any new data is simply added, possibly with over- or under-sampling such that all languages
are appropriately represented, and used with a new token if the target language changes. since no
changes are made to the training procedure, the mini-batches for training are just sampled from the
overall mixed-language training data just like for the single-language case. since no a-priori decisions
about how to allocate parameters for di   erent languages are made the system adapts automatically
to use the total number of parameters e   ciently to minimize the global loss. a multilingual model
architecture of this type also simpli   es production deployment signi   cantly since it can cut down the

1

total number of models necessary when dealing with multiple languages. note that at google, we
support a total of over 100 languages as source and target, so theoretically 1002 models would be
necessary for the best possible translations between all pairs, if each model could only support a single
language pair. clearly this would be problematic in a production environment. even when limiting
to translating to/from english only, we still need over 200 models. finally, batching together many
requests from potentially di   erent source and target languages can signi   cantly improve e   ciency of
the serving system. in comparison, an alternative system that requires language-dependent encoders,
decoders or attention modules does not have any of the above advantages.

    low-resource language improvements: in a multilingual id4 model, all parameters are implicitly
shared by all the language pairs being modeled. this forces the model to generalize across language
boundaries during training. it is observed that when language pairs with little available data and
language pairs with abundant data are mixed into a single model, translation quality on the low resource
language pair is signi   cantly improved.

    zero-shot translation: a surprising bene   t of modeling several language pairs in a single model
is that the model can learn to translate between language pairs it has never seen in this combina-
tion during training (zero-shot translation)     a working example of id21 within neural
translation models. for example, a multilingual id4 model trained with portuguese   english and
english   spanish examples can generate reasonable translations for portuguese   spanish although it
has not seen any data for that language pair. we show that the quality of zero-shot language pairs can
easily be improved with little additional data of the language pair in question (a fact that has been
previously con   rmed for a related approach which is discussed in more detail in the next section).

in the remaining sections of this paper we    rst discuss related work and explain our multilingual system
architecture in more detail. then, we go through the di   erent ways of merging languages on the source and
target side in increasing di   culty (many-to-one, one-to-many, many-to-many), and discuss the results of a
number of experiments on wmt benchmarks, as well as on some of google   s large-scale production datasets.
we present results from id21 experiments and show how implicitly-learned bridging (zero-shot
translation) performs in comparison to explicit bridging (i.e.,    rst translating to a common language like
english and then translating from that common language into the desired target language) as typically used
in machine translation systems. we describe visualizations of the new system in action, which provide early
evidence of shared semantic representations (interlingua) between languages. finally we also show some
interesting applications of mixing languages with examples: code-switching on the source side and weighted
target language mixing, and suggest possible avenues for further exploration.

2 related work
interlingual translation is a classic method in machine translation [21, 14]. despite its distinguished history,
most practical applications of machine translation have focused on individual language pairs because it was
simply too di   cult to build a single system that translates reliably from and to several languages.

id4 (id4) [15] was shown to be a promising end-to-end learning approach in

[27, 2, 5] and was quickly extended to multilingual machine translation in various ways.

an early attempt is the work in [7], where the authors modify an attention-based encoder-decoder approach
to perform multilingual id4 by adding a separate decoder and attention mechanism for each target language.
in [17] multilingual training in a multitask learning setting is described. this model is also an encoder-decoder
network, in this case without an attention mechanism. to make proper use of multilingual data, they extend
their model with multiple encoders and decoders, one for each supported source and target language. in [3]
the authors incorporate multiple modalities other than text into the encoder-decoder framework.

several other approaches have been proposed for multilingual training, especially for low-resource language
pairs. for instance, in [32] a form of multi-source translation was proposed where the model has multiple
di   erent encoders and di   erent attention mechanisms for each source language. however, this work requires
the presence of a multi-way parallel corpus between all the languages involved, which is di   cult to obtain in
practice. most closely related to our approach is [8] in which the authors propose multi-way multilingual
id4 using a single shared attention mechanism but multiple encoders/decoders for each source/target

2

language. recently in [16] a id98-based character-level encoder was proposed which is shared across multiple
source languages. however, this approach can only perform translations into a single target language.

our approach is related to the multitask learning framework [4]. despite its promise, this framework
has seen limited practical success in real world applications. in id103, there have been many
successful reports of modeling multiple languages using a single model (see [22] for an extensive reference and
references therein). multilingual language processing has also shown to be successful in domains other than
translation [13, 28].

there have been other approaches similar to ours in spirit, but used for very di   erent purposes. in [25],
the id4 framework has been extended to control the politeness level of the target translation by adding a
special token to the source sentence. the same idea was used in [30] to add the distinction between    active   
and    passive    tense to the generated target sentence.

our method has an additional bene   t not seen in other systems: it gives the system the ability to perform
zero-shot translation, meaning the system can translate from a source language to a target language without
having seen explicit examples from this speci   c language pair during training. zero-shot translation was the
direct goal of [10]. although they were not able to achieve this direct goal, they were able to do what they call
   zero-resource    translation by using their pre-trained multi-way multilingual model and later    ne-tuning it
with pseudo-parallel data generated by the model. it should be noted that the di   erence between    zero-shot   
and    zero-resource    translation is the additional    ne-tuning step which is required in the latter approach.

to the best of our knowledge, our work is the    rst to validate the use of true multilingual translation
using a single encoder-decoder model, and is incidentally also already used in a production setting. it is also
the    rst work to demonstrate the possibility of zero-shot translation, a successful example of id21
in machine translation, without any additional steps.

3 system architecture for multilingual translation
the multilingual model architecture (see figure 1) is identical to google   s id4
(gid4) system [29] (with the optional addition of direct connections between encoder and decoder layers
which we have used for some of our experiments, see description of figure 1) and we refer to that paper for a
detailed description.

to be able to make use of multilingual data within a single system, we propose one simple modi   cation to
the input data, which is to introduce an arti   cial token at the beginning of the input sentence to indicate the
target language the model should translate to. for instance, consider the following english   spanish pair of
sentences:
hello, how are you? -> hola,   c  mo est  s?
it will be modi   ed to:
<2es> hello, how are you? -> hola,   c  mo est  s?
to indicate that spanish is the target language. note that we don   t specify the source language     the model
will learn this automatically. not specifying the source language has the potential disadvantage that words
with the same spelling but di   erent meaning from di   erent source languages can be ambiguous to translate,
but the advantage is that it is simpler and we can handle input with code-switching. we    nd that in almost
all cases context provides enough language evidence to produce the correct translation.

after adding the token to the input data, we train the model with all multilingual data consisting of
multiple language pairs at once, possibly after over- or undersampling some of the data to adjust for the
relative ratio of the language data available. to address the issue of translation of unknown words and to
limit the vocabulary for computational e   ciency, we use a shared wordpiece model
[23] across all the source
and target data used for training, usually with 32,000 word pieces. the segmentation algorithm used here is
very similar (with small di   erences) to byte-pair-encoding (bpe) which was described in [12] and was also
used in [26] for machine translation. our training system is implemented in tensor   ow [1]. all training is
carried out similar to [29] and implemented in tensorflow [1].

in summary, this approach is the simplest among the alternatives that we are aware of. during training
and id136, we only need to add one additional token to each sentence of the source data to specify the
desired target language.

3

figure 1: the model architecture of the multilingual gid4 system. in addition to what is described in [29],
our input has an arti   cial token to indicate the required target language. in this example, the token    <2es>   
indicates that the target sentence is in spanish, and the source sentence is reversed as a processing step. for
most of our experiments we also used direct connections between the encoder and decoder although we later
found out that the e   ect of these connections is negligible (however, once you train with those they have to
be present for id136 as well). the rest of the model architecture is the same as in [29].

4 experiments and results
in this section, we apply our proposed method to train multilingual models in several di   erent con   gurations.
since we can have models with either single or multiple source/target languages we test three interesting
cases for mapping languages:

    many source languages to one target language (many to one),
    one source language to many target languages (one to many), and
    many source languages to many target languages (many to many).

as already discussed in section 2, other models have been used to explore some of these cases already, but
for completeness we apply our technique to these interesting use cases again to give a full picture of the
e   ectiveness of our approach.

we will also show results and discuss bene   ts of bringing together many (un)related languages in a single
large-scale model trained on production data. finally, we will present our    ndings on zero-shot translation
where the model learns to translate between pairs of languages for which no explicit parallel examples existed
in the training data, and show results of experiments where adding additional data improves zero-shot
translation quality further.

4.1 datasets, training protocols and id74
for wmt, we train our models on the wmt   14 english(en)   french(fr) and the wmt   14 english   german(de)
datasets.
in both cases, we use newstest2014 as the test sets to be able to compare against previous
work [19, 24, 31, 29]. for wmt fr   en and de   en we use newstest2014 and newstest2015 as test sets.
despite training on wmt   14 data, which is somewhat smaller than wmt   15, we test our de   en model on
newstest2015, similar to [18]. the combination of newstest2012 and newstest2013 is used as the development
set.

4

in addition to wmt, we also evaluate the multilingual approach on some google-internal large-scale
production datasets representing a wide spectrum of languages with very distinct linguistic properties:
english   japanese(ja), english   korean(ko), english   spanish(es), and english   portuguese(pt). these
datasets are two to three orders of magnitude larger than the wmt datasets.

our training protocols are mostly identical to those described in [29] and we refer the reader to the
detailed description in that paper. we    nd that some multilingual models take a little more time to train
than single language pair models, likely because each language pair is seen only for a fraction of the training
process. depending on the number of languages a full training can take up to 10m steps and 3 weeks to
converge (on roughly 100 gpus). we use larger batch sizes with a slightly higher initial learning rate to
speed up the convergence of these models.

we evaluate our models using the standard id7 score metric and to make our results comparable
to [27, 19, 31, 29], we report tokenized id7 score as computed by the multi-id7.pl script, which can be
downloaded from the public implementation of moses.1

to test the in   uence of varying amounts of training data per language pair we explore two strategies when
building multilingual models: a) where we oversample the data from all language pairs to be of the same
size as the largest language pair, and b) where we mix the data as is without any change. the wordpiece
model training is done after the optional oversampling taking into account all the changed data ratios. for
the wmt models we report results using both of these strategies. for the production models, we always
balance the data such that the ratios are equal.

one bene   t of the way we share all the components of the model is that the mini-batches can contain data
from di   erent language pairs during training and id136, which are typically just random samples from
the    nal training and test data distributions. this is a simple way of preventing    catastrophic forgetting   
- tendency for knowledge of previously learnt task(s) (e.g.
language pair a) to be abruptly forgotten as
information relevant to the current task (e.g. language pair b) is incorporated [11]. other approaches to
multilingual translation require complex update scheduling mechanisms to prevent this e   ect [9].

4.2 many to one
in this section we explore having multiple source languages and a single target language     the simplest
way of combining language pairs. since there is only a single target language no additional source token is
required. we perform three sets of experiments:

    the    rst set of experiments is on the wmt datasets, where we combine german   english and
french   english to train a multilingual model. our baselines are two single language pair models:
german   english and french   english trained independently. we perform these experiments once
with oversampling and once without.

    the second set of experiments is on production data where we combine japanese   english and

korean   english, with oversampling. the baselines are two single language pair models: japanese   english
and korean   english trained independently.

    finally, the third set of experiments is on production data where we combine spanish   english and
portuguese   english, with oversampling. the baselines are again two single language pair models
trained independently.

all of the multilingual and single language pair models have the same total number of parameters as the
baseline id4 models trained on a single language pair (using 1024 nodes, 8 lstm layers and a shared
wordpiece model vocabulary of 32k, a total of 255m parameters per model). a side e   ect of this equal choice
of parameters is that it is presumably unfair to the multilingual models as the number of parameters available
per language pair is reduced by a factor of n compared to the single language pair models, if n is the
number of language pairs combined in the multilingual model. the multilingual model also has to handle the
combined vocabulary of all the single models. we chose to keep the number of parameters constant for all
models to simplify experimentation. we relax this constraint for some of the large-scale experiments shown
further below.

1http://www.statmt.org/moses/

5

table 1: many to one: id7 scores on various data sets for single language pair and multilingual models.

model
wmt german   english (oversampling)
wmt french   english (oversampling)
wmt german   english (no oversampling)
wmt french   english (no oversampling)
prod japanese   english
prod korean   english
prod spanish   english
prod portuguese   english

single multi
30.43
35.50
30.43
35.50
23.41
25.42
38.00
44.40

di   
30.59 +0.16
35.73 +0.23
30.54 +0.11
36.77 +1.27
23.87 +0.46
25.47 +0.05
38.73 +0.73
45.19 +0.79

the results are presented in table 1. for all experiments the multilingual models outperform the baseline
single systems despite the above mentioned disadvantage with respect to the number of parameters available
per language pair. one possible hypothesis explaining the gains is that the model has been shown more
english data on the target side, and that the source languages belong to the same language families, so the
model has learned useful generalizations.
for the wmt experiments, we obtain a maximum gain of +1.27 id7 for french   english. note that
the results on both the wmt test sets are better than other published state-of-the-art results for a single
model, to the best of our knowledge. on the production experiments, we see that the multilingual models
outperform the baseline single systems by as much as +0.8 id7.

4.3 one to many
in this section, we explore the application of our method when there is a single source language and multiple
target languages. here we need to prepend the input with an additional token to specify the target language.
we perform three sets of experiments almost identical to the previous section except that the source and
target languages have been reversed.

table 2 summarizes the results when performing translations into multiple target languages. we see that
the multilingual models are comparable to, and in some cases outperform, the baselines, but not always. we
obtain a large gain of +0.9 id7 for english   spanish. unlike the previous set of results, there are less
signi   cant gains in this set of experiments. this is perhaps due to the fact that the decoder has a more
di   cult time translating into multiple target languages which may even have di   erent scripts, which are
combined into a single shared wordpiece vocabulary. note that even for languages with entirely di   erent
scripts (e.g. korean and japanese) there is signi   cant overlap in wordpieces when real data is used, as often
numbers, dates, names, websites, punctuation etc. are actually using a shared script (ascii).

table 2: one to many: id7 scores on various data sets for single language pair and multilingual models.

model
wmt english   german (oversampling)
wmt english   french (oversampling)
wmt english   german (no oversampling)
wmt english   french (no oversampling)
prod english   japanese
prod english   korean
prod english   spanish
prod english   portuguese

single multi
24.67
38.95
24.67
38.95
23.66
19.75
34.50
38.40

di   
24.97 +0.30
36.84
-2.11
-2.06
22.61
38.16
-0.79
23.73 +0.07
19.58
-0.17
35.40 +0.90
38.63 +0.23

we observe that oversampling helps the smaller language pair (en   de) at the cost of lower quality for
the larger language pair (en   fr). the model without oversampling achieves better results on the larger
language compared to the smaller one as expected. we also    nd that this e   ect is more prominent on smaller

6

datasets (wmt) and much less so on our much larger production datasets.

4.4 many to many
in this section, we report on experiments when there are multiple source languages and multiple target
languages within a single model     the most di   cult setup. since multiple target languages are given, the
input needs to be prepended with the target language token as above.

the results are presented in table 3. we see that the multilingual production models with the same
model size and vocabulary size as the single language models are quite close to the baselines     the average
relative loss in id7 score across all experiments is only approximately 2.5%.

table 3: many to many: id7 scores on various data sets for single language pair and multilingual models.

model
wmt english   german (oversampling)
wmt english   french (oversampling)
wmt german   english (oversampling)
wmt french   english (oversampling)
wmt english   german (no oversampling)
wmt english   french (no oversampling)
wmt german   english (no oversampling)
wmt french   english (no oversampling)
prod english   japanese
prod english   korean
prod japanese   english
prod korean   english
prod english   spanish
prod english   portuguese
prod spanish   english
prod portuguese   english

di   
single multi
-0.18
24.49
24.67
-2.72
36.23
38.95
-0.59
29.84
30.43
-0.61
35.50
34.89
-2.75
21.92
24.67
-1.50
37.45
38.95
29.22
30.43
-1.21
35.93 +0.43
35.50
-0.54
23.12
23.66
-0.02
19.73
19.75
-0.55
22.86
23.41
25.42
24.76
-0.66
34.69 +0.19
34.50
-1.15
37.25
38.40
-0.35
37.65
38.00
44.40
44.02
-0.38

on the wmt datasets, we once again explore the impact of oversampling the smaller language pairs. we
notice a similar trend to the previous section in which oversampling helps the smaller language pairs at the
expense of the larger ones, while not oversampling seems to have the reverse e   ect.

although there are some signi   cant losses in quality from training many languages jointly using a model
with the same total number of parameters as the single language pair models, these models reduce the total
complexity involved in training and productionization. additionally, these multilingual models have more
interesting advantages as will be discussed in more detail in the sections below.

4.5 large-scale experiments
this section shows the result of combining 12 production language pairs having a total of 3b parameters
(255m per single model) into a single multilingual model. a range of multilingual models were trained,
starting from the same size as a single language pair model with 255m parameters (1024 nodes) up to 650m
parameters (1792 nodes). as above, the input needs to be prepended with the target language token. we
oversample the examples from the smaller language pairs to balance the data as explained above.

the results for single language pair models versus multilingual models with increasing numbers of
parameters are summarized in table 4. we    nd that the multilingual models are on average worse than the
single models (about 5.6% to 2.5% relative depending on size, however, some actually get better) and as
expected the average di   erence gets smaller when going to larger multilingual models. it should be noted that
the largest multilingual model we have trained has still about    ve times less parameters than the combined
single models.

the multilingual model also requires only roughly 1/12-th of the training time (or computing resources)
to converge compared to the combined single models (total training time for all our models is still in the

7

order of weeks). another important point is that since we only train for a little longer than a standard single
model, the individual language pairs can see as little as 1/12-th of the data in comparison to their single
language pair models but still produce satisfactory results.

table 4: large-scale experiments: id7 scores for single language pair and multilingual models.

model
#nodes
#params

prod english   japanese
prod english   korean
prod japanese   english
prod korean   english
prod english   spanish
prod english   portuguese
prod spanish   english
prod portuguese   english
prod english   german
prod english   french
prod german   english
prod french   english

ave di   
vs single

1536

1280

single multi multi multi multi
1024
1024
1792
255m 367m 499m 650m
3b
23.66
21.10
21.70
18.28
18.41
19.75
23.18
21.62
23.41
24.67
22.87
25.42
34.50
34.25
34.70
37.92
37.35
38.40
37.45
36.04
38.00
43.87
42.53
44.40
26.43
23.15
24.01
34.81
34.00
35.37
32.32
31.17
31.77
35.52
34.40
36.47
-1.72
-0.76
-5.6% -4.7% -3.1% -2.5%

21.72
18.30
22.51
24.00
34.77
37.80
37.26
43.64
23.63
34.91
32.24
35.35
-0.95

21.17
18.36
22.03
23.46
34.40
37.42
36.50
42.82
23.77
34.19
31.65
34.56
-1.43

-
-

the results are summarized in table 4. we    nd that the multilingual model is reasonably close to the best
single models and in some cases even achieves comparable quality. it is remarkable that a single model with
255m parameters can do what 12 models with a total of 3b parameters would have done. the multilingual
model also requires one twelfth of the training time and computing resources to converge. another important
point is that since we only train for a little longer than the single models, the individual language pairs can
see as low as one twelfth of the data in comparison to their single language pair models. again we note that
the comparison below is somewhat unfair for the multilingual model and we expect a larger model trained on
all available data will likely achieve comparable or better quality than the baselines.

in summary, multilingual id4 enables us to group languages with little or no loss in quality while having

the bene   ts of better training e   ciency, smaller number of models, and easier productionization.

4.6 zero-shot translation
the most straight-forward approach of translating between languages where no or little parallel data is
available is to use explicit bridging, meaning to translate to an intermediate language    rst and then to
translate to the desired target language. the intermediate language is often english as xx   en and en   yy
data is more readily available. the two potential disadvantages of this approach are: a) total translation
time doubles, b) the potential loss of quality by translating to/from the intermediate language.

an interesting bene   t of our approach is that it allows to perform directly implicit bridging (zero-shot
translation) between a language pair for which no explicit parallel training data has been seen without
any modi   cation to the model. obviously, the model will only be able to do zero-shot translation between
languages it has seen individually as source and target languages during training at some point, not for
entirely new ones.
to demonstrate this we will use two multilingual models     a model trained with examples from two
di   erent language pairs, portuguese   english and english   spanish (model 1), and a model trained with
examples from four di   erent language pairs, english   portuguese and english   spanish (model 2). we show
that both of these models can generate reasonably good quality portuguese   spanish translations (id7
scores above 20) without ever having seen portuguese   spanish data during training. to our knowledge this
is the    rst demonstration of true multilingual zero-shot translation. as with the previous multilingual models,
both of these models perform comparable to or even slightly better than the baseline single language pair

8

models. note that besides the pleasant fact that zero-shot translation works at all it has also the advantage
of halving decoding speed as no explicit bridging through a third language is necessary when translating from
portuguese to spanish.
table 5 summarizes our results for the portuguese   spanish translation experiments. rows (a) and
(b) report the performance of the phrase-based machine translation (pbmt) system and the id4 system
through bridging (translation from portuguese to english and translating the resulting english sentence
to spanish). it can be seen that the id4 system outperforms the pbmt system by close to 2 id7
points. note that model 1 and model 2 can be bridged within themselves to perform portuguese   spanish
translation. we do not report these numbers since they are similar to the performance of bridging with two
individual single language pair id4 models. for comparison, we built a single id4 model on all available
portuguese   spanish parallel sentences (see (c) in table 5).

table 5: portuguese   spanish id7 scores using various models.

model

pbmt bridged
id4 bridged
id4 pt   es

(a)
(b)
(c)
(d)
(e)
(f) model 2 + incremental training

model 1 (pt   en, en   es)
model 2 (en   {es, pt})

zero-shot id7
28.99
30.91
31.50
21.62
24.75
31.77

no
no
no
yes
yes
no

the most interesting observation is that both model 1 and model 2 can perform zero-shot translation
with reasonable quality (see (d) and (e)) compared to the initial expectation that this would not work at
all. note that model 2 outperforms model 1 by close to 3 id7 points although model 2 was trained with
four language pairs as opposed to with only two for model 1 (with both models having the same number of
total parameters). in this case the addition of spanish on the source side and portuguese on the target side
helps pt   es zero-shot translation (which is the opposite direction of where we would expect it to help). we
believe that this unexpected e   ect is only possible because our shared architecture enables the model to learn
a form of interlingua between all these languages. we explore this hypothesis in more detail in section 5.
finally we incrementally train zero-shot model 2 with a small amount of true pt   es parallel data (an
order of magnitude less than table 5 (c)) and obtain the best quality and half the decoding time compared
to explicit bridging (table 5 (b)). the resulting model cannot be called zero-shot anymore since some true
parallel data has been used to improve it. overall this shows that the proposed approach of implicit bridging
using zero-shot translation via multilingual models can serve as a good baseline for further incremental
training with relatively small amounts of true parallel data of the zero-shot direction. this result is especially
signi   cant for non-english low-resource language pairs where it might be easier to obtain parallel data with
english but much harder to obtain parallel data for language pairs where neither the source nor the target
language is english. we explore the e   ect of using parallel data in more detail in section 4.7.

since portuguese and spanish are of the same language family an interesting question is how well zero-shot
translation works for less related languages. table 6 shows the results for explicit and implicit bridging from
spanish to japanese using the large-scale model from table 4     spanish and japanese can be regarded as
quite unrelated. as expected zero-shot translation works worse than explicit bridging and the quality drops
relatively more (roughly 50% drop in id7 score) than for the case of more related languages as shown
above. despite the quality drop, this proves that our approach enables zero-shot translation even between
unrelated languages.

table 6: spanish   japanese id7 scores for explicit and implicit bridging using the 12-language pair
large-scale model from table 4.

model

id4 es   ja explicitly bridged
id4 es   ja implicitly bridged

id7
18.00
9.14

9

4.7 e   ect of direct parallel data
in this section, we explore two ways of leveraging available parallel data to improve zero-shot translation
quality, similar in spirit to what was reported in [10]. for our multilingual architecture we consider:

    incrementally training the multilingual model on the additional parallel data for the zero-shot directions.
    training a new multilingual model with all available parallel data mixed equally.

for our experiments, we use a baseline model which we call    zero-shot    trained on a combined parallel corpus
of english   {belarusian(be), russian(ru), ukrainian(uk)}. we trained a second model on the above corpus
together with additional ru   {be, uk} data. we call this model    from-scratch   . both models support four
target languages, and are evaluated on our standard test sets. as done previously we oversample the data
such that all language pairs are represented equally. finally, we take the best checkpoint of the    zero-shot   
model, and run incremental training on a small portion of the data used to train the    from-scratch    model
for a short period of time until convergence (in this case 3% of    zero-shot    model total training time). we
call this model    incremental   .
as can be seen from table 7, for the english   x directions, all three models show comparable scores.
on the russian   {belarusian, ukrainian} directions, the    zero-shot    model already achieves relatively high
id7 scores for all directions except one, without any explicit parallel data. this could be because these
languages are linguistically related. in the    from-scratch    column, we see that training a new model from
scratch improves the zero-shot translation directions further. however, this strategy has a slightly negative
e   ect on the english   x directions because our oversampling strategy will reduce the frequency of the data
from these directions. in the    nal column, we see that incremental training with direct parallel data recovers
most of the id7 score di   erence between the    rst two columns on the zero-shot language pairs. in summary,
our shared architecture models the zero-shot language pairs quite well and hence enables us to easily improve
their quality with a small amount of additional parallel data.

table 7: id7 scores for english   {belarusian, russian, ukrainian} models.

zero-shot from-scratch

english   belarusian
english   russian
english   ukrainian
belarusian   english
russian   english
ukrainian   english
belarusian   russian
russian   belarusian
russian   ukrainian
ukrainian   russian

16.85
22.21
18.16
25.44
28.36
28.60
56.53
58.75
21.92
16.73

17.03
22.03
17.75
24.72
27.90
28.51
82.50
72.06
25.75
30.53

incremental

16.99
21.92
18.27
25.54
28.46
28.58
78.63
70.01
25.34
29.92

5 visual analysis
the results of this paper     that training a model across multiple languages can enhance performance at the
individual language level, and that zero-shot translation can be e   ective     raise a number of questions about
how these tasks are handled inside the model, for example:

    is the network learning some sort of shared representation, in which sentences with the same meaning

are represented in similar ways regardless of language?

    does the model operate on zero-shot translations in the same way as it treats language pairs it has

been trained on?

10

one way to study the representations used by the network is to look at the activations of the network
during translation. a starting point for investigation is the set of context vectors, i.e., the sum of internal
encoder states weighted by their attention probabilities per step (eq. (5) in [2]).

a translation of a single sentence generates a sequence of context vectors. in this context, our original
questions about shared representation can be studied by looking at how the vector sequences of di   erent
sentences relate. we could then ask for example:

    do sentences cluster together depending on the source or target language?
    or instead do sentences with similar meanings cluster, regardless of language?

we try to    nd answers to these questions by looking at lower-dimensional representations of internal
embeddings of the network that humans can more easily interpret.

5.1 evidence for an interlingua
several trained networks indeed show strong visual evidence of a shared representation. for example, figure 2
below was produced from a many-to-many model trained on four language pairs, english   japanese and
english   korean. to visualize the model in action we began with a small corpus of 74 triples of semantically
identical cross-language phrases. that is, each triple contained phrases in english, japanese and korean with
the same underlying meaning. to compile these triples, we searched a ground-truth database for english
sentences which were paired with both japanese and korean translations.
we then applied the trained model to translate each sentence of each triple into the two other possible
languages. performing this process yielded six new sentences based on each triple, for a total of 74     6 = 444
total translations with 9,978 steps corresponding to the same number of context vectors. since context vectors
are high-dimensional, we use the tensorflow embedding projector2 to map them into more accessible 3d
space via id167 [20]. in the following diagrams, each point represents a single decoding step during the
translation process. points that represent steps for a given sentence are connected by line segments.

figure 2 shows a global view of all 9,978 context vectors. points produced from the same original sentence
triple are all given the same (random) color. inspection of these clusters shows that each strand represents
a single sentence, and clusters of strands generally represent a set of translations of the same underlying
sentence, but with di   erent source and target languages.

at right are two close-ups: one of an individual cluster, still coloring based on membership in the same

triple, and one where we have colored by source language.

5.2 partially separated representations
not all models show such clean semantic id91. sometimes we observed joint embeddings in some regions
of space coexisting with separate large clusters which contained many context vectors from just one language
pair.
for example, figure 3a shows a id167 projection of context vectors from a model that was trained
on portuguese   english (blue) and english   spanish (yellow) and performing zero-shot translation from
portuguese   spanish (red). this projection shows 153 semantically identical triples translated as de-
scribed above, yielding 459 total translations. the large red region on the left primarily contains zero-shot
portuguese   spanish translations.
in other words, for a signi   cant number of sentences, the zero-shot
translation has a di   erent embedding than the two trained translation directions. on the other hand, some
zero-shot translation vectors do seem to fall near the embeddings found in other languages, as on the large
region on the right.

it is natural to ask whether the large cluster of    separated    zero-shot translations has any signi   cance. a
de   nitive answer requires further investigation, but in this case zero-shot translations in the separated area
do tend to have lower id7 scores.

to measure the relationship between translation quality and distance between embeddings of the same
semantic sentence, we    rst calculated id7 scores for each translation. (this is possible since all triples
of phrases were extracted from ground truth data.) next, we needed to de   ne a dissimilarity measure

2https://www.tensorflow.org/get_started/embedding_viz

11

figure 2: a id167 projection of the embedding of 74 semantically identical sentences translated across
all 6 possible directions, yielding a total of 9,978 steps (dots in the image), from the model trained on
english   japanese and english   korean examples. (a) a bird   s-eye view of the embedding, coloring by the
index of the semantic sentence. well-de   ned clusters each having a single color are apparent. (b) a zoomed
in view of one of the clusters with the same coloring. all of the sentences within this cluster are translations
of    the stratosphere extends from about 10km to about 50km in altitude.    (c) the same cluster colored by
source language. all three source languages can be seen within this cluster.

figure 3:
(a) a bird   s-eye view of a id167 projection of an embedding of the model trained on
portuguese   english (blue) and english   spanish (yellow) examples with a portuguese   spanish zero-
shot bridge (red). the large red region on the left primarily contains the zero-shot portuguese   spanish
translations. (b) a scatter plot of id7 scores of zero-shot translations versus the average point-wise distance
between the zero-shot translation and a non-bridged translation. the pearson correlation coe   cient is    0.42.

12

(cid:16) i

  

n     1

(cid:17) = yi
(cid:18)
(cid:16)

d

  1

m   1x

i=0

for embeddings of di   erent sentences, accounting for the fact that two sentences might consist of di   erent
numbers of wordpieces. to do so, for a sentence of n wordpieces w0, w1, . . . , wn   1 where the i th wordpiece
has been embedded at yi     r1024, we de   ned a curve    : [0, 1]     r1024 at    control points    of the form i
n   1
by:

and use linear interpolation to de   ne    between these points. the dissimilarity between two curves   1 and
  2, where m is the maximum number of wordpieces in both sentences, is de   ned by

dissimilarity(  1,   2) = 1

m

(cid:17)

(cid:16)

(cid:17)(cid:19)

i

m     1

,   2

i

m     1

figure 3b shows a plot of id7 scores of a zero-shot translation versus the average pointwise distance
between it and the same translation from a trained language pair. we can see that the value of this
dissimilarity score is correlated with the quality of the zero-shot translation with a pearson correlation
coe   cient of    0.42, indicating moderate correlation. an interesting area for future research is to    nd a more
reliable correspondence between embedding geometry and model performance to predict the quality of a
zero-shot translation during decoding by comparing it to the embedding of the translation through a trained
language pair.

6 mixing languages
having a mechanism to translate from a random source language to a single chosen target language using
an additional source token made us think about what happens when languages are mixed on the source or
target side. in particular, we were interested in the following two experiments:

1. can a multilingual model successfully handle multi-language input (code-switching), when it happens

in the middle of the sentence?

2. what happens when a multilingual model is triggered not with a single but two target language tokens
weighted such that their weight adds up to one (the equivalent of merging the weighted embeddings of
these tokens)?

the following two sections discuss these experiments.

6.1 source language code-switching
in this section we show how multilingual models deal with source language code-switching. here we show an
example from a multilingual model that was trained with japanese,korean   english data. using this model,
mixing japanese and korean in the source produces in many cases correct english translations, showing
the code-switching can be handled by this model, although no such code-switching samples were present
in the training data. note that the model can e   ectively handle the di   erent typographic scripts since the
individual characters/wordpieces are present in our wordpiece vocabulary.

    japanese: o                             i am a student at tokyo university.
    korean:              nt         n           n          .     i am a student at tokyo university.
    mixed japanese/korean: o                  n          .     i am a student of tokyo university.

interestingly, the translation for the mixed-language input di   ers slightly from both of the single source
language translations. in practice, it is not too hard to    nd examples where code-switching in the input does
not result in good outputs; in some cases the model will simply copy parts of the source sentence instead of
translating it.

13

6.2 weighted target language selection
in this section we test what happens when we mix target languages. we take a multilingual model trained
with multiple target languages, for example, english   {japanese, korean}. then instead of feeding the
embedding vector for    <2ja>    to the bottom layer of the encoder lstm, we feed a linear combination
(1    w)<2ja> + w<2ko>. clearly, for w = 0 the model should produce japanese, for w = 1 it should produce
korean, but what happens in between?

one expectation could be that the model will output some sort of intermediate language (   japarean   ),
but the results turn out to be less surprising. most of the time the output just switches from one language
to another around w = 0.5. in some cases, for intermediate values of w the model switches languages
mid-sentence.

a possible explanation for this behavior is that the target language model, implicitly learned by the
decoder lstm, may make it very hard to mix words from di   erent languages, especially when these languages
use di   erent scripts. in addition, since the token which de   nes the requested target language is placed at the
beginning of the sentence, the further the decoder progresses, the less likely it is to put attention on this
token, and instead the choice of language is determined by previously generated target words.

table 8: several examples of gradually mixing target languages in multilingual models.

russian/belarusian:

wbe = 0.00
wbe = 0.20
wbe = 0.30
wbe = 0.44
wbe = 0.46
wbe = 0.48
wbe = 0.50
wbe = 1.00

japanese/korean:

wko = 0.00
wko = 0.40
wko = 0.56
wko = 0.58
wko = 0.60
wko = 0.70
wko = 0.90
wko = 1.00

i wonder what they   ll do next!
                  ,                                          !
                  ,                                          !
  i        ,                                                   !
  i        ,                                               i!
  i        ,                                               i!
  i        ,                                        !
  i        ,                                  i               !
  i        ,                                  i               !
i must be getting somewhere near the centre of the earth.
o                                                          
o                                                         
o                                                          
o  n    t    n          n  n  n          n      n          n  n  n             
        n    tn          n          n  n  n          n      n          n  n  n             
        n    tn  nt        n  n          n      n      n                 
        n          n    tn  nt        n  n      n      n                 
        n          n    tn  nt        n  n      n      n                 

spanish/portuguese: here the other guinea-pig cheered, and was suppressed.
aqu   el otro conejillo de indias anim  , y fue suprimido.
aqu   el otro conejillo de indias anim  , y fue suprimido.
aqu  , o outro porquinho-da-  ndia alegrou, e foi suprimido.
aqui o outro porquinho-da-  ndia alegrou, e foi suprimido.
aqui o outro porquinho-da-  ndia alegrou, e foi suprimido.
aqui a outra cobaia animou, e foi suprimida.
aqui a outra cobaia animou, e foi suprimida.

wpt = 0.00
wpt = 0.30
wpt = 0.40
wpt = 0.42
wpt = 0.70
wpt = 0.80
wpt = 1.00

table 8 shows examples of mixed target language using three di   erent multilingual models. it is interesting
that in the    rst example (russian/belarusian) the model switches from russian to ukrainian (underlined) as
target language    rst before    nally switching to belarusian. in the second example (japanese/korean), we
observe an even more interesting transition from japanese to korean, where the model gradually changes the
grammar from japanese to korean. at wko = 0.58, the model translates the source sentence into a mix of
japanese and korean at the beginning of the target sentence. at wko = 0.60, the source sentence is translated
into full korean, where all of the source words are captured, however, the ordering of the words does not look
natural. interestingly, when the wko is increased up to 0.7, the model starts to translate the source sentence

14

into a korean sentence that sounds more natural.3

7 conclusion
we present a simple solution to multilingual id4. we show that we can train multilingual id4 models that
can be used to translate between a number of di   erent languages using a single model where all parameters
are shared, which as a positive side-e   ect also improves the translation quality of low-resource languages in
the mix. we also show that zero-shot translation without explicit bridging is possible, which is the    rst time
to our knowledge that a form of true id21 has been shown to work for machine translation. to
explicitly improve the zero-shot translation quality, we explore two ways of adding available parallel data
and    nd that small additional amounts are su   cient to reach satisfactory results. in our largest experiment
we merge 12 language pairs into a single model and achieve only slightly lower translation quality as for
the single language pair baselines despite the drastically reduced amount of modeling capacity per language
in the multilingual model. visual interpretation of the results shows that these models learn a form of
interlingua representation between all involved language pairs. the simple architecture makes it possible to
mix languages on the source or target side to yield some interesting translation examples. our approach has
been shown to work reliably in a google-scale production setting and enables us to scale to a large number of
languages quickly.

acknowledgements
we would like to thank the entire google brain team and google translate team for their foundational
contributions to this project. in particular, we thank junyoung chung for his insights on the topic and alex
rudnick and otavio good for helpful suggestions.

references
[1] abadi, m., barham, p., chen, j., chen, z., davis, a., dean, j., devin, m., ghemawat, s.,
irving, g., isard, m., kudlur, m., levenberg, j., monga, r., moore, s., murray, d. g.,
steiner, b., tucker, p., vasudevan, v., warden, p., wicke, m., yu, y., and zheng, x.
tensor   ow: a system for large-scale machine learning. arxiv preprint arxiv:1605.08695 (2016).

[2] bahdanau, d., cho, k., and bengio, y. id4 by jointly learning to align

and translate. in international conference on learning representations (2015).

[3] caglayan, o., aransa, w., wang, y., masana, m., garc  a-mart  nez, m., bougares, f.,
barrault, l., and van de weijer, j. does multimodality help human and machine for translation
and image captioning? in proceedings of the first conference on machine translation (berlin, germany,
august 2016), association for computational linguistics, pp. 627   633.

[4] caruana, r. multitask learning. in learning to learn. springer, 1998, pp. 95   133.
[5] cho, k., van merrienboer, b., g  l  ehre,   ., bougares, f., schwenk, h., and bengio,
y. learning phrase representations using id56 encoder-decoder for id151. in
conference on empirical methods in natural language processing (2014).

[6] crego, j., kim, j., klein, g., rebollo, a., yang, k., senellart, j., akhanov, e., brunelle,
p., coquard, a., deng, y., enoue, s., geiss, c., johanson, j., khalsa, a., khiari, r., ko,
b., kobus, c., lorieux, j., martins, l., nguyen, d.-c., priori, a., riccardi, t., segal, n.,
servan, c., tiquet, c., wang, b., yang, j., zhang, d., zhou, j., and zoldan, p. systran   s
pure id4 systems. arxiv preprint arxiv:1610.05540 (2016).

3the korean translation does not contain spaces and uses           as punctuation symbol, and these are all artifacts of applying

a japanese postprocessor.

15

[7] dong, d., wu, h., he, w., yu, d., and wang, h. id72 for multiple language
translation. in proceedings of the 53rd annual meeting of the association for computational linguistics
(2015), pp. 1723   1732.

[8] firat, o., cho, k., and bengio, y. multi-way, multilingual id4 with a shared
attention mechanism. in naacl hlt 2016, the 2016 conference of the north american chapter of
the association for computational linguistics: human language technologies, san diego california,
usa, june 12-17, 2016 (2016), pp. 866   875.

[9] firat, o., cho, k., sankaran, b., yarman vural, f., and bengio, y. multi-way, multilingual

id4. computer speech and language (4 2016).

[10] firat, o., sankaran, b., al-onaizan, y., yarman-vural, f. t., and cho, k. zero-resource

translation with multi-lingual id4. in emnlp (2016).

[11] french, r. m. catastrophic forgetting in connectionist networks. trends in cognitive sciences 3, 4

(1999), 128   135.

[12] gage, p. a new algorithm for data compression. c users j. 12, 2 (feb. 1994), 23   38.
[13] gillick, d., brunk, c., vinyals, o., and subramanya, a. multilingual language processing
from bytes. in proceedings of the 2016 conference of the north american chapter of the association
for computational linguistics: human language technologies (san diego, california, june 2016),
association for computational linguistics, pp. 1296   1306.

[14] hutchins, w. j., and somers, h. l. an introduction to machine translation, vol. 362. academic

press london, 1992.

[15] kalchbrenner, n., and blunsom, p. recurrent continuous translation models. in conference on

empirical methods in natural language processing (2013).

[16] lee, j., cho, k., and hofmann, t. fully character-level id4 without explicit

segmentation. arxiv preprint arxiv:1610.03017 (2016).

[17] luong, m.-t., le, q. v., sutskever, i., vinyals, o., and kaiser, l. multi-task sequence to

sequence learning. in international conference on learning representations (2015).

[18] luong, m.-t., pham, h., and manning, c. d. e   ective approaches to attention-based neural

machine translation. in conference on empirical methods in natural language processing (2015).

[19] luong, m.-t., sutskever, i., le, q. v., vinyals, o., and zaremba, w. addressing the rare word
problem in id4. in proceedings of the 53rd annual meeting of the association for
computational linguistics and the 7th international joint conference on natural language processing
(2015).

[20] maaten, l. v. d., and hinton, g. visualizing data using id167. journal of machine learning

research 9 (2008).

[21] richens, r. h. interlingual machine translation. the computer journal 1, 3 (1958), 144   147.
[22] schultz, t., and kirchhoff, k. multilingual speech processing. elsevier academic press, amsterdam,

boston, paris, 2006.

[23] schuster, m., and nakajima, k. japanese and korean voice search. 2012 ieee international

conference on acoustics, speech and signal processing (2012).

[24] s  bastien, j., kyunghyun, c., memisevic, r., and bengio, y. on using very large target
vocabulary for id4. in proceedings of the 53rd annual meeting of the association
for computational linguistics and the 7th international joint conference on natural language processing
(2015).

16

[25] sennrich, r., haddow, b., and birch, a. controlling politeness in id4 via
side constraints. in naacl hlt 2016, the 2016 conference of the north american chapter of the
association for computational linguistics: human language technologies, san diego california, usa,
june 12-17, 2016 (2016), pp. 35   40.

[26] sennrich, r., haddow, b., and birch, a. id4 of rare words with subword
units. in proceedings of the 54th annual meeting of the association for computational linguistics (2016).
[27] sutskever, i., vinyals, o., and le, q. v. sequence to sequence learning with neural networks. in

advances in neural information processing systems (2014), pp. 3104   3112.

[28] tsvetkov, y., sitaram, s., faruqui, m., lample, g., littell, p., mortensen, d., black,
a. w., levin, l., and dyer, c. polyglot neural language models: a case study in cross-lingual
phonetic representation learning. in proceedings of the 2016 conference of the north american chapter
of the association for computational linguistics: human language technologies (san diego, california,
june 2016), association for computational linguistics, pp. 1357   1366.

[29] wu, y., schuster, m., chen, z., le, q. v., norouzi, m., macherey, w., krikun, m., cao,
y., gao, q., macherey, k., klingner, j., shah, a., johnson, m., liu, x.,   ukasz kaiser,
gouws, s., kato, y., kudo, t., kazawa, h., stevens, k., kurian, g., patil, n., wang, w.,
young, c., smith, j., riesa, j., rudnick, a., vinyals, o., corrado, g., hughes, m., and
dean, j. google   s id4 system: bridging the gap between human and machine
translation. arxiv preprint arxiv:1609.08144 (2016).

[30] yamagishi, h., kanouchi, s., and komachi, m. controlling the voice of a sentence in japanese-to-
english id4. in proceedings of the 3rd workshop on asian translation (osaka,
japan, december 2016), pp. 203   210.

[31] zhou, j., cao, y., wang, x., li, p., and xu, w. deep recurrent models with fast-forward
connections for id4. transactions of the association for computational linguistics
4 (2016), 371   383.

[32] zoph, b., and knight, k. multi-source neural translation. in naacl hlt 2016, the 2016 conference
of the north american chapter of the association for computational linguistics: human language
technologies, san diego california, usa, june 12-17, 2016 (2016), pp. 30   34.

17

