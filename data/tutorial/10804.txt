exploiting similarities among languages for machine translation

tomas mikolov

google inc.

mountain view

quoc v. le
google inc.

mountain view

ilya sutskever

google inc.

mountain view

3
1
0
2

 

p
e
s
7
1

 

 
 
]
l
c
.
s
c
[
 
 

1
v
8
6
1
4

.

9
0
3
1
:
v
i
x
r
a

tmikolov@google.com

qvl@google.com

ilyasu@google.com

abstract

dictionaries and phrase tables are the basis
of modern id151 sys-
tems. this paper develops a method that can
automate the process of generating and ex-
tending dictionaries and phrase tables. our
method can translate missing word and phrase
entries by learning language structures based
on large monolingual data and mapping be-
tween languages from small bilingual data.
it uses distributed representation of words
and learns a linear mapping between vector
spaces of languages. despite its simplicity,
our method is surprisingly effective: we can
achieve almost 90% precision@5 for transla-
tion of words between english and spanish.
this method makes little assumption about the
languages, so it can be used to extend and re-
   ne dictionaries and translation tables for any
language pairs.

1

introduction

id151 systems have been
developed for years and became very successful in
practice. these systems rely on dictionaries and
phrase tables which require much efforts to generate
and their performance is still far behind the perfor-
mance of human expert translators. in this paper, we
propose a technique for machine translation that can
automate the process of generating dictionaries and
phrase tables. our method is based on distributed
representations and it has the potential to be com-
plementary to the mainstream techniques that rely
mainly on the raw counts.

our study found that it is possible to infer missing
dictionary entries using distributed representations
of words and phrases. we achieve this by learning
a linear projection between vector spaces that rep-
resent each language. the method consists of two
simple steps. first, we build monolingual models of
languages using large amounts of text. next, we use
a small bilingual dictionary to learn a linear projec-
tion between the languages. at the test time, we can
translate any word that has been seen in the mono-
lingual corpora by projecting its vector representa-
tion from the source language space to the target
language space. once we obtain the vector in the
target language space, we output the most similar
word vector as the translation.

the representations of languages are learned
using the distributed skip-gram or continuous
bag-of-words (cbow) models recently proposed
by (mikolov et al., 2013a). these models learn word
representations using a simple neural network archi-
tecture that aims to predict the neighbors of a word.
because of its simplicity, the skip-gram and cbow
models can be trained on a large amount of text data:
our parallelized implementation can learn a model
from billions of words in hours.1

figure 1 gives simple visualization to illustrate
why and how our method works. in figure 1, we
visualize the vectors for numbers and animals in en-
glish and spanish, and it can be easily seen that these
concepts have similar geometric arrangements. the
reason is that as all common languages share con-
cepts that are grounded in the real world (such as

1the code for training these models is available at
https://code.google.com/p/id97/

   

figure 1: distributed word vector representations of numbers and animals in english (left) and spanish (right). the    ve
vectors in each language were projected down to two dimensions using pca, and then manually rotated to accentuate
their similarity. it can be seen that these concepts have similar geometric arrangements in both spaces, suggesting that
it is possible to learn an accurate linear mapping from one space to another. this is the key idea behind our method of
translation.

that cat is an animal smaller than a dog), there is
often a strong similarity between the vector spaces.
the similarity of geometric arrangments in vector
spaces is the key reason why our method works well.
our proposed approach is complementary to the
existing methods that use similarity of word mor-
phology between related languages or exact context
matches to infer the possible translations (koehn
and knight, 2002; haghighi et al., 2008; koehn
and knight, 2000). although we found that mor-
phological features (e.g., id153 between word
spellings) can improve performance for related lan-
guages (such as english to spanish), our method
is useful for translation between languages that are
substantially different (such as english to czech or
english to chinese).

another advantage of our method is that it pro-
vides a translation score for every word pair, which

can be used in multiple ways. for example, we can
augment the existing phrase tables with more candi-
date translations, or    lter out errors from the trans-
lation tables and known dictionaries.

2 the skip-gram and continuous

bag-of-words models

distributed representations for words were proposed
in (rumelhart et al., 1986) and have become ex-
tremely successful. the main advantage is that the
representations of similar words are close in the vec-
tor space, which makes generalization to novel pat-
terns easier and model estimation more robust. suc-
cessful follow-up work includes applications to sta-
tistical id38 (elman, 1990; bengio et
al., 2003; mikolov, 2012), and to various other nlp
tasks such as word representation learning, named
entity recognition, disambiguation, parsing, and tag-

   0.100.10.20.30.40.50.60.7   0.25   0.2   0.15   0.1   0.0500.050.10.15onetwothreefourfive   0.200.20.40.60.811.2   0.6   0.5   0.4   0.3   0.2   0.100.10.2uno (one)dos (two)tres (three)cuatro (four)cinco (five)   0.3   0.25   0.2   0.15   0.1   0.0500.050.10.15   0.3   0.25   0.2   0.15   0.1   0.0500.050.10.150.2catdogcowhorsepig   0.5   0.4   0.3   0.2   0.100.10.20.30.40.5   0.5   0.4   0.3   0.2   0.100.10.20.30.40.5gato (cat)perro (dog)vaca (cow)caballo (horse)cerdo (pig)figure 2: graphical representation of the cbow model and skip-gram model. in the cbow model, the distributed
representations of context (or surrounding words) are combined to predict the word in the middle. in the skip-gram
model, the distributed representation of the input word is used to predict the context.

ging (collobert and weston, 2008; turian et al.,
2010; socher et al., 2011; socher et al., 2013; col-
lobert et al., 2011; huang et al., 2012; mikolov et
al., 2013a).

it was recently shown that the distributed repre-
sentations of words capture surprisingly many lin-
guistic regularities, and that there are many types of
similarities among words that can be expressed as
linear translations (mikolov et al., 2013c). for ex-
ample, vector operations    king    -    man    +    woman   
results in a vector that is close to    queen   .

two particular models for learning word repre-
sentations that can be ef   ciently trained on large
amounts of text data are skip-gram and cbow
models introduced in (mikolov et al., 2013a). in the
cbow model, the training objective of the cbow
model is to combine the representations of surround-
ing words to predict the word in the middle. the
model architectures of these two methods are shown
in figure 2. similarly, in the skip-gram model, the
training objective is to learn word vector representa-
tions that are good at predicting its context in the
same sentence (mikolov et al., 2013a).
it is un-

like traditional neural network based language mod-
els (bengio et al., 2003; mnih and hinton, 2008;
mikolov et al., 2010), where the objective is to pre-
dict the next word given the context of several pre-
ceding words. due to their low computational com-
plexity, the skip-gram and cbow models can be
trained on a large corpus in a short time (billions of
words in hours). in practice, skip-gram gives bet-
ter word representations when the monolingual data
is small. cbow however is faster and more suitable
for larger datasets (mikolov et al., 2013a). they also
tend to learn very similar representations for lan-
guages. due to their similarity in terms of model
architecture, the rest of the section will focus on de-
scribing the skip-gram model.

more formally, given a sequence of training
words w1, w2, w3, . . . , wt , the objective of the skip-
gram model is to maximize the average log probabil-
ity

(cid:21)

log p(wt+j|wt)

(1)

t(cid:88)

(cid:20) k(cid:88)

t=1

j=   k

1
t

where k is the size of the training window (which

w(t-2)w(t+1)w(t-1)w(t+2)w(t)sum       input         projection         outputw(t)          input         projection      outputw(t-2)w(t-1)w(t+1)w(t+2)                   cbow                                                   skip-gramcan be a function of the center word wt). the in-
ner summation goes from    k to k to compute the
log id203 of correctly predicting the word wt+j
given the word in the middle wt. the outer summa-
tion goes over all words in the training corpus.

in the skip-gram model, every word w is associ-
ated with two learnable parameter vectors, uw and
vw. they are the    input    and    output    vectors of the
w respectively. the id203 of correctly predict-
ing the word wi given the word wj is de   ned as

(cid:1)

exp(cid:0)uwi
l=1 exp(cid:0)ul
(cid:80)v

(cid:62)vwj

(cid:62)vwj

(cid:1)

p(wi|wj) =

(2)

where v is the number of words in the vocabulary.
this formulation is expensive because the cost
of computing     log p(wi|wj) is proportional to the
number of words in the vocabulary v (which can
be easily in order of millions). an ef   cient alter-
native to the full softmax is the hierarchical soft-
max (morin and bengio, 2005), which greatly re-
duces the complexity of computing log p(wi|wj)
(about logarithmically with respect to the vocabu-
lary size).

the skip-gram and cbow models are typically
trained using stochastic id119. the gradi-
ent is computed using id26 rule (rumel-
hart et al., 1986).

when trained on a large dataset, these models
capture substantial amount of semantic information.
as mentioned before, closely related words have
similar vector representations, e.g., school and uni-
versity, lake and river. this is because school and
university appear in similar contexts, so that during
training the vector representations of these words are
pushed to be close to each other.

more interestingly, the vectors capture relation-
ships between concepts via linear operations. for
example, vector(france) - vector(paris) is similar to
vector(italy) - vector(rome).

3 linear relationships between

languages

as we visualized the word vectors using pca, we
noticed that the vector representations of similar
words in different languages were related by a linear
transformation. for instance, figure 1 shows that
the word vectors for english numbers one to    ve

and the corresponding spanish words uno to cinco
have similar geometric arrangements. the relation-
ship between vector spaces that represent these two
languages can thus possibly be captured by linear
mapping (namely, a rotation and scaling).

thus, if we know the translation of one and four
from english to spanish, we can learn the transfor-
mation matrix that can help us to translate even the
other numbers to spanish.

4 translation matrix
suppose we are given a set of word pairs and their
associated vector representations {xi, zi}n
i=1, where
xi     rd1 is the distributed representation of word i
in the source language, and zi     rd2 is the vector
representation of its translation.

it is our goal to    nd a transformation matrix w
such that w xi approximates zi. in practice, w can
be learned by the following optimization problem

(cid:107)w xi     zi(cid:107)2

(3)

n(cid:88)

i=1

min
w

which we solve with stochastic id119.

at the prediction time, for any given new word
and its continuous vector representation x, we can
map it to the other language space by computing z =
w x. then we    nd the word whose representation
is closest to z in the target language space, using
cosine similarity as the distance metric.

despite its simplicity, this linear transformation
method worked well in our experiments, better than
nearest neighbor and as well as neural network clas-
si   ers. the following experiments will demonstrate
its effectiveness.

5 experiments on wmt11 datasets
in this section, we describe the results of our trans-
lation method on the publicly available wmt11
datasets. we also describe two baseline techniques:
one based on the id153 between words, and
the other based on similarity of word co-occurrences
that uses word counts. the next section presents re-
sults on a larger dataset, with size up to 25 billion
words.

in the above section, we described two methods,
skip-gram and cbow, which have similar archi-
tectures and perform similarly. in terms of speed,

cbow is usually faster and for that reason, we used
it in the following experiments.2

5.1 setup description
the datasets in our experiments are wmt11 text
data from www.statmt.org website.3 using
these corpora, we built monolingual data sets for en-
glish, spanish and czech languages. we performed
these steps:

    id121 of

text using scripts

from

www.statmt.org

    duplicate sentences were removed
    numeric values were rewritten as a single token
    special characters were removed (such as !?,:  )

additionally, we formed short phrases of words us-
ing a technique described in (mikolov et al., 2013b).
the idea is that words that co-occur more frequently
than expected by their unigram id203 are likely
an atomic unit. this allows us to represent short
phrases such as    ice cream    with single tokens,
without blowing up the vocabulary size as it would
happen if we would consider all bigrams as phrases.
importantly, as we want to test if our work can
provide non-obvious translations of words, we dis-
carded named entities by removing the words con-
taining uppercase letters from our monolingual data.
the named entities can either be kept unchanged, or
translated using simpler techniques, for example us-
ing the id153 (koehn and knight, 2002). the
statistics for the obtained corpora are reported in ta-
ble 1.

to obtain dictionaries between languages, we
used the most frequent words from the monolingual
source datasets, and translated these words using
on-line google translate (gt). as mentioned pre-
viously, we also used short phrases as the dictionary
entries. as not all words that gt produces are in
our vocabularies that we built from the monolingual
wmt11 data, we report the vocabulary coverage in
each experiment. for the calculation of translation

2it should be noted that the following experiments deal
mainly with frequent words. the skip-gram, although slower
to train than cbow, is preferable architecture if one is inter-
ested in high quality represenations for the infrequent words.
3http://www.statmt.org/wmt11/training-monolingual.tgz

table 1: the sizes of the monolingual training datasets
from wmt11. the vocabularies consist of the words that
occurred at least    ve times in the corpus.

language training tokens vocabulary size
english
spanish
czech

575m
84m
155m

127k
107k
505k

precision, we discarded word pairs that cannot be
translated due to missing vocabulary entries.

to measure the accuracy, we use the most fre-
quent 5k words from the source language and their
translations given gt as the training data for learn-
ing the translation matrix. the subsequent 1k
words in the source language and their translations
are used as a test set. because our approach is very
good at generating many translation candidates, we
report the top 5 accuracy in addition to the top 1 ac-
curacy. it should be noted that the top 1 accuracy is
highly underestimated, as synonym translations are
counted as mistakes - we count only exact match as
a successful translation.

5.2 baseline techniques
we used two simple baselines for the further ex-
periments, similar to those previously described
in (haghighi et al., 2008). the    rst is using simi-
larity of the morphological structure of words, and
is based on the id153 between words in dif-
ferent languages.

the second baseline uses similarity of word co-
occurrences, and is thus more similar to our neural
network based approach. we follow these steps:

    form count-based word vectors with dimen-

sionality equal to the size of the dictionary

    count occurrence of in-dictionary words within
a short window (up to 10 words) for each test
word in the source language, and each word in
the target language

    using the dictionary, map the word count vec-
tors from the source language to the target lan-
guage

    for each test word, search for the most similar

vector in the target language

table 2: accuracy of the word translation methods using the wmt11 datasets. the id153 uses morphological
structure of words to    nd the translation. the word co-occurrence technique based on counts uses similarity of
contexts in which words appear, which is related to our proposed technique that uses continuous representations of
words and a translation matrix between two languages.

translation id153 word co-occurrence translation matrix

en     sp
sp     en
en     cz
cz     en

p@1
p@5
13% 24%
18% 27%
9%
5%
7%
11%

p@1
19%
20%
9%
11%

p@5
30%
30%
17%
20%

p@1
33%
35%
27%
23%

p@5
51%
52%
47%
42%

ed + tm coverage
p@1 p@5
43% 60%
44% 62%
29% 50%
25% 45%

92.9%
92.9%
90.5%
90.5%

additionally, the word count vectors are normalized
in the following procedure. first we remove the bias
that is introduced by the different size of the training
sets in both languages, by dividing the counts by the
ratio of the data set sizes. for example, if we have
ten times more data for the source language than for
the target language, we will divide the counts in the
source language by ten. next, we apply the log func-
tion to the counts and normalize each word count
vector to have a unit length (l2 norm).

the weakness of this technique is the computa-
tional complexity during the translation - the size of
the word count vectors increases linearly with the
size of the dictionary, which makes the translation
expensive. moreover, this approach ignores all the
words that are not in the known dictionary when
forming the count vectors.

5.3 results with wmt11 data
in table 2, we report the performance of several
approaches for translating single words and short
phrases. because the id153 and our trans-
lation matrix approach are fundamentally different,
we can improve performance by using a weighted
combination of similarity scores given by both tech-
niques. as can be seen in table 2, the id153
worked well for languages with related spellings
(english and spanish), and was less useful for more
distant language pairs, such as english and czech.

to train the distributed skip-gram model, we used
the hyper-parameters recommended in (mikolov et
al., 2013a): the window size is 10 and the dimen-
sionality of the word vectors is in the hundreds.
we observed that the word vectors trained on the
source language should be several times (around

for example,

2x   4x) larger than the word vectors trained on the
target language.
the best perfor-
mance on english to spanish translation was ob-
tained with 800-dimensional english word vectors
and 200-dimensional spanish vectors. however,
for the opposite direction, the best accuracy was
achieved with 800-dimensional spanish vectors and
300-dimensional english vectors.

6 large scale experiments

in this section, we scale up our techniques to larger
datasets to show how performance improves with
more training data. for these experiments, we used
large english and spanish corpora that have sev-
eral billion words (google news datasets). we per-
formed the same data cleaning and pre-processing as
for the wmt11 experiments. figure 3 shows how
the performance improves as the amount of mono-
lingual data increases. again, we used the most fre-
quent 5k words from the source language for con-
structing the dictionary using google translate, and
the next 1k words for test.

our approach can also be successfully used for
translating infrequent words: in figure 4, we show
the translation accuracy on the less frequent words.
although the translation accuracy decreases as the
test set becomes harder, for the words ranked 15k   
19k in the vocabulary, precision@5 is still reason-
ably high, around 60%. it is surprising that we can
sometimes translate even words that are quite un-
related to those in the known dictionary. we will
present examples that demonstrate the translation
quality in the section 7.

we also performed the same experiment where
we translate the words at ranks 15k   19k using the

figure 3: the precision at 1 and 5 as the size of the mono-
lingual training sets increase (en   es).

models trained on the small wmt11 datasets. the
performance loss in this case was greater   the presi-
cion@5 was only 25%. this means that the models
have to be trained on large monolingual datasets in
order to accurately translate infrequent words.

6.1 using distances as con   dence measure
sometimes it is useful to have higher accuracy at the
expense of coverage. here we show that the distance
between the computed vector and the closest word
vector can be used as a con   dence measure. if we
apply the translation matrix to a word vector in en-
glish and obtain a vector in the spanish word space
that is not close to vector of any spanish word, we
can assume that the translation is likely to be inac-
curate.

more formally, we de   ne the con   dence score
as maxi   v cos(w x, zi), and if this value is smaller
than a threshold, the translation is skipped. in ta-
ble 3 we show how this approach is related to the

figure 4: accuracies of translation as the word frequency
decreases. here, we measure the accuracy of the transla-
tion on disjoint sets of 2000 words sorted by frequency,
starting from rank 5k and continuing to 19k. in all cases,
the linear transformation was trained on the 5k most fre-
quent words and their translations. en   es.

translation accuracy. for example, we can translate
approximately half of the words from the test set (on
en   es with frequency ranks 5k   6k) with a very
high precision@5 metric (around 90%). by adding
the id153 to our scores, we can further im-
prove the accuracy, especially for precision@1 as is
shown in table 4.

these observations can be crucial in the future
work, as we can see that high-quality translations
are possible for some subset of the vocabulary. the
idea can be applied also in the opposite way: instead
of searching for very good translations of missing
entries in the dictionaries, we can detect a subset of
the existing dictionary that is likely to be ambiguous
or incorrect.

table 3: accuracy of our method using various con   -
dence thresholds (en   es, large corpora).

table 4: accuracy of the combination of our method
with the id153 for various con   dence thresholds.
the con   dence scores differ from the previous table since
they include the id153 (en   es, large corpora).

threshold coverage p@1 p@5
53% 75%
0.0
0.5
59% 82%
71% 90%
0.6
0.7
78% 91%

92.5%
78.4%
54.0%
17.0%

threshold coverage p@1 p@5
58% 77%
0.0
0.4
66% 84%
75% 91%
0.5
0.6
85% 93%

92.5%
77.6%
55.0%
25.3%

1071081091010101101020304050607080number of training wordsaccuracy  precision@1precision@5010203040506070805   7k7   9k9   11k11   13k13   15k15   17k17   19kaccuracy7 examples

this section provides various examples of our trans-
lation method.

7.1 spanish to english example translations
to better understand the behavior of our translation
system, we show a number of example translations
from spanish to english in table 5.
interestingly,
many of the mistakes are somewhat meaningful and
are semantically related to the correct translation.
these examples were produced by the translation
matrix alone, without using the id153 simi-
larity.

table 5: examples of translations of out-of-dictionary
words from spanish to english. the three most likely
translations are shown. the examples were chosen at ran-
dom from words at ranks 5k   6k. the word representa-
tions were trained on the large corpora.

spanish word computed english dictionary

emociones

protegida

imperio

determinante

preparada

millas

hablamos

destacaron

translations
emotions
emotion
feelings
wetland
undevelopable
protected
dictatorship
imperialism
tyranny
crucial
key
important
prepared
ready
prepare
kilometers
kilometres
miles
talking
talked
talk
highlighted
emphasized
emphasised

entry
emotions

protected

empire

determinant

prepared

miles

talk

highlighted

table 6: examples of translations from english to span-
ish with high con   dence. the models were trained on the
large corpora.

english word computed spanish dictionary

pets
mines
unacceptable
prayers
shortstop
interaction
ultra
bene   cial
beds
connectivity
transform
motivation

translation
mascotas
minas
inaceptable
oraciones
shortstop
interacci  on
ultra
bene   cioso
camas
conectividad
transformar
motivaci  on

entry
mascotas
minas
inaceptable
rezo
campocorto
interacci  on
muy
bene   cioso
camas
conectividad
transformar
motivaci  on

7.2 high con   dence translations

in table 6, we show the translations from english to
spanish with high con   dence (score above 0.5). we
used both id153 and translation matrix. as
can be seen, the quality is very high, around 75%
for precision@1 as reported in table 4.

7.3 detection of dictionary errors

a potential use of our system is the correction of dic-
tionary errors. to demonstrate this use case, we have
trained the translation matrix using 20k dictionary
entries for translation between english and czech.
next, we computed the distance between the trans-
lation given our system and the existing dictionary
entry. thus, we evaluate the translation con   dences
on words from the training set.

in table 7, we list examples where the distance
between the original dictionary entry and the out-
put of the system was large. we chose the exam-
ples manually, so this demonstration is highly sub-
jective. informally, the entries in the existing dic-
tionaries were about the same or more accurate than
our system in about 85% of the cases, and in the re-
maining 15% our system provided better translation.
possible future extension of our approach would be
to train the translation matrix on all dictionary en-
tries except the one for which we calculate the score.

table 7: examples of translations where the dictionary
entry and the output from our system strongly disagree.
these examples were chosen manually to demonstrate
that it might be possible to automatically    nd incorrect or
ambiguous dictionary entries. the vectors were trained
on the large corpora.

english word computed czech dictionary

said

will

did

hit

must

current

shot

minutes

latest

blacks

hub

minus

retiring

grown

agents

translation
  rekl
(said)
m  u  ze
(can)
ud  elal
(did)
zas  ahl
(hit)
mus    
(must)
st  avaj    c    
(current)
vyst  relil
(shot)
minut
(minutes)
nejnov  ej  s    
(newest)
  cerno  si
(black people)
centrum
(center)
minus
(minus)
odejde
(leave)
p  estuje
(grow)
agenti
(agents)

entry
uveden  y
(listed)
v  ule
(testament)
ano
(yes)
hit
-
mo  st
(cider)
proud
(stream)
shot
-
z  apis
(enrollment)
posledn    
(last)
  cern  a
(black color)
hub
-
bez
(without)
uzav  ren  y
(closed)
dosp  el  y
(adult)
prost  redky
(resources)

ent than in english.

for training the monolingual skip-gram model
of vietnamese, we used large amount of google
news data with billions of words. we performed
the same data cleaning steps as for the previous
languages, and additionally automatically extracted
a large number of phrases using the technique de-
scribed in (mikolov et al., 2013b). this way, we ob-
tained about 1.3b training vietnamese phrases that
are related to english words and short phrases. in
table 8, we summarize the achieved results.

table 8: the accuracy of our translation method between
english and vietnamese. the id153 technique did
not provide signi   cant improvements. although the ac-
curacy seems low for the en   vn direction, this is in
part due to the large number of synonyms in the vn
model.

threshold coverage p@1 p@5
en     vn
10% 30%
vn     en
24% 40%

87.8%
87.8%

8 conclusion

in this paper, we demonstrated the potential of dis-
tributed representations for machine translation. us-
ing large amounts of monolingual data and a small
starting dictionary, we can successfully learn mean-
ingful translations for individual words and short
phrases. we demonstrated that this approach works
well even for pairs of languages that are not closely
related, such as english and czech, and even english
and vietnamese.

in particular, our work can be used to enrich
and improve existing dictionaries and phrase tables,
which would in turn lead to improvement of the
current state-of-the-art machine translation systems.
application to low resource domains is another very
interesting topic for future research. clearly, there is
still much to be explored.

7.4 translation between distant language

pairs: english and vietnamese

the previous experiments involved languages that
have a good one-to-one correspondence between
words. to show that our technique is not limited
by this assumption, we performed experiments on
vietnamese, where the concept of a word is differ-

references
[bengio et al.2003] yoshua bengio, rejean ducharme,
pascal vincent, and christian jauvin. 2003. a neural
probabilistic language model. in journal of machine
learning research, pages 1137   1155.

[mnih and hinton2008] andriy mnih and geoffrey e
hinton. 2008. a scalable hierarchical distributed lan-
guage model. in advances in neural information pro-
cessing systems, pages 1081   1088.

[morin and bengio2005] frederic morin and yoshua
bengio. 2005. hierarchical probabilistic neural net-
in proceedings of the inter-
work language model.
national workshop on arti   cial intelligence and statis-
tics, pages 246   252.

[rumelhart et al.1986] david e rumelhart, geoffrey e
hinton, and ronald j williams.
1986. learning
representations by back-propagating errors. nature,
323(6088):533   536.

[socher et al.2011] richard socher, cliff c lin, andrew
ng, and chris manning. 2011. parsing natural scenes
and natural language with id56s.
in proceedings of the 28th international conference
on machine learning (icml-11), pages 129   136.

[socher et al.2013] richard socher, john bauer, christo-
pher d. manning, and andrew y. ng. 2013. parsing
with compositional vector grammars. in acl.

[turian et al.2010] joseph turian, lev ratinov,

and
yoshua bengio. 2010. word representations: a simple
and general method for semi-supervised learning. in
proceedings of the 48th annual meeting of the associ-
ation for computational linguistics, pages 384   394.
association for computational linguistics.

[collobert and weston2008] ronan collobert and jason
weston. 2008. a uni   ed architecture for natural lan-
guage processing: deep neural networks with mul-
in proceedings of the 25th interna-
titask learning.
tional conference on machine learning, pages 160   
167. acm.

[collobert et al.2011] ronan collobert, jason weston,
l  eon bottou, michael karlen, koray kavukcuoglu,
and pavel kuksa. 2011. natural language process-
ing (almost) from scratch. the journal of machine
learning research, 12:2493   2537.

[elman1990] jeff elman.

1990. finding structure in

time. in cognitive science, pages 179   211.

[haghighi et al.2008] aria haghighi, percy liang, taylor
berg-kirkpatrick, and dan klein. 2008. learning
bilingual lexicons from monolingual corpora. in acl,
volume 2008, pages 771   779.

[huang et al.2012] eric huang, richard socher, christo-
pher manning, and andrew y ng. 2012. improving
word representations via global context and multiple
word prototypes. in proceedings of the 50th annual
meeting of the association for computational linguis-
tics: long papers-volume 1, pages 873   882. associa-
tion for computational linguistics.

[koehn and knight2000] philipp koehn

and kevin
knight. 2000. estimating word translation probabili-
ties from unrelated monolingual corpora using the em
algorithm. in aaai/iaai, pages 711   715.

[koehn and knight2002] philipp koehn

and kevin
knight. 2002. learning a translation lexicon from
monolingual corpora. in proceedings of the acl-02
workshop on unsupervised lexical acquisition-volume
9,
pages 9   16. association for computational
linguistics.

[mikolov et al.2010] tomas mikolov, martin kara     at,
lukas burget, jan cernock`y, and sanjeev khudan-
pur. 2010. recurrent neural network based language
model. in interspeech, pages 1045   1048.

[mikolov et al.2013a] tomas mikolov, kai chen, greg
corrado, and jeffrey dean. 2013a. ef   cient estima-
tion of word representations in vector space. arxiv
preprint arxiv:1301.3781.

[mikolov et al.2013b] tomas mikolov,

ilya sutskever,
kai chen, greg corrado, and jeffrey dean. 2013b.
distributed representations of phrases and their com-
positionality. in nips.

[mikolov et al.2013c] tomas mikolov, scott wen-tau
yih, and geoffrey zweig. 2013c. linguistic regu-
larities in continuous space word representations. in
naacl hlt.

[mikolov2012] tomas mikolov. 2012. statistical lan-
guage models based on neural networks. ph.d. the-
sis, brno university of technology.

