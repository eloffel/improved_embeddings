boosting id39 with neural character embeddings

c    cero nogueira dos santos

ibm research

138/146 av. pasteur

rio de janeiro, rj, brazil
cicerons@br.ibm.com

5
1
0
2

 

y
a
m
5
2

 

 
 
]
l
c
.
s
c
[
 
 

2
v
8
0
0
5
0

.

5
0
5
1
:
v
i
x
r
a

abstract

most state-of-the-art named entity recog-
nition (ner) systems rely on handcrafted
features and on the output of other nlp
tasks such as part-of-speech (pos) tag-
ging and text chunking. in this work we
propose a language-independent ner sys-
tem that uses automatically learned fea-
tures only. our approach is based on the
charwnn deep neural network, which
uses word-level and character-level rep-
resentations (embeddings) to perform se-
quential classi   cation. we perform an ex-
tensive number of experiments using two
annotated corpora in two different lan-
guages: harem i corpus, which contains
texts in portuguese; and the spa conll-
2002 corpus, which contains texts in span-
ish. our experimental results shade light
on the contribution of neural character em-
beddings for ner. moreover, we demon-
strate that the same neural network which
has been successfully applied to pos tag-
ging can also achieve state-of-the-art re-
sults for language-independet ner, us-
ing the same hyperparameters, and with-
out any handcrafted features.
for the
harem i corpus, charwnn outperforms
the state-of-the-art system by 7.9 points in
the f1-score for the total scenario (ten ne
classes), and by 7.2 points in the f1 for the
selective scenario (   ve ne classes).

1

introduction

id39 is a natural language
processing (nlp) task that consists of    nding
names in a text and classifying them among sev-
eral prede   ned categories of interest such as per-
son, organization, location and time. although
machine learning based systems have been the

victor guimar  aes

instituto de computac    ao

universidade federal fluminense (uff)

niter  oi, rj, rio de janeiro

victorguimaraes@id.uff.br

predominant approach to achieve state-of-the-art
results for ner, most of these ner systems rely
on the use of costly handcrafted features and on
the output of other nlp tasks (tjong kim sang,
2002; tjong kim sang and de meulder, 2003;
doddington et al., 2004; finkel et al., 2005; mi-
lidi  u et al., 2007). on the other hand, some recent
work on ner have used deep learning strategies
which minimize the need of these costly features
(chen et al., 2010; collobert et al., 2011; passos
et al., 2014; tang et al., 2014). however, as far as
we know, there are still no work on deep learning
approaches for ner that use character-level em-
beddings.
this

language-
independent ner using charwnn, a recently
proposed deep neural network (dnn) architecture
that jointly uses word-level and character-level
embeddings to perform sequential classi   cation
(dos santos and zadrozny, 2014). charwnn em-
ploys a convolutional layer that allows effective
character-level feature extraction from words of
any size. this approach has proven to be very
effective for language-independent id52
(dos santos and zadrozny, 2014).

paper we

approach

in

we perform an extensive number of experi-
ments using two annotated corpora: harem i
corpus, which contains texts in portuguese; and
the spa conll-2002, which contains texts in
spanish.
in our experiments, we compare the
performance of the joint and individual use of
character-level and word-level embeddings. we
provide information on the impact of unsupervised
pre-training of id27s in the perfor-
mance of our proposed ner approach. our exper-
imental results evidence that charwnn is effec-
tive and robust for portuguese and spanish ner.
using the same charwnn con   guration used by
dos santos and zadrozny (2014) for id52,
we achieve state-of-the-art results for both cor-
pora. for the harem i corpus, charwnn out-

performs the state-of-the-art system by 7.9 points
in the f1-score for the total scenario (ten ne
classes), and by 7.2 points in the f1 for the se-
lective scenario (   ve ne classes). this is a re-
markable result for a ner system that uses only
automatically learned features.

this work is organized as follows. in section
2, we brie   y describe the charwnn architecture.
section 3 details our experimental setup and sec-
tion 4 discuss our experimental results. section 6
presents our    nal remarks.

2 charwnn

charwnn extends collobert et al.   s (2011) neu-
ral network architecture for sequential classi   ca-
tion by adding a convolutional layer to extract
character-level representations (dos santos and
zadrozny, 2014). given a sentence, the network
gives for each word a score for each class (tag)
       t . as depicted in figure 1, in order to score
a word, the network takes as input a    xed-sized
window of words centralized in the target word.
the input is passed through a sequence of layers
where features with increasing levels of complex-
ity are extracted. the output for the whole sen-
tence is then processed using the viterbi algorithm
(viterbi, 1967) to perform id170.
for a detailed description of the charwnn neu-
ral network we refer the reader to (dos santos and
zadrozny, 2014).

2.1 word- and character-level embeddings
as illustrated in figure 1, the    rst layer of the
network transforms words into real-valued fea-
ture vectors (embeddings). these embeddings are
meant to capture morphological, syntactic and se-
mantic information about the words. we use a
   xed-sized word vocabulary v wrd, and we con-
sider that words are composed of characters from
a    xed-sized character vocabulary v chr. given a
sentence consisting of n words {w1, w2, ..., wn},
every word wn is converted into a vector un =
[rwrd; rwch], which is composed of two sub-
vectors: the word-level embedding rwrd     rdwrd
and the character-level embedding rwch     rclu of
wn. while word-level embeddings capture syntac-
tic and semantic information, character-level em-
beddings capture morphological and shape infor-
mation.
word-level embeddings are encoded by col-
umn vectors in an embedding matrix w wrd    

rdwrd  |v wrd|, and retrieving the embedding of a
particular word consists in a simple matrix-vector
multiplication. the matrix w wrd is a parameter
to be learned, and the size of the word-level em-
bedding dwrd is a hyperparameter to be set by the
user.

the character-level embedding of each word is
computed using a convolutional layer (waibel et
al., 1989; lecun et al., 1998). in figure 1, we il-
lustrate the construction of the character-level em-
bedding for the word bennett, but the same pro-
cess is used to construct the character-level em-
bedding of each word in the input. the convo-
lutional layer    rst produces local features around
each character of the word, and then combines
them using a max operation to create a    xed-sized
character-level embedding of the word.
given a word w composed of m characters
{c1, c2, ..., cm}, we    rst transform each charac-
ter cm into a character embedding rchr
m . character
embeddings are encoded by column vectors in the
embedding matrix w chr     rdchr  |v chr|. given a
character c, its embedding rchr is obtained by the
matrix-vector product: rchr = w chrvc, where vc

is a vector of size(cid:12)(cid:12)v chr(cid:12)(cid:12) which has value 1 at in-

, rchr

m }.
, ..., rchr

dex c and zero in all other positions. the input for
the convolutional layer is the sequence of charac-
ter embeddings {rchr
the convolutional

2
layer applies a matrix-
vector operation to each window of
size
kchr of successive windows in the sequence
m }. let us de   ne the vector
{rchr
zm     rdchrkchr as the concatenation of the
its (kchr     1)/2 left
character embedding m,
(cid:17)t
neighbors, and its (kchr     1)/2 right neighbors:

, ..., rchr

, rchr

(cid:16)

1

1

2

rchr
m   (kchr   1)/2, ..., rchr

m+(kchr   1)/2

zm =

the convolutional layer computes the j-th element
of the vector rwch, which is the character-level em-
bedding of w, as follows:

[rwch]j = max
1<m<m

(1)

j

where w 0     rclu  dchrkchr is the weight matrix of
the convolutional layer. the same matrix is used to
extract local features around each character win-
dow of the given word. using the max over all
character windows of the word, we extract a    xed-
sized feature vector for the word.

matrices w chr and w 0, and vector b0 are pa-
rameters to be learned. the size of the character

(cid:2)w 0zm + b0(cid:3)

figure 1: charwnn architecture

vector dchr, the number of convolutional units clu
(which corresponds to the size of the character-
level embedding of a word), and the size of the
character context window kchr are hyperparame-
ters.

2.2 scoring and structured id136
we follow collobert et al.   s (collobert et al., 2011)
window approach to score all tags t for each word
in a sentence. this approach follows the assump-
tion that in sequential classi   cation the tag of a
word depends mainly on its neighboring words.
given a sentence with n words {w1, w2, ..., wn},
which have been converted to joint word-level
and character-level embedding {u1, u2, ..., un},
to compute tag scores for the n-th word wn in the
sentence, we    rst create a vector r resulting from
the concatenation of a sequence of kwrd embed-
dings, centralized in the n-th word:

r =

un   (kwrd   1)/2, ..., un+(kwrd   1)/2

we use a special padding token for the words with
indices outside of the sentence boundaries.

(cid:17)t

(cid:16)

next, the vector r is processed by two usual
neural network layers, which extract one more
level of representation and compute the scores:

s(wn) = w 2h(w 1r + b1) + b2

(2)
where matrices w 1     rhlu  kwrd(dwrd+clu) and
w 2     r|t|  hlu, and vectors b1     rhlu and
b2     r|t| are parameters to be learned. the trans-
fer function h(.) is the hyperbolic tangent. the
size of the context window kwrd and the number
of hidden units hlu are hyperparameters to be cho-
sen by the user.

like in (collobert et al., 2011), charwnn uses
a prediction scheme that takes into account the
sentence structure. the method uses a transi-
tion score atu for jumping from tag t     t to
u     t in successive words, and a score a0t for
starting from the t-th tag. given the sentence
1 = {w1, w2, ..., wn}, the score for tag path
[w]n
1 = {t1, t2, ..., tn} is computed as follows:
(cid:17)
[t]n

(cid:16)

n(cid:88)

s(cid:0)[w]n

1 ,   (cid:1) =

atn   1tn + s(wn)tn

1 , [t]n

n=1

(3)

where s(wn)tn is the score given for tag tn at word
wn and    is the set of all trainable network param-

eters (cid:0)w wrd, w chr, w 0, b0, w 1, b1, w 2, b2, a(cid:1).

after scoring each word in the sentence, the pre-
dicted sequence is inferred with the viterbi algo-
rithm.

2.3 network training
we train charwnn by minimizing a negative
likelihood over the training set d. in the same way
as in (collobert et al., 2011), we interpret the sen-
tence score (3) as a id155 over a
path. for this purpose, we exponentiate the score
(3) and normalize it with respect to all possible
paths. taking the log, we arrive at the following
conditional log-id203:

log p(cid:0)[t]n

1 ,   (cid:1) = s(cid:0)[w]n
       (cid:88)

es([w]n

1 |[w]n
   log

1 ,   (cid:1)
       (4)

1 , [t]n

1 ,[u]n

1 ,  )

   [u]n

1    t n

the log-likelihood in equation 4 can be com-
puted ef   ciently using id145
(collobert, 2011). we use stochastic gradient
descent (sgd) to minimize the negative log-
likelihood with respect to   . we use the backprop-
agation algorithm to compute the gradients of the
neural network. we implemented charwnn us-
ing the theano library (bergstra et al., 2010).

3 experimental setup
3.1 unsupervised learning of word

embeddings

the id27s used in our experiments
are initialized by means of unsupervised pre-
training. we perform pre-training of word-
level embeddings using the skip-gram nn archi-
tecture (mikolov et al., 2013) available in the
id97 1 tool.

in our experiments on portuguese ner, we use
the word-level embeddings previously trained by
(dos santos and zadrozny, 2014). they have used
a corpus composed of the portuguese wikipedia,
the cetenfolha2 corpus and the cetempub-
lico3 corpus.

in our experiments on spanish ner, we use
the spanish wikipedia. we process the span-
ish wikipedia corpus using the same steps used

1http://code.google.com/p/id97/
2http://www.linguateca.pt/cetenfolha/
3http://www.linguateca.pt/cetempublico/

by (dos santos and zadrozny, 2014): (1) remove
paragraphs that are not in spanish; (2) substitute
non-roman characters by a special character; (3)
tokenize the text using a tokenizer that we have
implemented; (4) remove sentences that are less
than 20 characters long (including white spaces)
or have less than 5 tokens; (5) lowercase all words
and substitute each numerical digit by a 0. the re-
sulting corpus contains around 450 million tokens.
following (dos santos and zadrozny, 2014), we
do not perform unsupervised learning of character-
level embeddings. the character-level embed-
dings are initialized by randomly sampling each
value from an uniform distribution: u (   r, r),
where r =

(cid:114)

6

|v chr| + dchr .

3.2 corpora
we use the corpus from the    rst harem
evaluation (santos and cardoso, 2007) in our
experiments on portuguese ner. this corpus
is annotated with ten named entity categories:
person (pessoa), organization (organiza-
cao), location (local), value (valor), date
(tempo), abstraction (abstraccao), title
(obra), event
(acontecimento), thing
(coisa) and other (outro). the harem cor-
pus is already divided into two subsets: first
harem and miniharem. each subset corre-
sponds to a different portuguese ner contest.
in our experiments, we call harem i the setup
where we use the first harem corpus as the
training set and the miniharem corpus as the
test set. this is the same setup used by dos santos
and milidi  u (2012). additionally, we tokenize the
harem corpus and create a development set that
comprises 5% of the training set. table 1 present
some details of this dataset.

in our experiments on spanish ner we use
the spa conll-2002 corpus, which was de-
veloped for the conll-2002 shared task (tjong
kim sang, 2002). it is annotated with four named
entity categories: person, organization, location
and miscellaneous. the spa conll-2002 corpus
is already divided into training, development and
test sets. the development set has characteristics
similar to the test corpora.

we treat ner as a sequential classi   cation
problem. hence, in both corpora we use the iob2
tagging style where: o, means that the word is not
a ne; b-x is used for the leftmost word of a ne
type x; and i-x means that the word is inside of
a ne type x. the iob2 tagging style is illustrated

table 1: id39 corpora.

training data

test data

sentenc. tokens sentenc. tokens
3,393 62,914
1,517 51,533

93,125
4,749
8,323 264,715

corpus

language

harem i
spa conll-2002 spanish

portuguese

in the following example.

wolff/b-per

,/o

currently/o

a/o

journalist/o
played/o
in/o

with/o

in/o argentina/b-loc

,/o
del/b-per bosque/i-per
of/o the/o

years/o

the/o
seventies/o

final/o

in/o

real/b-org

madrid/i-org

3.3 model setup
in most of our experiments, we use the same hy-
perparameters used by dos santos and zadrozny
(2014) for part-of-speech tagging. the only ex-
ception is the learning rate for spa conll-2002,
which we set to 0.005 in order to avoid diver-
gence. the hyperparameter values are presented
in table 2. we use the development sets to deter-
mine the number of training epochs, which is six
for harem and sixteen for spa conll-2002.

we compare charwnn with two similar neu-
ral network architectures: chaid56 and wnn.
chaid56 is equivalent to charwnn without word
embeddings, i.e., it uses character-level embed-
dings only. wnn is equivalent to charwnn with-
out character-level embeddings, i.e., it uses word
embeddings only. additionally, in the same way
as in (collobert et al., 2011), we check the impact
of adding to wnn two handcrafted features that
contain character-level information, namely cap-
italization and suf   x. the capitalization feature
has    ve possible values: all lowercased,    rst up-
percased, all uppercased, contains an uppercased
letter, and all other cases. we use suf   x of size
three. in our experiments, both capitalization and
suf   x embeddings have dimension    ve. the hy-
perparameters values for these two nns are shown
in table 2.

4 experimental results
4.1 results for spanish ner
in table 3, we report the performance of different
nns for the spa conll-2002 corpus. all results
for this corpus were computed using the conll-
2002 evaluation script4. charwnn achieves the

4http://www.cnts.ua.ac.be/conll2002/ner/bin/conlleval.txt

best precision, recall and f1 in both development
and test sets. for the test set, the f1 of charwnn
is 3 points larger than the f1 of the wnn that uses
two additional handcrafted features: suf   xes and
capitalization. this result suggests that, for the
ner task, the character-level embeddings are as
or more effective as the two character-level fea-
tures used in wnn. similar results were obtained
by dos santos and zadrozny (2014) in the pos
tagging task.

in the two last lines of table 3 we can see the
results of using id27s and character-
level embeddings separately. both, wnn that
uses id27s only and chaid56, do not
achieve results competitive with the results of the
networks that jointly use word-level and character-
level information. this is not surprising, since
it is already known in the nlp community that
jointly using word-level and character-level fea-
tures is important to perform named entity recog-
nition.

in table 4, we compare charwnn results with
the ones of a state-of-the-art system for the spa
conll-2002 corpus. this system was trained us-
ing adaboost and is described in (carreras et al.,
2002). it employs id90 as a base learner
and uses handcrafted features as input. among
others, these features include gazetteers with peo-
ple names and geographical location names. the
adaboost based system divide the ner task into
two intermediate sub-tasks: ne identi   cation and
ne classi   cation. in the    rst sub-task, the system
identi   es ne candidates. in the second sub-task,
the system classi   es the identi   ed candidates. in
table 4, we can see that even using only automat-
ically learned features, charwnn achieves state-
of-the-art results for the spa conll-2002. this
is an impressive result, since ner is a challenging
task to perform without the use of gazetteers.

4.2 results for portuguese ner
in table 5, we report the performance of different
nns for the harem i corpus. the results in this
table were computed using the conll-2002 eval-

table 2: neural network hyperparameters.

parameter parameter name
dwrd
kwrd
dchr
kchr
clu
hlu
  

id27 dimensions
word context window size
char. embedding dimensions
char. context window size
convolutional units
hidden units
learning rate

charwnn wnn chaid56
-
5
50
5
200
300
0.0075

100
5
10
5
50
300
0.0075

100
5
-
-
-
300
0.0075

nn

features

table 3: comparison of different nns for the spa conll-2002 corpus.
test set
rec.
82.21
78.67
68.19
59.03

f1 prec.
82.21
79.64
73.77
61.13

dev. set
rec.
78.68
76.31
68.45
51.40

word emb., char emb.
word emb., suf   x, capit.

id27s
char embeddings

prec.
80.13
78.33
73.87
53.86

79.40
77.30
71.06
52.60

charwnn

wnn
wnn
chaid56

f1
82.21
79.15
70.87
60.06

table 4: comparison with the state-of-the-art for the spa conll-2002 corpus.
system
charwnn

id27s, char embeddings

prec.
82.21

rec.
82.21

features

f1
82.21

words, ortographic, pos tags, trigger words,

adaboost

bag-of-words, gazetteers, word suf   xes,

81.38

81.40

81.39

word type patterns, entity length

uation script. we report results in two scenarios:
in the total scenario, all ten
total and selective.
categories are taken into account when scoring the
systems. in the selective scenario, only    ve chosen
categories (person, organization, location, date
and value) are taken into account. we can see
in table 5, that charwnn and wnn that uses
two additional handcrafted features have similar
results. we think that by increasing the training
data, charwnn has the potential to learn better
character embeddings and outperform wnn, like
happens in the spa conll-2002 corpus, which is
larger than the harem i corpus. again, chaid56
and wnn that uses id27s only, do not
achieve results competitive with the results of the
networks that jointly use word-level and character-
level information.

in order to compare charwnn results with
the one of the state-of-the-art system, we report
in tables 6 and 7 the precision, recall, and f1
scores computed with the evaluation scripts from
the harem i competition5 (santos and cardoso,

2007), which uses a scoring strategy different from
the conll-2002 evaluation script.

in table 6, we compare charwnn results with
the ones of etlcm t , a state-of-the-art system for
the harem i corpus (dos santos and milidi  u,
2012). etlcm t is an ensemble method that uses
id178 guided transformation learning (etl)
as the base learner. the etlcm t system uses
handcrafted features like gazetteers and dictionar-
ies as well as the output of other nlp tasks such as
id52 and noun phrase (np) chunking. as
we can see in table 6, charwnn outperforms the
state-of-the-art system by a large margin in both
total and selective scenarios, which is an remark-
able result for a system that uses automatically
learned features only.

in table 7, we compare charwnn results by
entity type with the ones of etlcm t . these
results were computed in the selective scenario.
charwnn produces a much better recall than
etlcm t for the classes loc, per and org. for
the org entity, the improvement is of 21 points

5http://www.linguateca.pt/primeiroharem/harem ar-

quitectura.html

table 5: comparison of different nns for the harem i corpus.

total scenario

nn

charwnn

wnn
wnn
chaid56

features

word emb., char emb.
word emb., suf   x, capit.

id27s
char embeddings

prec.
67.16
68.52
63.32
57.10

rec.
63.74
63.16
53.23
50.65

selective scenario
f1
71.23
71.54
63.44
59.85

rec.
68.68
68.35
58.77
54.54

f1 prec.
73.98
75.05
68.91
66.30

65.41
65.73
57.84
53.68

table 6: comparison with the state-of-the-art for the harem i corpus.

system

features

charwnn

word emb., char emb.

etlcm t

words, pos tags, np tags,
capitalization, word length,

dictionaries, gazetteers

total scenario

prec.
74.54

rec.
68.53

selective scenario
f1
77.93

rec.
77.49

f1 prec.
78.38

71.41

77.52

53.86

63.56

77.27

65.20

70.72

in the recall. we believe that a large part of this
boost in the recall is due to the unsupervised pre-
training of id27s, which can leverage
large amounts of unlabeled data to produce reli-
able word representations.

4.3

impact of unsupervised pre-training of
id27s

in table 8 we assess the impact of unsuper-
vised pre-training of id27s in char-
wnn performance for both spa conll-2002
and harem i (selective). the results were com-
puted using the conll-2002 evaluation script.
for both corpora, charwnn results are improved
when using unsupervised pre-training. the im-
pact of unsupervised pre-training is larger for the
harem i corpus (13.2 points in the f1) than for
the spa conll-2002 (4.3 points in the f1). we
believe one of the main reasons of this difference
in the impact is the training set size, which is much
smaller in the harem i corpus.

5 related work

some recent work on deep learning for named en-
tity recognition include chen et al. (2010), col-
lobert et al. (2011) and passos et al. (2014).

chen et al. (2010) employ id50
(dbn) to perform named entity categorization. in
their system, they assume that the boundaries of
all the entity mentions were previously identi   ed,
which makes their task easier than the one we
tackle in this paper. the input for their model is
the character-level information of the entity to be

classi   ed. they apply their system for a chinese
corpus and achieve state-of-the-art results for the
ne categorization task.

collobert et al. (2011) propose a deep neural
network which is equivalent to the wnn architec-
ture described in section 3.3. they achieve state-
of-the-art results for english ner by adding a fea-
ture based on gazetteer information.

passos et al.

(2014) extend the skip-gram
language model (mikolov et al., 2013) to pro-
duce phrase embeddings that are more suitable
to be used in a linear-chain crf to perform
ner. their linear-chain crf, which also uses
additional handcrafted features such as gazetteer
based, achieves state-of-the-art results on two en-
glish corpora: conll 2003 and ontonotes ner.
the main difference between our approach and
the ones proposed in previous work is the use of
neural character embeddings. this type of em-
bedding allows us to achieve state-of-the-art re-
sults for the full task of identifying and classify-
ing named entities using only features automati-
cally learned. additionally, we perform experi-
ments with two different languages, while previ-
ous work focused in one language.

6 conclusions

in this work we approach language-independent
ner using a dnn that employs word- and
character-level embeddings to perform sequential
classi   cation. we demonstrate that the same dnn
which was successfully applied for id52
can also achieve state-of-the-art results for ner,

table 7: results by entity type for the harem i corpus.
entity

charwnn

etlcm t

date
loc
org
per

prec.
90.27
76.91
70.65
81.35
value 78.08
overall
78.38

rec.
81.32
78.55
71.56
77.07
74.99
77.49

f1 prec.
88.29
76.18
65.34
81.49
77.72
77.27

85.56
77.72
71.10
79.15
76.51
77.93

rec.
82.21
68.16
50.29
61.14
70.13
65.20

f1
85.14
71.95
56.84
69.87
73.73
70.72

table 8: impact of unsup. pre-training of word emb. in charwnn performance.

corpus

spa conll-2002

harem i

pre-trained word emb. precision recall
82.21
yes
77.63
no
68.68
yes
52.27
no

82.21
78.21
73.98
65.21

f1
82.21
77.92
71.23
58.03

using the same hyperparameters, and without any
handcrafted features. moreover, we shade some
light on the contribution of neural character em-
beddings for ner; and de   ne new state-of-the-art
results for portuguese and spanish ner.

references
[bergstra et al.2010] james bergstra, olivier breuleux,
fr  ed  eric bastien, pascal lamblin, razvan pascanu,
guillaume desjardins, joseph turian, david warde-
farley, and yoshua bengio. 2010. theano: a cpu
and gpu math expression compiler. in proceedings
of the python for scienti   c computing conference
(scipy).

[carreras et al.2002] xavier carreras, llu    s m`arques,
and llu    s padr  o. 2002. named entity extraction us-
ing adaboost. in proceedings of conll-2002, pages
167   170. taipei, taiwan.

[chen et al.2010] yu chen, you ouyang, wenjie li,
dequan zheng, and tiejun zhao.
2010. using
deep belief nets for chinese named entity categoriza-
in proceedings of the named entities work-
tion.
shop, pages 102   109.

[collobert et al.2011] r. collobert, j. weston, l. bot-
tou, m. karlen, k. kavukcuoglu, and p. kuksa.
2011. natural language processing (almost) from
journal of machine learning research,
scratch.
12:2493   2537.

[doddington et al.2004] george doddington, alexis
mitchell, mark przybocki, lance ramshaw,
stephanie strassel, and ralph weischedel. 2004.
the automatic content extraction (ace) program
in proceedings of
tasks, data, and evaluation.
the fourth international conference on language
resources and evaluation (lrec-2004), lisbon,
portugal, may.

[dos santos and milidi  u2012] c    cero nogueira

dos
id178
santos and ruy luiz milidi  u.
guided transformation learning - algorithms and
applications. springer briefs in computer science.
springer.

2012.

[dos santos and zadrozny2014] c    cero nogueira dos
santos and bianca zadrozny.
learning
character-level representations for part-of-speech
in proceedings of the 31st international
tagging.
conference on machine learning, jmlr: w&cp
volume 32, beijing, china.

2014.

[finkel et al.2005] jenny rose finkel, trond grenager,
and christopher manning.
incorporating
non-local information into information extraction
in proceedings of the
systems by id150.
43rd annual meeting on association for computa-
tional linguistics, pages 363   370.

2005.

[lecun et al.1998] yann lecun, lon bottou, yoshua
bengio, and patrick haffner. 1998. gradient-based
in pro-
learning applied to document recognition.
ceedings of the ieee, pages 2278   2324.

[collobert2011] r. collobert. 2011. deep learning
for ef   cient discriminative parsing. in proceedings
of the fourteenth international conference on ar-
ti   cial intelligence and statistics (aistats), pages
224   232.

[mikolov et al.2013] tomas mikolov, kai chen, greg
corrado, and jeffrey dean. 2013. ef   cient estima-
tion of word representations in vector space. in pro-
ceedings of workshop at international conference
on learning representations.

[milidi  u et al.2007] ruy luiz milidi  u,

julio cesar
duarte, and roberto cavalcante. 2007. machine
learning algorithms for portuguese named entity
recognition. revista iberoamericana de inteligen-
cia arti   cial, pages 67   75.

[passos et al.2014] alexandre passos, vineet kumar,
and andrew mccallum. 2014. lexicon infused
phrase embeddings for named entity resolution. in
proceedings of the eighteenth conference on com-
putational natural language learning, pages 78   
86, ann arbor, michigan.

[santos and cardoso2007] diana santos and nuno car-
doso. 2007. reconhecimento de entidades men-
cionadas em portugu  es. linguateca, portugal.

[tang et al.2014] buzhou tang, hongxin cao, xiao-
long wang, qingcai chen, and hua xu. 2014. eval-
uating word representation features in biomedical
id39 tasks. biomed research
international, 2014.

[tjong kim sang and de meulder2003] erik f. tjong
intro-
kim sang and fien de meulder.
duction to the conll-2003 shared task: language-
independent id39.
in walter
daelemans and miles osborne, editors, proceed-
ings of conll-2003, pages 142   147. edmonton,
canada.

2003.

[tjong kim sang2002] erik f. tjong kim sang.
2002.
introduction to the conll-2002 shared task:
language-independent id39.
in proceedings of conll-2002, pages 155   158.
taipei, taiwan.

[viterbi1967] a. j. viterbi. 1967. error bounds for
convolutional codes and an asymptotically optimum
ieee transactions on infor-
decoding algorithm.
mation theory, 13(2):260   269, april.

[waibel et al.1989] a. waibel, t. hanazawa, g. hin-
ton, k. shikano, and k. j. lang. 1989. phoneme
recognition using time-delay neural networks. ieee
transactions on acoustics, speech and signal pro-
cessing, 37(3):328   339.

