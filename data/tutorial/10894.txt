unpaired image-to-image translation

using cycle-consistent adversarial networks

jun-yan zhu   

taesung park   

phillip isola

alexei a. efros

berkeley ai research (bair) laboratory, uc berkeley

8
1
0
2

 

v
o
n
5
1

 

 
 
]

v
c
.
s
c
[
 
 

6
v
3
9
5
0
1

.

3
0
7
1
:
v
i
x
r
a

figure 1: given any two unordered image collections x and y , our algorithm learns to automatically    translate    an image
from one into the other and vice versa: (left) monet paintings and landscape photos from flickr; (center) zebras and horses
from id163; (right) summer and winter yosemite photos from flickr. example application (bottom): using a collection
of paintings of famous artists, our method learns to render natural photographs into the respective styles.

abstract

image-to-image translation is a class of vision and
graphics problems where the goal is to learn the mapping
between an input image and an output image using a train-
ing set of aligned image pairs. however, for many tasks,
paired training data will not be available. we present an
approach for learning to translate an image from a source
domain x to a target domain y in the absence of paired
examples. our goal is to learn a mapping g : x     y
such that the distribution of images from g(x) is indistin-
guishable from the distribution y using an adversarial loss.
because this mapping is highly under-constrained, we cou-
ple it with an inverse mapping f : y     x and introduce a
cycle consistency loss to enforce f (g(x))     x (and vice
versa). qualitative results are presented on several tasks
where paired training data does not exist, including collec-
tion style transfer, object trans   guration, season transfer,
photo enhancement, etc. quantitative comparisons against
several prior methods demonstrate the superiority of our
approach.

1. introduction

what did claude monet see as he placed his easel by the
bank of the seine near argenteuil on a lovely spring day
in 1873 (figure 1, top-left)? a color photograph, had it
been invented, may have documented a crisp blue sky and
a glassy river re   ecting it. monet conveyed his impression
of this same scene through wispy brush strokes and a bright
palette.

what if monet had happened upon the little harbor in
cassis on a cool summer evening (figure 1, bottom-left)?
a brief stroll through a gallery of monet paintings makes it
possible to imagine how he would have rendered the scene:
perhaps in pastel shades, with abrupt dabs of paint, and a
somewhat    attened dynamic range.

we can imagine all this despite never having seen a side
by side example of a monet painting next to a photo of the
scene he painted. instead, we have knowledge of the set of
monet paintings and of the set of landscape photographs.
we can reason about the stylistic differences between these

* indicates equal contribution

1

zebrashorseshorse        zebrazebra        horsesummer wintersummer        winterwinter        summerphotographvan goghcezannemonetukiyo-emonet        photosmonet        photophoto       moneta mapping g : x     y such that the output   y = g(x),
x     x, is indistinguishable from images y     y by an ad-
versary trained to classify   y apart from y. in theory, this ob-
jective can induce an output distribution over   y that matches
the empirical distribution pdata(y) (in general, this requires
g to be stochastic) [16]. the optimal g thereby translates
the domain x to a domain   y distributed identically to y .
however, such a translation does not guarantee that an in-
dividual input x and output y are paired up in a meaningful
way     there are in   nitely many mappings g that will in-
duce the same distribution over   y. moreover, in practice,
we have found it dif   cult to optimize the adversarial objec-
tive in isolation: standard procedures often lead to the well-
known problem of mode collapse, where all input images
map to the same output image and the optimization fails to
make progress [15].

these issues call for adding more structure to our ob-
jective. therefore, we exploit the property that translation
should be    cycle consistent   , in the sense that if we trans-
late, e.g., a sentence from english to french, and then trans-
late it back from french to english, we should arrive back
at the original sentence [3]. mathematically, if we have a
translator g : x     y and another translator f : y     x,
then g and f should be inverses of each other, and both
mappings should be bijections. we apply this structural as-
sumption by training both the mapping g and f simultane-
ously, and adding a cycle consistency loss [64] that encour-
ages f (g(x))     x and g(f (y))     y. combining this loss
with adversarial losses on domains x and y yields our full
objective for unpaired image-to-image translation.

we apply our method to a wide range of applications,
including collection style transfer, object trans   guration,
season transfer and photo enhancement. we also compare
against previous approaches that rely either on hand-de   ned
factorizations of style and content, or on shared embed-
ding functions, and show that our method outperforms these
baselines. we provide both pytorch and torch implemen-
tations. check out more results at our website.

2. related work

id3 (gans) [16, 63]
have achieved impressive results in image generation [6,
39], image editing [66], and representation learning [39, 43,
37]. recent methods adopt the same idea for conditional
image generation applications, such as text2image [41], im-
age inpainting [38], and future prediction [36], as well as to
other domains like videos [54] and 3d data [57]. the key to
gans    success is the idea of an adversarial loss that forces
the generated images to be, in principle, indistinguishable
from real photos. this loss is particularly powerful for im-
age generation tasks, as this is exactly the objective that
much of computer graphics aims to optimize. we adopt an
adversarial loss to learn the mapping such that the translated

figure 2: paired training data (left) consists of training ex-
amples {xi, yi}n
i=1, where the correspondence between xi
and yi exists [22]. we instead consider unpaired training
i=1 (xi     x)
data (right), consisting of a source set {xi}n
and a target set {yj}j=1 (yj     y ), with no information pro-
vided as to which xi matches which yj.

two sets, and thereby imagine what a scene might look like
if we were to    translate    it from one set into the other.

in this paper, we present a method that can learn to do the
same: capturing special characteristics of one image col-
lection and    guring out how these characteristics could be
translated into the other image collection, all in the absence
of any paired training examples.

this problem can be more broadly described as image-
to-image translation [22], converting an image from one
representation of a given scene, x,
to another, y, e.g.,
grayscale to color, image to semantic labels, edge-map to
photograph. years of research in id161, image
processing, computational photography, and graphics have
produced powerful translation systems in the supervised
setting, where example image pairs {xi, yi}n
i=1 are avail-
able (figure 2, left), e.g., [11, 19, 22, 23, 28, 33, 45, 56, 58,
62]. however, obtaining paired training data can be dif   cult
and expensive. for example, only a couple of datasets ex-
ist for tasks like semantic segmentation (e.g., [4]), and they
are relatively small. obtaining input-output pairs for graph-
ics tasks like artistic stylization can be even more dif   cult
since the desired output is highly complex, typically requir-
ing artistic authoring. for many tasks, like object trans   gu-
ration (e.g., zebra   horse, figure 1 top-middle), the desired
output is not even well-de   ned.

we therefore seek an algorithm that can learn to trans-
late between domains without paired input-output examples
(figure 2, right). we assume there is some underlying rela-
tionship between the domains     for example, that they are
two different renderings of the same underlying scene     and
seek to learn that relationship. although we lack supervi-
sion in the form of paired examples, we can exploit super-
vision at the level of sets: we are given one set of images in
domain x and a different set in domain y . we may train

         pairedunpairedfigure 3: (a) our model contains two mapping functions g : x     y and f : y     x, and associated adversarial
discriminators dy and dx. dy encourages g to translate x into outputs indistinguishable from domain y , and vice versa
for dx and f . to further regularize the mappings, we introduce two cycle consistency losses that capture the intuition that if
we translate from one domain to the other and back again we should arrive at where we started: (b) forward cycle-consistency
loss: x     g(x)     f (g(x))     x, and (c) backward cycle-consistency loss: y     f (y)     g(f (y))     y
images cannot be distinguished from images in the target
domain.

image-to-image translation the idea of image-to-
image translation goes back at least to hertzmann et al.   s
image analogies [19], who employ a non-parametric tex-
ture model [10] on a single input-output training image pair.
more recent approaches use a dataset of input-output exam-
ples to learn a parametric translation function using id98s
(e.g., [33]). our approach builds on the    pix2pix    frame-
work of isola et al. [22], which uses a conditional generative
adversarial network [16] to learn a mapping from input to
output images. similar ideas have been applied to various
tasks such as generating photographs from sketches [44] or
from attribute and semantic layouts [25]. however, unlike
the above prior work, we learn the mapping without paired
training examples.

unpaired image-to-image translation several other
methods also tackle the unpaired setting, where the goal is
to relate two data domains: x and y . rosales et al. [42]
propose a bayesian framework that includes a prior based
on a patch-based markov random    eld computed from a
source image and a likelihood term obtained from multiple
style images. more recently, cogan [32] and cross-modal
scene networks [1] use a weight-sharing strategy to learn a
common representation across domains. concurrent to our
method, liu et al. [31] extends the above framework with
a combination of id5 [27] and genera-
tive adversarial networks [16]. another line of concurrent
work [46, 49, 2] encourages the input and output to share
speci   c    content    features even though they may differ in
   style   . these methods also use adversarial networks, with
additional terms to enforce the output to be close to the input
in a prede   ned metric space, such as class label space [2],
image pixel space [46], and image feature space [49].

unlike the above approaches, our formulation does not
rely on any task-speci   c, prede   ned similarity function be-

tween the input and output, nor do we assume that the input
and output have to lie in the same low-dimensional embed-
ding space. this makes our method a general-purpose solu-
tion for many vision and graphics tasks. we directly com-
pare against several prior and contemporary approaches in
section 5.1.

cycle consistency the idea of using transitivity as a
way to regularize structured data has a long history.
in
visual tracking, enforcing simple forward-backward con-
sistency has been a standard trick for decades [24, 48].
in the language domain, verifying and improving transla-
tions via    back translation and reconciliation    is a technique
used by human translators [3] (including, humorously, by
mark twain [51]), as well as by machines [17]. more
recently, higher-order cycle consistency has been used in
structure from motion [61], 3d shape matching [21], co-
segmentation [55], dense semantic alignment [65, 64], and
depth estimation [14]. of these, zhou et al. [64] and go-
dard et al. [14] are most similar to our work, as they use a
cycle consistency loss as a way of using transitivity to su-
pervise id98 training. in this work, we are introducing a
similar loss to push g and f to be consistent with each
other. concurrent with our work, in these same proceed-
ings, yi et al. [59] independently use a similar objective
for unpaired image-to-image translation, inspired by dual
learning in machine translation [17].

neural style transfer [13, 23, 52, 12] is another way
to perform image-to-image translation, which synthesizes a
novel image by combining the content of one image with
the style of another image (typically a painting) based on
matching the gram matrix statistics of pre-trained deep fea-
tures. our primary focus, on the other hand, is learning
the mapping between two image collections, rather than be-
tween two speci   c images, by trying to capture correspon-
dences between higher-level appearance structures. there-
fore, our method can be applied to other tasks, such as

xygfdydxgf  yxy(xy(gf  x(a)(b)(c)cycle-consistencylosscycle-consistencylossdydx  y  xxypainting    photo, object trans   guration, etc. where single
sample transfer methods do not perform well. we compare
these two methods in section 5.2.

3. formulation

our goal is to learn mapping functions between two
domains x and y given training samples {xi}n
i=1 where
j=1 where yj     y 1. we denote the data
xi     x and {yj}m
distribution as x     pdata(x) and y     pdata(y). as illus-
trated in figure 3 (a), our model includes two mappings
g : x     y and f : y     x.
in addition, we in-
troduce two adversarial discriminators dx and dy , where
dx aims to distinguish between images {x} and translated
images {f (y)}; in the same way, dy aims to discriminate
between {y} and {g(x)}. our objective contains two types
of terms: adversarial losses [16] for matching the distribu-
tion of generated images to the data distribution in the target
domain; and cycle consistency losses to prevent the learned
mappings g and f from contradicting each other.
3.1. adversarial loss

we apply adversarial losses [16] to both mapping func-
tions. for the mapping function g : x     y and its dis-
criminator dy , we express the objective as:
lgan(g, dy , x, y ) = e
+ e

y   pdata(y)[log dy (y)]
x   pdata(x)[log(1     dy (g(x))],
(1)

where g tries to generate images g(x) that look similar to
images from domain y , while dy aims to distinguish be-
tween translated samples g(x) and real samples y. g aims
to minimize this objective against an adversary d that tries
i.e., ming maxdy lgan(g, dy , x, y ).
to maximize it,
we introduce a similar adversarial loss for the mapping
function f : y     x and its discriminator dx as well:
i.e., minf maxdx lgan(f, dx , y, x).
3.2. cycle consistency loss

adversarial training can, in theory, learn mappings g
and f that produce outputs identically distributed as target
domains y and x respectively (strictly speaking, this re-
quires g and f to be stochastic functions) [15]. however,
with large enough capacity, a network can map the same
set of input images to any random permutation of images in
the target domain, where any of the learned mappings can
induce an output distribution that matches the target dis-
tribution. thus, adversarial losses alone cannot guarantee
that the learned function can map an individual input xi to
a desired output yi. to further reduce the space of possi-
ble mapping functions, we argue that the learned mapping

1we often omit the subscript i and j for simplicity.

figure 4: the input images x, output images g(x) and the
reconstructed images f (g(x)) from various experiments.
from top to bottom: photo   cezanne, horses   zebras,
winter   summer yosemite, aerial photos   google maps.
functions should be cycle-consistent: as shown in figure 3
(b), for each image x from domain x, the image translation
cycle should be able to bring x back to the original image,
i.e., x     g(x)     f (g(x))     x. we call this forward cy-
cle consistency. similarly, as illustrated in figure 3 (c), for
each image y from domain y , g and f should also satisfy
backward cycle consistency: y     f (y)     g(f (y))     y.
we incentivize this behavior using a cycle consistency loss:

lcyc(g, f ) = e
+ e

x   pdata(x)[(cid:107)f (g(x))     x(cid:107)1]
y   pdata(y)[(cid:107)g(f (y))     y(cid:107)1].

(2)

in preliminary experiments, we also tried replacing the l1
norm in this loss with an adversarial loss between f (g(x))
and x, and between g(f (y)) and y, but did not observe
improved performance.

the behavior induced by the cycle consistency loss can
be observed in figure 4: the reconstructed images f (g(x))
end up matching closely to the input images x.

3.3. full objective

our full objective is:

l(g, f, dx , dy ) =lgan(g, dy , x, y )
+ lgan(f, dx , y, x)
+   lcyc(g, f ),

(3)

input     output    (    )reconstructionf(        )where    controls the relative importance of the two objec-
tives. we aim to solve:

   
g

, f

   

= arg min
g,f

max
dx,dy

l(g, f, dx , dy ).

(4)

notice that our model can be viewed as training two    au-
toencoders    [20]: we learn one autoencoder f     g : x    
x jointly with another g    f : y     y . however, these au-
toencoders each have special internal structures: they map
an image to itself via an intermediate representation that
is a translation of the image into another domain. such a
setup can also be seen as a special case of    adversarial au-
toencoders    [34], which use an adversarial loss to train the
bottleneck layer of an autoencoder to match an arbitrary tar-
get distribution. in our case, the target distribution for the
x     x autoencoder is that of the domain y .

in section 5.1.4, we compare our method against ab-
lations of the full objective, including the adversarial loss
lgan alone and the cycle consistency loss lcyc alone, and
empirically show that both objectives play critical roles
in arriving at high-quality results. we also evaluate our
method with only cycle loss in one direction and show that
a single cycle is not suf   cient to regularize the training for
this under-constrained problem.

4. implementation
network architecture we adopt the architecture for our
generative networks from johnson et al. [23] who have
shown impressive results for neural style transfer and super-
resolution. this network contains two stride-2 convolu-
tions, several residual blocks [18], and two fractionally-
2. we use 6 blocks for
strided convolutions with stride 1
128    128 images and 9 blocks for 256    256 and higher-
resolution training images. similar to johnson et al. [23],
we use instance id172 [53]. for the discriminator
networks we use 70    70 patchgans [22, 30, 29], which
aim to classify whether 70    70 overlapping image patches
are real or fake. such a patch-level discriminator architec-
ture has fewer parameters than a full-image discriminator
and can work on arbitrarily-sized images in a fully convo-
lutional fashion [22].

training details we apply two techniques from recent
works to stabilize our model training procedure. first,
for lgan (equation 1), we replace the negative log like-
lihood objective by a least-squares loss [35]. this loss is
more stable during training and generates higher quality
results. in particular, for a gan loss lgan(g, d, x, y ),
x   pdata(x)[(d(g(x))     1)2]
we train the g to minimize e
y   pdata(y)[(d(y)     1)2] +
and train the d to minimize e
e
x   pdata(x)[d(g(x))2].
second, to reduce model oscillation [15], we follow
shrivastava et al.   s strategy [46] and update the discrimi-

nators using a history of generated images rather than the
ones produced by the latest generators. we keep an image
buffer that stores the 50 previously created images.

for all the experiments, we set    = 10 in equation 3.
we use the adam solver [26] with a batch size of 1. all
networks were trained from scratch with a learning rate of
0.0002. we keep the same learning rate for the    rst 100
epochs and linearly decay the rate to zero over the next 100
epochs. please see the appendix (section 7) for more details
about the datasets, architectures, and training procedures.

5. results

we    rst compare our approach against recent methods
for unpaired image-to-image translation on paired datasets
where ground truth input-output pairs are available for eval-
uation. we then study the importance of both the adversar-
ial loss and the cycle consistency loss and compare our full
method against several variants. finally, we demonstrate
the generality of our algorithm on a wide range of applica-
tions where paired data does not exist. for brevity, we refer
to our method as cyclegan. the pytorch and torch code,
models, and full results can be found at our website.
5.1. evaluation

using the same evaluation datasets and metrics as
   pix2pix    [22], we compare our method against several
baselines both qualitatively and quantitatively. the tasks in-
clude semantic labels   photo on the cityscapes dataset [4],
and map   aerial photo on data scraped from google maps.
we also perform ablation study on the full id168.

5.1.1 id74

amt perceptual studies on the map   aerial photo
task, we run    real vs fake    perceptual studies on amazon
mechanical turk (amt) to assess the realism of our out-
puts. we follow the same perceptual study protocol from
isola et al. [22], except we only gather data from 25 partic-
ipants per algorithm we tested. participants were shown a
sequence of pairs of images, one a real photo or map and
one fake (generated by our algorithm or a baseline), and
asked to click on the image they thought was real. the    rst
10 trials of each session were practice and feedback was
given as to whether the participant   s response was correct
or incorrect. the remaining 40 trials were used to assess
the rate at which each algorithm fooled participants. each
session only tested a single algorithm, and participants were
only allowed to complete a single session. the numbers we
report here are not directly comparable to those in [22] as
our ground truth images were processed slightly differently
2 and the participant pool we tested may be differently dis-
2we train all the models on 256    256 images while in pix2pix [22],
the model was trained on 256    256 patches of 512    512 images, and

figure 5: different methods for mapping labels   photos trained on cityscapes images. from left to right:
input, bi-
gan/ali [7, 9], cogan [32], feature loss + gan, simgan [46], cyclegan (ours), pix2pix [22] trained on paired data,
and ground truth.

figure 6: different methods for mapping aerial photos   maps on google maps. from left to right: input, bigan/ali [7, 9],
cogan [32], feature loss + gan, simgan [46], cyclegan (ours), pix2pix [22] trained on paired data, and ground truth.

tributed from those tested in [22] (due to running the exper-
iment at a different date and time). therefore, our numbers
should only be used to compare our current method against
the baselines (which were run under identical conditions),
rather than against [22].

fcn score although perceptual studies may be the gold
standard for assessing graphical realism, we also seek an
automatic quantitative measure that does not require human
experiments. for this, we adopt the    fcn score    from [22],
and use it to evaluate the cityscapes labels   photo task.
the fcn metric evaluates how interpretable the generated
photos are according to an off-the-shelf semantic segmen-
tation algorithm (the fully-convolutional network, fcn,
from [33]). the fcn predicts a label map for a generated
photo. this label map can then be compared against the
input ground truth labels using standard semantic segmen-
run convolutionally on the 512    512 images at test time. we choose
256    256 in our experiments as many baselines cannot scale up to high-
resolution images, and cogan cannot be tested fully convolutionally.

tation metrics described below. the intuition is that if we
generate a photo from a label map of    car on the road   ,
then we have succeeded if the fcn applied to the generated
photo detects    car on the road   .
semantic segmentation metrics to evaluate the perfor-
mance of photo   labels, we use the standard metrics from
the cityscapes benchmark [4], including per-pixel accuracy,
per-class accuracy, and mean class intersection-over-union
(class iou) [4].

5.1.2 baselines

cogan [32] this method learns one gan generator for
domain x and one for domain y , with tied weights on the
   rst few layers for shared latent representations. translation
from x to y can be achieved by    nding a latent represen-
tation that generates image x and then rendering this latent
representation into style y .

simgan [46] like our method, shrivastava et al.[46]
uses an adversarial loss to train a translation from x to y .

inputbigancoganfeature loss gansimgancycleganpix2pixground truthinputbigancoganfeature loss gansimgancycleganpix2pixground truthloss
cogan [32]
bigan/ali [9, 7]
simgan [46]
feature loss + gan
cyclegan (ours)

% turkers labeled real % turkers labeled real

map     photo
0.6%    0.5%
2.1%    1.0%
0.7%    0.5%
1.2%    0.6%
26.8%    2.8%

photo     map
0.9%    0.5%
1.9%    0.9%
2.6%    1.1%
0.3%    0.2%
23.2%    3.4%

table 1: amt    real vs fake    test on maps   aerial photos at
256    256 resolution.

loss
cogan [32]
bigan/ali [9, 7]
simgan [46]
feature loss + gan
cyclegan (ours)
pix2pix [22]

per-pixel acc. per-class acc. class iou

0.40
0.19
0.20
0.06
0.52
0.71

0.10
0.06
0.10
0.04
0.17
0.25

0.06
0.02
0.04
0.01
0.11
0.18

table 2: fcn-scores for different methods, evaluated on
cityscapes labels   photo.

per-pixel acc. per-class acc. class iou

loss
cogan [32]
bigan/ali [9, 7]
simgan [46]
feature loss + gan
cyclegan (ours)
pix2pix [22]

0.45
0.41
0.47
0.50
0.58
0.85

0.11
0.13
0.11
0.10
0.22
0.40

0.08
0.07
0.07
0.06
0.16
0.32

table 3: classi   cation performance of photo   labels for
different methods on cityscapes.
the id173 term (cid:107)x     g(x)(cid:107)1 i s used to penalize
making large changes at pixel level.

feature loss + gan we also test a variant of sim-
gan [46] where the l1 loss is computed over deep
image features using a pretrained network (vgg-16
relu4 2 [47]), rather than over rgb pixel values. com-
puting distances in deep feature space, like this, is also
sometimes referred to as using a    perceptual loss    [8, 23].
bigan/ali [9, 7] unconditional gans [16] learn a
generator g : z     x, that maps a random noise z to an
image x. the bigan [9] and ali [7] propose to also learn
the inverse mapping function f : x     z. though they
were originally designed for mapping a latent vector z to an
image x, we implemented the same objective for mapping a
source image x to a target image y.

pix2pix [22] we also compare against pix2pix [22],
which is trained on paired data, to see how close we can
get to this    upper bound    without using any paired data.

for a fair comparison, we implement all the baselines
using the same architecture and details as our method, ex-
cept for cogan [32]. cogan builds on generators that
produce images from a shared latent representation, which
is incompatible with our image-to-image network. we use
the public implementation of cogan instead.

5.1.3 comparison against baselines

as can be seen in figure 5 and figure 6, we were unable to
achieve compelling results with any of the baselines. our

loss
cycle alone
gan alone
gan + forward cycle
gan + backward cycle
cyclegan (ours)

per-pixel acc. per-class acc. class iou

0.22
0.51
0.55
0.39
0.52

0.07
0.11
0.18
0.14
0.17

0.02
0.08
0.12
0.06
0.11

table 4: ablation study: fcn-scores for different variants
of our method, evaluated on cityscapes labels   photo.
per-pixel acc. per-class acc. class iou

loss
cycle alone
gan alone
gan + forward cycle
gan + backward cycle
cyclegan (ours)

0.10
0.53
0.49
0.01
0.58

0.05
0.11
0.11
0.06
0.22

0.02
0.07
0.07
0.01
0.16

table 5: ablation study: classi   cation performance of
photo   labels for different losses, evaluated on cityscapes.
method, on the other hand, can produce translations that are
often of similar quality to the fully supervised pix2pix.

table 1 reports performance regarding the amt per-
ceptual realism task. here, we see that our method can
fool participants on around a quarter of trials, in both the
maps   aerial photos direction and the aerial photos   maps
direction at 256    256 resolution3. all the baselines almost
never fooled participants.
table 2 assesses the performance of the labels   photo
task on the cityscapes and table 3 evaluates the opposite
mapping (photos   labels). in both cases, our method again
outperforms the baselines.

5.1.4 analysis of the id168
in table 4 and table 5, we compare against ablations
of our full loss. removing the gan loss substantially
degrades results, as does removing the cycle-consistency
loss. we therefore conclude that both terms are critical
to our results. we also evaluate our method with the cy-
cle loss in only one direction: gan + forward cycle loss
x   pdata(x)[(cid:107)f (g(x))   x(cid:107)1], or gan + backward cycle loss
e
y   pdata(y)[(cid:107)g(f (y))   y(cid:107)1] (equation 2) and    nd that it of-
e
ten incurs training instability and causes mode collapse, es-
pecially for the direction of the mapping that was removed.
figure 7 shows several qualitative examples.

image reconstruction quality

5.1.5
in figure 4, we show a few random samples of the recon-
structed images f (g(x)). we observed that the recon-
structed images were often close to the original inputs x,
at both training and testing time, even in cases where one
domain represents signi   cantly more diverse information,
such as map   aerial photos.

3we also train cyclegan and pix2pix at 512    512 resolution, and
observe the comparable performance: maps   aerial photos: cyclegan:
37.5%    3.6% and pix2pix: 33.9%    3.1%; aerial photos   maps: cy-
clegan: 16.5%    4.1% and pix2pix: 8.5%    2.6%

figure 7: different variants of our method for mapping labels   photos trained on cityscapes. from left to right: input, cycle-
consistency loss alone, adversarial loss alone, gan + forward cycle-consistency loss (f (g(x))     x), gan + backward
cycle-consistency loss (g(f (y))     y), cyclegan (our full method), and ground truth. both cycle alone and gan +
backward fail to produce images similar to the target domain. gan alone and gan + forward suffer from mode collapse,
producing identical label maps regardless of the input photo.

the appendix (section 7) for more details about the datasets.
we observe that translations on training data are often more
appealing than those on test data, and full results of all ap-
plications on both training and test data can be viewed on
our project website.

collection style transfer (figure 10 and figure 11)
we train the model on landscape photographs downloaded
from flickr and wikiart. unlike recent work on    neural
style transfer    [13], our method learns to mimic the style
of an entire collection of artworks, rather than transferring
the style of a single selected piece of art. therefore, we
can learn to generate photos in the style of, e.g., van gogh,
rather than just in the style of starry night. the size of the
dataset for each artist/style was 526, 1073, 400, and 563 for
cezanne, monet, van gogh, and ukiyo-e.

object trans   guration (figure 13) the model

is
trained to translate one object class from id163 [5] to
another (each class contains around 1000 training images).
turmukhambetov et al. [50] propose a subspace model to
translate one object into another object of the same category,
while our method focuses on object trans   guration between
two visually similar categories.

season transfer (figure 13) the model is trained on
854 winter photos and 1273 summer photos of yosemite
downloaded from flickr.
photo generation from paintings (figure 12) for
painting   photo, we    nd that it is helpful to introduce an
additional loss to encourage the mapping to preserve color
composition between the input and output. in particular, we
adopt the technique of taigman et al. [49] and regularize the
generator to be near an identity mapping when real samples
of the target domain are provided as the input to the gen-
erator: i.e., lidentity(g, f ) = e
y   pdata(y)[(cid:107)g(y)     y(cid:107)1] +
x   pdata(x)[(cid:107)f (x)     x(cid:107)1].
e

figure 8: example results of cyclegan on paired datasets
used in    pix2pix    [22] such as architectural labels   photos
and edges   shoes.
5.1.6 additional results on paired datasets
figure 8 shows some example results on other paired
datasets used in    pix2pix    [22], such as architectural
labels   photos from the cmp facade database [40], and
edges   shoes from the ut zappos50k dataset [60]. the
image quality of our results is close to those produced by
the fully supervised pix2pix while our method learns the
mapping without paired supervision.
5.2. applications

we demonstrate our method on several applications
where paired training data does not exist. please refer to

ground truthinputgan alonecycle alonegan+forwardgan+backwardcycleganlabel    facadefacade    labeledges     shoesshoes     edgesinputoutputinputoutputinputoutputcollection, we compute the average gram matrix across the
target domain and use this matrix to transfer the    average
style    with gatys et al [13].

figure 16 demonstrates similar comparisons for other
translation tasks. we observe that gatys et al. [13] requires
   nding target style images that closely match the desired
output, but still often fails to produce photorealistic results,
while our method succeeds to generate natural-looking re-
sults, similar to the target domain.
6. limitations and discussion

although our method can achieve compelling results in
many cases, the results are far from uniformly positive. fig-
ure 17 shows several typical failure cases. on translation
tasks that involve color and texture changes, like many of
those reported above, the method often succeeds. we have
also explored tasks that require geometric changes, with lit-
tle success. for example, on the task of dog   cat trans   gu-
ration, the learned translation degenerates into making min-
imal changes to the input (figure 17). this failure might be
caused by our generator architectures which are tailored for
good performance on the appearance changes. handling
more varied and extreme transformations, especially geo-
metric changes, is an important problem for future work.

some failure cases are caused by the distribution charac-
teristics of the training datasets. for example, our method
has got confused in the horse     zebra example (figure 17,
right), because our model was trained on the wild horse and
zebra synsets of id163, which does not contain images
of a person riding a horse or zebra.

we also observe a lingering gap between the results
achievable with paired training data and those achieved by
our unpaired method. in some cases, this gap may be very
hard     or even impossible     to close:
for example, our
method sometimes permutes the labels for tree and build-
ing in the output of the photos   labels task. to resolve this
ambiguity may require some form of weak semantic super-
vision. integrating weak or semi-supervised data may lead
to substantially more powerful translators, still at a fraction
of the annotation cost of the fully-supervised systems.

nonetheless, in many cases completely unpaired data is
plentifully available and should be made use of. this paper
pushes the boundaries of what is possible in this    unsuper-
vised    setting.

acknowledgments: we thank aaron hertzmann, shiry
ginosar, deepak pathak, bryan russell, eli shechtman,
richard zhang, and tinghui zhou for many helpful com-
ments. this work was supported in part by nsf sma-
1514512, nsf iis-1633310, a google research award, in-
tel corp, and hardware donations from nvidia. jyz is
supported by the facebook graduate fellowship and tp is
supported by the samsung scholarship. the photographs
used for style transfer were taken by ae, mostly in france.

figure 9: the effect of the identity mapping loss on monet   s
painting    photos. from left to right: input paintings, cy-
clegan without identity mapping loss, cyclegan with
identity mapping loss. the identity mapping loss helps pre-
serve the color of the input paintings.

without lidentity,

the generator g and f are free to
change the tint of input images when there is no need to.
for example, when learning the mapping between monet   s
paintings and flickr photographs, the generator often maps
paintings of daytime to photographs taken during sunset,
because such a mapping may be equally valid under the ad-
versarial loss and cycle consistency loss. the effect of this
identity mapping loss are shown in figure 9.

in figure 12, we show additional results translating
monet   s paintings to photographs. this    gure and figure 9
show results on paintings that were included in the train-
ing set, whereas for all other experiments in the paper, we
only evaluate and show test set results. because the training
set does not include paired data, coming up with a plausi-
ble translation for a training set painting is a nontrivial task.
indeed, since monet is no longer able to create new paint-
ings, generalization to unseen,    test set   , paintings is not a
pressing problem.

photo enhancement (figure 14) we show that our
method can be used to generate photos with shallower depth
of    eld. we train the model on    ower photos downloaded
from flickr. the source domain consists of    ower photos
taken by smartphones, which usually have deep dof due
to a small aperture. the target contains photos captured by
dslrs with a larger aperture. our model successfully gen-
erates photos with shallower depth of    eld from the photos
taken by smartphones.

comparison with gatys et al. [13] in figure 15, we
compare our results with neural style transfer [13] on photo
stylization. for each row, we    rst use two representative
artworks as the style images for [13]. our method, on the
other hand, can produce photos in the style of entire collec-
tion. to compare against neural style transfer of an entire

cycleganinputcyclegan+l"#$%&"&   figure 10: collection style transfer i: we transfer input images into the artistic styles of monet, van gogh, cezanne, and
ukiyo-e. please see our website for additional examples.

ukiyo-emonetinputvan goghcezannefigure 11: collection style transfer ii: we transfer input images into the artistic styles of monet, van gogh, cezanne, ukiyo-e.
please see our website for additional examples.

monetukiyo-einputvan goghcezannefigure 12: relatively successful results on mapping monet   s paintings to a photographic style. please see our website for
additional examples.

inputoutputinputoutputfigure 13: our method applied to several translation problems. these images are selected as relatively successful results
    please see our website for more comprehensive and random results.
in the top two rows, we show results on object
trans   guration between horses and zebras, trained on 939 images from the wild horse class and 1177 images from the zebra
class in id163 [5]. also check out the horse   zebra demo video. the middle two rows show results on season transfer,
trained on winter and summer photos of yosemite from flickr. in the bottom two rows, we train our method on 996 apple
images and 1020 navel orange images from id163.

inputinputinputoutputoutputoutputhorse    zebrazebra    horsesummer yosemite    winter yosemite apple    orangeorange    applewinter yosemite    summer yosemitefigure 14: photo enhancement: mapping from a set of smartphone snaps to professional dslr photographs, the system often
learns to produce shallow focus. here we show some of the most successful results in our test set     average performance is
considerably worse. please see our website for more comprehensive and random examples.

figure 15: we compare our method with neural style transfer [13] on photo stylization. left to right: input image, results
from gatys et al. [13] using two different representative artworks as style images, results from gatys et al. [13] using the
entire collection of the artist, and cyclegan (ours).

inputoutputinputoutputinputoutputinputoutputinputgatyset al. (image i)cyclegangatyset al. (image ii)gatyset al. (collection)photo    van gogh photo    ukiyo-ephoto    cezannefigure 16: we compare our method with neural style transfer [13] on various applications. from top to bottom:
apple   orange, horse   zebra, and monet   photo. left to right: input image, results from gatys et al. [13] using two different
images as style images, results from gatys et al. [13] using all the images from the target domain, and cyclegan (ours).

figure 17: typical failure cases of our method. left: in the task of dog   cat trans   guration, cyclegan can only make
minimal changes to the input. right: cyclegan also fails in this horse     zebra example as our model has not seen images
of horseback riding during training. please see our website for more comprehensive results.

inputgatyset al. (image i)cyclegangatyset al. (image ii)gatyset al. (collection)apple    orangehorse     zebramonet    photoinputoutputinputoutputapple    orangezebra    horsedog    catcat    dogwinter    summermonet    photophoto    ukiyo-ephoto    van goghinputoutputiphone photo    dslr photohorse   zebraid163   wildhorse   trainingimagesinputoutputreferences
[1] y. aytar, l. castrejon, c. vondrick, h. pirsiavash, and
a. torralba. cross-modal scene networks. pami,
2016. 3

[2] k. bousmalis, n. silberman, d. dohan, d. erhan, and
d. krishnan. unsupervised pixel-level domain adap-
tation with id3. in cvpr,
2017. 3

[3] r. w. brislin. back-translation for cross-cultural
journal of cross-cultural psychology,

research.
1(3):185   216, 1970. 2, 3

[4] m. cordts, m. omran, s. ramos, t. rehfeld, m. en-
zweiler, r. benenson, u. franke, s. roth, and
b. schiele. the cityscapes dataset for semantic urban
scene understanding. in cvpr, 2016. 2, 5, 6, 18

[5] j. deng, w. dong, r. socher, l.-j. li, k. li, and
l. fei-fei. id163: a large-scale hierarchical im-
age database. in cvpr, 2009. 8, 13, 18

[6] e. l. denton, s. chintala, r. fergus, et al. deep gen-
erative image models using a laplacian pyramid of ad-
versarial networks. in nips, 2015. 2

[7] j. donahue, p. kr  ahenb  uhl, and t. darrell. adversarial

id171. in iclr, 2017. 6, 7

[8] a. dosovitskiy and t. brox. generating images with
perceptual similarity metrics based on deep networks.
in nips, 2016. 7

[9] v. dumoulin, i. belghazi, b. poole, a. lamb, m. ar-
jovsky, o. mastropietro, and a. courville. adversari-
ally learned id136. in iclr, 2017. 6, 7

[10] a. a. efros and t. k. leung. texture synthesis by

non-parametric sampling. in iccv, 1999. 3

[11] d. eigen and r. fergus. predicting depth, surface nor-
mals and semantic labels with a common multi-scale
convolutional architecture. in iccv, 2015. 2

[12] l. a. gatys, m. bethge, a. hertzmann, and e. shecht-
man. preserving color in neural artistic style transfer.
arxiv preprint arxiv:1606.05897, 2016. 3

[13] l. a. gatys, a. s. ecker, and m. bethge. image style
transfer using convolutional neural networks. cvpr,
2016. 3, 8, 9, 14, 15

[14] c. godard, o. mac aodha, and g. j. brostow. un-
supervised monocular depth estimation with left-right
consistency. in cvpr, 2017. 3

[15] i. goodfellow. nips 2016 tutorial: generative ad-
versarial networks. arxiv preprint arxiv:1701.00160,
2016. 2, 4, 5

[16] i. goodfellow, j. pouget-abadie, m. mirza, b. xu,
d. warde-farley, s. ozair, a. courville, and y. ben-
gio. generative adversarial nets. in nips, 2014. 2, 3,
4, 7

[17] d. he, y. xia, t. qin, l. wang, n. yu, t. liu, and
w.-y. ma. dual learning for machine translation. in
nips, 2016. 3

[18] k. he, x. zhang, s. ren, and j. sun. deep residual

learning for image recognition. in cvpr, 2016. 5

[19] a. hertzmann, c. e. jacobs, n. oliver, b. curless, and
d. h. salesin. image analogies. in siggraph, 2001.
2, 3

[20] g. e. hinton and r. r. salakhutdinov. reducing the
dimensionality of data with neural networks. science,
313(5786):504   507, 2006. 5

[21] q.-x. huang and l. guibas. consistent shape maps
via semide   nite programming. in symposium on ge-
ometry processing, 2013. 3

[22] p. isola, j.-y. zhu, t. zhou, and a. a. efros. image-
to-image translation with conditional adversarial net-
works. in cvpr, 2017. 2, 3, 5, 6, 7, 8, 18

[23] j. johnson, a. alahi, and l. fei-fei. perceptual losses
in

for real-time style transfer and super-resolution.
eccv, 2016. 2, 3, 5, 7, 18

[24] z. kalal, k. mikolajczyk, and j. matas. forward-
backward error: automatic detection of tracking fail-
ures. in icpr, 2010. 3

[25] l. karacan, z. akata, a. erdem, and e. erdem.
learning to generate images of outdoor scenes from
arxiv preprint
attributes and semantic layouts.
arxiv:1612.00215, 2016. 3

[26] d. kingma and j. ba. adam: a method for stochastic

optimization. in iclr, 2015. 5

[27] d. p. kingma and m. welling. auto-encoding varia-

tional bayes. iclr, 2014. 3

[28] p.-y. laffont, z. ren, x. tao, c. qian, and j. hays.
transient attributes for high-level understanding and
editing of outdoor scenes. acm tog, 33(4):149,
2014. 2

[29] c. ledig, l. theis, f. husz  ar, j. caballero, a. cun-
ningham, a. acosta, a. aitken, a. tejani, j. totz,
z. wang, et al. photo-realistic single image super-
resolution using a generative adversarial network. in
cvpr, 2017. 5

[30] c. li and m. wand. precomputed real-time texture
synthesis with markovian generative adversarial net-
works. eccv, 2016. 5

[31] m.-y. liu, t. breuel, and j. kautz. unsupervised
image-to-image translation networks. in nips, 2017.
3

[32] m.-y. liu and o. tuzel. coupled generative adversar-

ial networks. in nips, 2016. 3, 6, 7

[33] j. long, e. shelhamer, and t. darrell. fully convolu-
tional networks for semantic segmentation. in cvpr,
2015. 2, 3, 6

[34] a. makhzani, j. shlens, n. jaitly, i. goodfellow, and
b. frey. adversarial autoencoders. in iclr, 2016. 5
[35] x. mao, q. li, h. xie, r. y. lau, z. wang, and s. p.
smolley. least squares generative adversarial net-
works. in cvpr. ieee, 2017. 5

[36] m. mathieu, c. couprie, and y. lecun. deep multi-
scale video prediction beyond mean square error. in
iclr, 2016. 2

[37] m. f. mathieu, j. zhao, a. ramesh, p. sprechmann,
and y. lecun. disentangling factors of variation
in deep representation using adversarial training.
in
nips, 2016. 2

[38] d. pathak, p. krahenbuhl, j. donahue, t. darrell, and
a. a. efros. context encoders: id171 by
inpainting. cvpr, 2016. 2

[39] a. radford, l. metz, and s. chintala. unsupervised
representation learning with deep convolutional gen-
erative adversarial networks. in iclr, 2016. 2

[40] r.   s. radim tyle  cek. spatial pattern templates for
recognition of objects with regular structure. in proc.
gcpr, saarbrucken, germany, 2013. 8, 18

[41] s. reed, z. akata, x. yan, l. logeswaran, b. schiele,
and h. lee. generative adversarial text to image syn-
thesis. in icml, 2016. 2

[42] r. rosales, k. achan, and b. j. frey. unsupervised

image translation. in iccv, 2003. 3

[43] t. salimans, i. goodfellow, w. zaremba, v. cheung,
improved techniques for

a. radford, and x. chen.
training gans. in nips, 2016. 2

[44] p. sangkloy, j. lu, c. fang, f. yu, and j. hays. scrib-
bler: controlling deep image synthesis with sketch
and color. in cvpr, 2017. 3

[45] y. shih, s. paris, f. durand, and w. t. freeman. data-
driven hallucination of different times of day from a
single outdoor photo. acm tog, 32(6):200, 2013. 2
[46] a. shrivastava, t. p   ster, o. tuzel, j. susskind,
w. wang, and r. webb. learning from simulated and
unsupervised images through adversarial training. in
cvpr, 2017. 3, 5, 6, 7

[47] k. simonyan and a. zisserman. very deep convolu-
tional networks for large-scale image recognition. in
iclr, 2015. 7

[48] n. sundaram, t. brox, and k. keutzer. dense point
trajectories by gpu-accelerated large displacement op-
tical    ow. in eccv, 2010. 3

[49] y. taigman, a. polyak, and l. wolf. unsupervised
cross-domain image generation. in iclr, 2017. 3, 8

[50] d. turmukhambetov, n. d. campbell, s. j. prince,
and j. kautz. modeling object appearance using
in cvpr,
context-conditioned component analysis.
2015. 8

[51] m. twain. the jumping frog: in english, then in
french, and then clawed back into a civilized lan-
guage once more by patient, unremunerated toil.
1903. 3

[52] d. ulyanov, v. lebedev, a. vedaldi, and v. lempit-
sky. texture networks: feed-forward synthesis of tex-
tures and stylized images. in icml, 2016. 3

[53] d. ulyanov, a. vedaldi, and v. lempitsky. instance
id172: the missing ingredient for fast styliza-
tion. arxiv preprint arxiv:1607.08022, 2016. 5

[54] c. vondrick, h. pirsiavash, and a. torralba. generat-

ing videos with scene dynamics. in nips, 2016. 2

[55] f. wang, q. huang, and l. j. guibas.

image co-
segmentation via consistent functional maps. in iccv,
2013. 3

[56] x. wang and a. gupta. generative image model-
ing using style and structure adversarial networks. in
eccv, 2016. 2

[57] j. wu, c. zhang, t. xue, b. freeman, and j. tenen-
baum. learning a probabilistic latent space of ob-
ject shapes via 3d generative-adversarial modeling. in
nips, 2016. 2

[58] s. xie and z. tu. holistically-nested edge detection.

in iccv, 2015. 2

[59] z. yi, h. zhang, t. gong, tan, and m. gong. dual-
gan: unsupervised dual learning for image-to-image
translation. in iccv, 2017. 3

[60] a. yu and k. grauman. fine-grained visual compar-

isons with local learning. in cvpr, 2014. 8, 18

[61] c. zach, m. klopschitz, and m. pollefeys. disam-
in

biguating visual relations using loop constraints.
cvpr, 2010. 3

[62] r. zhang, p. isola, and a. a. efros. colorful image

colorization. in eccv, 2016. 2

[63] j. zhao, m. mathieu, and y. lecun. energy-based

generative adversarial network. in iclr, 2017. 2

[64] t. zhou, p. krahenbuhl, m. aubry, q. huang, and
a. a. efros. learning dense correspondence via 3d-
guided cycle consistency. in cvpr, 2016. 2, 3

[65] t. zhou, y. j. lee, s. yu, and a. a. efros. flowweb:
image set alignment by weaving consistent,

joint
pixel-wise correspondences. in cvpr, 2015. 3

[66] j.-y. zhu, p. kr  ahenb  uhl, e. shechtman, and a. a.
efros. generative visual manipulation on the natural
image manifold. in eccv, 2016. 2

flower photo enhancement flower images taken on
smartphones were downloaded from flickr by searching for
the photos taken by apple iphone 5, 5s, or 6, with search
text    ower. dslr images with shallow dof were also
downloaded from flickr by search tag    ower, dof. the im-
ages were scaled to 360 pixels by width. the identity map-
ping loss of weight 0.5   was used. the training set size
of the smartphone and dslr dataset were 1813 and 3326,
respectively. we set    = 10.
7.2. network architectures

we provide both pytorch and torch implementations.
generator architectures we adopt our architectures
from johnson et al. [23]. we use 6 residual blocks for
128    128 training images, and 9 residual blocks for 256   
256 or higher-resolution training images. below, we follow
the naming convention used in the johnson et al.   s github
repository.
let c7s1-k denote a 7   7 convolution-instancenorm-
relu layer with k    lters and stride 1. dk denotes a 3    3
convolution-instancenorm-relu layer with k    lters and
stride 2. re   ection padding was used to reduce artifacts.
rk denotes a residual block that contains two 3    3 con-
volutional layers with the same number of    lters on both
layer. uk denotes a 3    3 fractional-strided-convolution-
2.
instancenorm-relu layer with k    lters and stride 1

the network with 6 residual blocks consists of:
c7s1-64,d128,d256,r256,r256,r256,
r256,r256,r256,u128,u64,c7s1-3

the network with 9 residual blocks consists of:
c7s1-64,d128,d256,r256,r256,r256,
r256,r256,r256,r256,r256,r256,u128
u64,c7s1-3
discriminator architectures for discriminator net-
works, we use 70    70 patchgan [22]. let ck denote a
4    4 convolution-instancenorm-leakyrelu layer with k
   lters and stride 2. after the last layer, we apply a convo-
lution to produce a 1-dimensional output. we do not use
instancenorm for the    rst c64 layer. we use leaky relus
with a slope of 0.2. the discriminator architecture is:
c64-c128-c256-c512

7. appendix
7.1. training details

ages from the cmp facade database [40].

we train our networks from scratch, with a learning rate
of 0.0002. in practice, we divide the objective by 2 while
optimizing d, which slows down the rate at which d learns,
relative to the rate of g. we keep the same learning rate
for the    rst 100 epochs and linearly decay the rate to zero
over the next 100 epochs. weights are initialized from a
gaussian distribution n (0, 0.02).
cityscapes label   photo 2975 training images from the
cityscapes training set [4] with image size 128    128. we
used the cityscapes val set for testing.
maps   aerial photograph 1096 training images were
scraped from google maps [22] with image size 256   256.
images were sampled from in and around new york city.
data was then split into train and test about the median lat-
itude of the sampling region (with a buffer region added to
ensure that no training pixel appeared in the test set).
architectural facades labels   photo 400 training im-
edges   shoes around 50, 000 training images from ut
zappos50k dataset [60]. the model was trained for 5
epochs.
horse   zebra and apple   orange we downloaded
the images from id163 [5] using keywords wild horse,
zebra, apple, and navel orange. the images were scaled to
256    256 pixels. the training set size of each class: 939
(horse), 1177 (zebra), 996 (apple), and 1020 (orange).
summer   winter yosemite the images were down-
loaded using flickr api with the tag yosemite and the date-
taken    eld. black-and-white photos were pruned. the im-
ages were scaled to 256    256 pixels. the training size of
each class: 1273 (summer) and 854 ( winter).
photo   art for style transfer the art images were
downloaded from wikiart.org. some artworks that were
sketches or too obscene were pruned by hand. the pho-
tos were downloaded from flickr using the combination
of tags landscape and landscapephotography. black-and-
white photos were pruned. the images were scaled to
256    256 pixels. the training set size of each class
was 1074 (monet), 584 (cezanne), 401 (van gogh), 1433
(ukiyo-e), and 6853 (photographs). the monet dataset was
particularly pruned to include only landscape paintings, and
the van gogh dataset included only his later works that rep-
resent his most recognizable artistic style.
monet   s paintings   photos to achieve high resolution
while conserving memory, we used random square crops
of the original images for training. to generate results, we
passed images of width 512 pixels with correct aspect ra-
tio to the generator network as input. the weight for the
identity mapping loss was 0.5   where    was the weight for
cycle consistency loss. we set    = 10.

