a network-based end-to-end trainable task-oriented dialogue system

tsung-hsien wen1, david vandyke1, nikola mrk  i  c1, milica ga  i  c1,

lina m. rojas-barahona1, pei-hao su1, stefan ultes1, and steve young1

1cambridge university engineering department,
trumpington street, cambridge, cb2 1pz, uk

{thw28,djv27,nm480,mg436,lmr46,phs26,su259,sjy11}@cam.ac.uk

abstract

teaching machines to accomplish tasks
by conversing naturally with humans is
challenging. currently, developing task-
oriented dialogue systems requires creating
multiple components and typically this in-
volves either a large amount of handcraft-
ing, or acquiring costly labelled datasets
to solve a statistical learning problem for
each component. in this work we intro-
duce a neural network-based text-in, text-
out end-to-end trainable goal-oriented di-
alogue system along with a new way of
collecting dialogue data based on a novel
pipe-lined wizard-of-oz framework. this
approach allows us to develop dialogue sys-
tems easily and without making too many
assumptions about the task at hand. the
results show that the model can converse
with human subjects naturally whilst help-
ing them to accomplish tasks in a restaurant
search domain.

introduction

1
building a task-oriented dialogue system such as
a hotel booking or a technical support service is
dif   cult because it is application-speci   c and there
is usually limited availability of training data. to
mitigate this problem, recent machine learning ap-
proaches to task-oriented dialogue system design
have cast the problem as a partially observable
markov decision process (pomdp) (young et al.,
2013) with the aim of using reinforcement learn-
ing (rl) to train dialogue policies online through
interactions with real users (ga  i  c et al., 2013).
however, the language understanding (henderson
et al., 2014; yao et al., 2014) and language gener-
ation (wen et al., 2015b; wen et al., 2016) mod-
ules still rely on supervised learning and therefore

need corpora to train on. furthermore, to make
rl tractable, the state and action space must be
carefully designed (young et al., 2013; young et
al., 2010), which may restrict the expressive power
and learnability of the model. also, the reward
functions needed to train such models are dif   cult
to design and hard to measure at run-time (su et
al., 2015; su et al., 2016).

at the other end of the spectrum, sequence to
sequence learning (sutskever et al., 2014) has in-
spired several efforts to build end-to-end trainable,
non-task-oriented conversational systems (vinyals
and le, 2015; shang et al., 2015; serban et al.,
2015b). this family of approaches treats dialogue
as a source to target sequence transduction problem,
applying an encoder network (cho et al., 2014) to
encode a user query into a distributed vector rep-
resenting its semantics, which then conditions a
decoder network to generate each system response.
these models typically require a large amount of
data to train. they allow the creation of effective
chatbot type systems but they lack any capability
for supporting domain speci   c tasks, for example,
being able to interact with databases (sukhbaatar
et al., 2015; yin et al., 2015) and aggregate useful
information into their responses.

in this work, we propose a neural network-based
model for task-oriented dialogue systems by bal-
ancing the strengths and the weaknesses of the two
research communities:
the model is end-to-end
trainable1 but still modularly connected; it does not
directly model the user goal, but nevertheless, it
still learns to accomplish the required task by pro-
viding relevant and appropriate responses at each
turn; it has an explicit representation of database
(db) attributes (slot-value pairs) which it uses to
achieve a high task success rate, but has a dis-
tributed representation of user intent (dialogue act)
1we de   ne end-to-end trainable as that each system mod-

ule is trainable from data except for a database operator.

7
1
0
2

 
r
p
a
4
2

 

 
 
]
l
c
.
s
c
[
 
 

3
v
2
6
5
4
0

.

4
0
6
1
:
v
i
x
r
a

figure 1: the proposed end-to-end trainable dialogue system framework

to allow ambiguous inputs; and it uses delexicalisa-
tion2 and a weight tying strategy (henderson et al.,
2014) to reduce the data required to train the model,
but still maintains a high degree of freedom should
larger amounts of data become available. we show
that the proposed model performs a given task very
competitively across several metrics when trained
on only a few hundred dialogues.

in order to train the model for the target appli-
cation, we introduce a novel pipe-lined data col-
lection mechanism inspired by the wizard-of-oz
paradigm (kelley, 1984) to collect human-human
dialogue corpora via crowd-sourcing. we found
that this process is simple and enables fast data
collection online with very low development costs.

most probable values in the belief state to form a
query to the db, and the search result, along with
the intent representation and belief state are trans-
formed and combined by a policy network to form
a single vector representing the next system action.
this system action vector is then used to condition
a response generation network (wen et al., 2015a;
wen et al., 2015b) which generates the required
system output token by token in skeletal form. the
   nal system response is then formed by substitut-
ing the actual values of the database entries into
the skeletal sentence structure. a more detailed
description of each component is given below.

2.1

intent network

2 model

we treat dialogue as a sequence to sequence map-
ping problem (modelled by a sequence-to-sequence
architecture (sutskever et al., 2014)) augmented
with the dialogue history (modelled by a set of
belief trackers (henderson et al., 2014)) and the
current database search outcome (modelled by a
database operator), as shown in figure 1. at each
turn, the system takes a sequence of tokens2 from
the user as input and converts it into two inter-
nal representations: a distributed representation
generated by an intent network and a id203
distribution over slot-value pairs called the belief
state (young et al., 2013) generated by a set of be-
lief trackers. the database operator then selects the

2delexicalisation: we replaced slots and values by generic
tokens (e.g. keywords like chinese or indian are replaced by
<v.food> in figure 1) to allow weight sharing.

the intent network can be viewed as the en-
coder in the sequence-to-sequence learning frame-
work (sutskever et al., 2014) whose job is to en-
code a sequence of input tokens wt
n into
a distributed vector representation zt at every turn
t. typically, a long short-term memory (lstm)
network (hochreiter and schmidhuber, 1997) is
used and the last time step hidden layer zn
is taken
t
as the representation,

1, ...wt

0, wt

n )

0, wt

1, ...wt

zt = zn

t = lstm(wt

(1)
alternatively, a convolutional neural network
(id98) can be used in place of the lstm as the
encoder (kalchbrenner et al., 2014; kim, 2014),
(2)
and here we investigate both. since all the slot-
value speci   c information is delexicalised, the en-
coded vector can be viewed as a distributed intent

zt = id98(wt

1, ...wt

0, wt

n )

figure 2: tied jordan-type id56 belief tracker with delexicalised id98 feature extractor. the output of
the id98 feature extractor is a concatenation of top-level sentence (green) embedding and several levels
of intermediate ngram-like embeddings (red and blue). however, if a value cannot be delexicalised in the
input, its ngram-like embeddings will all be padded with zeros. we pad zero vectors (in gray) before each
convolution operation to make sure the representation at each layer has the same length. the output of
each tracker pt

s is a distribution over values of a particular slot s.

representation which replaces the hand-coded di-
alogue act representation (traum, 1999) in tradi-
tional task-oriented dialogue systems.

2.2 belief trackers

belief tracking (also called dialogue state track-
ing) provides the core of a task-oriented spoken
dialogue system (sds) (henderson, 2015). cur-
rent state-of-the-art belief trackers use discrimi-
native models such as recurrent neural networks
(id56) (mikolov et al., 2010; wen et al., 2013) to
directly map asr hypotheses to belief states (hen-
derson et al., 2014; mrk  i  c et al., 2016). although
in this work we focus on text-based dialogue sys-
tems, we retain belief tracking at the core of our
system because: (1) it enables a sequence of free-
form natural language sentences to be mapped into
a    xed set of slot-value pairs, which can then be
used to query a db. this can be viewed as a simple
version of a semantic parser (berant et al., 2013);
(2) by keeping track of the dialogue state, it avoids
learning unnecessarily complicated long-term de-
pendencies from raw inputs; (3) it uses a smart
weight tying strategy that can greatly reduce the
data required to train the model, and (4) it provides
an inherent robustness which simpli   es future ex-
tension to spoken systems.

using each user input as new evidence, the task
of a belief tracker is to maintain a multinomial dis-

tribution p over values v     vs for each informable
slot s, and a binary distribution for each requestable
slot3. each slot in the ontology g4 has its own
specialised tracker, and each tracker is a jordan-
type (recurrence from output to hidden layer) (jor-
dan, 1989) id565 with a id98 feature extractor, as
shown in figure 2. like mrk  i  c et al. (2015), we
tie the id56 weights together for each value v but
vary features f t
v when updating each pre-softmax
activation gt
v. the update equations for a given slot
s are,

v,id98     pt   1

v     pt   1   
v = f t
f t
v = ws    sigmoid(wsf t
gt
exp(gt
v)
pt
v =
v(cid:48)   vs

exp(g   ,s) +(cid:80)

v + bs) + b(cid:48)

s

exp(gt

v(cid:48))

(3)
(4)

(5)

where vector ws, matrix ws, bias terms bs and b(cid:48)
s,
and scalar g   ,s are parameters. pt    is the id203
that the user has not mentioned that slot up to turn t
and can be calculated by substituting g   ,s for gt
v in
the numerator of equation 5. in order to model the
discourse context at each turn, the feature vector

3informable slots are slots that users can use to constrain
the search, such as food type or price range; requestable slots
are slots that users can ask a value for, such as address.

4a small id13 de   ning the slot-value pairs the

system can talk about for a particular task.

5we don   t use the recurrent connection for requestable

slots since they don   t need to be tracked.

v,id98 is the concatenation of two id98 derived
f t
features, one from processing the user input ut at
turn t and the other from processing the machine
response mt   1 at turn t     1,

v,id98 = id98(u)
f t

s,v (ut)     id98(m)

s,v (mt   1)

(6)

where every token in ut and mt   1 is represented by
an embedding of size n derived from a 1-hot input
vector. in order to make the tracker aware when
delexicalisation is applied to a slot or value, the
slot-value specialised id98 operator id98(  )
s,v(  ) ex-
tracts not only the top level sentence representation
but also intermediate id165-like embeddings de-
termined by the position of the delexicalised token
in each utterance. if multiple matches are observed,
the corresponding embeddings are summed. on the
other hand, if there is no match for a particular slot
or value, the empty id165 embeddings are padded
with zeros. in order to keep track of the position of
delexicalised tokens, both sides of the sentence are
padded with zeros before each convolution opera-
tion. the number of vectors is determined by the
   lter size at each layer. the overall process of ex-
tracting several layers of position-speci   c features
is visualised in figure 2.

the belief tracker described above is based
on henderson et al. (2014) with some modi   ca-
tions: (1) only probabilities over informable and
requestable slots and values are output, (2) the re-
current memory block is removed, since it appears
to offer no bene   t in this task, and (3) the id165
feature extractor is replaced by the id98 extrac-
tor described above. by introducing slot-based
belief trackers, we essentially add a set of interme-
diate labels into the system as compared to train-
ing a pure end-to-end system. later in the paper
we will show that these tracker components are
critical for achieving task success. we will also
show that the additional annotation requirement
that they introduce can be successfully mitigated
using a novel pipe-lined wizard-of-oz data collec-
tion framework.

2.3 policy network and database operator
database operator based on the output pt
s of
the belief trackers, the db query qt is formed by,

qt =

{argmax

v

s(cid:48)}
pt

(7)

(cid:91)

s(cid:48)   si

where si is the set of informable slots. this query
is then applied to the db to create a binary truth

value vector xt over db entities where a 1 indi-
cates that the corresponding entity is consistent
with the query (and hence it is consistent with the
most likely belief state). in addition, if x is not
entirely null, an associated entity pointer is main-
tained which identi   es one of the matching entities
selected at random. the entity pointer is updated
if the current entity no longer matches the search
criteria; otherwise it stays the same. the entity
referenced by the entity pointer is used to form the
   nal system response as described in section 2.4.
policy network the policy network can be
viewed as the glue which binds the system modules
together. its output is a single vector ot represent-
ing the system action, and its inputs are comprised
of zt from the intent network, the belief state pt
s,
and the db truth value vector xt. since the genera-
tion network only generates appropriate sentence
forms, the individual probabilities of the categor-
ical values in the informable belief state are im-
material and are summed together to form a sum-
mary belief vector for each slot   pt
s represented by
three components: the summed value probabilities,
the id203 that the user said they "don   t care"
about this slot and the id203 that the slot has
not been mentioned. similarly for the truth value
vector xt, the number of matching entities mat-
ters but not their identity. this vector is therefore
compressed to a 6-bin 1-hot encoding   xt, which
represents different degrees of matching in the db
(no match, 1 match, ... or more than 5 matches).
finally, the policy network output is generated by
a three-way matrix transformation,

ot = tanh(wzozt + wpo  pt + wxo  xt)

eters and   pt =(cid:76)

where matrices wzo, wpo, and wxo are param-
s is a concatenation of all

s   g   pt
summary belief vectors.

(8)

2.4 generation network

the generation network uses the action vector
ot to condition a language generator (wen et al.,
2015b). this generates template-like sentences
token by token based on the language model prob-
abilities,

j+1|wt

j, ht

j   1, ot) = lstmj(wt

p (wt
j   1, ot)
(9)
where lstmj(  ) is a conditional lstm operator
for one output step j, wt
j is the last output token (i.e.
a word, a delexicalised slot name or a delexicalised

j, ht

slot value), and ht
j   1 is the hidden layer. once
the output token sequence has been generated, the
generic tokens are replaced by their actual values:
(1) replacing delexicalised slots by random sam-
pling from a list of surface forms, e.g. <s.food> to
food or type of food, and (2) replacing delexicalised
values by the actual attribute values of the entity
currently selected by the db pointer. this is simi-
lar in spirit to the latent predictor network (ling
et al., 2016) where the token generation process is
augmented by a set of id193 (vinyals
et al., 2015) to transfer entity speci   c information
into the response.

attentive generation network instead of de-
coding responses directly from a static action vec-
tor ot, an attention-based mechanism (bahdanau
et al., 2014; hermann et al., 2015) can be used to
dynamically aggregate source embeddings at each
output step j. in this work we explore the use of an
attention mechanism to combine the tracker belief
states, i.e. ot is computed at each output step j by,

t = tanh(wzozt +   p(j)
o(j)
where for a given ontology g,

t + wxo  xt)

(10)

  p(j)
t =

  (j)

s

tanh(ws

po      pt
s)

(11)

(cid:88)

s   g

are calculated

and where the attention weights   (j)
s
by a scoring function,

s = softmax(cid:0)r

tanh(wr    ut)(cid:1)

  (j)

(cid:124)
s    wt
where ut = zt      xt      pt
and vector r are parameters to learn and wt
embedding of token wt
j.

j     ht

j   1, matrix wr,
j is the

(12)

3 wizard-of-oz data collection
arguably the greatest bottleneck for statistical ap-
proaches to dialogue system development is the
collection of appropriate training data, and this
is especially true for task-oriented dialogue sys-
tems. serban et al (serban et al., 2015a) have
catalogued existing corpora for developing con-
versational agents. such corpora may be useful for
id64, but, for task-oriented dialogue sys-
tems, in-domain data is essential6. to mitigate this
problem, we propose a novel id104 ver-
sion of the wizard-of-oz (woz) paradigm (kelley,
1984) for collecting domain-speci   c corpora.

6e.g. technical support for apple computers may differ
completely from that for windows, due to the many differ-
ences in software and hardware.

based on the given ontology, we designed two
webpages on amazon mechanical turk, one for
wizards and the other for users (see figure 4 and 5
for the designs). the users are given a task specify-
ing the characteristics of a particular entity that they
must    nd (e.g. a chinese restaurant in the north)
and asked to type in natural language sentences
to ful   l the task. the wizards are given a form to
record the information conveyed in the last user
turn (e.g. pricerange=chinese, area=north) and
a search table showing all the available matching
entities in the database. note these forms contain
all the labels needed to train the slot-based belief
trackers. the table is automatically updated every
time the wizard submits new information. based on
the updated table, the wizard types an appropriate
system response and the dialogue continues.

in order to enable large-scale parallel data collec-
tion and avoid the distracting latencies inherent in
conventional woz scenarios (bohus and rudnicky,
2008), users and wizards are asked to contribute
just a single turn to each dialogue. to ensure coher-
ence and consistency, users and wizards must re-
view all previous turns in that dialogue before they
contribute their turns. thus dialogues progress in a
pipe-line. many dialogues can be active in parallel
and no worker ever has to wait for a response from
the other party in the dialogue. despite the fact that
multiple workers contribute to each dialogue, we
observe that dialogues are generally coherent yet
diverse. furthermore, this turn-level data collection
strategy seems to encourage workers to learn and
correct each other based on previous turns.

in this paper, the system was designed to assist
users to    nd a restaurant in the cambridge, uk area.
there are three informable slots (food, pricerange,
area) that users can use to constrain the search
and six requestable slots (address, phone, postcode
plus the three informable slots) that the user can
ask a value for once a restaurant has been offered.
there are 99 restaurants in the db. based on this
domain, we ran 3000 hits (human intelligence
tasks) in total for roughly 3 days and collected
1500 dialogue turns. after cleaning the data, we
have approximately 680 dialogues in total (some of
them are un   nished). the total cost for collecting
the dataset was     400 usd.

4 empirical experiments

training
firstly the belief

training is divided into two phases.
tracker parameters   b are

table 1: tracker performance in terms of precision, recall, and f-1 score.

tracker
type

id98
ngram

informable

requestable

recall

prec.
99.77% 96.09% 97.89% 98.66% 93.79% 96.16%
99.34% 94.42% 96.82% 98.56% 90.14% 94.16%

recall

prec.

f-1

f-1

(cid:80)

   (cid:80)

(cid:124)

s and predictions pt
log pt

trained using the cross id178 errors between
s, l1(  b) =
tracker labels yt
s. for the full model, we have
three informable trackers (food, pricerange, area)
and seven requestable trackers (address, phone,
postcode, name, plus the three informable slots).

s(yt
s)

t

t

log pt

(cid:80)

(cid:124)
j(yt
j)

j and pt

j, where yt

   (cid:80)

having    xed the tracker parameters, the re-
maining parts of the model   \b are trained
using the cross id178 errors from the gen-
eration network language model, l2(  \b) =
j are out-
put token targets and predictions respectively, at
turn t of output step j. we treated each dialogue
as a batch and used stochastic gradient decent with
a small l2 regularisation term to train the model.
the collected corpus was partitioned into a train-
ing, validation, and testing sets in the ratio 3:1:1.
early stopping was implemented based on the vali-
dation set for regularisation and gradient clipping
was set to 1. all the hidden layer sizes were set to
50, and all the weights were randomly initialised
between -0.3 and 0.3 including id27s.
the vocabulary size is around 500 for both input
and output, in which rare words and words that can
be delexicalised are removed. we used three con-
volutional layers for all the id98s in the work and
all the    lter sizes were set to 3. pooling operations
were only applied after the    nal convolution layer.
in order to decode without length
bias, we decoded each system response mt based
on the average log id203 of tokens,
{log p(mt|  , ut)/jt}

decoding

t = argmax

m   

(13)

mt

where    are the model parameters, ut is the user
input, and jt is the length of the machine response.
as a contrast, we also investigated the mmi cri-
terion (li et al., 2016) to increase diversity and
put additional scores on delexicalised tokens to en-
courage task completion. this weighted decoding
strategy has the following objective function,

m   

t = argmax

mt

{ log p(mt|  , ut)/jt   
   log p(mt)/jt +   rt}

(14)

where    and    are weights selected on validation
set and log p(mt) can be modelled by a standalone
lstm language model. we used a simple heuris-
tic for the scoring function rt designed to reward
giving appropriate information and penalise spu-
riously providing unsolicited information7. we
applied id125 with a beamwidth equal to 10,
the search stops when an end of sentence token is
generated. in order to obtain language variability
from the deployed model we ran decoding until we
obtained 5 candidates and randomly sampled one
as the system response.

tracker performance table 1 shows the eval-
uation of the trackers    performance. due to delex-
icalisation, both id98 type trackers and id165
type trackers (henderson et al., 2014) achieve high
precision, but the id165 tracker has worse recall.
this result suggests that compared to simple n-
grams, id98 type trackers can better generalise
to sentences with long distance dependencies and
more complex syntactic structures.

corpus-based evaluation we evaluated the
end-to-end system by    rst performing a corpus-
based evaluation in which the model is used to pre-
dict each system response in the held-out test set.
three id74 were used: id7 score
(on top-1 and top-5 candidates) (papineni et al.,
2002), entity matching rate and objective task suc-
cess rate (su et al., 2015). we calculated the entity
matching rate by determining whether the actual
selected entity at the end of each dialogue matches
the task that was speci   ed to the user. the dialogue
is then marked as successful if both (1) the offered
entity matches, and (2) the system answered all the
associated information requests (e.g. what is the
address?) from the user. we computed the id7
scores on the template-like output sentences before
lexicalising with the entity value substitution.

7we give an additional reward if a requestable slot (e.g.
address) is requested and its corresponding delexicalised slot
or value token (e.g. <v.address> and <s.address>) is gener-
ated. we give an additional penalty if an informable slot is
never mentioned (e.g. food=none) but its corresponding delex-
icalised value token is generated (e.g. <v.food>). for more
details on scoring, please see table 5.

table 2: performance comparison of different model architectures based on a corpus-based evaluation.

encoder tracker

decoder

match(%) success(%) t5-id7 t1-id7

baseline

lstm
lstm
variant
lstm
id98

-
turn recurrence

lstm
lstm

id56-id98, w/o req.
id56-id98

lstm
lstm

full model w/ different decoding strategy

lstm
lstm
lstm
lstm

id56-id98
id56-id98
id56-id98
id56-id98

lstm
+ weighted
+ att.
+ att. + weighted

-
-

89.70
88.82

86.34
86.04
90.88
90.88

-
-

30.60
58.52

75.16
78.40
80.02
83.82

0.1650
0.1813

0.1769
0.2354

0.2184
0.2222
0.2286
0.2304

0.1718
0.1861

0.1799
0.2429

0.2313
0.2280
0.2388
0.2369

table 2 shows the result of the corpus-based
evaluation averaging over 5 randomly initialised
networks. the baseline block shows two baseline
models: the    rst is a simple turn-level sequence to
sequence model (sutskever et al., 2014) while the
second one introduces an additional recurrence to
model the dependency on the dialogue history fol-
lowing serban et al (serban et al., 2015b). as can
be seen, incorporation of the recurrence improves
the id7 score. however, baseline task success
and matching rates cannot be computed since the
models do not make any provision for a database.
the variant block of table 2 shows two variants
of the proposed end-to-end model. for the    rst one,
no requestable trackers were used, only informable
trackers. hence, the burden of modelling user re-
quests falls on the intent network alone. we found
that without explicitly modelling user requests, the
model performs very poorly on task completion
(    30%), even though it can offer the correct entity
most of the time(    90%). more data may help
here; however, we found that the incorporation of
an explicit internal semantic representation in the
full model (shown below) is more ef   cient and
extremely effective. for the second variant, the
lstm intent network is replaced by a id98. this
achieves a very competitive id7 score but task
success is still quite poor (    58% success). we
think this is because the id98 encodes the intent by
capturing several local features but lacks the global
view of the sentence, which may easily result in an
unexpected over   t.

the full model block shows the performance of
the proposed model with different decoding strate-
gies. the    rst row shows the result of decoding us-
ing the average likelihood term (equation 13) while
the second row uses the weighted decoding strat-
egy (equation 14). as can be seen, the weighted

decoding strategy does not provide a signi   cant
improvement in id7 score but it does greatly
improve task success rate (    3%). the rt term
contributes the most to this improvement because it
injects additional task-speci   c information during
decoding. despite this, the most effective and ele-
gant way to improve the performance is to use the
attention-based mechanism (+att.) to dynamically
aggregate the tracker beliefs (section 2.4). it gives
a slight improvement in id7 score (    0.01) and
a big gain on task success (    5%). finally, we can
improve further by incorporating weighted decod-
ing with the id12 (+ att. + weighted).
as an aside, we used id167 (der maaten and hin-
ton, 2008) to produce a reduced dimension view of
the action embeddings ot, plotted and labelled by
the    rst three generated output words (full model
w/o attention). the    gure is shown as figure 3.
we can see clear clusters based on the system in-
tent types, even though we did not explicitly model
them using dialogue acts.

human evaluation

in order to assess opera-
tional performance, we tested our model using paid
subjects recruited via amazon mechanical turk.
each judge was asked to follow a given task and
to rate the model   s performance. we assessed the
subjective success rate, and the perceived compre-
hension ability and naturalness of response on a
scale of 1 to 5. the full model with attention and
weighted decoding was used and the system was
tested on a total of 245 dialogues. as can be seen
in table 3, the average subjective success rate was
98%, which means the system was able to complete
the majority of tasks. moreover, the comprehen-
sion ability and naturalness scores both averaged
more than 4 out of 5. (see appendix for some
sample dialogues in this trial.)

we also ran comparisons between the nn model

figure 3: the action vector embedding ot generated by the nn model w/o attention. each cluster is
labelled with the    rst three words the embedding generated.

table 3: human assessment of the nn system. the
rating for comprehension/naturalness are both out
of 5.

table 4: a comparison of the nn system with a
rule-based modular system (hdc).

metric
success
comprehension
naturalness
# of dialogues:

nn
98%
4.11
4.05
245

and a handcrafted, modular baseline system (hdc)
consisting of a handcrafted semantic parser, rule-
based policy and belief tracker, and a template-
based generator. the result can be seen in table 4.
the hdc system achieved     95% task success
rate, which suggests that it is a strong baseline
even though most of the components were hand-
engineered. over the 164 dialogues tested, the
nn system (nn) was considered better than the
handcrafted system (hdc) on all the metrics com-
pared. although both systems achieved similar suc-
cess rates, the nn system (nn) was more ef   cient
and provided a more engaging conversation (lower
turn number and higher preference). moreover, the
comprehension ability and naturalness of the nn
system were also rated higher, which suggests that
the learned system was perceived as being more
natural than the hand-designed system.

5 conclusions and future work
this paper has presented a novel neural network-
based framework for task-oriented dialogue sys-
tems. the model is end-to-end trainable using two

metric
subj. success
avg. # of turn
comparisons(%)

naturalness
comprehension
preference
performance

ndm
hdc
96.95% 95.12%

3.95

4.54

tie
-
-

46.95*
45.12*
50.00*
43.90*

25.61
21.95
24.39
25.61

27.44
32.93
25.61
30.49

* p <0.005,

# of comparisons: 164

supervision signals and a modest corpus of training
data. the paper has also presented a novel crowd-
sourced data collection framework inspired by the
wizard-of-oz paradigm. we demonstrated that the
pipe-lined parallel organisation of this collection
framework enables good quality task-oriented dia-
logue data to be collected quickly at modest cost.
the experimental assessment of the nn dialogue
system showed that the learned model can interact
ef   ciently and naturally with human subjects to
complete an application-speci   c task. to the best
of our knowledge, this is the    rst end-to-end nn-
based model that can conduct meaningful dialogues
in a task-oriented application.

however, there is still much work left to do.
our current model is a text-based dialogue sys-
tem, which can not directly handle noisy speech
recognition inputs nor can it ask the user for con-
   rmation when it is uncertain. indeed, the extent
to which this type of model can be scaled to much
larger and wider domains remains an open question
which we hope to pursue in our further work.

wizard-of-oz data collection websites

figure 4: the user webpage. the worker who plays a user is given a task to follow. for each mturk
hit, he/she needs to type in an appropriate sentence to carry on the dialogue by looking at both the task
description and the dialogue history.

figure 5: the wizard page. the wizard   s job is slightly more complex: the worker needs to go through
the dialogue history,    ll in the form (top green) by interpreting the user input at this turn, and type in
an appropriate response based on the history and the db result (bottom green). the db search result is
updated when the form is submitted. the form can be divided into informable slots (top) and requestable
slots (bottom), which contains all the labels we need to train the trackers.

scoring table

table 5: additional rt term for delexicalised tokens when using weighted decoding (equation 14). not
observed means the corresponding tracker has a highest id203 on either not mentioned or dontcare
value, while observed mean the highest id203 is on one of the categorical values. a positive score
encourages the generation of that token while a negative score discourages it.

examples
delexicalised token
<s.food>, <s.area>,...
informable slot token
<v.food>, <v.area>,...
informable value token
requestable slot token
<s.phone>,<s.address>,...
requestable value token <v.phone>,<v.address>,...

rt (observed) rt (not observed)

0.0
+0.05
+0.2
+0.2

0.0
-0.5
0.0
0.0

acknowledgements
tsung-hsien wen and david vandyke are sup-
ported by toshiba research europe ltd, cam-
bridge. the authors would like to thank ryan lowe
and luk       ilka for their valuable comments.

references
[bahdanau et al.2014] dzmitry bahdanau, kyunghyun
cho, and yoshua bengio. 2014. neural machine
translation by jointly learning to align and translate.
arxiv preprint:1409.0473.

[berant et al.2013] jonathan berant, andrew chou,
roy frostig, and percy liang.
seman-
tic parsing on freebase from question-answer pairs.
in emnlp, pages 1533   1544, seattle, washington,
usa. acl.

2013.

[bohus and rudnicky2008] dan bohus and alexan-
der i. rudnicky, 2008. sorry, i didn   t catch that!,
pages 123   154. springer netherlands, dordrecht.

[cho et al.2014] kyunghyun cho, bart van merrien-
boer, caglar gulcehre, dzmitry bahdanau, fethi
bougares, holger schwenk, and yoshua bengio.
2014. learning phrase representations using id56
encoder   decoder for id151.
in emnlp, pages 1724   1734, doha, qatar, october.
acl.

[der maaten and hinton2008] laurens van der maaten
and geoffrey hinton. 2008. visualizing data using
id167. jmlr.

[jordan1989] michael i. jordan. 1989. serial order:
a parallel, distributed processing approach. in ad-
vances in connectionist theory: speech. lawrence
erlbaum associates.

[kalchbrenner et al.2014] nal kalchbrenner, edward
grefenstette, and phil blunsom. 2014. a convolu-
tional neural network for modelling sentences.
in
acl, pages 655   665, baltimore, maryland, june.
acl.

[kelley1984] john f. kelley. 1984. an iterative design
methodology for user-friendly natural language of-
   ce information applications. acm transaction on
information systems.

[kim2014] yoon kim. 2014. convolutional neural net-
works for sentence classi   cation. in emnlp, pages
1746   1751, doha, qatar, october. acl.

[li et al.2016] jiwei li, michel galley, chris brockett,
jianfeng gao, and bill dolan. 2016. a diversity-
promoting objective function for neural conversa-
tion models. in naacl-hlt, pages 110   119, san
diego, california, june. acl.

[ling et al.2016] wang ling, phil blunsom, edward
grefenstette, karl moritz hermann, tom     ko  cisk  ,
fumin wang, and andrew senior. 2016. latent pre-
dictor networks for code generation. in acl, pages
599   609, berlin, germany, august. acl.

[mikolov et al.2010] tom     mikolov, martin kara   at,
luk     burget, jan   cernock  , and sanjeev khudan-
pur. 2010. recurrent neural network based lan-
in interspeech, pages 1045   1048,
guage model.
makuhari, japan. isca.

[ga  i  c et al.2013] milica ga  i  c, catherine breslin,
matthew henderson, dongho kim, martin szum-
mer, blaise thomson, pirros tsiakoulis, and steve
young.
2013. on-line policy optimisation of
bayesian spoken dialogue systems via human inter-
action. in icassp, pages 8367   8371, may.

[mrk  i  c et al.2015] nikola mrk  i  c,

diarmuid   
s  aghdha, blaise thomson, milica ga  i  c, pei-hao
su, david vandyke, tsung-hsien wen, and steve
young. 2015. multi-domain dialog state tracking
in acl, pages
using recurrent neural networks.
794   799, beijing, china, july. acl.

[henderson et al.2014] matthew henderson, blaise
thomson, and steve young. 2014. word-based
dialog state tracking with recurrent neural networks.
in sigdial, pages 292   299, philadelphia, pa,
usa, june. acl.

[henderson2015] matthew henderson. 2015. machine
learning for dialog state tracking: a review.
in
machine learning in spoken language processing
workshop.

[hermann et al.2015] karl moritz hermann, tom  s ko-
cisk  , edward grefenstette, lasse espeholt, will
kay, mustafa suleyman, and phil blunsom. 2015.
teaching machines to read and comprehend.
in
nips, pages 1693   1701, montreal, canada. mit
press.

[hochreiter and schmidhuber1997] sepp hochreiter
and j  rgen schmidhuber. 1997. long short-term
memory. neural compututation, 9(8):1735   1780,
november.

[mrk  i  c et al.2016] nikola mrk  i  c,

diarmuid   
s  aghdha, tsung-hsien wen, blaise thom-
son, and steve young.
neural belief
tracker: data-driven dialogue state tracking. arxiv
preprint:1606.03777.

2016.

[papineni et al.2002] kishore papineni, salim roukos,
todd ward, and wei-jing zhu. 2002. id7: a
method for automatic evaluation of machine trans-
in acl, pages 311   318, stroudsburg, pa,
lation.
usa. acl.

[serban et al.2015a] iulian vlad serban, ryan lowe,
laurent charlin, and joelle pineau. 2015a. a sur-
vey of available corpora for building data-driven di-
alogue systems. arxiv preprint:1512.05742.

[serban et al.2015b] iulian vlad serban, alessandro
sordoni, yoshua bengio, aaron c. courville, and
joelle pineau.
2015b. hierarchical neural net-
work generative models for movie dialogues. arxiv
preprint:1507.04808.

[wen et al.2016] tsung-hsien wen, milica ga  i  c,
nikola mrk  i  c, pei-hao su, david vandyke, and
steve young. 2016. multi-domain neural network
language generation for spoken dialogue systems.
in naacl-hlt, pages 120   129, san diego,
california, june. acl.

[yao et al.2014] kaisheng yao, baolin peng, yu zhang,
dong yu, geoffrey zweig, and yangyang shi. 2014.
spoken language understanding using long short-
term memory neural networks. in ieee slt, pages
189   194, december.

[yin et al.2015] pengcheng yin, zhengdong lu, hang
li, and ben kao. 2015. neural enquirer: learning
to query tables. arxiv preprint:1512.00965.

[young et al.2010] steve young, milica ga  i  c, simon
keizer, fran  ois mairesse, jost schatzmann, blaise
thomson, and kai yu.
2010. the hidden in-
formation state model: a practical framework for
pomdp-based spoken dialogue management. com-
puter, speech and language.

[young et al.2013] steve young, milica ga  i  c, blaise
thomson, and jason d. williams. 2013. pomdp-
based statistical spoken id71: a review.
proceedings of the ieee.

[shang et al.2015] lifeng shang, zhengdong lu, and
hang li. 2015. neural responding machine for
short-text conversation. in acl, pages 1577   1586,
beijing, china, july. acl.

[su et al.2015] pei-hao su, david vandyke, milica ga-
sic, dongho kim, nikola mrksic, tsung-hsien wen,
and steve j. young. 2015. learning from real users:
rating dialogue success with neural networks for re-
inforcement learning in spoken dialogue systems. in
interspeech, pages 2007   2011, dresden, germany.
isca.

[su et al.2016] pei-hao su, milica gasic, nikola
mrk  i  c, lina m. rojas barahona, stefan ultes,
david vandyke, tsung-hsien wen, and steve
young. 2016. on-line active reward learning for
policy optimisation in spoken dialogue systems. in
acl, pages 2431   2441, berlin, germany, august.
acl.

[sukhbaatar et al.2015] sainbayar sukhbaatar, arthur
szlam, jason weston, and rob fergus. 2015. end-
in nips, pages 2440   
to-end memory networks.
2448. curran associates, inc., montreal, canada.

[sutskever et al.2014] ilya sutskever, oriol vinyals,
and quoc v. le. 2014. sequence to sequence learn-
in nips, pages 3104   
ing with neural networks.
3112, montreal, canada. mit press.

[traum1999] david r. traum, 1999. foundations of
rational agency, chapter speech acts for dialogue
agents. springer.

[vinyals and le2015] oriol vinyals and quoc v. le.
in icml

2015. a neural conversational model.
deep learning workshop, lille, france.

[vinyals et al.2015] oriol vinyals, meire fortunato,
and navdeep jaitly. 2015. id193.
in
nips, pages 2692   2700, montreal, canada. curran
associates, inc.

[wen et al.2013] tsung-hsien wen, aaron heidel,
hung yi lee, yu tsao, and lin-shan lee. 2013.
recurrent neural network based language model per-
sonalization by social network id104.
in
interspeech, pages 2007   2011, lyon france. isca.

[wen et al.2015a] tsung-hsien wen, milica ga  i  c,
dongho kim, nikola mrk  i  c, pei-hao su, david
vandyke, and steve young. 2015a. stochastic lan-
guage generation in dialogue using recurrent neural
networks with convolutional sentence reranking. in
sigdial, pages 275   284, prague, czech republic,
september. acl.

[wen et al.2015b] tsung-hsien wen, milica ga  i  c,
nikola mrk  i  c, pei-hao su, david vandyke, and
steve young.
2015b. semantically conditioned
lstm-based id86 for spoken
in emnlp, pages 1711   1721,
dialogue systems.
lisbon, portugal, september. acl.

appendix: sample dialogues
table 6: some samples of real conversational logs between online judges and the end-to-end system.
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine
human
machine

: restaurant in any area that serves vietnamese food
: thanh binh serves vietnamese food type , is there anything else i can help you with ?
: what is the phone number and post code
: the number is 01223 362456 and the area code is c.b 3, 0 a.f . is there anything else i can do for you ?
: good bye
: thank you for using the cambridge restaurant system .
: i am looking for moderately priced halal food
: i am sorry , there are no halal restaurants in the moderate price range . would you like something else ?
: how about european food
: galleria serves european food type and is in the moderate price range .
: address and postcode
: the address is 33 bridge street and the area code is c.b 2, 1 u.w . is there anything else i can help you with today ?
: thanks
: galleria is a european restaurant in the moderate price range . would you like their phone ?
: thank you
: thank you for using the cambridge restaurant system . good bye
: hi, i   m hungry for some indonesian food
: i am sorry , there are no indonesian restaurants . would you like a different food ?
: oh no. how about indian?
: there are 9 restaurants serving indian types of food . do you have a preference on side of town ?
: east side please
: sitar tandoori is a indian restaurant in the east side of town . would you like their information ?
: yes, the address and phone number please
: sitar tandoori is located at 43 high street cherry hinton cherry hinton and their phone number is 01223 249955 .
: okay, thank you
: thank you , goodbye .
: hello
: what cuisine would you like ?
: afghan
: i am sorry , there are no afghan restaurants . would you like something else ?
: korean
: little seoul serves korean food , it is located at 108 regent street city centre .
: is it expensive?
: little seoul serves korean food and is in the expensive price range .
: what area is that
: little seoul is located in the centre area of town . would you like their number ?
: yes
: the telephone number is 01223 308681 . is there anything else i can help you with today ?
: no goodbye
: thank you for using the cambridge restaurant system , goodbye .
: i want to    nd a restaurant in the east part of town that serves creative food
: i am sorry , there are no creative restaurants in the east side of town . would you like a different restaurant ?
: how about indian food?
: curry prince is a indian restaurant in the east of town . would you like their phone number ?
: yes, may i have the address and phone number?
: curry prince is located at 451 newmarket road fen ditton and their phone is 01223 566388 . is there anything else i can help you with today ?
: no, thank you goodbye
: thank you for using the cambridge restaurant system . good bye
: what food are you interested ?
: english
: i am sorry , there are no english restaurants . would you like to try a different food type ?
: chinese
: there are 8 restaurants serving chinese type of cuisine . do you have a preference of area ?
: south part
: the good luck chinese food takeaway is a chinese restaurant in the south of town . would you like the phone number ?
: no. just address and price range
: the good luck chinese food takeaway is located at 82 cherry hinton road cherry hinton . is there anything else i can help you with ?
: what is their price range?
: the good luck chinese food takeaway is expensively priced chinese restaurant in the south area . would you like more information ?
: no goodbye
: thank you for using the cambridge restaurant system . good bye .
: is there a gastropub anywhere around here?
: there are 3 gastropub restaurants . would you like more information ?
: is there one on the west side?
: i am sorry , there are no gastropub restaurants in the west side of town . would you like something else ?
: how about east?
: royal standard is a gastropub restaurant in the east of town .
: what   s the address?
: the address is 290 mill road city centre .
: thanks, bye
: thank you for using the cambridge restaurant system . good bye

