towards multi-agent communication-based language learning

angeliki lazaridou and nghia the pham and marco baroni

{angeliki.lazaridou|thenghia.pham|marco.baroni}@unitn.it

university of trento

6
1
0
2

 

y
a
m
3
2

 

 
 
]
l
c
.
s
c
[
 
 

1
v
3
3
1
7
0

.

5
0
6
1
:
v
i
x
r
a

abstract

we propose an interactive multimodal
framework for language learning.
in-
stead of being passively exposed to large
amounts of natural text, our learners (im-
plemented as feed-forward neural net-
works) engage in cooperative referential
games starting from a tabula rasa setup,
and thus develop their own language from
the need to communicate in order to suc-
ceed at the game. preliminary experiments
provide promising results, but also suggest
that it is important to ensure that agents
trained in this way do not develop an ad-
hoc communication code only effective for
the game they are playing.

introduction

1
one of the most ambitious goals of ai is to
develop intelligent conversational agents able to
communicate with humans and assist
them in
their tasks. thus, communication and interac-
tion should be at the core of the learning pro-
cess of these agents; failure to integrate commu-
nication as their main building block raises con-
cerns regarding their usability. however, tradi-
tional machine-learning approaches to language
are based on static, passive, and mainly super-
vised regimes (e.g., as in applications to parsing,
machine translation, id86).
computational    passive learners    receive a lot of
annotated data and, by observing regularities in
them, discover patterns they can apply to new data.
while this is a great way to learn general statis-
tical associations, it is very far from interactive
communication, which proceeds by an active and
incremental updating of the speakers    knowledge
states.

in the language community, after the seminal

work on the    blocks-world    environment of wino-
grad (1971), we are now experiencing a revival
of interest in language learning frameworks that
are centered around communication and interac-
tion (e.g., the roadmap of mikolov et al. (2015)
or the more recent dialogue-based learning pro-
posal of weston (2016)). similar trends are also
taking place in other    elds of arti   cial intelli-
gence, witness the revival of interest in game
playing with the recent ground-breaking results
of id25 on atari (mnih et al., 2015) and al-
phago (silver et al., 2016), following precursors
such as deepblue (campbell et al., 2002) and td-
gammon (tesauro, 1995).

focusing on language, current approaches to
communication-based language learning simulate
interactive environments in diverse ways, e.g., by
having agents interacting directly with humans or
other scripted agents. both approaches exhibit
potentially important limitations. the human-in-
the-loop approach (e.g., the shrldu program
of terry winograd, robots learning via interacting
with humans as in tellex et al. (2014)) faces se-
rious scalability issues, as active human interven-
tion is obviously required at each step of training.
scripted wizard-of-oz environments (mikolov et
al., 2015) shift the burden of heavy manual en-
gineering from the learning agent to designing
the right behaviour for the programmed teaching
agents.

in this work, we are proposing a radically
different research program, namely multi-agent
communication-based language learning within a
multimodal environment. the essence of this pro-
posal is to let computational agents co-exist, so
that their co-existence constitutes the interactive
environment.
in this multi-agent environment,
agents need to collaborate to perform a task, and
we hypothesize that (with the right priors and
constraints) developing language production and

tial games (see figure 1) (galantucci et al., 2012).
the speaker in this game is asked to refer to one
of the visible objects by uttering an expression.
the listener, who sees the same objects but has
no knowledge regarding which object the speaker
was asked to describe, needs to identify it based
on the speaker   s expression.

importantly, the agents start in a tabula rasa
state. they do not possess any form of language
or understanding. they have no prior notion of
the semantics of words. meanings are assigned
to words (that is, the arbitrary symbols used in our
initial simulations) by playing the game and are re-
inforced by communication success. thus, agents
can agree to any sort of conceptualization and as-
sign to any word any kind of interpretation that
help them effectively solve the tasks. this essen-
tially aligns with the view of wittgenstein (1953)
that language meaning is derived from usage.

we will report next a set of pilot experiments
showing that, while it is feasible, within this multi-
agent environment, to learn ef   cient communica-
tion protocols succeeding in the referential game,
such protocols might not necessarily be aligned
with the sort of semantics that exists in natu-
ral language.
interestingly, in the seminal lan-
guage evolution experiment    talking heads    of
steels (2015), when two robots were left free to
interact with each other, they developed an arti   -
cial language bearing little resemblance to natu-
ral language. thus, we anticipate that, if we want
to move forward with this research programme,
grounding the agents    communication into natural
language will be crucial, since our ultimate goal is
to be able to develop agents capable of communi-
cation with humans. we will return to this point in
section 4.

2 a two-agent referential game

simulation
2.1 the game
we propose a simple referential game with 2
agents, a1 and a2. the game is de   ned as fol-
lows:

    a1 is shown a visual scene with two objects
and is told to describe the referent with an
attribute that constitutes the referring expres-
sion (re).

    a2 is shown the same visual scene with-
out information on which is the referent, and

figure 1: schematic representation of the referen-
tial game. agent a1 has to describe the dashed
object with an attribute. agent a2, has to guess
which object a1 was referring to. in this example,
the agents agree on the referent, so the commu-
nicative act was successful.

understanding will be prerequisites to successful
communication. note that we are not suggesting
that the    passive    setup should be abandoned, as,
even in the interactive paradigm, large-scale sta-
tistical learning is expected to be important, e.g.,
to let agents discover how to produce grammati-
cal sentences, how to recognize object categories
in general or even how to provide generic descrip-
tions of what is present in a scene. still, interaction
is required for many other tasks, that only make
sense within a communicative setup, e.g., how to
refer to speci   c things, or how to ask a good ques-
tion or respond to it.

several points make this proposal attractive.
first of all, this framework requires minimum hu-
man intervention for designing agents, the envi-
ronment and its physics, e.g, rewards, although hu-
mans do still need to specify the nature of the tasks
that agents need to perform. computational agents
will co-exist (co-operate or antagonize) and self-
organize freely, interacting with each other and be-
ing encouraged to learn in order to achieve com-
munication. for example, imagine the simple case
in which an agent needs to have some object that
some other agent possesses, and she starts asking
for it in various ways. only when she manages
to make herself understood she will be able to get
hold of that object. the sort of learning taking
place in such setup will have to be based on active
request for information, and it will probably foster
incremental agreement by interaction.

we start by considering the most basic act of
communication, namely referring to things. we
design multimodal riddles in the form of referen-

hank you!thank you!agent a1agent a2bluethis!referit

objects

shapes

visual scenes
gold attributes
#unique images
#visual scenes
#gold attributes

yellow
22.5k
25k
3467

hamster

46k
495k
100

limegreen

2.4k
100k
18

table 1: examples of (cid:104)ref erent, context(cid:105) pairs from our 3 datasets. referents are marked with a green
square.

given the re has to    point    to the intended
object

    if a2 points to the correct object, then both

agents receive a game point.

this game resembles

note that
the refer-
itgame (kazemzadeh et al., 2014) played by hu-
mans and designed to collect re annotations of
real scenes.

we observe that this is a co-operative game, i.e.,
our agents must work together to achieve game
points. a1 should learn how to provide accurate
phrases that discriminate the object from all oth-
ers, and a2 should be good at interpreting a1   s
res in the presence of the objects, in order to point
to the correct one. thus, with this game a1 and
a2 learn to perform referring expression genera-
tion and reference resolution respectively.

2.2 visual scenes
for reducing the complexity of our    rst simula-
tions, unlike the referitgame, we do not work
with real-world visual scenes.
instead, we con-
struct visual scenes consisting of objects depicted
in images. speci   cally, our current setup consists
of visual scenes with only two objects, the refer-
ent and the context. this allows us to have con-
trol over the complexity of the image processing
required and the game itself, e.g., by having a ref-
erent that is visually dissimilar from the context
and can be thus easily discriminated. towards this
end, we created 3 games from 3 different datasets
by controlling the type of objects involved in the
visual scene. each dataset focuses on some partic-
ular aspect of the referential game.

while our framework does not require obtain-
ing gold annotations for the re of the referent,

we apply a number of heuristics to annotate each
(cid:104)referent, context(cid:105) pair with gold attributes acting
as res. this will allow us to conduct various anal-
yses regarding the nature of the semantics that the
agents assign to the induced attributes. table 1
exempli   es an instance of the game for the differ-
ent scenarios, and reports descriptive statistics for
the 3 datasets.1
referit the    rst game scenario uses data de-
rived from the referitgame (kazemzadeh et al.,
2014).
in its general format, referitgame con-
tains annotations of bounding boxes in real images
with referring expressions produced by humans
when playing the game. in order to create plausi-
ble visual situations consisting of two objects only,
we synthesize scenes by pairing each referent (as
denoted by a bounding box in the image) with a
distractor context that comes from the same image
(i.e., some other bounding box in the image). each
bounding box in the initial refetitgame is asso-
ciated with a re, which we pre-process to elimi-
nate stop words, punctuation and spatial informa-
tion, deriving single words attributes. we then fol-
low a heuristic to obtain the gold attributes acting
as the referring expression for a given (cid:104)referent,
context(cid:105) pair, by selecting words that were pro-
duced to describe the intended referent but not the
context. the rationale for this decision is that a
necessary condition for achieving successful ref-
erence is that res accurately distinguish the in-
tended referent from any other object in the con-
text (dale and haddock, 1991). for maximizing
the quality of the generated gold attributes, (i) we
disregarded any distractor context whose bound-
ing box overlapped signi   cantly with the refer-

1our datasets will be made available.

ent   s bounding box and (ii) we disregarded distrac-
tor contexts that had full attribute overlap with the
referent, thus resulting in a null referring expres-
sion for the (cid:104)referent, context(cid:105) pair.
objects to control for the complexity of the vi-
sual scenes and attributes while maintaining real
images, we created a simpler dataset in which ref-
erent and context are always different objects. for
a list of 100 concrete objects ranging across dif-
ferent categories (e.g., animal, furniture etc), we
synthesized (cid:104)referent, context(cid:105) pairs by taking all
possible combinations of objects and, for each ob-
ject, sampling an image from the respective ima-
genet (deng et al., 2009) object label entry. the
re/gold attributes for a given pair is then straight-
forwardly obtained by using the object name of the
referent.

shapes finally, we introduce a third dataset
which controls for the complexity that real images
have, while allowing referent and context to dif-
fer in a diverse number of attributes, exactly like
in real scenes. following andreas et al. (2016),
we created a geometric shapes dataset consisting
of images that contain a single object. we gener-
ate such single-object images by varying the val-
ues of 6 types of attributes and follow a simi-
lar approach as in the referit dataset to annotate
(cid:104)referent, context(cid:105) pairs with gold attributes (i.e.,
by taking the difference of the attributes in the ref-
erent and context). 2

2.3 agent players
agent a1 (referring expression generation)
agent a1 is performing a task analogous to re-
ferring expression generation. unlike traditional
reg research (dale and reiter, 1995; mitchell et
al., 2010; kazemzadeh et al., 2014) that produces
phrases or words as re, in our current framework,
agent a1 learns to predict a single attribute that
discriminates the referent from the context. note
however that attribute meaning is not pre-de   ned.
instead, it emerges    on-demand    via their usage
in the referential game. in particular, ideally agent
a1 will learn to associate the attributes to system-
atic con   gurations of lower-level perceptual fea-
tures present in the images. in the current exper-
shape=(cid:104)triangle,
square, circle(cid:105), border color=(cid:104)fuchsia, indigo, crimson, cyan,
limegreen, brown, gray(cid:105), horizontal position=(cid:104)up,
black,
down(cid:105), vertical position=(cid:104)right,
left(cid:105), shape size=(cid:104)small,
medium, big(cid:105)

2the 18 attributes grouped by type:

figure 2: neural network of player a1.
in this
particular game, a1 produces the reference vector
that activates attribute_2 as the re, which is
going to be passed over to a1.

iments, the words are simply represented by nu-
merical indices, but it would of course be trivial to
associate such indices with phonetic strings.

figure 2 illustrates the network architecture of
a1. the model is presented with the two images
that constitute a visual scene. we assume that
agents are already equipped with a pre-trained vi-
sual system that converts the raw pixel input of the
referent and the context to higher-level visual vec-
tors v (i.e., convnet fc7 layers). for games using
the referit and objects dataset we used the pre-
trained vgg-network (simonyan and zisserman,
2014). for the shapes, given that the nature of
the images are different from the usual id163
data used train these networks, we trained our own
model. speci   cally, we trained a smaller network,
i.e., alexnet (krizhevsky et al., 2012) on predict-
ing bundles of two attributes. for both models,
we use the second-to-last fully connected layer to
represent images with 4096-d vectors. these vi-
sual vectors are mapped into attribute vectors of
dimensionality |v | (cardinality of all available at-
tributes), with weights ma     r4096  |v | shared
across the two objects. intuitively, this layer learns
which attributes are active for speci   c objects.

pairwise interactions between attribute vectors
of referent and context are captured in the dis-
criminative layer. this layer, processes, for each
attribute, the two units, one for each object, and
by applying a linear transformation with weights
md     r2  h, followed by a sigmoid activation
function,    nally derives a single value by another

mdmdmamareferentcontextattribute layerdiscriminativelayerdiscriminativeness vectorattribute_2attribute_1attribute_3reference vectormdmdrepeated |v| times with shared andacross attributes soft-max and samplingpre-trainedvisual modelvisual vectorslinear transformation with weights md     rh  1,
producing dv which encodes the degree of dis-
criminativeness of attribute v for the speci   c ref-
erent. the same process with the same shared
weights md and md, across attributes is applied
to all attributes v     v , to derive the estimated dis-
criminativeness vector d. finally, the discrimina-
tiveness vector is converted to a id203 dis-
tribution, from which the player samples one at-
tribute a acting as the referring expression. this
attribute is encoded in the reference vector with
one-hot like representation, and is passed over to
a2. the learnable parameters of a1 are   a1 =
(cid:104)ma, md, md(cid:105).

a1 does not receive supervised data regarding
the attributes that are active in pictures, nor re-
garding which attributes should be used to refer to
the referent. the only supervision regarding the
   goodness    of attributes for the given (cid:104)referent,
context(cid:105) pair comes from the success of the inter-
action between the agents while playing the refer-
ential game.

agent a2 (reference resolution) for the pur-
poses of the game, a2 needs to perform a task
similar to reference resolution. given the same vi-
sual input as a1 (we assume that the agents share
the same visual system) and the produced attribute
a, a2 has to choose which of the 2 objects in the
scene is the intended referent.

figure 3: network of a2. given the two objects
and the reference vector encoding the predicted at-
tribute produced by a1, she correctly predicts that
the referent is the second object.

following this reasoning, we design a simple
implementation of a2 depicted in figure 3. a2 is
presented with the two objects o1 and o2, without
knowing which is the referent, and embeds them
into an attribute space using weights shared across

the two objects ma(cid:48)     r4096  |v |.3 note, that as is
in the case of a1, a2 will receive no direct image-
attribute supervision. the resulting attribute vec-
tors encode how active the attributes are across the
two objects. following that, a2 computes the dot
product similarities between the reference vector
(i.e., the one-hot representation of the selected at-
tribute a) and the attribute vectors of the objects.
intuitively, the reference vector encodes which at-
tribute characterizes the referent and as a result,
the dot similarity will be high if the attribute a is
very active in the attribute vector. these two dot
similarities are converted to a id203 distribu-
tion p(o|o1, o2, a) over the two image indices, and
one index is sampled indicating which of the two
objects is the chosen referent. the learnable pa-
rameters of a2 are just   a2 = (cid:104)ma(cid:48)(cid:105)

3 experiments

the agents perform actions,

3.1 general training details
the parameters of the 2 agents,    = (cid:104)  a1,   a2(cid:105),
are learned jointly while playing the game. the
only supervision used is communication success,
i.e., whether the agents agreed on the referent.
this setup can be naturally modeled with rein-
forcement learning (sutton and barto, 1998). un-
der this framework, the parameters of the agents
implement a policy.
by executing this pol-
icy,
i.e., a1 picks
an attribute and a2 picks an image. the loss
function that the two agents are minimizing is
   ie  o   p(o|o1,o2,a)[r(  o)], where o1 and o2 are the
2 objects in the visual scene, p(o|o1, o2, a) is the
id155 over the 2 objects as com-
puted by a2 given the objects and the attribute
produced by a1, and r is the reward function
which returns 1 iff   o = referent. the parameter
updates are done following the reinforce update
rule (williams, 1992). we do mini-batch updates,
with a batch-size of 32 and train in all datasets for
3.5k iterations.4

the agents are trained and tested separately
within each dataset. at test time, visual scenes
(i.e., combination of referent and contexts images)
are novel but individual images might be familiar.
for test and tuning we use 1k visual scenes, and

3while we could tie ma(cid:48)

and ma, here we do not en-
force any such constraint, essentially allowing the agents to
develop their own    visual    understanding.

4the model-speci   c hidden size of discriminative layer

hyperparameter is set to 20.

attribute layerpre-trainedvisual modelvisual vectorso1reference vectordot producto2soft-max and samplingma'ma'figure 4: communication success across different datasets over training epochs. for each dataset, we
vary the number of attributes available in the vocabulary of the agents. note: best viewed in color.

leave the rest for training (see table 1 for exact
numbers).

3.2 results
our pilot experiments aim to ascertain whether
our proposal can result in agents that learn to
play the game correctly. moreover, given that the
agents start from a clean state (i.e., they possess
no prior semantics other than the relatively low-
level features passed to them through the visual
vectors), it is worth looking into the nature of the
induced semantics of the attributes. simply put,
is communication-based learning enough to allow
agents to use the attributes in such a way that re-
   ects high-level understanding of the images?
can agents learn to develop a communication
protocol within the referential game? figure
4 shows the communication success performance,
i.e., how often the intended referent was guessed
correctly by a2 (chance guessing would lead to
0.5 performance). overall, agents are able to come
up with a communication protocol allowing them
to solve the task, but it takes them approximately
500 iterations (i.e., 16k training examples) before
they start communicating effectively. this is to
be expected, as the agents have no knowledge of
the game rules nor of how to refer to things, and
must induce both by observing the rewards they
receive. moreover, fewer attributes in the vocab-
ulary translates to faster, but not necessarily bet-
ter learning. as a sanity check, we restricted the
vocabulary to 2 attributes only. in this case, the
agents also came close to solving the task (and
that was done faster than in the other cases), al-
though without approaching 100% performance,
a tendency observed across the datasets. at    rst
glance this might seem suspicious; even if we, as
humans, use language    exibly through polysemy,

still it will not be possible to come up with 2 words
being able to reliably distinguish all possible com-
binations of objects!

however, when we closely inspected the way
a1 used the 2 attributes (e.g., by looking into the
induced weights ma), it became clear that the
agent was in a sense    cheating   . instead of com-
municating about high-level semantics, the agents
agreed to exploit the attributes to communicate
about low-level embedding properties of (cid:104)referent,
context (cid:105) pairs (e.g., pick attribute 1 if the value in
dimension 3 is greater in the referent than the con-
text etc). while this might seem odd, such strate-
gies are in fact the best in order to communicate
ef   ciently with only 2 attributes. this resembles
the so-called conceptual pacts that humans form
to make conversation more ef   cient, i.e., mutually
agreeing in using    unconventional    semantics to
refer to things (brennan and clark, 1996). still,
the    words    discovered in this way have a very
ad-hoc meaning that will not generalize to any
useful task beyond the speci   cs of our game, and
we would not want the agents to learn them. we
thus turn now to an analysis of the semantic nature
of the induced attributes when the agents have a
larger vocabulary available than just 2 attributes,
to see if they learn more general meanings, corre-
sponding to (clusters of) high-level visual proper-
ties such as    red    or    cat   .
what is the nature of the induced attributes?
revealing the semantics assigned to the induced
attributes a is not trivial. we tested whether the se-
mantics of the induced attributes align with the se-
mantics of the referring expressions as expressed
by the gold attributes. we focused on the ob-
jects and shapes datasets that have a relatively
small number of attributes (100 and 18 respec-
tively) and trained the agents using as attribute vo-

0500100015002000250030003500# iterations0.40.50.60.70.80.91.0communication success24060100referit0500100015002000250030003500# iterations0.40.50.60.70.80.91.0communication success24060100objects0500100015002000250030003500# iterations0.40.50.60.70.80.91.0communication success21860100shapesattributes

2
100

datasets referit objects

shapes

1.0
0.0

1.0
0.03

1.0
0.05

table 2: proportion of referentially inconsis-
tent attributes, i.e., ri(a) > 0, across differ-
ent datasets and with different attribute vocabulary
size |v |. smaller values re   ect consistent use.

ages for which a was both in the referent and con-
text sets, normalized by the times it appears in ei-
ther. ideally, this value should be 0, as this hap-
pens when it was never the case that an induced
attribute was activated both when an image was in
the referent and in the context slot.

table 2 reports the proportion of induced ac-
tive attributes that have ri > 0 across datasets
(smaller values re   ect consistent use of attributes).
as expected, when communicating with 2 at-
tributes only, agents do not seem to be using them
in a semantically meaningful way, since referen-
tial consistency is violated. however, we ought to
mention that it is also possible is that the agents in
this case have learned to use the attributes in a rel-
ative way (parikh and grauman, 2011). imagine
that we pair an image of mona lisa once with an
image of a frowning face as the context, and once
with an image of a broadly smiling face. it would
be acceptable then to use    the smiling one    to de-
note mona lisa in the    rst pair, but it would also
be possible to refer in this way to the more overtly
smiling face in the second case, as mona lisa is
more smiley than the frowning face, but de   nitely
less so than a fully smiling face! in any case, for
all datasets, with 100 attributes referential consis-
tency is largely respected.

finally, we consider a third way to assess the
degree to which the induced attributes re   ect the
intuitive semantic properties of the images. our
hypothesis is that, if the induced attributes are used
coherently across visually similar referents, then
they should re   ect properties that are typical of
the class shared by the referents (e.g.,    furry    for
mammals). for this experiment, we focus on the
objects dataset that is annotated with 100 gold at-
tributes denoting the objects depicted in the pic-
tures (e.g., cat, dog etc). for each gold attribute
g, we construct a vector that records how often
the induced attribute a was used for a (cid:104)referent,
context(cid:105) pair that was annotated with g, essentially
representing gold attributes in a vector space with

figure 5: inferred alignment of gold attributes to
the induced ones in the shapes dataset.

cabulary size |v | 100 and 18 respectively. after
the training, we assign to each induced attribute a
the gold attribute that appears most often in the an-
notations of the (cid:104)referent, context(cid:105) pairs for which
a was predicted by a1, enforcing a 1-1 mapping
(an induced attribute can by paired only with one
gold attribute). a1 had a tendency not to make use
of all the available attributes a in the vocabulary,
thus either using attributes in a polysemous way,
or assigning them some semantics different than
the one that the gold attributes encode. as an ex-
ample, we plot in figure 5 the inferred alignment
between induced and gold attributes in the shapes
dataset.

irrespective of the exact interpretation of at-
tributes, meanings induced within this referential
framework should be consistent across (cid:104)referent,
context(cid:105) pairs. for example, if an agent used the
word red to refer to the object x in the context of
y, then red cannot be used again to refer to the
object z in the context of x, since red is also a
property of the latter. however, the    cheating    ap-
proach we reported above for the 2-attribute case,
in which the same attribute is used communicate
about whether a low-level feature is higher in the
referent or the context, would not respect this con-
sistency constraint, as x might have a higher value
of the relevant feature when compared to y but
lower with respect to z.

to capture this, we devised a measure that we
termed    referential inconsistency    (ri). speci   -
cally, for each image i we compute a set r(i)
containing all the induced attributes that were ac-
tivated when i was in the referent slot and c(i)
in the context slot.
the referential in-
consistency ri of an attribute a is computed as
, which counts the number of im-

then,

(cid:80)
(cid:80)

i [a   r(i)   c(i)]
i [a   r(i)   c(i)]

   -    matrix0246810121416trianglelargemediumindigobrownlimegreenfuchsiablackhighsmallrightsquarelowgraycrimsoncyancircleleftinduced attributes as dimensions. we then com-
pute the pairwise cosine similarities of the gold at-
tributes in this vector space, plotted in figure 6 up.
as is, there is no structure in the similarity matrix.
however, if we organize the rows and columns in
the similarity matrix, as in figure 6 down, so that
objects of the same category cluster together (e.g.,
the    rst 2 rows and columns correspond to appli-
ances, the next 4 to fruits), then a pattern along the
diagonal starts to emerge, suggesting that the in-
duced attributes re   ect, at least to same degree, the
similarity that exists between objects of the same
category.

figure 6: pairwise cosine similarities of gold at-
tributes in induced-attribute vector space in the
objects dataset when ordered randomly (up) and
according to their category (down).

4 discussion
we have presented here a proposal for develop-
ing intelligent agents with language capabilities,
that breaks away from current passive supervised
regimes. agents co-exist and are able to interact
with each other. in our proposed framework we do
not restrict the number of agents, nor their role in
the games, i.e., we envision a community of agents
that all interact with each other having to perform
different tasks and taking turns in them, requiring
them to either co-operate or antagonize in min-
max sort of zero-sum games, in which agents aim

at minimizing the opponents gain (e.g., as in the
case of the famous tic-tac-toe game).

i.e.,

in our test case, we considered the most ba-
sic act of communication,
learning to re-
fer to things, and we designed a    grounded    co-
operative task that takes the form of referential
games played by two agents. the    rst experi-
ments, while encouraging, have revealed that it is
essential to ensure that agents will not    drift    into
their own language, but instead they will evolve
one that is aligned to our natural languages. thus,
inspired by the success of alphago (silver et al.,
2016), that combines both passive learning (expe-
riencing past human games and using a id98 to
learn valid moves) and interactive learning (learn-
ing by playing what is the best move given a par-
ticular situation/state), we believe that it is cru-
cial to combine dynamic interactive learning with
static statistical learning of patterns from associa-
tion, something that should ensure the grounding
of communication into natural language.

we plan to move along a similar direction, in-
troducing our agents to multi-tasking. as an ex-
ample, we could expose a1 to large collections of
texts and train her on id38, a task
requiring no manual annotation, from which basic
word associations patterns can be learned. sim-
ilarly, a2 could be trained on an id162
task, from which basic concept recognition and
naming capabilities can be acquired, i.e., associ-
ating the phonetic string    cat    to instances of cats.
still, the agents would be trained via playing the
game for producing good referring expressions,
which is a task that depends predominantly on the
success of communication (i.e., did our listener
understood what we were referring to?)

references
[andreas et al.2016] jacob andreas, marcus rohrbach,
trevor darrell, and dan klein. 2016. learning to
compose neural networks for id53.
arxiv preprint arxiv:1601.01705.

[brennan and clark1996] susan e brennan and her-
bert h clark. 1996. conceptual pacts and lexi-
cal choice in conversation. journal of experimen-
tal psychology: learning, memory, and cognition,
22(6):1482.

[campbell et al.2002] murray campbell, a joseph
hoane, and feng-hsiung hsu. 2002. deep blue.
arti   cial intelligence, 134(1):57   83.

[dale and haddock1991] robert dale and nicholas

   -    matrix 0 20 40 60 80 0 20 40 60 80 0 0.2 0.4 0.6 0.8 1   -    matrix 0 20 40 60 80 0 20 40 60 80 0 0.2 0.4 0.6 0.8 1haddock. 1991. content determination in the gen-
eration of referring expressions. computational in-
telligence, 7(4):252   265.

[dale and reiter1995] robert dale and ehud reiter.
1995. computational interpretations of the gricean
maxims in the generation of referring expressions.
cognitive science, 19(2):233   263.

[deng et al.2009] jia deng, wei dong, richard socher,
lia-ji li, and li fei-fei. 2009. id163: a large-
scale hierarchical image database. in proceedings of
cvpr, pages 248   255, miami beach, fl.

[galantucci et al.2012] bruno galantucci, simon gar-
2012. experimental
language and linguistics compass,

rod, and gareth roberts.
semiotics.
6(8):477   493.

[kazemzadeh et al.2014] sahar kazemzadeh, vicente
ordonez, mark matten, and tamara l berg. 2014.
referitgame: referring to objects in photographs of
natural scenes. in emnlp, pages 787   798.

[simonyan and zisserman2014] karen simonyan and
andrew zisserman. 2014. very deep convolutional
networks for large-scale image recognition. arxiv
preprint arxiv:1409.1556.

[steels2015] luc steels.

2015. the talking heads
experiment: origins of words and meanings, vol-
ume 1. language science press.

[sutton and barto1998] richard sutton and andrew
barto. 1998. id23: an intro-
duction. mit press, cambridge, ma.

[tellex et al.2014] stefanie tellex, ross knepper,
adrian li, daniela rus, and nicholas roy. 2014.
asking for help using inverse semantics.

[tesauro1995] gerald tesauro. 1995. temporal differ-
ence learning and td-gammon. communications of
the acm, 38(3):58   68.

[weston2016] jason weston. 2016. dialog-based lan-

guage learning. arxiv preprint arxiv:1604.06045.

[krizhevsky et al.2012] alex

krizhevsky,

ilya
im-
classi   cation with deep convolutional
in proceedings of nips, pages

sutskever, and geoffrey hinton.
agenet
neural networks.
1097   1105, lake tahoe, nevada.

2012.

[williams1992] ronald j williams.

simple
statistical gradient-following algorithms for connec-
tionist id23. machine learning,
8(3-4):229   256.

1992.

[mikolov et al.2015] tomas mikolov, armand joulin,
a roadmap to-
arxiv preprint

and marco baroni.
2015.
wards machine intelligence.
arxiv:1511.08130.

[mitchell et al.2010] margaret mitchell, kees van
deemter, and ehud reiter. 2010. natural reference
in proceedings of
to objects in a visual domain.
the 6th international natural
language genera-
tion conference, pages 95   104. association for
computational linguistics.

[winograd1971] terry winograd. 1971. procedures as
a representation for data in a computer program for
understanding natural language. technical report
ai 235, massachusetts institute of technology.

[wittgenstein1953] ludwig wittgenstein. 1953. philo-
sophical investigations. blackwell, oxford, uk.
translated by g.e.m. anscombe.

[mnih et al.2015] volodymyr

mnih,

koray
kavukcuoglu, david silver, andrei rusu, joel
veness, marc bellemare, alex graves, martin
riedmiller, andreas fidjeland, georg ostrovski,
stig petersen, charles beattie, amir sadik, ioannis
antonoglou, helen king, dharshan kumaran, daan
wierstra, shane legg, and demis hassabis. 2015.
human-level control through deep reinforcement
learning. nature, 518:529   533.

[parikh and grauman2011] devi parikh and kristen
grauman. 2011. relative attributes. in computer
vision (iccv), 2011 ieee international conference
on, pages 503   510. ieee.

[silver et al.2016] david silver, aja huang, christo-
pher j. maddison, arthur guez, laurent sifre,
george van den driessche, julian schrittwieser,
ioannis antonoglou, veda panneershelvam, marc
lanctot, sander dieleman, dominik grewe, john
nham, nal kalchbrenner, ilya sutskever, timothy
lillicrap, madeleine leach, koray kavukcuoglu,
thore graepel, and demis hassabis. 2016. mas-
tering the game of go with deep neural networks and
tree search. nature, 529:484   503.

