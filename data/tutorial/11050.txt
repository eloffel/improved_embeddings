retro   tting word vectors to semantic lexicons

manaal faruqui

jesse dodge

sujay k. jauhar

chris dyer eduard hovy noah a. smith

language technologies institute

carnegie mellon university
pittsburgh, pa, 15213, usa

{mfaruqui,jessed,sjauhar,cdyer,ehovy,nasmith}@cs.cmu.edu

5
1
0
2

 
r
a

 

m
2
2

 
 
]
l
c
.
s
c
[
 
 

4
v
6
6
1
4

.

1
1
4
1
:
v
i
x
r
a

abstract

vector space word representations are learned
from distributional information of words in
large corpora. although such statistics are
semantically informative, they disregard the
valuable information that is contained in se-
mantic lexicons such as id138, framenet,
and the paraphrase database. this paper
proposes a method for re   ning vector space
representations using relational information
from semantic lexicons by encouraging linked
words to have similar vector representations,
and it makes no assumptions about how the in-
put vectors were constructed. evaluated on a
battery of standard lexical semantic evaluation
tasks in several languages, we obtain substan-
tial improvements starting with a variety of
word vector models. our re   nement method
outperforms prior techniques for incorporat-
ing semantic lexicons into word vector train-
ing algorithms.

introduction

1
data-driven learning of word vectors that capture
lexico-semantic information is a technique of cen-
tral importance in nlp. these word vectors can
in turn be used for identifying semantically related
word pairs (turney, 2006; agirre et al., 2009) or
as features in downstream text processing applica-
tions (turian et al., 2010; guo et al., 2014). a vari-
ety of approaches for constructing vector space em-
beddings of vocabularies are in use, notably includ-
ing taking low rank approximations of cooccurrence
statistics (deerwester et al., 1990) and using internal
representations from neural network models of word
sequences (collobert and weston, 2008).

because of their value as lexical semantic repre-
sentations, there has been much research on improv-

ing the quality of vectors. semantic lexicons, which
provide type-level information about the semantics
of words, typically by identifying synonymy, hyper-
nymy, hyponymy, and paraphrase relations should
be a valuable resource for improving the quality of
word vectors that are trained solely on unlabeled
corpora. examples of such resources include word-
net (miller, 1995), framenet (baker et al., 1998)
and the paraphrase database (ganitkevitch et al.,
2013).

recent work has shown that by either changing
the objective of the word vector training algorithm
in neural language models (yu and dredze, 2014;
xu et al., 2014; bian et al., 2014; fried and duh,
2014) or by relation-speci   c augmentation of the
cooccurence matrix in spectral word vector models
to incorporate semantic knowledge (yih et al., 2012;
chang et al., 2013), the quality of word vectors can
be improved. however, these methods are limited to
particular methods for constructing vectors.

the contribution of this paper is a graph-based
learning technique for using lexical relational re-
sources to obtain higher quality semantic vectors,
which we call    retro   tting.    in contrast to previ-
ous work, retro   tting is applied as a post-processing
step by running belief propagation on a graph con-
structed from lexicon-derived relational information
to update word vectors (  2). this allows retro   tting
to be used on pre-trained word vectors obtained
using any vector training model.
intuitively, our
method encourages the new vectors to be (i) simi-
lar to the vectors of related word types and (ii) simi-
lar to their purely distributional representations. the
retro   tting process is fast, taking about 5 seconds for
a graph of 100,000 words and vector length 300, and
its runtime is independent of the original word vec-
tor training model.

tors to be retro   tted (and correspond to v   ); shaded
nodes are labeled with the corresponding vectors in
  q, which are observed. the graph can be interpreted
as a markov random    eld (kindermann and snell,
1980).

the distance between a pair of vectors is de   ned
to be the euclidean distance. since we want the
inferred word vector to be close to the observed
value   qi and close to its neighbors qj,   j such that
(i, j)     e, the objective to be minimized becomes:

        i(cid:107)qi       qi(cid:107)2 +

n(cid:88)

i=1

(cid:88)

(i,j)   e

      

  ij(cid:107)qi     qj(cid:107)2

figure 1: word graph with edges between related words
showing the observed (grey) and the inferred (white)
word vector representations.

  (q) =

experimentally, we show that our method works
well with different state-of-the-art word vector mod-
els, using different kinds of semantic lexicons and
gives substantial
improvements on a variety of
benchmarks, while beating the current state-of-the-
art approaches for incorporating semantic informa-
tion in vector training and trivially extends to mul-
tiple languages. we show that retro   tting gives
consistent improvement in performance on evalua-
tion benchmarks with different word vector lengths
and show a qualitative visualization of the effect of
retro   tting on word vector quality. the retro   tting
tool
is available at: https://github.com/
mfaruqui/retrofitting.

2 retro   tting with semantic lexicons
let v = {w1, . . . , wn} be a vocabulary, i.e, the set
of word types, and     be an ontology that encodes se-
mantic relations between words in v . we represent
    as an undirected graph (v, e) with one vertex for
each word type and edges (wi, wj)     e     v    v
indicating a semantic relationship of interest. these
relations differ for different semantic lexicons and
are described later (  4).
the matrix   q will be the collection of vector rep-
resentations   qi     rd, for each wi     v , learned
using a standard data-driven technique, where d is
the length of the word vectors. our objective is
to learn the matrix q = (q1, . . . , qn) such that the
columns are both close (under a distance metric) to
their counterparts in   q and to adjacent vertices in    .
figure 1 shows a small word graph with such edge
connections; white nodes are labeled with the q vec-

(cid:80)
(cid:80)

where    and    values control the relative strengths
of associations (more details in   6.1).

in this case, we    rst train the word vectors inde-
pendent of the information in the semantic lexicons
and then retro   t them.    is convex in q and its so-
lution can be found by solving a system of linear
equations. to do so, we use an ef   cient iterative
updating method (bengio et al., 2006; subramanya
et al., 2010; das and petrov, 2011; das and smith,
2011). the vectors in q are initialized to be equal
to the vectors in   q. we take the    rst derivative of   
with respect to one qi vector, and by equating it to
zero arrive at the following online update:

qi =

j:(i,j)   e   ijqj +   i   qi

j:(i,j)   e   ij +   i

(1)

in practice, running this procedure for 10 iterations
converges to changes in euclidean distance of ad-
jacent vertices of less than 10   2. the retro   tting
approach described above is modular; it can be ap-
plied to word vector representations obtained from
any model as the updates in eq. 1 are agnostic to the
original vector training model objective.

semantic lexicons during learning. our pro-
posed approach is reminiscent of recent work on
improving word vectors using lexical resources (yu
and dredze, 2014; bian et al., 2014; xu et al., 2014)
which alters the learning objective of the original
vector training model with a prior (or a regularizer)
that encourages semantically related vectors (in    )
to be close together, except that our technique is ap-
plied as a second stage of learning. we describe the

      

prior approach here since it will serve as a baseline.
here semantic lexicons play the role of a prior on q
which we de   ne as follows:

           

n(cid:88)

(cid:88)

i=1

j:(i,j)   e

p(q)     exp

  ij(cid:107)qi     qj(cid:107)2

(2)
here,    is a hyperparameter that controls the
strength of the prior. as in the retro   tting objec-
tive, this prior on the word vector parameters forces
words connected in the lexicon to have close vec-
tor representations as did   (q) (with the role of   q
being played by cross id178 of the empirical dis-
tribution).

this prior can be incorporated during learn-
ing through maximum a posteriori (map) estima-
tion. since there is no closed form solution of
the estimate, we consider two iterative procedures.
in the    rst, we use the sum of gradients of the
log-likelihood (given by the extant vector learning
model) and the log-prior (from eq. 2), with respect
to q for learning. since computing the gradient of
eq. 2 has linear runtime in the vocabulary size n, we
use lazy updates (carpenter, 2008) for every k words
during training. we call this the lazy method of
map. the second technique applies stochastic gra-
dient ascent to the log-likelihood, and after every k
words applies the update in eq. 1. we call this the
periodic method. we later experimentally compare
these methods against retro   tting (  6.2).

3 word vector representations

we now describe the various publicly available pre-
trained english word vectors on which we will test
the applicability of the retro   tting model. these
vectors have been chosen to have a balanced mix
between large and small amounts of unlabeled text
as well as between neural and id106 of
training word vectors.

glove vectors. global vectors for word represen-
tations (pennington et al., 2014) are trained on ag-
gregated global word-word co-occurrence statistics
from a corpus, and the resulting representations
show interesting linear substructures of the word
vector space. these vectors were trained on 6 bil-
lion words from wikipedia and english gigaword

lexicon
ppdb
id138syn
id138all
framenet

words
102,902
148,730
148,730
10,822

edges
374,555
304,856
934,705
417,456

table 1: approximate size of the graphs obtained from
different lexicons.

and are of length 300.1

skip-gram vectors
(sg). the id97
tool (mikolov et al., 2013a) is fast and currently in
wide use. in this model, each word   s huffman code
is used as an input to a log-linear classi   er with
a continuous projection layer and words within a
given context window are predicted. the available
vectors are trained on 100 billion words of google
news dataset and are of length 300.2

global context vectors (gc). these vectors are
learned using a id56 that incor-
porates both local and global (document-level) con-
text features (huang et al., 2012). these vectors
were trained on the    rst 1 billion words of english
wikipedia and are of length 50.3

multilingual vectors (multi). faruqui and dyer
(2014) learned vectors by    rst performing svd on
text in different languages, then applying canonical
correlation analysis (cca) on pairs of vectors for
words that align in parallel corpora. the monolin-
gual vectors were trained on wmt-2011 news cor-
pus for english, french, german and spanish. we
use the enligsh word vectors projected in the com-
mon english   german space. the monolingual en-
glish wmt corpus had 360 million words and the
trained vectors are of length 512.4

4 semantic lexicons

we use three different semantic lexicons to evaluate
their utility in improving the word vectors. we in-
clude both manually and automatically created lexi-
cons. table 1 shows the size of the graphs obtained

1http://www-nlp.stanford.edu/projects/

glove/

2https://code.google.com/p/id97
3http://nlp.stanford.edu/  socherr/

acl2012_wordvectorstextfile.zip

4http://cs.cmu.edu/  mfaruqui/soft.html

from these lexicons.

ppdb. the paraphrase database (ganitkevitch et
al., 2013) is a semantic lexicon containing more than
220 million paraphrase pairs of english.5 of these, 8
million are lexical (single word to single word) para-
phrases. the key intuition behind the acquisition of
its lexical paraphrases is that two words in one lan-
guage that align, in parallel text, to the same word in
a different language, should be synonymous. for ex-
ample, if the words jailed and imprisoned are trans-
lated as the same word in another language, it may
be reasonable to assume they have the same mean-
ing. in our experiments, we instantiate an edge in
e for each lexical paraphrase in ppdb. the lexical
paraphrase dataset comes in different sizes ranging
from s to xxxl, in decreasing order of paraphras-
ing con   dence and increasing order of size. we
chose xl for our experiments. we want to give
higher edge weights (  i) connecting the retro   tted
word vectors (q) to the purely distributional word
vectors (  q) than to edges connecting the retro   tted
vectors to each other (  ij), so all   i are set to 1 and
  ij to be degree(i)   1 (with i being the node the up-
date is being applied to).6

(miller, 1995)

id138. id138
is a large
human-constructed semantic lexicon of english
words.
it groups english words into sets of syn-
onyms called synsets, provides short, general de   ni-
tions, and records the various semantic relations be-
tween synsets. this database is structured in a graph
particularly suitable for our task because it explicitly
relates concepts with semantically aligned relations
such as hypernyms and hyponyms. for example, the
word dog is a synonym of canine, a hypernym of
puppy and a hyponym of animal. we perform two
different experiments with id138: (1) connecting
a word only to synonyms, and (2) connecting a word
to synonyms, hypernyms and hyponyms. we refer
to these two graphs as wnsyn and wnall, respec-
tively. in both settings, all   i are set to 1 and   ij to
be degree(i)   1.

5http://www.cis.upenn.edu/  ccb/ppdb
6in principle, these hyperparameters can be tuned to opti-
mize performance on a particular task, which we leave for fu-
ture work.

framenet. framenet (baker et al., 1998; fill-
more et al., 2003) is a rich linguistic resource
containing information about lexical and predicate-
argument semantics in english. frames can be re-
alized on the surface by many different word types,
which suggests that the word types evoking the same
frame should be semantically related. for exam-
ple, the frame cause change of position on a scale
is associated with push, raise, and growth (among
many others). in our use of framenet, two words
that group together with any frame are given an edge
in e. we refer to this graph as fn. all   i are set to
1 and   ij to be degree(i)   1.

5 evaluation benchmarks

we evaluate the quality of our word vector represen-
tations on tasks that test how well they capture both
semantic and syntactic aspects of the representations
along with an extrinsic id31 task.

word similarity. we evaluate our word represen-
tations on a variety of different benchmarks that
have been widely used to measure word similarity.
the    rst one is the ws-353 dataset (finkelstein et
al., 2001) containing 353 pairs of english words that
have been assigned similarity ratings by humans.
the second benchmark is the rg-65 (rubenstein
and goodenough, 1965) dataset that contain 65 pairs
of nouns. since the commonly used word similar-
ity datasets contain a small number of word pairs
we also use the men dataset (bruni et al., 2012) of
3,000 word pairs sampled from words that occur at
least 700 times in a large web corpus. we calculate
cosine similarity between the vectors of two words
forming a test item, and report spearman   s rank cor-
relation coef   cient (myers and well, 1995) between
the rankings produced by our model against the hu-
man rankings.

syntactic relations (syn-rel). mikolov et al.
(2013b) present a syntactic relation dataset com-
posed of analogous word pairs.
it contains pairs
of tuples of word relations that follow a common
syntactic relation. for example, given walking and
walked, the words are differently in   ected forms of
the same verb. there are nine different kinds of rela-
tions and overall there are 10,675 syntactic pairs of
word tuples. the task is to    nd a word d that best

   ts the following relationship:    a is to b as c is to d,   
given a, b, and c. we use the vector offset method
(mikolov et al., 2013a; levy and goldberg, 2014),
computing q = qa     qb + qc and returning the vector
from q which has the highest cosine similarity to q.

synonym selection (toefl). the toefl syn-
onym selection task is to select the semantically
closest word to a target from a list of four candi-
dates (landauer and dumais, 1997). the dataset
contains 80 such questions. an example is    rug    
{sofa, ottoman, carpet, hallway}   , with carpet be-
ing the most synonym-like candidate to the target.

id31 (sa). socher et al. (2013)
created a treebank containing sentences annotated
with    ne-grained sentiment labels on phrases and
sentences from movie review excerpts. the coarse-
grained treebank of positive and negative classes
has been split into training, development, and test
datasets containing 6,920, 872, and 1,821 sentences,
respectively. we train an (cid:96)2-regularized logistic re-
gression classi   er on the average of the word vectors
of a given sentence to predict the coarse-grained sen-
timent tag at the sentence level, and report the test-
set accuracy of the classi   er.

6 experiments

we    rst show experiments measuring improvements
from the retro   tting method (  6.1), followed by
comparisons to using lexicons during map learn-
ing (  6.2) and other published methods (  6.3). we
then test how well retro   tting generalizes to other
languages (  6.4).

6.1 retro   tting
we use eq. 1 to retro   t word vectors (  3) using
graphs derived from semantic lexicons (  4).
results. table 2 shows the absolute changes in
performance on different tasks (as columns) with
different semantic lexicons (as rows). all of the lexi-
cons offer high improvements on the word similarity
tasks (the    rst three columns). on the toefl task,
we observe large improvements of the order of 10
absolute points in accuracy for all lexicons except
for framenet. framenet   s performance is weaker,
in some cases leading to worse performance (e.g.,

with glove and sg vectors). for the extrinsic senti-
ment analysis task, we observe improvements using
all the lexicons and gain 1.4% (absolute) in accuracy
for the multi vectors over the baseline. this increase
is statistically signi   cant (p < 0.01, mcnemar).

we observe improvements over glove and sg
vectors, which were trained on billions of tokens on
all tasks except for syn-rel. for stronger base-
lines (glove and multi) we observe smaller im-
provements as compared to lower baseline scores
(sg and gc). we believe that framenet does not
perform as well as the other lexicons because its
frames group words based on very abstract concepts;
often words with seemingly distantly related mean-
ings (e.g., push and growth) can evoke the same
frame.
interestingly, we almost never improve on
the syn-rel task, especially with higher baselines,
this can be attributed to the fact that syn-rel is in-
herently a syntactic task and during retro   tting we
are incorporating additional semantic information in
the vectors. in summary, we    nd that ppdb gives
the best improvement maximum number of times
aggreagted over different vetor types, closely fol-
lowed by wnall, and retro   tting gives gains across
tasks and vectors. an ensemble lexicon, in which
the graph is the union of the wnall and ppdb
lexicons, on average performed slightly worse than
ppdb; we omit those results here for brevity.

6.2 semantic lexicons during learning
to incorporate lexicon information during training,
and compare its performance against retro   tting,
we train log-bilinear (lbl) vectors (mnih and teh,
2012). these vectors are trained to optimize the
log-likelihood of a language model which predicts
a word token w   s vector given the set of words in its
context (h), also represented as vectors:

p(w | h; q)     exp

q(cid:62)
i qj + bj

(3)

(cid:33)

(cid:32)(cid:88)

i   h

we optimize the above likelihood combined with the
prior de   ned in eq. 2 using the lazy and periodic
techniques described in   2. since it is costly to com-
pute the partition function over the whole vocab-
ulary, we use noise constrastive estimation (nce)
to estimate the parameters of the model (mnih and
teh, 2012) using adagrad (duchi et al., 2010) with
a learning rate of 0.05.

lexicon
glove
+ppdb
+wnsyn
+wnall
+fn
sg
+ppdb
+wnsyn
+wnall
+fn
gc
+ppdb
+wnsyn
+wnall
+fn
multi
+ppdb
+wnsyn
+wnall
+fn

men-3k rg-65 ws-353
60.5
   1.2
0.5
0.7
   5.3
65.6
4.4
0.0
1.9
   4.9
62.3
2.0
0.6
2.3
0.0
68.1
6.0
2.2
4.3
0.0

73.7
1.4
0.0
2.2
   3.6
67.8
5.4
0.7
2.5
   3.2
31.3
7.0
3.6
6.7
1.8
75.8
3.8
1.2
2.9
1.8

76.7
2.9
2.7
7.5
   1.0
72.8
3.5
3.9
5.0
2.6
62.8
6.1
6.4
10.2
4.0
75.5
4.0
0.2
8.5
4.0

toefl syn-rel
67.0
   0.4
   12.4
   8.4
   7.0
73.9
   2.3
   13.6
   10.7
   7.3
10.9
5.3
   1.7
   0.6
   0.6
45.5
4.3
   12.3
   10.6
   0.6

89.7
5.1
5.1
2.6
2.6
85.3
10.7
9.3
9.3
1.3
60.8
13.1
7.3
4.4
4.4
84.0
12.0
6.6
6.6
4.4

sa
79.6
1.6
0.7
0.5
0.0
81.2
0.9
0.7
   0.3
0.5
67.8
1.1
0.0
0.2
0.2
81.0
0.6
1.4
1.4
0.2

table 2: absolute performance changes with retro   tting. spearman   s correlation (3 left columns) and accuracy (3
right columns) on different tasks. higher scores are always better. bold indicates greatest improvement for a vector
type.

method
lbl (baseline)

lbl + lazy

lbl + periodic

lbl + retro   tting

k =    ,    = 0
   = 1
   = 0.1
   = 0.01
k = 100m
k = 50m
k = 25m
   

k,    men-3k rg-65 ws-353
53.6
0.6
0.4
1.7
3.6
4.4
2.7
5.5

58.0
   0.4
0.7
0.7
3.8
3.4
0.5
5.7

42.7
4.2
8.1
9.5
18.4
19.5
18.1
15.6

toefl syn-rel
31.5
0.6
0.7
1.9
4.8
0.6
   3.7
14.7

66.7
   0.1
   1.4
2.6
12.0
18.6
21.3
18.6

sa
72.5
1.2
0.8
0.4
1.3
1.9
0.8
0.9

table 3: absolute performance changes for including ppdb information while training lbl vectors. spearman   s
correlation (3 left columns) and accuracy (3 right columns) on different tasks. bold indicates greatest improvement.

we train vectors of length 100 on the wmt-2011
news corpus, which contains 360 million words,
and use ppdb as the semantic lexicon as it per-
formed reasonably well in the retro   tting experi-
ments (  6.1). for the lazy method we update with
respect to the prior every k = 100,000 words7
and test for different values of prior strength       
{1, 0.1, 0.01}. for the periodic method, we up-
date the word vectors using eq. 1 every k    
{25, 50, 100} million words.

results. see table 3. for lazy,    = 0.01 performs
best, but the method is in most cases not highly sen-
sitive to      s value. for periodic, which overall leads
to greater improvements over the baseline than lazy,
k = 50m performs best, although all other values
of k also outperform the the baseline. retro   tting,
which can be applied to any word vectors, regardless
of how they are trained, is competitive and some-
times better.

7k = 10,000 or 50,000 yielded similar results.

corpus

wmt-11

wikipedia

vector training
cbow
yu and dredze (2014)
cbow + retro   tting
sg
xu et al. (2014)
sg + retro   tting

men-3k rg-65 ws-353
54.7
53.7
58.4
68.6
68.3
67.5

55.2
50.1
60.5
76.1
   
65.7

44.8
47.1
57.7
66.7
   
73.9

toefl syn-rel
40.8
29.9
52.5
40.3
44.4
49.9

73.3
61.3
81.3
72.0
   
86.0

sa
74.1
71.5
75.7
73.1
   
74.6

table 4: comparison of retro   tting for semantic enrichment against yu and dredze (2014), xu et al. (2014). spear-
man   s correlation (3 left columns) and accuracy (3 right columns) on different tasks.

6.3 comparisons to prior work
two previous models (yu and dredze, 2014; xu
et al., 2014) have shown that the quality of word
vectors obtained using id97 tool can be im-
proved by using semantic knowledge from lexicons.
both these models use constraints among words as
a id173 term on the training objective dur-
ing training, and their methods can only be applied
for improving the quality of sg and cbow vectors
produced by the id97 tool. we compared the
quality of our vectors against each of these.

yu and dredze (2014). we train word vectors us-
ing their joint model training code8 while using ex-
actly the same training settings as speci   ed in their
best model: cbow, vector length 100 and ppdb for
enrichment. the results are shown in the top half of
table 4 where our model consistently outperforms
the baseline and their model.

xu et al. (2014). this model extracts categori-
cal and relational knowledge among words from
freebase9 and uses it as a constraint while train-
ing. unfortunately, neither their id27s
nor model training code is publicly available, so
we train the sg model by using exactly the same
settings as described in their system (vector length
300) and on the same corpus: monolingual english
wikipedia text.10 we compare the performance of
our retro   tting vectors on the syn-rel and ws-
353 task against the best model11 reported in their
paper. as shown in the lower half of table 4, our
model outperforms their model by an absolute 5.5
points absolute on the syn-rel task, but a slightly

inferior score on the ws-353 task.

6.4 multilingual evaluation
we tested our method on three additional languages:
german, french, and spanish. we used the univer-
sal id138 (de melo and weikum, 2009), an au-
tomatically constructed multilingual lexical knowl-
edge base based on id138.12 it contains words
connected via different lexical relations to other
words both within and across languages. we con-
struct separate graphs for different languages (i.e.,
only linking words to other words in the same lan-
guage) and apply retro   tting to each. since not
many word similarity evaluation benchmarks are
available for languages other than english, we tested
our baseline and improved vectors on one bench-
mark per language.

we used rg-65 (gurevych, 2005), rg-65
(joubarne and inkpen, 2011) and mc-30 (hassan
and mihalcea, 2009) for german, french and span-
ish, respectively.13 we trained sg vectors for each
language of length 300 on a corpus of 1 billion to-
kens, each extracted from wikipedia, and evaluate
them on word similarity on the benchmarks before
and after retro   tting. table 5 shows that we obtain
high improvements which strongly indicates that our
method generalizes across these languages.

7 further analysis

retro   tting vs. vector length. with more di-
mensions, word vectors might be able to cap-
ture higher orders of semantic information and
retro   tting might be less helpful. we train sg vec-

8https://github.com/gorov/jointrcm
9https://www.freebase.com
10http://mattmahoney.net/dc/enwik9.zip
11their best model is named    rc-net    in their paper.

12http://www.mpi-inf.mpg.de/yago-naga/

uwn

13these benchmarks were created by translating the corre-

sponding english benchmarks word by word manually.

figure 3: two-dimensional pca projections of 100-dimensional sg vector pairs holding the    adjective to adverb   
relation, before (left) and after (right) retro   tting.

language task
german
french
spanish

rg-65
rg-65
mc-30

sg retro   tted sg
60.3
53.4
60.6
46.7
59.1
54.0

table 5: spearman   s correlation for word similarity eval-
uation using the using original and retro   tted sg vectors.

sg word vectors and plot them in r2. in figure 3 we
plot these projections before (left) and after (right)
retro   tting. it can be seen that in the    rst case the
direction of the analogy vectors is not consistent, but
after retro   tting all the analogy vectors are aligned
in the same direction.

8 related work

the use of lexical semantic information in training
word vectors has been limited. recently, word sim-
ilarity knowledge (yu and dredze, 2014; fried and
duh, 2014) and word relational knowledge (xu et
al., 2014; bian et al., 2014) have been used to im-
prove the id97 embeddings in a joint train-
ing model similar to our id173 approach.
in latent semantic analysis, the word cooccurrence
matrix can be constructed to incorporate relational
information like antonym speci   c polarity induc-
tion (yih et al., 2012) and multi-relational latent se-
mantic analysis (chang et al., 2013).

the approach we propose is conceptually similar
to previous work that uses graph structures to prop-
agate information among semantic concepts (zhu,
2005; culp and michailidis, 2008). graph-based
belief propagation has also been used to induce
pos tags (subramanya et al., 2010; das and petrov,
2011) and semantic frame associations (das and
smith, 2011). in those efforts, labels for unknown
words were inferred using a method similar to
ours. broadly, graph-based semi-supervised learn-
ing (zhu, 2005; talukdar and pereira, 2010) has
been applied to machine translation (alexandrescu

figure 2: spearman   s correlation on the men word sim-
ilarity task, before and after retro   tting.

tors on 1 billion english tokens for vector lengths
ranging from 50 to 1,000 and evaluate on the men
word similarity task. we retro   t these vectors to
ppdb (  4) and evaluate those on the same task. fig-
ure 2 shows consistent improvement in vector qual-
ity across different vector lengths.
visualization. we randomly select eight word
pairs that have the    adjective to adverb    relation
from the syn-rel task (  5). we then take a two-
dimensional pca projection of the 100-dimensional

02004006008001000vector length56586062646668707274spearman's correlationsg + retrofittingsgand kirchhoff, 2009), unsupervised semantic role
induction (lang and lapata, 2011), semantic docu-
ment modeling (schuhmacher and ponzetto, 2014),
language generation (krahmer et al., 2003) and sen-
timent analysis (goldberg and zhu, 2006).

9 conclusion

we have proposed a simple and effective method
named retro   tting to improve word vectors using
word relation knowledge found in semantic lex-
icons. retro   tting is used as a post-processing
step to improve vector quality and is more modu-
lar than other approaches that use semantic informa-
tion while training. it can be applied to vectors ob-
tained from any word vector training method. our
experiments explored the method   s performance
across tasks, semantic lexicons, and languages and
showed that
it outperforms existing alternatives.
the retro   tting tool is available at: https://
github.com/mfaruqui/retrofitting.

acknowledgements

this research was supported in part by the national
science foundation under grants iis-1143703, iis-
1147810, and iis-1251131; by iarpa via de-
partment of
interior national business center
(doi/nbc) contract number d12pc00337; and by
darpa under grant fa87501220342. part of the
computational work was carried out on resources
provided by the pittsburgh supercomputing center.
the u.s. government is authorized to reproduce
and distribute reprints for governmental purposes
notwithstanding any copyright annotation thereon.
disclaimer:
the views and conclusions contained
herein are those of the authors and should not be
interpreted as necessarily representing the of   cial
policies or endorsements, either expressed or im-
plied, of iarpa, doi/nbc, darpa, or the u.s.
government.

references

eneko agirre, enrique alfonseca, keith hall, jana
kravalova, marius pas  ca, and aitor soroa.
2009.
a study on similarity and relatedness using distribu-
tional and id138-based approaches. in proceedings
of naacl.

andrei alexandrescu and katrin kirchhoff.

2009.
graph-based learning for statistical machine transla-
tion. naacl    09.

collin f. baker, charles j. fillmore, and john b. lowe.

1998. the berkeley framenet project. acl    98.

yoshua bengio, olivier delalleau, and nicolas le roux.
in

2006. label propagation and quadratic criterion.
semi-supervised learning.

jiang bian, bin gao, and tie-yan liu.

2014.
knowledge-powered deep learning for word embed-
ding. in machine learning and knowledge discovery
in databases.

elia bruni, gemma boleda, marco baroni, and nam-
khanh tran. 2012. id65 in tech-
nicolor. in proceedings of acl.

bob carpenter. 2008. lazy sparse stochastic gradient de-
scent for regularized multinomial id28.
kai-wei chang, wen-tau yih, and christopher meek.
in

2013. multi-relational latent semantic analysis.
proceedings of emnlp.

ronan collobert and jason weston. 2008. a uni   ed ar-
chitecture for natural language processing: deep neu-
ral networks with multitask learning. in proceedings
of icml.

mark culp and george michailidis. 2008. graph-based
semisupervised learning. ieee transactions on pat-
tern analysis and machine intelligence.

dipanjan das and slav petrov. 2011. unsupervised part-
of-speech tagging with bilingual graph-based projec-
tions. in proc. of acl.

dipanjan das and noah a. smith.

semi-
supervised frame-id29 for unknown pred-
icates. in proc. of acl.

2011.

gerard de melo and gerhard weikum. 2009. towards
a universal id138 by learning from combined evi-
dence. in proceedings of cikm.

s. c. deerwester, s. t. dumais, t. k. landauer, g. w.
furnas, and r. a. harshman. 1990. indexing by latent
semantic analysis. journal of the american society for
information science.

john duchi, elad hazan, and yoram singer.

2010.
adaptive subgradient methods for online learning
and stochastic optimization.
technical report
ucb/eecs-2010-24, mar.

manaal faruqui and chris dyer. 2014. improving vector
space word representations using multilingual correla-
tion. in proceedings of eacl.

charles fillmore, christopher johnson, and miriam
international journal of lexicogra-

petruck. 2003.
phy.

lev finkelstein, evgeniy gabrilovich, yossi matias,
ehud rivlin, zach solan, gadi wolfman, and eytan
ruppin. 2001. placing search in context: the concept
revisited. in www, new york, ny, usa.

jerome l. myers and arnold d. well. 1995. research

design & statistical analysis. routledge.

jeffrey pennington, richard socher, and christopher d.
manning. 2014. glove: global vectors for word rep-
resentation. in proceedings of emnlp.

herbert rubenstein and john b. goodenough.

1965.
contextual correlates of synonymy. commun. acm,
8(10):627   633, october.

michael schuhmacher and simone paolo ponzetto.
2014. knowledge-based graph document modeling.
in proceedings of wsdm.

richard socher, alex perelygin, jean wu, jason chuang,
christopher d. manning, andrew y. ng, and christo-
pher potts. 2013. recursive deep models for semantic
in pro-
compositionality over a sentiment treebank.
ceedings of emnlp.

amarnag subramanya, slav petrov, and fernando
pereira. 2010. ef   cient graph-based semi-supervised
learning of structured tagging models. in proceedings
of emnlp.

partha pratim talukdar and fernando pereira.

2010.
experiments in graph-based semi-supervised learning
methods for class-instance acquisition. in proceedings
of acl.

joseph turian, lev ratinov, and yoshua bengio. 2010.
word representations: a simple and general method for
semi-supervised learning. in proc. of acl.

peter d. turney. 2006. similarity of semantic relations.

comput. linguist., 32(3):379   416, september.

chang xu, yalong bai, jiang bian, bin gao, gang wang,
xiaoguang liu, and tie-yan liu. 2014. rc-net: a
general framework for incorporating knowledge into
word representations. in proceedings of cikm.

wen-tau yih, geoffrey zweig, and john c. platt. 2012.
in pro-

polarity inducing latent semantic analysis.
ceedings of emnlp.

mo yu and mark dredze. 2014. improving lexical em-

beddings with semantic knowledge. in acl.

xiaojin zhu.

with graphs.
aai3179046.

semi-supervised learning
2005.
ph.d. thesis, pittsburgh, pa, usa.

daniel fried and kevin duh. 2014. incorporating both
distributional and relational semantics in word repre-
sentations. arxiv preprint arxiv:1412.4369.

juri ganitkevitch, benjamin van durme, and chris
ppdb: the paraphrase

callison-burch.
database. in proceedings of naacl.

2013.

andrew b. goldberg and xiaojin zhu.

2006. see-
ing stars when there aren   t many stars: graph-based
semi-supervised learning for sentiment categorization.
textgraphs-1.

jiang guo, wanxiang che, haifeng wang, and ting liu.
2014. revisiting embedding features for simple semi-
supervised learning. in proceedings of emnlp.

iryna gurevych. 2005. using the structure of a concep-
in

tual network in computing semantic relatedness.
proceedings of ijcnlp.

samer hassan and rada mihalcea. 2009. cross-lingual
semantic relatedness using encyclopedic knowledge.
in proc. of emnlp.

eric h huang, richard socher, christopher d manning,
and andrew y ng. 2012. improving word representa-
tions via global context and multiple word prototypes.
in proceedings of acl.

colette joubarne and diana inkpen. 2011. compari-
son of semantic similarity for different languages us-
ing the google id165 corpus and second- order co-
occurrence measures. in proceedings of caai.

ross kindermann and j. l. snell. 1980. markov random

fields and their applications. ams.

emiel krahmer, sebastian van erk, and andr  e verleg.
2003. graph-based generation of referring expres-
sions. comput. linguist.

thomas k landauer and susan t. dumais. 1997. a so-
lution to plato   s problem: the latent semantic analysis
theory of acquisition, induction, and representation of
knowledge. psychological review.

joel lang and mirella lapata. 2011. unsupervised se-
mantic role induction with graph partitioning. in pro-
ceedings of emnlp.

omer levy and yoav goldberg. 2014. linguistic regu-
larities in sparse and explicit word representations. in
proceedings of conll.

tomas mikolov, kai chen, greg corrado, and jeffrey
dean. 2013a. ef   cient estimation of word representa-
tions in vector space. arxiv preprint arxiv:1301.3781.
tomas mikolov, wen-tau yih, and geoffrey zweig.
2013b. linguistic regularities in continuous space
word representations. in proceedings of naacl.

george a miller. 1995. id138: a lexical database for

english. communications of the acm.

andriy mnih and yee whye teh. 2012. a fast and sim-
ple algorithm for training neural probabilistic language
models. in proceedings of icml.

