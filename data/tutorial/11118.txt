5
1
0
2

 
l
u
j
 

7

 
 
]
l
c
.
s
c
[
 
 

1
v
1
0
7
1
0

.

7
0
5
1
:
v
i
x
r
a

a survey and classi   cation of controlled
natural languages

tobias kuhn   
eth zurich and university of zurich

what is here called controlled natural language (cnl) has traditionally been given many
different names. especially during the last four decades, a wide variety of such languages
have been designed. they are applied to improve communication among humans, to improve
translation, or to provide natural and intuitive representations for formal notations. despite
the apparent differences, it seems sensible to put all these languages under the same umbrella.
to bring order to the variety of languages, a general classi   cation scheme is presented here.
a comprehensive survey of existing english-based cnls is given, listing and describing 100
languages from 1930 until today. classi   cation of these languages reveals that they form a
single scattered cloud    lling the conceptual space between natural languages such as english
on the one end and formal languages such as id118 on the other. the goal of this
article is to provide a common terminology and a common model for cnl, to contribute to the
understanding of their general nature, to provide a starting point for researchers interested in
the area, and to help developers to make design decisions.

1. introduction

controlled, processable, simpli   ed, technical, structured, and basic are just a few examples
of attributes given to constructed languages of the type to be discussed here. we will
call them controlled natural languages (cnl) or simply controlled languages. basic
english, caterpillar fundamental english, sbvr structured english, and attempto
controlled english are some examples; many more will be presented below. this article
investigates the nature of such languages, provides a general classi   cation scheme, and
explores existing approaches.

as the variety of attributes suggests, there is no general agreement on the charac-
teristic properties of cnl, making it a very fuzzy term. there are two main reasons
for this. first, cnl approaches emerged in different environments (industry, academia,
and government), in different disciplines (computer science, philosophy, linguistics,
and engineering), and over many decades (from the 1930s until today). people from
different backgrounds often used and continue to use different names for the same kind
of language. second, although controlled natural languages seem to share important
properties, they also exhibit a very wide variety: some are inherently ambiguous, others
are as precise as formal logic; virtually everything can be expressed in some, only
very little in others; some look perfectly natural, others look more like programming
languages; some are de   ned by just a handful of grammar rules, others are so complex

    chair of sociology, in particular of modeling and simulation, eth zurich, and institute of

computational linguistics, university of zurich. e-mail: kuhntobias@gmail.com.
personal website: http://www.tkuhn.ch.

submission received: 26 october 2012; revised version received: 7 march 2013; accepted for publication:
25 april 2013.

   2013 association for computational linguistics

computational linguistics

that no complete grammar exists. this variety makes it dif   cult to get a clear picture
of the fundamental properties. this article aims at resolving this problem by giving an
overview of existing cnls and by providing a general classi   cation scheme. generally,
this work has several, partly overlapping goals, ranging from purely theoretical to more
practical objectives (listed in this order):

   

   

   

   

to give us a better understanding of the nature of cnl

to establish a common terminology and a common model for cnl

to provide a starting point for researchers interested in cnl

to help cnl developers make design decisions

although a wide variety of cnls have been applied to a wide variety of prob-
lem domains, virtually all of them seem to be relevant to the    eld of computational
linguistics. among other techniques, they involve lexical analyses, grammar and style
checking, ambiguity detection, machine translation, and computational semantics.

unsurprisingly, most cnls are based on english. for the sake of simplicity, the
survey presented in this article is restricted to these languages and excludes existing
approaches based on other natural languages, such as german and chinese. the classi-
   cation scheme to be presented, however, is general and not restricted to english in any
way.

in what follows, the relevant background is discussed (section 2), a classi   cation
scheme is introduced (section 3), existing english-based cnls are classi   ed and de-
scribed based on a small sample (section 4), the results are analyzed (section 5), and
   nally the conclusions are discussed (section 6). the appendix shows the full list of
languages with short descriptions for each of them.

2. background

controlled natural language being such a fuzzy term, it is important to clarify its
meaning, to establish a common de   nition, and to understand the differences to related
terms. in addition, it is helpful to review previous attempts to classify and characterize
cnls.

2.1 de   nition

as mentioned above, there is no generally agreed-upon de   nition for controlled natural
language and for closely related terms including controlled language, constrained natu-
ral language, simpli   ed language, and controlled english. the following two quotations
illustrate this:

a controlled language (cl) is a restricted version of a natural language which has been
engineered to meet a special purpose, most often that of writing technical
documentation for non-native speakers of the document language. a typical cl uses a
well-de   ned subset of a language   s grammar and lexicon, but adds the terminology
needed in a technical domain. (kittredge 2003)

controlled natural language is a subset of natural language that can be accurately and
ef   ciently processed by a computer, but is expressive enough to allow natural usage by
non-specialists. (fuchs and schwitter 1995)

2

tobias kuhn

a survey and classi   cation of controlled natural languages

both descriptions exhibit a strong bias towards one particular type of cnl (these types
are discussed in more detail below): the    rst quotation focuses on technical languages
that are designed to improve comprehensibility, whereas the second one only covers
languages that can be interpreted by computers. they agree, however, on the fact that
a cnl is based on a certain natural language but is more restrictive. it is also generally
agreed that cnls are constructed languages, which means languages that did not
emerge naturally but have been engineered. the use of the term subset is misleading
though, since many cnls are not proper subsets of the underlying natural language.
many of these languages have small deviations from natural grammar or semantics.
others make use of unnatural elements such as colors and parentheses to increase
readability and precision. some even consider the programming language cobol
a controlled natural language (sowa 2000a). the subset relation in its mathematical
sense is clearly too strict to cover a large part of the languages commonly called cnl.
although they all clearly share important properties, the speci   c languages can be
quite different in their coverage and nature. it is not surprising that o   brian (2003),
who compared english-based cnls of different types, comes to the conclusion that
no common core language can be identi   ed. to meet these problems, the following
de   nition is proposed here:

de   nition 1 (long)
a language is called a controlled natural language if and only if it has all of the
following four properties:

1.

2.

3.

4.

it is based on exactly one natural language (its    base language   ).

the most important difference between it and its base language (but not
necessarily the only one) is that it is more restrictive concerning lexicon,
syntax, and/or semantics.

it preserves most of the natural properties of its base language, so that
speakers of the base language can intuitively and correctly understand
texts in the controlled natural language, at least to a substantial degree.

it is a constructed language, which means that it is explicitly and
consciously de   ned, and is not the product of an implicit and natural
process (even though it is based on a natural language that is the product
of an implicit and natural process).

properties 2 and 3 are deliberately vague, because it is not possible or desirable to draw
a strict line there. properties 1 and 3 refer to the n in cnl: naturalness; properties 2
and 4 refer to the c: control. we will later be able to be a little more precise concerning
property number 3. we leave it for now, and we can summarize this relatively verbose
de   nition in the form of the following short version:

de   nition 2 (short)
a controlled natural language is a constructed language that is based on a certain
natural language, being more restrictive concerning lexicon, syntax, and/or semantics
while preserving most of its natural properties.

as a further remark, we should note that the term language is used in a sense that
is restricted to sequential languages and excludes visual languages such as diagrams

3

computational linguistics

and the like. we can verify that the de   nitions above include virtually all languages
that have been called cnl, while it excludes natural languages (since they are not
constructed), languages such as esperanto (since they are not based on one particular
natural language), and common formal languages (since they lack intuitive understand-
ability).

2.2 related terms

before we move on to examine the types and properties of languages, we should discuss
a number of terms that are related to cnl and are easy to confuse: sublanguage,
fragments of language, style guide, phraseology, controlled vocabulary, and constructed
language.

sublanguages are languages that naturally arise when    a community of speakers
(i.e.    experts   ) shares some specialized knowledge about a restricted semantic domain
[and] the experts communicate about the restricted domain in a recurrent situation, or
set of highly similar situations    (kittredge 2003). as with controlled natural language, a
sublanguage is based on exactly one natural language and is more restricted. the crucial
difference between the two terms is that sublanguages emerge naturally, whereas cnls
are explicitly and consciously de   ned.

fragments of language is a term denoting    a collection of sentences forming a nat-
urally delineated subset of [a natural] language    (pratt-hartmann and third 2006). the
term is closely related to cnl and the difference seems to be mainly a methodological
one: fragments of language are identi   ed rather than de   ned, they are closely kept in the
context of the full natural language and related fragments, and their purpose is rather
to theoretically study them than to directly use them to solve a particular problem. a
cnl can be seen as a fragment of a language    developed for the purpose of supporting
some technical activity    (pratt-hartmann 2009).

style guides are documents containing instructions on how to write in a
certain natural
language. some style guides such as    how to write clearly   
(european commission 2011) provide    hints, not rules    and therefore do not describe a
new language, but only give advice on how to use the given natural language. however,
other style guides such as the plain language guidelines (plain 2011) are stricter and
do describe a language that is not identical to the respective full language. the question
of whether such a language can be considered a cnl depends on whether the style
guide de   nes a new language or whether it merely describes good practices that have
emerged naturally.

phraseology is a term that denotes a    set of expressions used by a particular
person or group    (houghton mif   in harcourt 2000). typically, this term is used when
the grammatical structure is simpler than in full natural language. in contrast to sub-
languages and fragments of languages, a phraseology is not a selection of sentences but
a selection of phrases. phraseologies can be natural or constructed, and in the latter case
they are usually considered cnls.

controlled vocabularies are standardized collections of names and expressions,
including    lists of controlled terms, synonym rings,
taxonomies, and thesauri   
(ansi/niso 2005). mostly, controlled vocabularies target a speci   c, narrow domain. in
contrast to cnl, they do not deal with grammatical issues, that is, how to combine the
terms to write complete sentences. many cnl approaches, especially domain-speci   c
ones, include controlled vocabularies.

constructed languages (or arti   cial languages or planned languages) are lan-
guages that did not emerge naturally but have been consciously de   ned. in this broad

4

tobias kuhn

a survey and classi   cation of controlled natural languages

sense, the term includes (but is not limited to) languages such as esperanto, program-
ming languages, and cnls.

2.3 types and properties

let us now turn to the nature of cnls. to bring order to their seemingly chaotic variety,
more than 40 properties of such languages and their environments have been identi   ed
(wyner et al. 2010). many of these properties, however, are fuzzy and do not allow for a
strict categorization. for the survey to be presented in section 4, we collect nine general
and clear-cut properties and give them letter codes. as it turns out, however, these
properties mainly describe the application environment of languages and not so much
the languages themselves. for that reason, a classi   cation scheme is introduced in the
next section to describe the fundamental nature of cnls and other languages.

in general, controlled natural languages can be roughly subdivided according to
the problem they are supposed to solve (schwitter 2002): to improve communication
among humans, especially speakers with different native languages (we will use the
letter code c for these languages); to improve manual, computer-aided, semi-automatic,
or automatic translation (t); and to provide a natural and intuitive representation for
formal notations (f). the last type includes approaches for automatic execution of texts,
which requires, at least conceptually, a mapping to an executable formalism. as we
will see, these three types emerged at different points in time: type c is the oldest,
type t emerged later, and type f is the most recent of the three. although this seems
to be a sensible and useful subdivision, a simpler version based on just two types
dominates the literature. huijsen (1998) introduced the distinction between    human-
oriented    and    computer-oriented    languages. the former roughly corresponds to type
c, the latter to the types t and f. however, huijsen observes that    it is often dif   cult to
qualify a controlled language as either human-oriented or machine-oriented, since often
simpli   cation works both ways.    because these types describe problems rather than
languages, reusing a language in a different problem domain can change its type even
if the language itself has not changed at all. other similar categorizations include the
distinction between    naturalistic    (type c and t) and    formalistic    (type f) languages
(pool 2006; clark et al. 2010) and the distinction between readability and translatability
(reuther 2003).

another apparent fact is that some languages originated from academia (letter
code a), some from industry (i), some from a government or a un agency (g), and
others from a combination of the three. in addition, the distinction between general
purpose languages and those for a particular restricted domain is often discussed
(pool 2006). this is related to the distinction of whether the lexicon is open or closed
(adriaens and schreors 1992). we will use the letter code d to denote languages target-
ing a speci   c and narrow domain. a further important difference is the one between
written and spoken languages. we will use w to denote languages that are intended
to be written, and s for those that are intended to be spoken. however, none of these
distinctions seems to describe a fundamental language property: languages that origi-
nated in one environment can later be used in another; the lexicon can later be declared
open or closed; written languages can be read aloud; and spoken languages can be
written down.
rules

or prescriptive
(nyberg, mitamura, and huijsen 2003), or a combination of the two. proscriptive
rules describe what is not allowed, whereas prescriptive rules describe what is allowed.
languages de   ned by proscriptive rules alone must have some starting point in the

a cnl can be proscriptive

that de   ne

the

5

computational linguistics

table 1
letter codes for properties of cnls

code

c
t
f
w
s
d
a
i
g

property
the goal is comprehensibility
the goal is translation
the goal is formal representation (including automatic execution)
the language is intended to be written
the language is intended to be spoken
the language is designed for a speci   c narrow domain
the language originated from academia
the language originated from industry
the language originated from a government

form of a given (natural) language. languages with only prescriptive rules, in contrast,
typically start from scratch. as we will see, there is a close connection of this distinction
to the concept of simplicity as introduced in the next section.

because of

their lack of generality, we do not

include here more speci   c
low-level properties such as the support
for subclauses and free compound-
ing (adriaens and schreors 1992), speci   c restrictions on grammatical tenses and
modal verbs (o   brien 2003), and support for interrogative and imperative sentences
(wyner et al. 2010).

table 1 summarizes the letter codes. any two of these properties can overlap, and
therefore any combination is possible in theory (with the exception that no language
should be neither w nor s).

finally, there is one additional aspect of constructed languages that deserves at-
tention: their life cycle. some languages are not much more than abstract ideas, others
have left this stage being applied to concrete problems, and yet others have progressed
to widespread application in productive environments. at different stages of maturity,
languages can be discontinued or abandoned, which signi   es the end of their life cycle.
obviously, these different stages    ow into each other and it is often dif   cult to name a
concrete year of birth or death (especially the latter, as most cnls die silently). where
possible, we will keep track of these life cycle properties.

3. pens classi   cation scheme

as we have seen, the cnl properties introduced above describe application do-
mains rather than the languages themselves. certainly, several fundamental language
properties have been identi   ed and discussed in the literature, such as expressive-
ness (mitamura and nyberg 1995; boyd, zowghi, and farroukh 2005; pool 2006), com-
plexity (mitamura and nyberg 1995), grammar modi   cations (pool 2006), understand-
ability, natural look-and-feel, ambiguity, predictability, and formality of de   nition
(wyner et al. 2010). however, these properties are all very fuzzy and do not allow for
strict categorization.

to construct a principled classi   cation scheme for such fundamental language
properties, it makes sense to condense them to a few dimensions that are to a large
degree (though not entirely) independent of each other. ambiguity, predictability, and
formality of de   nition can be subsumed by a dimension that we can call precision.

6

tobias kuhn

a survey and classi   cation of controlled natural languages

expressiveness can make up a second dimension. grammar modi   cations, understand-
ability, and natural look-and-feel can be combined to a dimension of naturalness. a
fourth dimension can be called complexity or     to have a dimension of the type    more
is better        simplicity. this is how we arrive at the four dimensions precision, expres-
siveness, naturalness, and simplicity that underlie the pens classi   cation scheme.1

it seems that all fundamental language properties mentioned in the existing liter-
ature fall into one of these general dimensions, or can be broken down into different
aspects that can be mapped to these dimensions. there are no strong dependencies
between any two dimensions (for any dimension pair, it is easy to imagine languages
that are at the top, bottom, and opposite ends in these two dimensions). furthermore,
there is no obvious dimension pair that could be merged in a meaningful way. together,
this seems to indicate that this set of dimensions is minimal yet complete.

the development of this scheme originated from the insight that cnls can be
conceptually located somewhere in the gray area between natural languages on the
one end and formal languages on the other. generally, cnls are more formal than
natural languages but more natural than formal ones. for instance, a natural language
such as english is very expressive, but complex and imprecise. a formal language
such as id118, in contrast, is very simple and precise, but at the same
time unnatural and inexpressive. cnls must be somewhere in the middle, but where
exactly?

it seems obvious that all four of the above-mentioned dimensions are continuous in
nature or at least very    ne-grained. in fact, one can argue that each of the dimensions
is actually multidimensional and that representing it in one dimension is a rough
simpli   cation. such simpli   cations are necessary, however, in order to get a precise
measure for such vague concepts such as expressiveness.

intuitively, pens uses a natural language such as english and a formal language
such as id118 as pegs to span a conceptual space in which different
kinds of controlled natural languages can be placed. in order to get a general but
strict classi   cation scheme, pens drastically simpli   es things by restricting each of
its four dimensions to    ve classes, to be numbered from 1 to 5. these    ve classes are
non-overlapping and consecutively cover the one-dimensional space between the two
extremes: english on the one end and id118 on the other. for precision and
simplicity, english is on the bottom end of the scale in class 1, which we write as p1 and
s1. id118 is on the opposite end of the scale in class 5, represented with
p5 and s5. for expressiveness and naturalness, the roles are switched: english is at the
top end (e5 and n5) and id118 at the bottom (e1 and n1). in this way, the
scheme de   nes a conceptual space for cnls that includes natural and formal languages
as special cases. combining the four dimensions gives 54 = 625 classes, represented
with shorthand such as p1e5n5s1 for english and p5e1n1s5 for id118. the
dif   cult and interesting part of this intellectual exercise is where and how to draw the
borders between the    ve classes of each dimension.

the decision to use    ve classes for each dimension, and not four or six, is somewhat
arbitrary. a larger number of classes allows for more detailed classi   cations, whereas
it also gets more dif   cult to come up with strict and objective criteria to de   ne these
classes. five seems to be a good middle ground.

1 these four dimension have    rst been sketched as    design principles    in the author   s doctoral thesis

(kuhn 2010), where    precision    was called    clearness.   

7

computational linguistics

3.1 precision

the precision dimension of the pens scheme captures the degree to which the meaning
of a text in a certain language can be directly retrieved from its textual form, that is,
the sequence of language symbols. natural language is very imprecise in this sense,
because a large amount of context information is needed to grasp the meaning of typical
sentences. formal logic languages, on the other hand, have maximal precision, because
their meaning is strictly de   ned solely on the basis of the possible sequences of their
language symbols. the symbol grounding problem, that is, the problem of mapping
symbols to their counterparts in the real world, is not considered here, because it affects
all languages, including both natural and formal ones. on this precision dimension,
languages are divided into the    ve classes p1, p2, p3, p4, and p5 as follows:

imprecise languages (p1). virtually every sentence of these languages is vague to a certain
degree. without taking context into account, most sentences of a certain complexity are
ambiguous. the automatic interpretation of such languages is    ai-complete,    which
means it is a problem for which no complete solutions are in sight. these languages
require a human reader to check whether a given statement is syntactically correct,
and include borderline statements on which readers disagree. the same applies to the
semantic properties of the language. all natural languages belong to this category.

less imprecise languages (p2). for these languages, the degree of ambiguity and vague-
ness is considerably lower than in natural languages, and their interpretation depends
much less on context. they restrict the use and/or the meaning of a wide range of
the respective ambiguous, vague, or context-dependent constructs. however, these con-
structs are still too dominant to make automatic interpretation reliable. such languages
are typically not related to a formal (i.e., mathematically precise) underpinning.

reliably interpretable languages (p3). the syntax of these languages is heavily restricted,
though not necessarily formally de   ned. the restrictions are strong enough to make
automatic interpretation reliable. there is a logical underpinning or at least a formal
conceptual scheme, in which the semantics of sentences can be represented. however,
the mapping of sentences to their formal representations is itself not de   ned in a fully
formal way, but requires external background knowledge, heuristics, or user feedback.

deterministically interpretable languages (p4). such languages are fully formal on the
syntactic level; that is, they are (or can be) de   ned by a formal grammar. each text
in such a language can be deterministically parsed to a formal logic representation, or
a small set of all possible representations (including all and only the possible ones).
based on the underlying formalism, these representations describe the meaning of
the sentences, but they may be underspeci   ed in the sense that they require certain
parameters, background axioms, external resources, or heuristics to enable sensible
deductions.

languages with    xed semantics (p5). these languages are fully formal and fully speci   ed
on both the syntactic and semantic levels. each text has exactly one meaning, which can
be automatically derived. the circumstances in which id136s hold or do not hold are
fully de   ned. what conclusions follow from a given text in the language (e.g., whether
it is consistent and which sentences of the language are a consequence of the text) can
be de   ned with mathematical rigor, without the help of heuristics or external resources.

8

tobias kuhn

a survey and classi   cation of controlled natural languages

3.2 expressiveness

the dimension of expressiveness describes the range of propositions that a certain
language is able to express. a language x is more expressive than a language y if
language x can describe everything that language y can, but not vice versa. the relation
of    being more expressive    does not constitute a total order: for two given languages
of nonequal expressiveness, it can be the case (and often is the case) that neither is more
expressive than the other. this entails that ranking a general set of languages in a linear
order according to their expressiveness cannot be done in a completely objective way.
a classi   cation scheme, such as the one presented here, must therefore rely on only
a subset of all possible expressiveness features. these expressiveness features should
be general and important ones, and at the same time allow for a balanced and clear
discrimination between the languages to be classi   ed. the pens classi   cation scheme
employs the following    ve expressiveness features:

(a)

(b)

(c)

(d)

(e)

universal quanti   cation over individuals (possibly limited)

relations of arity greater than 1 (e.g., binary relations)

general rule structures (if   then statements with multiple universal
quanti   cation that can target all argument positions of relations)

negation (strong negation or negation as failure)

general second-order universal quanti   cation over concepts and relations

for each of these features to be considered ful   lled, they should be an integral part
of the language and not just manifested by a few special cases. there are a number of
other important features that could be considered, for example support for existential
quanti   cation, equality, and types of supported speech acts (such as declarative, inter-
rogative, directive, and indirect speech acts). however, to achieve a simple classi   cation
into a sequence of    ve classes, the features listed above will turn out to be suf   cient
and lead to a classi   cation that seems consistent with the intuitive understanding of
expressiveness.

since this classi   cation system should not only include declarative formal lan-
guages but also informal as well as procedural ones, it makes sense to apply a weaker
notion of expressiveness than what is usually applied to logic languages. we can adopt
from the research on programming languages the convention that a certain language
construct adds expressiveness if its removal would require    a global reorganization of
the entire program    (felleisen 1991). if a certain language construct allows us to express
something locally which would otherwise require us to reorganize the entire text, then
we say that this language construct makes the language more expressive. this means,
for example, that a language with second-order features relying on henkin semantics
quali   es for the last criterion of the above list, even though henkin semantics can be
reduced to    rst-order. a given set of statements written in a language with henkin-
style second-order features cannot generally be reduced to    rst-order logic without
global reorganization, that is, changing statements that do not actually use second-order
features. with this quali   cation, we can de   ne the    ve classes as follows:

inexpressive languages (e1). these are languages lacking one or both of the features (a)
and (b): they have no universal quanti   cation or no relations of arity greater than 1.
id118 belongs to this category.

9

computational linguistics

languages with low expressiveness (e2). such languages have both of the features (a) and
(b), but are not e3-languages: they have universal quanti   cation over individuals and
relations of arity greater than 1. description logics belong to this category.

languages with medium expressiveness (e3). these languages have all of the features
(a), (b), (c), and (d), but are not e4-languages: they have general rule structures and
negation, in addition to the features of e2. id85 belongs to this category.

languages with high expressiveness (e4). such languages have all listed features (a), (b), (c),
(d), and (e), but are not e5-languages: they have second-order universal quanti   cation
over concepts and relations, in addition to the features of e3. second order predicate
calculus belongs to this category.

languages with maximal expressiveness (e5). these languages can express anything that
can be communicated between two human beings. such languages cover any statement
in any type of logic. obviously, this includes all features listed above. all natural
languages belong to this category.

3.3 naturalness

the dimension of naturalness describes how close the language is to a natural language
in terms of readability and understandability to speakers of the given natural language.
we de   ne the    ve classes as follows:

unnatural languages (n1). these are languages that do not look natural, making heavy
use of symbol characters, brackets, or unnatural keywords. it might be possible to use
natural words or phrases as names for certain entities, but this is neither required nor
further de   ned by the language.

languages with dominant unnatural elements (n2). natural language words or phrases
are an integral part of such languages, but are dominated by unnatural elements or
unnatural statement structure, or have unnatural semantics. the natural elements do
not connect in a natural way to each other, and speakers of the given natural language
typically fail to intuitively understand the respective statements.

languages with dominant natural elements (n3). in such languages, natural elements are
dominant over unnatural ones and the general structure corresponds to natural lan-
guage grammar. due to the remaining unnatural elements or unnatural combination
of elements, however, the sentences cannot be considered valid natural sentences.
speakers of the given natural language do not recognize the statements as well-formed
sentences of their language, but are nevertheless able to intuitively understand them to
a substantial degree.

languages with natural sentences (n4). these are languages with sentences that can be
considered valid natural sentences. speakers of the respective natural language recog-
nize the statements as sentences of their language and are able to correctly understand
their essence without instructions or training. minor or infrequent exceptions and
unnatural means for clari   cation (including text color, indentation, hyphenation, and
capitalization) are permitted as long as they do not disturb the natural look-and-feel

10

tobias kuhn

a survey and classi   cation of controlled natural languages

and the natural    ow of the sentence. parentheses and brackets in unnatural positions,
however, in most cases do disturb the natural text    ow considerably, and are therefore
typically not present in this category. while single sentences have a natural    ow, this
does not scale up to complete texts or documents. complete texts in such languages
seem very clumsy and repetitive, and lack a natural text    ow.

languages with natural texts (n5). with these languages, complete texts and documents
can be written in a natural style, with a natural text    ow, and with natural semantics.
in the case of spoken languages, complete dialogs can be produced with a natural    ow
and a natural combination of speech acts.

we can now be a little more precise concerning our de   nition of cnl. property number
3 of the long version of the de   nition shown in section 2.1 says that a cnl    preserves
most of the natural properties of its base language, so that speakers of the base language
can intuitively and correctly understand texts in the controlled natural language, at
least to a substantial degree.    we will interpret this in such a way that it only includes
languages of naturalness n3 and higher. thus, by this de   nition, there are no cnls with
n1 or n2.

3.4 simplicity

the fourth dimension is a measure of the simplicity or complexity of an exact and
comprehensive language description covering syntax and semantics, if such a com-
plete description is possible at all. this description should not presuppose intuitive
knowledge about any natural language. it is therefore not primarily a measure for the
effort needed by a human to learn the language, neither does it capture the theoretical
complexity of the language (as, for example, the id154 does). rather, it
is closely related to the effort needed to fully implement syntax and semantics of the
language in a mathematical model, such as a computer program.

the pens scheme applies a very pragmatic and simple indicator for simplicity: the
number of pages in natural language needed to the describe the language in an exact
and comprehensive way. for languages for which no such exact and comprehensive
descriptions exist or can be written (that do not presuppose linguistic knowledge on
the side of the reader, and given the current state of science), we can distinguish
languages with the complexity of natural language from languages with considerably
lower complexity.

these    exact and comprehensive descriptions    should de   ne all syntactic and
semantic properties of the language using accepted grammar notations to de   ne the
syntax and accepted mathematical or logical notations to de   ne the semantics. they are
assumed to use scienti   c writing style as found in scienti   c articles or technical reports,
and should allow a skilled grammar engineer to implement a correct and complete
parser within reasonable time. the page count should be based on a one-column format
with up to about 700 words per page. it is important to note that the criterion is not the
presence of such a description but whether it is possible or not to write one.

in order to treat languages with    xed vocabularies and those with extensible ones
in an equal way, the above mentioned language descriptions do not need to include the
vocabularies. concretely, the    ve classes are de   ned as follows:

very complex languages (s1). these languages have the complexity of natural languages.
they cannot be described in an exact and comprehensive manner.

11

computational linguistics

languages without exhaustive descriptions (s2). these are languages that are considerably
simpler than natural languages, in the sense that a signi   cant part of the complex
structures are eliminated or heavily restricted. still, they are too complex to be described
in an exact and comprehensive manner. usually, the de   nitions of such languages just
describe restrictions on top of a given natural language that is taken for granted.

languages with lengthy descriptions (s3). such languages can be de   ned in an exact and
comprehensive manner, but it requires more than ten pages to do so.

languages with short descriptions (s4). these are languages for which an exact and com-
prehensive description requires more than one page but not more than ten pages.

languages with very short descriptions (s5). such very simple languages can be described
in an exact and comprehensive manner on a single page.

s1 and s2 are considered complex because they rely on a given natural language.
coming back to a distinction brie   y introduced in the previous section, such languages
are typically de   ned by proscriptive rules, describing what is not allowed compared to
the full language. s3, s4, and s5, in contrast, typically use prescriptive rules that de   ne the
language from scratch. for that reason, they are simpler in our sense of the word than
languages of the    rst type, which    import    the complexity of full natural language.

before we move on to apply this scheme, it should be stressed that pens is designed to
measure the nature of a language, not its quality or usefulness. it should be used to describe
languages, not to rank them. as the    perfect    language does not exist, compromises
have to be made. depending on application area, environment, and goal, different
weights are assigned to the pens dimensions, and therefore different optimal levels
result. in theory, more is better for each of the pens dimensions, but this does not neces-
sarily hold in practice. a certain level in any of the dimensions is often good enough for
a given application domain, and going beyond that level brings no additional bene   t.
furthermore, as we restrict ourselves to just    ve classes per dimension, there can be
relatively large differences within one class. it is inevitable that two languages in the
same class can be farther apart in the respective dimension than two languages in
adjacent classes. even if a language has higher pens values in every dimension than
another language, this does not mean that the former is    better    in any meaningful
sense of the word. having a high pens score for expressiveness, for example, just
means that the general expressiveness level is high, and not that the language is able to
express each and every statement of all languages with a lower score. similarly, having
a high score for naturalness does not mean that all aspects of the language are more
natural as compared to all languages with a lower score.

4. languages

we can now turn to the actual survey. for practical reasons, we restrict ourselves here
to english-based languages, leaving out cnls that are based on other languages, such
as chinese, french, german, greek, spanish, and japanese (pool 2006). to give an
overview of the different existing english-based cnls, twelve important and in   uen-
tial languages are introduced below. the complete list can be found in the appendix;
surprisingly, we ended up with exactly 100 languages. in addition, a handful of other

12

tobias kuhn

a survey and classi   cation of controlled natural languages

languages for comparison are introduced below, such as natural english and proposi-
tional logic. each language is classi   ed according to the nine properties with letter codes
and the pens scheme. a best guess is made in the cases where not enough information
is available. the descriptions in the appendix are shorter in the case of similar languages
or scarce information. this data set is also available online as a csv table.2

there are many user interface approaches based on some sort of natural language
input, and it could be argued that they all     at least indirectly     de   ne and use
a controlled language, because none of them is able to correctly process full natural
language. such approaches, however, are included here only if the restrictions on the
language are considered an inherent property of the approach and not a shortcoming
of its implementation. in other words, the following listing excludes languages whose
restrictions are not design decisions of the general approach but practical concessions,
for example warren and pereira (1982). the same criterion is applied to verbalization
approaches, which inevitably de   ne a restricted version of the respective language that
could be considered a cnl, for example halpin (2004), jarrar, keet, and dongilli (2006),
and lukichev and wagner (2006). other languages follow an approach called concep-
tual authoring or wysiwym (hallett, scott, and power 2007) where texts are created
by short cycles of language generation and user-triggered modi   cation actions. we
include such languages here, because in this case the restrictions on the language are
an important aspect of the approach. finally, it should be mentioned that we leave out
   ctional languages, such as newspeak of george orwell   s nineteen eighty-four.

languages that do not have an of   cial name are introduced by a    generic name
in quotation marks.    unless stated otherwise, quotes and examples are taken from the
publications cited in the beginning of each paragraph.

4.1 english-based controlled languages

below, twelve selected cnls are introduced, roughly in chronological order of their
   rst appearance or the    rst appearance of similar predecessor languages. for this small
sample, languages are chosen that were in   uential, are well-documented, and/or are
suf   ciently different from the other languages of the sample.
   sowa   s syllogisms    (sowa 2000b) are simple logic languages based on the syllogisms
originally introduced by aristotle (ca. 350 bc). sowa was probably the    rst to bring
them into the context of cnl, claiming that they are the    rst reported instance of a
controlled natural language. because this survey is restricted to english, sowa   s version
of the syllogisms is listed here instead of aristotle   s original version in ancient greek.
the complete language can be described by just four simple sentence patterns:

every a is a b.

some a is a b. no a is a b.

some a is not a b.

a and b can be any english common nouns such as cat and animal. this language is very
similar to the language e0 presented and studied by pratt-hartmann (2004), who used
some additional patterns:

every a is not a b. no a is not a b.

p is a b.

p is not a b.

here, p can be any english proper name such as socrates. we will use the term    sowa   s
syllogisms    in a sense that includes such similar approaches. the semantics of syllo-
gisms is also very easy to de   ne. the    rst four patterns shown above can be mapped to
   rst-order logic like this (and similarly for the other patterns):

2 http://purl.org/tkuhn/cnlsurvey/data

13

computational linguistics

   x( a(x)     b(x) )

   x( a(x)     b(x) )      x( a(x)     b(x) )      x( a(x)     b(x) )

hereby, we have an exact and comprehensive description of the language, taking just
a couple of lines. despite the simple structure of the language, the sentences are per-
fectly natural. its expressiveness, however, is very restricted: only very simple sentence
structures are covered and only one-place relations are supported.     p5e1n4s5, f w a
basic english (ogden 1930) is a language presented in 1930 that should improve
communication among people around the globe. it is the    rst reported instance of a
controlled version of english, at least the    rst one that received broader recognition.
it in   uenced caterpillar fundamental english, which became itself a very in   uential
language. basic english was designed as a common basis for communication in politics,
economy, and science. it restricts the grammar and makes use of only 850 english root
words. the restrictions are arguably most drastic in the case of verbs. only 18 verbs
are supported: put, take, give, get, come, go, make, keep, let, do, be, seem, have, may,
will, say, see, and send. these verbs can be combined with prepositions to form more
speci   c relations such as put in to express insert. other verbs can be expressed with the
help of nouns, such as give a move instead of using move as a verb. the usage of the
given words and their variants is described by informal grammar rules, for example
   collective nouns may be formed from adjectives when used with the.    these are two
examples of sentences in basic english:

the camera man who made an attempt to take a moving picture of the society women,
before they got their hats off, did not get off the ship till he was questioned by the
police.
it was his view that in another hundred years britain will be a second-rate power.

many variations exist that use larger word sets. the simple english version of
wikipedia,3 for example, claims to use basic english, but in fact uses a much less
restricted language. basic english is still used today and promoted by a dedicated basic-
english institute.4 many texts have been written in this language, including textbooks,
novels, and large parts of the bible. the drastic simpli   cations on the lexical level
together with the grammatical restrictions constitute a signi   cant gain in precision
compared to full english. still, any type of topic can be expressed with a natural text
   ow. the informal restrictions on the grammar, however, are not strong enough to
signi   cantly reduce the complexity of the language (in the pens sense of complexity).
    p2e5n5s1, c w
e-prime or e    (bourland 1965) is a restricted version of english with the only restriction
being that the verb to be is forbidden to use. this includes all in   ectional forms such as
are, was and being, regardless of whether used as auxiliary or main verb. the language
was presented in 1965 but the idea goes back to the late 1940s. the motivation for the use
of e-prime is the belief that    dangers and inadequacies [...] can result from the careless,
unthinking, automatic use of the verb    to be   .    e-prime is claimed by its proponents to
enhance clarity. the statement    we do this because it is right    would not be allowed,
but one would have to rephrase it in a way that does not include to be, for example:

we do this thing because we sincerely desire to minimize the discrepancies between
our actions and our stated    ideals.   

in the area of natural language processing, however, the verb to be is not considered one
of the most dif   cult problems, which is good evidence that e-prime is not considerably

3 http://simple.wikipedia.org
4 http://www.basic-english.org

14

tobias kuhn

a survey and classi   cation of controlled natural languages

more precise than full english in the pens sense. also in terms of complexity it is not
considerably different from full english, because words such as become and exist are
allowed that can replace the forbidden to be in most cases. on the other hand, it seems
true that it is always possible to rephrase a text without the use of to be in a way that is
fully natural though possibly longer than the original.     p1e5n5s1, c w a

caterpillar fundamental english (cfe) (verbeke 1973) was an in   uential controlled
language developed at caterpillar. it was of   cially introduced in 1971, was based on
basic english (smart 2003), and has been reported to be the earliest industry-based
cnl (wojcik and hoard 1997). the need for a controlled language emerged because
of the increasing sophistication of caterpillar   s products and the need to communicate
with non-english speaking service personnel in different countries (verbeke 1973):    to
summarize the problem: there are more than 20,000 publications that must be under-
stood by thousands of people speaking more than 50 different languages.    the idea of
cfe was    to eliminate the need to translate service manuals    (kamprath et al. 1998).
a trained, non-english speaking mechanic familiar with caterpillar   s products should
be able to understand the language after completing a course on cfe consisting of
30 lessons. the vocabulary of the language is restricted to around 800 to 1,000 words
(crabbe 2009), with only one meaning de   ned for each of them (e.g., right only as
the opposite of left). still, many of the words    had broad semantic scope and it
was assumed that they would be disambiguated in context by the human reader   
(kamprath et al. 1998). the following ten rules summarize the grammatical restrictions
(crabbe 2009):

1. make positive statements.
2. avoid long and complicated sentences.
3. avoid too many subjects in one sentence.
4. avoid too many successive adjectives and

nouns.

5. use uniform sentence structures.

6. avoid complicated past and future tenses.
7. avoid conditional tenses.
8. avoid abbreviations, contractions, and

colloquialisms.

9. use punctuation correctly.
10. use consistent nomenclature.

these are two examples of cfe sentences:

the maximum endplay is .005 inch.
lift heavy objects with a lifting beam only.

cfe was discontinued by caterpillar in 1982, because (among other reasons)    the
basic guidelines of cfe were not enforceable in the english documents produced   
(kamprath et al. 1998). as a result, caterpillar technical english (see appendix) was
developed following a different approach: the restrictions on the language should be
enforceable, and should reduce translation costs instead of trying to eliminate the need
for translations altogether. the strong lexical restrictions together with some grammat-
ical constraints make cfe more precise than full english, but it is not considerably
different in terms of expressiveness, naturalness, and complexity.     p2e5n5s1, c w d i

faa air traf   c control phraseology (faa 2010) is a controlled language de   ned by
the federal aviation administration (faa) and used for the communication in air traf   c
coordination, going back to at least the early 1980s. there are other very similar lan-
guages for air traf   c control such as the icao and caa phraseologies. to a large extent,
these languages are indistinguishable from each other, and together they are sometimes
called airspeak (robertson 1987). the faa phraseology is de   ned by more than 300
   xed sentence patterns such as    (acid), in the event of missed approach
(issue traf   c). taxiing aircraft/vehicle left/right of runway.    this is
an example of a statement following that pattern:

15

computational linguistics

united 623, in the event of missed approach, taxiing aircraft right of runway.

in addition to these explicit patterns, there are many more implicit patterns de   ned
in prose form, for example    issue advisory information on [...] bird activity. include
position, species or size of birds, if known, course of    ight, and altitude.    the following
statement is an example that corresponds to this implicit pattern:

flock of geese, one o   clock, seven miles, northbound, last reported at four thousand.

vocabulary and semantics are restricted too, for example    use the word gain and/or loss
when describing to pilots the effects of wind shear on airspeed.    phraseology statements
can be mixed with statements in full english in cases where no pattern exists to express
the desired message. the language is heavily restricted and much less ambiguous than
full english. it is inexpressive in the sense that no universal quanti   cation is supported,
and is not suf   ciently restricted to make an exact and exhaustive description feasible.
    p2e1n3s2, c s d g

asd simpli   ed technical english (asd-ste) (asd 2013), often abbreviated to sim-
pli   ed technical english (ste) or just simpli   ed english, is a cnl for the aerospace
industry. originally inspired by a language called ilsam (adriaens and schreors 1992),
the language had its origins in 1979, but it was only in 1986 when it was of   cially pre-
sented for the    rst time, then under the name aecma simpli   ed english. it received
its current name in 2004 when aecma merged with two other associations to form
asd. the main purpose of the language is to make texts easier to understand, especially
for non-native speakers. while aecma simpli   ed english was designed to make
translation into other languages unnecessary, one of the original goals of asd-ste was
to improve translation. today, the language is maintained by the simpli   ed technical
english maintenance group. asd-ste is based on english with restrictions expressed
in about 60 general rules. these rules restrict the language on the lexical level (e.g.,    use
approved words from the dictionary only as the part of speech given   ), on the syntactic
level (e.g.,    do not make noun clusters of more than three nouns   ), as well as on the
semantic level (e.g.,    keep to the approved meaning of a word in the dictionary. do not
use the word with any other meaning.   ). there is a    xed vocabulary consisting of terms
common to the aerospace domain. additionally, user-de   ned    technical names    and
   technical verbs    can be introduced. this is an exemplary excerpt of a text in asd-ste:

these safety precautions are the minimum necessary for work in a fuel tank. but the
local regulations can make other safety precautions necessary.

even though its restrictions make asd-ste considerably more precise than full english,
it does not allow for reliable automatic interpretation. full expressiveness and full
naturalness of unconstrained english are retained, but also its complexity.     p2e5n5s1,
c t w d i

standard language (slang) (rychtyckyj 2002, 2005) is a language developed at ford
motor company starting from 1990. it is designed for process sheets containing build
instructions for component and vehicle assembly plants. it is still used at ford and
has been continually extended and updated to re   ect technical and business-related
advances. with slang, engineers can write instructions that are clear and concise
and at the same time machine-readable. based on these instructions, the system can,
among other things, automatically generate a list of required elements and calculate
labor times. in addition, the restricted nature of the language is exploited to translate
such instructions with the help of machine translation for their use in assembly plants
in different countries. all slang sentences are in imperative mood and follow a certain

16

tobias kuhn

a survey and classi   cation of controlled natural languages

general pattern starting with a main verb and followed by a noun phrase. there are ad-
ditional restrictions on vocabulary and semantics. these are two exemplary sentences:

obtain engine block heater assembly from stock
apply grease to rubber o-ring and core opening

a parser is used to check for compliance with the restrictions. english grammar is
followed with some minor deviations: for example, articles can be dropped and some
kinds of modi   ers can be used in unnatural ways.     p3e1n4s2, c f w d i
sbvr structured english (omg 2008) is a cnl for business rules    rst presented
around 2005. it is part of the semantics of business vocabulary and business rules
(sbvr) standard. it was probably in   uenced by a language called rulespeak that is
very similar and was    rst presented in 1994. the vocabulary is extensible and consists
of four types of sentence constituents: terms (i.e., concepts), names (i.e., individuals),
verbs (i.e., relations), and keywords (e.g.,    xed phrases, quanti   ers, and determiners).
each of these has its own color and style, as the following examples show:

a rental must be guaranteed by a credit card before a car is assigned to the rental.
rentals by booking mode contains the categories    advance rental    and    walk-in rental.   

the sbvr standard provides formal semantics based on second-order logic with
henkin semantics. the second of the above examples makes use of the second-order
features. some keywords have a precise meaning, such as or meaning inclusive logical
disjunction (unless followed by but not both). other keywords, however, are less pre-
cise, such as the determiner a being de   ned as    universal or existential quanti   cation,
depending on context based on english rules.    the language strictly de   nes the permis-
sible sentence constituents, but is much less strict in de   ning the order in which these
constituents can be put. the syntax structure can be ambiguous (e.g., when using and
and or in the same sentence), and so can be quanti   er scopes and anaphoric references.
there is no formal grammar of the language, and its de   nition depends to some degree
on the linguistic understanding of a human reader.     p3e4n4s2, c f w i
attempto controlled english (ace) (fuchs, kaljurand, and kuhn 2008) is a cnl with
an automatic and unambiguous translation into    rst-order logic. ace was    rst pre-
sented in 1996 as a language for software speci   cations. later, the focus shifted towards
id99 and the semantic web. the language has been extended over
the years in various ways. the most notable features of ace include complex noun
phrases, plurals, anaphoric references, subordinated clauses, modality, and questions.
these are two exemplary ace sentences:

a customer owns a card that is invalid or that is damaged.
every continent that is not antarctica contains at least 2 countries.

ace sentences are deterministically mapped to discourse representation structures, a
notational variant of    rst-order logic. these expressions, however, are underspeci   ed
in the sense that many deductions (e.g., when involving plurals or modal verbs) require
external background axioms that are not    xed by the ace de   nition (these axioms
are external in the sense that they are not necessarily expressible in ace). this makes
it possible to use ace in different areas such as ontology editors, rule systems, and
general reasoners with semantics that are not fully compatible. ace is, with a few minor
exceptions, fully natural on the sentence level, but longer texts do not have a natural text
   ow. recently, ace has also been used in the context of rule-based machine translation
(kaljurand and kuhn 2013), but translation was not a stated goal during the design of
the language.     p4e3n4s3, f w a

17

computational linguistics

   drafter language    (power and scott 1998) is a cnl used in a system called drafter-
ii. the language is used for instructions to word processors and diary managers. the
system employs a conceptual authoring approach: users cannot directly edit the cnl
text, but they can only trigger modi   cation actions starting from a small stub sentence.
in this way, incomplete statements are gradually completed by the user. the following
example is a sequence of two incomplete statements showing one such completion step:

schedule this event by applying this method.

schedule the appointment by applying this method.

the    rst sentence has two missing parts: this event and this method. at this point, the user
can choose, for example, the appointment to    ll in the    rst missing part, which leads to
the second statement, which is still incomplete but has only one missing part left. once
a statement is completed, drafter-ii internally maps it to prolog expressions, which
are then automatically executed. as structural ambiguity can be resolved based on the
given sequence of modi   cation actions, languages following the conceptual authoring
approach do typically not attempt to fully eliminate structural ambiguity. a given text
can have multiple parse trees, only one of which corresponds to the way it was created.
    p4e1n4s3, f w d a

e2v (pratt-hartmann 2003) is a controlled language that was introduced in 2001 and
corresponds to the language e3 studied in later work (pratt-hartmann 2004). the ulti-
mate goal is    to provide useable tools for natural language system speci   cation.    e2v
deterministically maps to the two-variable fragment of    rst-order logic. because of this,
satis   ability of e2v sentences and texts is decidable and computation is nexptime
complete. two examples of e2v sentences are shown here:

some artist does not despise every beekeeper.

every artist who employs a carpenter despises every beekeeper who admires him.

the language is de   ned by 15 simple grammar rules plus nine prede   ned lexical rules
for general words such as every and does not. a separate, user-de   ned lexicon contains
the domain-speci   c words such as artist and admires. altogether, e2v is a precise,
natural, simple, but relatively inexpressive controlled language.     p5e2n4s4, f w a

formalized-english (fe) (martin 2002) is a cnl for id99. it is
based on conceptual graphs and the knowledge interchange format (kif), and fo-
cuses on expressiveness. it covers a wide range of features including general universal
quanti   cation, negation, contexts (statements about statements), lambda abstractions,
possibility, collections, intervals, and higher-order statements (reducible to    rst-order
logic). two examples of statements in fe are shown here (the second one is higher-
order):

at least 93% of [bird with chrc a good health] can be agent of a    ight.

if    a binaryrelationtype *rt has for chrc the transitivity    then    if      x has for *rt   y that has
for *rt   z    then      x has for *rt   z       .

fe looks natural for simple statements, but becomes quite unnatural for more complex
ones. this is due to unnatural use of parentheses, quotation marks, variables, and
keywords such as chrc. the syntax of the language is de   ned by about 50 rules in a
parser generator language.     p5e4n3s3, f w a

18

tobias kuhn

a survey and classi   cation of controlled natural languages

4.2 languages for comparison

for the analysis to be described in the next section, we will use the following languages
for comparison, which are not cnls according to our de   nition:
english is our representative of a natural language.     p1e5n5s1, c w s
id118 is a very basic logic language.     p5e1n1s5, f w a
id85 can be considered an extension of id118. it is more ex-
pressive, but also more complex.     p5e3n1s4, f w a
cobol is one of the oldest programming languages, which some call a controlled
natural language (sowa 2000a). this is an exemplary cobol statement:

perform p with test before varying c from 1 by 2 until c greater
than 10.

although cobol uses natural phrases where other programming languages use sym-
bols or short keywords, the statement structure does not really follow natural grammar.
for that reason, we do not consider it a cnl.     p5e2n2s3, f w a i g
manchester owl syntax (horridge et al. 2006) is a user-friendly syntax for the ontol-
ogy language owl. this is an exemplary expression:

pizza and not (hastopping some fishtopping) and not (hastopping some
meattopping)

instead of logical symbols, natural words such as not and some are used. the general
structure, however, resembles formal and not natural languages, which is why we do
not consider it a cnl.     p5e2n2s4, f w a

naturally, there are many more languages that could be used for comparison, but the
list above seems to be a good sample.

5. analysis

the data presented in the previous section and in the appendix allow for different kinds
of aggregations and analyses. in particular, the classes and properties of the observed
languages and the timeline of their evolution are interesting.

5.1 pens classes

table 2 summarizes the pens classes and properties of the discussed cnls. some
interesting patterns can be found in these data. theoretically, there are 54 = 625 possible
pens classes, but not all of them are observed    in the wild.    some are even practically
impossible, as far as we can tell, such as the perfect class p5e5n5s5. the collected cnls
cover 25 distinct classes, which might seem a small number with respect to the entire
pens space, but they are, as we will see, widely scattered. even though some hotspots
of classes and properties can be identi   ed, the languages exhibit a broad variety.

visualization of the languages in the conceptual space can give us a better picture
of the data. since the pens scheme is four-dimensional, it is dif   cult to visualize all
dimensions in a single diagram. figure 1 shows a diagram for each of the six possible
dimension pairs: the dots represent cnls in comparison to natural languages such
as english (white dot) and common formal languages (black dots). note that the dots
represent pens classes and not individual languages.

19

computational linguistics

table 2
observed pens classes and properties of cnls (sorted by pens class)

properties

class
p1e5n5s1 c t w i
c w s g
c w a
c w g
p2e1n3s2 c s d g
p2e1n3s3 c w d i
p2e5n4s1 f w a
p2e5n5s1 c t w d a i alcogram, cogram

languages
ibm   s easyenglish
special english
e-prime
plain language
caa phraseology, faa phraseology, icao phraseology, policespeak, seaspeak
airbus warning language
aida

p3e1n4s2 c f w d i

f s d i

c t w d a clcm
c t w d i asd-ste, avaya ce, bull ge, cte, casl, ce at douglas, dce, general motors ge, pace, sun proof
c t w d
c t w i
c w d i
c w d g
c w i
c w
t w d i
t w a
t w i

wycliffe associates    easyenglish
ice, smart controlled english
aecma-se, cfe, case, ce at clark, ce at ibm, ce at rockwell, ee, help, ilsam, kisl, ncr fe
massachusetts legislative drafting language
boeing technical english, nse, smart plain english
basic english
mce, oc   controlled english
kce
clout
slang
voice actions
rnls
cleartalk
ita ce
cpl
rulespeak, sbvr-se
drafter language, mile query language
quelo controlled english
pills language
atomate language
gellish english
gino   s guided english
celt
prosper ce
ace
iconoclast language
clef query language
ginseng   s guided english
coral   s controlled english
pathont cnl
sowa   s syllogisms
tbnls
owlpath   s guided english, squall
cpe, clip, owl ace, sos
bioquery-cnl, permis cnl, ucscnl
clone, dl-english, e2v, lite natural language, ose
rabbit
clm, forthel, naproche cnl
clce, pnl
gherkin
recon
first order english, peng, peng-d, peng light
ilastic controlled english
fe

p3e2n4s3 f w d a
p3e3n3s3 f w a
f w i
p3e3n4s2 f w i
p3e4n4s2 c f w i
p4e1n4s3 f w d a
p4e1n4s4 f w a
p4e1n5s3 t f d a
p4e2n4s3 f w d a
f w a i
f w a
f w i

p4e3n4s3 f w d a

f w a

p4e3n5s3 f w d a
p5e1n4s3 f w d a

f w a

p5e1n4s4 f w d a

f w a
p5e1n4s5 f w a
p5e2n3s4 f w d a i

f w a
p5e2n4s3 f w a
p5e2n4s4 f w d a

f w a
f w g

p5e3n3s3 f w d a

f w a

p5e3n4s3 f w d a
f w a g
f w a
f w i
p5e4n3s3 f w a

it is evident that the cnls are widely scattered between the two extreme cases of
natural english (white dot) and id118 (black dot in the corner). seen from
any angle, the set of existing cnls exhibits wide variation. except for the subspace
with a naturalness level of less than 3, where there can be no cnls by our de   nition,

20

tobias kuhn

a survey and classi   cation of controlled natural languages

i

s
s
e
n
e
v
s
s
e
r
p
x
e

y
t
i
c

i
l

p
m
s

i

1

2

3

precision

4

5

5

4

3

2

1

5

4

3

2

1

l

s
s
e
n
a
r
u
a
n

t

y
t
i
c

i
l

p
m
s

i

1

2

3

precision

4

5

5

4

3

2

1

5

4

3

2

1

1

2

3

precision

4

5

5

4

3

2

1

5

4

3

2

1

y
t
i
c

i
l

p
m
s

i

l

s
s
e
n
a
r
u
a
n

t

1

2
4
naturalness

3

5

1

2
4
expressiveness

3

5

1

2
4
expressiveness

3

5

figure 1
visualization of the pens dimensions of existing cnls, as compared to natural languages
(white dot) and common formal languages (black dots). each dot represents a pens class
containing one or more languages.

they cover a large part of the conceptual space. this indicates that pens is a powerful
scheme for distinguishing different cnls.

the diagrams also show that the cnl classes form one single cloud, from any
perspective, and not two or more disconnected clouds. this means that it would be
dif   cult to come up with a clean categorization scheme that would subdivide the large
and diverse set of existing cnls. this seems to justify the decision of using the term
cnl in a broad sense and not replacing it by more speci   c terms.

for several dimension pairs, strong correlations are observed. precision and sim-
plicity are positively correlated: more precise languages tend to be simpler (spearman   s
rank correlation coef   cient    = 0.90, using individual languages as data points and
excluding the languages for comparison). expressiveness and simplicity exhibit a strong
negative correlation: more expressive languages tend to be more complex (   =    0.82).
in addition, naturalness/expressiveness are strongly positively (   = 0.77) and natural-
ness/simplicity strongly negatively correlated (   =    0.76). at a slightly lesser degree,
negative correlation values are obtained for the pairs precision/naturalness (   =    0.67)
and precision/expressiveness (   =    0.66). these observations seem to be in line with
what one would intuitively expect.

5.2 properties

let us turn to the properties. table 3 shows the number of cnls for each of the
properties we considered and their combinations. as some languages have been used

21

computational linguistics

table 3
properties of existing cnls with average pens values

property

formal representation

c comprehensibility
t translation
f
w written
spoken
s
d domain-speci   c
a academia
industry
i
g government

total

45
22
54
93
7
53
50
43
10

combined with property
c
t
- 17
-
1

f w s d a
3 40
1 21
17
- 52
3
-
40 21 52
6
1
1
33 17 19 46
4
5 45 49
33 18 10 42
8
5

4 33
6 33
0 17
5 18
1 19 45 10
1 46 49 42
6
-
1
6
- 20 29
4
0 20
-
1 29
6
6
0

-
4
1

i g
8
0
2
5
6
6
1
0
-

0

0

0

2

pens average
e n s

p
2.0 4.3 4.7 1.2
2.0 4.8 5.0 1.1
4.4 2.3 3.8 3.2
3.3 3.5 4.3 2.3
2.0 1.6 3.4 1.9
2.8 3.5 4.4 1.9
4.3 2.5 3.9 3.1
2.3 4.3 4.7 1.4
2.4 2.5 3.8 2.0

more extensively and over longer periods of time than others, these numbers do not
necessarily re   ect the actual importance or popularity of the different language types.
the table also shows the average pens values for each type. again, we should be care-
ful when interpreting these numbers, as all languages were equally weighted, which
does not take into consideration that some languages are much more mature and wide-
spread than others. nevertheless, these numbers reveal some interesting facts.

for a bit less than half of the languages, the goal is to increase comprehensibility.
formal representation is the goal of another, only slightly overlapping, half. about 22%
of all languages have translatability as their goal. there is a large overlap of the types c
and t, whereas these two barely overlap with f. existing cnl approaches can therefore
be roughly subdivided into two groups of similar size: one consisting of languages for
improved comprehensibility and translatability, and the other made up of languages
that have formal representation as their goal. mostly, languages of the types c and t
are domain-speci   c, originated from industry, and focus more on expressiveness and
naturalness than on precision or simplicity. languages of type f, in contrast, mostly
have an academic origin and tend to have a much stronger focus on precision and
simplicity at the cost of expressiveness and naturalness.

when it comes to the distinction between written and spoken languages, we see a
very one-sided picture: more than 90% of all languages are intended to be written; we
found only seven languages that are intended to be spoken (one of which is intended to
be spoken and written). the reason for this might be that controlling a spoken language
is much more dif   cult in practice. written texts can be revised and given to a language
checker before publication, whereas spoken language typically lacks this two-stage
process. it is an interesting fact that six out of the seven spoken languages originated
from a governmental environment. on average, written languages have higher pens
values in all four dimensions.

concerning domain-speci   city, the data are balanced. about half of the languages
are designed for a speci   c and narrow domain. the other half follow a more general-
purpose approach. comprehensibility is the prevalent goal for domain-speci   c lan-
guages, and they mostly originated from industry. no clear tendencies can be identi   ed
with respect to the pens dimensions.

concerning the last three properties, the data show similar language counts for
academic and industrial cnls: 50 and 43 languages, respectively. on the other hand,
only ten cnls were found that originated from a governmental environment. it has to

22

tobias kuhn

a survey and classi   cation of controlled natural languages

be noted, however, that information about cnls from industry is typically much scarcer
than about languages from academia or governments. it is therefore likely that most of
the languages that escaped this survey (because of missing or hard-to-   nd information)
are industrial ones. such a bias might also be present in the case of some of the other
properties discussed above. in any case, academia apparently focuses much more on
languages for formal representation than for comprehensibility or translation, whereas
industry seems to have an opposite focus.

5.3 design decisions

apart from being a description of the current state of the art, table 3 can be a valuable
tool for making design decisions when creating a new cnl. in such a situation, the
application environment of the language to be de   ned is typically    xed, but not yet
the inherent properties of the language itself. those inherent language properties are
supposed to be    xed only during the design process. at the early design stage, the table
above can be used to check the level of previous work on cnls for a given combination
of environment properties. it also delivers the pens classes of a typical cnl in this
environment, which can be used to guide the design process.

for example, if you intend to create a domain-speci   c, industrial cnl to enhance
comprehensibility, the table tells you that the combination of these properties is not un-
usual at all (at least pair-wise combinations). furthermore, the table indicates that such a
language typically has a pens class somewhere between p2e3n4s1 and p3e5n5s2. as a
second example, somebody might want to design a cnl for speech translation. a quick
look at the table reveals that no such cnl has been reported so far, which indicates
that a signi   cant amount of original work is needed for the design of such a language.
we also see that a typical spoken cnl is very different from a typical language for
translation in terms of expressiveness and naturalness. this suggests two important
design decisions: how expressive should the resulting language be, and how natural?
the table can reveal such questions about design decisions, but of course it can-
not answer them. nevertheless, such information about existing approaches in similar
problem domains and environments can be very valuable to focus the design effort to
the crucial aspects.

5.4 timeline

since cnls have been de   ned and used over many decades and have in   uenced each
other, it is interesting to draw the evolution of these languages on a timeline, as figure 2
does. each bar represents the    life    of a language, that is, the period when the language
was studied or used. for some languages, the year of    birth    or    death    is unknown,
which is indicated by dashed bars fading in and out. the vertical lines show in   uences
from other languages at the time of birth (solid for reported in   uences; dashed for
in   uences that are not reported but seem probable). the colors of the bars represent
the goals of the languages, as indicated in the legend.

the oldest cnl, basic english, is also the most in   uential one. it in   uenced cfe,
and indirectly ilsam, both very in   uential languages in their own right. altogether,
more than 20 languages were directly or indirectly inspired by basic english. among
the more recent languages, ace is the most in   uential in terms of offspring languages.
looking for an overall theme in the evolution of cnl, one can identify something
that could be called three    eras   : the general, technical, and logical eras. the general era
lasted until the late 1960s or early 1970s. only a few languages were de   ned and used

23

computational linguistics

seaspeak

icao phraseology
caa phraseology
faa air traf   c control phraseology

plain language

e-prime

policespeak

wycliffe associates    easyenglish

basic english

special english

kodak international service language (kisl)

clear and simple english (case)

caterpillar fundamental english (cfe)

caterpillar technical english (cte)

diebold controlled english (dce)

kant controlled english (kce)

controlled english at clark
controlled english at rockwell

hyster easy language program (help)

bull global english

nortel standard english (nse)

controlled english at douglas

smart plain english

aecma simpli   ed english (aecma-se)

boeing technical english

asd simpli   ed technical english (asd-ste)

smart controlled english

controlled english at ibm

ibm   s easyenglish

international language of service and maintenance (ilsam)

ericsson english (ee)

multinational customized english (mce)

perkins approved clear english (pace)

ncr fundamental english

cogram

alcogram

controlled automotive service language (casl)

general motors global english

oc   controlled english
sun proof
clout

avaya controlled english

controlled language for crisis management (clcm)
ihelp controlled english (ice)

airbus warning language

standard language (slang)

massachusetts legislative drafting language

rulespeak

sbvr structured english

cleartalk

prosper controlled english

aida

voice actions

common logic controlled english (clce)

cpl

ita controlled english

restricted english for constructing ontologies (recon)

restricted natural language statement (rnls)

mile query language

clef query language

drafter language
iconoclast language

pills language

quelo controlled english

gellish english

ginseng   s guided english

gino   s guided english

permis cnl
clone

atomate language

coral   s controlled english

bioquery-cnl

controlled english to logic translation (celt)

owl ace

peng-d

peng

sydney owl syntax (sos)

peng light

rabbit

pathont cnl
e2v

lite natural language

dl-english

squall
owl simpli   ed english (ose)

template based natural language speci   cation (tbnls)

computer processable english (cpe)
controlled language for id136 purposes (clip)

sowa   s syllogisms

first order english
pseudo natural language (pnl)

ucscnl

forthel

naproche

controlled language of mathematics (clm)

ilastic controlled english

owlpath   s guided english
gherkin

formalized-english
2000

2010

life spans:

attempto controlled english (ace)

period when language was studied or used

uncertain when language was    rst studied or used

uncertain whether or when language was discontinued

in   uences:

reported in   uence

probable in   uence

goals:

comprehensibility (c)

translation (t)

formal representation (f)

1930

1940

1950

1960

1970

1980

1990

figure 2
the timeline of the evolution of controlled english.

24

tobias kuhn

a survey and classi   cation of controlled natural languages

during this time, all of which were designed to improve human comprehension and to
serve as general languages with no speci   c application domain or narrow community
in mind. these languages survived in their small niche, when during the subsequent
technical era that began in the early 1970s, cnls were applied to technical documen-
tation for improved human comprehension as well as improved machine translation.
again, this branch of languages did not disappear at the end of the era and continues to
be used today, but a new type of cnl emerged. during the logical era that began in the
mid 1990s, many cnls were created with some sort of mapping to formal logic, which
enabled not only automatic processing but actual automatic interpretation. these three
eras partly correspond to the three goals introduced in section 2.3: the    rst cnls were
of type c, type t emerged in the technical era, and type f in the logical era.

5.5 evaluations

finally, we can turn to a crucial aspect that we have not yet discussed: do cnls actually
achieve the goals they were designed for? a number of studies have been reported that
evaluate the supposed advantages of these languages. the relevant research question
obviously depends on the goal the language is supposed to achieve. in their most
general forms, the research questions for the types c, t, and f can be stated as follows:

c

t

f

does a cnl make communication among humans more precise and more
effective?

does a cnl reduce overall translation costs at a given level of quality?

does a cnl make it easier for people to use and understand logic
formalisms?

each of these general research questions can be broken down, and most studies target
more speci   c questions.

for type c, two studies on aecma-se showed that the use of controlled english
signi   cantly improves text comprehension, with a particularly large effect for complex
texts and non-native speakers (chervak, drury, and ouellette 1996; shubert et al. 1995).
the results of other studies were similar but not signi   cant (stewart 1998). the lan-
guage clcm has been found to have a positive effect on reading comprehension
for most groups of readers under certain circumstances such as stress situations
(temnikova 2012).

concerning type t, it has been reported that the use of the controlled language
mce for machine-assisted translation leads to a       ve-to-one gain in translation time   
(ruf   no 1982). similar results have been presented for the language pace, with which
post-editing of machine-assisted translation is    three or four times faster    than with-
out (pym 1990). it has been shown that the adherence to typical cnl rules im-
proves post editing productivity and machine translation quality (aikawa et al. 2007;
o   brien and roturier 2007). for the language clcm, it has been reported that cnl
texts are easier to translate than uncontrolled ones (temnikova and orasan 2009;
temnikova 2012) and that the time needed for post-editing is reduced on average by
20% (temnikova 2010, 2012).

studies on type f can be subdivided into those that test the general usability of
cnl tools and those that speci   cally evaluate the comprehensibility of the actual lan-
guages. starting with the usability studies, it has been shown for the language clone
that its interface is more usable than a common ontology editor (funk et al. 2007).

25

computational linguistics

similarly, coral   s controlled english has been shown to be easier to use than a com-
parable common query interface (kuhn and h     er 2012). positive usability results for
cnl tools have also been reported for gino (bernstein and kaufmann 2006), clef
(hallett, scott, and power 2007), cpl (clark et al. 2007), permis (inglesant et al. 2008),
rabbit (dimitrova et al. 2008), and ace (kuhn 2009). turning to the comprehensibil-
ity studies, it has been shown for the clef query language that common users are
able to correctly interpret given statements (hallett, scott, and power 2007). ace has
been shown to be easier and faster to understand than a common ontology nota-
tion (kuhn 2013), whereas experiments on the rabbit language gave mixed results
(hart, johnson, and dolbear 2008).

reported

in addition to these high-level

speci   c
tests have
been
(bernstein et al. 2006;
kaljurand 2007), performance, convergence (adriaens and macken 1995), parseability
(wojcik, harrison, and bremer 1993), computational complexity (pratt-hartmann 2003;
thorne and calvanese 2010), text complexity, and text length (temnikova 2012).

evaluations, more
coverage

evaluations

such

on

as

in general, there seems to be good evidence for each of the language types that the
use of cnl can be advantageous. this does not mean, of course, that cnl approaches
always perform better. this depends heavily on the precise problem domain, the back-
ground of the users, and     perhaps most importantly     the quality of the design of the
language and its supporting tools.

6. conclusions

to conclude, we can come back to the aims set out in the introduction of this article.
the    rst goal was to get a better theoretical understanding of the nature of controlled
languages. first of all, this article shows that despite the wide variety of existing cnls,
they can be covered by a single de   nition. the criteria of the proposed de   nition include
virtually all languages that have been called cnls in the literature. we could show
that these languages form a widely scattered but connected cloud in the conceptual
space between natural languages on the one end and formal languages on the other.
the informal statement that cnls are more formal than natural languages but more
natural than formal ones is substantiated and veri   ed.

the next goal was to establish a common terminology and a common model. we
emphasized the difference between characteristics of the environments of languages on
the one hand and the properties of the languages themselves on the other. both aspects
are important, but the second is more dif   cult to capture in a quantitative way. nine
general properties have been collected to describe the application environments of
cnls. as a novel addition to this model, we proposed the four-dimensional pens
scheme to describe inherent language properties. this scheme allows for classi   cation
of cnls on a discrete scale on the dimensions of precision, expressiveness, naturalness,
and simplicity. together, this allows us to formally model the important properties of
languages and their environments in a simple way, and to put order and structure to a
previously fuzzy and disconnected    eld.

the third goal was to provide a starting point for researchers interested in cnl.
the most important conclusion in this respect is the fact that many more cnls exist
than have been found in any previous survey. previously, the most comprehensive
overview counted 41 cnls (pool 2006) based on various natural languages, whereas
this survey covers 100 languages for english alone. the diversity of languages and
the different environments in which they were studied and used apparently had the
consequence that many cnl researchers and developers were not aware of a large

26

tobias kuhn

a survey and classi   cation of controlled natural languages

number of relevant languages. as a starting point for researchers, this work presents
a diverse sample of twelve important and in   uential languages, along with a long list
of all cnls collected. the introduced model of languages and environments can also
facilitate the identi   cation of a particular research focus and the collection of relevant
prior work.

the fourth goal was to help cnl developers make design decisions. to that aim,
the data of this survey can be used to direct developers to existing cnl approaches
in a given environment and problem domain. the data can reveal whether a certain
kind of cnl usage is common, rare, or inexistent until now, which can be used as an
indication of the amount of original work required. furthermore, the typical language
properties of cnls in terms of precision, expressiveness, naturalness, and simplicity
can be retrieved for a given usage scenario. this information might be very useful to
identify important design decisions and to    nd existing approaches to build upon.

i would like to conclude with the observation that the study of controlled languages
is a very dynamic and highly interdisciplinary    eld, for the most part occupying small
niches in the academic, industrial, and governmental worlds. however, adding all these
niches together gives us a large body of past and ongoing work. assuming that people
will have to interact even more closely with computers and across language borders in
the future, i am convinced that we will see even much more work in this area.

appendix a: full list of english-based controlled natural languages

below is the full list of 100 english-based cnls in alphabetical order. see section 4 for
the details of this collection.

aecma simpli   ed english (aecma-se) (aecma 1986) was the predecessor of asd
simpli   ed technical english. see section 4.1.     p2e5n5s1, c w d i

aida (kuhn et al. 2013) is a cnl to allow for informal and underspeci   ed representa-
tions of scienti   c assertions in an approach for semantic publishing called    nanopubli-
cations.    single english sentences are used as a scaffold for underspeci   ed representa-
tions and for the inclusion of informal statements in formal rdf-based structures. these
sentences are atomic, independent, declarative, and absolute (hence the name aida).
this is an example:

the degree of hepatic reticuloendothelial function impairment does not differ between
cirrhotic patients with and without previous history of sbp.

    p2e5n4s1, f w a

   airbus warning language    (spaggiari, beaujard, and cannesson 2003) is a language
for short industrial warnings, focusing on abbreviations and restricting the word order.
this is an exemplary statement:

eng1 rev not locked

    p2e1n3s3, c w d i

alcogram (adriaens and schreors 1992) is a cnl developed at alcatel. it originated
from cogram as an    algorithmic variant,    focusing on the use within a computer-
aided language learning tool. in contrast to cogram, which consists of three compo-
nents that declaratively de   ne the language, alcogram is de   ned based on a four-
staged algorithm. each of these four stages checks certain aspects: preparatory textual
control (e.g.,    de   ne technical terms and acronyms in advance   ), syntactic control (e.g.,
   write one instruction per sentence for single actions   ), lexical control (e.g.,    avoid

27

computational linguistics

gender-speci   c language   ), and micro control (e.g.,    use words for a number when it is
the    rst word in the sentence   ). these are two examples of alcogram sentences:

set the switch to the middle. press the button on your right.
when the test circuit is called, a test tone with the proper transmit level is returned.

    p2e5n5s1, c t w d a i
asd simpli   ed technical english (asd-ste). see section 4.1.     p2e5n5s1, c t w d i
   atomate language    (van kleek et al. 2010) is part of the atomate interface, which lets
users de   ne simple automatic tasks and reminders taking context and current activity
into account. the language was inspired by clone, ace, and the gino and ginseng
systems. this is an example of such a task de   nition:

alert me when my location is home on/after tuesdays at 5pm with the message: trash
day!

a special editor supports users in writing such sentences, using a mixture of predictive
editing and conceptual authoring. the sentences are mapped to rdf and automatically
triggered when the preconditions are met.     p4e2n4s3, f w d a
attempto controlled english (ace). see section 4.1.     p4e3n4s3, f w a
avaya controlled english (avaya 2004) is a language for technical publications in the
telecommunication and computing industry. its use should reduce translation costs and
should make texts easier to understand for human readers. it puts restrictions on the
lexicon (e.g.,    do not use abort   ), grammar (e.g.,    use active voice   ), semantics (e.g.,
   use may only to grant permission   ), and style (e.g.,    put command names in bold
monospaced type   ). an open list of about 250 words de   nes preferred terminology for
the given computer and telephony domain, and clari   es usage and meaning of these
words. these are two examples of sentences:

this procedure describes how to connect a dual acd link to the server.
if the primary server fails, you can use the secondary server.

    p2e5n5s1, c t w d i
basic english. see section 4.1.     p2e5n5s1, c w
bioquery-cnl (erdem and yeniterzi 2009) is a language for biomedical queries. it
serves as an interface language for a query engine based on answer set programming.
bioquery-cnl was initially designed as a subset of ace with some small modi   cations
handled in a preprocessing step. the ace parser was used for processing the language.
in later versions, however, the language diverged from ace and evolved into an
independent language with its own parser. this is an exemplary query:

what are the genes that are targeted by all the drugs that belong to the category
hmg-coa reductase?
    p5e2n4s4, f w d a
boeing technical english (wojcik, holmback, and hoard 1998) was an extension of
aecma simpli   ed english to improve readability and consistency of documents, with
the speci   c goal to broaden the scope beyond the aviation domain. the language seems
to have been discontinued and apparently never came to be deployed at boeing.    
p2e5n5s1, c w i
bull global english (smart communications inc. 1994) or bull controlled english
is a language developed at groupe bull, a french computer company. it was proba-
bly in   uenced by smart plain english. bull global english can be summarized by

28

tobias kuhn

a survey and classi   cation of controlled natural languages

the following ten rules (karkaletsis and spyropoulos 1997), which have a considerable
overlap with the rules of caterpillar fundamental english:

1. make positive statements.
2. keep sentence length 21 words.
3. avoid false nomenclature.
4. one thought per sentence.
5. use simple sentence structures.

6. use active voice and parallel construction.
7. avoid conditional tenses.
8. avoid abbreviations and colloquialisms.
9. use correct punctuation.
10. use standardised nomenclature.

    p2e5n5s1, c t w d i

caa phraseology (caa 2011) is a language for air traf   c control introduced by the
civil aviation authority (caa) in the 1980s or possibly earlier. it is very similar to the
phraseologies by faa and icao.     p2e1n3s2, c s d g

caterpillar fundamental english (cfe). see section 4.1.     p2e5n5s1, c w d i

(cte)

english

technical

(hayes, maxwell, and schmandt 1996;
caterpillar
kamprath et al. 1998) is the second cnl developed at caterpillar. its development
started in 1991, that is, almost a decade after the discontinuation of cfe. apart from
improving consistency and reducing ambiguity of technical documentation, the goal of
cte was to improve translation quality and reduce translation costs with the help of
machine translation. this is an example of a cte text:

this category indicates that an alternator is malfunctioning. if the indicator comes on,
drive the machine to a convenient stopping place. investigate the cause and determine
the solution.

in contrast to cfe, texts in cte are supposed to be translated before given to personnel
in non-english speaking countries. as a further difference, cte was designed to be
an    enforceable controlled english    that comes with an authoring tool that enforces
the compliance with the restrictions. the cte lexicon consists of about 70,000 terms
with a    narrow semantic scope    (compared to cfe   s less than 1,000 terms with a
broader semantic scope). the syntax is restricted too, including restrictions on the use of
conjunctions, pronouns, and subordinate clauses. cte comes with a language checker
that allows for interactive disambiguation on the lexical level, enriches the technical
texts with sgml annotations, and uses the syntax analyzer of the kant system (see
kant controlled english below).     p2e5n5s1, c t w d i

clear and simple english (case) (pym 1990) was a controlled english introduced
in the 1980s at the j.i. case company, a manufacturer of construction and agricultural
equipment. it descended from cfe.     p2e5n5s1, c w d i

cleartalk (skuce 2003) is a cnl for the semantic web    rst presented in the 1990s. its
creator claims that documents in cleartalk can be    almost automatically    translated
into a formal logic notation and into other natural languages. it    offers a    exible degree
of formality    that lets an author choose to    leave or remove ambiguity.    it has been
used to encode more than 25,000 facts in different technical domains. cleartalk is
heavily restricted on the syntactic level (e.g., basic sentences have the general form
subject predicate complement modi   er-phrases) as well as on the semantic one (e.g., the
determiner a at subject position represents universal quanti   cation). these restrictions
are expressed in a large number of rules. two examples of sentences are shown here:

any adverb that modi   es a verb must be adjacent to (that verb or another adverb).
mary hopes that [- bill loves her -].

29

computational linguistics

cleartalk can itself be described in cleartalk; the    rst example is from this self-
description. different forms of parentheses are used to disambiguate different kinds
of scopes.     p3e3n3s3, f w a

   clef query language    (hallett, scott, and power 2007) is a language used within
a system called clef (clinical e-science framework), which should help clinicians,
medical researchers, and hospital administrators to query electronic health records. the
language was in   uenced by the drafter language. basic queries are composed of three
elements: the set of relevant patients, the received treatments, and the outcomes. this is
an example:

for all patients with cancer of the pancreas, what is the percentage alive at    ve years for
those who had a course of gemcitabine?

complex queries can have multiple elements of the same type. the system employs a
conceptual authoring approach for writing queries, which are then translated in several
steps to sql and given to a database engine.     p5e1n4s3, f w d a

cogram (adriaens and schreors 1992) was a controlled language developed in the
late 1980s for the telecommunication domain (at alcatel). it was developed as a response
to the    nding that the existing controlled languages aecma simpli   ed english, eric-
sson english, and ibm   s controlled english were    incomplete and defective in many
ways.    cogram consists of a vocabulary of approximately 5,000 words plus another
1,000 technical terms, and a grammar with about 150 rules. these rules fall into three
categories:    do not use x,       use only x,    and    avoid (try not to use) x.    grammar
rules of the last type can be seen as style-guides that do not restrict the coverage of
the language. the language de   nition is divided into three components: lexical (e.g.,
   use short in   nitives of regular action verbs   ), syntactic (e.g.,    do not use a participle
to introduce an adverbial clause   ), and stylistic (e.g.,    expound major topics, restrict
minor topics   ). the de   nition of cogram was found to be    not the most motivating
of texts for technical writers to use in the writing process,    which led to the development
of alcogram.     p2e5n5s1, c t w d a i

common logic controlled english (clce) (sowa 2004) is a language that can be
translated into    rst-order logic with equality in the form of the conceptual graph
interchange format (cgif). it is de   ned by a grammar in backus-naur form    that
allows every ambiguity to be resolved when a sentence is parsed.    some of the most
important syntax restrictions are: no plural nouns, only present tense, and variables
instead of pronouns. for an unambiguous mapping to logic, a number of interpretation
rules are applied and parentheses are used to determine the structure of deeply nested
sentences. sentences in this language should be similar to those found in software
documentation and textbooks of mathematics, for example:

if some person x is the mother of a person y, then the person y is a child of the person x.
declare give as verb (agent gives recipient theme) (agent gives theme to recipient)
(theme is given recipient by agent) (theme is given to recipient by agent) (recipient is
given theme by agent).

imperative sentences, as the second example, are used to import or declare words.
names, nouns, verbs, adjectives, adverbs, and prepositions can be declared in this way.
    p5e3n3s3, f w a

computer processable english (cpe) (pulman 1996; sukkarieh and pulman 1999) is a
controlled language that can be    completely syntactically and semantically analysed.   
an early version of the language used kif (knowledge interchange format) as its

30

tobias kuhn

a survey and classi   cation of controlled natural languages

logic formalism, whereas mclogic was used later on. the language comes with a
bidirectional grammar implemented as a prolog uni   cation grammar. two examples
are shown here:

every animal x eats some animal that is smaller than x.
every registered user who has borrowed less than ten copies can borrow every
available copy.

the mapping to logic seems to be deterministic, even though the available literature is
not explicit about this.     p5e2n4s3, f w a
computer processable language (cpl) (clark et al. 2005) is a controlled variant of
english developed at boeing. it is very different from earlier cnl approaches where
boeing was involved in, such as asd-ste and boeing technical english. cpl is much
more restricted than these earlier approaches and sacri   ces to some degree expressive-
ness and naturalness for the sake of automated reasoning support. basic cpl sentences
are restricted to the pattern subject + verb + complements + adjuncts. there are further
restrictions on the syntax, for example that de   nite references have to be used instead
of pronouns. statements involving universal quanti   cation are constructed from seven
templates such as    if sentence1 then typically sentence2,    where sentence1 and sentence2
are basic cpl sentences of the structure introduced above and where typically is a
reliability degree: one of (almost) always, usually, sometimes, and never. these are two
examples of cpl sentences:

if a person is carrying an entity that is inside a room then (almost) always the person
is in the room.
after a person closes a barrier, (almost) always the barrier is shut.

a parser translates cpl sentences into a frame-based language with well-de   ned
semantics. in contrast to most other logic-based cnl approaches with custom-built
parsers, the parsing process of cpl involves different external tools and resources. an
existing parser for unrestricted english is used to generate an intermediary logical form.
then, id138 and other resources are used to make a    best guess.    the resulting
logical representation is then paraphrased and shown to the user for veri   cation or
correction.     p3e3n4s2, f w i

(casl)

(means and godden 1996;
controlled automotive service language
means, chapman, and liu 2000) is a controlled language for writing service manuals
and bulletins at general motors developed in the 1990s. the goal was to improve
translatability, as well as consistency and readability. the approach moved from
an    author-centric model    towards a    hybrid model    that included the role of an
editor, before it went to full production in 2000 (godden 2000). the casl restrictions
are de   ned by 62 rules, including restrictions on sentence structure, word order,
vocabulary, and punctuation. this is an exemplary sentence:

several diseases result from asbestos exposure, with latency periods of 10 to 40 years or
longer.

writers are supported by a software tool called caslchecker.     p2e5n5s1, c t w d i
   controlled english at clark    (adriaens and schreors 1992) was a language used at
the clark material handling company. it was developed around the late 1980s and was
in   uenced by smart plain english.     p2e5n5s1, c w d i
   controlled english at douglas    (kleinman 1982) was a language developed in 1979
by the mcdonnell douglas aerospace company for their technical manuals. it was based
on a dictionary of about 2,000 words (most of them verbs), favoring short and simple

31

computational linguistics

words and aiming at a single word per meaning and a single meaning per word. in
addition to the words of the dictionary,    nomenclature words    can be introduced. the
goal was to improve readability, translatability, and standardization. it was probably
in   uenced by cfe and had itself an in   uence on aecma se.     p2e5n5s1, c t w d i

   controlled english at ibm    (adriaens and schreors 1992) was a language developed
and used at ibm in the late 1980s. it was in   uenced by ilsam and might have in   u-
enced easyenglish, which was also developed at ibm several years later. it relied on
a closed list of words, and writers were assisted by different instruction programs.    
p2e5n5s1, c w d i

   controlled english at rockwell    (adriaens and schreors 1992) was a language used
at the company rockwell international. it was developed around the late 1980s and was
in   uenced by smart plain english.     p2e5n5s1, c w d i

controlled english to logic translation (celt) (pease and li 2010) is a controlled
natural language presented in 2003. it is a domain-independent language inspired by
ace. in contrast to ace, it uses existing linguistic and ontological resources, concretely
the sumo ontology and id138. these are two exemplary sentences:

dickens writes oliver twist in 1837.
every boy likes fudge.

the syntax structure of celt sentences is deterministically parsed. heuristics are
applied only afterwards to map the words to sumo and id138. the language is
implemented as a uni   cation grammar in prolog.     p4e2n4s3, f w i

controlled language for crisis management (clcm) (temnikova 2010, 2011, 2012)
is a language for writing instructions about how to deal with crisis situations. the
language is de   ned by about 80 simpli   cation rules. these simpli   cation rules include
restrictions on text structure (e.g.,    write a title for every speci   c situation   ), format-
ting (e.g.,    separate with a new line each block of instructions   ), lexicon (e.g.,    avoid
technical terms   ), syntax (e.g.,    avoid passive voice   ), semantics (e.g.,    use only literal
meaning   ), and pragmatics (e.g.,    remove unimportant information   ).     p2e5n5s1,
c t w d a

controlled language for id136 purposes (clip) (sukkarieh 2003) is a language
based on the logic notation mclogic and in   uenced by cpe. it is    semantically-driven,   
meaning that it was designed around the given logic formalism and not vice versa. two
examples are shown here:

every student who laughs succeeds
smith and jones sign    ve contracts

    p5e2n4s3, f w a

controlled language for ontology editing (clone) (funk et al. 2007), previously
called clie controlled language, is a cnl designed as a front-end language for owl,
covering only a small subset of it. it is de   ned by ten basic sentence patterns. it adds
procedural semantics on top of owl to introduce and remove entities and axioms.
these are two examples of clone sentences:

persons are authors of documents.
forget everything.

    p5e2n4s4, f w a

32

tobias kuhn

a survey and classi   cation of controlled natural languages

controlled language optimized for uniform translation (clout) (muegge 2007)
is a cnl to improve machine translation. it puts restrictions on the vocabulary and
prohibits structures such as passive voice and pronouns.     p2e5n5s1, t w i

controlled language of mathematics (clm) (humayoun and raffalli 2010) is a lan-
guage for expressing mathematical texts, as found in textbooks. the language is similar
to naproche cnl and forthel. the grammar of clm is implemented in gf (gram-
matical framework) and allows for deterministic translation into    rst-order logic. the
goal is to automatically verify mathematical proofs.     p5e3n3s3, f w d a

coral   s controlled english (kuhn and h     er 2012) is a controlled language for ex-
pressing formal queries to annotated text corpora. it is in   uenced by ace, but is much
less expressive, simpler and more domain-speci   c. it is embedded into a query interface
called coral to enable users with no particular background in computer science to
effectively use large corpora of annotated texts. this is an exemplary query:

find all passages where a noun phrase contains a verb phrase; the verb phrase precedes
a prepositional phrase; the prepositional phrase contains a verb    see   ;

such queries are deterministically mapped to aql, an existing formal query language.
the language is de   ned by 51 simple grammar rules.     p5e1n4s4, f w d a

diebold controlled english (dce) (hayes, maxwell, and schmandt 1996; moore 2000)
is a controlled language developed at diebold with the goal to make translation faster
and less expensive by assisting human translators with speci   c translation tools. it was
inspired by cte, but is less strict concerning lexicon and grammar, making the approach
more    exible. it consists of three main components: a lexical database, a set of grammar
rules, and a checking tool.     p2e5n5s1, c t w d i

dl-english (thorne and calvanese 2010) is a description logic based controlled lan-
guage presented together with other similar languages to study and compare their
computational complexity. it is similar to lite natural language by the same research
group.     p5e2n4s4, f w a
   drafter language.    see section 4.1.     p4e1n4s3, f w d a
e-prime or e   . see section 4.1.     p1e5n5s1, c w a
e2v. see section 4.1.     p5e2n4s4, f w a

easyenglish (by ibm) (bernth 1997), not to be confused with wycliffe associates   
easyenglish, is a language developed at ibm, which might have been in   uenced by
an earlier controlled english at the same company (adriaens and schreors 1992). the
main goal of easyenglish was to improve machine translation. the approach is based
on a sophisticated id131 that returns suggestions and warnings. apart
from detecting common grammar errors, the system can enforce the use of a certain
controlled vocabulary and can spot ambiguities. for such ambiguities, the system can
propose alternatives, but it is ultimately up to the user whether to follow the system   s
suggestions or not. the problems encountered in a given document are quanti   ed in
the form of a clarity index, which must be above a certain threshold value. the fact
that the restrictions of the language are not enforced but just suggested does not make
the language more precise or simpler than full natural english. easyenglish has been
extended later to check not only on the sentence level but also on the document level,
and this has been implemented in a tool called easyenglishanalyzer (bernth 2006).    
p1e5n5s1, c t w i

33

computational linguistics

easyenglish (by wycliffe associates) (betts 2003), not to be confused with ibm   s
easyenglish, is a controlled language used for transcribing biblical texts. the original
goal was to improve the translation process into other languages, but easyenglish is also
directly used by readers with limited knowledge of english. the language is restricted
with respect to lexicon, syntax, and semantics. there are two levels: level a makes use
of about 1,200 words, whereas level b has a larger lexicon of about 2,800 words. in either
case, the meaning of these words is restricted. for example, fair can only mean unbiased,
and to see cannot be used in the sense to meet. it is possible to use words that are not
on the list, if they are explained in separate easyenglish sentences. the following is an
excerpt of a text in easyenglish (moor is not in the lexicon and has to be explained):

the highlands of scotland consist of lakes, mountains and moors. the moors are    at
empty lands where no trees grow. this land is wonderful and magni   cent because it is
so empty.

there is a strict sentence length limit of 20 words, and paragraphs may not contain more
than 150 words. sentence structure is kept simple by allowing not more than two    nite
clauses and not more than two prepositional phrases per sentence. furthermore, deep
nesting and passives are restricted. in addition, texts should adhere to logical simplicity:
   easyenglish writers are encouraged to identify the basic idea units in a complex
sentence or paragraph and arrange them in logical order.        p2e5n5s1, c t w d
ericsson english (ee) (adriaens and schreors 1992) was a language developed at eric-
sson in the early 1980s, in   uenced by ilsam. it is built on a closed list of acceptable
words, but other words can be introduced if accompanied by a de   nition in ee.    
p2e5n5s1, c w d i
faa air traf   c control phraseology. see section 4.1.     p2e1n3s2, c s d g
first order english (pool 2006) is a controlled natural language that maps to    rst-order
logic. no detailed description of this language is available.     p5e3n4s3, f w a
formalized-english (fe). see section 4.1.     p5e4n3s3, f w a
forthel (vershinin and paskevich 2000) is a cnl for mathematical texts similar to
naproche cnl and clm. the name stands for    formal theory language.    statements
in this language can be automatically translated into    rst-order logic with equality. the
following is an exemplary text:

lemma 1. each set has a subset.
proof. 0 is a subset of all sets. qed.

    p5e3n3s3, f w d a
gellish english (van renssen 2005) is a controlled language designed as a common
data language for industry. the    rst version was ready in 1998. basically, it consists of
simple subject   predicate   object structures with prede   ned relations in the form of    xed
phrases such as    is a specialization of    and    is valid in the context of.    these are two
examples:

collection c each of which elements is a specialization of animal
the eiffel tower has aspect h1
h1 is classi   ed as a height
h1 is quali   ed as 300 m

meta-information about the context of such statements can be expressed in the form of
additional    accessory facts.    gellish builds upon a    xed upper ontology with a large
number of prede   ned concepts and relation types. texts in gellish can be transformed

34

tobias kuhn

a survey and classi   cation of controlled natural languages

into a formal tabular representation. the semantics of the language is not fully formal-
ized, which means that there is no mapping to an established logic formalism. gellish
support simple kinds of if   then rules (van renssen 2011), but these rules do not allow
for universal quanti   cation over several variables in a general way.     p4e2n4s3, f w a i

general motors global english (means, chapman, and liu 2000) or just global en-
glish is a controlled language developed at general motors. the goal was to improve
comprehension for non-native speakers and translatability. it is de   ned by 15 rules
based on four principles:    be brief,       be clear,       be direct,    and    be culturally alert.   
these rules include a limit on the sentence length and grammatical restrictions such
as the exclusion of passive voice. the language evolved from a reduced set of twelve
of the 62 rules of the casl language, which was developed at general motors several
years earlier. in contrast to casl, global english does not come with a software tool for
checking the compliance with the restrictions.     p2e5n5s1, c t w d i

gherkin (ne  cas 2011) is a language for writing executable scenarios for software speci-
   cations. this is an excerpt of a scenario description:
scenario: unsuccessful registration due to full course

given i am a student
and a lecture    pa042    with limited capacity of 20 students
but the capacity of this course is full
[...]

the structuring words such as given, and, and but are    xed. the restrictions on the
remaining text such as    i am a student    are implemented in ordinary programming
languages using id157, and are stored in small modules called    step
de   nitions.    the concrete step de   nitions are not part of gherkin, but have to be
implemented for the particular task at hand. gherkin is therefore highly customizable
and extensible, and the classi   cation given here is meant to apply to a typical concrete
language that is based on gherkin.     p5e3n4s3, f w d a

   gino   s guided english    (bernstein and kaufmann 2006) is a language used in
gino, a system to query and edit ontologies. the language was in   uenced by ginseng
and supports the same kinds of queries. in addition, gino has some limited support
for procedural statements to introduce new entities, for instance:

there is a subclass of class water area named lake.

query statements are mapped to sparql and procedural statements map to owl
axioms to be added or modi   ed. queries can exhibit structural ambiguity, in which
case the system evaluates all possible interpretations and shows to the user the union of
their answers. the grammar that describes the language consists of 120 grammar rules.
    p4e2n4s3, f w a

   ginseng   s guided english    (bernstein et al. 2006) is a cnl used in a system called
ginseng, which is a query interface to access knowledge bases in the form of owl
ontologies. the vocabulary for the language is loaded from the respective ontologies.
these are two examples of queries:

what are the capitals of states that border nevada?

is there a city that is the highest point of a state?

the grammar consists of 120 static grammar rules plus additional dynamic rules gener-
ated from the ontologies.     p5e1n4s3, f w a

35

computational linguistics

hyster easy language program (help) (smart 2003) is a controlled english developed
in the 1980s for maintenance manuals for lift trucks. it is based on smart plain english
and thus indirectly on cfe (pym 1990).     p2e5n5s1, c w d i
icao phraseology (eurocontrol 2009) is controlled language for air traf   c control de-
   ned by the international civil aviation organisation (icao) in the 1980s or even
earlier. it is very similar to the phraseologies by faa and caa.     p2e1n3s2, c s d g
   iconoclast language    (power 1999) is a cnl to write patient information
lea   ets. it is similar to the drafter language. a conceptual authoring approach is em-
ployed and a formal logic representation is used in the background. this is a simple
example:

if you develop a rash, you should consult your doctor.

    p4e3n5s3, f w d a
ihelp controlled english (ice)5 is a language developed by ihelp ltd, a documenta-
tion consultancy company. ice consists of    a set of    exible rules and vocabularies for
companies wishing to standardise and improve their information.        p2e5n5s1, c t w i
ilastic controlled english (ilastic 2012) is a language to allow non-developers to write
intuitive and natural scripts that automatically retrieve, transform, and combine data
from the web, databases,    les, and other resources. this is an exemplary statement:

delete all    les under the tmp folder if the space of the disk is lower than 1024.

    p5e3n4s3, f w i
international language of service and maintenance (ilsam) (pym 1990) is an in   u-
ential language similar to caterpillar fundamental english, from which it was derived
in the 1970s.     p2e5n5s1, c w d i
ita controlled english (ita ce) (mott 2010) is a controlled language de   ned by the
international technology alliance, a us/uk military research program. it is inspired
by clce, but is less strict in terms of precision: it has an    informal meaning and a semi-
formal mapping to predicate logic.    the following are two examples of statements of
different types:

if ( the person x has the person y as brother ) and ( the person z has the person x as
father ) then ( the person z has the person y as uncle ) .
   the plan has failed    because    there was a misunderstanding   .

the    rst example shows a    logical rule   ; the second example is a    rationale    statement.
parentheses and variables are used to disambiguate. around 90 grammar rules de   ne
the language.     p3e3n3s3, f w i
kant controlled english (kce) (mitamura and nyberg 1995) is a controlled natural
language for machine translation used within the kant translation system. the lan-
guage was    rst presented under this name in 1995, but it had at that point already
been studied and used for several years. the focus is on technical documents, and kce
was the basis for the development of caterpillar technical english. lexicon, grammar,
and semantics are restricted. in addition, ambiguities are resolved interactively by aug-
menting the input sentences with sgml tags. in the following sentence, for example,
the attachment of the preposition    with twelve rivets    is ambiguous:

secure the gear with twelve rivets.

5 http://www.lindy-hop.co.uk/ihelp/ice/

36

tobias kuhn

a survey and classi   cation of controlled natural languages

in kce, this ambiguity can be resolved by augmenting the sentence with an sgml tag,
for instance    secure the gear with <attach head=   secure    modi=   with   > twelve rivets.   
for the classi   cation of the language, the question arises whether the sgml tags are part
of the language or just a method to keep track of decisions concerning ambiguities. the
sgml tags positively contribute to the precision of the language but heavily impede its
naturalness. since such markup tags are usually hidden and since kce texts are initially
written without tags, which are added only afterwards, we consider them a part of the
kant methodology but not of the controlled language itself.     p2e5n5s1, t w a

international

kodak
at kodak in the
(spaggiari, beaujard, and cannesson 2003).     p2e5n5s1, c w d i

early 1980s. some

language

service

(kisl)

see

as

it

a cnl

is
developed
a descendant of cfe

lite natural language (bernardi, calvanese, and thorne 2007) is a cnl based on the
language e2v and its variants. it has a deterministic mapping to dl-lite, which is a
logical formalism optimized for good computational properties and is equivalent to a
subset of owl.     p5e2n4s4, f w a

   massachusetts legislative drafting language    (massachusetts senate 2003) is a re-
stricted language for legal texts de   ned by the massachusetts senate. its purpose is    to
promote uniformity in drafting style, and to make the resulting statutes clear, simple
and easy to understand and use.    the language is de   ned by about 100 rules that
restrict syntax (e.g.,    use the present tense and the indicative mood   ), semantics (e.g.,
   do not use    deem    for    consider      ), and document structure (   use short sections or
subsections   ). in addition, there are close to 90 words and phrases that must not be
used, with suggested replacements for each of them (e.g., hide instead of conceal, and
rest instead of remainder).     p2e5n5s1, c w d g

   mile query language    (piwek et al. 2000) is a language to access maritime rules and
regulations. it follows the conceptual authoring approach in a very similar way as the
drafter and clef languages.     p4e1n4s3, f w d a

multinational customized english (mce) (ruf   no 1982) is a controlled language de-
veloped at xerox to improve the quality of machine-assisted translation. it was based
on ilsam (adriaens and schreors 1992). it uses a restricted domain-speci   c vocabulary
and    a set of writing rules which encourage a clear, concise english and a minimization
of ambiguities.        p2e5n5s1, t w d i

nortel standard english (nse) (smart 2006) is a language developed at nortel, a
telecommunications equipment manufacturer. the development started in 1995 with
the help of smart communications, and the language was probably in   uenced by
smart plain english.     p2e5n5s1, c w d i

naproche cnl (cramer et al. 2010) is a controlled language for mathematical texts
similar to clm and forthel. texts in naproche cnl can be deterministically mapped
to    rst-order logic and then automatically checked for logical correctness. the following
is an excerpt of a proof written in this language:

axiom 3: for every x, x    6= 1.
axiom 4: if x    = y   , then x = y.
theorem 1: if x 6= y then x    6= y   .
proof: assume that x 6= y and x    = y   . then by axiom 4, x = y. qed.

according to its authors, most texts of mathematical textbooks    can be rewritten in the
naproche cnl in such a way that they resemble the original text.        p5e3n3s3, f w d a

37

computational linguistics

ncr fundamental english (ncr 1978) is a cnl developed at ncr corporation. the
language was used for the technical manuals of the company in order to make them
   easier to read and use by ncr employees and customers around the world.    these
are two examples of sentences:

while repairing the unit, the    eld engineer also performs normal maintenance if it is
needed.
no maintenance can be performed until the maintenance lock has been activated.

the language consists of three parts: nomenclature, glossary, and vocabulary. every
word of the language belongs to exactly one of these categories. the nomenclature is
an open set of different kinds of named individual entities, such as names of products,
tools, routines, as well as named modes and conditions. the glossary is another open
set of words for technical concepts, such as audit trail, that cannot be replaced by a
phrase or brief clause using the words of the vocabulary. the vocabulary,    nally, is the
most interesting part. it consists of a    xed set of 1,350 words (verbs, nouns, adverbs,
adjectives, pronouns, prepositions, articles, and conjunctions) plus 650 abbreviations.
the content of the vocabulary ranges from fundamental words such as a, not, and in
to domain-speci   c terms such as testware, calibrate, and taxable. the meaning of these
words is restricted, and each comes with a de   nition in full english. the noun medium,
for instance, is de   ned as    a method of payment    and must not be used in any other
sense. the grammar is not explicitly restricted.     p2e5n5s1, c w d i
oc   controlled english (cucchiarini 2002) is a controlled language developed at oc  ,
a dutch company in the printing and copying business. oc   controlled english is
combined with traditional machine translation techniques to improve the translation
quality of the company   s documentation in 17 different languages. one of the important
properties of the language is that it leads to more concise texts. for example, instead of
   in several windows, an icon shows the current status/activity of a printer. see the list
below for a description of each status.   , one would write:

these icons show the status or activity of the copier.

the language is implemented with the help of the maxit checker by smart commu-
nications.     p2e5n5s1, t w d i
owl ace (kaljurand and fuchs 2006) is a controlled language for the ontology lan-
guage owl. syntactically, it is a subset of ace. semantically, it is tailored towards
the expressiveness of owl and is more speci   c than ace with its underspeci   ed
semantics, particularly in the case of plurals. thus, owl ace is more precise but less
expressive than ace.     p5e2n4s3, f w a
   owlpath   s guided english    (valencia-garc  a et al. 2011) is a query language for a
tool called owlpath, with which ontologies can be queried. statements in this language
start with the phrase view any. these are two examples:

view any commodity has_quoted_price in bmf.
view any company whose stock_price.lasttrade is_greater_than $30 and
is_included_in dow_jones in 2009-04-24.

these statements are translated into the sparql query language. even though their
structure roughly follows english grammar, they cannot be considered valid english
sentences.     p5e2n3s4, f w a
owl simpli   ed english (power 2012) is a controlled language for the semantic web.
in contrast to most other approaches, there is no real lexicon, neither built-in nor user-
de   ned. only a very small number of function words are prede   ned, and users have

38

tobias kuhn

a survey and classi   cation of controlled natural languages

to list the verbs they intend to use. all other word categories are inferred based on
syntactic clues such as capitalization and adjacent words. this is an example (assuming
that governed and lives are listed as verbs):

london is capital of a country that is governed by a man that lives in downing street.

    p5e2n4s4, f w a

   pathont cnl    (kim et al. 2005; namgoong and kim 2007) is a controlled language
developed for a tool called pathont. the tool is multilingual, supporting english and
korean. statements in this language are deterministically mapped to rdf triples. these
are two exemplary sentences:

nam is a student supervised by a professor named kim.
a received specimen    xed in formalin is a soft tissue mass.

the language seems to cover only simple existential statements.     p5e1n4s4, f w a

peng (schwitter 2002) is a controlled language whose name stands for    processable
english.    it is a rich but unambiguous language that can be automatically translated
via discourse representation structures into    rst-order logic with equality. it is inspired
by ace, and the approach has a strong focus on predictive editing. these are two
examples:

every animal a eats all plants or eats all animals b that are smaller than a and that eat
some plants.
while the fox sleeps, the cat chases a bird.

    p5e3n4s3, f w a

peng-d (schwitter and tilbrook 2004) is a language derived from peng, the main
difference being that peng-d builds upon rdf and owl instead of discourse rep-
resentation structures.     p5e3n4s3, f w a

peng light (schwitter 2008) is another language derived from peng. it maps to the
tptp notation for    rst-order logic.     p5e3n4s3, f w a

perkins approved clear english (pace) (pym 1990) is a controlled language devel-
oped at perkins, a diesel engine manufacturer and now a subsidiary of caterpillar. the
language was introduced in 1980 and was based on ilsam. the goal was to improve
machine-assisted translation. in order to avoid the use of synonyms, pace comes with
a dictionary which has been gradually extended and counted 2,500 entries in 1990, such
as    passage (n): a drilling along which a    uid moves.    pace is summarized in    ten
rules of simpli   ed writing   :

1. keep sentences short
2. omit redundant words
3. order the parts of the sentence logically
4. do not change constructions in mid

sentence

5. take care with the logic of    and    and    or   

6. avoid elliptical constructions
7. do not omit conjunctions or relatives
8. adhere to the pace dictionary
9. avoid strings of nouns
10. do not use    ing    unless the word

appears thus in the pace dictionary

the aim of the    rst    ve rules is to make the text short and simple, while the last    ve
rules have the somewhat opposing objective to make the text more explicit. this is an
example consisting of two pace sentences:

loosen the pivot fasteners of the dynamo or of the alternator. loosen also the fasteners
of the adjustment link.

39

computational linguistics

    p2e5n5s1, c t w d i

permis controlled natural language (inglesant et al. 2008) is a language for express-
ing access control policies for grid computing environments. it is based on clone with
speci   c extensions for authorization policies:

staff can print on hp laserjet 1.
i trust david to say who managers are.

such statements are mapped to different formal target notations. each statement follows
one of only nine statement patterns.     p5e2n4s4, f w d a

   pills language    (bouayad-agha, power, and belz 2002) is a language for medical
information documents used in a system called pills. it follows a similar editing ap-
proach as the iconoclast language, which was developed a couple of years earlier
by the same research group. with the pills approach, different types of documents
can be automatically generated from a master document and translated into different
languages.     p4e1n5s3, t f d a

plain language or plain english (sec 1998; plain 2011) is an initiative by the us
government and other organizations. it had its origins in the 1970s with the goal to
make of   cial documents easier to understand and less bureaucratic.    use pronouns to
speak directly to readers    and    avoid double negatives and exceptions to exceptions   
are two exemplary rules. unlike other such style guides, many of the guideline rules are
strict and, with the plain writing act of 2010, us governmental agencies are obliged to
comply with them. with the focus being on human understandability and acceptance,
documents in plain language do not seem to be considerably more precise or simpler
from a computational point of view, when compared to full english.     p1e5n5s1, c w g

policespeak (johnson 2000) is a language developed to improve police communications
of english and french of   cers at the channel tunnel. the goal was to    make police
communications more concise, more predictable, more stable and less ambiguous.    the
project was launched in 1988 and the language was ready in 1992. it has a similar goal
and application area as seaspeak and the different air traf   c control phraseologies.    
p2e1n3s2, c s d g

   prosper controlled english    (grover et al. 2000) is a language for the speci   cation
and veri   cation of hardware designs, developed in the late 1990s. the language is based
on a restricted version of a general english grammar. sentences of the language can be
automatically mapped to a certain type of temporal logic. this is an exemplary sentence:

if sigi is high and then is low on the next cycle, then sigo is low and after one cycle
becomes high and then after one more cycle becomes low.

ambiguity is not completely eliminated, but ambiguous sentences can be automatically
spotted and reported to the user.     p4e3n4s3, f w d a

pseudo natural language (pnl) (marchiori 2004) is a language designed as a user-
friendly language for the semantic web. it builds upon rdf and    rst-order logic, and
uses prolog to calculate id136s. these are two exemplary sentences:

john represents the person    john smith    from the company    http://
www.example.com/staff   .
if imply has as arguments x and y in this order, then x logical-imply y.

upper-case words such as john act as variables that can be instantiated with concrete
de   nitions involving uris. pnl is unambiguous and has well-de   ned semantics, but

40

tobias kuhn

a survey and classi   cation of controlled natural languages

unnatural capitalization mitigates the naturalness of the language. its structure looks
simple at    rst sight, but rather complex rules have to be applied in order to resolve
ambiguous syntax trees.     p5e3n3s3, f w a
   quelo controlled english    (franconi et al. 2011) is a language introduced in 2010 and
used in a query interface called quelo. this is an exemplary query:

i am looking for something. it should be equipped with an automatic transmission
system and sold by a car dealer. the car dealer should sell a    eet car.

following a conceptual authoring approach, users cannot directly edit the sentences,
but they can trigger modi   cation actions on the underlying formal representation.    
p4e1n4s4, f w a
rabbit (hart, johnson, and dolbear 2008) is a controlled language for owl. it has been
developed and used by ordnance survey, great britain   s national mapping agency. rab-
bit is designed for a speci   c scenario, in which it is used for the communication between
domain experts and ontology engineers to create ontologies. three types of statements
are supported: declarations, axioms, and import statements. these are examples of the
   rst and second type:

sheep is a concept, plural sheep.
every river    ows into exactly one of river, lake or sea.

the language is quite simple, being de   ned by a small number of sentence patterns and
some modi   cations thereof.     p5e2n4s4, f w g

english

restricted
(recon)
(barkmeyer and mattas 2012) is a language to represent facts and rules in an industrial
environment, where these facts and rules have a deterministic mapping to    rst-order
logic. this is an exemplary sentence:

constructing

ontologies

for

if any container contains part of a shipment, it contains no other shipment.

the language is de   ned by around 200 rules in backus-naur form.     p5e3n4s3, f w a g
(breaux and ant  n 2005;
restricted natural
breaux, ant  n, and doyle 2008) is a language for policy statements and software
engineering goals introduced in 2004. the following are two exemplary rnls
statements:

statements

language

(rnls)

rnls #1: the customer will select access codes.
rnls #2: the provider will recommend (rnls #1) to the customer.

the second sentence refers to the    rst one using its identi   er rnls #1. there is a
mapping between rnls and description logic, but it is not clear whether this mapping
is automated.     p3e2n4s3, f w d a
rulespeak (ross 2003; omg 2008; ross 2013) is a cnl for business rules. the de-
velopment of the language started in 1985 and it was    rst presented in 1994. it is
very similar to sbvr structured english, which emerged later. each rulespeak rule
belongs to one of eleven    functional categories    such as    computation rule,       id136
rule,    and    process trigger.    for each of these categories speci   c templates are de   ned.
computation rules, for example, contain the phrase    must be computed as    (or simply
   =   ). the    rst of the following two examples is such a computation rule:

a product   s cost must be computed as the sum of the cost of all its components.
an order may be accepted only if all of the following are true:
- it includes at least one item.
- it indicates the customer who is placing it.

41

computational linguistics

sometimes the color codes of sbvr structured english are adopted to emphasize the
different types of the sentence constituents. like sbvr structured english, rulespeak
is linked to the sbvr standard, which provides formal semantics based on second-order
logic with henkin semantics. however, the mapping from rulespeak texts to the logical
representation is only de   ned in an informal way. the strict templates considerably
simplify the language, but there is no formal grammar that would fully de   ne the
language.     p3e4n4s2, c f w i
sbvr structured english see section 4.1.     p3e4n4s2, c f w i
seaspeak (strevens and johnson 1983) is an    international maritime english    de-
signed for clear communication among ships and harbors. its development started in
1981. it is a controlled phraseology similar to policespeak and the different air traf   c
control phraseologies.     p2e1n3s2, c s d g
smart controlled english (smart 2006) is a    more advanced version    of asd sim-
pli   ed technical english, developed by the company smart communications. it was
probably in   uenced by smart plain english, and has been applied to different areas.
this is an excerpt of a document in smart controlled english:

when the quaternary pump starts operation, the plunger moves inside the chamber.
this movement lets the computer calculate and store a position called    top dead
center    (tdc).

the language is implemented in a tool called maxit checker, which is able to spot
violations of the restrictions of the language.     p2e5n5s1, c t w i
smart plain english, sometimes called plain english program (pep), is a controlled
language developed and used at smart communications since the mid 1980s.6 it
is based on cfe and was the basis for help and the controlled languages at clark
and rockwell (adriaens and schreors 1992). as for smart controlled english, the tool
maxit checker can be used to create compliant documents.     p2e5n5s1, c w i
   sowa   s syllogisms.    see section 4.1.     p5e1n4s5, f w a
special english (voice of america 2009) is a simpli   ed english developed and used
by the voice of america (voa), the of   cial external broadcast institution of the us
government. the language has been used since 1959 and is still used today for news
on radio, television, and the web. this makes it the second oldest english-based cnl
(after basic english) and the only one that has been in use for such a long period by the
same organization. at the time of its creation, special english was probably in   uenced
by basic english. the vocabulary is restricted to about 1,500 words, which have changed
over time. sentences should be short and should be spoken at a slower speed. there are
no explicit restrictions on grammar or semantics.     p1e5n5s1, c w s g
squall (ferr   2012) is a controlled natural language in the area of the semantic web to
query and update rdf graphs. sentences in this language are translated into the query
language sparql, whereby structural ambiguity is resolved based on a few syntactic
rules. this is an example:

for every publication ?x, ?x has an author ?a and ?a cite-s ?x

the language is de   ned by about 50 simple grammar rules.     p5e2n3s4, f w a
standard language (slang). see section 4.1.     p3e1n4s2, c f w d i

6 http://www.smartny.com/plainenglish.htm

42

tobias kuhn

a survey and classi   cation of controlled natural languages

sun proof (wells akis and sisson 2002) is a controlled language introduced at sun for
their technical documentation. the initial development of the language lasted from 1999
until 2002. the general objective was to write texts that are    easier to understand and
to translate for humans as well as machines    but with a clear focus on translatability.
sun proof is restricted by three sets of guidelines: style guidelines, grammar rules, and
terminology. one of the most important rules is the limitation of the sentence length to
25 words. other rules include semantic restrictions such as using may only for granting
permission. this is an exemplary sentence:

this chapter provides an overview of the standardized solutions that are required to
make the transition from ipv4 to ipv6.

    p2e5n5s1, c t w d i
sydney owl syntax (sos) (cregan, schwitter, and meyer 2007) is a controlled lan-
guage introduced in the context of the semantic web. it is based on peng and provides
a bidirectional and complete mapping to the ontology language owl. these are two
exemplary sentences:

the class adult is fully de   ned as any person that has at least 20 as an age.
if x has y as a father then y is the only father of x.

    p5e2n4s3, f w a
template based natural language speci   cation (tbnls) (esser and struss 2007) is
a cnl approach for functional tests of control software for passenger vehicles. the
language is de   ned by 15 templates that provide a mapping to id118 with
temporal relations. this is an exemplary sentence:

if button b4 is down

p1 occurs, then lamp l3 is red

p2 hold immediately, until

10 seconds

t1 elapsed.

p1 and p2 represent the propositional variables for the respective boxes, and t1 is a time
variable.     p5e2n3s4, f w d a i
ucscnl (barros et al. 2011) is a controlled natural language for use case speci   cations
in the area of automated software testing. the language is intended to be unambiguous
and is de   ned by a small number of simple grammar rules. there are imperative
sentences to describe user actions, as well as declarative statements to describe the
system state before and after user actions:

after creating a message with 100 characters, go to the drafts folder
the imported media    le is a music    le

    p5e2n4s4, f w d a
voice actions7 are a cnl for spoken action commands on the android mobile phone
platform. currently, the language covers twelve informally de   ned command patterns
such as    map of,       note to self,    and    create a calendar event.    the following is an
example:

create a calendar event: dinner in san francisco, saturday at 7:00pm

these spoken commands can be automatically interpreted and executed by the system.
    p3e1n4s2, f s d i

7 http://support.google.com/android/bin/answer.py?hl=en&answer=1715292

43

computational linguistics

acknowledgments
i would like to thank norbert e. fuchs,
stefan h     er, kaarel kaljurand, rich morin,
rolf schwitter, simon spero, and david
whitten for comments on the article and
general discussions on the topic. i am also
thankful for the responses from orlando
chiarello, esra erdem, richard power,
ronald g. ross, nestor rychtyckyj, donia
scott, irina temnikova, and andries van
renssen to questions about speci   c
languages. in addition, the feedback from
robert dale, editor-in-chief of the
computational linguistics journal,
anonymous comments from its editorial
board, and the anonymous reviews were
very helpful to further improve the article.
lastly, i am extremely thankful to james
tierney for working with me on the
manuscript to improve grammar and style.

references
[adriaens and macken1995]adriaens, geert

and lieve macken. 1995. technological
evaluation of a controlled language
application: precision, recall, and
convergence tests for secc. in proceedings
of tmi95, volume 1, pages 123   141.

[adriaens and schreors1992]adriaens, geert
and dirk schreors. 1992. from cogram
to alcogram: toward a controlled
english id131. in proceedings of
coling    92, volume 2, pages 595   601.
association for computational linguistics.

[aecma1986]aecma (association

europ  enne des constructeurs de mat  riel
a  rospatial), 1986. aecma simpli   ed
english. psc-8s-16598.

[aikawa et al.2007]aikawa, takako, lee

schwartz, ronit king, monica
corston-oliver, and carmen lozano. 2007.
impact of controlled language on
translation quality and post-editing in a
id151
environment. in proceedings of the mt
summit xi, pages 1   7. european
association for machine translation.

[ansi/niso2005]ansi/niso (american

national standards institute and national
information standards organization),
2005. guidelines for the construction, format,
and management of monolingual controlled
vocabularies. z39.19-2005.

[aristotleca. 350 bc]aristotle. ca. 350 bc.

simpli   ed technical english. speci   cation
asd-ste100, issue 6.

[avaya2004]avaya inc., 2004. avaya style

guide. issue 1.

[barkmeyer and mattas2012]barkmeyer,
edward and andreas mattas. 2012. a
restricted english for constructing
ontologies (recon). nist
interagency/internal report 7868,
national institute of standards and
technology (nist).

[barros et al.2011]barros, fl  via a., la  s

neves,   rica hori, and dante torres. 2011.
the ucscnl: a controlled natural
language for use case speci   cations. in
proceedings of seke   2011, pages 250   253.

[bernardi, calvanese, and thorne2007]

bernardi, raffaella, diego calvanese, and
camilo thorne. 2007. lite natural
language. in proceedings of iwcs-7.

[bernstein and kaufmann2006]bernstein,
abraham and esther kaufmann. 2006.
gino     a guided input natural language
ontology editor. in proceedings of iswc
2006, volume 4273 of lncs, pages
144   157. springer.

[bernstein et al.2006]bernstein, abraham,
esther kaufmann, christian kaiser, and
christoph kiefer. 2006. ginseng: a guided
input natural language search engine for
querying ontologies. in 2006 jena user
conference.

[bernth1997]bernth, arendse. 1997.
easyenglish: a tool for improving
document quality. in proceedings of anlc
   97, pages 159   165. association for
computational linguistics.

[bernth2006]bernth, arendse. 2006.

easyenglishanalyzer: taking controlled
language from sentence to discourse level.
in proceedings of claw 2006.

[betts2003]betts, robert. 2003. easyenglish:

challenges in cross-cultural
communication. in proceedings of
eamt-claw03. dublin city university.

[bouayad-agha, power, and belz2002]

bouayad-agha, nadjet, richard power,
and anja belz. 2002. pills: multilingual
generation of medical information
documents with overlapping content. in
proceedings of lrec 2002, pages 2111   2114.
[bourland1965]bourland, d. david. 1965. a
linguistic note: writing in e-prime. general
semantics bulletin, 32(33):111   114.

[boyd, zowghi, and farroukh2005]boyd,

stephen, didar zowghi, and alia
farroukh. 2005. measuring the
expressiveness of a constrained natural
language: an empirical study. in

prior analytics.
http://classics.mit.edu/aristotle/prior.html.

[asd2013]asd (aerospace and defence

industries association of europe), 2013.

44

tobias kuhn

a survey and classi   cation of controlled natural languages

proceedings of re 2005, pages 339   352.
ieee computer society.

[breaux and ant  n2005]breaux, travis d.

and annie i. ant  n. 2005. deriving
semantic models from privacy policies. in
proceedings of policy 2005, pages 67   76.
ieee computer society.

[breaux, ant  n, and doyle2008]breaux,

travis d., annie i. ant  n, and jon doyle.
2008. semantic parameterization: a
process for modeling domain descriptions.
acm transactions on software engineering
and methodology, 18(2):5:1   5:27.

[caa2011]caa (civil aviation authority),

2011. radiotelephony manual, 20 edition.

[chervak, drury, and ouellette1996]

chervak, steve, colin g. drury, and
james p. ouellette. 1996. field evaluation
of simpli   ed english for aircraft
workcards. in proceedings of the tenth
meeting on human factors issues in aircraft
maintenance and inspection. federal
aviation administration/of   ce of
aviation medicine, washington dc, pages
123   136.

[clark et al.2007]clark, peter, shaw-yi chaw,

ken barker, vinay chaudhri, philip
harrison, james fan, bonnie john, bruce
porter, aaron spaulding, john thompson,
and peter yeh. 2007. capturing and
answering questions posed to a
knowledge-based system. in proceedings of
k-cap    07, k-cap    07, pages 63   70. acm.
[clark et al.2005]clark, peter, phil harrison,

thomas jenkins, john thompson, and
richard h. wojcik. 2005. acquiring and
using world knowledge using a restricted
subset of english. in proceedings of flairs
2005, pages 506   511. aaai press.

[clark et al.2010]clark, peter, phil harrison,
william r. murray, and john thompson.
2010. naturalness vs. predictability: a key
debate in controlled languages. in
proceedings of cnl 2009, volume 5972 of
lncs, pages 65   81. springer.

[crabbe2009]crabbe, stephen. 2009.

controlled languages for technical writing
and translation. in proceedings of the 9th
portsmouth translation conference, pages
48   62.

[cramer et al.2010]cramer, marcos, bernhard

fisseni, peter koepke, daniel k  hlwein,
bernhard schr  der, and jip veldman. 2010.
the naproche project controlled natural
language proof checking of mathematical
texts. in proceedings of cnl 2009, volume
5972 of lncs, pages 170   186. springer.

[cregan, schwitter, and meyer2007]cregan,
anne, rolf schwitter, and thomas meyer.

2007. sydney owl syntax - towards a
controlled natural language syntax for
owl 1.1. in proceedings owled 2007,
volume 258 of ceur workshop proceedings.
ceur-ws.

[cucchiarini2002]cucchiarini, catia. 2002.

euromap hlt case study: how hlt
applications can lead to higher quality
translations at lower costs: the experience
of oc   technologies.
http://web.archive.org/web/20050908121048/http://www.

[dimitrova et al.2008]dimitrova, vania,
ronald denaux, glen hart, catherine
dolbear, ian holt, and anthony g. cohn.
2008. involving domain experts in
authoring owl ontologies. in proceedings
of iswc 2008, volume 5318 of lncs, pages
1   16. springer.

[erdem and yeniterzi2009]erdem, esra and

reyyan yeniterzi. 2009. transforming
controlled natural language biomedical
queries into answer set programs. in
proceedings of bionlp    09, pages 117   124.
association for computational linguistics.

[esser and struss2007]esser, m.w. and

p. struss. 2007. obtaining models for test
generation from natural-language-like
functional speci   cations. in proceedings of
dx-07, pages 75   82.

[eurocontrol2009]eurocontrol, 2009. icao
standard phraseology     a quick reference
guide for commercial air transport pilots.

[european commission2011]european

commission, 2011. how to write clearly.

[faa2010]faa (federal aviation

administration), 2010. air traf   c control.
order jo 7110.65t.

[felleisen1991]felleisen, matthias. 1991. on

the expressive power of programming
languages. science of computer
programming, 17(1-3):35   75.

[ferr  2012]ferr  , s  bastien. 2012. squall: a

controlled natural language for querying
and updating rdf graphs. volume 7427 of
lncs, pages 11   25. springer.

[franconi et al.2011]franconi, enrico, paolo

guagliardo, sergio tessaris, and marco
trevisan. 2011. quelo: an ontology-driven
query interface. in proceedings of dl 2011,
volume 745 of ceur workshop proceedings,
pages 488   498. ceur-ws.

[fuchs, kaljurand, and kuhn2008]fuchs,

norbert e., kaarel kaljurand, and tobias
kuhn. 2008. attempto controlled english
for id99. in reasoning
web     4th international summer school
2008, volume 5224 of lncs, pages
104   124. springer.

45

computational linguistics

[fuchs and schwitter1995]fuchs, norbert e.
and rolf schwitter. 1995. specifying logic
programs in controlled natural language.
in proceedings of clnlp 95.

[funk et al.2007]funk, adam, valentin

tablan, kalina bontcheva, hamish
cunningham, brian davis, and siegfried
handschuh. 2007. clone: controlled
language for ontology editing. in
proceedings of iswc 2007 + aswc 2007,
volume 4825 of lncs, pages 142   155.
springer.

[godden2000]godden, kurt. 2000. the

evolution of casl controlled authoring at
general motors. in proceedings of claw
2000, pages 14   19.

[grover et al.2000]grover, claire, alexander
holt, ewan klein, and marc moens. 2000.
designing a controlled language for
interactive model checking. in proceedings
of claw 2000, pages 29   30.

[hallett, scott, and power2007]hallett,

catalina, donia scott, and richard power.
2007. composing questions through
conceptual authoring. computational
linguistics, 33(1):105   133.

[halpin2004]halpin, terry a. 2004. business

rule verbalization. in proceedings of ista
2004, volume 48 of lni, pages 39   52. gi.

[hart, johnson, and dolbear2008]hart, glen,
martina johnson, and catherine dolbear.
2008. rabbit: developing a controlled
natural language for authoring ontologies.
in proceedings of eswc 2008, volume 5021
of lncs, pages 348   360. springer.

[hayes, maxwell, and schmandt1996]hayes,
phil, steve maxwell, and linda schmandt.
1996. controlled english advantages for
translated and original english documents.
in proceedings of claw 1996, pages 84   92.

[horridge et al.2006]horridge, matthew,

nick drummond, john goodwin, alan l.
rector, robert stevens, and hai wang.
2006. the manchester owl syntax. in
proceedings of owled    06, volume 216 of
ceur workshop proceedings. ceur-ws.

[houghton mif   in harcourt2000]houghton

mif   in harcourt, 2000. the american
heritage dictionary of the english language,
fourth edition.

[huijsen1998]huijsen, willem-olaf. 1998.

controlled language     an introduction. in
proceedings of claw    98, pages 1   15.

[humayoun and raffalli2010]humayoun,

muhammad and christophe raffalli. 2010.
mathnat     mathematical text in a
controlled natural language. journal on
research in computing science     special
issue: natural language processing and its

46

applications, 46:293   307.

[ilastic2012]ilastic, 2012. ilastic    

documentation.
http://www.ilastic.com/docs.

[inglesant et al.2008]inglesant, philip,

m. angela sasse, david chadwick, and
lei lei shi. 2008. expressions of
expertness: the virtuous circle of natural
language for access control policy
speci   cation. in proceedings of soups    08,
volume 337 of acm international
conference proceeding series, pages 77   88.
acm.

[jarrar, keet, and dongilli2006]jarrar,
mustafa, c. maria keet, and paolo
dongilli. 2006. multilingual verbalization
of orm conceptual models and
axiomatized ontologies. technical report,
vrije universiteit, brussels.

[johnson2000]johnson, edward. 2000.

talking across frontiers. in proceedings of
the international conference on european
cross border cooperation: lessons for and
from ireland.

[kaljurand2007]kaljurand, kaarel. 2007.

attempto controlled english as a semantic
web language. ph.d. thesis, faculty of
mathematics and computer science,
university of tartu, estonia.

[kaljurand and fuchs2006]kaljurand, kaarel

and norbert e. fuchs. 2006. bidirectional
mapping between owl dl and attempto
controlled english. in proceedings of
ppswr   06, pages 179   189. springer.

[kaljurand and kuhn2013]kaljurand, kaarel

and tobias kuhn. 2013. a multilingual
semantic wiki based on attempto
controlled english and grammatical
framework. in proceedings of eswc 2013,
pages 427   441. springer.

[kamprath et al.1998]kamprath, christine,
eric adolphson, teruko mitamura, and
eric nyberg. 1998. controlled language for
multilingual document production:
experience with caterpillar technical
english. in proceedings of claw    98, pages
51   61.

[karkaletsis and spyropoulos1997]

karkaletsis, vangelis and constantine d.
spyropoulos. 1997. a knowledge-based
organisation of lexical resources to support
multilingual information retrieval in
software localisation. in proceedings of the
1997 aaai symposium on cross-language
and speech retrieval, pages 120   126.
stanford university.

[kim et al.2005]kim, hong-gee,

byung-hyun ha, jae-il lee, and myeng-ki
kim. 2005. a multi-layered application for

tobias kuhn

a survey and classi   cation of controlled natural languages

the gross description using semantic web
technology. international journal of medical
informatics, 74(5):399   407.

[kittredge2003]kittredge, richard i. 2003.

sublanguages and controlled languages. in
ruslan mitkov, editor, the oxford handbook
of computational linguistics. pages 430   447.
[kleinman1982]kleinman, joseph m. 1982. a

limited-word technical dictionary for
technical manuals. technical
communication, first quarter 1982:16   19.

[kuhn2009]kuhn, tobias. 2009. how

controlled english can improve semantic
wikis. in proceedings of semwiki 2009,
volume 464 of ceur workshop proceedings,
pages 1   15. ceur-ws.

[kuhn2010]kuhn, tobias. 2010. controlled

english for id99. ph.d.
thesis, faculty of economics, business
administration and information
technology of the university of zurich,
switzerland.

[kuhn2013]kuhn, tobias. 2013. the

understandability of owl statements in
controlled english. semantic web,
4(1):101   115.

[kuhn et al.2013]kuhn, tobias, paolo emilio
barbano, mate levente nagy, and michael
krauthammer. 2013. broadening the scope
of nanopublications. in proceedings of
eswc 2013, pages 487   501. springer.

[kuhn and h     er2012]kuhn, tobias and

stefan h     er. 2012. coral: corpus access in
controlled language. corpora, 7(2):187   206.
[lukichev and wagner2006]lukichev, sergey

and gerd wagner. 2006. verbalization of
the rewerse i1 rule markup language.
deliverable i1-d6, rewerse.

[marchiori2004]marchiori, massimo. 2004.

towards a people   s web: metalog. in
proceedings of wi 2004, pages 320   326.
ieee computer society.

[martin2002]martin, philippe. 2002.

id99 in cglf, cgif,
kif, frame-cg and formalized-english.
in proceedings of iccs 2002, volume 2393 of
lnai, pages 77   91. springer.

[massachusetts senate2003]massachusetts
senate, 2003. legislative drafting and legal
manual, third edition.

[means and godden1996]means, linda and

kurt godden. 1996. the controlled
automotive service language (casl)
project. in proceedings of claw 1996, pages
106   114.

[means, chapman, and liu2000]means,

linda g., patricia chapman, and aulsan
liu. 2000. training for controlled language
processes. in proceedings of claw 2000,

pages 1   13.

[mitamura and nyberg1995]mitamura,

teruko and eric h. nyberg. 1995.
controlled english for knowledge-based
mt: experience with the kant system. in
proceedings of tmi95, pages 158   172,
belgium. centre for computational
linguistics, katholieke universiteit
leuven.

[moore2000]moore, corinne. 2000.
controlled language at diebold,
incorporated. in proceedings of claw 2000,
pages 51   61.

[mott2010]mott, david. 2010. summary of
ita controlled english. technical report,
international technology alliance (ita).

[muegge2007]muegge, uwe. 2007.

controlled language: the next big thing in
translation? clientside news magazine,
7:21   24.

[namgoong and kim2007]namgoong, hyun
and hong-gee kim. 2007. ontology-based
controlled natural language editor using
id18 with lexical dependency. in
proceedings of iswc 2007 + aswc 2007,
volume 4825 of lncs, pages 353   366.
springer.

[ncr1978]ncr corporation, dayton, ohio,

usa, 1978. ncr fundamental english
dictionary.

[ne  cas2011]ne  cas, ivan. 2011. bdd as a

speci   cation and qa instrument. master   s
thesis, masaryk university, brno, czech
republic.

[nyberg, mitamura, and huijsen2003]
nyberg, eric, teruko mitamura, and
willem-olaf huijsen. 2003. controlled
language for authoring and translation. in
harold somers, editor, computers and
translation: a translator   s guide. john
benjamins publishing company, pages
245   281.

[o   brien2003]o   brien, sharon. 2003.

controlling controlled english     an
analysis of several controlled language
rule sets. in proceedings of eamt-claw03,
pages 105   114. dublin city university.

[o   brien and roturier2007]o   brien, sharon
and johann roturier. 2007. how portable
are controlled language rules? a
comparison of two empirical mt studies.
in proceedings of mt summit xi, pages
345   352. european association for
machine translation.

[ogden1930]ogden, charles k. 1930. basic

english: a general introduction with rules and
grammar. paul treber & co., london.
[omg2008]omg (object management

group), 2008. semantics of business

47

vocabulary and business rules (sbvr), v1.0.
http://www.omg.org/spec/sbvr/1.0/pdf.

the translation environment 10 years on,
number 10, pages 80   96. aslib.

[pease and li2010]pease, adam and john li.

[reuther2003]reuther, ursula. 2003. two in

computational linguistics

2010. controlled english to logic
translation. in roberto poli, michael healy,
and achilles kameas, editors, theory and
applications of ontology: computer
applications. springer netherlands, pages
245   258.

[piwek et al.2000]piwek, paul, roger evans,

lynne cahill, and neil tipper. 2000.
id86 in the mile
system. in proceedings of the impacts in
id86 workshop, pages 33   42.

[plain2011]plain (plain language action

and information network), 2011. federal
plain language guidelines.

[pool2006]pool, jonathan. 2006. can

controlled languages scale to the web? in
proceedings of claw 2006.

[power1999]power, richard. 1999.
controlling logical scope in text
generation. in proceedings of ewid86 1999,
pages 1   9.

[power2012]power, richard. 2012. owl

simpli   ed english: a    nite-state language
for ontology editing. in proceedings of cnl
2012, volume 7427 of lncs, pages 44   60.
springer.

[power and scott1998]power, richard and

donia scott. 1998. multilingual authoring
using feedback texts. in proceedings of
coling-acl    98, pages 1053   1059.
association for computational linguistics.

[pratt-hartmann2003]pratt-hartmann, ian.
2003. a two-variable fragment of english.
journal of logic, language and information,
12(1):13   45.

[pratt-hartmann2004]pratt-hartmann, ian.

2004. fragments of language. journal of
logic, language and information,
13(2):207   223.

[pratt-hartmann2009]pratt-hartmann, ian.

2009. computational complexity of
controlled natural languages. in
pre-proceedings of cnl 2009, volume 448 of
ceur workshop proceedings. ceur-ws.

[pratt-hartmann and third2006]

pratt-hartmann, ian and allan third.
2006. more fragments of language. notre
dame journal of formal logic, 47(2):151   177.

[pulman1996]pulman, stephen g. 1996.

controlled language for knowledge
representation. in proceedings of claw
1996, pages 233   242.

[pym1990]pym, peter j. 1990. pre-editing and

the use of simpli   ed writing for mt: an
engineer   s experience of operating an mt
system. in translating and the computer 10:

48

one: can it work? readability and
translatability by means of controlled
language. in proceedings of eamt-claw03,
pages 124   132. dublin city university.

[robertson1987]robertson, f.a. 1987.

airspeak     radiotelephony
communication for pilots. prentice hall.

[ross2003]ross, ronald g. 2003. principles of

the business rule approach. information
technology series. addison-wesley.

[ross2013]ross, ronald g. 2013. tabulation

of lists in rulespeak     using    the
following    clause. business rules journal,
14(4).

[ruf   no1982]ruf   no, j. richard. 1982.
coping with machine translation. in
v. lawson, editor, practical experience of
machine translation. north-holland
publishing company, pages 57   60.

[rychtyckyj2002]rychtyckyj, nestor. 2002.

an assessment of machine translation for
vehicle assembly process planning at ford
motor company. in proceedings of
amta2002, number 2499 in lnai, pages
207   215. springer.

[rychtyckyj2005]rychtyckyj, nestor. 2005.

ergonomics analysis for vehicle assembly
using arti   cial intelligence. ai magazine,
26(3):41   50.

[schwitter2002]schwitter, rolf. 2002. english

as a formal speci   cation language. in
proceedings of dexa    02, pages 228   232.
ieee computer society.

[schwitter2008]schwitter, rolf. 2008.

working for two: a bidirectional grammar
for a controlled natural language. in
proceedings of ai 2008, pages 168   179.
springer.

[schwitter and tilbrook2004]schwitter, rolf

and marc tilbrook. 2004. controlled
natural language meets the semantic web.
in proceedings of altw2004, volume 2 of
alta electronic proceedings, pages 55   62.
australasian language technology
association.

[sec1998]sec     u.s. securities and

exchange commission, 1998. a plain
english handbook     how to create clear sec
disclosure documents.

[shubert et al.1995]shubert, serena k., jan h.

spyridakis, heather k. holmback, and
mary b. coney. 1995. the
comprehensibility of simpli   ed english in
procedures. journal of technical writing and
communication, 25(4):347   369.

tobias kuhn

a survey and classi   cation of controlled natural languages

[skuce2003]skuce, doug. 2003. a controlled

language for knowledge formulation on
the semantic web.
http://www.site.uottawa.ca:4321/factguru2.pdf.

[smart2003]smart, john m. 2003. controlled

english for global business. writing for
translation     the guide from multilingual
computing & technology, (59):19   21.

[smart2006]smart, john m. 2006. smart

controlled english. in proceedings of claw
2006.

[smart communications inc.1994]smart
communications inc. 1994. news from
smart communications, inc. in mt news
international     newsletter of the
international association for machine
translation, issue no. 7.

[sowa2000a]sowa, john f. 2000a. controlled

english.
http://users.bestweb.net/~sowa/misc/ace.htm.

[sowa2000b]sowa, john f. 2000b. ontology,
metadata, and semiotics. in proceedings of
iccs 2000, volume 1867 of lncs, pages
55   81. springer.

[sowa2004]sowa, john f. 2004. common

logic controlled english (draft).
http://www.jfsowa.com/clce/specs.htm.

[spaggiari, beaujard, and cannesson2003]

spaggiari, laurent, florence beaujard, and
emmanuelle cannesson. 2003. a
controlled language at airbus. in
proceedings of eamt-claw03, pages
151   159. dublin city university.

[stewart1998]stewart, kathleen m. 1998.

effect of aecma simpli   ed english on the
comprehension of aircraft maintenance
procedures by non-native english
speakers. master   s thesis, university of
british columbia.

[strevens and johnson1983]strevens, peter

and edward johnson. 1983. seaspeak: a
project in applied linguistics, language
engineering, and eventually esp for
sailors. esp journal, 2(2):123   129.

[sukkarieh2003]sukkarieh, jana z. 2003.

mind your language! controlled language
for id136 purposes. in proceedings of
eamt-claw03, pages 160   169. dublin
city university.

[sukkarieh and pulman1999]sukkarieh,
jana z. and stephen g. pulman. 1999.
computer processable english and
mclogic. in proceedings of iwcs-3, pages
367   380.

[temnikova2010]temnikova, irina. 2010.

cognitive evaluation approach for a
controlled language post-editing
experiment. in proceedings of lrec   10,
pages 3485   3490. european language

resources association (elra).

[temnikova2011]temnikova, irina. 2011.

establishing implementation priorities in
aiding writers of controlled crisis
management texts. in proceedings of
ranlp 2011, pages 654   659. acl
anthology.

[temnikova2012]temnikova, irina. 2012. text

complexity and text simpli   cation in the
crisis management domain. ph.d. thesis,
university of wolverhampton.

[temnikova and orasan2009]temnikova,

irina and constantin orasan. 2009.
post-editing experiments with mt for a
controlled language. in proceedings of
ismtcl, pages 244   248. presses
universitaires de franche-compt  .

[thorne and calvanese2010]thorne, camilo

and diego calvanese. 2010. controlled
english ontology-based data access. in
proceedings of cnl 2009, volume 5972 of
lncs, pages 135   154. springer.

[valencia-garc  a et al.2011]valencia-garc  a,

rafael, francisco garc  a-s  nchez,
dagoberto castellanos-nieves, and
jesualdo tom  s fern  ndez-breis. 2011.
owlpath: an owl ontology-guided
query editor. ieee transactions on systems,
man, and cybernetics, part a, 41(1):121   136.

[van kleek et al.2010]van kleek, max,
brennan moore, david karger, paul
andr  , and m.c. schraefel. 2010. atomate
it! end-user context-sensitive automation
using heterogeneous information sources
on the web. in proceedings of www 2010,
pages 951   960. acm.

[van renssen2005]van renssen, andries.

2005. gellish: a generic extensible
ontological language. ph.d. thesis, delft
university of technology.

[van renssen2011]van renssen, andries.

2011. modeling of textual requirements in
a gellish universal database. in proceedings
of fomi 2011, volume 229 of frontiers in
arti   cial intelligence and applications, pages
102   115. ios press.

[verbeke1973]verbeke, charles a. 1973.

caterpillar fundamental english. training
& development journal, 27(2):36   40.

[vershinin and paskevich2000]vershinin,

konstantin and andrey paskevich. 2000.
forthel     the language of formal theories.
international journal of information theories
and applications, 7(3):120   126.

[voice of america2009]voice of america,

2009. voa special english word book: a list
of words used in special english programs on
radio, television, and the internet.

49

computational linguistics

[warren and pereira1982]warren, david

h. d. and fernando c. n. pereira. 1982. an
ef   cient easily adaptable system for
interpreting natural language queries.
american journal of computational
linguistics, 8(3-4):110   122.

[wells akis and sisson2002]wells akis,
jennifer and william r. sisson. 2002.
improving translatability: a case study at
sun microsystems, inc. the globalization
insider, (4.5).

[wojcik, harrison, and bremer1993]wojcik,

richard h, philip harrison, and john
bremer. 1993. using bracketed parses to
evaluate a grammar checking application.
in proceedings of acl    93, pages 38   45.
association for computational linguistics.

[wojcik and hoard1997]wojcik, richard h.

and james e. hoard. 1997. controlled
languages in industry. in ronald a. cole,
editor, survey of the state of the art in human
language technology. cambridge university
press, pages 238   239.

[wojcik, holmback, and hoard1998]wojcik,

richard h., heather holmback, and
james e. hoard. 1998. boeing technical
english: an extension of aecma se
beyond the aircraft maintenance domain.
in proceedings of claw    98, pages 114   123.

[wyner et al.2010]wyner, adam, krasimir

angelov, guntis barzdins, danica
damljanovic, brian davis, norbert fuchs,
stefan hoe   er, ken jones, kaarel
kaljurand, tobias kuhn, martin luts,
jonathan pool, mike rosner, rolf
schwitter, and john sowa. 2010. on
controlled natural languages: properties
and prospects. in proceedings of cnl 2009,
volume 5972 of lncs, pages 281   289.
springer.

50

