generation and comprehension of unambiguous object descriptions

junhua mao2    jonathan huang1 alexander toshev1 oana camburu3 alan yuille2,4 kevin murphy1
1google inc.
3university of oxford 4johns hopkins university

2university of california, los angeles

{mjhustc@,yuille@stat.}ucla.edu, oana-maria.camburu@cs.ox.ac.uk

{jonathanhuang,toshev,kpmurphy}@google.com

6
1
0
2

 
r
p
a
1
1

 

 
 
]

v
c
.
s
c
[
 
 

3
v
3
8
2
2
0

.

1
1
5
1
:
v
i
x
r
a

abstract

we propose a method that can generate an unambigu-
ous description (known as a referring expression) of a spe-
ci   c object or region in an image, and which can also com-
prehend or interpret such an expression to infer which ob-
ject is being described. we show that our method outper-
forms previous methods that generate descriptions of ob-
jects without taking into account other potentially ambigu-
ous objects in the scene. our model is inspired by recent
successes of deep learning methods for image captioning,
but while image captioning is dif   cult to evaluate, our task
allows for easy objective evaluation. we also present a new
large-scale dataset for referring expressions, based on ms-
coco. we have released the dataset and a toolbox for visu-
alization and evaluation, see https://github.com/
mjhucla/google_refexp_toolbox.
1. introduction

there has been a lot of recent interest in generating text
descriptions of images (see e.g., [13, 53, 9, 5, 12, 26, 28, 40,
55, 8]). however, fundamentally this problem of image cap-
tioning is subjective and ill-posed. with so many valid ways
to describe any given image, automatic captioning methods
are thus notoriously dif   cult to evaluate. in particular, how
can we decide that one sentence is a better description of an
image than another?

in this paper, we focus on a special case of text genera-
tion given images, where the goal is to generate an unam-
biguous text description that applies to exactly one object or
region in the image. such a description is known as a    refer-
ring expression    [50, 52, 41, 42, 14, 19, 27]. this approach
has a major advantage over generic image captioning, since
there is a well-de   ned performance metric: a referring ex-
pression is considered to be good if it uniquely describes
the relevant object or region within its context, such that a
listener can comprehend the description and then recover
the location of the original object. in addition, because of

the major part of this work was done while j. mao and o. camburu

were interns at google inc.

figure 1. illustration of our generation and comprehension system.
on the left we see that the system is given an image and a region
of interest; it describes it as    the man who is touching his head   ,
which is unambiguous (unlike other possible expressions, such as
   the man wearing blue   , which would be unclear). on the right we
see that the system is given an image, an expression, and a set of
candidate regions (bounding boxes), and it selects the region that
corresponds to the expression.

the discriminative nature of the task, referring expressions
tend to be more detailed (and therefore more useful) than
image captions. finally, it is easier to collect training data
to    cover    the space of reasonable referring expressions for
a given object than it is for a whole image.

we consider two problems: (1) description generation,
in which we must generate a text expression that uniquely
pinpoints a highlighted object/region in the image and (2)
description comprehension, in which we must automati-
cally select an object given a text expression that refers to
this object (see figure 1). most prior work in the litera-
ture has focused exclusively on description generation (e.g.,
[31, 27]). golland et al. [19] consider generation and com-
prehension, but they do not process real world images.

in this paper, we jointly model both tasks of description
generation and comprehension, using state-of-the-art deep
learning approaches to handle real images and text. specif-
ically, our model is based upon recently developed methods
that combine convolutional neural networks (id98s) with
recurrent neural networks (id56s). we demonstrate that
our model outperforms a baseline which generates referring

1

   the man who is touching his head.   whole frame imageobject bounding boxreferring expressionour modelwhole frame image & region proposalsinputoutputdescription generationdescription comprehensioninputinputoutputchosen region in redinputexpressions without regard to the listener who must com-
prehend the expression. we also show that our model can
be trained in a semi-supervised fashion, by automatically
generating descriptions for image regions.

being able to generate and comprehend object descrip-
tions is critical in a number of applications that use nat-
ural language interfaces, such as controlling a robot (e.g.,
   rosie, please fetch me the beer from the top shelf of the
fridge   , cf. [4]), or interacting with photo editing software
(e.g.,    picasa, please replace the third car behind the fence
with a motorbike   , cf. [6]). in addition, it is a good test bed
for performing research in the area of vision and language
systems because of the existence of a useful objective per-
formance measure.

in order to train and evaluate our system, we have col-
lected and released a new large scale referring expressions
dataset based on the popular ms-coco dataset [37].

to summarize, our main contributions are as follows.
first, we present a new large scale dataset for referring ex-
pressions. second, we evaluate how existing image caption-
ing methods perform at the referring expression task. third,
we develop a new method for joint generation and compre-
hension that outperforms current methods.

2. related work
referring expressions. referring expression generation is
a classic nlp problem (see e.g., [54, 31]). important is-
sues include understanding what types of attributes people
typically use to describe visual objects (such as color and
size) [42], usage of higher-order relationships (e.g., spatial
comparison) [52], and the phenomena of over and under-
speci   cation, which is also related to speaker variance [14].
context (sometimes called pragmatics [20]) plays a crit-
ical role in several ways [30]. first, the speaker must dif-
ferentiate the target object from a collection of alternatives
and must thus reason about how the object differs from its
context. second, the perception of the listener is also valu-
able. in particular, golland et al. [19] recently proposed a
game theoretic formulation of the referring expression prob-
lem showing that speakers that act optimally with respect to
an explicit listener model naturally adhere to the gricean
maxims of communication [22].

in most of this previous work, authors have focused
on small datasets of computer generated objects (or pho-
tographs of simple objects) [50, 41] and have not connected
their text generation systems to real vision systems. how-
ever there has been recent interest in understanding refer-
ring expressions in the context of complex real world im-
ages, for which humans tend to generate longer phrases
[18]. kazemzadeh et al. [27] were the    rst to collect a large
scale dataset of referring expressions for complex real world
photos.

we likewise collect and evaluate against a large scale

dataset. however we go beyond expression generation and
jointly learn both generation and comprehension models.
and where prior works have had to explicitly enumerate at-
tribute categories such as size, color (e.g. [47]) or manually
list all possible visual phrases (e.g. [46]), our deep learning-
based models are able to learn to directly generate surface
expressions from raw images without having to    rst convert
to a formal object/attribute representation.

concurrently, [24] propose a id98-id56 based method
that is similar to our baseline model and achieve state-of-
the-art results on the referit dataset [27]. but they did not
use the discriminative training strategy proposed in our full
model. [25, 32] investigate the task of generating dense de-
scriptions in an image. but their descriptions are not re-
quired to be unambiguous.
image captioning. our methods are inspired by a long line
of inquiry in joint models of images and text, primarily in
the vision and learning communities [13, 23, 49, 43, 34, 56,
36]. from a modeling perspective, our approach is closest
to recent works applying id56s and id98s to this problem
domain [53, 9, 5, 12, 26, 28, 40, 55]. the main approach
in these papers is to represent the image content using the
hidden activations of a id98, and then to feed this as input to
an id56, which is trained to generate a sequence of words.
most papers on image captioning have focused on de-
scribing the full image, without any spatial localization.
however, we are aware of two exceptions.
[55] propose
an attention model which is able to associate words to spa-
tial regions within an image; however, they still focus on
the full image captioning task.
[26] propose a model for
aligning words and short phrases within sentences to bound-
ing boxes; they then train an model to generate these short
snippets given features of the bounding box. their model
is similar to our baseline model, described in section 5 (ex-
cept we provide the alignment of phrases to boxes in the
training set, similar to [45]). however, we show that this
approach is not as good as our full model, which takes into
account other potentially confusing regions in the image.
visual id53. referring expressions is re-
lated to the task of vqa (see e.g., [2, 38, 39, 16, 15]).
in particular, referring expression comprehension can be
turned into a vqa task where the speaker asks a question
such as    where in the image is the car in red?    and the sys-
tem must return a bounding box (so the answer is numer-
ical, not linguistic). however there are philosophical and
practical differences between the two tasks. a referring ex-
pression (and language in general) is about communication
    in our problem, the speaker is    nding the optimal way to
communicate to the listener, whereas vqa work typically
focuses only on answering questions without regard to the
listener   s state of mind. additionally, since questions tend
to be more open ended in vqa, evaluating their answers
can be as hard as with general image captioning, whereas

figure 2. some sample images from our google refexp (g-ref) dataset. we use a green dot to indicate the object that the descriptions
refer to. since the dataset is based on ms coco, we have access to the original annotations such as the object mask and category. some
of the objects are hard to describe, e.g., in the third image in the    rst row, we need to distinguish the boy from his re   ection in the mirror.

kept it, otherwise we discarded it and re-annotated it by
another worker. we repeated these description generation
and veri   cation tasks on mechanical turk iteratively up to
three times. in this way, we selected 104,560 expressions.
each object has on average 1.91 expressions, and each im-
age has on average 3.91 expressions. this dataset is denoted
as google refexp dataset and some samples are shown in
figure 2. we have released this dataset and a toolbox for vi-
sualization and evaluation, see https://github.com/
mjhucla/google_refexp_toolbox.

while we were collecting our dataset, we learned that
tamara berg had independently applied her referit game
[27] to the mscoco dataset to generate expressions for
50,000 objects from 19,994 images. she kindly shared
her data (named as unc-ref-coco dataset) with us. for
brevity, we call our google refexp dataset as g-ref and
the unc-ref-coco as unc-ref. we report results on
both datasets in this paper. however, due to differences in
our collection methodologies, we have found that the de-
scriptions in the two overlapped datasets exhibit signi   cant
qualitative differences, with descriptions in the unc-ref
dataset tending to be more concise and to contain less    ow-
ery language than our descriptions. 1 more speci   cally, the
average lengths of expressions from our dataset and unc-
ref are 8.43 and 3.61 respectively. and the size of the
word dictionaries (keeping only words appearing more than
3 times) from our dataset and unc-ref are 4849 and 2890
respectively. see figure 3 for some visual comparisons.
4. tasks

in this section, we describe at a high level how we solve
the two main tasks of description and generation. we will
describe the model details and training in the next section.
4.1. generation

in the description generation task, the system is given
a full image and a target object (speci   ed via a bound-
1according to our personal communication with the authors of the
unc-ref dataset, the instruction and reward rule of unc-ref encourages
the annotators to give a concise description in a limited time, while in our
g-ref dataset, we encourage the annotators to give rich and natural de-
scriptions. this leads to different styles of annotations.

figure 3. comparison between the g-ref and unc-ref dataset.
evaluating the accuracy of a bounding box is easy.

3. dataset construction

the largest existing referring expressions dataset that we
know of is the referit dataset, which was collected by [27],
and contains 130,525 expressions, referring to 96,654 dis-
tinct objects, in 19,894 photographs of natural scenes. im-
ages in this dataset are from the segmented and annotated
tc-12 expansion of the imageclef iapr dataset [11].
two drawbacks of this dataset, however, are that (1) the im-
ages sometimes only contain one object of a given class,
allowing speakers to use short descriptions without risking
ambiguity, and (2) the imageclef dataset focuses mostly
on    stuff    (i.e. context) rather than    things    (i.e. objects).

in this paper, we use a similar methodology to that
of [27], but building instead on top of the mscoco dataset
[37], which contains more than 300,000 images, with 80
categories of objects segmented at the instance level.

for each image, we selected objects if (1) there are be-
tween 2 and 4 instances of the same object type within the
same image, and (2) if their bounding boxes occupy at least
5% of image area. this resulted in selecting 54,822 ob-
jects from 26,711 images. we constructed a mechanical
turk task in which we presented each object in each im-
age (by highlighting the object mask) to a worker whose
task was to generate a unique text description of this ob-
ject. we then used a second task in which a different
worker was presented with the image and description, and
was asked to click inside the object being referred to.
if
the selected point was inside the original object   s segmen-
tation mask, we considered the description as valid, and

a boy brushing his hair while looking at his reflection.a young male child in pajamas shaking around a hairbrush in the mirror.zebra looking towards the camera.a zebra third from the left.the black and yellow backpack sitting on top of a suitcase.a yellow and black back pack sitting on top of a blue suitcase.a girl wearing glasses and a pink shirt.an asian girl with a pink shirt eating at the table.an apple desktop computer.the white imac computer that is also turned on.a bird that is close to the baby in a pink shirt.a bird standing on the shoulder of a person with its tail touching her face.the woman in black dress.a lady in a black dress cuts a wedding cake with her new husband.a woman in a flowered shirt.woman in red shirt.bottom left apple.bottom left.the bottom apple.green apple on the bottom-left corner, under the lemon and on the left of the orange.a green apple on the left of a orange.goalie.right dude.orange shirt.the goalie wearing an orange and black shirt.a male soccer goalkeeper wearing an orange jersey in front of a player ready to score.unc-ref-coco (unc-ref)google refexp (g-ref)ing box), and it must generate a referring expression
for the target object. formally, the task is to compute
argmaxsp(s|r, i), where s is a sentence, r is a region,
and i is an image.
since we will use id56s to represent p(s|r, i), we can
generate s one word at a time until we generate an end of
sentence symbol. computing the globally most probable
sentence is hard, but we can use id125 to approx-
imately    nd the most probable sentences (we use a beam
size of 3). this is very similar to a standard image caption-
ing task, except the input is a region instead of a full image.
the main difference is that we will train our model to gener-
ate descriptions that distinguish the input region from other
candidate regions.

4.2. comprehension

in the description comprehension task, we are given a
full image and a referring expression and are asked to lo-
calize the the object being referred to within the image by
returning a bounding box. one approach would be to train
a model to directly predict the bounding box location given
the referring expression (and image). however, in this pa-
per, we adopt a simpler, ranking-based approach. in partic-
ular, we    rst generate a set c of region proposals, and then
ask the system to rank these by id203. then we se-
lect the region using r    = argmaxr   cp(r|s, i), where,
by bayes    rule, we have

p(r|s, i) =

(cid:80)
p(s|r, i)p(r|i)
r(cid:48)   c p(s|r(cid:48), i)p(r(cid:48)|i)

.

(1)

if we assume a uniform prior for p(r|i),2 we can select the
region using r    = argmaxr   cp(s|r, i). this strategy is
similar to id162 methods such as [29, 40], where
the regions play the role of images.

at test time, we use the multibox method of [10] to gen-
erate objects proposals. this generates a large number of
class agnostic bounding boxes. we then classify each box
into one of the 80 ms-coco categories, and discard those
with low scores. we use the resulting post-classi   cation
boxes as the proposal set c. to get an upper bound on per-
formance, we also use the ground truth bounding boxes for
all the objects in the image. in both cases, we do not use the
label for the object of interest when ranking proposals.

5. the baseline method

in this section we explain our baseline method for com-

puting p(s|r, i).

2 this implies that we are equally likely to choose any region to de-
scribe. this is approximately true by virtue of the way we constructed the
dataset. however, in real applications, region saliency p(r|i) should be
taken into account.

figure 4. llustration of the baseline model architecture. (cid:104)bos(cid:105) and
(cid:104)eos(cid:105) stand for beginning and end of sentence.
5.1. model architecture

our baseline model is similar to other image captioning
models that use a id98 to represent the image, followed by
an lstm to generate the text (see e.g., [40, 9, 53]). the
main difference is that we augment the id98 representation
of the whole image with a id98 representation of the region
of interest, in addition to location information. see figure 4
for an illustration of our baseline model.

in more detail, we use vggnet [48] as our id98, pre-
trained on the id163 dataset [7, 33]. the last 1000 di-
mensional layer of vggnet is used as our representation of
the object region. in addition, we compute features for the
whole image, to serve as context. in experiments, we only
   ne-tuned the weights for the last layer of the id98 and
   xed all other layers. to feed a region to the id98, we keep
the aspect ratio of the region    xed and scale it to 224    224
resolution, padding the margins with the mean pixel value
(this is similar to the region warping strategy in [17]). this
gives us a 2000-dimensional feature vector, for the region
and image.

h , xbr

w , ybr

h , sbbox
simage

we encode the relative location and size of

the
follows:
region using a 5 dimensional vector
w , ytl
], where (xtl, ytl) and (xbr, ybr)
[ xtl
are the coordinates of the top left and bottom right corners
of the object bounding box, h and w are height and width
of the image, and sbbox and simage are the sizes of the
bounding box and image respectively.

as

concatenating with the region, image, and location/size
features, we obtain a 2005-dimensional vector which we
feed as input into an lstm sequence model, which pa-
rameterizes the form of the distribution p(s|r, i). for
our lstms, we use a 1024-dimensional word-embedding
space, and 1024-dimensional hidden state vector. we adopt
the most commonly used vanilla lstm structure [21] and
feed the visual representation as input to the lstm at each
time step.
5.2. maximum likelihood training

our training data (discussed in section 3) consists of ob-
served triplets (i, r, s), where i is an image, r denotes a
region within i, and s denotes a referring expression for r.
to train the baseline model, we minimize the negative log
id203 of the referring expressions given their respec-
tive region and image:

log p(sn|rn, in,   ),

(2)

j(  ) =     n(cid:88)

n=1

<bos>theingirlpinkthegirlpinkin<eos>lstmregion id98the main intuition behind mmi training is that we want
to consider whether a listener would interpret the sentence
unambiguously. we do this by penalizing the model if it
thinks that a referring expression for a target object could
also be plausibly generated by some other object within the
same image. thus given a training sample (i, r, s), we
train a model that outputs a high p(s | r, i), while main-
taining a low p(s | r(cid:48), i), whenever r(cid:48)
(cid:54)= r. note that
this stands in contrast to the maximum likelihood (ml)
objective function in equation 2 which directly maximizes
p(s|r) without considering other objects in the image.
there are several ways to select the region proposals c.
we could use all the true object bounding boxes, but this
tends to waste time on objects that are visually very easy
to discriminate from the target object (hence we call these
   easy ground truth negatives   ). an alternative is to select
true object bounding boxes belonging to objects of the same
class as the target object; these are more confusable (hence
we call them    hard ground truth negatives   ). finally, we
can use multibox proposals, the same as we use at test time,
and select the ones with the same predicted object labels as
r (hence we call them    hard multibox negatives   ). we will
compare these different methods in section 8.2. we use 5
random negatives at each step, so that all the data for a given
image    ts into gpu memory.
to optimize equation 3, we must replicate the network
(using tied weights) for each region r(cid:48)     c(in) (including
the true region rn), as shown in figure 5. the resulting
mmi trained model has exactly the same number of param-
eters as the ml trained model, and we use the same opti-
mization and id173 strategy as in section 5.2. thus
the only difference is the objective function.

for computational reasons, it is more convenient to use
the following max-margin loss, which compares the target
region r against a single random negative region r(cid:48):

{log p(sn|rn, in,   )   

(6)

n=1

   max(0, m     log p(sn|rn, in,   ) + log p(sn|r(cid:48)

n, in,   ))}

this objective, which we call max-margin mmi (or mmi-
mm) intuitively captures a similar effect as its softmax
counterpart (mmi-softmax) and as we show in section 8.2,
yields similar results in practice. however, since the max-
margin objective only compares two regions, the network
must only be replicated twice. consequently, less mem-
ory is used per sentence, allowing for more sentences to be
loaded per minibatch which in turn helps in stabilizing the
gradient.
7. semi-supervised training

collecting referring expressions data can be expensive.
in this section we discuss semi-supervised training of our
full model by making use of bounding boxes that do not

j(cid:48)(cid:48)(  ) =     n(cid:88)

figure 5. illustration of how we train the full model using the soft-
max id168. r (green) is the target region, r(cid:48) are the incor-
rect regions. the weights of the lstms and id98s are shared for
r and r(cid:48)s. (best viewed in color)
where    are the parameters of the id56 and id98, and
where we sum over the n examples in the training set. we
use ordinary stochastic gradient decent with a batch size of
16 and use an initial learning rate of 0.01 which is halved ev-
ery 50,000 iterations. gradient norms are clipped to a max-
imum value of 10. to combat over   tting, we regularize us-
ing dropout with a ratio of 0.5 for both the word-embedding
and output layers of the lstm.
6. the full method

the baseline method is to train the model to maximize
p(s|r, i), as is common for id98-lstm based image cap-
tioning models. however a strategy that directly generates
an expression based only on the target object (which [19]
calls the re   ex speaker strategy) has the drawback that it
may fail to generate discriminative sentences. for exam-
ple, consider figure 4: to generate a description of the girl
highlighted by the green bounding box, generating the word
   pink    is useful since it distinguishes this girl from the other
girl on the right. to this end, we propose a modi   ed training
objective, described below.
6.1. discriminative (mmi) training

section 5.2 proposed a way to train the model using max-
imum likelihood. we now propose the following alternative
objective function:

(  ) =     n(cid:88)

(cid:48)

j

where

n=1

log p(rn|sn, in,   ) = log

log p(rn|sn, in,   ),

(cid:80)
r(cid:48)   c(in) p(sn|r(cid:48), in,   )

p(sn|rn, in,   )

.

(3)

(4)

we will call this the softmax loss. note that this is the same
as maximizing the mutual information between s and r
(assuming a uniform prior for p(r)), since

mi(s, r) = log

p(s, r)
p(r)p(s)

where p(s) =(cid:80)

r(cid:48) p(s|r(cid:48))p(r(cid:48)) =(cid:80)

(5)
r(cid:48) p(s|r(cid:48)). hence
this approach is also called maximum mutual information
(mmi) training [3].

= log

.

p(s|r)
p(s)

<bos>theingirlpinkthegirlpinkin<eos>lstmregion id98loss......rr   1r   mproposals

gt

ml (baseline)
mmi-mm-easy-gt-neg
mmi-mm-hard-gt-neg
mmi-mm-multibox-neg
mmi-softmax

descriptions gen
0.803
0.851
0.857
0.848
0.848

gt
0.654
0.677
0.699
0.695
0.689

multibox
gt
0.478
0.492
0.503
0.511
0.502

gen
0.564
0.590
0.591
0.604
0.591

table 1. we measure precision@1 on the unc-ref validation data.
each row is a different way of training the model. the columns
show performance on ground truth or multibox proposals, and
ground truth (human) or generated descriptions. thus the columns
with gt descriptions evaluate the performance of the comprehen-
sion system, and the columns with gen descriptions evaluate (in
an end-to-end way) the performance of the generation system.

the comprehension task is easy to evaluate: we simply
compute the intersection over union (iou) ratio between
the true and predicted bounding box. if iou exceeds 0.5, we
call the detection a true positive, otherwise it is a false pos-
itive (this is equivalent to computing the precision@1 mea-
sure). we then average this score over all images.

the generation task is more dif   cult     we can evaluate
a generated description in the same way as an image de-
scription, using metrics such as cider [51], id7 [44] and
meteor [35]. however these metrics can be unreliable
and do not account for semantic meaning. we rely instead
on human evaluation, as was done in the most recent image
captioning competition [1]. in particular, we asked amazon
mechanical turk (amt) workers to compare an automati-
cally generated object description to a human generated ob-
ject description, when presented with an image and object
of interest. the amt workers do not know which sentences
are human generated and which are computer generated (we
do not even tell them that some sentences might be com-
puter generated to reduce possible bias). we simply ask
them to judge which sentence is a better description, or if
they are equally good.

in addition to human evaluation, which does not scale,
we evaluate our entire system by passing automatically gen-
erated descriptions to our comprehension system, and veri-
fying that they get correctly decoded to the original object
of interest. this end-to-end test is automatic and much more
reliable than standard image captioning metrics.
8.2. comparing different training methods

in this section, we compare different ways of training our
model: maximum likelihood training (the baseline method);
max-margin loss with easy ground truth negatives (   mmi-
mm-easy-gt-neg   ); max-margin loss with hard ground
truth negatives (   mmi-mm-hard-gt-neg   ); max-margin
loss with hard multibox negatives (   mmi-mm-multibox-
neg   ); softmax/mmi loss with hard multibox negatives
(   mmi-softmax   ). for each method, we consider using
either ground truth or multibox proposals at test time. in

figure 6. ilustration of the semi-supervised training process. see
text for details.
have descriptions, and thus are more ubiquitously available.
our main intuition for why a bounding box (region) r can
be useful even without an accompanying description is be-
cause it allows us to penalize our model during mmi train-
ing if it generates a sentence that it cannot itself decode to
correctly recover r (recall that mmi encourages p(s|r, i)
to be higher than p(s|r(cid:48), i), whenever r(cid:48) (cid:54)= r).

in this semi-supervised setting, we consider a small
dataset dbb+txt of images with bounding boxes and de-
scriptions, together with a larger dataset dbb of images
and bounding boxes, but without descriptions. we use
dbb+txt to train a model (which we call model g) to com-
pute p(s|r, i). we then use this model g to generate
a set of descriptions for the bounding boxes in dbb (we
call this new dataset dbb+auto). we then retrain g on
dbb+txt     dbb+auto, in the spirit of bootstrap learning.

the above strategy suffers from the    aw that not all
of the generated sentences are reliable, which may    pol-
lute    the training set. to handle this, we train an ensem-
ble of different models on dbb+txt (call them model c),
and use these to determine which of the generated sen-
tences for dbb+auto are trustworthy. in particular, we ap-
ply each model in the ensemble to decode each sentence in
dbb+auto, and only keep the sentence if every model maps
it to the same correct object; we will call the resulting veri-
   ed dataset d   ltered. this ensures that the generator creates
referring expressions that can be understood by a variety of
different models, thus minimizing over   tting. see figure 6
for an illustration.
in the experiments, we show that our
model bene   ts from this semi-supervised training.

8. experiments

we conducted experiments on both of the coco refer-
ring expression datasets mentioned in section 3: our g-ref
dataset and the unc-ref dataset. we randomly chose 5,000
objects as the validation set, 5,000 objects as the testing set
and the remaining objects as the training set (44,822 for g-
ref and 40,000 for unc-ref).
8.1. id74

in this section, we describe how we evaluate perfor-

mance of the comprehension and generation tasks.

the girl in pink.fully supervised imagesmodel gmodel ctrainonly bounding boxeswith generated descriptionsthe woman in blue.generate descriptionsverificationre-traindbb+txtdbbdbb+autodfilteredproposals

gt

descriptions gen

0.751
0.799

gt
g-ref-val
0.579
0.607
g-ref-test
0.545
0.769
0.811
0.606
unc-ref-val
0.803
0.654
0.848
0.695
unc-ref-test
0.643
0.834
0.851
0.700

multibox

gen

gt

0.468
0.500

0.485
0.513

0.564
0.604

0.596
0.603

0.425
0.445

0.406
0.446

0.478
0.511

0.477
0.518

baseline
full model

baseline
full model

baseline
full model

baseline
full model

table 2. precision@1 for the baseline (ml) method and our full
model with the max-margin objective function on various datasets.

addition, we consider both ground truth descriptions and
generated descriptions.

in this experiment we treat unc-ref as a validation set
to explore various algorithmic options and hyperparameter
settings for mmi. only after having    xed these algorithmic
options and hyperparameter settings did we do experiments
on our g-ref dataset (section 8.3). this reduces the risk
that we will have    over   t    our hyperparameters to each par-
ticular dataset. the results are summarized in table 1 and
we draw the following conclusions:

    all models perform better on generated descriptions
than the groundtruth ones, possibly because the gener-
ated descriptions are shorter than the groundtruth (5.99
words on average vs 8.43), and/or because the genera-
tion and comprehension models share the same param-
eters, so that even if the generator uses a word incor-
rectly (e.g., describing a    dog    as a    cat   ), the compre-
hension system can still decode it correctly. intuitively,
a model might    communicate    better with itself using
its own language than with others.
    all the variants of the full model (using mmi training)
work better than the strong baseline using maximum
likelihood training.
    the softmax version of mmi training is similar to the
    mmi training bene   ts more from hard negatives than
    training on ground truth negatives helps when using
ground truth proposals, but when using multibox pro-
posals (which is what we can use in practice), it is bet-
ter to use multibox negatives.

max-margin method, but slightly worse.

easy ones.

based on the above results, for the rest of the paper we
will use max-margin training with hard multibox negatives
as our full model.

proposals

gt

multibox

descriptions gen

gt

gen

gt

dbb+txt
dbb+txt     dbb

dbb+txt
dbb+txt     dbb

g-ref

0.791
0.793

0.561
0.577

unc-ref

0.826
0.833

0.655
0.660

0.489
0.489

0.588
0.591

0.417
0.424

0.483
0.486

table 3. performance of our full model when trained on a small
strongly labeled dataset vs training on a larger dataset with auto-
matically labeled data.

8.3. fully-supervised training

in this section, we compare the strong baseline (max-
imum likelihood) with our max-margin mmi method on
the validation and test sets from g-ref and unc-ref. as
before, we consider ground truth and multibox proposals
at test time, and ground truth (human) or generated (auto-
matic) descriptions. the results are shown in table 2. we
see that mmi training outperforms ml training under every
setting. 3

in addition to the above end-to-end evaluation, we use
human evaluators to judge generated sentence quality. in
particular, we selected 1000 objects at random from our test
set, and showed them to amazon mechanical turk workers.
the percentage of descriptions that are evaluated as better
or equal to a human caption for the baseline and the full
model are 15.9% and 20.4% respectively. this shows that
mmi training is much better (4.5% absolute improvement,
and 28.5% relative) than ml training.

8.4. semi-supervised training

to conduct the semi-supervised training experiment, we
separate the training set of our g-ref dataset and the unc-
ref dataset into two parts with the same number of ob-
jects. the    rst part (denoted by dbb+txt) has the object
description annotations while the second part (denoted by
dbb) only has object bounding boxes. table 3 shows the
results of semi-supervised training on the validation set of
our dataset and unc-ref. we see that we get some im-
provement by training on dbb+txt     dbb over just using
dbb+txt.
8.5. qualitative results

in figure 7 we show qualitative results of our full gen-
eration model (above the dashed line) and the baseline gen-
eration model (below the dashed line) on some of our test
images. we see that the descriptions generated by our full

3we also train our baseline and full model on a random train, val, and
test split w.r.t. to the images of our g-ref dataset. the results are consis-
tent with those in table 2. with multibox proposals and gt descriptions,
the precision@1 of the baseline and full model are 0.404 and 0.444 on val
set, and 0.407 and 0.451 on test set respectively.

figure 7. the sample results of the description generation using our full model (above the dashed line) and the strong baseline (below the
dashed line). the descriptions generated by our full model are more discriminative than those generated by the baseline.

figure 8. sample results of the description comprehension task using our full model. the    rst and second column shows the original
image and the multibox proposals. the third to sixth columns show the results of our model when input an arbitrary description of an
object in the image. the red bounding box denotes the most probable object predicted by the model while the blue dashed ones denote the
bounding boxes within the margin of the most probable one. the descriptions can be the groundtruth ones in the dataset (third column) or
an customized descriptions (fourth to sixth columns). (best viewed in color)

model are typically longer and more discriminative than the
baseline model. in the second image, for example, the base-
line describes one of the cats as    a cat laying on a bed   ,
which is not suf   ciently unambiguous for a listener to un-
derstand which cat is being described. our full model, on
the other hand, describes the same cat as    a cat laying on

the left    which is completely unambiguous.

figure 8 shows some qualitative results of our full com-
prehension model on our test dataset. the    rst and second
columns show the original image and the multibox propos-
als respectively. the last four columns show the bounding
boxes (denoted as a red bounding box in the    gure) selected

a cat laying on the left.a black cat laying on the right.a cat laying on a bed.a black and white cat.a zebra standing behind another zebra.a zebra in front of another zebra.a zebra in the middle.a zebra in front of another zebra.a baseball catcher.a baseball player swing a bat.the umpire in the black shirt.the catcher.the baseball player swing a bat.an umpire.a brown horse in the right.a white horse.a brown horse.a white horse.the skis.guy with dark short hair in a white shirt.a woman with curly hair playing wii.the controller in the woman's hand.*the woman in white.the giraffe behind the zebra that is looking up.the giraffe with its back to the camera.the giraffe on the right.a zebra.a dark brown horse with a white stripe wearing a black studded harness.a white horse carrying a man.a woman on the dark horse.a dark horse carrying a woman.a red suitcase.a black suitcase.a black carry-on suitcase with wheelsthe truck in the background.the man in black.the man in red.a skier with a black helmet, light blue and black jacket, backpack, and light grey pants standing.imagemultibox proposalsdescription comprehension resultsby our full model in response to different input sentences
(both ground truth sentences and ones we created to probe
the comprehension abilities of the model). to better inter-
pret these results, we also show the bounding boxes that are
within the margin of the model (see eqn. 6) with dashed
blue bounding boxes. their bounding boxes are considered
as    possible candidates    but their scores (i.e. p(s|r, i)) are
not as high as the chosen one.

in general, we see that the comprehension model does
quite well from short two word phrases to longer descrip-
tions. it is able to respond correctly to single word changes
in a referring expression (e.g.,    the man in black    to    the
man in red   ). it also correctly identi   es that the horse is the
referent of the expression    a dark horse carrying a woman   
whereas the woman is the referent in    a woman on the dark
horse        note that methods that average id27s
would most likely fail on this example. however, there
are also failure cases. for example, in the    fth row,    the
woman in white    selects a woman in black; this is because
our model cannot handle the case where the object is not
present, although it makes a reasonable guess. also, in the
   fth row,    the controller in the woman   s hand    selects the
woman, the orange juice and the controller, since this partic-
ular kind of object is too small to detect, and lacks enough
training data.
9. conclusions

to conclude, we leave the reader with two simple points.
first, referring expressions have been studied for decades,
but in light of the recent burst of interest in image caption-
ing, referring expressions take on new importance. where
image captioning itself is dif   cult to evaluate, referring ex-
pressions have an objective performance metric, and require
the same semantic understanding of language and vision.
thus success on datasets such as the one contributed in this
paper is more meaningful than success by standard image
captioning metrics.

second, to be successful at generating descriptions, we
must consider the listener. our experiments show that
modeling a listener that must correctly decode a gener-
ated description consistently outperforms a model that sim-
ply emits captions based on region features. we hope that
in addition to our dataset, these insights will spur further
progress on joint models of vision and language.

acknowledgement

we are grateful to tamara berg for sharing the unc-
ref-coco dataset. we also thank sergio guadarrama,
vivek rathod, vignesh ramanathan, nando de freitas,
rahul sukthankar, oriol vinyals and samy bengio for early
discussions and feedback on drafts. this work was partly
supported by aro 62250-cs, the nsf center for brains,
minds, and machines, and nsf stc award ccf-1231216.

references
[1] ms coco captioning challenge. http://mscoco.org/

dataset/#captions-challenge2015. 6

[2] s. antol, a. agrawal, j. lu, m. mitchell, d. batra, c. l.
zitnick, and d. parikh. vqa: visual id53.
arxiv, 2015. 2

[3] l. bahl, p. brown, p. v. de souza, and r. mercer. maximum
mutual information estimation of hidden markov model pa-
in icassp, volume 11,
rameters for id103.
pages 49   52, apr. 1986. 5

[4] d. p. barrett, s. a. bronikowski, h. yu, and j. m. siskind.
robot language learning, generation, and comprehension.
arxiv preprint arxiv:1508.06161, 2015. 2

[5] x. chen and c. l. zitnick. mind   s eye: a recurrent visual
representation for image id134. in cvpr, 2015.
1, 2

[6] m.-m. cheng, s. zheng, w.-y. lin, v. vineet, p. sturgess,
imagespirit: verbal

n. crook, n. j. mitra, and p. torr.
guided image parsing. acm trans. graphics, 2014. 2

[7] j. deng, w. dong, r. socher, l.-j. li, k. li, and l. fei-
fei. id163: a large-scale hierarchical image database. in
cvpr, pages 248   255, 2009. 4

[8] j. devlin, s. gupta, r. girshick, m. mitchell, and c. l. zit-
nick. exploring nearest neighbor approaches for image cap-
tioning. arxiv preprint arxiv:1505.04467, 2015. 1

[9] j. donahue, l. a. hendricks, s. guadarrama, m. rohrbach,
s. venugopalan, k. saenko, and t. darrell. long-term recur-
rent convolutional networks for visual recognition and de-
scription. in cvpr, 2015. 1, 2, 4

[10] d. erhan, c. szegedy, a. toshev, and d. anguelov. scalable
id164 using deep neural networks. in cvpr, pages
2155   2162, 2014. 4

[11] h. j. escalante, c. a. hernandez, j. a. gonzalez, a. lopez-
lopez, m. montes, e. f. morales, l. e. sucar, l. villasenor,
and m. grubinger. the segmented and annotated iapr tc-
12 benchmark. cviu, 2010. 3

[12] h. fang, s. gupta, f. iandola, r. srivastava, l. deng,
p. doll  ar, j. gao, x. he, m. mitchell, j. platt, et al. from
captions to visual concepts and back. in cvpr, 2015. 1, 2

[13] a. farhadi, m. hejrati, m. a. sadeghi, p. young,
c. rashtchian, j. hockenmaier, and d. forsyth. every pic-
ture tells a story: generating sentences from images.
in
eccv, pages 15   29. 2010. 1, 2

[14] n. fitzgerald, y. artzi, and l. s. zettlemoyer. learning
distributions over logical forms for referring expression gen-
eration. in emnlp, pages 1914   1925, 2013. 1, 2

[15] h. gao, j. mao, j. zhou, z. huang, l. wang, and w. xu.
are you talking to a machine? dataset and methods for mul-
tilingual image id53. in nips, 2015. 2

[16] d. geman, s. geman, n. hallonquist, and l. younes.
pans,

visual turing test for id161 systems.
112(12):3618   3623, 2015. 2

[17] r. girshick, j. donahue, t. darrell, and j. malik. rich fea-
ture hierarchies for accurate id164 and semantic
segmentation. in cvpr, 2014. 4

[18] d. gkatzia, v. rieser, p. bartie, and w. mackaness. from the
virtual to the real world: referring to objects in real-world
spatial scenes. in emnlp, 2015. 2

[19] d. golland, p. liang, and d. klein. a game-theoretic ap-
proach to generating spatial descriptions. in emnlp, pages
410   419, 2010. 1, 2, 5

[20] n. d. goodman and d. lassiter. probabilistic semantics and
pragmatics: uncertainty in language and thought. handbook
of contemporary semantic theory. wiley-blackwell, 2014. 2
[21] k. greff, r. k. srivastava, j. koutn    k, b. r. steunebrink, and
j. schmidhuber. lstm: a search space odyssey. in icml,
2015. 4

[22] h. p. grice. logic and conversation. na, 1970. 2
[23] m. hodosh, p. young, and j. hockenmaier. framing image
description as a ranking task: data, models and evaluation
metrics. jair, 47:853   899, 2013. 2

[24] r. hu, h. xu, m. rohrbach, j. feng, k. saenko, and t. dar-

rell. natural language object retrieval. cvpr, 2016. 2

[25] j. johnson, a. karpathy, and l. fei-fei. densecap: fully
convolutional localization networks for dense captioning.
arxiv preprint arxiv:1511.07571, 2015. 2

[26] a. karpathy and l. fei-fei. deep visual-semantic align-
arxiv preprint

ments for generating image descriptions.
arxiv:1412.2306, 2014. 1, 2

[27] s. kazemzadeh, v. ordonez, m. matten, and t. l. berg.
referitgame: referring to objects in photographs of natural
scenes. in emnlp, pages 787   798, 2014. 1, 2, 3

[28] r. kiros, r. salakhutdinov, and r. s. zemel. unifying
visual-semantic embeddings with multimodal neural lan-
guage models. arxiv preprint arxiv:1411.2539, 2014. 1,
2

[29] r. kiros, r. zemel, and r. salakhutdinov. multimodal neu-

ral language models. in icml, 2014. 4

[30] e. krahmer and m. theune. ef   cient context-sensitive gen-
eration of referring expressions. information sharing: ref-
erence and presupposition in language generation and inter-
pretation, 143:223   263, 2002. 2

[31] e. krahmer and k. van deemter. computational generation
of referring expressions: a survey. comp. linguistics, 38,
2012. 1, 2

[32] r. krishna, y. zhu, o. groth, j. johnson, k. hata, j. kravitz,
s. chen, y. kalantidis, l.-j. li, d. a. shamma, et al.
visual genome: connecting language and vision using
arxiv preprint
crowdsourced dense image annotations.
arxiv:1602.07332, 2016. 2

[33] a. krizhevsky, i. sutskever, and g. e. hinton.

classi   cation with deep convolutional neural networks.
nips, pages 1097   1105, 2012. 4

id163
in

[34] g. kulkarni, v. premraj, s. dhar, s. li, y. choi, a. c. berg,
and t. l. berg. baby talk: understanding and generating
image descriptions. in cvpr, 2011. 2

[35] a. lavie and a. agarwal. meteor: an automatic metric
for mt evaluation with high levels of correlation with human
in workshop on statistical machine transla-
judgements.
tion, pages 228   231, 2007. 6

[36] s. li, g. kulkarni, t. l. berg, a. c. berg, and y. choi. com-
posing simple image descriptions using web-scale id165s.
in conll, pages 220   228, 2011. 2

[37] t.-y. lin, m. maire, s. belongie, j. hays, p. perona, d. ra-
manan, p. doll  ar, and c. l. zitnick. microsoft coco: com-
mon objects in context. in eccv, 2014. 2, 3

[38] m. malinowski and m. fritz. a multi-world approach to
id53 about real-world scenes based on uncer-
tain input. in nips, pages 1682   1690, 2014. 2

[39] m. malinowski, m. rohrbach, and m. fritz. ask your neu-
rons: a neural-based approach to answering questions about
images. in nips, 2015. 2

[40] j. mao, w. xu, y. yang, j. wang, z. huang, and a. yuille.
deep captioning with multimodal recurrent neural networks
(m-id56). in iclr, 2015. 1, 2, 4

[41] m. mitchell, k. van deemter, and e. reiter. natural refer-
ence to objects in a visual domain. in iid86, pages 95   104,
2010. 1, 2

[42] m. mitchell, k. van deemter, and e. reiter. generating ex-
pressions that refer to visible objects. in hlt-naacl, pages
1174   1184, 2013. 1, 2

[43] v. ordonez, g. kulkarni, and t. l. berg. im2text: describ-
ing images using 1 million captioned photographs. in nips,
2011. 2

[44] k. papineni, s. roukos, t. ward, and w.-j. zhu. id7: a
method for automatic evaluation of machine translation. in
acl, pages 311   318, 2002. 6

[45] b. a. plummer, l. wang, c. m. cervantes, j. c. caicedo,
j. hockenmaier, and s. lazebnik. flickr30k entities: col-
lecting region-to-phrase correspondences for richer image-
to-sentence models. in iccv, 2015. 2

[46] m. a. sadeghi and a. farhadi. recognition using visual

phrases. in cvpr, 2011. 2

[47] a. sadovnik, y.-i. chiu, n. snavely, s. edelman, and
t. chen. image description with a goal: building ef   cient
discriminating expressions for images. in cvpr, 2012. 2

[48] k. simonyan and a. zisserman. very deep convolutional
networks for large-scale image recognition. in iclr, 2015.
4

[49] r. socher, q. le, c. manning, and a. ng. grounded com-
positional semantics for    nding and describing images with
sentences. in tacl, 2014. 2

[50] k. van deemter, i. van der sluis, and a. gatt. building a se-
mantically transparent corpus for the generation of referring
expressions. in iid86, pages 130   132, 2006. 1, 2

[51] r. vedantam, c. lawrence zitnick, and d. parikh. cider:
in cvpr,

consensus-based image description evaluation.
2015. 6

[52] j. viethen and r. dale. the use of spatial relations in refer-
ring expression generation. in iid86, pages 59   67. associa-
tion for computational linguistics, 2008. 1, 2

[53] o. vinyals, a. toshev, s. bengio, and d. erhan. show and
tell: a neural image caption generator. in cvpr, 2015. 1, 2,
4

[54] t. winograd. understanding natural language. cognitive

psychology, 3(1):1   191, 1972. 2

[55] k. xu, j. ba, r. kiros, c. a. cho, kyunghyun, r. salakhut-
dinov, r. zemel, and y. bengio. show, attend and tell: neu-
ral image id134 with visual attention. in icml,
2015. 1, 2

[56] y. yang, c. l. teo, h. daum  e iii, and y. aloimonos.
in

corpus-guided sentence generation of natural images.
emnlp, pages 444   454, 2011. 2

