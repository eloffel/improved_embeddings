5
1
0
2
 
c
e
d
5
1

 

 
 
]

v
c
.
s
c
[
 
 

2
v
7
6
1
2
0

.

2
1
5
1
:
v
i
x
r
a

simple baseline for visual id53

bolei zhou1, yuandong tian2, sainbayar sukhbaatar2, arthur szlam2, and rob fergus2

1massachusetts institute of technology

2facebook ai research

abstract

we describe a very simple bag-of-words baseline for visual id53.
this baseline concatenates the word features from the question and id98 features
from the image to predict the answer. when evaluated on the challenging vqa
dataset [2], it shows comparable performance to many recent approaches using
recurrent neural networks. to explore the strength and weakness of the trained
model, we also provide an interactive web demo1, and open-source code2.

1

introduction

combining natural language processing with id161 for high-level scene interpretation
is a recent trend, e.g., image captioning [10, 15, 7, 4]. these works have bene   ted from the rapid
development of deep learning for visual recognition (object recognition [8] and scene recognition
[20]), and have been made possible by the emergence of large image datasets and text corpus (e.g.,
[9]). beyond image captioning, a natural next step is visual id53 (qa) [12, 2, 5].
compared with the image captioning task, in which an algorithm is required to generate free-form
text description for a given image, visual qa can involve a wider range of knowledge and reasoning
skills. a captioning algorithm has the liberty to pick the easiest relevant descriptions of the image,
whereas as responding to a question needs to    nd the correct answer for *that* question. further-
more, the algorithms for visual qa are required to answer all kinds of questions people might ask
about the image, some of which might be relevant to the image contents, such as    what books are
under the television    and    what is the color of the boat   , while others might require knowledge or
reasoning beyond the image content, such as    why is the baby crying?    and    which chair is the most
expensive?   . building robust algorithms for visual qa that perform at near human levels would be
an important step towards solving ai.
recently, several papers have appeared on arxiv (after cvpr   16 submission deadline) proposing
neural network architectures for visual id53, such as [13, 17, 5, 18, 16, 3, 11, 1].
some of them are derived from the image captioning framework, in which the output of a recurrent
neural network (e.g., lstm [16, 11, 1]) applied to the question sentence is concatenated with visual
features from vgg or other id98s to feed a classi   er to predict the answer. other models integrate
visual attention mechanisms [17, 13, 3] and visualize how the network learns to attend the local
image regions relevant to the content of the question.
interestingly, we notice that in one of the earliest vqa papers [12], the simple baseline bag-of-
words + image feature (referred to as bowimg baseline) outperforms the lstm-based models on
a synthesized visual qa dataset built up on top of the image captions of coco dataset [9]. for
the recent much larger coco vqa dataset [2], the bowimg baseline performs worse than the
lstm-based models [2].

1http://visualqa.csail.mit.edu
2https://github.com/metalbubble/vqabaseline

1

figure 1: framework of the ibowimg. features from the question sentence and image are con-
catenated then feed into softmax to predict the answer.

in this work, we carefully implement the bowimg baseline model. we call it ibowimg to avoid
confusion with the implementation in [2]. with proper setup and training, this simple baseline model
shows comparable performance to many recent recurrent network-based approaches for visual qa.
further analysis shows that the baseline learns to correlate the informative words in the question
sentence and visual concepts in the image with the answer. furthermore, such correlations can be
used to compute reasonable spatial attention map with the help of the cam technique proposed in
[20]. the source code and the visual qa demo based on the trained model are publicly available. in
the demo, ibowimg baseline gives answers to any question relevant to the given images. playing
with the visual qa models interactively could reveal the strengths and weakness of the trained
model.

2

ibowimg for visual id53

in most of the recent proposed models, visual qa is simpli   ed to a classi   cation task: the number
of the different answers in the training set is the number of the    nal classes the models need to
learn to predict. the general pipeline of those models is that the word feature extracted from the
question sentence is concatenated with the visual feature extracted from the image, then they are fed
into a softmax layer to predict the answer class. the visual feature is usually taken from the top of
the vgg network or googlenet, while the word features of the question sentence are usually the
popular lstm-based features [12, 2].
in our ibowimg model, we simply use naive bag-of-words as the text feature, and use the deep fea-
tures from googlenet [14] as the visual features. figure 1 shows the framework of the ibowimg
model, which can be implemented in torch with no more than 10 lines of code. the input question
is    rst converted to a one-hot vector, which is transformed to word feature via a id27
layer and then is concatenated with the image feature from id98. the combined feature is sent to
the softmax layer to predict the answer class, which essentially is a multi-class id28
model.

3 experiments

here we train and evaluate the ibowimg model on the full release of coco vqa dataset [2],
the largest vqa dataset so far.
in the coco vqa dataset, there are 3 questions annotated by
amazon mechanical turk (amt) workers for each image in the coco dataset. for each question,
10 answers are annotated by another batch of amt workers. to pre-process the annotation for
training, we perform majority voting on the 10 ground-truth answers to get the most certain answer

2

are these people family?are these family people...............softmaxone-hot vectorword featureimage feature...yes:0.81no:0.15cafeteria:0.01people:0.02......id98table 1: performance comparison on test-dev.

img [2]
bow [2]

bowimg [2]
lstmimg [2]
compmem [6]
nmn+lstm [1]

wr sel. [13]

ack [16]
dppnet [11]
ibowimg

overall
28.13
48.09
52.64
53.74
52.62
54.80

-

55.72
57.22
55.72

open-ended
yes/no
64.01
75.66
75.55
78.94
78.33
77.70

number
00.42
36.70
33.67
35.24
35.93
37.20

-

79.23
80.71
76.55

-

36.13
37.24
35.03

others
03.77
27.14
37.37
36.42
34.46
39.30

-

40.08
41.69
42.62

overall
30.53
53.68
58.97
57.17

-
-

-

60.96

62.48
61.68

multiple-choice
number
yes/no
69.87
00.45
37.05
75.71
34.35
75.59
78.95
35.80

-
-
-
-

-
-
-
-

others
03.76
38.64
50.33
43.41

-
-
-
-

80.79
76.68

38.94
37.05

52.16
54.44

for each question. here the answer could be in single word or multiple words. then we have the
3 question-answer pairs from each image for training. there are in total 248,349 pairs in train2014
and 121,512 pairs in val2014, for 123,287 images overall in the training set. here train2014 and
val2014 are the standard splits of the image set in the coco dataset.
to generate the training set and validation set for our model, we    rst randomly split the images of
coco val2014 into 70% subset a and 30% subset b. to avoid potential over   tting, questions shar-
ing the same image will be placed into the same split. the question-answer pairs from the images of
coco train2014 + val2014 subset a are combined and used for training, while the val2014 subset b
is used as validation set for parameter tuning. after we    nd the best model parameters, we combine
the whole train2014 and val2014 to train the    nal model. we submit the prediction result given by
the    nal model on the testing set (coco test2015) to the evaluation server, to get the    nal accuracy
on the test-dev and test-standard set. for open-ended question track, we take the top-1 predicted
answer from the softmax output. for the multiple-choice question track, we    rst get the softmax
id203 for each of the given choices then select the most con   dent one.
the code is implemented in torch. the training takes about 10 hours on a single gpu nvidia
titan black.

3.1 benchmark performance

according to the evaluation standard of the vqa dataset, the result of the any proposed vqa models
should report accuracy on the test-standard set for fair comparison. we report our baseline on the
test-dev set in table 1 and the test-standard set in table 2. the test-dev set is used for debugging
and validation experiments and allows for unlimited submission to the evaluation server, while test-
standard is used for model comparison with limited submission times.
since this vqa dataset is rather new, the publicly available models evaluated on the dataset are all
from non-peer reviewed arxiv papers. we include the performance of the models available at the
time of writing (dec.5, 2015) [2, 6, 1, 13, 16, 11]. note that some models are evaluated on either
test-dev or test-standard for either open-ended or multiple-choice track.
the full set of the vqa dataset was released on oct.6 2015; previously the v0.1 version and v0.9
version had been released. we notice that some models are evaluated using non-standard setups,
rendering performance comparisons dif   cult. [17] (arxiv dated at nov.17 2015) used v0.9 version
of vqa with their own split of training and testing; [18] (arxiv dated at nov.7 2015) used their own
split of training and testing for the val2014; [3] (arxiv dated at nov.18 2015) used v0.9 version of
vqa dataset. so these are not included in the comparison.
except for these img, bow, bowimg baselines provided in the [2], all the compared methods
use either deep or id56s. however, our ibowimg baseline shows comparable
performances against these much more complex models, except for dppnet [11] that is about 1.5%
better.

3

table 2: performance comparison on test-standard.

open-ended
yes/no

number

others

overall

multiple-choice
yes/no
number

others

-
-

79.05
80.28
76.76

-
-

36.10
36.92
34.98

-
-

40.61
42.24
42.62

-
-
-

-
-
-

-
-
-

-
-
-

62.69
61.97

80.35
76.86

38.79
37.30

52.79
54.60

lstmimg [2]
nmn+lstm [1]

ack [16]
dppnet [11]
ibowimg

overall
54.06
55.10
55.98
57.36
55.89

3.2 training details

learning rate and weight clip. we    nd that setting up a different learning rate and weight clipping
for the id27 layer and softmax layer leads to better performance. the learning rate for
the id27 layer should be much higher than the learning rate of softmax layer to learn
a good id27. from the performance of bow in table 1, we can see that a good word
model is crucial to the accuracy, as bow model alone could achieve closely to 48%, even without
looking at the image content.
model parameters to tune. though our model could be considered as the simplest baseline so far
for visual qa, there are several model parameters to tune: 1) the number of epochs to train. 2) the
learning rate and weight clip. 3) the threshold for removing less frequent question word and answer
classes. we iterate to search the best value of each model parameter separately on the val2014 subset
b. in our best model, there are 5,746 words in the dictionary of question sentence, 5,216 classes of
answers. the speci   c model parameters can be found in the source code.

3.3 understanding the visual qa model

from the comparisons above, we can see that our baseline model performs as well as the recurrent
neural network models on the vqa dataset. furthermore, due to its simplicity, the behavior of the
model could be easily interpreted, demonstrating what it learned for visual qa.
essentially, the bowimg baseline model learns to memorize the correlation between the answer
class and the informative words in the question sentence along with the visual feature. we split the
learned weights of softmax into two parts, one part for the word feature and the other part for the
visual feature. therefore,

r = mwxw + mvxv.

(1)
here the softmax matrix m is decomposed into the weights mw for word feature xw and the weights
mv for the visual feature xv whereas m = [mw, mv]. r is the response of the answer class before
softmax id172. denote the response rw = mwxw as the contribution from question words
and rv = mvxv as the contribution from the image contents. thus for each predicted answer, we
know exactly the proportions of contribution from word and image content respectively. we also
could rank rw and rv to know what the predicted answer could be if the model only relies on one
side of information.
figure 2 shows some examples of the predictions, revealing that the question words usually have
dominant in   uence on predicting the answer. for example, the correctly predicted answers for the
two questions given for the    rst image    what is the color of sofa    and    which brand is the laptop   
come mostly from the question words, without the need for image. this demonstrates the bias in the
frequency of object and actions appearing in the images of coco dataset. for the second image,
we ask    what are they doing   : the words-only prediction gives    playing wii (10.62), eating (9.97),
playing frisbee (9.24)   , while full prediction gives the correct prediction    playing baseball (10.67 =
2.01 [image] + 8.66 [word])   .
to further understand the answers predicted by the model given the visual feature and question
sentence, we    rst decompose the word contribution of the answer into single words of the ques-
tion sentence, then we visualize the informative image regions relevant to the answer through the
technique proposed in [19].

4

figure 2: examples of visual id53 from the ibowimg baseline. for each image
there are two questions and the top 3 predicted answers from the model. the prediction score of
each answer is decomposed into the contributions of image and words respectively. the predicted
answers which rely purely on question words or image are also shown.

figure 3: the examples of the word importance of question sentences and the informative image
regions relevant to the predicted answers.

since there are just two linear transformations (one is id27 and the other is softmax
id127) from the one hot vector to the answer response, we could easily know the
importance of each single word in the question to the predicted answer. in figure 3, we plot the
ranked word importance for each word in the question sentence. in the    rst image question word
   doing    is informative to the answer    texting    while in the second image question word    eating    is
informative to the answer    hot dog   .
to highlight the informative image regions relevant to the predicted answer we apply a technique
called class activation mapping (cam) proposed in [19]. the cam technique leverages the linear
relation between the softmax prediction and the    nal convolutional feature map, which allows us
to identify the most discriminative image regions relevant to the predicted result. in figure 3 we
plot the heatmaps generated by the cam associated with the predicted answer, which highlight the

5

  question: what is the color of the sofapredictions:brown (score: 12.89 = 1.01 [image] + 11.88 [word])red (score: 11.92 = 1.13 [image] + 10.79 [word])yellow (score: 11.91 = 1.08 [image] + 10.84 [word])based on image only: books (3.15),   yes (3.14),   no (2.95)based on word only: brown (11.88),   gray (11.18),   tan (11.16)question: which brand is the laptoppredictions:apple (score: 10.87 = 1.10 [image] + 9.77 [word])dell (score: 9.83 = 0.71 [image] + 9.12 [word])toshiba (score: 9.76 = 1.18 [image] + 8.58 [word])based on image only: books (3.15),   yes (3.14),   no (2.95)based on word only: apple (9.77),   hp (9.18),   dell (9.12)question: what are they doingpredictions:playing baseball (score: 10.67 = 2.01 [image] + 8.66 [word])baseball (score: 9.65 = 4.84 [image] + 4.82 [word])grazing (score: 9.34 = 0.53 [image] + 8.81 [word])based on image only: umpire (4.85),   baseball (4.84),   batter (4.46)  based on word only: playing wii (10.62), eating (9.97),      playing frisbee (9.24)question: how many people insidepredictions:3 (score: 13.39 = 2.75 [image] + 10.65 [word])2 (score: 12.76 = 2.49 [image] + 10.27 [word])5 (score: 12.72 = 1.83 [image] + 10.89 [word])based on image only: umpire (4.85),  baseball (4.84),  batter (4.46)based on word only: 8 (11.24),   7 (10.95),   5 (10.89)question: what gaming system are they playingpredictions:wii (score: 19.35 = 0.64 [image] + 18.71 [word])soccer (score: 13.23 = 0.34 [image] + 12.89 [word])mario kart (score: 13.17 = 0.11 [image] + 13.06 [word])based on image only: library (4.40),   yes (3.98),   i don't know (3.85)based on word only: wii (18.71),   mario kart (13.06),   soccer (12.89)question: are they having funpredictionspredictions:yes (score: 10.65 = 3.98 [image] + 6.68 [word])no (score: 8.06 = 3.33 [image] + 4.73 [word])library (score: 6.20 = 4.40 [image] + 1.80 [word])based on image only: library (4.40), yes (3.98), i don't know (3.85) based on word only: yes (6.68),   no (4.73),   fly kite (3.43)question: what is he eating?prediction: hot dog (score: 13.01=5.02 [image] + 7.99 [word])word importance: eating(4.12) what(2.81) is(0.74) he(0.30)question: what are they doing?prediction: texting (score: 12.02=3.78 [image] + 8.24 [word])word importance: doing(7.01) are(1.05) they(0.49) what(-0.3)question: where is the cat?prediction: shelf (score: 10.81 = 3.23 [image] + 7.58 [word])word importance: where(3.89) cat(1.88) the(1.79) is(0.01)question: is there a cat?prediction: yes (score: 11.48 = 4.35 [image] + 7.13 [word])word importance: is(2.65) there(2.46) a(1.70) cat(0.30)figure 4: snapshot of the visual id53 demo. people could type questions into the
demo and the demo will give answer predictions. here we show the answer predictions for two
questions.

informative image regions such as the cellphone in the    rst image to the answer    texting    and the
hot dog in the    rst image to the answer    hot dog   . the example in lower part of figure 3 shows the
heatmaps generated by two different questions and answers. visual features from id98 already have
implicit attention and selectivity over the image region, thus the resulting class activation maps are
similar to the maps generated by the attention mechanisms of the vqa models in [13, 17, 18].

4

interactive visual qa demo

id53 is essentially an interactive activity, thus it would be good to make the trained
models able to interact with people in real time. aided by the simplicity of the baseline model, we
built a web demo that people could type question about a given image and our ai system powered by
ibowimg will reply the most possible answers. here the deep feature of the images are extracted
beforehand. figure 4 shows a snapshot of the demo. people could play with the demo to see the
strength and weakness of vqa model.

5 concluding remarks

for visual id53 on coco dataset, our implementation of a simple baseline achieves
comparable performance to several recently proposed recurrent neural network-based approaches.
to reach the correct prediction, the baseline captures the correlation between the informative words
in the question and the answer, and that between image contents and the answer. how to move
beyond this, from memorizing the correlations to actual reasoning and understanding of the question
and image, is a goal for future research.

references

[1] j. andreas, m. rohrbach, t. darrell, and d. klein. deep compositional id53

with neural module networks. arxiv preprint arxiv:1511.02799, 2015.

[2] s. antol, a. agrawal, j. lu, m. mitchell, d. batra, c. l. zitnick, and d. parikh. vqa: visual

id53. arxiv preprint arxiv:1505.00468, 2015.

[3] k. chen, j. wang, l.-c. chen, h. gao, w. xu, and r. nevatia. abc-id98: an attention based
convolutional neural network for visual id53. arxiv preprint arxiv:1511.05960,
2015.

[4] j. devlin, s. gupta, r. girshick, m. mitchell, and c. l. zitnick. exploring nearest neighbor

approaches for image captioning. arxiv preprint arxiv:1505.04467, 2015.

6

[5] h. gao, j. mao, j. zhou, z. huang, l. wang, and w. xu. are you talking to a machine? dataset
and methods for multilingual image id53. arxiv preprint arxiv:1505.05612,
2015.

[6] a. jiang, f. wang, f. porikli, and y. li. compositional memory for visual id53.

arxiv preprint arxiv:1511.05676, 2015.

[7] r. kiros, r. salakhutdinov, and r. zemel. multimodal neural language models. in proceedings
of the 31st international conference on machine learning (icml-14), pages 595   603, 2014.
[8] a. krizhevsky, i. sutskever, and g. e. hinton. id163 classi   cation with deep convolutional
neural networks. in advances in neural information processing systems, pages 1097   1105,
2012.

[9] t.-y. lin, m. maire, s. belongie, j. hays, p. perona, d. ramanan, p. doll  ar, and c. l. zitnick.
microsoft coco: common objects in context. in id161   eccv 2014, pages 740   755.
springer, 2014.

[10] j. mao, w. xu, y. yang, j. wang, and a. yuille. deep captioning with multimodal recurrent

neural networks (m-id56). arxiv preprint arxiv:1412.6632, 2014.

[11] h. noh, p. h. seo, and b. han. image id53 using convolutional neural network

with dynamic parameter prediction. arxiv preprint arxiv:1511.05756, 2015.

[12] m. ren, r. kiros, and r. zemel. exploring models and data for image id53. in

nips, volume 1, page 3, 2015.

[13] k. j. shih, s. singh, and d. hoiem. where to look: focus regions for visual question answer-

ing. arxiv preprint arxiv:1511.07394, 2015.

[14] c. szegedy, w. liu, y. jia, p. sermanet, s. reed, d. anguelov, d. erhan, v. vanhoucke, and

a. rabinovich. going deeper with convolutions. arxiv preprint arxiv:1409.4842, 2014.

[15] o. vinyals, a. toshev, s. bengio, and d. erhan. show and tell: a neural image caption

generator. arxiv preprint arxiv:1411.4555, 2014.

[16] q. wu, p. wang, c. shen, a. v. d. hengel, and a. dick. ask me anything: free-
form visual id53 based on knowledge from external sources. arxiv preprint
arxiv:1511.06973, 2015.

[17] h. xu and k. saenko. ask, attend and answer: exploring question-guided spatial attention for

visual id53. arxiv preprint arxiv:1511.05234, 2015.

[18] z. yang, x. he, j. gao, l. deng, and a. smola. stacked attention networks for image question

answering. arxiv preprint arxiv:1511.02274, 2015.

[19] b. zhou, a. khosla, a. lapedriza, a. oliva, and a. torralba. learning deep features for

discriminative localization. arxiv preprint arxiv:1512.04150, 2015.

[20] b. zhou, a. lapedriza, j. xiao, a. torralba, and a. oliva. learning deep features for scene
in advances in neural information processing systems,

recognition using places database.
pages 487   495, 2014.

7

