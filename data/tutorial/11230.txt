tabmcq: a dataset of general knowledge tables and multiple-choice

questions

sujay kumar jauhar   , peter turney   , eduard hovy   

   carnegie mellon university
{sjauhar, hovy}@cs.cmu.edu

pittsburgh, pa, usa

    allen institute for arti   cial intelligence

seattle, wa, usa
petert@allenai.org

abstract

6
1
0
2

 

b
e
f
2
1

 

 
 
]
l
c
.
s
c
[
 
 

1
v
0
6
9
3
0

.

2
0
6
1
:
v
i
x
r
a

we describe two new related resources that facilitate modelling of general knowledge reasoning in 4th grade science exams. the    rst is
a collection of curated facts in the form of tables, and the second is a large set of crowd-sourced multiple-choice questions covering the
facts in the tables. through the setup of the crowd-sourced annotation task we obtain implicit alignment information between questions
and tables. we envisage that the resources will be useful not only to researchers working on id53, but also to people
investigating a diverse range of other applications such as information extraction, question parsing, answer type identi   cation, and
lexical semantic modelling.

keywords: general knowledge, tables, id53, mcq, crowd-sourcing, mechanical turk

1.

introduction

2. related work

the aristo project at ai2 (clark, 2015) uses standardized
science exams as drivers for research in arti   cial intelli-
gence. aristo   s id53 format exposes a vari-
ety of interesting problems and challenges in nlp (weston
et al., 2015), such as information extraction, semantic mod-
elling and reasoning. an important component of a system
that performs id53 (qa) is a store of back-
ground knowledge for fact-checking and reasoning. this
store can be in a variety of modes and formalisms: large-
scale extracted and curated knowledge bases (fader et al.,
2014), structured models such as markov logic networks
(khot et al., 2015), or simple text corpora in information
retrieval approaches (tellex et al., 2003).
there is, however, a fundamental trade-off in the expres-
sive power of a formalism and its ability to be curated
easily using existing data and tools.
in this paper we
describe our work on building knowledge tables, whose
semi-structured format affords a balance between expres-
sive power and ease of creation. additionally, we intro-
duce our efforts at building a large bank of multiple-choice
questions (mcqs) using crowd-sourcing on mechanical
turk (mturk) by imposing structural constraints on the
mcqs from the tables. these constraints lead to consis-
tency in mcq quality and additionally enable us to harvest
alignment information between questions and table cells
with little additional effort from annotators. the tables, the
mcqs, and the alignments between the two constitute a
trio of resources that are, to the best of our knowledge, a
   rst of their kind. we are releasing this dataset publicly1,
and we believe it will not only be useful to those working
on id53, but present interesting challenges to
researchers exploring a number of related areas.

in related recent work pasupat and liang (2015) create a
dataset of qa pairs over tables. however, their annotation
setup does not impose structural constraints from tables,
and produces simple qa pairs rather than mcqs. (yin et
al., 2015) and (neelakantan et al., 2015) use tables in the
context of id53, but deal with synthetically
generated query data for those tables. more generally ta-
bles have been related to qa in the context of queries over
id208 (cafarella et al., 2008; pimplikar and
sarawagi, 2012). regarding crowd-sourcing for question
creation, aydin et al. (2014) harvest mcqs via a gami   ed
app. however their work does not involve tables. monolin-
gual alignment datasets have also been explored separately,
for example by brockett (2007) in the context of textual
entailment.

3. motivation for the dataset

our motivation for constructing and releasing this data
stems from promising preliminary results on using tables
and their alignments to mcqs for solving ai2   s aristo
challenge. we manually annotated 77 of the 108 4th grade
science exam questions in the regents dataset2 for align-
ment to tables. the resulting data was exactly like the one
in this paper, but at a fraction of the scale. even with this
small amount of data we were able to build a system that
rivaled our best in-house solvers of the aristo challenge. a
larger dataset will enable us to exceed this performance,
and also allow us to explore models that require greater
amounts of data (such as neural networks).
a detailed description of our system is beyond the scope of
this paper, but in summary it uses a feature-rich log-linear
model to score table cells on their relevance to answering a

1http://allenai.org/content/data/tabmcq_

2http://allenai.org/content/data/regents.

v_1.0.zip

zip

question. a combination of structural and textual features
are used to capitalize on the semi-structured format of ta-
bles.

4. general knowledge tables

in this section we present the set of tables of curated natural
language facts. we discuss their semi-structured form and
its utility for id99. we then detail the
data and possibilities for its extension.
4.1. tables as a form of knowledge

representation

an example of the kind of table we construct is given in
table 1. this format is semi-structured: the rows of the
table (with the exception of the header) are essentially a list
of sentences, but with well-de   ned recurring    ller patterns.
together with the header, these patterns divide the rows into
meaningful columns.
the resulting table structure has some interesting seman-
tics. a row in a table corresponds to a fact in the world3.
the cells in a row correspond to concepts, entities, or pro-
cesses that participate in this fact. a content column4 cor-
responds to a group of concepts, entities, or processes that
are the same type. the head of the column is an abstract
description of the type. we may view the head as a hyper-
nym and the cells in the column below as co-hyponyms of
the head.
the structure of tables also exposes sets of analogies. more
formally, let rowi and rowj be any two rows in a table. let
colk and colm be any two content columns in a table. the
four cells where the rows and columns intersect form an
analogy: celli,k is to celli,m as cellj,k is to cellj,m. that
is, the relation between celli,k and celli,m is highly similar
to the relation between cellj,k and cellj,m. for example,
in table 1 one such analogy is:    melting    is to    solid    as
   condensation    is to    gas   . here the latent relation being
represented is the one between a    phase change    and the
   initial state    of a substance upon which it acts. the table
is essentially a compact representation of a large number of
scienti   c analogies.
the semi-structured nature of this data is    exible. since
facts are presented as sentences, the tables can simply act
as a text corpus for information retrieval. depending on
the end application, more complex models can rely on the
inherent structure in tables. they can be used as is for in-
formation extraction tasks that seek to zero in on speci   c
nuggets of information, or they can be converted to logi-
cal expressions using rules de   ned over neighboring cells.
regarding construction, the recurring    ller patterns can be
used as templates to extend the tables semi-automatically
by searching over large corpora for similar facts (ravichan-
dran and hovy, 2002).
4.2. the dataset
our dataset of tables was, for the most part, constructed
manually by the second author of this paper and a knowl-

3rows may also be seen as predicates, or more generally

frames with typed arguments.

4we differentiate these from    ller columns, which only con-
tain a recurring pattern, and no information in their header cells.

edge engineer. the target domain for the tables was the re-
gents 4th grade science exam. the majority of tables were
constructed to contain topics and facts in this exam (with
additional facts being added once a coherent topic had been
identi   ed), with the rest being targeted at an additional in-
house question bank of 500 questions.
the dataset consists of 65 hand-crafted tables organized
topic-wise, from bounded tables such as the one about
phase changes, to virtually unbounded tables, such as the
kind of energy used in performing an action. an addi-
tional collection of 5 semi-automatically generated tables
contains a more heterogeneous mix of facts across topics.
a total of 3851 facts, or information rows, are present in
the manually constructed tables, while an additional 4415
are present in the semi-automatically generated ones. the
number of content columns in a given table varies from 2
to 5.
4.3. future extensions
while the tables are reasonably complete with regard to the
target domain for which they were constructed, they are
not comprehensive for any open-ended knowledge retrieval
task. we are in the process of investigating ways to extend
the tables semi-automatically to cover a wider collection of
facts, by using the set of existing facts as seeds. an in-
house fuzzy search engine allows us to search over patterns
consisting not only of words and wild-card symbols, but
parts-of-speech and semantically related concepts.
an interesting avenue for future research is to completely
automate the process of this extension, and even construct
semi-structured knowledge tables on the    y for targeted
queries.

5. crowd-sourcing multiple-choice

questions from tables

in this section we outline the mcqs generated from ta-
bles. we    rst describe the annotation task and argue for
constraints imposed by table structure. we next describe
the data we generated via crowd-sourcing. finally, we also
list some possible extensions to the kinds of questions we
generate.
5.1. the annotation task     constraining mcqs

with tables

we use mturk to generate mcqs by imposing constraints
derived from the structure of the tables. these constraints
help annotators create questions with scaffolding informa-
tion, and lead to consistent quality in the generated output.
an additional bene   t of this format is the alignment infor-
mation from cells in the tables to the mcqs that are gener-
ated as a by-product.
the annotation task guides a turker through the process of
creating an mcq. given a table, we choose a target cell to
be the correct answer for a new mcq. first, we ask turk-
ers to create a question by primarily using information from
the rest of the row containing the target cell, in such a way
that the target cell is its correct answer. then annotators
must select all the cells in the row that they actually used to
construct the question. following this, turkers must con-
struct 4 succinct choices for the question, one of which is

phase change

melting

vaporization
condensation
sublimation

initial state

final state

causes a
causes a
causes a
causes a

solid
liquid
gas
solid

to change into a
to change into a
to change into a
to change into a

liquid
gas
liquid
gas

heat transfer

adding heat
adding heat
removing heat
adding heat

by
by
by
by

table 1: example part of table concerning phase state changes.

the correct answer and the other 3 are distractors. these
distractors must be formed from other cells in the column
containing the target cell. if there are insuf   cient unique
cells in the column turkers may create their own. to sim-
plify and reinforce table constraints over rows and columns,
our interface highlights table cells as shown in figure 1.
turkers are allowed to rephrase and shuf   e the contents of
cells to arrive at the 4 succinct choices. consequently we
require turkers to indicate which of the 4 choices that they
created is the correct one for their mcq.
in addition to an mcq we obtain the following alignment
information with no additional effort from annotators. we
know which table, row, and column contain the answer, and
thus also which header cells might be relevant to the ques-
tion. additionally, we know the cells of a row that were
used to construct a question.
5.2. the dataset
we created an individual hit for every content bearing cell
from each one of the 65 manually constructed tables. we
paid annotators a reward of 10 cents per mcq, and asked
for 1 annotation per hit for most tables. however, for an
initial set of 4 tables which we used in a pilot study, we
asked for 3 annotations per hit5.
in terms of quali   cations, we required turkers to have a
hit approval rating of 95% or higher, with a minimum of
at least 500 hits approved. additionally, we restricted the
demographics of our workers to the us.
the annotators were able to create an mcq from a table in
approximately 70 seconds. they were also largely success-
ful in their attempts. manual inspection of the generated
output also revealed that questions are of consistently good
quality. they are certainly good enough for training ma-
chine learning models and many are even good enough as
evaluation data for qa. a sample of generated mcqs are
presented in table 2.
once annotations were completed we implemented some
simple sanity checks to evaluate the data before approving
hits. these included things like checking if an mcq has at
least 3 choices, whether choices are repeated, etc. through
this process we rejected about 0.7% of submitted hits. we
had to further prune our data to discard some mcqs after
accepting hits due to corrupted data, or badly constructed
mcqs. a total of 160 mcqs were lost through the cleanup.
thus our dataset of mcqs covers the overwhelming major-
ity, but not all, of the cells in the collection of tables.
in the end our complete data consists of 9091 mcqs, which
is     to the best of our knowledge     orders of magnitude

5the goal was to observe whether there was diversity in the
mcqs created for a target cell. the results were not suf   ciently
conclusive to warrant a threefold increase in the cost of creation.

larger than any existing collection of science exam mcqs
available for research. these mcqs also come with align-
ment information to tables, rows, columns and cells.
5.3. future extensions
in the future we hope to generate mcqs with other kinds
of constraints from tables. currently the constraints are
row-dominant: the questions are based on cells from the
row in which a target cell occurs. such questions are of-
ten information look-up questions     the simplest kind. we
plan to explore column-dominant questions, which would
lead to questions about abstraction or speci   cation (based
on the hypernym-hyponym relationship in columns). other
structural semantics we hope to investigate are multi-row
constraints that result in comparisons, or joins on multiple
tables with related columns that results in chaining or rea-
soning.

6. utility to the research community

we believe that the data we have collected will be useful to
people with diverse research interests in the nlp commu-
nity. while the tables were designed for facts covered in 4th
grade science exams, the contents are general enough to be
used as background knowledge in simple domains. the ad-
ditional structure presents interesting challenges to people
interested in information extraction, especially when con-
sidered with the alignments to mcqs. they can be used
for applications such as question parsing and answer type
extraction. the structural semantics of tables (as described
in section 4.1.) can also present a interesting challenges for
those interested in lexical semantics and analogical reason-
ing. jointly, the tables and mcqs can be used for qa,    
with great effect as summarized in section 3.

7. conclusion

we have presented a dataset of tables, mcqs and align-
ment information between the two. our preliminary exper-
iments with this trio of resources even on a much smaller
scale showed promising results, rivaling the best current
systems on the aristo qa challenge. we are thus led to
believe the data described in this paper will be very use-
ful to researchers working on qa. however the usefulness
of the dataset potentially extends to other areas of nlp
as well. the tables and mcqs individually represent re-
sources of interest to people requiring background knowl-
edge or working on semantic modelling and information
extraction. moreover, alignment information is expensive
and time-consuming to annotate and consequently scarce;
yet alignment of textual fragments is a recurring theme in
nlp. our setup allows us to harvest this resource easily at
scale, thus becoming useful to people working on problems
like id141, id123 and question parsing.

figure 1: example table from mturk annotation task illustrating constraints. we ask turkers to construct questions from
blue cells, such that the red cell is the correct answer, and distractors must be selected from yellow cells.

what is the orbital event with the longest day and the shortest night. what sense organ is used to detect pitch and harmony?

a) summer solstice
b) winter solstice
c) spring equinox
d) fall equinox

a) ears
b) eyes
c) noses
d) tongues

a graduated cylinder is used to measure what of liquids?

steel is a/an

of electricity

a) volume
b) density
c) depth
d) pressure

a) separator
b) isolator
c) insulator
d) conductor

table 2: example mcqs generated from our pilot mturk tasks. correct answer choices are in bold.

8. acknowledgements

we   d like to thank the allen institute for arti   cial intelli-
gence for generously funding the creation of this dataset,
and permitting its release. thanks also go to isaac cowhey
for his effort in painstakingly building the tables. the    rst
and third authors of this paper were supported in part by
the following grants: nsf grant iis-1143703, nsf award
iis-1147810, darpa grant fa87501220342.

9. references

aydin, b. i., yilmaz, y. s., li, y., li, q., gao, j., and
demirbas, m.
(2014). id104 for multiple-
choice id53. in twenty-sixth iaai con-
ference.

brockett, c. (2007). aligning the rte 2006 corpus. techni-
cal report msr-tr-2007-77, microsoft research, june.
cafarella, m. j., halevy, a., wang, d. z., wu, e., and
zhang, y. (2008). webtables: exploring the power of ta-
bles on the web. proceedings of the vldb endowment,
1(1):538   549.

clark, p. (2015). elementary school science and math tests
as a driver for ai: take the aristo challenge. proceedings
of iaai, 2015.

fader, a., zettlemoyer, l., and etzioni, o. (2014). open
id53 over curated and extracted knowl-
edge bases. in proceedings of the 20th acm sigkdd
international conference on knowledge discovery and
data mining, pages 1156   1165. acm.

khot, t., balasubramanian, n., gribkoff, e., sabharwal,
a., clark, p., and etzioni, o. (2015). exploring markov

logic networks for id53. proceedings of
emnlp, 2015.

neelakantan, a., le, q. v., and sutskever, i. (2015). neu-
ral programmer: inducing latent programs with gradient
descent. arxiv preprint arxiv:1511.04834.

pasupat, p. and liang, p. (2015). compositional seman-
tic parsing on semi-structured tables. arxiv preprint
arxiv:1508.00305.

pimplikar, r. and sarawagi, s. (2012). answering table
queries on the web using column keywords. proceedings
of the vldb endowment, 5(10):908   919.

ravichandran, d. and hovy, e. (2002). learning surface
text patterns for a id53 system. in pro-
ceedings of the 40th annual meeting on association for
computational linguistics, pages 41   47. association for
computational linguistics.

tellex, s., katz, b., lin, j., fernandes, a., and marton, g.
(2003). quantitative evaluation of passage retrieval al-
gorithms for id53. in proceedings of the
26th annual international acm sigir conference on re-
search and development in informaion retrieval, pages
41   47. acm.

weston, j., bordes, a., chopra, s., and mikolov, t. (2015).
towards ai-complete id53: a set of prereq-
uisite toy tasks. arxiv preprint arxiv:1502.05698.

yin, p., lu, z., li, h., and kao, b.

(2015). neu-
ral enquirer: learning to query tables. arxiv preprint
arxiv:1512.00965.

