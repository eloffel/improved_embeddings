6
1
0
2

 

g
u
a
9
1

 

 
 
]
l
c
.
s
c
[
 
 

1
v
7
5
4
5
0

.

8
0
6
1
:
v
i
x
r
a

who did what: a large-scale person-centered cloze dataset

takeshi onishi hai wang mohit bansal kevin gimpel

david mcallester

toyota technological institute at chicago, chicago, il, 60637, usa

{tonishi,haiwang,mbansal,kgimpel,mcallester}@ttic.edu

to appear at emnlp 2016.

abstract

we have constructed a new    who-did-what   
dataset of over 200,000    ll-in-the-gap (cloze)
multiple choice reading comprehension prob-
lems constructed from the ldc english gi-
gaword newswire corpus. the wdw dataset
has a variety of novel features. first, in con-
trast with the id98 and daily mail datasets
(hermann et al., 2015) we avoid using article
summaries for question formation.
instead,
each problem is formed from two indepen-
dent articles     an article given as the pas-
sage to be read and a separate article on the
same events used to form the question. sec-
ond, we avoid anonymization     each choice
is a person named entity. third, the problems
have been    ltered to remove a fraction that are
easily solved by simple baselines, while re-
maining 84% solvable by humans. we report
performance benchmarks of standard systems
and propose the wdw dataset as a challenge
task for the community.1

1 introduction

researchers distinguish the problem of general
knowledge id53 from that of read-
ing comprehension (hermann et al., 2015; hill et
al., 2016). reading comprehension is more dif   -
cult than knowledge-based or ir-based question an-
swering in two ways. first, reading comprehen-
sion systems must infer answers from a given un-
structured passage rather than structured knowledge
sources such as freebase (bollacker et al., 2008)
or the google id13 (singhal, 2012).

1available at tticnlp.github.io/who_did_what

second, machine comprehension systems cannot ex-
ploit the large level of redundancy present on the
web to    nd statements that provide a strong syntac-
tic match to the question (yang et al., 2015). in con-
trast, a machine comprehension system must use the
single phrasing in the given passage, which may be
a poor syntactic match to the question.

in this paper, we describe the construction of a
new reading comprehension dataset that we refer
to as    who-did-what   . two typical examples are
shown in table 1.2 the process of forming a prob-
lem starts with the selection of a question article
from the english gigaword corpus. the question is
formed by deleting a person named entity from the
   rst sentence of the question article. an information
retrieval system is then used to select a passage with
high overlap with the    rst sentence of the question
article, and an answer choice list is generated from
the person named entities in the passage.

our dataset differs from the id98 and daily mail
comprehension tasks (hermann et al., 2015) in that
it forms questions from two distinct articles rather
than summary points. this allows problems to be
derived from document collections that do not con-
tain manually-written summaries. this also reduces
the syntactic similarity between the question and
the relevant sentences in the passage, increasing the
need for deeper semantic analysis.

to make the dataset more challenging we selec-
tively remove problems so as to suppress four simple
baselines     selecting the most mentioned person,

2the passages here only show certain salient portions of the
passage. in the actual dataset, the entire article is given. the
correct answers are (3) and (2).

passage: britain   s decision on thursday to drop extradition proceedings against gen. augusto pinochet and allow him
to return to chile is understandably frustrating ... jack straw, the home secretary, said the 84-year-old former dictator   s
ability to understand the charges against him and to direct his defense had been seriously impaired by a series of strokes.
... chile   s president-elect, ricardo lagos, has wisely pledged to let justice run its course. but the outgoing government of
president eduardo frei is pushing a constitutional reform that would allow pinochet to step down from the senate and retain
parliamentary immunity from prosecution. ...
question: sources close to the presidential palace said that fujimori declined at the last moment to leave the country and
instead he will send a high level delegation to the ceremony, at which chilean president eduardo frei will pass the mandate
to xxx.
choices: (1) augusto pinochet (2) jack straw (3) ricardo lagos

passage: tottenham won 2-0 at hapoel tel aviv in uefa cup action on thursday night in a defensive display which
impressed spurs skipper robbie keane.
... keane scored the    rst goal at the bloom   eld stadium with dimitar berbatov,
who insisted earlier on thursday he was happy at the london club, heading a second. the 26-year-old berbatov admitted the
reports linking him with a move had affected his performances ... spurs manager juande ramos has won the uefa cup in
the last two seasons ...
question: tottenham manager juande ramos has hinted he will allow xxx to leave if the bulgaria striker makes it clear he
is unhappy.

choices: (1) robbie keane (2) dimitar berbatov

table 1: sample reading comprehension problems from our dataset.

the    rst mentioned person, and two language model
baselines. this is also intended to produce problems
requiring deeper semantic analysis.

the resulting dataset yields a larger gap between
human and machine performance than existing ones.
humans can answer questions in our dataset with
an 84% success rate compared to the estimates of
75% for id98 (chen et al., 2016) and 82% for the
cbt named entities task (hill et al., 2016). in spite
of this higher level of human performance, various
existing readers perform signi   cantly worse on our
dataset than they do on the id98 dataset. for ex-
ample, the attentive reader (hermann et al., 2015)
achieves 63% on id98 but only 55% on who-did-
what and the attention sum reader (kadlec et al.,
2016) achieves 70% on id98 but only 59% on who-
did-what.

in summary, we believe that our who-did-what
dataset is more challenging, and requires deeper se-
mantic analysis, than existing datasets.

2 related work

our who-did-what dataset is related to several re-
cently developed datasets for machine comprehen-
sion. the mctest dataset (richardson et al., 2013)
consists of 660    ctional stories with 4 multiple
choice questions each. this dataset is too small
to train systems for the general problem of reading

comprehension.

the babi synthetic id53 dataset
(weston et al., 2016) contains passages describing a
series of actions in a simulation followed by a ques-
tion. for this synthetic data a logical algorithm can
be written to solve the problems exactly (and, in fact,
is used to generate ground truth answers).

the children   s book test (cbt) dataset, created
by hill et al. (2016), consists of 113,719 cloze-style
named entity problems. each problem consists of 20
consecutive sentences from a children   s story, a 21st
sentence in which a word has been deleted, and a list
of ten choices for the deleted word. the cbt dataset
tests story completion rather than reading compre-
hension. the next event in a story is often not de-
termined     surprises arise. this may explain why
human performance is lower for cbt than for our
dataset     82% for cbt vs. 84% for who-did-what.
the 16% error rate for humans on who-did-what
seems to be largely due to noise in problem forma-
tion introduced by errors in named entity recogni-
tion and parsing. reducing this noise in future ver-
sions of the dataset should signi   cantly improve hu-
man performance. another difference compared to
cbt is that who-did-what has shorter choice lists
on average. random guessing achieves only 10%
on cbt but 32% on who-did-what. the reduction
in the number of choices seems likely to be responsi-

ble for the higher performance of an lstm system
on who-did-what     contextual lstms (the atten-
tive reader of hermann et al., 2015) improve from
44% on cbt (as reported by hill et al., 2016) to
55% on who-did-what.

above we referenced the comprehension datasets
created from id98 and daily mail articles by her-
mann et al. (2015). the id98 and daily mail
datasets together consist of 1.4 million questions
constructed from approximately 300,000 articles.
of existing datasets, these are the most similar to
who-did-what in that they consists of cloze-style
id53 problems derived from news ar-
ticles. as discussed in section 1, our who-did-what
dataset differs from these datasets in not being de-
rived from article summaries, in using baseline sup-
pression, and in yielding a larger gap between ma-
chine and human performance. the who-did-what
dataset also differs in that the person named entities
are not anonymized, permitting the use of external
resources to improve performance while remaining
dif   cult for language models due to suppression.

3 dataset construction

we now describe the construction of our who-did-
what dataset in more detail. we sketch the pro-
cedure below and provide more speci   c details in
the appendix. to generate a problem we    rst gen-
erate the question by selecting a random article    
the    question article        from the gigaword corpus
and taking the    rst sentence of that article     the
   question sentence        as the source of the cloze
question. the hope is that the    rst sentence of an
article contains prominent people and events which
are likely to be discussed in other independent ar-
ticles. to convert the question sentence to a cloze
question, we    rst extract named entities using the
stanford ner system (finkel et al., 2005) and parse
the sentence using the stanford pid18 parser (klein
and manning, 2003).

the person named entities are candidates for dele-
tion to create a cloze problem.
for each per-
son named entity we then identify a noun phrase
in the automatic parse that is headed by that per-
son. for example, if the question sentence is    pres-
ident obama met yesterday with apple founder
steve jobs    we identify the two person noun

phrases    president obama    and    apple founder
steve jobs   . when a person named entity is selected
for deletion, the entire noun phrase is deleted. for
example, when deleting the second named entity,
we get    president obama met yesterday with xxx   
rather than    president obama met yesterday with
apple founder xxx   . this increases the dif   culty
of the problems because systems cannot rely on de-
scriptors and other local contextual cues. about
700,000 question sentences are generated from gi-
gaword articles (8% of the total number of articles).
once a cloze question has been formed we se-
lect an appropriate article as a passage. the ar-
ticle should be independent of the question arti-
cle but should discuss the people and events men-
tioned in the question sentence. to    nd a passage
we search the gigaword dataset using the apache
lucene information retrieval system (mccandless et
al., 2010), using the question sentence as the query.
the named entity to be deleted is included in the
query and required to be included in the returned
article. we also restrict the search to articles pub-
lished within two weeks of the date of the question
article. articles containing sentences too similar to
the question in word overlap and phrase matching
near the blanked phrase are removed. we select the
best matching article satisfying our constraints.
if
no such article can be found, we abort the process
and move on to a new question. see the appendix
for details.

given a question and a passage we next form the
list of choices. we collect all person named enti-
ties in the passage except unblanked person named
entities in the question. choices that are subsets
of longer choices are eliminated. for example the
choice    obama    would be eliminated if the list also
contains    barack obama   . we also discard ambigu-
ous cases where a part of a blanked ne appears in
multiple candidate answers, e.g., if a passage has
   bill clinton    and    hillary clinton    and the blanked
phrase is    clinton   . we found this simple corefer-
ence rule to work well in practice since news arti-
cles usually employ full names for initial mentions
of persons. if the resulting choice list contains fewer
than two or more than    ve choices, the process is
aborted and we move on to a new question.3

3the maximum of    ve helps to avoid sports articles contain-

after forming an initial set of problems we then
remove    duplicated    problems. duplication arises
because gigaword contains many copies of the same
article or articles where one is clearly an edited ver-
sion of another. our duplication-removal process
ensures that no two problems have very similar ques-
tions. here, similarity is de   ned as the ratio of the
size of the bag of words intersection to the size of
the smaller bag.

in order to focus our dataset on the most interest-
ing problems, we remove some problems to suppress
the performance of the following simple baselines:

    first person in passage: select the person that ap-

pears    rst in the passage.

    most frequent person: select the most frequent

person in the passage.

    id165: select the most likely answer to    ll the
blank under a 5-gram language model trained on
gigaword minus articles which are too similar to
one of the questions in word overlap and phrase
matching.

    unigram: select the most frequent last name us-

ing the unigram counts from the 5-gram model.

to minimize the number of questions removed we
solve an optimization problem de   ned by limiting
the performance of each baseline to a speci   ed target
value while removing as few problems as possible,
i.e.,

max
  (c)

x

  (c)|t (c)|

(1)

c   {0,1}|b|

subject to

  (c)|t (c)|

    k

n

   i x
c:ci=1
n = x

  (c)|t (c)|

(2)

c   {0,1}|b|

where t (c) is the subset of the questions solved by
the subset c of the suppressed baselines, and   (c)
is a keeping rate for question set t (c). ci = 1 indi-
cates i-th baseline is in the subset and |b| is a number
of baselines. then n is a total number of questions
and k is an upper bound for the baselins after sup-
pression. k is set to the random performance. the

ing structured lists of results.

baseline

first person in passage
most frequent person
id165
unigram
random   

accuracy

before after
0.32
0.60
0.61
0.33
0.33
0.53
0.32
0.43
0.32
0.32

table 2: performance of suppressed baselines.    random per-
formance is computed as a deterministic function of the number
of times each choice set size appears. many questions have only
two choices and there are about three choices on average.

# queries
avg # choices
avg # tokens
vocab size

relaxed
train

185,978
3.5
378
347,406

train

valid

test

127,786
3.5
365

10,000
3.4
325
308,602

10,000
3.4
326

table 3: dataset statistics.

performance of these baselines before and after sup-
pression are shown in table 2. the suppression re-
moved 49.9% of the questions.

table 3 shows statistics of our dataset after sup-
pression. we split the    nal dataset into train, vali-
dation, and test by taking the validation and test to
be a random split of the most recent 20,000 prob-
lems as measured by question article date. in this
way there is very little overlap in semantic subject
matter between the training set and either validation
or test. we also provide a larger    relaxed    training
set formed by applying less baseline suppression (a
larger value of k in the optimization). the relaxed
training set then has a slightly different distribution
from the train, validation, and test sets which are all
fully suppressed.

4 performance benchmarks

we report the performance of several systems to
characterize our dataset:

    word overlap: select the choice c inserted to
the question q which is the most similar to any
sentence s in the passage, i.e., cossim(bag(c +
q), bag(s)).

    sliding window and distance baselines (and their

combination) from richardson et al. (2013).

    semantic features: nlp feature based system

from wang et al. (2015).

    attentive reader: lstm with attention mecha-

nism (hermann et al., 2015).

    stanford reader: an attentive reader modi   ed

with a bilinear term (chen et al., 2016).

    attention sum (as) reader: gru with a point-

attention mechanism (kadlec et al., 2016).

    gated-attention (ga) reader: attention sum

reader with gated layers (dhingra et al., 2016).

table 4 shows the performance of each system on
the test data. for the attention and stanford read-
ers, we anonymized the who-did-what data by re-
placing named entities with entity ids as in the id98
and daily mail datasets.

we see consistent reductions in accuracy when
moving from id98 to our dataset. the attentive
and stanford reader drop by up to 10% and the as
and ga reader drop by up to 17%. the ranking of
the systems also changes. in contrast to the atten-
tive/stanford readers, the as/ga readers explicitly
leverage the frequency of the answer in the passage,
a heuristic which appears bene   cial for the id98
and daily mail tasks. our suppression of the most-
frequent-person baseline appears to more strongly
affect the performance of these latter systems.

5 conclusion

we presented a large-scale person-centered cloze
dataset whose scalability and    exibility is suitable
for neural methods. this dataset is different in a va-
riety of ways from existing large-scale cloze datasets
and provides a signi   cant extension to the training
and test data for machine comprehension.

references

kurt bollacker, colin evans, praveen paritosh, tim
sturge, and jamie taylor. 2008. freebase: a col-
laboratively created graph database for structuring hu-
man knowledge.
in proceedings of the 2008 acm
sigmod international conference on management of
data, pages 1247   1250.

danqi chen, jason bolton, and christopher d. manning.
2016. a thorough examination of the id98/daily mail
reading comprehension task.
in proceedings of the

system

wdw

word overlap
sliding window
distance
sliding window + distance
semantic features
attentive reader
attentive reader (relaxed train)
stanford reader
stanford reader (relaxed train)
as reader
as reader (relaxed train)
ga reader
ga reader (relaxed train)
human performance

0.47
0.48
0.46
0.51
0.52
0.53
0.55
0.64
0.65
0.57
0.59
0.57
0.60
84/100

id98

   
   
   
   
   
0.63i

0.73ii

0.70iii

0.74iv

0.75+ii
table 4: system performance on test set. human performance
was computed by two annotators on a sample of 100 questions.
result marked i is from (hermann et al., 2015), results marked
ii are from (chen et al., 2016), result marked iii is from
(kadlec et al., 2016), and result marked iv is from (dhingra
et al., 2016).

54th annual meeting of the association for compu-
tational linguistics (volume 1: long papers), pages
2358   2367.

bhuwan dhingra, hanxiao liu, william w. cohen, and
ruslan salakhutdinov. 2016. gated-attention readers
for text comprehension. corr, abs/1606.01549.

jenny rose finkel, trond grenager, and christopher
manning. 2005.
incorporating non-local informa-
tion into information extraction systems by gibbs sam-
pling.
in proceedings of the 43rd annual meeting
on association for computational linguistics, pages
363   370.

karl moritz hermann, tom  as kocisk  y, edward grefen-
stette, lasse espeholt, will kay, mustafa suleyman,
and phil blunsom. 2015. teaching machines to read
and comprehend. in advances in neural information
processing systems, pages 1684   1692.

felix hill, antoine bordes, sumit chopra, and jason we-
ston. 2016. the goldilocks principle: reading chil-
dren   s books with explicit memory representations. in
proceedings of international conference on learning
representations.

rudolf kadlec, martin schmid, ond  rej bajgar, and jan
kleindienst. 2016. text understanding with the atten-
tion sum reader network. in proceedings of the 54th
annual meeting of the association for computational
linguistics (volume 1: long papers), pages 908   918.

dan klein and christopher d. manning. 2003. accurate
unlexicalized parsing. in proceedings of the 41st an-
nual meeting on association for computational lin-
guistics - volume 1, pages 423   430.

michael mccandless, erik hatcher, and otis gospod-
netic. 2010. lucene in action, second edition. man-
ning publications co.

matthew richardson, christopher j.c. burges, and erin
renshaw. 2013. mctest: a challenge dataset for the
open-domain machine comprehension of text. in pro-
ceedings of the 2013 conference on empirical meth-
ods in natural language processing, pages 193   203.
amit singhal. 2012. introducing the id13:

things, not strings. of   cial google blog.

hai wang, mohit bansal, kevin gimpel, and david
mcallester. 2015. machine comprehension with syn-
tax, frames, and semantics. in proceedings of the 53rd
annual meeting of the association for computational
linguistics and the 7th international joint conference
on natural language processing (volume 2: short pa-
pers), pages 700   706.

jason weston, antoine bordes, sumit chopra, and
tomas mikolov. 2016. towards ai-complete ques-
tion answering: a set of prerequisite toy tasks.
in
proceedings of international conference on learning
representations.

yi yang, wen-tau yih, and christopher meek. 2015.
wikiqa: a challenge dataset for open-domain ques-
tion answering.
in proceedings of the 2015 confer-
ence on empirical methods in natural language pro-
cessing, pages 2013   2018.

6 appendix

we include pseudocode for generating questions
(alg. 1) and multiple choice answer sets (alg. 2).

data: an article a
result: either null, if no question can be

formed from a, or a cloze question q
and the deleted person named entity
(ne) t.

s     the    rst sentence of the article a.
if not 10     |s|     120 then return null
e     the set of person nes e in s such that e
contains no more than three words. named
entities sharing a word with an earlier named
entity are deleted.
if |e| < 2 then return null
t     constituent parse tree of s
for e     e starting from the end of s do
b     the node in t for person ne e.
while b.category     {np, nnp, nnps}
and b.head = e and no element of
b.descendant has category sbar do

b     b.parent

end
if no element of b.descendant has head
word    and    then

return (q, e) where q is the cloze
question formed from deleting b from s.

end

end
return null

algorithm 1: question formation. named enti-
ties are recognized by the stanford ner system
and parse trees are generated by the stanford pid18
parser. here x.category is the syntactic category
of parse node x, x.parent is the parent-node of
the node x, x.descendant is the set of descen-
dants of x and x.head is the head word of x.

data: a pair (q, e) returned by algorithm 1.
result: either null, if no appropriate passage can be

found, or a passage a and multiple choice
answer set c.

p     null
for a     rankedarticles(q, e) do

c     the set of person nes in a different from
e and not in q. named entities appearing as
sub-part of an earlier named entity are deleted.
if 2     |e|     5 then return (a, c)

end
return null

rankedarticles(q, e){
ar        
for t     {1, 3, 7, 14} do

a     articles(q, e, t)
for a     a do

if isvalid (a, q) then

ar     ar followed by a

end

end

end
return ar}

articles(q, e, t){
result: articles containing the person ne e,

published within t days of the article from
which q was taken, and ranked by apache
lucene.}

isvalid(a, q){
a is a valid passage for q if the following hold:
    no sentence in a shares more than 78% of its words

with the question q.

    no sentence in a contains the sequence of    ve words

to the left of the blank in q, and similarly for the
sequence to the right.

    a contains at least one of the person nes in q. (all
person nes in q are different from e. two named
entities are considered the same if they share some
words.) }

algorithm 2: passage selection

