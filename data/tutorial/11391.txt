a large self-annotated corpus for sarcasm

mikhail khodak, nikunj saunshi, kiran vodrahalli

computer science department, princeton university

35 olden st., princeton, new jersey 08540

{mkhodak,nsaunshi,knv}@cs.princeton.edu

we introduce the self-annotated reddit corpus (sarc), a large corpus for sarcasm research and for training and evaluating systems
for sarcasm detection. the corpus has 1.3 million sarcastic statements     10 times more than any previous dataset     and many times
more instances of non-sarcastic statements, allowing for learning in both balanced and unbalanced label regimes. each statement is
furthermore self-annotated     sarcasm is labeled by the author, not an independent annotator     and provided with user, topic, and
conversation context. we evaluate the corpus for accuracy, construct benchmarks for sarcasm detection, and evaluate baseline methods.

abstract

8
1
0
2

 
r
a

 

m
2
2

 
 
]
l
c
.
s
c
[
 
 

4
v
9
7
5
5
0

.

4
0
7
1
:
v
i
x
r
a

keywords: sarcasm, classi   cation, conversation

1

introduction

sarcasm detection is an important component in many nat-
ural language processing (nlp) systems, directly relevant
to natural language understanding, dialogue systems, and
id111. however, detecting sarcasm is dif   cult be-
cause it occurs infrequently and is dif   cult for even humans
to discern (wallace et al., 2014). despite these proper-
ties, existing datasets either have balanced labels     data
with roughly the same number of examples of each label
(gonz  alez-ib  anez et al., 2011; bamman and smith, 2015;
joshi et al., 2015; amir et al., 2016; oraby et al., 2016)
    or use humans to annotate sarcastic statements (riloff et
al., 2013; swanson et al., 2014; wallace et al., 2015).
in this work, we make available the    rst corpus1 for sar-
casm detection that has both unbalanced and self-annotated
labels and does not consist of short text snippets from twit-
ter2. with more than a million examples of sarcastic state-
ments, each provided with author, topic, and contex infor-
mation, the dataset exceeds all previous sarcasm corpora
by an order of magnitude in size. this is possible due to
the comment structure of the social media site reddit3 as
well as its frequently-used and standardized annotation for
sarcasm.
following a discussion of corpus construction and rele-
vant statistics in section 3, we discuss the quality of this
dataset compared to alternative sources in section 4, man-
ually evaluating our corpus for noise. then in section 5 we
use our dataset to construct suitable benchmarks for sar-
casm detection systems and examine the performance of
simple baseline methods and human evaluators on these
subsets.

2 related work

since our main contribution is a corpus and not a method
for sarcasm detection, we point the reader to a recent sur-
vey by joshi et al. (2016) that discusses many interesting
efforts in this area. note that many of the works the authors
mention will be discussed by us in this section, with many

1http://nlp.cs.princeton.edu/sarc/
2https://www.twitter.com
3https://www.reddit.com

papers using their own datasets and illustrating the need for
common evaluation baselines.
sarcasm datasets can largely be distinguished by the
sources used to get sarcastic and non-sarcastic statements,
the amount of human annotation, and whether the dataset
is balanced or unbalanced. reddit has been used before,
notably by wallace et al.
(2015); while the authors al-
low unabalanced labeling, they do not exploit the possi-
bility of using self-annotation and generate around 10,000
human-labeled sentences. twitter is a frequent source due
to the self-annotation provided by hashtags such as #sar-
casm, #notsarcasm, and #irony (reyes et al., 2013; bam-
man and smith, 2015; joshi et al., 2015). as discussed in
section 4.2, its abbreviated language and other properties
make twitter a less attractive source for annotated com-
ments. however, it is by far the largest raw source of data
for this purpose and has led to some large unbalanced cor-
pora in previous efforts (riloff et al., 2013; pt  a  cek et al.,
2014). a further source of comments is the internet argu-
ment corpus (iac) (walker et al., 2012), a scraped corpus
of internet discussions that can be further annotated for sar-
casm by humans or by machine learning; this is done by
lukin and walker (2013) and oraby et al. (2016), in both
cases resulting in around 10,000 labeled statements.

3 corpus details

3.1 reddit structure and annotation
reddit is a social media site in which users communi-
cate by commenting on submissions, which are titled posts
consisting of embedded media, external links, and/or text,
that are posted on topic-speci   c forums known as subred-
dits; examples of subreddits include funny, pics, and
science. users comment on submissions and on other
comments, resulting in tree-like conversation structure such
that each comment has a parent comment. we refer to el-
ements as any nodes in the tree of a reddit link (i.e., com-
ments or submissions).
reddit users have adopted a common method for sarcasm
annotation consisting of adding the marker    /s    to the end
of sarcastic statements;
this originates from the html
text delineation <sarcasm>...</sarcasm>. as with
twitter hashtags, using these markers as indicators of sar-
casm is noisy (bamman and smith, 2015), especially since

corpus dataset

iac

joshi et al.    15
oraby et al.    16
joshi et al.    16
bamman & smith    15
reyes et al.    13
riloff et al.    13
pt  a  cek et al.    13
reddit wallace et al.    15

twitter

sarc

sarcastic

total
751
1502
4.7k
9.4k
4.2k
5.2k
9.7k
19.5k
10k
40k
35k
175k
130k
780k
753
14124
1.34m 533m

table 1: sarc compared with previous sarcasm corpora.
in addition to a million sarcastic comments our dataset also
provides many millions more non-sarcastic statements by
the same authors.

detection systems. these benchmarks, whether in the bal-
anced or unbalanced regimes, require further subsampling
of the corpus and an approach for dealing with noisy data
in the face of sparse signals. we specify and evaluate an
approach for doing so in section 5.1, followed by the eval-
uation of learning algorithms on the output.
4 corpus evaluation

there are three major metrics of interest for evaluating our
corpora: (1) size, (2) the proportion of sarcastic to non-
sarcastic comments, and (3) the rate of false positives and
false negatives. of interest is also the quality of the text in
the corpus and its applicability to other nlp tasks. thus in
this section we evaluate error in the raw corpus and provide
comparison with other corpora used to construct sarcasm
datasets. we also discuss the potential limitations of our
approach.
4.1 manual evaluation
to investigate the noisiness of using reddit as a source of
self-annotated sarcasm we estimate the proportion of false
positives and false negatives induced by our    ltering. this
is done by manually checking a random subset of 500 com-
ments from sarc tagged as sarcastic and 500 tagged as
non-sarcastic, with full access to the comment   s context.
a comment was determined to be false positive if    /s    tag
was not an annotation but part of the sentence and a false
negative if the comment author was clearly being sarcastic
to the human rater. this procedure yielded a false positive
rate of 1.0% and a false negative rate of 2.0%. although
the false positive rate is reasonable, the false negative rate
is signi   cant compared to the sarcasm proportion (0.25%),
indicating large variation in the working de   nition of sar-
casm and the need for methods that can handle noisy data
in the unbalanced setting. in the balanced setting this is still
a fairly small amount of noise.
4.2 comparison with other sources
as noted before, twitter has been the most common source
for sarcasm in previous corpora; this is likely due to the ex-
plicit annotation provided by its hashtags. however, using
reddit as a source of sarcastic comments holds many re-
search advantages. unlike reddit comments, which are not

figure 1: a reddit submission and one of its comments.
note the conventional annotation    /s    indicating sarcasm.

many users do not use the marker, do not know about it, or
only use it where sarcastic intent is not otherwise obvious.
we discuss the extent of this noise in section 4.1.
3.2 constructing sarc
reddit comments from december 2005 have been made
available due to web-scraping 4; we construct our dataset
as a subset of comments from january 2009-april 2017,
comprising the vast majority of comments and excluding
noisy data from earlier years. for each comment we pro-
vide a sarcasm label, author, the subreddit it appeared in,
the comment score as voted on by users, the date of the
comment, and identi   ers linking back to the original dataset
of all comments.
to reduce noise, we use several    lters to remove noisy and
uninformative comments. many of these are standard pre-
processing steps such as excluding urls and limiting char-
acters to be ascii. to handle reddit data, we also exclude
comments that are descendants of sarcastic comments in the
conversation tree, as annotation in such cases is extremely
noisy, with authors agreeing or disagreeing with the previ-
ously expressed sarcasm with their own sarcasm but often
with no marking.
our raw corpus consists of three    les:

1. an array in csv format containing 533 million com-
ments, of which around 1.3 million are sarcastic.
this    le only contains those comments whose authors
know about the standard sarcasm annotation; this is
determined by whether they have used the annotation
in the same month as the comment was made or ear-
lier. this limitation is added in order to reduce false
negatives due to authors not annotating their sarcasm.
each row also contains the parent comment.

2. a hashtable in json format containing all comments
and posts in the conversation thread of a sarcastic com-
ment as well as all siblings of sarcastic comments.

3. an array in csv format, with each row containing a
sequence of comments leading up to a sarcastic com-
ment, the (sarcastic and non-sarcastic) responses to the
last element in that sequence, and the labels of those
responses. each element is given as a key to the pre-
vious    le.

this raw corpus is very large and suitable for both large-
scale machine learning and statistical analysis as well for
deriving smaller benchmark tasks for evaluating sarcasm

4http://files.pushshift.io/reddit

bankers celebrate dawn of thetrump era (politico.com)submitted 4 months ago by boartar76 commentssharesavehidegive gold[   ]quexana 50 points 4 months ago finally, the bankers have a voice in washington! permalinkembedsavereportgive goldreplywelcome to /r/politics! please read the wikibefore participating.topsorted by: /s    false positives are instances where a comment is in-
correctly labeled as sarcastic due to the presence of a
   /s    tag. this case only occurs when a    /s    tag ap-
pears in the comment with a meaning different from
indicating sarcasm. as previously noted, this pos-
sibility is more likely to occur if a user is unaware
of the    /s    notation. similarly, if    /s    is used to re-
fer to the convention of its use as an annotation, the
naive approach of merely detecting the    /s    string also
fails. finally, it is possible that    /s    has other connota-
tions: for instance, in html, <s>...</s> denotes
a strike-through. therefore a subreddit focusing on the
discussion of web programming, for example, might
include instances where    /s    is used with a different
meaning.
to combat the    rst issue, we restrict to users aware of
the sarcasm notation by ensuring they have used    /s   
previously. this    lter helps ensure that the users are
aware of the semantic usage of    /s   . for the second
case, we only keep comments which have the    /s    at
the end of the comment. all comments we inspected
which terminated in    /s    used the annotation to indi-
cate sarcasm. the third case amounts to solving word
sense disambiguation, and we did not    nd a univer-
sally simple approach to reduce noise of this form.
however, it is possible to reduce the likelihood of this
form of sense mismatch by restricting to subreddits
which are known to not have alternate senses for    /s   
(e.g., politics).

    false negatives are instances where a comment is sar-
castic, but not annotated with a    /s   . false negatives
are harder to detect than false positives since the por-
tion of comments which have no sarcasm annotation
is much larger than the portion that do. there are two
primary ways a false negative can arise: either a user
does not know of the    /s    convention, or the user be-
lieves their use of sarcasm is obvious enough to war-
rant not including the tag. notably, such a belief de-
pends on what community the user is communicating
in, who the user is communicating with (another user
they routinely have arguments with, or a stranger), and
also on prior comments on the thread. as noted pre-
viously, a comment which is sarcastic often spawns a
chain of subsequent comments which are all sarcas-
tic, but which lack the    /s    symbol. in short, context
matters a lot for determining whether or not a sarcastic
comment is obvious.
the    rst issue is solved by our    rst    lter. the second
issue is dif   cult to address, and remains a limitation of
our approach. we avoid the particular case of sarcastic
comment chains by discarding the child comments of
sarcastic comments in a thread.

all of our    lters are validated by manual evaluation of the
false positive and false negative rates as described in sec-
tion 4.1, which improved considerably after implementing
the    lters. our manual evaluation approach has one cen-
tral limitation: though we provide local context to the hu-
man annotators, if the ability to distinguish the sarcastic in-
tent of a comment relies on knowledge of, for instance, the

figure 2:
sarcasm percentage for subreddits with more
than a million comments in sarc. well-moderated and
special-interest forums such as science and asoiaf (re-
ferring to fantasy series a song of ice and fire) have less
sarcasm than controversial and less-moderated subreddits.

constrained by length and contain fewer hashtags, tweets
are written in abbreviated english. hashtagged tokens are
also frequently used as a part of the statement itself (e.g.
   that was #sarcasm   ), blurring the line between text and
annotation; on reddit    /s    is generally only used as some-
thing other than annotation when its use as an annotation is
being referred to (e.g.    you forgot the /s   ). the full con-
versation context is also much easier to provide on reddit
due to the shallow tree structure of an individual post and
its comments.
furthermore, from a subsample of twitter and reddit data
from july 2014 we determined that a vastly smaller percent-
age (.002% vs. .927%) of twitter authors make use of sar-
casm annotation (#sarcasm, #sarcastic, or #sarcastictweet).
we hypothesize that reddit users require sarcastic annota-
tion more frequently and in a more standardized form be-
cause they are largely anonymous and so cannot rely on a
shared context to communicate sarcasm. finally, reddit
also bene   ts from having subreddits, which enable featur-
ization and data exploration based on an explicit topic as-
signment.
the internet argument corpus (iac) has also been used
as a source of sarcastic comments (walker et al., 2012).
the corpus developers found 12% of examples in the iac
to be sarcastic, which is a much nicer class proportion for
sarcasm detection than ours. as the reddit data consists of
arbitrary conversations, not just arguments, it is not surpris-
ing that our sarcasm percentage is much smaller, even when
accounting for false negatives; this property also makes our
dataset more realistic. unlike reddit and twitter, the iac
also requires manual annotation of sarcasm.

4.3 limitations of our approach
there are a few noteworthy limitations to our method of
collecting a self-annotated sarcasm dataset. despite our ef-
forts to    lter noisy    /s    labels, there remain instances where
no simple rule reliably eliminates incorrect labels. we de-
scribe the dif   culties for both false positives and false neg-
atives:

27.0
24.9
26.7

pol-unbal   

all-bal   
73.2
75.8
71.0
81.6
92.0
50.0

pol-bal
75.9
76.5
76.0
83.0
85.0
50.0

method
bag-of-words
bag-of-bigrams
sentence embedding
human (average)
human (majority)
random
    used only features appearing at least 5 times in the
corpus for bag-of-words and bag-of-bigrams.
    used only features appearing at least 100 times in
the corpus for bag-of-words and bag-of-bigrams.
measured as average f1- score scaled by 100

10.2

-
-

table 2: accuracy percentage of baseline methods for sar-
casm detection compared to human performance. tests
conducted in the balanced regime for the all subreddits task
and balanced and unbalanced regimes for the politics sub-
reddit task

commenter   s comment history or relevant news, then hu-
man annotators may not perform well. we tried to resolve
this issue by using a voting scheme which required several
humans to agree about whether or not a comment with its
context was sarcastic.

5 benchmarks for sarcasm detection

a direct application of our corpus is for training and eval-
uating sarcasm detection systems. thus we use the raw
corpus described in section 3 to construct several useful
benchmarks for the task of classifying statements as sar-
castic or non-sarcastic. all benchmarks provide the full
conversation thread leading up to the target statements to
the learning algorithm, along with comment metadata. fol-
lowing their speci   cation we consider a few context-free
baseline methods depending only on linear classi   cation
over simple featurizations. code to reproduce our results is
provided at https://github.com/nlprinceton/
sarc.

5.1 evaluation task
in the most general case, we use the provided raw    les to
construct datapoints for systems to learn the following task:
given a post and a sequence of comments, determine which
comments among the responses to the last comment in the
sequence are sarcastic. thus each datapoint consists of a
conversation thread followed by a series of responses and
sarcasm labels. performance on this task is measured by
average precision, recall and f1 scores.
before constructing this subcorpus we    rst remove from
consideration all comments that are not complete sentences
and not between 2 and 50 tokens long, allowing for cleaner
comments in the evaluation. although the responses are
still largely non-sarcastic, the proportion of sarcastic com-
ments is much greater here as each datapoint must corre-
spond to a thread where at least one sarcastic annotation
occurred. in total we construct 8.44 million sequences, with
the average proportion of sarcastic responses being 28.1%.

figure 3: score distributions of sarcastic and non-sarcastic
comments in the raw sarc dataset.

5.1.1 balanced labels
we construct a balanced learning task by taking only one
sarcastic and one non-sarcastic response from each set of
responses to a comment sequence. the task then becomes
one of picking which of two statements that share a context
is sarcastic, with performance measured by accuracy.
while having only posts with at least one sarcastic response
is useful, it also increases the false negative rate as com-
ments warranting a sarcastic response often draw other sar-
castic statements that are similar in content to the labeled
sarcastic responses, but which themselves may not be la-
beled. thus to reduce this issue when picking the non-
sarcastic statement, we featurize all statements using the
normalized sum of common crawl glove embeddings of
the words and pick from only those non-sarcastic state-
ments that have similarity     0.95 with the sarcastic state-
ment (pennington et al., 2014).

5.1.2 politics
the dif   culty of detecting sarcasm rests not only on the
need to understand the context of previous statements but
also on understanding background information on the topic
being discussed. even humans will struggle with sarcastic
comments drawn from unfamiliar topics, for instance, ob-
scure hobbies or art forms. thus we also test human and
machine performance on comments drawn solely from the
politics subreddit, a topic for which all evaluators had
suf   cient background information. this subsample con-
tains 17 thousand sequences, with the average proportion
of sarcastic responses being 23.2%.

5.2 methods
for the case of balanced labels, a simple, no-context base-
line method for the above task is to featurize the two re-
sponses and to train a id28 classi   er to distin-
guish between the sarcastic and non-sarcastic response as
separate classes. on the testing set, we pick the response
with the highest id203 of being labeled sarcastic as
the sarcastic one. we split both datasets we test on 80%-
20% between train-test subsets and report the results of the
following three approaches in table 2.

:)

lmao

obviously

clearly
so fun
totally

pos. id165s weights neg. id165s weights
-1.37
-1.27
-1.17
-1.17
-1.10
-1.00
-0.98
-0.97
-0.96
-0.95

good thing
shocked
shocking
m sure
omg

1.79
1.66
1.49
1.39
1.35
1.32
1.23
1.15
1.13
1.13

wat
why
oh god

:(
:/
, but
lol

the original

how dare

figure 4:
sarcastic comments in the raw sarc dataset.

length distributions of sarcastic and non-

5.2.1 bag-of-id165s
the bag-of-id165s representation consists of using a
document   s id165 counts as features in a vector. we test
two variants, the bag-of-words and the bag-of-bigrams.
for the subsample containing all subreddits we use only
those features that occur at least 5 times in the training
comments. we considered including other comment fea-
tures, such as comment length and scores, but empirical
results and the distributions of these features (see figures 3
and 4) indicate that they are not particularly informative.
more sophisticated featurization, such as the noun-phrase
and feature interaction indicators proposed by (wallace et
al., 2014), is left to future work.

5.2.2 sentence embeddings
given a document, taking the elementwise sum of embed-
dings of its words provides a simple low-dimensional docu-
ment representation. this particular technique of construct-
ing word sequence featurizations has been previously stud-
ied and established as a strong baseline for a multitude of
supervised nlp prediction tasks (arora et al., 2017). we
use 1600-dimensional glove representations trained on the
amazon product corpus, which is used instead of common
crawl because of the semantic closeness between sentiment
and sarcasm (mcauley et al., 2015).

5.2.3 human
human sarcasm detection performance was measured by
giving 5 human evaluators 100 samples and asking them to
perform the same task as the algorithm: determining which
of two statements is sarcastic. we provide links to the eval-
uation survey for the full corpus5 as well as the politics sub-
reddit6. the full context was provided, and the    nal human
classi   er was taken as the majority vote of all 5 evaluators.

5.2.4 random
we use a simple baseline where all responses are labeled
sarcastic randomly and independently with a    xed proba-
bility. this id203 is chosen as the average fraction of
responses that are sarcastic in the training set.

5www.surveygizmo.com/s3/3878814/sarcmain
6www.surveygizmo.com/s3/3878798/sarcpol

table 3: most positive and negative id165s based on
weights assigned by the bag-of-bigrams classi   er. positive
(negative) weight for an id165 implies it is a strong indi-
cator for the comment being sarcastic (non-sarcastic). the
weights indicate that positive id165s are more important
for linear classi   cation of sarcasm.

5.3 results

5.3.1 baselines
the baselines in table 2 perform reasonably well and much
better than the random baseline, but none of them match hu-
man performance on either dataset. there is clear scope for
improvement for machine learning methods, starting with
the use of context provided to make better decisions about
sarcasm. as evident in table 2, bag-of-word and bag-of-
bigram representations perform better than sentence em-
beddings; however, distributed representations may be nec-
essary for incorporating context in future methods.

5.3.2 human
as expected, human evaluators performed signi   cantly bet-
ter, both as a majority and on-average, than the baseline
methods. there was signi   cant but not perfect agreement
among annotators: on the main dataset the fleiss kappa
score (fleiss, 1971) was 0.5, indicating moderate agree-
ment, while on the politics subsample it was 0.67, indicat-
ing substantial agreement. interestingly, while individually
human performance was worse on average on sequences
drawn from all subreddits than on the politics subsample,
taking a majority vote among humans led to much better
performance in the former case. this performance boost
indicates that while individuals may not have enough con-
text for all topics of discussion on reddit, in aggregate there
is enough information to do well, even surpassing the per-
formance on a well-known topic such as politics.

6 conclusion

we introduce a large sarcasm dataset based on self-
annotated reddit comments. both the raw data and eval-
uation subsamples are made freely available, with the for-
mer having over 1 million sarcastic sentences, larger than
any existing dataset. we evaluate the baseline performance
of simple machine learning methods and compare them
with human performance. we hope that future users of this
dataset will improve upon these benchmarks and    nd new
ways of utilizing the large quantities of self-annotated in-
formation we provide.

the 2013 conference on empirical methods in natural
language processing, pages 704   741. association for
computational linguistics.

swanson, r., lukin, s., eisenberg, l., corcoran, t. c., and
walker, m. a. (2014). getting reliable annotations for
sarcasm in online dialogues. in language resources and
evaluation conference.

walker, m. a., anand, p., tree, j. e. f., abbott, r., and
king, j.
(2012). a corpus for research on delibera-
tion and debate. in language resources and evaluation
conference.

wallace, b. c., choe, d. k., kertz, l., and charniak, e.
(2014). humans require context to infer ironic intent (so
computers probably do, too. in proceedings of the 52nd
annual meeting of the association for computational
linguistics, pages 512   516. association for computa-
tional linguistics.

wallace, b. c., choe, d. k., and charniak, e.

(2015).
sparse, contextually informed models for irony detec-
tion: exploiting user communities, entities, and senti-
ment. in proceedings of the 53rd annual meeting of the
association for computational linguistics, pages 1035   
1044. association for computational linguistics.

7 acknowledgements

we would like to acknowledge angel chang and christiane
fellbaum for helpful discussion and suggestions.

8 bibliographical references

amir, s., wallace, b. c., lyu, h., carvalho, p., and silva,
m. j. (2016). modelling context with user embeddings
for sarcasm detection in social media.

arora, s., liang, y., and ma, t. (2017). a simple but
tough-to-beat baseline for sentence embeddings. confer-
ence paper at iclr 2017.

bamman, d. and smith, n. a. (2015). contextualized sar-
casm detection on twitter. association for the advance-
ment of arti   cial intelligence.

fleiss, j. l. (1971). measuring nominal scale agreement
among many raters. psychological bulletin, 76:378   
382.

gonz  alez-ib  anez, r., muresan, s., and wacholder, n.
(2011). identifying sarcasm in twitter: a closer look.
in proceedings of the 49th annual meeting of the asso-
ciation for computational linguistics, pages 581   586.
association for computational linguistics.

joshi, a., sharma, v., and bhattacharyya, p. (2015). har-
nessing context incongruity for sarcasm detection.
in
proceedings of the 53rd annual meeting of the associa-
tion for computational linguistics, pages 757   762. as-
sociation for computational linguistics.

joshi, a., bhattacharyya, p., and carman, m. j. (2016).

automatic sarcasm detection: a survey. arxiv.

lukin, s. and walker, m. (2013). really? well. apparently
id64 improves the performance of sarcasm and
nastiness classi   ers for online dialogue. in proceedings
of the workshop on language in social media, pages 30   
40. association for computational linguistics.

mcauley, j., pandey, r., and leskovec, j. (2015). infer-
ring networks of substitutable and complementary prod-
ucts. in proceedings of the 21th acm sigkdd inter-
national conference on knowledge discovery and data
mining.

oraby, s., harrison, v., reed, l., hernandez, e., riloff,
e., and walker, m. (2016). creating and characterizing
a diverse corpus of sarcasm in dialogue. in proceedings
of the sigdial 2016 conference, pages 31   41. associ-
ation for computational linguistics.

pennington, j., socher, r., and manning, c.

(2014).
glove: global vectors for word representation. in pro-
ceedings of the 2014 conference on empirical methods
in natural language processing, pages 1532   1543. as-
sociation for computational linguistics.

pt  a  cek, t., habernal, i., and hong, j. (2014). sarcasm
detection on czech and english twitter. in 25th interna-
tional conference on computational linguistics: tech-
nical papers, pages 213   223.

reyes, a., rosso, p., and veale, t. (2013). a multidi-
mensional approach for detecting irony in twitter. data
knowledge engineering, 47(1).

riloff, e., qadir, a., surve, p., silva, l. d., gilbert, n., and
huang, r. (2013). sarcasm as contrast between a posi-
tive sentiment and negative situation. in proceedings of

