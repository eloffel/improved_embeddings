name phylogeny

a generative model of string variation

nicholas andrews, jason eisner and mark dredze

department of computer science,

johns hopkins university

emnlp 2012     thursday, july 12

outline

introduction

generative model

mutation model

id136

experiments

future work

what   s a name phylogeny?

a fragment of a    name phylogeny    learned by our model

(cid:73) each edge corresponds to a    mutation   

khawajagharibnawazmuinuddinhasanchistykhwajagharibnawazkhwajamuinal-dinchishtighareebnawazkhwajamoinuddinchishtikhwajagharibnawazmuinuddinchishtithomasrugglespynchon,jr.thomasrugglespynchonjr.thomasr.pynchon,jr.thomasr.pynchonjr.thomasr.pynchonthomaspynchon,jr.thomaspynchonjr.problem: organizing disorganized collections of strings

barack obamaobamapresident barack obamabarackbarrackbarack obamahillary clintonclintonbill clintonbillbillbarryvice president clintonbillyhillarywill clintonhillary rodham clintonmitt romneybarack obama srromneywillard m. romneygovernor mitt romneymr. romneymittmitt rommeyclintonwilliam clintonbarakpresident bill clintonpresidentbarack h. obamams. clintonproblem: organizing disorganized collections of strings

barack obamaobamapresident barack obamabarackbarrackbarack obamahillary clintonclintonbill clintonbillbillbarryvice president clintonbillyhillarywill clintonhillary rodham clintonmitt romneybarack obama srromneywillard m. romneygovernor mitt romneymr. romneymittmitt rommeyclintonwilliam clintonbarakpresident bill clintonpresidentbarack h. obamams. clintonchallenges

(cid:73) name variation: the same entity may have di   erent names,
and a good measure of    similarity    between strings may not
be available (this work)

(cid:73) disambiguation: di   erent entities may have names in
common, requiring the use of context to disambiguate
between them

barack obamaobamapresident barack obamabarackbarrackbarack obamahillary clintonclintonbill clintonbillbillbarryvice president clintonbillyhillarywill clintonhillary rodham clintonmitt romneybarack obama srromneywillard m. romneygovernor mitt romneymr. romneymittmitt rommeyclintonwilliam clintonbarakpresident bill clintonpresidentbarack h. obamams. clintonhow does a name phylogeny help?

1. organizes name variants into connected components (clusters)

2. align names as    mutations    of one another

3. we can estimate a mutation model given a phylogeny, and a
mutation model gives a distribution over phylogenies (    em)

khawajagharibnawazmuinuddinhasanchistykhwajagharibnawazkhwajamuinal-dinchishtighareebnawazkhwajamoinuddinchishtikhwajagharibnawazmuinuddinchishtithomasrugglespynchon,jr.thomasrugglespynchonjr.thomasr.pynchon,jr.thomasr.pynchonjr.thomasr.pynchonthomaspynchon,jr.thomaspynchonjr.khawajagharibnawazmuinuddinhasanchistykhwajagharibnawazkhwajamuinal-dinchishtighareebnawazkhwajamoinuddinchishtikhwajagharibnawazmuinuddinchishtithomasrugglespynchon,jr.thomasrugglespynchonjr.thomasr.pynchon,jr.thomasr.pynchonjr.thomasr.pynchonthomaspynchon,jr.thomaspynchonjr.outline

introduction

generative model

mutation model

id136

experiments

future work

generative model

we propose a generative model for string variation explaining the
reasons for name variation.

what are the sources of variation for names?

...x10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clintonx10008 = obama...copying a previous mention

we can copy a name seen before.

procedure:

(cid:73) select a previous name mention uniformly at random
(cid:73) decide to copy it with id203 1       

...x10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clintonx10008 = obama...x100001 = barack obamamutating a previous mention

we can mutate a name seen before.

procedure:

(cid:73) select a previous name mention uniformly at random
(cid:73) decide to mutate it with id203   
(cid:73) sample a mutation from p(   | mitt romney)

...x10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clintonx10008 = obama...x100001 = mittgenerating a new name

we can generate a new name.

procedure:

(cid:73) select     with id203 proportional to    (a    pseudocount   )
(cid:73) sample a new name from p(   |    )

(cid:73) a character language model

...x10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clintonx10008 = obama...x100001 = joe bidengenerative model summary

to generate the next name mention:

1. pick an existing name mention w with id203 1/(   + k)

1.1 copy w verbatim with id203 1       
1.2 mutate w with id203   

2. decide to talk about a new entity with id203   /(   + k)

2.1 generate a name for it

generative model in action

x10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clintonmitt romneypresident barack obamasecretary of state hillary clintonbarack obamahillary clintonbarack obamaclintonobamax10008 = obama...generative model in action

mitt romneypresident barack obamasecretary of state hillary clintonbarack obamahillary clintonbarack obamaclintonobamax10008 = obamax10009 = mittmittx10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clinton...generative model in action

mitt romneypresident barack obamasecretary of state hillary clintonbarack obamahillary clintonbarack obamaclintonobamax10008 = obamax10009 = mittx10010 = barackmittbarackx10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clinton...generative model in action

mitt romneypresident barack obamasecretary of state hillary clintonbarack obamahillary clintonbarack obamaclintonobamax10008 = obamax10009 = mittx10010 = barackx10011 = barrymittbarackbarryx10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clinton...generative model in action

mitt romneypresident barack obamasecretary of state hillary clintonbarack obamahillary clintonbarack obamaclintonobamax10008 = obamax10009 = mittx10010 = barackx10011 = barryx10012 = hillary clintonmittbarackbarryhillary clinton...x10001 = mitt romneyx10002 = president barack obamax10003 = barack obamax10004 = secretary of state hillary clintonx10005 = hillary clintonx10006 = barack obamax10007 = clintona few observations

(cid:73) the proposed generative model is clearly naive

(cid:73) no model of discourse or of name structure

(cid:73) the pseudocount    controls the likelihood of new names
(cid:73) we assume a low mutation id203   , so that most names

are copied from earlier frequent names

outline

introduction

generative model

mutation model

id136

experiments

future work

name variation as mutations

   mutations    capture di   erent types of name variation:
1. transcription errors: barack     barack
2. misspellings: barack     barrack
3. abbreviations: barack obama     barack o.
4. nicknames: barack     barry
5. dropping words: barack obama     barack

mutation via probabilistic    nite-state transducers

the mutation model is a probabilistic    nite-state transducer
with four character operations: copy, substitute, delete,
insert

(cid:73) character operations are conditioned on the right input

character

(cid:73) latent regions of contiguous edits
(cid:73) back-o    smoothing

transducer parameters    determine the id203 of being in
di   erent regions, and of the di   erent character operations

example: mutating a name

mr. robert kennedymr. bobby kennedym r . _ r o b e r t     _ k e n n e d y $m r . _[beginning of edit regionexample mutationexample: mutating a name

mr. robert kennedymr. bobby kennedym r . _ r o b e r t     _ k e n n e d y $m r . _[b 1 substitution operation: (r, b)example mutationexample: mutating a name

mr. robert kennedymr. bobby kennedym r . _ r o b e r t     _ k e n n e d y $m r . _[b o b 2 copy operations: (  , o), (  , b)example mutationexample: mutating a name

mr. robert kennedymr. bobby kennedym r . _ r o b e r t     _ k e n n e d y $m r . _[b o b       3 deletion operations: (e,  ), (r,  ), (t,   )example mutationexample: mutating a name

mr. robert kennedymr. bobby kennedym r . _ r o b e r t     _ k e n n e d y$m r . _[b o b       b y2 insertion operations: (  ,b), (  ,y)example mutationexample: mutating a name

mr. robert kennedymr. bobby kennedym r . _ r o b e r t     _ k e n n e d y $m r . _[b o b       b y]end of edit regionexample mutationexample: mutating a name

mr. robert kennedymr. bobby kennedym r . _ r o b e r t     _ k e n n e d y $m r . _[b o b       b y]_ k e n n e d y $example mutationoutline

introduction

generative model

mutation model

id136

experiments

future work

id136

input: an unaligned corpus of names (   bag-of-words   )

(cid:73) the order in which the tokens were generated is unknown
(cid:73) no    inputs    or    outputs    are known for the mutation model

output: a distribution over name phylogenies parametrized by
transducer parameters   

barack obamaobamapresident barack obamabarackbarrackbarack obamahillary clintonclintonbill clintonbillbillbarryvice president clintonbillyhillarywill clintonhillary rodham clintonmitt romneybarack obama srromneywillard m. romneygovernor mitt romneymr. romneymittmitt rommeyclintonwilliam clintonbarakpresident bill clintonpresidentbarack h. obamams. clintonobserved vs unobserved names

could there be latent forms in the phylogeny?

                       ?khwajagharibnawazkhwajamuinal-dinchishtighareebnawazkhwajagharibnawazmuinuddinchishti?observed vs unobserved names

khawajagharibnawazmuinuddinhasanchistykhwajagharibnawazkhwajamuinal-dinchishtighareebnawazkhwajamoinuddinchishtikhwajagharibnawazmuinuddinchishtiwhat we'd like to do:khwajagharibnawazkhwajamuinal-dinchishtighareebnawazkhwajagharibnawazmuinuddinchishtiwhat we actually do:type phylogeny vs token phylogeny

the generative model is over tokens (name mentions)

but we do type-level id136 for the following reasons:

1. allows faster id136

2. allows type-level supervision

ehud barakpresident barack obamasecretary of state hillary clintonbarack obamahillary clintonbarack obamaclintonobamabarakbarackbarryhillary clintonbarrytype phylogeny vs token phylogeny

we collapse all copy edges into a single vertex

(cid:73) the    rst token in each collapsed vertex is a mutation, and

the rest are copies

(cid:73) every edge in the phylogeny now corresponds to a mutation
(cid:73) approximation: disallow multiple tokens of the same type to

be derived from mutations

president barack obamasecretary of state hillary clintonbarack obama (2)hillary clinton (2)clintonobamabarackbarry (2)ehud barakbarakbarryscoring phylogenies

the weight of a single phylogeny is the product of the weight of its
edges

(cid:89)

y   y

  (y | pa(y ))

what should the edge weights be?

edge weights

(cid:73) new names: edges from     to a name x:
  (x |    ) =       p(x |    )

(cid:73) mutations: edges from a name x to a name y :

  (y | x) =       p(y | x)   

nx

ny + 1

approximation: edges weights are not quite edge factored. we are
making an approximation of the form

e(cid:89)

  (y | pa(y ))    (cid:89)

y

y

e  (y | pa)

id136 via em

iterate until convergence:

1. e-step: given   , compute a distribution over name

phylogenies

2. m-step: re-estimate transducer parameters    given marginal

edge probabilities.

(cid:73) this step sums over alignments for each (x, y ) string pair

using forward-backward

(cid:73) each (x, y ) pair may be viewed as a training example weighted

by the marginal id203 of the edge from x to y

e-step: marginalizing over latent variables

the latent variables in the model are:

1. name phylogeny (spanning tree) relating names as inputs

and/or outputs

2. character alignments from potential input names x to output

names y

we use the matrix-tree theorem for directed graphs (tutte, 1984)
to e   ciently evaluate marginal probabilities:

1. partition function (sum over phylogenies)

2. edge marginals

speed of id136

two main slowdowns:

(cid:73) the complexity of the e-step is dominated by the o(n3) (for

n names) matrix inversion required to compute the edge
marginals cxy .

(cid:73) the m-step sums over alignments for o(n2) input-output

pairs

approximation: to speed up id136, we prune edges (set
  (y | x) = 0) for names with no trigrams in common

outline

introduction

generative model

mutation model

id136

experiments

future work

data preparation

we used english wikipedia (2011) to create lists of name variants

1. wikipedia redirects are human-curated pages to resolve

common name variants to the correct page (unambiguously)
2. we use freebase to restrict to redirects for person entities
3. we applied some further    lters to remove redirects that were

clearly not names (e.g. numbers)

4. we use ldc gigaword to obtain a frequency for each name

variant

sample wikipedia redirects

ho chi minh, ho chi mihn, ho-chi minh, ho chih-minh

guy fawkes, guy fawkes, guy faux, guy falks, guy faukes, guy fawks, guy foxe, guy falkes

nicholas ii of russia, nikolai aleksandrovich romanov, nicholas alexandrovich of russia, nicolas ii

bill gates, lord billy, bill gates, billgates, billy gates, william gates iii, william h. gates

william shakespeare, william shekspere, william shakspeare, bill shakespear

bill clinton, billll clinton, william je   erson blythe iv, bill j. clinton, william j clinton

wikipedia as supervision

we use wikipedia name lists for supervision and evaluation

(cid:73) treat page redirects as    gold    mutations of the page title:

ho chi minh     ho chi mihn
ho chi minh     ho-chi minh
ho chi minh     ho chih-minh

(cid:73) each list of redirects is cluster of names belonging to the

same entity

(cid:73) no ambiguous names (by construction)

experiment 1: transducer log-likelihood

data:

(cid:73) 1500 entities (roughly 6000 names) for train
(cid:73) 1500 di   erent entities (roughly 6000 names) for test

procedure:

(cid:73) at train time

1. initialize transducer parameters    using di   erent amounts of

supervision (up to 250 entities)

2. run em for 10 iterations to re-estimate   
3.    = 1.0,    = 0.1

(cid:73) at test time

1. evaluate log-likelihood of the transducer on all    gold    pairs

from the test set

experiment 1: mutation model log-likelihood

,

0123456789em iteration240000230000220000210000200000190000180000170000160000150000held out log-likelihoodsup=0sup=5sup=25sup=100sup=250experiment 2: ranking

data: same as before
procedure:

(cid:73) at train time

1. estimate transducer parameters   
2.    = 1.0,    = 0.1

(cid:73) at test time

1. for each wikipedia person page in the test set, produce a

ranking of all test aliases

2. compute mean reciprocal rank (mrr) over all such rankings

experiment 2: ranking

(cid:73) for each article name in the test corpus, produce a ranking of

redirects

(cid:73) the rankings are evaluated using mean reciprocal rank

15000.600.650.700.750.800.85mrrjwinklevsup10semi10unsupsupoutline

introduction

generative model

mutation model

id136

experiments

future work

future work

(cid:73) more sophisticated mutation models
(cid:73) incorporate internal name structure

(cid:73) incorporate context in the generative story
(cid:73) cross-lingual experiments

(cid:73) each vertex labeled with a language, allowing systematic

relationships between languages

(cid:73) other potential applications
(cid:73) derivational morphology
(cid:73) paraphrase
(cid:73) id68
(cid:73) historical linguistics
(cid:73) bibliographic entry variation

experiment 3 (preliminary): precision/recall

procedure:

(cid:73) at train time

1. estimate transducer parameters    using em
2. find the best spanning tree given   

(cid:73) at test time

1. attach held-out names to the most likely vertex in the inferred

spanning tree

2. evaluate precision and recall for the connected component

experiment 3 (preliminary): example attachment

(cid:73) held-out names can attach to any vertex in the tree

(cid:73) including    

(cid:73) attachment weights given by edge weights   (y|x)

khawajagharibnawazmuinuddinhasanchistykhwajagharibnawazkhwajamuinal-dinchishtighareebnawazkhwajamoinuddinchishtikhwajagharibnawazmuinuddinchishtithomasrugglespynchon,jr.thomasrugglespynchonjr.thomasr.pynchon,jr.thomasr.pynchonjr.thomasr.pynchonthomaspynchon,jr.thomaspynchonjr.thomasruggles??experiment 3 (preliminary): results

0.00.20.40.60.81.0recall0.00.20.40.60.81.0precision0% supervised1% supervised8% supervised24% supervised100% supervised