(b) dawg breeds (1/3) 

 

i 

e 

t 

y 

y 

x 

r 

d 

h 

n 

n 

o 

o 

g
 

end 

start 

   dawg    (directed acyclic word graph) describes a diagram that stores a set of words in a graph (in the sense 
of a web of paths) that is directed (each path can only be traveled in one direction) and acyclic (there is no 
possibility of traveling in a circle). 
 
when storing a set of words (say, hydrogen, oxygen, and nitrogen), there is often some redundancy.  all 
three of these words, for example, end in -gen, and two of them end in -rogen.  the dawg below stores all 
three words without storing the redundant parts multiple times. 
 
 
 
 
 
 
 
this dawg can    recognize    all three words, in that each word constitutes a valid path from the start symbol 
to the end symbol, and no other sequence of letters forms such a path.   
 
however, it is not correct to just    merge    any redundant letters like this, because inappropriately merged 
letters will lead to incorrect words being recognized. 
 
 
 
 
 
 
 
this dawg correctly recognizes the letter sequences nitrogen, hydrogen, and oxygen, but it also incor-
rectly recognizes the letter sequences nitroxygen and hydroxygen, which were not intended. 
 
b1. on the next page are three dawgs that recognize a list of words in a category, the way that the 
dawgs above recognizes a three-word list of chemical elements.  each dawg recognizes a different category 
of words. 
 
these dawgs are poorly-constructed, however, in that each one recognizes several incorrect letter sequenc-
es as well. we will give you the shape of the dawg (but without letter labels) and the incorrect letter se-
quences; from this, deduce what words the dawg was supposed to recognize and write these intended 
words on your answer sheet. (for each part of this question, the number of intended words is the same as 
the number of answer spaces you are given.) 

start 

end 

g
 

o 

n 

n 

h 

d 

r 

x 

y 

y 

t 

e 

i 

 

(b) dawg breeds (2/3) 

a. 

start 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

end 

 

unintended words: poodhound, blomeranian, bloodle 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

b.  

start 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

end 

unintended words: huckberry, rawberry, blackleberry, straspberry 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

(b) dawg breeds (3/3) 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

c.  

end 

start 

unintended words: panda, ghaq, iranada, can, rwanama, and many more    

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
b2. for each of the dawgs above, what would be the fewest number of letter squares needed to recognize 
every intended word, and only the intended words?  (for example, to recognize hydrogen, oxygen, and 
nitrogen, you need at least 14 squares.  any fewer than 14 squares and you would recognize an unintended 
word like nitroxygen or oxydrogen. do not include the start or end spaces in your counts.) 

   

   

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

a. 

 

 

 

 

 

  b. 

 

 

 

 

 

 

 

 

c. 

 

 

 

 

 

 

 

   

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

