your name:                                                                                         registration # 
(h) bertrand and russell (1/3) [10 points] 

teachers can be hard to understand sometimes. case in point, the math teacher, mr. whitehead. just this 
morning, he told the class,    it's not the case that if at least one student studied for the test, then every stu-
dent failed the test.    what does that even mean? 
 
well, the two new kids in the class, bertrand and russell, have come up with a plan to make sense of mr. 
whitehead's statements. they call it id85 (fol), a way to map these confusing statements into an 
unambiguous representation. bertrand says the whole system is built the idea of propositions, a statement 
that is either true or false. propositions can be statements about people or things like  
studied_for(john, test) or is_hard(test). propositions can also be combined to make more complex statements 
with the following symbols: 

symbol 

example statement 

interpretation 

explanation 

   

    

    

   studied_for(john, test) 

john did not study for 

the statement is true if and only if john did 

the test. 

not study for the test. 

is_hard(test)     is_long(test) 

the test is long and 

this statement is true whenever the test is 

hard. 

long and the test is hard. 

is_hard(test)     is_long(test) 

the test is long or 

this statement is true if the test is long, or if 

hard. 

the test is hard, or both. 

    

studied_for(john, test)      

aced(john, test) 

if john studied for the 
test, then he aced it. 

this is true if the statement on the right 
side of the arrow is always true whenever 
the statement on the left side of the arrow 
is true. if the statement on the left is false, 

then the whole statement is true 

by default (if john didn't study, we don't 

know how he did on the test). 

   but,    says russell,    the most important part of id85 is the quantifiers.    quantifiers allow you to 
make general statements like mr. whitehead loves to do. 

symbol 

example statement 

interpretation 

explanation 

    

    

[   x : student(x)      
studied_for(x, test)] 

every student studied 

for the test. 

[   x : student(x)      

aced(x, test)] 

there exists at least 
one student who aced 

the test. 

the     symbol makes a statement about eve-

ry possible object (whether a student or 
not). it temporarily gives it the name x to 
make such a statement. we use the     

symbol because we don   t want to make any 
claims about whether non-students studied. 

the     symbol makes the claim that there 
is at least one (possibly more) object in 
the universe, temporarily called x, that 

satisfies the statement listed.

your name:                                                                                         registration # 

(h) bertrand and russell (2/3) 

bertrand and russell also note that there are also a couple other things we can say about individuals (but not 
propositions or quantifiers). for example, if the names jonathan and jon both refer to the same person, we 
can say jon = jonathan. if we want to emphasize that john and jon are different people, we can say john     jon. 
 
h1. translate mr. whitehead   s statements into id85 by finding the proposition below that is 

equivalent to each statement and writing the letter of the proposition in the blank. each statement has 
exactly one correct answer; not every proposition will be used. 

 

 

 

 

 

everyone either passed or failed the test.  

every student did not pass the test.  

exactly one student passed the test.  

a student did not pass the test.  

it is not the case that if at least one student studied for the test, then every student failed the test. 

 

 

a. 

b. 

[   x : student(x)        passed(x, test)] 

[   x : student(x)     passed(x, test)     [   y : (student(y)     passed(y, test))     x = y]] 

c. 

[   x : student(x)     passed(x, test)     [   y : student(y)     passed(y, test)     x = y]] 

d.  [   x : passed(x, test)     failed(x, test)] 

e.     ([   x : student(x)     studied_for(x, test)]     [   x : student(x)     failed(x, test)]) 

f. 

[   x : passed(x, test)     failed(x, test)] 

g.  [   x :    student(x)     passed(x, test)] 

h. 

[   x : student(x)     studied_for(x, test)]        [   x : student(x)     failed(x, test)] 

i.     [   x : student(x)        passed(x, test)] 

j. 

[   x : student(x)        passed(x, test)] 

your name:                                                                                         registration # 

(h) bertrand and russell (3/3) 

h2. translate id85 propositions into their equivalent english sentences by finding the statement 

below that is equivalent to each proposition and writing the letter of the statement in the blank. each 
proposition has exactly one correct answer; not every statement will be used. 

 

 

 

 

 

 

[   x : student(x)     studied_for(x, test)]     [   y : student(y)     passed(y, test)] 

[   x : student(x)     [studied_for(x, test)     passed(x, test)]] 

[   x : (test(x)     long(x))     hard(x)] 

[   x : test(x)     (long(x)     hard(x))] 

[   x : test(x)        (long(x)     hard(x))        [   y : student(y)     failed(y, x)]] 

 

a.  there is a test that is long or hard. 

b. 

if a test is not long and not hard, then every student did not fail it. 

c.  every student studied for or passed the test. 

d.  every test that is long is also hard. 

e.  every student studied for the test or every student passed the test. 

f. 

if there is a test that is hard or not long, then at least one student failed it. 

g.  every test is long and hard. 

h. 

if a test is not both long and hard, then not every student failed it. 

