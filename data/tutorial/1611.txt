your name:                                       

 

 

 

 

registration #:                                         

(e) texting, texting, one two three  (1/3) 

(25 points) 

the respected espionage-supply company z enterprises is about to release a new version of their z1200 
model wristwatch, popular among spies (and also among high-school students) for its ability to discreetly 
send text messages.  although the z1200 had only four buttons in total, the user could input characters 
(letters, numbers, spaces, etc.) by pressing three-button sequences.  for example, if we call the buttons 1, 2, 
3, and 4, a was 112, a was 113, b was 114, space was 111, the end sequence that finished the message was 
444, etc. 
 

the z1300 has the same button layout, and it was planned that it use the same text-input method.  in the 
design stage, however, a new engineer proposes that he can significantly reduce the number of button 
presses needed for each message.  unfortunately, the manual had already been printed and the new z1300 
shipped without any information regarding how to use this new input method. 
 

being a good spy and/or high school student, though, you can figure out how it works just from a few exam-
ples, right? 
 

testing testing 
332221432241423411222143224142341331 
 

does anyone copy 
3323332214313142343324221124232342343331 
 

be vewy vewy qwiet im hunting wabbits 
23412112342213443431234221344343123442344412122141243123124 
14222414234113443123412341412243331 
 

mission failed tango not eliminated 
332434143434132421244314123221233133223142341321423222121232412434142312221233331 
 

my boss z is a pain in the 
24334312341324343133234441414313113423141421414212223121331 
 

uh oh no backspace on this thing 
24123113223114232123413124223434334231242211324212223141431222314142341331 
 

just kiddin boss 
2344324143221234341233233414212341324343331 

your name:                                       

 

 

 

 

registration #:                                         

(e) texting, texting, one two three  (2/3) 

e0.  what are the input codes for each of the lowercase letters?  not every letter is used in the messages 

 

above, but you can still deduce how they are encoded. this table is just for your own use and it will      

           not be graded. 

a 
b 
c 
d 
e 
f 
g 
h 
i 
j 
k 
l 
m 

  
  
  
  
  
  
  
  
  
  
  
  
  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

n 
o 
p 
q 
r 
s 
t 
u 
v 
w 
x 
y 
z 

  
  
  
  
  
  
  
  
  
  
  
  
  

e1.  what message does the following sequence of button presses encode? start filling the boxes from the 
 

left end, one english letter (or space) in each box. (5 points) 
 

 

 

23121232232321414313142343234132233343123241432221424142341331 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

your name:                                       

 

 

 

 

registration #:                                         

(e) texting, texting, one two three  (3/3) 

e2.  with what sequences of button presses would you input the following messages? (5 points) 
 

help 

 
 

xray 

 
 

 

 

 
 
 
 
 
 
 
 
 
 

 

 

 

 

affirmative 
 
 
 
 
 

 
 
 
 
 
 
 
            mayday mayday sos 

 

 

 

 

 

 

 

 

 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 
 
 
 
 
e3. 
 
 
           than it would have been if it used exactly three button presses per character (including the end  
           sequence)? (5 points) 
 

this scheme only shortens the number of button presses needed on average     most messages are 
shorter, but there are some that will take more presses than they did on the z1200*.  can you find a 
message (using only characters whose codes you know) that will be longer using the above method 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

*this is true for every compression scheme, actually     for any method of compressing data into less 

space, there will always be some example that when    compressed    is larger than it was originally!  

 

 

