your name:                                       

 

 

 

 

registration #:                                         

 

(10 points) 

(k) f u cn rd ths (1/4) 

cust rcvd lttr cncrng local srvc 

 
customer received letter concerning local service 

abbreviations are hard. we are used to thinking of standard abbreviations like lb, ca, mr or blvd. but in fact 
people make up new abbreviations all the time, if they are under time pressure (e.g. instant messaging) or if 
they have severe space limitations (e.g. classified ads in a printed newspaper). 
 
one place where you find lots of abbreviations is the notes taken by the overworked people who staff call 
centers. they have to record what was discussed, but they don't have the time to type everything out. so 
you often get things that look like this, from the logs of a call center run by a major telecommunications 
company:  
 
 
 
which of course is supposed to mean 
 
 
 
let's say you are designing a computer program to try to do this kind of `id172' automatically. you 
can't just have a fixed list of abbreviations: the set is pretty open ended. but what you can do is try to look at 
the whole corpus of data, and hope that someone somewhere has spelled out the complete words. so if for 
example i am looking at rcvd lttr, and somewhere else in the database someone has done us the favor of  
reporting on a different call, and used fully spelled phrase received letter, then we have a chance of guessing 
the expansion of rcvd lttr. that is, rcvd is a plausible abbreviation of received, lttr is a plausible abbreviation of 
letter, and the two occur together in the right order. 
 
of course, you know english, so you could have figured this out anyway. but the computer really doesn't. to 
the computer the problem looks as follows: 
 
you have a bunch of abbreviated phrases (some of the words are not abbreviated, in fact), written in a bunch 
of symbols (remember the computer doesn't know english and to it, the strings are ultimately just a bunch of 
numbers anyway):      
 
 

your name:                                       

 

 

 

 

registration #:                                         

(k) f u cn rd ths (2/4) 

 

a. 
b. 
c. 
d. 
e. 
f. 
g. 
h. 
i. 
j. 
k. 
l. 
m. 
n. 
o. 
p. 
q. 
r. 

* 

* 

    

    

your name:                                       

 

 

 

 

registration #:                                         

 

(k) f u cn rd ths (3/4) 

and you want to match with full phrases from elsewhere in the corpus: 
 

customer advised 
customer advised 
customer call 
customer called 
customer called 
customer called 
customer called 
customer calling 
customer calling 
customer care 
customer claims 
customer disconnected 
customer likes 
customer needs 
customer request 
customer says 

i  
ii.  
iii.  
iv. 
v. 
vi. 
vii. 
viii. 
ix. 
x. 
xi. 
xii. 
xiii. 
xiv. 
xv. 
xvi. 
xvii.  customer understood 
xviii.  customer upset 
xix.  customer upset 
xx. 
xxi.  customer wants 
 

customer wanted 

there are two caveats: 

1. when you are under time pressure, you make mistakes. there are actually three typos in the  
abbreviations   typos in that all the letters are there, but they are out of the expected order, and  
therefore are not strictly speaking reasonable abbreviations for the words. 
2. there are three phrases that are not found in the abbreviations.  

 
 
 
 
 
 
 

 
 

k1 (7 points). match the encoded abbreviations from the previous page to the phrases above.  
 
i. 
ii. 
iii. 
 
 
 

xvi.   
xvii.  
xviii. 

vii. 
 
viii.   
ix. 
 

 
x. 
xi. 
 
xii.   

xiii.   
xiv.   
xv. 
 

   xix. 
   xx. 
   xxi. 

iv. 
v. 
vi. 

 
 
 

 
 
 

your name:                                       

 

 

 

 

registration #:                                         

 

(k) f u cn rd ths (4/4) 

bottom of the page. 

k2 (3 points). now, what phrase is abbreviated in the symbols below? place your answer in the box at the 
 
 
 

* 

    

* 

* 

* 

