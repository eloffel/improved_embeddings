   #[1]the glowing python - atom [2]the glowing python - rss [3]the
   glowing python - atom

   [4]the glowing python

   a collection of sloppy snippets for scientific computing and data
   visualization in python.

friday, july 22, 2011

principal component analysis with numpy

   the following function is a three-line implementation of the
   [5]principal component analysis (pca). it is inspired by the function
   [6]princomp of the matlab's statistics toolbox.
from numpy import mean,cov,double,cumsum,dot,linalg,array,rank
from pylab import plot,subplot,axis,stem,show,figure

def princomp(a):
 """ performs principal components analysis
     (pca) on the n-by-p data matrix a
     rows of a correspond to observations, columns to variables.

 returns :
  coeff :
    is a p-by-p matrix, each column containing coefficients
    for one principal component.
  score :
    the principal component scores; that is, the representation
    of a in the principal component space. rows of score
    correspond to observations, columns to components.
  latent :
    a vector containing the eigenvalues
    of the covariance matrix of a.
 """
 # computing eigenvalues and eigenvectors of covariance matrix
 m = (a-mean(a.t,axis=1)).t # subtract the mean (along columns)
 [latent,coeff] = linalg.eig(cov(m)) # attention:not always sorted
 score = dot(coeff.t,m) # projection of the data in the new space
 return coeff,score,latent

   (in this other [7]post you can find an updated version of this
   function).
   in the following test a 2d dataset wil be used. the result of this test
   is a plot with the two principal components (dashed lines), the
   original data (blue dots) and the new data (red stars). as we expected
   the first principal component describes the direction of maximum
   variance and the second is orthogonal to the first.
a = array([ [2.4,0.7,2.9,2.2,3.0,2.7,1.6,1.1,1.6,0.9],
            [2.5,0.5,2.2,1.9,3.1,2.3,2,1,1.5,1.1] ])

coeff, score, latent = princomp(a.t)

figure()
subplot(121)
# every eigenvector describe the direction
# of a principal component.
m = mean(a,axis=1)
plot([0, -coeff[0,0]*2]+m[0], [0, -coeff[0,1]*2]+m[1],'--k')
plot([0, coeff[1,0]*2]+m[0], [0, coeff[1,1]*2]+m[1],'--k')
plot(a[0,:],a[1,:],'ob') # the data
axis('equal')
subplot(122)
# new data
plot(score[0,:],score[1,:],'*g')
axis('equal')
show()

   [8][pca_data.png]
   in this second example princomp(.) is tested on a 4d dataset. in this
   example the matrix of the data is rank deficient and only the first two
   components are necessary to bring the information of the entry dataset.
a = array([[-1, 1, 2, 2],
           [-2, 3, 1, 0],
           [ 4, 0, 3,-1]],dtype=double)

coeff, score, latent = princomp(a)
perc = cumsum(latent)/sum(latent)
figure()
# the following plot shows that first two components
# account for 100% of the variance.
stem(range(len(perc)),perc,'--b')
axis([-0.3,4.3,0,1.3])
show()
print 'the principal component scores'
print score.t # only the first two columns are nonzero
print 'the rank of a is'
print rank(a)  # indeed, the rank of a is 2

coefficients for principal components
[[  1.464140e+00   1.588382e+00   0.000000e+00  -4.440892e-16]
 [  2.768170e+00  -1.292503e+00  -2.775557e-17   6.557254e-16]
 [ -4.232310e+00  -2.958795e-01   1.110223e-16  -3.747002e-16]]
the rank of a is
2

   [9][pca_info.png]
   [10]email this[11]blogthis![12]share to twitter[13]share to
   facebook[14]share to pinterest
   labels: [15]numpy, [16]pca, [17]statistics

12 comments:

    1. [18]olivier grisel[19]july 22, 2011 at 1:37 pm
       note you can also do pca using the singular value decomposition
       (numpy.linalg.svd) as done in scikit-learn:
       http://scikit-learn.sourceforge.net/dev/modules/decomposition.html#
       principal-component-analysis-pca
       also if you have very large dataset (e.g. more than 5000
       observations and features / dimensions) then the default svd is too
       expensive to compute. in that case you can use the randomized
       approximate svd by halko et al. implemented both in scikit-learn
       and gensim:
       https://github.com/scikit-learn/scikit-learn/blob/babe4a5d0637ca172
       d47e1dfdd2f6f3c3ecb28db/scikits/learn/utils/extmath.py#l105
       https://github.com/piskvorky/gensim/blob/develop/gensim/models/lsim
       odel.py#l555
       those latter methods also works with scipy.sparse matrices.
       reply[20]delete
       replies
         1. anonymous[21]february 25, 2019 at 12:14 pm
            pca can be done via regression too and a suitable tolerance.
            matlab code here
            function [score,load]= pca(d,c)
            load=zeros(c,c);
            d2=d;
            for i =1:c
            val=1;
            tol=0.000000000000001;
            [u,v]=eig(d'*d);
            v=diag(v);
            ind=find(v==max(v));
            t=d(:,ind);
            while val>tol
            dold=t;
            p=(d'*t)/(t'*t);
            p=p./norm(p);
            t=(d*p)/(p'*p);
            val=(dold-t)'*(dold-t);
            end
            d=d-(t*p');
            sum(sum(d2-(t*p')))
            score(:,i)=t;
            load(:,i)=p';
            end
            i have used this with a data set of 8 million rows and 20
            columns
            [22]delete
            replies
                 reply
            reply
    2. [23]aina[24]january 9, 2012 at 7:05 pm
       hi, i have a question on this script. it is very convenient to use,
       however i am not sure what the results of 4d sets are telling us. i
       have a 4d set and i am trying to figure out whether there is a
       dependence between the dimensions. so if dimension 1 and 2 would be
       strongly correlated, would it make coefficients of principal
       components big or small? thanks, aina.
       reply[25]delete
       replies
            reply
    3. [26]justglowing[27]january 9, 2012 at 8:01 pm
       hi aina,
       in the second example i used a 4d dataset where the information is
       stored in only two dimensions out of the four. indeed, the
       transformation shows that only two column of the result are non
       zero. keep in mind that the example do not reduces the
       dimensionality of the data and the pca is a linear transformation
       of the variables into a lower dimensional space which retain
       maximal amount of information about the variables.
       you can find the answer to your question in the following property
       of the pca: subsequent pcs are defined as the projected variable
       which is uncorrelated with the earlier pcs and has maximal variance
       with arbitrary sign.
       by the way, if you want to find two variables are correlated, i
       suggest to try with a correlation coefficient.
       reply[28]delete
       replies
         1. [29]unknown[30]november 7, 2016 at 6:37 pm
            hi,
            is there any way of contacting you. i rly need help with
            finding just one example that would
            1. take some csv
            2.implement pca and reduce the dataframe df down
            to 3 components.
            3. once you've done that, call plot2d.
            plot2d(t, title, x, y, num_to_plot=40):
            i have no clue how to do this. was looking over the internet
            for just one example so i can continue with my study but there
            isn't any that makes plot using def???
            thanks
            [31]delete
            replies
                 reply
         2. [32]justglowing[33]november 7, 2016 at 7:53 pm
            hi, i think this example will help you:
            http://scikit-learn.org/stable/auto_examples/decomposition/plo
            t_pca_vs_lda.html
            [34]delete
            replies
                 reply
            reply
    4. jerry[35]april 4, 2012 at 10:38 pm
       a slightly annoying issue: the latent values are not sorted, so the
       eigenvectors are not in order... any quick fix?
       reply[36]delete
       replies
            reply
    5. [37]justglowing[38]april 5, 2012 at 9:26 am
       hi jerry, there's an updated version of the princuomp function in
       the post
       http://glowingpython.blogspot.it/2011/07/pca-and-image-compression-
       with-numpy.html
       reply[39]delete
       replies
            reply
    6. [40]jiangang hao[41]august 10, 2012 at 12:37 am
       score :
       the principal component scores; that is, the representation
       of a in the principal component space. rows of score
       correspond to observations, columns to components.
       this is not correct
       reply[42]delete
       replies
            reply
    7. [43]justglowing[44]august 10, 2012 at 6:39 am
       hi jiangag, i can't see the mistake. explain your point.
       reply[45]delete
       replies
            reply
    8. abhijeet[46]august 14, 2012 at 6:05 pm
       what he means is there is a missing transpose in score calculation.
       it should be:
       score = dot(coeff.t,m).t
       reply[47]delete
       replies
            reply
    9. james[48]march 21, 2015 at 6:48 pm
       this is helpful, but i believe this may be incorrect (possibly
       extra transpose) maybe). :)
       for 2d dataset containing 2 attributes(x1, and x2) and 10 data
       points, you are supposed to have:
       - 2 pairs of eigenvectors
       - 2 eigenvalues for x1 and x2
       - 2 means: 1 for x1 and 1 for x2
       you are supposed to subtract the mean of each attributes. but you
       have 10 means. in your code:
       mean(a.t,axis=1)
       # this results in 10 means. this is calculating attribute1 +
       attribute2 and average them.
       you are supposed to calculate the mean over 10 data points for each
       attribute.
       you should do
       mean(a,axis=1)
       your covariance matrix is also a 10x10 matrix. this is not correct.
       you are suppose to have 2x2 matrix for 2d dataset.
       reply[49]delete
       replies
            reply

   add comment
   load more...

   [50]newer post [51]older post [52]home
   subscribe to: [53]post comments (atom)

   [ins: :ins]

tweet this blog!

   [54]tweet

follow the glowing python

                                     on
                           [55][twitter_logo.jpg]

   [56]follow @justglowing

things you can find here

   [57]3d [58]ai [59]algorithms [60]andrews [61]animation
   [62]approximation [63]arrow [64]audio [65]automata [66]beer [67]binary
   [68]book [69]boxplot [70]calendar [71]carbon emissions [72]choice
   [73]classification [74]id91 [75]color [76]complex numbers
   [77]conway [78]corner [79]crawler [80]cross-validation [81]curves
   [82]data mining [83]data structures [84]datetime [85]id90
   [86]derivative [87]dice [88]eigenvectors [89]energy [90]environment
   [91]facebook [92]features selection [93]feed [94]fft [95]files
   [96]filtering [97]fitting [98]football [99]forecast [100]fourier
   [101]fractal [102]geometric_transform [103]gif [104]ginput [105]gmail
   [106]google [107]hdf5 [108]heatmap [109]histogram [110]image [111]imap
   [112]impalib [113]information retrieval [114]integral [115]interactive
   [116]interpolation [117]ipython [118]irc [119]jit [120]joblib [121]json
   [122]jukowski [123]id116 [124]keras [125]knn [126]life [127]linear
   algebra [128]lsa [129]machine learning [130]map [131]math
   [132]matplotlib [133]minimization [134]moving average [135]mp3
   [136]multithreading [137]natural language [138]network analysis
   [139]networking [140]neural network [141]nlp [142]numba [143]number
   theory [144]numpy [145]oop [146]opencv [147]optimization [148]outliers
   [149]id95 [150]pandas [151]parallelization [152]pca
   [153]persistence [154]pi [155]picking [156]pickle [157]plotly
   [158]plotting [159]prediction [160]prices [161]id203 [162]pylab
   [163]quadrature [164]random [165]re [166]reflection [167]regex
   [168]regression [169]review [170]rolling windws [171]rotation [172]rss
   [173]scikit-learn [174]scipy [175]scraping [176]seaborn [177]search
   [178]sequences [179]serialization [180]shape [181]signal [182]sklearn
   [183]socket [184]sorting [185]sound [186]speech [187]spider
   [188]spirals [189]stacked plot [190]statistics [191]stereo vision
   [192]stft [193]storage [194]string [195]structures analysis
   [196]summarization [197]id166 [198]tangent [199]tax [200]text to speech
   [201]time series [202]timestamp [203]transformation [204]twitter
   [205]urllib [206]vector [207]visualization [208]wav [209]wikipedia
   [210]xml

followers

looking for a snippet?

   __________ search

archive

     * [211]     [212]2019 (4)
          + [213]     [214]mar (3)
          + [215]     [216]jan (1)

     * [217]     [218]2018 (2)
          + [219]     [220]jun (1)
          + [221]     [222]may (1)

     * [223]     [224]2017 (4)
          + [225]     [226]oct (1)
          + [227]     [228]jul (1)
          + [229]     [230]jun (1)
          + [231]     [232]apr (1)

     * [233]     [234]2016 (1)
          + [235]     [236]may (1)

     * [237]     [238]2015 (3)
          + [239]     [240]oct (1)
          + [241]     [242]apr (1)
          + [243]     [244]jan (1)

     * [245]     [246]2014 (9)
          + [247]     [248]nov (1)
          + [249]     [250]oct (1)
          + [251]     [252]sep (1)
          + [253]     [254]aug (2)
          + [255]     [256]may (1)
          + [257]     [258]apr (1)
          + [259]     [260]feb (1)
          + [261]     [262]jan (1)

     * [263]     [264]2013 (20)
          + [265]     [266]dec (1)
          + [267]     [268]nov (1)
          + [269]     [270]sep (1)
          + [271]     [272]jul (2)
          + [273]     [274]jun (2)
          + [275]     [276]may (2)
          + [277]     [278]apr (2)
          + [279]     [280]mar (3)
          + [281]     [282]feb (3)
          + [283]     [284]jan (3)

     * [285]     [286]2012 (23)
          + [287]     [288]dec (2)
          + [289]     [290]nov (2)
          + [291]     [292]oct (1)
          + [293]     [294]sep (2)
          + [295]     [296]aug (1)
          + [297]     [298]jul (2)
          + [299]     [300]may (2)
          + [301]     [302]apr (3)
          + [303]     [304]mar (3)
          + [305]     [306]feb (2)
          + [307]     [308]jan (3)

     * [309]     [310]2011 (62)
          + [311]     [312]dec (4)
          + [313]     [314]nov (4)
          + [315]     [316]oct (3)
          + [317]     [318]sep (4)
          + [319]     [320]aug (3)
          + [321]     [322]jul (9)
               o [323]pca and image compression with numpy
               o [324]principal component analysis with numpy
               o [325]jukowsi transformation
               o [326]polynomial curve fitting
               o [327]dice rolling experiment
               o [328]prime factor decomposition of a number
               o [329]how to use reflection
               o [330]how to plot biorhythm
               o [331]approximating pi
          + [332]     [333]jun (6)
          + [334]     [335]may (16)
          + [336]     [337]apr (13)

quote

     the greatest value of a picture is that it forces us to notice what
     we never expected to see

   john tukey

subscribe to

   [arrow_dropdown.gif] posts
   [338][subscribe-netvibes.png] [339][subscribe-yahoo.png]
   [340][icon_feed12.png] atom
   [arrow_dropdown.gif] posts
   [arrow_dropdown.gif] comments
   [341][subscribe-netvibes.png] [342][subscribe-yahoo.png]
   [343][icon_feed12.png] atom
   [arrow_dropdown.gif] comments
   the glowing python is just glowing ;). powered by [344]blogger.

references

   visible links
   1. https://glowingpython.blogspot.com/feeds/posts/default
   2. https://glowingpython.blogspot.com/feeds/posts/default?alt=rss
   3. https://glowingpython.blogspot.com/feeds/3856867047183233027/comments/default
   4. https://glowingpython.blogspot.com/
   5. http://www.cs.otago.ac.nz/cosc453/student_tutorials/principal_components.pdf
   6. http://www.mathworks.com/help/toolbox/stats/princomp.html
   7. http://glowingpython.blogspot.it/2011/07/pca-and-image-compression-with-numpy.html
   8. https://4.bp.blogspot.com/-rrqh1c7yx7a/tiber3_sssi/aaaaaaaaaek/jzlowpu-txe/s1600/pca_data.png
   9. https://4.bp.blogspot.com/-fytoxepk0gs/tibewrsvqbi/aaaaaaaaaes/hmhxysbh3ny/s1600/pca_info.png
  10. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=3856867047183233027&target=email
  11. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=3856867047183233027&target=blog
  12. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=3856867047183233027&target=twitter
  13. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=3856867047183233027&target=facebook
  14. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=3856867047183233027&target=pinterest
  15. https://glowingpython.blogspot.com/search/label/numpy
  16. https://glowingpython.blogspot.com/search/label/pca
  17. https://glowingpython.blogspot.com/search/label/statistics
  18. https://www.blogger.com/profile/05751090858946703320
  19. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1311338239702#c2986953240658709175
  20. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2986953240658709175
  21. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1551096866433#c2814846243916762203
  22. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2814846243916762203
  23. https://www.blogger.com/profile/03611669133241878816
  24. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1326135903152#c846126938624343772
  25. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=846126938624343772
  26. https://www.blogger.com/profile/17212021288715206641
  27. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1326139276203#c7051082856191792581
  28. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=7051082856191792581
  29. https://www.blogger.com/profile/12708686528026714641
  30. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1478543833018#c3768807032313754658
  31. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=3768807032313754658
  32. https://www.blogger.com/profile/17212021288715206641
  33. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1478548404569#c2313242865064690131
  34. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2313242865064690131
  35. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1333575493240#c5478039211278795411
  36. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5478039211278795411
  37. https://www.blogger.com/profile/17212021288715206641
  38. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1333614382971#c7094606947263940823
  39. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=7094606947263940823
  40. https://www.blogger.com/profile/03907399145096076556
  41. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1344555474863#c2993401966124386835
  42. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2993401966124386835
  43. https://www.blogger.com/profile/17212021288715206641
  44. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1344577142564#c705558189239261011
  45. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=705558189239261011
  46. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1344963905807#c960716517144520092
  47. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=960716517144520092
  48. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html?showcomment=1426963706435#c896930105210536180
  49. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=896930105210536180
  50. https://glowingpython.blogspot.com/2011/07/pca-and-image-compression-with-numpy.html
  51. https://glowingpython.blogspot.com/2011/07/jukowsi-transformation.html
  52. https://glowingpython.blogspot.com/
  53. https://glowingpython.blogspot.com/feeds/3856867047183233027/comments/default
  54. https://twitter.com/share
  55. http://twitter.com/justglowing
  56. https://twitter.com/justglowing
  57. https://glowingpython.blogspot.com/search/label/3d
  58. https://glowingpython.blogspot.com/search/label/ai
  59. https://glowingpython.blogspot.com/search/label/algorithms
  60. https://glowingpython.blogspot.com/search/label/andrews
  61. https://glowingpython.blogspot.com/search/label/animation
  62. https://glowingpython.blogspot.com/search/label/approximation
  63. https://glowingpython.blogspot.com/search/label/arrow
  64. https://glowingpython.blogspot.com/search/label/audio
  65. https://glowingpython.blogspot.com/search/label/automata
  66. https://glowingpython.blogspot.com/search/label/beer
  67. https://glowingpython.blogspot.com/search/label/binary
  68. https://glowingpython.blogspot.com/search/label/book
  69. https://glowingpython.blogspot.com/search/label/boxplot
  70. https://glowingpython.blogspot.com/search/label/calendar
  71. https://glowingpython.blogspot.com/search/label/carbon emissions
  72. https://glowingpython.blogspot.com/search/label/choice
  73. https://glowingpython.blogspot.com/search/label/classification
  74. https://glowingpython.blogspot.com/search/label/id91
  75. https://glowingpython.blogspot.com/search/label/color
  76. https://glowingpython.blogspot.com/search/label/complex numbers
  77. https://glowingpython.blogspot.com/search/label/conway
  78. https://glowingpython.blogspot.com/search/label/corner
  79. https://glowingpython.blogspot.com/search/label/crawler
  80. https://glowingpython.blogspot.com/search/label/cross-validation
  81. https://glowingpython.blogspot.com/search/label/curves
  82. https://glowingpython.blogspot.com/search/label/data mining
  83. https://glowingpython.blogspot.com/search/label/data structures
  84. https://glowingpython.blogspot.com/search/label/datetime
  85. https://glowingpython.blogspot.com/search/label/id90
  86. https://glowingpython.blogspot.com/search/label/derivative
  87. https://glowingpython.blogspot.com/search/label/dice
  88. https://glowingpython.blogspot.com/search/label/eigenvectors
  89. https://glowingpython.blogspot.com/search/label/energy
  90. https://glowingpython.blogspot.com/search/label/environment
  91. https://glowingpython.blogspot.com/search/label/facebook
  92. https://glowingpython.blogspot.com/search/label/features selection
  93. https://glowingpython.blogspot.com/search/label/feed
  94. https://glowingpython.blogspot.com/search/label/fft
  95. https://glowingpython.blogspot.com/search/label/files
  96. https://glowingpython.blogspot.com/search/label/filtering
  97. https://glowingpython.blogspot.com/search/label/fitting
  98. https://glowingpython.blogspot.com/search/label/football
  99. https://glowingpython.blogspot.com/search/label/forecast
 100. https://glowingpython.blogspot.com/search/label/fourier
 101. https://glowingpython.blogspot.com/search/label/fractal
 102. https://glowingpython.blogspot.com/search/label/geometric_transform
 103. https://glowingpython.blogspot.com/search/label/gif
 104. https://glowingpython.blogspot.com/search/label/ginput
 105. https://glowingpython.blogspot.com/search/label/gmail
 106. https://glowingpython.blogspot.com/search/label/google
 107. https://glowingpython.blogspot.com/search/label/hdf5
 108. https://glowingpython.blogspot.com/search/label/heatmap
 109. https://glowingpython.blogspot.com/search/label/histogram
 110. https://glowingpython.blogspot.com/search/label/image
 111. https://glowingpython.blogspot.com/search/label/imap
 112. https://glowingpython.blogspot.com/search/label/impalib
 113. https://glowingpython.blogspot.com/search/label/information retrieval
 114. https://glowingpython.blogspot.com/search/label/integral
 115. https://glowingpython.blogspot.com/search/label/interactive
 116. https://glowingpython.blogspot.com/search/label/interpolation
 117. https://glowingpython.blogspot.com/search/label/ipython
 118. https://glowingpython.blogspot.com/search/label/irc
 119. https://glowingpython.blogspot.com/search/label/jit
 120. https://glowingpython.blogspot.com/search/label/joblib
 121. https://glowingpython.blogspot.com/search/label/json
 122. https://glowingpython.blogspot.com/search/label/jukowski
 123. https://glowingpython.blogspot.com/search/label/id116
 124. https://glowingpython.blogspot.com/search/label/keras
 125. https://glowingpython.blogspot.com/search/label/knn
 126. https://glowingpython.blogspot.com/search/label/life
 127. https://glowingpython.blogspot.com/search/label/id202
 128. https://glowingpython.blogspot.com/search/label/lsa
 129. https://glowingpython.blogspot.com/search/label/machine learning
 130. https://glowingpython.blogspot.com/search/label/map
 131. https://glowingpython.blogspot.com/search/label/math
 132. https://glowingpython.blogspot.com/search/label/matplotlib
 133. https://glowingpython.blogspot.com/search/label/minimization
 134. https://glowingpython.blogspot.com/search/label/moving average
 135. https://glowingpython.blogspot.com/search/label/mp3
 136. https://glowingpython.blogspot.com/search/label/multithreading
 137. https://glowingpython.blogspot.com/search/label/natural language
 138. https://glowingpython.blogspot.com/search/label/network analysis
 139. https://glowingpython.blogspot.com/search/label/networking
 140. https://glowingpython.blogspot.com/search/label/neural network
 141. https://glowingpython.blogspot.com/search/label/nlp
 142. https://glowingpython.blogspot.com/search/label/numba
 143. https://glowingpython.blogspot.com/search/label/number theory
 144. https://glowingpython.blogspot.com/search/label/numpy
 145. https://glowingpython.blogspot.com/search/label/oop
 146. https://glowingpython.blogspot.com/search/label/opencv
 147. https://glowingpython.blogspot.com/search/label/optimization
 148. https://glowingpython.blogspot.com/search/label/outliers
 149. https://glowingpython.blogspot.com/search/label/id95
 150. https://glowingpython.blogspot.com/search/label/pandas
 151. https://glowingpython.blogspot.com/search/label/parallelization
 152. https://glowingpython.blogspot.com/search/label/pca
 153. https://glowingpython.blogspot.com/search/label/persistence
 154. https://glowingpython.blogspot.com/search/label/pi
 155. https://glowingpython.blogspot.com/search/label/picking
 156. https://glowingpython.blogspot.com/search/label/pickle
 157. https://glowingpython.blogspot.com/search/label/plotly
 158. https://glowingpython.blogspot.com/search/label/plotting
 159. https://glowingpython.blogspot.com/search/label/prediction
 160. https://glowingpython.blogspot.com/search/label/prices
 161. https://glowingpython.blogspot.com/search/label/id203
 162. https://glowingpython.blogspot.com/search/label/pylab
 163. https://glowingpython.blogspot.com/search/label/quadrature
 164. https://glowingpython.blogspot.com/search/label/random
 165. https://glowingpython.blogspot.com/search/label/re
 166. https://glowingpython.blogspot.com/search/label/reflection
 167. https://glowingpython.blogspot.com/search/label/regex
 168. https://glowingpython.blogspot.com/search/label/regression
 169. https://glowingpython.blogspot.com/search/label/review
 170. https://glowingpython.blogspot.com/search/label/rolling windws
 171. https://glowingpython.blogspot.com/search/label/rotation
 172. https://glowingpython.blogspot.com/search/label/rss
 173. https://glowingpython.blogspot.com/search/label/scikit-learn
 174. https://glowingpython.blogspot.com/search/label/scipy
 175. https://glowingpython.blogspot.com/search/label/scraping
 176. https://glowingpython.blogspot.com/search/label/seaborn
 177. https://glowingpython.blogspot.com/search/label/search
 178. https://glowingpython.blogspot.com/search/label/sequences
 179. https://glowingpython.blogspot.com/search/label/serialization
 180. https://glowingpython.blogspot.com/search/label/shape
 181. https://glowingpython.blogspot.com/search/label/signal
 182. https://glowingpython.blogspot.com/search/label/sklearn
 183. https://glowingpython.blogspot.com/search/label/socket
 184. https://glowingpython.blogspot.com/search/label/sorting
 185. https://glowingpython.blogspot.com/search/label/sound
 186. https://glowingpython.blogspot.com/search/label/speech
 187. https://glowingpython.blogspot.com/search/label/spider
 188. https://glowingpython.blogspot.com/search/label/spirals
 189. https://glowingpython.blogspot.com/search/label/stacked plot
 190. https://glowingpython.blogspot.com/search/label/statistics
 191. https://glowingpython.blogspot.com/search/label/stereo vision
 192. https://glowingpython.blogspot.com/search/label/stft
 193. https://glowingpython.blogspot.com/search/label/storage
 194. https://glowingpython.blogspot.com/search/label/string
 195. https://glowingpython.blogspot.com/search/label/structures analysis
 196. https://glowingpython.blogspot.com/search/label/summarization
 197. https://glowingpython.blogspot.com/search/label/id166
 198. https://glowingpython.blogspot.com/search/label/tangent
 199. https://glowingpython.blogspot.com/search/label/tax
 200. https://glowingpython.blogspot.com/search/label/text to speech
 201. https://glowingpython.blogspot.com/search/label/time series
 202. https://glowingpython.blogspot.com/search/label/timestamp
 203. https://glowingpython.blogspot.com/search/label/transformation
 204. https://glowingpython.blogspot.com/search/label/twitter
 205. https://glowingpython.blogspot.com/search/label/urllib
 206. https://glowingpython.blogspot.com/search/label/vector
 207. https://glowingpython.blogspot.com/search/label/visualization
 208. https://glowingpython.blogspot.com/search/label/wav
 209. https://glowingpython.blogspot.com/search/label/wikipedia
 210. https://glowingpython.blogspot.com/search/label/xml
 211. javascript:void(0)
 212. https://glowingpython.blogspot.com/2019/
 213. javascript:void(0)
 214. https://glowingpython.blogspot.com/2019/03/
 215. javascript:void(0)
 216. https://glowingpython.blogspot.com/2019/01/
 217. javascript:void(0)
 218. https://glowingpython.blogspot.com/2018/
 219. javascript:void(0)
 220. https://glowingpython.blogspot.com/2018/06/
 221. javascript:void(0)
 222. https://glowingpython.blogspot.com/2018/05/
 223. javascript:void(0)
 224. https://glowingpython.blogspot.com/2017/
 225. javascript:void(0)
 226. https://glowingpython.blogspot.com/2017/10/
 227. javascript:void(0)
 228. https://glowingpython.blogspot.com/2017/07/
 229. javascript:void(0)
 230. https://glowingpython.blogspot.com/2017/06/
 231. javascript:void(0)
 232. https://glowingpython.blogspot.com/2017/04/
 233. javascript:void(0)
 234. https://glowingpython.blogspot.com/2016/
 235. javascript:void(0)
 236. https://glowingpython.blogspot.com/2016/05/
 237. javascript:void(0)
 238. https://glowingpython.blogspot.com/2015/
 239. javascript:void(0)
 240. https://glowingpython.blogspot.com/2015/10/
 241. javascript:void(0)
 242. https://glowingpython.blogspot.com/2015/04/
 243. javascript:void(0)
 244. https://glowingpython.blogspot.com/2015/01/
 245. javascript:void(0)
 246. https://glowingpython.blogspot.com/2014/
 247. javascript:void(0)
 248. https://glowingpython.blogspot.com/2014/11/
 249. javascript:void(0)
 250. https://glowingpython.blogspot.com/2014/10/
 251. javascript:void(0)
 252. https://glowingpython.blogspot.com/2014/09/
 253. javascript:void(0)
 254. https://glowingpython.blogspot.com/2014/08/
 255. javascript:void(0)
 256. https://glowingpython.blogspot.com/2014/05/
 257. javascript:void(0)
 258. https://glowingpython.blogspot.com/2014/04/
 259. javascript:void(0)
 260. https://glowingpython.blogspot.com/2014/02/
 261. javascript:void(0)
 262. https://glowingpython.blogspot.com/2014/01/
 263. javascript:void(0)
 264. https://glowingpython.blogspot.com/2013/
 265. javascript:void(0)
 266. https://glowingpython.blogspot.com/2013/12/
 267. javascript:void(0)
 268. https://glowingpython.blogspot.com/2013/11/
 269. javascript:void(0)
 270. https://glowingpython.blogspot.com/2013/09/
 271. javascript:void(0)
 272. https://glowingpython.blogspot.com/2013/07/
 273. javascript:void(0)
 274. https://glowingpython.blogspot.com/2013/06/
 275. javascript:void(0)
 276. https://glowingpython.blogspot.com/2013/05/
 277. javascript:void(0)
 278. https://glowingpython.blogspot.com/2013/04/
 279. javascript:void(0)
 280. https://glowingpython.blogspot.com/2013/03/
 281. javascript:void(0)
 282. https://glowingpython.blogspot.com/2013/02/
 283. javascript:void(0)
 284. https://glowingpython.blogspot.com/2013/01/
 285. javascript:void(0)
 286. https://glowingpython.blogspot.com/2012/
 287. javascript:void(0)
 288. https://glowingpython.blogspot.com/2012/12/
 289. javascript:void(0)
 290. https://glowingpython.blogspot.com/2012/11/
 291. javascript:void(0)
 292. https://glowingpython.blogspot.com/2012/10/
 293. javascript:void(0)
 294. https://glowingpython.blogspot.com/2012/09/
 295. javascript:void(0)
 296. https://glowingpython.blogspot.com/2012/08/
 297. javascript:void(0)
 298. https://glowingpython.blogspot.com/2012/07/
 299. javascript:void(0)
 300. https://glowingpython.blogspot.com/2012/05/
 301. javascript:void(0)
 302. https://glowingpython.blogspot.com/2012/04/
 303. javascript:void(0)
 304. https://glowingpython.blogspot.com/2012/03/
 305. javascript:void(0)
 306. https://glowingpython.blogspot.com/2012/02/
 307. javascript:void(0)
 308. https://glowingpython.blogspot.com/2012/01/
 309. javascript:void(0)
 310. https://glowingpython.blogspot.com/2011/
 311. javascript:void(0)
 312. https://glowingpython.blogspot.com/2011/12/
 313. javascript:void(0)
 314. https://glowingpython.blogspot.com/2011/11/
 315. javascript:void(0)
 316. https://glowingpython.blogspot.com/2011/10/
 317. javascript:void(0)
 318. https://glowingpython.blogspot.com/2011/09/
 319. javascript:void(0)
 320. https://glowingpython.blogspot.com/2011/08/
 321. javascript:void(0)
 322. https://glowingpython.blogspot.com/2011/07/
 323. https://glowingpython.blogspot.com/2011/07/pca-and-image-compression-with-numpy.html
 324. https://glowingpython.blogspot.com/2011/07/principal-component-analysis-with-numpy.html
 325. https://glowingpython.blogspot.com/2011/07/jukowsi-transformation.html
 326. https://glowingpython.blogspot.com/2011/07/polynomial-curve-fitting.html
 327. https://glowingpython.blogspot.com/2011/07/dice-rolling-experiment.html
 328. https://glowingpython.blogspot.com/2011/07/prime-factor-decomposition-of-number.html
 329. https://glowingpython.blogspot.com/2011/07/how-to-use-reflection.html
 330. https://glowingpython.blogspot.com/2011/07/how-to-plot-biorhythm.html
 331. https://glowingpython.blogspot.com/2011/07/approximating-pi.html
 332. javascript:void(0)
 333. https://glowingpython.blogspot.com/2011/06/
 334. javascript:void(0)
 335. https://glowingpython.blogspot.com/2011/05/
 336. javascript:void(0)
 337. https://glowingpython.blogspot.com/2011/04/
 338. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/posts/default
 339. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/posts/default
 340. https://glowingpython.blogspot.com/feeds/posts/default
 341. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/3856867047183233027/comments/default
 342. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/3856867047183233027/comments/default
 343. https://glowingpython.blogspot.com/feeds/3856867047183233027/comments/default
 344. https://www.blogger.com/

   hidden links:
 346. https://www.blogger.com/post-edit.g?blogid=1693014329567144872&postid=3856867047183233027&from=pencil
 347. https://www.blogger.com/comment-iframe.g?blogid=1693014329567144872&postid=3856867047183233027
 348. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=adsense&widgetid=adsense1&action=editwidget&sectionid=sidebar-right-1
 349. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=html&widgetid=html1&action=editwidget&sectionid=sidebar-right-1
 350. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text1&action=editwidget&sectionid=sidebar-right-1
 351. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=image&widgetid=image1&action=editwidget&sectionid=sidebar-right-1
 352. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=label&widgetid=label1&action=editwidget&sectionid=sidebar-right-1
 353. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=followers&widgetid=followers1&action=editwidget&sectionid=sidebar-right-1
 354. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogsearch&widgetid=blogsearch1&action=editwidget&sectionid=sidebar-right-1
 355. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogarchive&widgetid=blogarchive1&action=editwidget&sectionid=sidebar-right-1
 356. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text3&action=editwidget&sectionid=footer-2-1
 357. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=subscribe&widgetid=subscribe2&action=editwidget&sectionid=footer-2-2
 358. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=attribution&widgetid=attribution1&action=editwidget&sectionid=footer-3
