(h) nothing but net(works) (1/3) [15 points] 

                                                              

you have just crashed your spaceship at the viterbi spaceport. being unfamiliar with spaceship repair, you   re 
very much at a loss--but then a friendly-looking being from rigel sidles up to you and says: 
 
 
(okay, maybe that   s not so helpful after all.) 
 
luckily for you, english and rigelese are related languages, and you own a galactilang translation device that 
can translate from the rigelese sound system into more familiar english. this translator first turns the rige-
lese word into a sequence of 4 numbers, then uses a neural network to transform those 4 numbers in some 
way (more about this in a minute), and then it transforms those final numbers into english letters using the 
following table: 
 
 
 
 
 
 
 
here are a few examples of the translator in action:  
 
 

rigelese 

rigelese 

v  w 

l  m 

15 

13 

19 

11 

12 

14 

16 

17 

18 

20 

21 

22 

23 

24 

25 

26 

10 

   

q 

o 

   

n 

u 

g 

d 

h 

a 

   

   

   

   

   

   

b 

r 

c 

k 

p 

x 

9 

0 

1 

3 

4 

5 

6 

7 

2 

8 

* 

e 

t 

y 

z 

f 

s 

j 

i 

 

 

 

 

 

 

english 

rigelese 

 

 

 

 

 

 

english 

 

1 

 

 

0 

 

* 

   

 

0 

 

 

1 

 

a 

 

0 

 

 

1 

 

a 

   

 

0 

 

 

1 

 

a 

 

0 

 

 

0 

 

* 

   

 

1 

 

 

1 

 

a 

 

0 

 

 

1 

 

a 

   

 

0 

 

 

1 

 

a 

 

 

 

 

 

 

english 

rigelese 

 

 

 

 

 

 

english 

 

11 

 

 

0 

 

* 

   

 

2 

 

 

4 

 

d 

 

0 

 

 

11 

 

k 

   

 

2 

 

 

6 

 

f 

 

0 

 

 

0 

 

* 

   

 

2 

 

 

4 

 

d 

 

0 

 

 

11 

 

k 

   

 

2 

 

 

4 

 

d 

(h) nothing but net(works) (2/3)  

rigelese 

   

   

   

   

rigelese 

   

   

   

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

i 

f 

e 

e 

* 

9 

5 

6 

2 

0 

5 

4 

0 

5 

3 

0 

3 

2 

2 

0 

c 

b 

b 

-3 

english 

english 

 
 
 
 
 
 
 
 
 
 
   but wait,    you ask,    what   s that big jumble of arrows in the middle of each translation?    to which we re-
spond: the jumble of arrows stands for a neural network, which is an abstract computational structure that 
can be used to approximate any function. the network consists of several layers, including an input layer (the 
data to be processed), an output layer (the result of the computation), and potentially some middle layers in 
between the input and output layers. the network is trained on real data, and from this training process it 
learns how to transition from one layer to the next. here is an example of a neural network:  
 
 
 
 
 
 
 
 
 
 
 
this network takes two numbers as its input, then transitions from those two numbers to another two num-
bers in the middle layer, and then those two middle numbers get turned into a single output. the transitions 
between the layers are governed by the numbers written next to the arrows (these numbers are called 
weights). here is an example of this network in action: given the inputs 13 and 9, it yields the output 31 
(after computing the middle layer of 13 and 44). 

middle 
layer  

output 

input 

-1 

1 

0 

1 

2 

2 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

input 

13 

9 

1 

 

 

middle 
layer  

13 

-1 

2 

0 

 

 

 

 

 

 

44 

1 

output 

 

31 

2 

 

 

 

 

 

 

 

(h) nothing but net(works) (3/3)  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

   

   

   

1 

2 

9 

8 

   

   

   

   

-4 

10 

11 

19 

  word 2 

  word 1   

 
rigelese 

 
rigelese     

it is left to you to figure out exactly how the transitions are computed. in this case, if we call the inputs a and 
b, the output can be easily represented as a + 2b. however, neural networks can also represent many other 
more complex calculations that cannot be as easily expressed otherwise, and these other calculations have 
proven to be extremely useful in computational linguistic applications. 
 
now, returning to the rigel example: when you try to translate the message from the rigelian, your transla-
tor runs out of power after only computing one step of the translation. as a result, this is all that it gives you 
(each diagram represents the translation process for a single word): 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
h1. finish the translation that the translator started. write your answers in the answer sheets. although 
you can see the six example translations at the start of this problem, you do not know what weights are 
attached to the arrows in the diagram (although you do know that the weights are the same across the trans-
lations for all four words). therefore, you will have to use those diagrams to figure out the exact inner work-
ings of the translator. 

  word 3   

  word 4 

rigelese 

rigelese 

english 

english 

english 

english 

-12 

-12 

-31 

-14 

32 

22 

-2 

   

   

   

   

   

   

   

1 

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

  word 1    

 

 

 

  word 3 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

  word 2 

 

 

  word 4 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

