
   [1]

the stanford natural language processing group

the stanford nlp group

     * [2]people
     * [3]publications
     * [4]research blog
     * [5]software
     * [6]teaching
     * [7]local

[8]software > stanford parser

                  the stanford parser: a statistical parser

     [9]about | [10]citing | [11]questions | [12]download | [13]included
     tools | [14]extensions | [15]release history | [16]sample output |
                            [17]online | [18]faq

about

   a natural language parser is a program that works out the grammatical
   structure of sentences, for instance, which groups of words go together
   (as "phrases") and which words are the subject or object of a verb.
   probabilistic parsers use knowledge of language gained from hand-parsed
   sentences to try to produce the most likely analysis of new sentences.
   these statistical parsers still make some mistakes, but commonly work
   rather well. their development was one of the biggest breakthroughs in
   natural language processing in the 1990s. you can [19]try out our
   parser online.

package contents

   this package is a java implementation of probabilistic natural language
   parsers, both highly optimized pid18 and lexicalized dependency parsers,
   and a lexicalized pid18 parser. the original version of this parser was
   mainly written by dan klein, with support code and linguistic grammar
   development by christopher manning. extensive additional work
   (internationalization and language-specific modeling, flexible
   input/output, grammar compaction, lattice parsing, k-best parsing,
   typed dependencies output, user support, etc.) has been done by roger
   levy, christopher manning, teg grenager, galen andrew, marie-catherine
   de marneffe, bill maccartney, anna rafferty, spence green, huihsin
   tseng, pi-chuan chang, wolfgang maier, and jenny finkel.

   the lexicalized probabilistic parser implements a factored product
   model, with separate pid18 phrase structure and lexical dependency
   experts, whose preferences are combined by efficient exact id136,
   using an a* algorithm. or the software can be used simply as an
   accurate unlexicalized stochastic context-free grammar parser. either
   of these yields a good performance statistical parsing system. a gui is
   provided for viewing the phrase structure tree output of the parser.

   as well as providing an english parser, the parser can be and has been
   adapted to work with other languages. a chinese parser based on the
   chinese treebank, a german parser based on the negra corpus and arabic
   parsers based on the penn arabic treebank are also included. the parser
   has also been used for other languages, such as italian, bulgarian, and
   portuguese.

   the parser provides [20]universal dependencies (v1) and stanford
   dependencies output as well as phrase structure trees. typed
   dependencies are otherwise known grammatical relations. this style of
   output is available only for english and chinese. for more details,
   please refer to the [21]stanford dependencies webpage and the
   [22]universal dependencies v1 documentation. (see also [23]the current
   universal dependencies documentation, but we are yet to update to it.).

shift-reduce constituency parser

   as of version 3.4 in 2014, the parser includes the code necessary to
   run a [24]shift reduce parser, a much faster constituent parser with
   competitive accuracy. models for this parser are linked below.

neural-network dependency parser

   in version 3.5.0 (october 2014) we released a [25]high-performance
   dependency parser powered by a neural network. the parser outputs typed
   dependency parses for english and chinese. the models for this parser
   are included in the general stanford parser models package.

dependency scoring

   the package includes a tool for scoring of generic dependency parses,
   in a class edu.stanford.nlp.trees.dependencyscoring. this tool measures
   scores for dependency trees, doing f1 and labeled attachment scoring.
   the included usage message gives a detailed description of how to use
   the tool.

usage notes

   the current version of the parser requires java 8 (jdk1.8) or later.
   (you can also download an old version of the parser, version 1.4, which
   runs under jdk 1.4, version 2.0 which runs under jdk 1.5, version 3.4.1
   which runs under jdk 1.6, but those distributions are no longer
   supported.) the parser also requires a reasonable amount of memory (at
   least 100mb to run as a pid18 parser on sentences up to 40 words in
   length; typically around 500mb of memory to be able to parse similarly
   long typical-of-newswire sentences using the factored model).

   the parser is available for download, licensed under the [26]gnu
   general public license (v2 or later). source is included. the package
   includes components for command-line invocation, a java parsing gui,
   and a java api.

   the download is a 261 mb zipped file (mainly consisting of included
   grammar data files). if you unpack the zip file, you should have
   everything needed. simple scripts are included to invoke the parser on
   a unix or windows system. for another system, you merely need to
   similarly configure the classpath.

licensing

   the parser code is dual licensed (in a similar manner to mysql, etc.).
   open source licensing is under the full gpl, which allows many free
   uses. for distributors of [27]proprietary software, [28]commercial
   licensing is available. (fine print: the traditional (dynamic
   programmed) stanford parser does part-of-speech tagging as it works,
   but the newer constituency and neural network dependency shift-reduce
   parsers require pre-tagged input. for convenience, we include the
   part-of-speech tagger code, but not models with the parser download.
   however, if you want to use these parsers under a commercial license,
   then you need a license to both the stanford parser and the stanford
   pos tagger. or you can get the whole bundle of stanford corenlp.) if
   you don't need a commercial license, but would like to support
   maintenance of these tools, we welcome gift funding: use [29]this form
   and write "stanford nlp group open source software" in the special
   instructions.

citing the stanford parser

   the main technical ideas behind how these parsers work appear in these
   papers. feel free to cite one or more of the following papers or people
   depending on what you are using. since the parser is regularly updated,
   we appreciate it if papers with numerical results reflecting parser
   performance mention the version of the parser being used!

     for the neural-network dependency parser:
     danqi chen and christopher d manning. 2014. [30]a fast and accurate
     dependency parser using neural networks. proceedings of emnlp 2014

     for the compositional vector grammar parser (starting at version
     3.2):
     richard socher, john bauer, christopher d. manning and andrew y. ng.
     2013. [31]parsing with compositional vector grammars. proceedings of
     acl 2013

     for the shift-reduce constituency parser (starting at version 3.2):
     this parser was written by john bauer. you can thank him and cite
     the web page describing it:
     [32]https://nlp.stanford.edu/software/srparser.html. you can also
     cite the original research papers of others mentioned on that page.

     for the pid18 parser (which also does id52):
     dan klein and christopher d. manning. 2003. [33]accurate
     unlexicalized parsing. proceedings of the 41st meeting of the
     association for computational linguistics, pp. 423-430.

     for the factored parser (which also does id52):
     dan klein and christopher d. manning. 2003. [34]fast exact id136
     with a factored model for natural language parsing. in advances in
     neural information processing systems 15 (nips 2002), cambridge, ma:
     mit press, pp. 3-10.

     for the universal dependencies representation:
     joakim nivre, marie-catherine de marneffe, filip ginter, yoav
     goldberg, jan haji  , christopher d. manning, ryan mcdonald, slav
     petrov, sampo pyysalo, natalia silveira, reut tsarfaty, and daniel
     zeman. 2016. [35]universal dependencies v1: a multilingual treebank
     collection. in lrec 2016.

     for the english universal dependencies converter and the enhanced
     english universal dependencies representation:
     sebastian schuster and christopher d. manning. 2016. [36]enhanced
     english universal dependencies: an improved representation for
     natural language understanding tasks. in lrec 2016.

     for the (english) stanford dependencies representation:
     marie-catherine de marneffe, bill maccartney and christopher d.
     manning. 2006. [37]generating typed dependency parses from phrase
     structure parses. in lrec 2006.

     for the german parser:
     anna rafferty and christopher d. manning. 2008. [38]parsing three
     german treebanks: lexicalized and unlexicalized baselines. in acl
     workshop on parsing german.

     for the chinese parser:
     roger levy and christopher d. manning. 2003. [39]is it harder to
     parse chinese, or the chinese treebank? acl 2003, pp. 439-446.

     for the chinese stanford dependencies:
     pi-chuan chang, huihsin tseng, dan jurafsky, and christopher d.
     manning. 2009. [40]discriminative reordering with chinese
     grammatical relations features. in proceedings of the third workshop
     on syntax and structure in statistical translation.

     for the arabic parser:
     spence green and christopher d. manning. 2010. [41]better arabic
     parsing: baselines, evaluations, and analysis. in coling 2010.

     for the french parser:
     spence green, marie-catherine de marneffe, john bauer, and
     christopher d. manning. 2010. [42]multiword expression
     identification with tree substitution grammars: a parsing tour de
     force with french.. in emnlp 2011.

     for the spanish parser:
     most of the work on spanish was by jon gauthier. there is no
     published paper, but you can thank him and/or cite this webpage:
     [43]https://nlp.stanford.edu/software/spanish-faq.html

questions about the parser?

    1. if you're new to parsing, you can start by running the gui to try
       out the parser. scripts are included for linux (lexparser-gui.sh)
       and windows (lexparser-gui.bat).
    2. take a look at the javadoc lexparser package documentation and
       lexicalizedparser class documentation. (point your web browser at
       the index.html file in the included javadoc directory and navigate
       to those items.)
    3. look at the [44]parser faq for answers to common questions.
    4. if none of that helps, please see [45]our email guidelines for
       instructions on how to reach us for further assistance.

download

                 [46]download stanford parser version 3.9.2
     the standard download includes models for arabic, chinese, english,
     french, german, and spanish. there are additional models we do not
   release with the standalone parser, including shift-reduce models, that
    can be found in the models jars for each language. below are links to
                                 those jars.
         [47]arabic models   [48]chinese models   [49]english models
         [50]french models   [51]german models   [52]spanish models

extensions: packages by others using the parser

   java
     * [53]tydevi typed dependency viewer that makes a picture of the
       stanford dependencies analysis of a sentence. by bernard bou.
     * [54]dependensee a dependency parse visualisation tool that makes
       pictures of stanford dependency output. by awais athar.
       ([55]github)
     * [56]gate plug-in. by the gate team (esp. adam funk).
     * [57]grammarscope grammatical relation browser. gui, especially
       focusing on grammatical relations (typed dependencies), including
       an editor. by bernard bou.

   php
     * [58]php-stanford-nlp. supports pos tagger, ner, parser. by anthony
       gentile (agentile).

   python/jython
     * [59]python interface built using jpype by stefanie tellex.
     * [60]jython interface. by viktor pekar.

   ruby
     * [61]ruby wrapper to the stanford natural language parser. by bill
       mcneill. an extended and better packaged version of this by john
       wilkinson is [62]available at github.

   .net / f# / c#
     * sergey tihon has [63]ported the stanford parser to f# (or any .net
       language, including c#), using ikvm. see [64]his blog post, [65]his
       github site, or [66]the listing on nuget.

   os x
     * if you use homebrew, you can install the stanford parser with: brew
       install stanford-parser

release history

   [67]version 3.9.2 2018-10-17 updated for compatibility [68]arabic
   [69]chinese   [70]english   [71]french   [72]german   [73]spanish
   [74]version 3.9.1 2018-02-27 new french and spanish ud models, misc. ud
   enhancements, bug fixes [75]arabic   [76]chinese   [77]english
   [78]french   [79]german   [80]spanish
   [81]version 3.8.0 2017-06-09 updated for compatibility [82]arabic
   [83]chinese   [84]english   [85]french   [86]german   [87]spanish
   [88]version 3.7.0 2016-10-31 new ud models [89]arabic   [90]chinese
   [91]english   [92]french   [93]german   [94]spanish
   [95]version 3.6.0 2015-12-09 updated for compatibility [96]chinese
   [97]english   [98]french   [99]german   [100]spanish
   [101]version 3.5.2 2015-04-20 switch to universal dependencies
   [102]shift reduce parser models
   [103]version 3.5.1 2015-01-29 dependency parser fixes and model
   improvements [104]shift reduce parser models
   [105]version 3.5.0 2014-10-31 upgrade to java 8; add
   [106]neural-network dependency parser [107]shift reduce parser models
   [108]version 3.4.1 2014-08-27 add spanish models [109]shift reduce
   parser models
   [110]version 3.4 2014-06-16 shift-reduce parser, dependency
   improvements, french parser uses cc tagset [111]shift reduce parser
   models
   [112]version 3.3.1 2014-01-04 english dependency "infmod" and "partmod"
   combined into "vmod", other minor dependency improvements
   [113]version 3.3.0 2013-11-12 english dependency "attr" removed, other
   dependency improvements, imperative training data added
   [114]version 3.2.0 2013-06-20 new cvg based english model with higher
   accuracy
   [115]version 2.0.5 2013-04-05 dependency improvements, -nthreads
   option, ctb7 model
   [116]version 2.0.4 2012-11-12 improved dependency code extraction
   efficiency, other dependency changes
   [117]version 2.0.3 2012-07-09 minor bug fixes
   [118]version 2.0.2 2012-05-22 some models now support training with
   extra tagged, non-tree data
   [119]version 2.0.1 2012-03-09 caseless english model included, bugfix
   for enforced tags
   [120]version 2.0 2012-02-03 threadsafe!
   [121]version 1.6.9 2011-09-14 improved recognition of imperatives,
   dependencies now explicitely include a root, parser knows osprey is a
   noun
   [122]version 1.6.8 2011-06-19 new french model, improved foreign
   language models, bug fixes
   [123]version 1.6.7 2011-05-18 minor bug fixes.
   [124]version 1.6.6 2011-04-20 internal code and api changes (arraylists
   rather than sentence; use of corelabel objects) to match tagger and
   corenlp.
   [125]version 1.6.5 2010-11-30 further improvements to english stanford
   dependencies and other minor changes
   [126]version 1.6.4 2010-08-20 more minor bug fixes and improvements to
   english stanford dependencies and question parsing
   [127]version 1.6.3 2010-07-09 improvements to english stanford
   dependencies and question parsing, minor bug fixes
   [128]version 1.6.2 2010-02-26 improvements to arabic parser models, and
   to english and chinese stanford dependencies
   [129]version 1.6.1 2008-10-26 slightly improved arabic and german
   parsing, and stanford dependencies
   [130]version 1.6 2007-08-19 added arabic, k-best pcid18 parsing;
   improved english grammatical relations
   [131]version 1.5.1 2006-06-11 improved english and chinese grammatical
   relations; fixed utf-8 handling
   [132]version 1.5 2005-07-21 added grammatical relations output; fixed
   bugs introduced in 1.4
   [133]version 1.4 2004-03-24 made pid18 faster again (by fsa
   minimization); added german support
   [134]version 1.3 2003-09-06 made parser over twice as fast; added
   id121 options
   version 1.2 2003-07-20 halved pid18 memory usage; added support for
   chinese
   version 1.1 2003-03-25 improved parsing speed; included gui, improved
   pid18 grammar
   version 1.0 2002-12-05 initial release

sample input and output

   the parser can read various forms of plain text input and can output
   various analysis formats, including part-of-speech tagged text, phrase
   structure trees, and a grammatical relations (typed dependency) format.
   for example, consider the text:

     the strongest rain ever recorded in india shut down the financial
     hub of mumbai, snapped communication lines, closed airports and
     forced thousands of people to sleep in their offices or walk home
     during the night, officials said today.

   the following output shows part-of-speech tagged text, then a
   context-free phrase structure grammar representation, and finally a
   typed dependency representation. all of these are different views of
   the output of the parser.

the/dt strongest/jjs rain/nn ever/rb recorded/vbn in/in india/nnp
shut/vbd down/rp the/dt financial/jj hub/nn of/in mumbai/nnp ,/,
snapped/vbd communication/nn lines/nns ,/, closed/vbd airports/nns
and/cc forced/vbd thousands/nns of/in people/nns to/to sleep/vb in/in
their/prp$ offices/nns or/cc walk/vb home/nn during/in the/dt night/nn
,/, officials/nns said/vbd today/nn ./.

(root
  (s
    (s
      (np
        (np (dt the) (jjs strongest) (nn rain))
        (vp
          (advp (rb ever))
          (vbn recorded)
          (pp (in in)
            (np (nnp india)))))
      (vp
        (vp (vbd shut)
          (prt (rp down))
          (np
            (np (dt the) (jj financial) (nn hub))
            (pp (in of)
              (np (nnp mumbai)))))
        (, ,)
        (vp (vbd snapped)
          (np (nn communication) (nns lines)))
        (, ,)
        (vp (vbd closed)
          (np (nns airports)))
        (cc and)
        (vp (vbd forced)
          (np
            (np (nns thousands))
            (pp (in of)
              (np (nns people))))
          (s
            (vp (to to)
              (vp
                (vp (vb sleep)
                  (pp (in in)
                    (np (prp$ their) (nns offices))))
                (cc or)
                (vp (vb walk)
                  (np (nn home))
                  (pp (in during)
                    (np (dt the) (nn night))))))))))
    (, ,)
    (np (nns officials))
    (vp (vbd said)
      (np-tmp (nn today)))
    (. .)))

det(rain-3, the-1)
amod(rain-3, strongest-2)
nsubj(shut-8, rain-3)
nsubj(snapped-16, rain-3)
nsubj(closed-20, rain-3)
nsubj(forced-23, rain-3)
advmod(recorded-5, ever-4)
partmod(rain-3, recorded-5)
prep_in(recorded-5, india-7)
ccomp(said-40, shut-8)
prt(shut-8, down-9)
det(hub-12, the-10)
amod(hub-12, financial-11)
dobj(shut-8, hub-12)
prep_of(hub-12, mumbai-14)
conj_and(shut-8, snapped-16)
ccomp(said-40, snapped-16)
nn(lines-18, communication-17)
dobj(snapped-16, lines-18)
conj_and(shut-8, closed-20)
ccomp(said-40, closed-20)
dobj(closed-20, airports-21)
conj_and(shut-8, forced-23)
ccomp(said-40, forced-23)
dobj(forced-23, thousands-24)
prep_of(thousands-24, people-26)
aux(sleep-28, to-27)
xcomp(forced-23, sleep-28)
poss(offices-31, their-30)
prep_in(sleep-28, offices-31)
xcomp(forced-23, walk-33)
conj_or(sleep-28, walk-33)
dobj(walk-33, home-34)
det(night-37, the-36)
prep_during(walk-33, night-37)
nsubj(said-40, officials-39)
root(root-0, said-40)
tmod(said-40, today-41)

   this output was generated with the command:

     java -mx200m edu.stanford.nlp.parser.lexparser.lexicalizedparser
     -retaintmpsubcategories -outputformat
     "wordsandtags,penn,typeddependencies" englishpid18.ser.gz mumbai.txt

stanford nlp group

   gates computer science building
   353 serra mall
   stanford, ca 94305-9020
   [135]directions and parking

affiliated groups

     * [136]stanford ai lab
     * [137]stanford infolab
     * [138]csli

connect

     * [139]stack overflow
     * [140]github
     * [141]twitter

local links

   [142]nlp lunch    [143]nlp reading group
   [144]nlp seminar    [145]calendar
   [146]javanlp ([147]javadocs)    [148]machines
   [149]ai speakers    [150]q&a

references

   visible links
   1. https://nlp.stanford.edu/
   2. https://nlp.stanford.edu/people/
   3. https://nlp.stanford.edu/pubs/
   4. https://nlp.stanford.edu/blog/
   5. https://nlp.stanford.edu/software/
   6. https://nlp.stanford.edu/teaching/
   7. https://nlp.stanford.edu/new_local/
   8. https://nlp.stanford.edu/software/
   9. https://nlp.stanford.edu/software/lex-parser.shtml#about
  10. https://nlp.stanford.edu/software/lex-parser.shtml#citing
  11. https://nlp.stanford.edu/software/lex-parser.shtml#questions
  12. https://nlp.stanford.edu/software/lex-parser.shtml#download
  13. https://nlp.stanford.edu/software/lex-parser.shtml#tools
  14. https://nlp.stanford.edu/software/lex-parser.shtml#extensions
  15. https://nlp.stanford.edu/software/lex-parser.shtml#history
  16. https://nlp.stanford.edu/software/lex-parser.shtml#sample
  17. http://nlp.stanford.edu:8080/parser/
  18. https://nlp.stanford.edu/software/parser-faq.html
  19. http://nlp.stanford.edu:8080/parser/
  20. https://nlp.stanford.edu/software/stanford-dependencies.html
  21. https://nlp.stanford.edu/software/stanford-dependencies.html
  22. http://universaldependencies.org/docsv1/
  23. http://universaldependencies.github.com/docs/
  24. https://nlp.stanford.edu/software/srparser.html
  25. https://nlp.stanford.edu/software/nndep.html
  26. http://www.gnu.org/licenses/gpl-2.0.html
  27. http://www.gnu.org/licenses/gpl-faq.html#gplinproprietarysystem
  28. http://otlportal.stanford.edu/techfinder/technology/id=24472
  29. http://giving.stanford.edu/goto/writeingift
  30. http://cs.stanford.edu/~danqi/papers/emnlp2014.pdf
  31. http://nlp.stanford.edu/pubs/socherbauermanningng_acl2013.pdf
  32. https://nlp.stanford.edu/software/srparser.html
  33. http://nlp.stanford.edu/~manning/papers/unlexicalized-parsing.pdf
  34. http://nlp.stanford.edu/~manning/papers/lex-parser.pdf
  35. http://nlp.stanford.edu/pubs/nivre2016ud.pdf
  36. http://nlp.stanford.edu/~sebschu/pubs/schuster-manning-lrec2016.pdf
  37. http://nlp.stanford.edu/pubs/lrec06_dependencies.pdf
  38. https://nlp.stanford.edu/pubs/german-acl08.pdf
  39. https://nlp.stanford.edu/pubs/acl2003-chinese.pdf
  40. https://nlp.stanford.edu/pubs/ssst09-chang.pdf
  41. https://nlp.stanford.edu/pubs/coling2010-arabic.pdf
  42. https://nlp.stanford.edu/pubs/green+demarneffe+bauer+manning.emnlp11.pdf
  43. https://nlp.stanford.edu/software/spanish-faq.html
  44. https://nlp.stanford.edu/software/parser-faq.html
  45. https://nlp.stanford.edu/software/email.html
  46. https://nlp.stanford.edu/software/stanford-parser-full-2018-10-17.zip
  47. https://nlp.stanford.edu/software/stanford-arabic-corenlp-2018-10-05-models.jar
  48. https://nlp.stanford.edu/software/stanford-chinese-corenlp-2018-10-05-models.jar
  49. https://nlp.stanford.edu/software/stanford-english-corenlp-2018-10-05-models.jar
  50. https://nlp.stanford.edu/software/stanford-french-corenlp-2018-10-05-models.jar
  51. https://nlp.stanford.edu/software/stanford-german-corenlp-2018-10-05-models.jar
  52. https://nlp.stanford.edu/software/stanford-spanish-corenlp-2018-10-05-models.jar
  53. http://tydevi.sourceforge.net/
  54. http://chaoticity.com/dependensee-a-dependency-parse-visualisation-tool/
  55. https://github.com/awaisathar/dependensee
  56. http://gate.ac.uk/sale/tao/splitch17.html#sec:parsers:stanford
  57. http://grammarscope.sourceforge.net/
  58. https://github.com/agentile/php-stanford-nlp
  59. http://projects.csail.mit.edu/spatial/stanford_parser
  60. https://github.com/vpekar/stanford-parser-in-jython
  61. http://stanfordparser.rubyforge.org/
  62. http://github.com/jcwilk/stanfordparser
  63. https://github.com/sergey-tihon/fsharp-stanford-nlp-samples/
  64. http://sergeytihon.wordpress.com/2013/02/05/nlp-stanford-parser-with-f-net/
  65. https://github.com/sergey-tihon/fsharp-stanford-nlp-samples
  66. https://nuget.org/packages/stanford.nlp.parser/
  67. https://nlp.stanford.edu/software/stanford-parser-full-2018-10-17.zip
  68. https://nlp.stanford.edu/software/stanford-arabic-corenlp-2018-10-05-models.jar
  69. https://nlp.stanford.edu/software/stanford-chinese-corenlp-2018-10-05-models.jar
  70. https://nlp.stanford.edu/software/stanford-english-corenlp-2018-10-05-models.jar
  71. https://nlp.stanford.edu/software/stanford-french-corenlp-2018-10-05-models.jar
  72. https://nlp.stanford.edu/software/stanford-german-corenlp-2018-10-05-models.jar
  73. https://nlp.stanford.edu/software/stanford-spanish-corenlp-2018-10-05-models.jar
  74. https://nlp.stanford.edu/software/stanford-parser-full-2018-02-27.zip
  75. https://nlp.stanford.edu/software/stanford-arabic-corenlp-2018-02-27-models.jar
  76. https://nlp.stanford.edu/software/stanford-chinese-corenlp-2018-02-27-models.jar
  77. https://nlp.stanford.edu/software/stanford-english-corenlp-2018-02-27-models.jar
  78. https://nlp.stanford.edu/software/stanford-french-corenlp-2018-02-27-models.jar
  79. https://nlp.stanford.edu/software/stanford-german-corenlp-2018-02-27-models.jar
  80. https://nlp.stanford.edu/software/stanford-spanish-corenlp-2018-02-27-models.jar
  81. https://nlp.stanford.edu/software/stanford-parser-full-2017-06-09.zip
  82. https://nlp.stanford.edu/software/stanford-arabic-corenlp-2017-06-09-models.jar
  83. https://nlp.stanford.edu/software/stanford-chinese-corenlp-2017-06-09-models.jar
  84. https://nlp.stanford.edu/software/stanford-english-corenlp-2017-06-09-models.jar
  85. https://nlp.stanford.edu/software/stanford-french-corenlp-2017-06-09-models.jar
  86. https://nlp.stanford.edu/software/stanford-german-corenlp-2017-06-09-models.jar
  87. https://nlp.stanford.edu/software/stanford-spanish-corenlp-2017-06-09-models.jar
  88. https://nlp.stanford.edu/software/stanford-parser-full-2016-10-31.zip
  89. https://nlp.stanford.edu/software/stanford-arabic-corenlp-2016-10-31-models.jar
  90. https://nlp.stanford.edu/software/stanford-chinese-corenlp-2016-10-31-models.jar
  91. https://nlp.stanford.edu/software/stanford-english-corenlp-2016-10-31-models.jar
  92. https://nlp.stanford.edu/software/stanford-french-corenlp-2016-10-31-models.jar
  93. https://nlp.stanford.edu/software/stanford-german-corenlp-2016-10-31-models.jar
  94. https://nlp.stanford.edu/software/stanford-spanish-corenlp-2016-10-31-models.jar
  95. https://nlp.stanford.edu/software/stanford-parser-full-2015-12-09.zip
  96. https://nlp.stanford.edu/software/stanford-chinese-corenlp-2016-01-19-models.jar
  97. https://nlp.stanford.edu/software/stanford-english-corenlp-2016-01-10-models.jar
  98. https://nlp.stanford.edu/software/stanford-french-corenlp-2016-01-14-models.jar
  99. https://nlp.stanford.edu/software/stanford-german-2016-01-19-models.jar
 100. https://nlp.stanford.edu/software/stanford-spanish-corenlp-2015-10-14-models.jar
 101. https://nlp.stanford.edu/software/stanford-parser-full-2015-04-20.zip
 102. https://nlp.stanford.edu/software/stanford-srparser-2014-10-23-models.jar
 103. https://nlp.stanford.edu/software/stanford-parser-full-2015-01-29.zip
 104. https://nlp.stanford.edu/software/stanford-srparser-2014-10-23-models.jar
 105. https://nlp.stanford.edu/software/stanford-parser-full-2014-10-31.zip
 106. https://nlp.stanford.edu/software/nndep.html
 107. https://nlp.stanford.edu/software/stanford-srparser-2014-10-23-models.jar
 108. https://nlp.stanford.edu/software/stanford-parser-full-2014-08-27.zip
 109. https://nlp.stanford.edu/software/stanford-srparser-2014-08-28-models.jar
 110. https://nlp.stanford.edu/software/stanford-parser-full-2014-06-16.zip
 111. https://nlp.stanford.edu/software/stanford-srparser-2014-06-16-models.jar
 112. https://nlp.stanford.edu/software/stanford-parser-full-2014-01-04.zip
 113. https://nlp.stanford.edu/software/stanford-parser-full-2013-11-12.zip
 114. https://nlp.stanford.edu/software/stanford-parser-full-2013-06-20.zip
 115. https://nlp.stanford.edu/software/stanford-parser-2013-04-05.zip
 116. https://nlp.stanford.edu/software/stanford-parser-2012-11-12.zip
 117. https://nlp.stanford.edu/software/stanford-parser-2012-07-09.tgz
 118. https://nlp.stanford.edu/software/stanford-parser-2012-05-22.tgz
 119. https://nlp.stanford.edu/software/stanford-parser-2012-03-09.tgz
 120. https://nlp.stanford.edu/software/stanford-parser-2012-02-03.tgz
 121. https://nlp.stanford.edu/software/stanford-parser-2011-09-14.tgz
 122. https://nlp.stanford.edu/software/stanford-parser-2011-08-04.tgz
 123. https://nlp.stanford.edu/software/stanford-parser-2011-05-18.tgz
 124. https://nlp.stanford.edu/software/stanford-parser-2011-04-20.tgz
 125. https://nlp.stanford.edu/software/stanford-parser-2010-11-30.tgz
 126. https://nlp.stanford.edu/software/stanford-parser-2010-08-20.tgz
 127. https://nlp.stanford.edu/software/stanford-parser-2010-07-09.tgz
 128. https://nlp.stanford.edu/software/stanford-parser-2010-02-26.tgz
 129. https://nlp.stanford.edu/software/stanford-parser-2008-10-26.tgz
 130. https://nlp.stanford.edu/software/stanford-parser-2007-08-19.tar.gz
 131. https://nlp.stanford.edu/software/stanfordparser-2006-06-11.tar.gz
 132. https://nlp.stanford.edu/software/stanfordparser-2005-07-21.tar.gz
 133. https://nlp.stanford.edu/software/stanfordparser-1.4.tar.gz
 134. https://nlp.stanford.edu/software/stanfordparser-1.3.tar.gz
 135. http://forum.stanford.edu/visitors/directions/gates.php
 136. http://ai.stanford.edu/
 137. http://infolab.stanford.edu/
 138. https://www-csli.stanford.edu/
 139. http://stackoverflow.com/tags/stanford-nlp
 140. https://github.com/stanfordnlp/corenlp
 141. https://twitter.com/stanfordnlp
 142. https://nlp.stanford.edu/local/nlp_lunch.shtml
 143. http://nlp.stanford.edu/read/
 144. http://nlp.stanford.edu/seminar/
 145. https://nlp.stanford.edu/local/calendar.shtml
 146. https://nlp.stanford.edu/javanlp/
 147. https://nlp.stanford.edu/nlp/javadoc/javanlp/
 148. https://nlp.stanford.edu/local/machines.shtml
 149. http://ai.stanford.edu/portfolio-view/distinguished-speaker-series
 150. https://nlp.stanford.edu/local/qa/

   hidden links:
 152. https://nlp.stanford.edu/software/lex-parser.shtml
