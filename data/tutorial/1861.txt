
   [1]

the stanford natural language processing group

the stanford nlp group

     * [2]people
     * [3]publications
     * [4]research blog
     * [5]software
     * [6]teaching
     * [7]local

[8]software > stanford log-linear part-of-speech tagger

                  stanford log-linear part-of-speech tagger

        [9]about | [10]questions | [11]mailing lists | [12]download |
               [13]extensions | [14]release history | [15]faq

about

   a part-of-speech tagger (pos tagger) is a piece of software that reads
   text in some language and assigns parts of speech to each word (and
   other token), such as noun, verb, adjective, etc., although generally
   computational applications use more fine-grained pos tags like
   'noun-plural'. this software is a java implementation of the log-linear
   part-of-speech taggers described in these papers (if citing just one
   paper, cite the 2003 one):

     kristina toutanova and christopher d. manning. 2000. [16]enriching
     the knowledge sources used in a maximum id178 part-of-speech
     tagger. in proceedings of the joint sigdat conference on empirical
     methods in natural language processing and very large corpora
     (emnlp/vlc-2000), pp. 63-70.

     kristina toutanova, dan klein, christopher manning, and yoram
     singer. 2003. [17]feature-rich part-of-speech tagging with a cyclic
     dependency network. in proceedings of hlt-naacl 2003, pp. 252-259.

   the tagger was originally written by kristina toutanova. since that
   time, dan klein, christopher manning, william morgan, anna rafferty,
   michel galley, and john bauer have improved its speed, performance,
   usability, and support for other languages.

   the system requires java 1.8+ to be installed. depending on whether
   you're running 32 or 64 bit java and the complexity of the tagger
   model, you'll need somewhere between 60 and 200 mb of memory to run a
   trained tagger (i.e., you may need to give java an option like java
   -mx200m). plenty of memory is needed to train a tagger. it again
   depends on the complexity of the model but at least 1gb is usually
   needed, often more.

   several downloads are available. the basic download contains two
   trained tagger models for english. the full download contains three
   trained english tagger models, an arabic tagger model, a chinese tagger
   model, a french tagger model, and a german tagger model. both versions
   include the same source and other required files. the tagger can be
   retrained on any language, given pos-annotated training text for the
   language.

   part-of-speech name abbreviations: the english taggers use the penn
   treebank tag set. here are some links to documentation of the penn
   treebank english pos tag set: [18]1993 computational linguistics
   article in pdf, [19]amalgam page, [20]aoife cahill's list. see the
   included readme-models.txt in the models directory for more information
   about the tagsets for the other languages.

   the tagger is licensed under the [21]gnu general public license (v2 or
   later). source is included. the package includes components for
   command-line invocation, running as a server, and a java api. the
   tagger code is dual licensed (in a similar manner to mysql, etc.). open
   source licensing is under the full gpl, which allows many free uses.
   for distributors of [22]proprietary software, [23]commercial licensing
   is available. if you don't need a commercial license, but would like to
   support maintenance of these tools, we welcome gift funding.

questions

   for documentation, first take a look at the included readme.txt.

   matthew jockers has kindly produced [24]an example and tutorial for
   running the tagger. this particularly concentrates on command-line
   usage with xml and (mac os x) xgrid.

   galal aly wrote a [25]tagging tutorial focused on usage in java with
   eclipse.

   for more details, look at our included javadocs, particularly [26]the
   javadoc for maxenttagger.

   there is a brief [27]faq.

   have a support question? ask us on [28]stack overflow using the tag
   stanford-nlp.

   feedback and bug reports / fixes can be sent to our [29]mailing lists.

recipes

   tag text from a file text.txt, producing tab-separated-column output:

     java -cp "*" edu.stanford.nlp.tagger.maxent.maxenttagger -model
     models/english-left3words-distsim.tagger -textfile text.txt
     -outputformat tsv -outputfile text.tag

mailing lists

   we have 3 mailing lists for the stanford pos tagger, all of which are
   shared with other javanlp tools (with the exclusion of the parser).
   each address is at @lists.stanford.edu:
    1. java-nlp-user this is the best list to post to in order to send
       feature requests, make announcements, or for discussion among
       javanlp users. (please ask support questions on [30]stack overflow
       using the stanford-nlp tag.)
       you have to subscribe to be able to use this list. join the list
       via [31]this webpage or by emailing
       java-nlp-user-join@lists.stanford.edu. (leave the subject and
       message body empty.) you can also [32]look at the list archives.
    2. java-nlp-announce this list will be used only to announce new
       versions of stanford javanlp tools. so it will be very low volume
       (expect 1-3 messages a year). join the list via [33]this webpage or
       by emailing java-nlp-announce-join@lists.stanford.edu. (leave the
       subject and message body empty.)
    3. java-nlp-support this list goes only to the software maintainers.
       it's a good address for licensing questions, etc. for general use
       and support questions, you're better off joining and using
       java-nlp-user. you cannot join java-nlp-support, but you can mail
       questions to java-nlp-support@lists.stanford.edu.

download

      [34]download basic english stanford tagger version 3.9.2 [25 mb]

          [35]download full stanford tagger version 3.9.2 [129 mb]

   the basic download is a 24 mb zipped file with support for tagging
   english. the full download is a 124 mb zipped file, which includes
   additional english models and trained models for arabic, chinese,
   french, spanish, and german. in both cases most of the file size is due
   to the trained model files. the only difference between the two
   downloads is the number of trained models included. if you unpack the
   tar file, you should have everything needed. this software provides a
   gui demo, a command-line interface, and an api. simple scripts are
   included to invoke the tagger. for more information on use, see the
   included readme.txt.

extensions

other models for the stanford tagger

     * twitter english: an [36]english twitter pos tagger model is
       available by leon derczynski and others at sheffield.

packages for using the stanford pos tagger from other programming languages
(by other people)

     * docker: cuzzo yahn provides [37]a docker image for the stanford pos
       tagger with the xmlrpc service ([38]docker registry).
     * f#/c#/.net: sergey tihon has [39]ported the stanford pos tagger to
       f# (.net), using ikvm. see [40]his blog post.
     * gate: gate includes a [41]stanofrd pos tagger plugin and the gate
       team at the university of sheffield produced a [42]twitter tagger
       model and tagged data set compatible with version 3.3.1.
     * go: kamil dr    kiewicz wrote [43]go-stanford-nlp as an interface to
       the stanford pos tagger.
     * javascript (node.js): cuzzo yahn wrote [44]a node.js client for
       interacting with the stanford pos tagger, using the above xml-rpc
       service ([45]npm page). ralf engelschall wrote another:
       [46]stanford-postagger.
     * matlab: j  zsef vass makes available on github [47]a good package
       for using the stanford pos tagger in matlab. earlier, utkarsh
       upadhyay also provided a [48]matlab function for accessing the
       stanford pos tagger. but note that it loads the tagger each time it
       is called, and you don't want to do that! you should load the
       tagger only once and then re-use it. rojbir pabla also contributed
       a simple [49]script, which is on the mathworks site.
     * php: patrick schur in 2017 wrote [50]php wrapper for stanford pos
       and ner taggers. also on [51]packagist. other choices: [52]php
       wrapper by anthony gentile; [53]php wrapper by charles hays ([54]on
       github).
     * python: [55]nltk (2.0+) contains an interface to the stanford pos
       tagger. the original version was written by nitin madnani:
       [56]documentation (note: in old versions, manually set the
       character encoding or you get ascii!), [57]code, [58]on github.
       from 2017 on, you should not use the original classes but rather
       the much better [59]corenlppostagger class!
     * ruby: tiendung has written [60]a ruby binding for the stanford pos
       tagger and named entity recognizer.
     * xml-rpc: ali afshar wrote [61]an xml-rpc service interface to the
       stanford pos tagger.

release history

   version date description
   3.9.2 2018-10-16 new english models, better currency symbol handling
   [62]english / [63]full
   3.9.1 2018-02-27 new french ud model
   [64]english / [65]full
   3.8.0 2017-06-09 new spanish and french ud models
   [66]english / [67]full
   3.7.0 2016-10-31 update for compatibility, german ud model
   [68]english / [69]full
   3.6.0 2015-12-09 updated for compatibility
   [70]english / [71]full
   3.5.2 2015-04-20 updated for compatibility
   [72]english / [73]full
   3.5.1 2015-01-29 general bugfixes
   [74]english / [75]full
   3.5.0 2014-10-26 upgrade to java 8
   [76]english / [77]full
   3.4.1 2014-08-27 add spanish model
   [78]english / [79]full
   3.4 2014-06-16 french model uses cc tagset
   [80]english / [81]full
   3.3.1 2014-01-04 bugfix release
   [82]english / [83]full
   3.3.0 2013-11-12 imperatives included in english model
   [84]english / [85]full
   3.2.0 2013-06-20 improved speed & size of all models
   [86]english / [87]full
   3.1.5 2013-04-04 ctb7 model, -nthreads option, improved speed
   [88]english / [89]full
   3.1.4 2012-11-11 improved chinese model
   [90]english / [91]full
   3.1.3 2012-07-09 minor bug fixes
   [92]english / [93]full
   3.1.2 2012-05-22 included some "tech" words in the latest model
   [94]english / [95]full
   3.1.1 2012-03-09 caseless models added for english
   [96]english / [97]full
   3.1.0 2012-01-06 french tagger added, tagging speed improved
   [98]english / [99]full
   3.0.4 2011-09-14 compatible with other recent stanford releases.
   [100]english / [101]full
   3.0.3 2011-06-19 compatible with other recent stanford releases.
   [102]english / [103]full
   3.0.2 2011-05-15 addition of tsv input format.
   [104]english / [105]full
   3.0.1 2011-04-20 faster arabic and german models. compatible with other
   recent stanford releases.
   [106]english / [107]full
   3.0 2010-05-21 tagger is now re-entrant. new tagger objects are loaded
   with tagger = new maxenttagger(path) and then used with
   tagger.tagmethod...
   [108]english / [109]full
   2.0 2009-12-24 an order of magnitude faster, slightly more accurate
   best model, more options for training and deployment.
   [110]english / [111]full
   1.6 2008-09-28 a fraction better, a fraction faster, more flexible
   model specification, and quite a few less bugs.
   [112]english / [113]full
   1.5.1 2008-06-06 tagger properties are now saved with the tagger,
   making taggers more portable; tagger can be trained off of treebank
   data or tagged text; fixes classpath bugs in 2 june 2008 patch; new
   foreign language taggers released on 7 july 2008 and packaged with
   1.5.1.
   [114]english / [115]full / [116]updated models
   1.5 2008-05-21 added taggers for several languages, support for reading
   from and writing to xml, better support for changing the encoding,
   distributional similarity options, and many more small changes; patched
   on 2 june 2008 to fix a bug with tagging pre-tokenized text.
   [117]english / [118]full
   1.0 2006-01-10 first cleaned-up release after kristina graduated.
   [119]old school
   0.1 2004-08-16 first release.

stanford nlp group

   gates computer science building
   353 serra mall
   stanford, ca 94305-9020
   [120]directions and parking

affiliated groups

     * [121]stanford ai lab
     * [122]stanford infolab
     * [123]csli

connect

     * [124]stack overflow
     * [125]github
     * [126]twitter

local links

   [127]nlp lunch    [128]nlp reading group
   [129]nlp seminar    [130]calendar
   [131]javanlp ([132]javadocs)    [133]machines
   [134]ai speakers    [135]q&a

references

   visible links
   1. https://nlp.stanford.edu/
   2. https://nlp.stanford.edu/people/
   3. https://nlp.stanford.edu/pubs/
   4. https://nlp.stanford.edu/blog/
   5. https://nlp.stanford.edu/software/
   6. https://nlp.stanford.edu/teaching/
   7. https://nlp.stanford.edu/new_local/
   8. https://nlp.stanford.edu/software/
   9. https://nlp.stanford.edu/software/tagger.shtml#about
  10. https://nlp.stanford.edu/software/tagger.shtml#questions
  11. https://nlp.stanford.edu/software/tagger.shtml#mail
  12. https://nlp.stanford.edu/software/tagger.shtml#download
  13. https://nlp.stanford.edu/software/tagger.shtml#extensions
  14. https://nlp.stanford.edu/software/tagger.shtml#history
  15. https://nlp.stanford.edu/software/pos-tagger-faq.html
  16. http://nlp.stanford.edu/~manning/papers/emnlp2000.pdf
  17. http://nlp.stanford.edu/~manning/papers/tagging.pdf
  18. http://acl.ldc.upenn.edu/j/j93/j93-2004.pdf
  19. http://www.comp.leeds.ac.uk/amalgam/tagsets/upenn.html
  20. http://www.computing.dcu.ie/~acahill/tagset.html
  21. http://www.gnu.org/licenses/gpl-2.0.html
  22. http://www.gnu.org/licenses/gpl-faq.html#gplinproprietarysystem
  23. http://otlportal.stanford.edu/techfinder/technology/id=26062
  24. http://www.stanford.edu/~mjockers/cgi-bin/drupal/node/17
  25. http://www.galalaly.me/index.php/2011/05/tagging-text-with-stanford-pos-tagger-in-java-applications/
  26. http://nlp.stanford.edu/nlp/javadoc/javanlp/edu/stanford/nlp/tagger/maxent/maxenttagger.html
  27. http://nlp.stanford.edu/software/pos-tagger-faq.html
  28. http://stackoverflow.com/
  29. https://nlp.stanford.edu/software/tagger.shtml#mail
  30. http://stackoverflow.com/
  31. https://mailman.stanford.edu/mailman/listinfo/java-nlp-user
  32. https://mailman.stanford.edu/pipermail/java-nlp-user/
  33. https://mailman.stanford.edu/mailman/listinfo/java-nlp-announce
  34. https://nlp.stanford.edu/software/stanford-postagger-2018-10-16.zip
  35. https://nlp.stanford.edu/software/stanford-postagger-full-2018-10-16.zip
  36. https://gate.ac.uk/wiki/twitter-postagger.html
  37. https://github.com/cuzzo/node-stanford-postagger
  38. https://registry.hub.docker.com/u/cuzzo/stanford-pos-tagger/
  39. https://github.com/sergey-tihon/fsharp-stanford-nlp-samples/
  40. http://sergeytihon.wordpress.com/2013/02/08/nlp-stanford-pos-tagger-with-f-net/
  41. http://gate.ac.uk/sale/tao/splitch23.html#sec:misc:creole:stanford
  42. http://gate.ac.uk/wiki/twitter-postagger.html
  43. https://github.com/kamildrazkiewicz/go-stanford-nlp
  44. https://github.com/cuzzo/node-stanford-postagger
  45. https://www.npmjs.org/package/node-stanford-postagger
  46. https://www.npmjs.com/package/stanford-postagger
  47. https://github.com/jzsfvss/postaggersml
  48. https://github.com/musically-ut/matlab-stanford-postagger
  49. https://www.mathworks.com/matlabcentral/fileexchange/55297-matlab-stanford-postagger-for-a-text-document?focused=5936355&tab=function&s_tid=gn_loc_drop
  50. https://github.com/patrickschur/stanford-nlp-tagger
  51. https://packagist.org/packages/patrickschur/stanford-nlp-tagger
  52. https://github.com/agentile/php-stanford-nlp
  53. http://charleshays.com/php-class-wrapper-for-stanford-part-of-speech-tagger/
  54. https://github.com/thecodeslinger/php-class-stanford-pos-tagger
  55. http://nltk.org/
  56. http://nltk.org/api/nltk.tag.html#module-nltk.tag.stanford
  57. http://nltk.org/_modules/nltk/tag/stanford.html
  58. https://github.com/nltk/nltk/blob/master/nltk/tag/stanford.py
  59. http://www.nltk.org/_modules/nltk/tag/stanford.html#corenlppostagger
  60. http://github.com/tiendung/ruby-nlp
  61. https://github.com/turian/stanford-pos-tagger-service
  62. https://nlp.stanford.edu/software/stanford-postagger-2018-10-16.zip
  63. https://nlp.stanford.edu/software/stanford-postagger-full-2018-10-16.zip
  64. https://nlp.stanford.edu/software/stanford-postagger-2017-06-09.zip
  65. https://nlp.stanford.edu/software/stanford-postagger-full-2017-06-09.zip
  66. https://nlp.stanford.edu/software/stanford-postagger-2017-06-09.zip
  67. https://nlp.stanford.edu/software/stanford-postagger-full-2017-06-09.zip
  68. https://nlp.stanford.edu/software/stanford-postagger-2016-10-31.zip
  69. https://nlp.stanford.edu/software/stanford-postagger-full-2016-10-31.zip
  70. https://nlp.stanford.edu/software/stanford-postagger-2015-12-09.zip
  71. https://nlp.stanford.edu/software/stanford-postagger-full-2015-12-09.zip
  72. https://nlp.stanford.edu/software/stanford-postagger-2015-04-20.zip
  73. https://nlp.stanford.edu/software/stanford-postagger-full-2015-04-20.zip
  74. https://nlp.stanford.edu/software/stanford-postagger-2015-01-29.zip
  75. https://nlp.stanford.edu/software/stanford-postagger-full-2015-01-29.zip
  76. https://nlp.stanford.edu/software/stanford-postagger-2014-10-26.zip
  77. https://nlp.stanford.edu/software/stanford-postagger-full-2014-10-26.zip
  78. https://nlp.stanford.edu/software/stanford-postagger-2014-08-27.zip
  79. https://nlp.stanford.edu/software/stanford-postagger-full-2014-08-27.zip
  80. https://nlp.stanford.edu/software/stanford-postagger-2014-06-16.zip
  81. https://nlp.stanford.edu/software/stanford-postagger-full-2014-06-16.zip
  82. https://nlp.stanford.edu/software/stanford-postagger-2014-01-04.zip
  83. https://nlp.stanford.edu/software/stanford-postagger-full-2014-01-04.zip
  84. https://nlp.stanford.edu/software/stanford-postagger-2013-11-12.zip
  85. https://nlp.stanford.edu/software/stanford-postagger-full-2013-11-12.zip
  86. https://nlp.stanford.edu/software/stanford-postagger-2013-06-20.zip
  87. https://nlp.stanford.edu/software/stanford-postagger-full-2013-06-20.zip
  88. https://nlp.stanford.edu/software/stanford-postagger-2013-04-04.zip
  89. https://nlp.stanford.edu/software/stanford-postagger-full-2013-04-04.zip
  90. https://nlp.stanford.edu/software/stanford-postagger-2012-11-11.zip
  91. https://nlp.stanford.edu/software/stanford-postagger-full-2012-11-11.zip
  92. https://nlp.stanford.edu/software/stanford-postagger-2012-07-09.tgz
  93. https://nlp.stanford.edu/software/stanford-postagger-full-2012-07-09.tgz
  94. https://nlp.stanford.edu/software/stanford-postagger-2012-05-22.tgz
  95. https://nlp.stanford.edu/software/stanford-postagger-full-2012-05-22.tgz
  96. https://nlp.stanford.edu/software/stanford-postagger-2012-03-09.tgz
  97. https://nlp.stanford.edu/software/stanford-postagger-full-2012-03-09.tgz
  98. https://nlp.stanford.edu/software/stanford-postagger-2012-01-06.tgz
  99. https://nlp.stanford.edu/software/stanford-postagger-full-2012-01-06.tgz
 100. https://nlp.stanford.edu/software/stanford-postagger-2011-09-14.tgz
 101. https://nlp.stanford.edu/software/stanford-postagger-full-2011-09-14.tgz
 102. https://nlp.stanford.edu/software/stanford-postagger-2011-06-19.tgz
 103. https://nlp.stanford.edu/software/stanford-postagger-full-2011-06-19.tgz
 104. https://nlp.stanford.edu/software/stanford-postagger-2011-05-15.tgz
 105. https://nlp.stanford.edu/software/stanford-postagger-full-2011-05-15.tgz
 106. https://nlp.stanford.edu/software/stanford-postagger-2011-04-20.tgz
 107. https://nlp.stanford.edu/software/stanford-postagger-full-2011-04-20.tgz
 108. https://nlp.stanford.edu/software/stanford-postagger-2010-05-26.tgz
 109. https://nlp.stanford.edu/software/stanford-postagger-full-2010-05-26.tgz
 110. https://nlp.stanford.edu/software/stanford-postagger-2009-12-24.tgz
 111. https://nlp.stanford.edu/software/stanford-postagger-full-2009-12-24.tgz
 112. https://nlp.stanford.edu/software/stanford-postagger-2008-09-28.tar.gz
 113. https://nlp.stanford.edu/software/stanford-postagger-full-2008-09-28.tar.gz
 114. https://nlp.stanford.edu/software/stanford-postagger-2008-06-06.tar.gz
 115. https://nlp.stanford.edu/software/stanford-postagger-full-2008-06-06.tar.gz
 116. https://nlp.stanford.edu/software/stanford-postagger-full-2008-07-07.tar.gz
 117. https://nlp.stanford.edu/software/stanford-postagger-2008-05-19.tar.gz
 118. https://nlp.stanford.edu/software/stanford-postagger-full-2008-05-19.tar.gz
 119. https://nlp.stanford.edu/software/postagger-2006-01-20.tar.gz
 120. http://forum.stanford.edu/visitors/directions/gates.php
 121. http://ai.stanford.edu/
 122. http://infolab.stanford.edu/
 123. https://www-csli.stanford.edu/
 124. http://stackoverflow.com/tags/stanford-nlp
 125. https://github.com/stanfordnlp/corenlp
 126. https://twitter.com/stanfordnlp
 127. https://nlp.stanford.edu/local/nlp_lunch.shtml
 128. http://nlp.stanford.edu/read/
 129. http://nlp.stanford.edu/seminar/
 130. https://nlp.stanford.edu/local/calendar.shtml
 131. https://nlp.stanford.edu/javanlp/
 132. https://nlp.stanford.edu/nlp/javadoc/javanlp/
 133. https://nlp.stanford.edu/local/machines.shtml
 134. http://ai.stanford.edu/portfolio-view/distinguished-speaker-series
 135. https://nlp.stanford.edu/local/qa/

   hidden links:
 137. https://nlp.stanford.edu/software/tagger.shtml
