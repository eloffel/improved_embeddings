tweet nlp

   [1][arklogo.png] [cmulogo.png]

   we provide a tokenizer, a part-of-speech tagger, hierarchical word
   clusters, and a dependency parser for tweets, along with annotated
   corpora and web-based annotation tools.

   contributors: [2]archna bhatia, [3]dipanjan das, [4]chris dyer,
   [5]jacob eisenstein, [6]jeffrey flanigan, [7]kevin gimpel, [8]michael
   heilman, [9]lingpeng kong, [10]daniel mills, [11]brendan o'connor,
   olutobi owoputi, [12]nathan schneider, [13]noah smith, [14]swabha
   swayamdipta and [15]dani yogatama.

                                  quick links

     * [16]part-of-speech tagger and pos annotated data - also
       [17]twokenizer: tokenizer software (part of tagger package) and
       [18]tagging models -- [19]download link
     * [20]tweeboparser and tweebank: dependency parser software and
       dependency annotated data -- [21]download link
     * [22]documentation, annotation guidelines, and papers describing
       this work
     * [23]hierarchical twitter word clusters

part-of-speech tagging

   we provide a fast and robust java-based tokenizer and part-of-speech
   tagger for tweets, its training data of manually labeled pos annotated
   tweets, a web-based annotation tool, and hierarchical word clusters
   from unlabeled tweets.

   these were created by olutobi owoputi, [24]brendan o'connor, [25]kevin
   gimpel, [26]nathan schneider, [27]chris dyer, [28]dipanjan das,
   [29]daniel mills, [30]jacob eisenstein, [31]michael heilman, [32]dani
   yogatama, [33]jeffrey flanigan, and [34]noah smith.

what the tagger does

./runtagger.sh --output-format conll examples/casual.txt

   these are real tweets.

ikr smh he asked fir yo last name so he can add u on fb lololol

word    tag     confidence
ikr     !       0.8143
smh     g       0.9406
he      o       0.9963
asked   v       0.9979
fir     p       0.5545
yo      d       0.6272
last    a       0.9871
name    n       0.9998
so      p       0.9838
he      o       0.9981
can     v       0.9997
add     v       0.9997
u       o       0.9978
on      p       0.9426
fb      ^       0.9453
lololol !       0.9664

     * "ikr" means "i know, right?", tagged as an interjection.
     * "so" is being used as a subordinating conjunction, which our coarse
       tagset denotes p.
     * "fb" means "facebook", a very common proper noun (^).
     * "yo" is being used as equivalent to "your"; our coarse tagset has
       posessive pronouns as d.
     * "fir" is a misspelling or spelling variant of the preposition for.
     * perhaps the only debatable errors in this example are for ikr and
       smh ("shake my head"): should they be g for miscellaneous acronym,
       or ! for interjection?

:o :/ :'( >:o (: :) >.< xd -__- o.o ;d :-) @_@ :p 8d :1 >:( :d =| ") :> ....

word    tag     confidence
:o      e       0.9387
:/      e       0.9983
:'(     e       0.9975
>:o     e       0.9964
(:      e       0.9994
:)      e       0.9997
>.<     e       0.9952
xd      e       0.9938
-__-    e       0.9956
o.o     e       0.9899
;d      e       0.9995
:-)     e       0.9992
@_@     e       0.9964
:p      e       0.9996
8d      e       0.9961
:       e       0.6925
1       $       0.9194
>:(     e       0.9715
:d      e       0.9996
=|      e       0.9963
"       ,       0.6125
)       ,       0.9078
:       ,       0.7460
>       g       0.7490
...     ,       0.5223
.       ,       0.9946

   challenge case for emoticon segmentation/recognition: 20/26 precision,
   18/21 recall.

tweeboparser and tweebank

   we provide a dependency parser for english tweets, tweeboparser . the
   parser is trained on a subset of a new labeled corpus for 929 tweets
   (12,318 tokens) drawn from the pos-tagged tweet corpus of [35]owoputi
   et al. (2013) , tweebank .

   these were created by [36]lingpeng kong, [37]nathan schneider,
   [38]swabha swayamdipta, [39]archna bhatia, [40]chris dyer, and [41]noah
   a. smith.

   thanks to tweebank annotators: [42]waleed ammar, [43]jason baldridge,
   [44]david bamman, [45]dallas card, [46]shay cohen, [47]jesse dodge,
   [48]jeffrey flanigan, [49]dan garrette, [50]lori levin, [51]wang ling,
   bill mcdowell, [52]michael mordowanec, [53]brendan o   connor, [54]rohan
   ramanath, [55]yanchuan sim, liang sun, [56]sam thomson, and [57]dani
   yogatama.

what tweeboparser does

   given a tweet, tweeboparser predicts its syntactic structure,
   represented by unlabeled dependencies. since a tweet often contains
   more than one utterance, the output of tweeboparser will often be a
   multi-rooted graph over the tweet. also, many elements in tweets have
   no syntactic function. these include, in many cases, hashtags, urls,
   and emoticons. tweeboparser tries to exclude these tokens from the
   parse tree (grayed out in the example below).

   please refer to the [58]paper for more information.

   an example of a dependency parse of a tweet is:

 [deptree.jpg]

   corresponding [59]conll format representation of the dependency tree
   above:
1       omg     _       !       !       _       0       _
2       i       _       o       o       _       6       _
3                 _       v       v       _       6       conj
4       the     _       d       d       _       5       _
5       biebs   _       n       n       _       3       _
6       &       _       &       &       _       0       _
7       want    _       v       v       _       6       conj
8       to      _       p       p       _       7       _
9       have    _       v       v       _       8       _
10      his     _       d       d       _       11      _
11      babies  _       n       n       _       9       _
12      !       _       ,       ,       _       -1      _
13         >      _       g       g       _       -1       _
14      la      _       ^       ^       _       15      mwe
15      times   _       ^       ^       _       0       _
16      :       _       ,       ,       _       -1      _
17      teen    _       ^       ^       _       19      _
18      pop     _       ^       ^       _       19      _
19      star    _       ^       ^       _       20      _
20      heartthrob      _       ^       ^       _       21      _
21      is      _       v       v       _       0       _
22      all     _       x       x       _       24      mwe
23      the     _       d       d       _       24      mwe
24      rage    _       n       n       _       21      _
25      on      _       p       p       _       21      _
26      social  _       ^       ^       _       27      _
27      media   _       ^       ^       _       25      _
28                _       ,       ,       _       -1      _
29      #belieber       _       #       #       _       -1      _

   (head = -1 means the word is not included in the tree)

                                    download

     * for the part-of-speech tagger:
          + releases of the tagger (and tokenizer), data, and annotation
            tool are available [60]here on google code.
          + the tagger source code (plus annotated data and web tool) is
            [61]on github.
          + tagger models
          + to use an alternate model, download the one you want and
            specify the flag: --model modelfilename
               o [62]model.20120919 (2mb) -- the twitter pos model with
                 our coarse 25-tag tagset. this is included with the
                 tagger release and used by default.
               o [63]model.ritter_ptb_alldata_fixed.20130723 (1.5 mb) -- a
                 model that gives a id32-style tagset for
                 twitter. trained from a fixed version of ritter et al.
                 emnlp 2011's annotated data. if you want penn
                 treebank-style pos tags for twitter, use this model. we
                 documented issues and changes [64]here. also, here is an
                 [65]accuracy evaluation to compare with other work.
               o [66]model.irc.20121211 (3mb) -- a model trained on the
                 [67]npschat irc corpus, with a ptb-style tagset.
               o [68]a model trained on the english web treebank
          + the ritter_ptb and irc models are trained on datasets that
            were annotated separately from the work described here. our
            tagging guidelines and various distinctions they describe
            (like constituent versus tag uses of hashtags) do not apply if
            you are using the tagger with these models.
     * the tokenizer code is self-contained in [69]twokenize.java; or use
       twokenize.sh in the tagger download.
       a python port of the tokenizer is available from myle ott:
       [70]ark-twokenize-py. (there is also an older python version from
       2010, also called "twokenize," [71]here.)

     for the dependency parser:
     * releases of the parser (including the pos tagger and the token
       selection tool), pre-trained models, and annotated data (tweebank)
       are available [72]here on github.

   to receive announcements about updates, [73]join the ark-tools mailing
   list.

                                further reading

   please cite the appropriate paper when using these resources in
   research.
     * for the part-of-speech tagger:
          + the newest paper (version 0.3), is:
            [74]improved part-of-speech tagging for online conversational
            text with word clusters
            olutobi owoputi, [75]brendan o   connor, [76]chris dyer,
            [77]kevin gimpel, [78]nathan schneider and [79]noah a. smith.
            in proceedings of naacl 2013.
               o tech report version, with a few more and a few less
                 details: [80]owoputi et al. (2012). technical report,
                 machine learning department. cmu-ml-12-107. september
                 2012.
          + the original paper:
            [81]part-of-speech tagging for twitter: annotation, features,
            and experiments
            [82]kevin gimpel, [83]nathan schneider, [84]brendan o'connor,
            [85]dipanjan das, [86]daniel mills, [87]jacob eisenstein,
            [88]michael heilman, [89]dani yogatama, jeffrey flanigan, and
            [90]noah a. smith.
            in proceedings of acl 2011.
          + see also:
            the [91]annotation guidelines, extensively revamped for 0.3.
     * for the dependency parser:
          + [92]a dependency parser for tweets
            [93]lingpeng kong, [94]nathan schneider, [95]swabha
            swayamdipta, [96]archna bhatia, [97]chris dyer, and [98]noah
            a. smith. in proceedings of emnlp 2014.
    twitter word clusters
       [99]here is an html viewer of the word clusters. produced by an
       unsupervised id48: [100]percy liang's brown id91
       implementation on [101]lui and baldwin's langid.py-identified
       english tweets; see [102]owoputi et al. (2012) for details.
       we recommend the largest one:

   filename #wordtypes #tweets #tokens #clusters min
   count tweet source
   [103]50mpaths2 216,856 56,345,753 847,372,038 1000 40 100k tweet/day
   sample, 9/10/08 to 8/14/12
       also, [104]here are the smaller ones used in the experiments.
       links to software provided by others

     * python wrappers: (1) [105]by github.com/ianozsvald, (2) [106]by
       github.com/kevinzzz007.
     * pl/java wrapper: [107]gp-ark-tweet-nlp is: "a pl/java wrapper for
       ark-tweet-nlp, that enables you to perform part-of-speech tagging
       on tweets, using sql. if your environment is an mpp system like
       pivotal's greenplum database you can piggyback on the mpp
       architecture and achieve implicit parallelism in your
       part-of-speech tagging tasks."
     * node.js wrapper [108]by github.com/mbejda ([109]npmjs.com)

  acknowledgments

   this research was supported in part by: the nsf through career grant
   iis-1054319, grant iis-1352440, the u.s. army research laboratory and
   the u.s. army research office under contract/grant number
   w911nf-10-1-0533, sandia national laboratories (fellowship to k.
   gimpel), and the u.s. department of education under ies grant
   r305b040063 (fellowship to m. heilman), an reu supplement to nsf grant
   iis-0915187 and google's support of the worldly knowledge project at
   cmu.

references

   1. http://www.ark.cs.cmu.edu/
   2. http://www.cs.cmu.edu/~archna/
   3. http://www.cs.cmu.edu/~dipanjan
   4. http://www.cs.cmu.edu/~redpony
   5. http://people.csail.mit.edu/jacobe
   6. http://www.cs.cmu.edu/~jmflanig/
   7. http://www.cs.cmu.edu/~kgimpel
   8. http://www.cs.cmu.edu/~mheilman
   9. http://www.cs.cmu.edu/~lingpenk/
  10. http://www.cs.cmu.edu/~dpmills
  11. http://brenocon.com/
  12. http://www.cs.cmu.edu/~nschneid
  13. http://www.cs.cmu.edu/~nasmith
  14. http://www.cs.cmu.edu/~sswayamd/
  15. http://www.cs.cmu.edu/~dyogatam
  16. http://www.cs.cmu.edu/~ark/tweetnlp/#pos
  17. http://www.cs.cmu.edu/~ark/tweetnlp/#pos
  18. http://www.cs.cmu.edu/~ark/tweetnlp/#tagging_model
  19. http://www.cs.cmu.edu/~ark/tweetnlp/#pos_down
  20. http://www.cs.cmu.edu/~ark/tweetnlp/#tweeboparser_tweebank
  21. http://www.cs.cmu.edu/~ark/tweetnlp/#parser_down
  22. http://www.cs.cmu.edu/~ark/tweetnlp/#further_reading
  23. http://www.cs.cmu.edu/~ark/tweetnlp/#resources
  24. http://brenocon.com/
  25. http://www.cs.cmu.edu/~kgimpel
  26. http://www.cs.cmu.edu/~nschneid
  27. http://www.cs.cmu.edu/~redpony
  28. http://www.cs.cmu.edu/~dipanjan
  29. http://www.cs.cmu.edu/~dpmills
  30. http://people.csail.mit.edu/jacobe
  31. http://www.cs.cmu.edu/~mheilman
  32. http://www.cs.cmu.edu/~dyogatam
  33. http://www.cs.cmu.edu/~jmflanig/
  34. http://www.cs.cmu.edu/~nasmith
  35. http://www.cs.cmu.edu/~ark/tweetnlp/#owputi2003
  36. http://www.cs.cmu.edu/~lingpenk
  37. http://www.cs.cmu.edu/~nschneid
  38. http://www.cs.cmu.edu/~sswayamd/
  39. http://www.cs.cmu.edu/~archna/
  40. http://www.cs.cmu.edu/~cdyer
  41. http://www.cs.cmu.edu/~nasmith
  42. http://www.cs.cmu.edu/~wammar
  43. http://www.jasonbaldridge.com/
  44. http://www.cs.cmu.edu/~dbamman
  45. http://www.cs.cmu.edu/~dcard
  46. http://homepages.inf.ed.ac.uk/scohen
  47. http://http://www-cgi.cs.cmu.edu/afs/cs/web/people/jessed/index.html
  48. http://www.cs.cmu.edu/~jmflanig
  49. http://www.cs.utexas.edu/~dhg
  50. http://www.cs.cmu.edu/~lsl
  51. http://www.cs.cmu.edu/~lingwang
  52. http://michael.mordowanec.com/
  53. http://brenocon.com/
  54. http://rohanr.com/
  55. http://www.yanchuan.sg/
  56. http://samthomson.com/
  57. http://www.cs.cmu.edu/~ark/tweetnlp/www.cs.cmu.edu/~dyogatam
  58. http://www.cs.cmu.edu/~ark/tweetnlp/#parser_paper
  59. http://ilk.uvt.nl/conll/#dataformat
  60. http://code.google.com/p/ark-tweet-nlp/downloads/list
  61. https://github.com/brendano/ark-tweet-nlp/
  62. http://www.cs.cmu.edu/~ark/tweetnlp/model.20120919
  63. http://www.cs.cmu.edu/~ark/tweetnlp/model.ritter_ptb_alldata_fixed.20130723
  64. https://github.com/brendano/ark-tweet-nlp/blob/master/data/ritter/issueswithritter2011data.txt
  65. https://github.com/brendano/ark-tweet-nlp/blob/master/data/ritter/accuracyevaluation.txt
  66. http://www.cs.cmu.edu/~ark/tweetnlp/model.irc.20121211
  67. http://faculty.nps.edu/cmartell/npschat.htm
  68. http://www.cs.cmu.edu/~ark/lexsem/#syntax
  69. https://github.com/brendano/ark-tweet-nlp/blob/master/src/cmu/arktweetnlp/twokenize.java
  70. https://github.com/myleott/ark-twokenize-py
  71. http://github.com/brendano/tweetmotif
  72. https://github.com/ikekonglp/tweeboparser
  73. http://mailman.srv.cs.cmu.edu/mailman/listinfo/ark-tools
  74. http://www.ark.cs.cmu.edu/tweetnlp/owoputi+etal.naacl13.pdf
  75. http://brenocon.com/
  76. http://www.cs.cmu.edu/~cdyer/
  77. http://www.cs.cmu.edu/~kgimpel/
  78. http://www.cs.cmu.edu/~nschneid/
  79. http://www.cs.cmu.edu/~nasmith/
  80. http://www.ark.cs.cmu.edu/tweetnlp/owoputi+etal.tr12.pdf
  81. http://www.cs.cmu.edu/~ark/tweetnlp/gimpel+etal.acl11.pdf
  82. http://www.cs.cmu.edu/~kgimpel
  83. http://www.cs.cmu.edu/~nschneid
  84. http://anyall.org/
  85. http://www.cs.cmu.edu/~dipanjan
  86. http://www.cs.cmu.edu/~dpmills
  87. http://people.csail.mit.edu/jacobe
  88. http://www.cs.cmu.edu/~mheilman
  89. http://www.cs.cmu.edu/~dyogatam
  90. http://www.cs.cmu.edu/~nasmith
  91. http://www.cs.cmu.edu/~ark/tweetnlp/annot_guidelines.pdf
  92. http://www.cs.cmu.edu/~nasmith/papers/kong+schneider+swayamdipta+bhatia+dyer+smith.emnlp14.pdf
  93. http://www.cs.cmu.edu/~lingpenk
  94. http://www.cs.cmu.edu/~nschneid
  95. http://www.cs.cmu.edu/~sswayamd/
  96. http://www.cs.cmu.edu/~archna/
  97. http://www.cs.cmu.edu/~cdyer
  98. http://www.cs.cmu.edu/~nasmith
  99. http://www.cs.cmu.edu/~ark/tweetnlp/cluster_viewer.html
 100. https://github.com/percyliang/brown-cluster
 101. https://github.com/saffsd/langid.py
 102. http://www.ark.cs.cmu.edu/tweetnlp/owoputi+etal.tr12.pdf
 103. http://www.cs.cmu.edu/~ark/tweetnlp/clusters/50mpaths2
 104. http://www.cs.cmu.edu/~ark/tweetnlp/smaller_clusters.html
 105. https://github.com/ianozsvald/ark-tweet-nlp-python/blob/master/cmutweettagger.py
 106. https://github.com/kevinzzz007/ark-tweet-nlp/blob/windows/cmutweettaggerwindows.py
 107. https://github.com/vatsan/gp-ark-tweet-nlp
 108. https://github.com/mbejda/node-ark-tweetnlp
 109. https://www.npmjs.com/package/tweetnlp
