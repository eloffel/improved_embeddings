   #[1]github [2]recent commits to berkeleyparser:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]8
     * [35]star [36]135
     * [37]fork [38]44

[39]slavpetrov/[40]berkeleyparser

   [41]code [42]issues 7 [43]pull requests 1 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   automatically exported from code.google.com/p/berkeleyparser
     * [47]31 commits
     * [48]2 branches
     * [49]1 release
     * [50]fetching contributors
     * [51]gpl-2.0

    1. [52]java 100.0%

   (button) java
   branch: master (button) new pull request
   [53]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/s
   [54]download zip

downloading...

   want to be notified of new releases in slavpetrov/berkeleyparser?
   [55]sign in [56]sign up

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [59]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [60]download the github extension for visual studio
   and try again.

   (button) go back
   [61]@slavpetrov
   [62]slavpetrov [63]create license
   latest commit [64]0df1ae7 jul 25, 2017
   [65]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [66]src
   [67]berkeleyparser-1.5.jar
   [68]berkeleyparser-1.6.jar [69]added downloads from google code
   (grammar files and jars for various     jul 7, 2015
   [70]berkeleyparser-1.7.jar [71]added downloads from google code
   (grammar files and jars for various     jul 7, 2015
   [72]license
   [73]readme
   [74]arb_sm5.gr [75]added downloads from google code (grammar files and
   jars for various     jul 7, 2015
   [76]bul_sm5.gr
   [77]chn_sm5.gr [78]added downloads from google code (grammar files and
   jars for various     jul 7, 2015
   [79]eng_sm6.gr
   [80]fra_sm5.gr
   [81]ger_sm5.gr

readme

"the berkeley parser"
release 1.1
migrated from google code to github july 2015

this package contains the berkeley parser as described in

"learning accurate, compact, and interpretable tree annotation"
slav petrov, leon barrett, romain thibaux and dan klein
in coling-acl 2006

and

"improved id136 for unlexicalized parsing"
slav petrov and dan klein
in hlt-naacl 2007

if you use this code in your research and would like to acknowledge it, please r
efer to one of those publications. note that the jar-archive also contains all s
ource files. for questions please contact slav petrov (petrov@cs.berkeley.edu).


* parsing
the main class of the jar-archive is the parser. by default, it will read in ptb
 tokenized sentences from stdin (one per line) and write parse trees to stdout.
it can be evoked with:

java -jar berkeleyparser.jar -gr <grammar>

the parser can produce k-best lists and parse in parallel using multiple threads
. several additional options are also available (return binarized and/or annotat
ed trees, produce an image of the parse tree, tokenize the input, run in fast/ac
curate mode, print out tree likelihoods, etc.). starting the parser without supp
lying a grammar file will print a list of all options.

* additional tools
a tool for annotating parse trees with their most likely viterbi derivation over
 refined categories and scoring the subtrees can be started with

java -cp berkeleyparser.jar edu.berkeley.nlp.pid18la/treelabeler -gr <grammar>

this tool reads in parse trees from stdin, annotates them as specified and print
s them out to stdout. you can use

java -cp berkeleyparser.jar edu.berkeley.nlp.pid18la.treescorer -gr <grammar>

to compute the (log-)likelihood of a parse tree.


* grammars
included are grammars for english, german and chinese. for parsing english text
which is not from the wall street journal, we recommend that you use the english
 grammar after 5 split&merge iterations as experiments suggest that the 6 split&
merge iterations grammars are overfitting the wall street journal. because of th
e coarse-to-fine method used by the parser, there is essentially no difference i
n parsing time between the different grammars.


* learning new grammars
you will need a treebank in order to learn new grammars. the package contains co
de for reading in some of the standard treebanks. to learn a grammar from the wa
ll street journal section of the id32, you can execute

java -cp berkeleyparser.jar edu.berkeley.nlp.pid18la.grammartrainer -path <wsj lo
cation> -out <grammar-file>

to learn a grammar from trees that are contained in a single file use the -treeb
ank option, e.g.:

java -cp berkeleyparser.jar edu.berkeley.nlp.pid18la.grammartrainer -path <wsj lo
cation> -out <grammar-file> -treebank singlefile

this will read in the wsj training set and do 6 iterations of split, merge, smoo
th. an intermediate grammar file will be written to disk once in a while and you
 can expect the final grammar to be written to <grammar-file> after 15-20 hours.
 the grammartrainer accepts a variety of options which have been set to reasonab
le default values. most of the options should be self-explaining and you are enc
ouraged to experiment with them. note that since em is a local method each run w
ill produce slightly different results. furthermore, the default settings prune
away rules with id203 below a certain threshold, which greatly speeds up t
he training, but increases the variance. to train grammars on other training set
s (e.g. for other languages), consult edu.berkeley.nlp.pid18la.corpus.java and su
pply the correct language option to the trainer.
to the test the performance of a grammar you can use

java -cp berkeleyparser.jar edu.berkeley.nlp.pid18la.grammartester -path <wsj loc
ation> -in <grammar-file>


* writing grammars to text files
the parser reads and writes grammar files as serialized java classes. to view th
e grammars, you can export them to text format with:

java -cp berkeleyparser.jar edu/berkeley/nlp/pid18la/writegrammartotextfile <gram
mar-file> <outfile>

this will create three text files. outname.grammar and outname.lexicon contain t
he respective rule scores and outname.words should be used with the included per
l script to map words to their signatures.

* unknown words
the lexicon contains arrays with scores for each (tag,signature) pair. the array
 entries correspond to the scores for the respective tag substates. the signatur
es of known words are the words themselves. unknown words, in contrast, are clas
sified into a set of unknown word categories. the perl script "getsignature" tak
es as first argument a file containing the known words (presumably produced by w
ritegrammartofile). it then reads words from stdin and returns the word signatur
e to stdout. the signatures should be used to look up the tagging probabilities
of words in the lexicon file.






     *    2019 github, inc.
     * [82]terms
     * [83]privacy
     * [84]security
     * [85]status
     * [86]help

     * [87]contact github
     * [88]pricing
     * [89]api
     * [90]training
     * [91]blog
     * [92]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [93]reload to refresh your
   session. you signed out in another tab or window. [94]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/slavpetrov/berkeleyparser/commits/master.atom
   3. https://github.com/slavpetrov/berkeleyparser#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/slavpetrov/berkeleyparser
  32. https://github.com/join
  33. https://github.com/login?return_to=/slavpetrov/berkeleyparser
  34. https://github.com/slavpetrov/berkeleyparser/watchers
  35. https://github.com/login?return_to=/slavpetrov/berkeleyparser
  36. https://github.com/slavpetrov/berkeleyparser/stargazers
  37. https://github.com/login?return_to=/slavpetrov/berkeleyparser
  38. https://github.com/slavpetrov/berkeleyparser/network/members
  39. https://github.com/slavpetrov
  40. https://github.com/slavpetrov/berkeleyparser
  41. https://github.com/slavpetrov/berkeleyparser
  42. https://github.com/slavpetrov/berkeleyparser/issues
  43. https://github.com/slavpetrov/berkeleyparser/pulls
  44. https://github.com/slavpetrov/berkeleyparser/projects
  45. https://github.com/slavpetrov/berkeleyparser/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/slavpetrov/berkeleyparser/commits/master
  48. https://github.com/slavpetrov/berkeleyparser/branches
  49. https://github.com/slavpetrov/berkeleyparser/releases
  50. https://github.com/slavpetrov/berkeleyparser/graphs/contributors
  51. https://github.com/slavpetrov/berkeleyparser/blob/master/license
  52. https://github.com/slavpetrov/berkeleyparser/search?l=java
  53. https://github.com/slavpetrov/berkeleyparser/find/master
  54. https://github.com/slavpetrov/berkeleyparser/archive/master.zip
  55. https://github.com/login?return_to=https://github.com/slavpetrov/berkeleyparser
  56. https://github.com/join?return_to=/slavpetrov/berkeleyparser
  57. https://desktop.github.com/
  58. https://desktop.github.com/
  59. https://developer.apple.com/xcode/
  60. https://visualstudio.github.com/
  61. https://github.com/slavpetrov
  62. https://github.com/slavpetrov/berkeleyparser/commits?author=slavpetrov
  63. https://github.com/slavpetrov/berkeleyparser/commit/0df1ae756616f1f05498d9c5747f65505eaf1f93
  64. https://github.com/slavpetrov/berkeleyparser/commit/0df1ae756616f1f05498d9c5747f65505eaf1f93
  65. https://github.com/slavpetrov/berkeleyparser/tree/0df1ae756616f1f05498d9c5747f65505eaf1f93
  66. https://github.com/slavpetrov/berkeleyparser/tree/master/src
  67. https://github.com/slavpetrov/berkeleyparser/blob/master/berkeleyparser-1.5.jar
  68. https://github.com/slavpetrov/berkeleyparser/blob/master/berkeleyparser-1.6.jar
  69. https://github.com/slavpetrov/berkeleyparser/commit/033a2fd254046bb5ddf86c1be45cddbf03a3f569
  70. https://github.com/slavpetrov/berkeleyparser/blob/master/berkeleyparser-1.7.jar
  71. https://github.com/slavpetrov/berkeleyparser/commit/033a2fd254046bb5ddf86c1be45cddbf03a3f569
  72. https://github.com/slavpetrov/berkeleyparser/blob/master/license
  73. https://github.com/slavpetrov/berkeleyparser/blob/master/readme
  74. https://github.com/slavpetrov/berkeleyparser/blob/master/arb_sm5.gr
  75. https://github.com/slavpetrov/berkeleyparser/commit/033a2fd254046bb5ddf86c1be45cddbf03a3f569
  76. https://github.com/slavpetrov/berkeleyparser/blob/master/bul_sm5.gr
  77. https://github.com/slavpetrov/berkeleyparser/blob/master/chn_sm5.gr
  78. https://github.com/slavpetrov/berkeleyparser/commit/033a2fd254046bb5ddf86c1be45cddbf03a3f569
  79. https://github.com/slavpetrov/berkeleyparser/blob/master/eng_sm6.gr
  80. https://github.com/slavpetrov/berkeleyparser/blob/master/fra_sm5.gr
  81. https://github.com/slavpetrov/berkeleyparser/blob/master/ger_sm5.gr
  82. https://github.com/site/terms
  83. https://github.com/site/privacy
  84. https://github.com/security
  85. https://githubstatus.com/
  86. https://help.github.com/
  87. https://github.com/contact
  88. https://github.com/pricing
  89. https://developer.github.com/
  90. https://training.github.com/
  91. https://github.blog/
  92. https://github.com/about
  93. https://github.com/slavpetrov/berkeleyparser
  94. https://github.com/slavpetrov/berkeleyparser

   hidden links:
  96. https://github.com/
  97. https://github.com/slavpetrov/berkeleyparser
  98. https://github.com/slavpetrov/berkeleyparser
  99. https://github.com/slavpetrov/berkeleyparser
 100. https://help.github.com/articles/which-remote-url-should-i-use
 101. https://github.com/
