                    sempre: id29 with execution

   sempre is a toolkit for training semantic parsers, which map natural
   language utterances to denotations (answers) via intermediate logical
   forms. here's an example for querying databases:
     * utterance: which college did obama go to?
     * logical form: (and (type university) (education barackobama))
     * denotation: occidental college, columbia university

   here's another example for programming via natural language:
     * utterance: compute three plus four.
     * logical form: (call + 3 4)
     * denotation: 7

   sempre has the following functionality:
     * it supports many types of logical forms (e.g., [1]id198,
       [2]lambda dcs, java expressions, etc.), so you can choose whichever
       one suits your task.
     * it is agnostic to the construction procedure for building logical
       forms, which include combinatory categorical grammar (id35) or
       something more simplistic. you just specify the combination rules
       in a domain specific language. here's a [3]toy subset of id35.
     * it supports various online learning algorithms that
       discriminatively train a classifier to maximize denotation
       accuracy.
     * it comes with a full copy of freebase (41m entities, 19k
       properties, 596m assertions), which has been indexed by [4]virtuoso
       sparql engine. this allows you to immediately start executing
       logical forms on freebase.

   code

   you can download all the code and documentation for sempre from
   [5]github. to learn more about the system, walk through our
   [6]tutorial.

   data

   in our emnlp 2013 paper, we created a new dataset, webquestions, which
   is released under the [7]cc by 4.0 license. here are the [8]train and
   [9]test splits. you can also see the leader board, upload your
   predictions, and evaluate your system in this [10]codalab worksheet.

   in addition, we preprocessed the free917 dataset (cai & yates, 2013) to
   work with our system. here are the [11]train and [12]test splits.

   both datasets are provided in json format. webquestions contains 3,778
   training examples and 2,032 test examples. free917 contains 641
   training example and 276 test examples.

   on webquestions, each example contains three fields:
     * utterance: natural language utterance.
     * targetvalue: the answer provided by amt workers, given as a list of
       descriptions.
     * url: frebase page where amt workers found the answer.

   on free917, each example contains two fields:
     * utterance: natural language utterance.
     * targetformula: logical form for the utterance (see paper and
       tutorial).

   papers

   sempre was used in the papers:

     jonathan berant, andrew chou, roy frostig, percy liang. [13]semantic
     parsing on freebase from question-answer pairs. empirical methods in
     natural language processing (emnlp), 2013.

     jonathan berant, percy liang. [14]id29 via id141.
     association for computational linguistics (acl), 2014.

     yushi wang, jonathan berant, percy liang. [15]building a semantic
     parser overnight. association for computational linguistics (acl),
     2015.

     panupong pasupat, percy liang. [16]compositional id29 on
     semi-structured tables. association for computational linguistics
     (acl), 2015. [[17]project page]

     jonathan berant, percy liang. [18]imitation learning of agenda-based
     semantic parsers. transactions of acl (tacl), 2015.

     panupong pasupat, percy liang. [19]inferring logical forms from
     denotations. association for computational linguistics (acl), 2016.

     reginald long, panupong pasupat, percy liang. [20]simpler
     context-dependent logical forms via model projections. association
     for computational linguistics (acl), 2016.

     sida wang, percy liang, christopher manning. [21]learning language
     games through interaction. association for computational linguistics
     (acl), 2016.

     yuchen zhang, panupong pasupat, percy liang. [22]macro grammars and
     holistic triggering for efficient id29. empirical
     methods on natural language processing (emnlp), 2017.

   sempre supports lambda dcs logical forms, which is the default one used
   for querying freebase:

     percy liang. [23]lambda dependency-based id152.
     arxiv report.

references

   1. http://en.wikipedia.org/wiki/lambda_calculus
   2. http://arxiv.org/pdf/1309.4408v2.pdf
   3. https://github.com/percyliang/sempre/blob/master/data/unittest-learn-id35.grammar
   4. http://virtuoso.openlinksw.com/dataspace/doc/dav/wiki/main/
   5. https://github.com/percyliang/sempre
   6. https://github.com/percyliang/sempre/blob/master/tutorial.md
   7. http://creativecommons.org/licenses/by/4.0/
   8. http://nlp.stanford.edu/static/software/sempre/release-emnlp2013/lib/data/webquestions/dataset_11/webquestions.examples.train.json.bz2
   9. http://nlp.stanford.edu/static/software/sempre/release-emnlp2013/lib/data/webquestions/dataset_11/webquestions.examples.test.json.bz2
  10. https://www.codalab.org/worksheets/0xba659fe363cb46e7a505c5b6a774dc8a/
  11. http://nlp.stanford.edu/static/software/sempre/release-emnlp2013/data/free917.train.examples.canonicalized.json.bz2
  12. http://nlp.stanford.edu/static/software/sempre/release-emnlp2013/data/free917.test.examples.canonicalized.json.bz2
  13. http://cs.stanford.edu/~pliang/papers/freebase-emnlp2013.pdf
  14. http://nlp.stanford.edu/pubs/berant14id141.pdf
  15. http://nlp.stanford.edu/pubs/wang-berant-liang-acl2015.pdf
  16. http://nlp.stanford.edu/software/sempre/wikitable/
  17. https://nlp.stanford.edu/software/sempre/wikitable
  18. http://nlp.stanford.edu/pubs/berant-liang-tacl2015.pdf
  19. http://nlp.stanford.edu/pubs/pasupat2016inferring.pdf
  20. http://nlp.stanford.edu/pubs/long2016simpler.pdf
  21. http://nlp.stanford.edu/pubs/wang2016games.pdf
  22. https://arxiv.org/abs/1707.07806
  23. http://arxiv.org/pdf/1309.4408v2.pdf
