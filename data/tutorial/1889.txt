   #[1]github [2]recent commits to sempre:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]77
     * [35]star [36]654
     * [37]fork [38]270

[39]percyliang/[40]sempre

   [41]code [42]issues 64 [43]pull requests 2 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   semantic parser with execution
     * [47]437 commits
     * [48]6 branches
     * [49]6 releases
     * [50]fetching contributors
     * [51]view license

    1. [52]java 82.0%
    2. [53]python 9.5%
    3. [54]ruby 4.1%
    4. [55]javascript 1.9%
    5. [56]css 0.8%
    6. [57]jupyter notebook 0.7%
    7. other 1.0%

   (button) java python ruby javascript css jupyter notebook other
   branch: master (button) new pull request
   [58]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/p
   [59]download zip

downloading...

   want to be notified of new releases in percyliang/sempre?
   [60]sign in [61]sign up

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [64]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [65]download the github extension for visual studio
   and try again.

   (button) go back
   [66]@ppasupat
   [67]ppasupat [68]added how to generate .tagged files
   latest commit [69]1cec9ea aug 29, 2018
   [70]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [71]data [72]pre-release of sempre 2.0 dec 22, 2014
   [73]demo-www [74]pre-release of sempre 2.0 dec 22, 2014
   [75]freebase [76]feat(install): add unlisted dependency and change
   shebang of ruby script aug 6, 2017
   [77]interactive [78]feat(install): add unlisted dependency and change
   shebang of ruby script aug 6, 2017
   [79]overnight [80]documentation fixes may 21, 2016
   [81]scripts [82]feat(install): add unlisted dependency and change
   shebang of ruby script aug 6, 2017
   [83]src/edu/stanford/nlp/sempre [84]fixed the recursion bug apr 24,
   2018
   [85]tables [86]added how to generate .tagged files aug 29, 2018
   [87]unittest-files
   [88].gitignore
   [89]documentation.md [90]documentation fixes may 21, 2016
   [91]license.txt [92]change license jan 9, 2016
   [93]readme.md
   [94]tutorial.md
   [95]build.xml
   [96]pull-dependencies [97]correct cprune dependency in build.xml and
   nn_0 file resource download mar 15, 2018
   [98]run
   [99]testng.xml [100]exclude my tests in main mar 18, 2017

readme.md

sempre 2.4: id29 with execution

what is id29?

   a semantic parser maps natural language utterances into an intermediate
   logical form, which is "executed" to produce a denotation that is
   useful for some task.

   a simple arithmetic task:
     * utterance: what is three plus four?
     * logical form: (+ 3 4)
     * denotation: 7

   a id53 task:
     * utterance: where was obama born?
     * logical form: (place_of_birth barack_obama)
     * denotation: honolulu

   a virtual travel agent task:
     * utterance: show me flights to montreal leaving tomorrow.
     * logical form: (and (type flight) (destination montreal)
       (departure_date 2014.12.09))
     * denotation: (list ...)

   by parsing utterances into logical forms, we obtain a rich
   representation that enables much deeper, context-aware understanding
   beyond the words. with the rise of id139,
   semantic parsers are becoming increasingly more powerful and useful.

what is sempre?

   sempre is a toolkit that makes it easy to develop semantic parsers for
   new tasks. the main paradigm is to learn a feature-rich discriminative
   semantic parser from a set of utterance-denotation pairs. one can also
   quickly prototype rule-based systems, learn from other forms of
   supervision, and combine any of the above.

   if you use sempre in your work, please cite:
@inproceedings{berant2013freebase,
  author = {j. berant and a. chou and r. frostig and p. liang},
  booktitle = {empirical methods in natural language processing (emnlp)},
  title = {id29 on {f}reebase from question-answer pairs},
  year = {2013},
}

   sempre has been used in the following papers:
     * j. berant and a. chou and r. frostig and p. liang. [101]semantic
       parsing on freebase from question-answer pairs. emnlp, 2013. this
       paper introduced sempre 1.0, applied it to id53 on
       freebase, and created the webquestions dataset. the paper focuses
       on scaling up id29 via alignment and bridging, and does
       not talk about the sempre framework at all. to reproduce those
       results, check out sempre 1.0.
     * j. berant and p. liang. [102]id29 via id141.
       acl, 2014. this paper also used sempre 1.0. the id141 model
       is somewhat of a offshoot, and does not use many of the core
       learning and parsing utiltiies in sempre. to reproduce those
       results, check out sempre 1.0.

   please refer to the [103]project page for a more complete list.

where do i go next?

     * if you're new to id29, you can learn more from the
       [104]background reading section of the tutorial.
     * install sempre using the instructions under installation below.
     * walk through the [105]tutorial to get a hands-on introduction to
       id29 through sempre.
     * read the complete [106]documentation to learn about the different
       components in sempre.

installation

requirements

   you must have the following already installed on your system.
     * java 8 (not 7)
     * ant 1.8.2
     * ruby 1.8.7 or 1.9
     * wget
     * make (for compiling fig and virtuoso)
     * zip (for unzip downloaded dependencies)

   other dependencies will be downloaded as you need them. sempre has been
   tested on ubuntu linux 12.04 and macos x. your mileage will vary
   depending on how similar your system is.

easy setup

    1. clone the github repository:
 git clone https://github.com/percyliang/sempre

    2. download the minimal core dependencies (all dependencies will be
       placed in lib):
 ./pull-dependencies core

    3. compile the source code (this produces libsempre/sempre-core.jar):
 ant core

    4. run an interactive shell:
 ./run @mode=simple

       you should be able to type the following into the shell and get the
       answer (number 7):
 (execute (call + (number 3) (number 4)))

   to go further, check out the [107]tutorial and then the [108]full
   documentation.

virtuoso graph database

   if you will be using natural language to query databases (e.g.,
   freebase), then you will also need to setup your own virtuoso database
   (unless someone already has done this for you):

   for ubuntu, follow this:
sudo apt-get install -y automake gawk gperf libtool bison flex libssl-dev

# clone the repository
./pull-dependencies virtuoso

# make and install
cd virtuoso-opensource
./autogen.sh
./configure --prefix=$pwd/install
make
make install
cd ..

   on os/x you can install virtuoso using homebrew by following the
   instructions [109]here

   to have sempre interact with virtuoso, the required modules need to be
   compiled as follow:
./pull-dependencies core corenlp freebase
ant freebase

contribute

   to contribute code or resource to sempre:
     * create a fork of the repository. if you already have a fork, it is
       a good idea to sync with the upstream repository first.
     * push your changes to a new branch in your fork.
     * start a pull request: go to your branch on the github website, then
       click "new pull request". please specify the develop branch of the
       upstream repository.

changelog

   changes from sempre 1.0 to sempre 2.0:
     * updated tutorial and documentation.
     * refactored into a core part for building semantic parsers in
       general; interacting with freebase and stanford corenlp are just
       different modules.
     * removed fbalignment (emnlp 2013) and paraphrase (acl 2014)
       components to avoid confusion. if you want to reproduce those
       systems, use sempre 1.0.

   changes from sempre 2.0 to sempre 2.1:
     * added the tables package for the paper compositional semantic
       parsing on semi-structured tables (acl 2015).
     * add and overnight package for the paper building a semantic parser
       overnight (acl 2015).

   changes from sempre 2.1 to sempre 2.2:
     * added code for the paper inferring logical forms from denotations
       (acl 2016).

   changes from sempre 2.2 to sempre 2.3:
     * added the interactive package for the paper naturalizing a
       programming language through interaction (acl 2017).

   changes from sempre 2.3 to sempre 2.3.1:
     * modified the tables module to resemble sempre 2.1, effectively
       making it work again.

   changes from sempre 2.3.1 to sempre 2.4:
     * added the cprune package for the paper macro grammars and holistic
       triggering for efficient id29 (emnlp 2017).

     *    2019 github, inc.
     * [110]terms
     * [111]privacy
     * [112]security
     * [113]status
     * [114]help

     * [115]contact github
     * [116]pricing
     * [117]api
     * [118]training
     * [119]blog
     * [120]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [121]reload to refresh your
   session. you signed out in another tab or window. [122]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/percyliang/sempre/commits/master.atom
   3. https://github.com/percyliang/sempre#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/percyliang/sempre
  32. https://github.com/join
  33. https://github.com/login?return_to=/percyliang/sempre
  34. https://github.com/percyliang/sempre/watchers
  35. https://github.com/login?return_to=/percyliang/sempre
  36. https://github.com/percyliang/sempre/stargazers
  37. https://github.com/login?return_to=/percyliang/sempre
  38. https://github.com/percyliang/sempre/network/members
  39. https://github.com/percyliang
  40. https://github.com/percyliang/sempre
  41. https://github.com/percyliang/sempre
  42. https://github.com/percyliang/sempre/issues
  43. https://github.com/percyliang/sempre/pulls
  44. https://github.com/percyliang/sempre/projects
  45. https://github.com/percyliang/sempre/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/percyliang/sempre/commits/master
  48. https://github.com/percyliang/sempre/branches
  49. https://github.com/percyliang/sempre/releases
  50. https://github.com/percyliang/sempre/graphs/contributors
  51. https://github.com/percyliang/sempre/blob/master/license.txt
  52. https://github.com/percyliang/sempre/search?l=java
  53. https://github.com/percyliang/sempre/search?l=python
  54. https://github.com/percyliang/sempre/search?l=ruby
  55. https://github.com/percyliang/sempre/search?l=javascript
  56. https://github.com/percyliang/sempre/search?l=css
  57. https://github.com/percyliang/sempre/search?l=jupyter-notebook
  58. https://github.com/percyliang/sempre/find/master
  59. https://github.com/percyliang/sempre/archive/master.zip
  60. https://github.com/login?return_to=https://github.com/percyliang/sempre
  61. https://github.com/join?return_to=/percyliang/sempre
  62. https://desktop.github.com/
  63. https://desktop.github.com/
  64. https://developer.apple.com/xcode/
  65. https://visualstudio.github.com/
  66. https://github.com/ppasupat
  67. https://github.com/percyliang/sempre/commits?author=ppasupat
  68. https://github.com/percyliang/sempre/commit/1cec9ea0ab92a3862b6d1281d92fd8c9c8c419e6
  69. https://github.com/percyliang/sempre/commit/1cec9ea0ab92a3862b6d1281d92fd8c9c8c419e6
  70. https://github.com/percyliang/sempre/tree/1cec9ea0ab92a3862b6d1281d92fd8c9c8c419e6
  71. https://github.com/percyliang/sempre/tree/master/data
  72. https://github.com/percyliang/sempre/commit/98ea9bd6a904762f7d6486d50964db0398a1b400
  73. https://github.com/percyliang/sempre/tree/master/demo-www
  74. https://github.com/percyliang/sempre/commit/98ea9bd6a904762f7d6486d50964db0398a1b400
  75. https://github.com/percyliang/sempre/tree/master/freebase
  76. https://github.com/percyliang/sempre/commit/d7cda199532e80f3d327da2901833da4ad7a09e7
  77. https://github.com/percyliang/sempre/tree/master/interactive
  78. https://github.com/percyliang/sempre/commit/d7cda199532e80f3d327da2901833da4ad7a09e7
  79. https://github.com/percyliang/sempre/tree/master/overnight
  80. https://github.com/percyliang/sempre/commit/48d74b50b0a80a1395a7bdbaf342b409a658d6d7
  81. https://github.com/percyliang/sempre/tree/master/scripts
  82. https://github.com/percyliang/sempre/commit/d7cda199532e80f3d327da2901833da4ad7a09e7
  83. https://github.com/percyliang/sempre/tree/master/src/edu/stanford/nlp/sempre
  84. https://github.com/percyliang/sempre/commit/0ad3c6a3cdc7b7811a9347d8241a5cb23e655337
  85. https://github.com/percyliang/sempre/tree/master/tables
  86. https://github.com/percyliang/sempre/commit/1cec9ea0ab92a3862b6d1281d92fd8c9c8c419e6
  87. https://github.com/percyliang/sempre/tree/master/unittest-files
  88. https://github.com/percyliang/sempre/blob/master/.gitignore
  89. https://github.com/percyliang/sempre/blob/master/documentation.md
  90. https://github.com/percyliang/sempre/commit/48d74b50b0a80a1395a7bdbaf342b409a658d6d7
  91. https://github.com/percyliang/sempre/blob/master/license.txt
  92. https://github.com/percyliang/sempre/commit/b4d4e8372581b950b623bc79c1536ea4cd040883
  93. https://github.com/percyliang/sempre/blob/master/readme.md
  94. https://github.com/percyliang/sempre/blob/master/tutorial.md
  95. https://github.com/percyliang/sempre/blob/master/build.xml
  96. https://github.com/percyliang/sempre/blob/master/pull-dependencies
  97. https://github.com/percyliang/sempre/commit/bcbfdd4b5725d10dab353279ba77648e18afb656
  98. https://github.com/percyliang/sempre/blob/master/run
  99. https://github.com/percyliang/sempre/blob/master/testng.xml
 100. https://github.com/percyliang/sempre/commit/068bdbfcac3c4f302f87085d1ac9051f1bce48b9
 101. http://cs.stanford.edu/~pliang/papers/freebase-emnlp2013.pdf
 102. http://cs.stanford.edu/~pliang/papers/id141-acl2014.pdf
 103. https://nlp.stanford.edu/software/sempre/
 104. https://github.com/percyliang/sempre/blob/master/tutorial.md
 105. https://github.com/percyliang/sempre/blob/master/tutorial.md
 106. https://github.com/percyliang/sempre/blob/master/documentation.md
 107. https://github.com/percyliang/sempre/blob/master/tutorial.md
 108. https://github.com/percyliang/sempre/blob/master/documentation.md
 109. http://carsten.io/virtuoso-os-on-mac-os/
 110. https://github.com/site/terms
 111. https://github.com/site/privacy
 112. https://github.com/security
 113. https://githubstatus.com/
 114. https://help.github.com/
 115. https://github.com/contact
 116. https://github.com/pricing
 117. https://developer.github.com/
 118. https://training.github.com/
 119. https://github.blog/
 120. https://github.com/about
 121. https://github.com/percyliang/sempre
 122. https://github.com/percyliang/sempre

   hidden links:
 124. https://github.com/
 125. https://github.com/percyliang/sempre
 126. https://github.com/percyliang/sempre
 127. https://github.com/percyliang/sempre
 128. https://help.github.com/articles/which-remote-url-should-i-use
 129. https://github.com/percyliang/sempre#sempre-24-semantic-parsing-with-execution
 130. https://github.com/percyliang/sempre#what-is-semantic-parsing
 131. https://github.com/percyliang/sempre#what-is-sempre
 132. https://github.com/percyliang/sempre#where-do-i-go-next
 133. https://github.com/percyliang/sempre#installation
 134. https://github.com/percyliang/sempre#requirements
 135. https://github.com/percyliang/sempre#easy-setup
 136. https://github.com/percyliang/sempre#virtuoso-graph-database
 137. https://github.com/percyliang/sempre#contribute
 138. https://github.com/percyliang/sempre#changelog
 139. https://github.com/
