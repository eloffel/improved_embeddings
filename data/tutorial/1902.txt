   #[1]kdnuggets: analytics, big data, data mining and data science feed
   [2]kdnuggets    feed [3]kdnuggets    comments feed [4]kdnuggets    deep
   learning with spark and tensorflow comments feed [5]businesses will
   need one million data scientists by 2018 [6]u. delaware certificate in
   analytics: optimizing big data

kdnuggets

     [7]subscribe to kdnuggets news  | [8]twitter    [9]facebook
   [10]linkedin  |  [11]contact
   ____________________ search
   [menu-30.png]
   [search-icon.png]
     * [12]software
     * [13]news/blog
     * [14]top stories
     * [15]opinions
     * [16]tutorials
     * [17]jobs
     * [18]companies
     * [19]courses
     * [20]datasets
     * [21]education
     * [22]certificates
     * [23]meetings
     * [24]webinars


   [25]kdnuggets home    [26]news    [27]2016    [28]jan    [29]tutorials,
   overviews    deep learning with spark and tensorflow ( [30]16:n04 )

deep learning with spark and tensorflow

   [31][prv.gif] previous post
   [32]next post [nxt.gif]


   tags: [33]apache spark, [34]deep learning, [35]distributed systems,
   [36]tensorflow

   the integration of tensorflow with spark leverages the distributed
   framework for hyperparameter tuning and model deployment at scale. both
   time savings and improved error rates are demonstrated.
     __________________________________________________________________

   by tim hunter, databricks.

   neural networks have seen spectacular progress during the last few
   years and they are now the state of the art in image recognition and
   automated translation. [37]tensorflow is a new framework released by
   google for numerical computations and neural networks. in this blog
   post, we are going to demonstrate how to use tensorflow and spark
   together to train and apply deep learning models.

   you might be wondering: what   s spark   s use here when most
   high-performance deep learning implementations are single-node only? to
   answer this question, we walk through two use cases and explain how you
   can use spark and a cluster of machines to improve deep learning
   pipelines with tensorflow:

   1. hyperparameter tuning: use spark to find the best set of
   hyperparameters for neural network training, leading to 10x reduction
   in training time and 34% lower error rate.

   2. deploying models at scale: use spark to apply a trained neural
   network model on a large amount of data.

   hyperparameter tuning

   an example of a deep learning machine learning (ml) technique is
   id158s. they take a complex input, such as an image
   or an audio recording, and then apply complex mathematical transforms
   on these signals. the output of this transform is a vector of numbers
   that is easier to manipulate by other ml algorithms. artificial neural
   networks perform this transformation by mimicking the neurons in the
   visual cortex of the human brain (in a much-simplified form).

   just as humans learn to interpret what they see, artificial neural
   networks need to be trained to recognize specific patterns that are
      interesting   . for example, these can be simple patterns such as edges,
   circles, but they can be [38]much more complicated. here, we are going
   to use a classical dataset put together by nist and train a neural
   network to recognize these digits:

                              the mnist dataset

   the tensorflow library automates the creation of training algorithms
   for neural networks of various shapes and sizes. the actual process of
   building a neural network, however, is more complicated than just
   running some function on a dataset. there are typically a number of
   very important hyperparameters (configuration parameters in layman   s
   terms) to set, which affects how the model is trained. picking the
   right parameters leads to high performance, while bad parameters can
   lead to prolonged training and bad performance. in practice, machine
   learning practitioners rerun the same model multiple times with
   different hyperparameters in order to find the best set. this is a
   classical technique called hyperparameter tuning.

   when building a neural network, there are many important
   hyperparameters to choose carefully. for example:
     * number of neurons in each layer: too few neurons will reduce the
       expression power of the network, but too many will substantially
       increase the running time and return noisy estimates.
     * learning rate: if it is too high, the neural network will only
       focus on the last few samples seen and disregard all the experience
       accumulated before. if it is too low, it will take too long to
       reach a good state."

   the interesting thing here is that even though tensorflow itself is not
   distributed, the hyperparameter tuning process is    embarrassingly
   parallel    and can be distributed using spark. in this case, we can use
   spark to broadcast the common elements such as data and model
   description, and then schedule the individual repetitive computations
   across a cluster of machines in a fault-tolerant manner.

   distributed cross-validation with spark and tensorflow

   how does using spark improve the accuracy? the accuracy with the
   [39]default set of hyperparameters is 99.2%. our best result with
   hyperparameter tuning has a 99.47% accuracy on the test set, which is a
   34% reduction of the test error. distributing the computations scaled
   linearly with the number of nodes added to the cluster: using a 13-node
   cluster, we were able to train 13 models in parallel, which translates
   into a 7x speedup compared to training the models one at a time on one
   machine. here is a graph of the computation times (in seconds) with
   respect to the number of machines on the cluster:

   computation times with respect to number of cluster machines

   more important though, we get insights into the sensibility of the
   training procedure to various hyperparameters of training. for example,
   we plot the final test performance with respect to the learning rate,
   for different numbers of neurons:

   base learning rate

   this shows a typical tradeoff curve for neural networks:
     * the learning rate is critical: if it is too low, the neural network
       does not learn anything (high test error). if it is too high, the
       training process may oscillate randomly and even diverge in some
       configurations.
     * the number of neurons is not as important for getting a good
       performance, and networks with many neurons are much more sensitive
       to the learning rate. this is occam   s razor principle: simpler
       model tend to be    good enough    for most purposes. if you have the
       time and resource to go after the missing 1% test error, you must
       be willing to invest a lot of resources in training, and to find
       the proper hyperparameters that will make the difference.

   by using a sparse sample of parameters, we can zero in on the most
   promising sets of parameters.

   how do i use it?

   since tensorflow can use all the cores on each worker, we only run one
   task at one time on each worker and we batch them together to limit
   contention. the tensorflow library can be installed on spark clusters
   as a regular python library, following the [40]instructions on the
   tensorflow website. the following notebooks below show how to install
   tensorflow and let users rerun the experiments of this blog post:
     * [41]distributed processing of images using tensorflow
     * [42]testing the distribution processing of images using tensorflow

   deploying models at scale

   tensorflow models can directly be embedded within pipelines to perform
   complex recognition tasks on datasets. as an example, we show how we
   can label a set of images from a [43]stock neural network model that
   was already trained.

   the model is first distributed to the workers of the clusters, using
   spark   s built-in broadcasting mechanism:
with gfile.fastgfile( 'classify_image_graph_def.pb', 'rb') as f:
    model_data = f.read()
model_data_bc = sc.broadcast(model_data)

   then this model is loaded on each node and applied to images. this is a
   sketch of the code being run on each node:
def apply_batch(image_url):
  # creates a new tensorflow graph of computation and imports the model
  with tf.graph().as_default() as g:
    graph_def = tf.graphdef()
    graph_def.parsefromstring(model_data_bc.value)
    tf.import_graph_def(graph_def, name='')

    # loads the image data from the url:
    image_data = urllib.request.urlopen(img_url, timeout=1.0).read()

    # runs a tensor flow session that loads the
    with tf.session() as sess:
      softmax_tensor = sess.graph.get_tensor_by_name('softmax:0')
      predictions = sess.run(softmax_tensor, {'decodejpeg/contents:0': image_dat
a})
      return predictions

   this code can be made more efficient by batching the images together.

   here is an example of image:

   coral reef

   and here is the interpretation of this image according to the neural
   network, which is pretty accurate:
('coral reef', 0.88503921),
   ('scuba diver', 0.025853464),
   ('brain coral', 0.0090828091),
   ('snorkel', 0.0036010914),
   ('promontory, headland, head, foreland', 0.0022605944)])

   looking forward

   we have shown how to combine spark and tensorflow to train and deploy
   neural networks on handwritten digit recognition and image labeling.
   even though the neural network framework we used itself only works in a
   single-node, we can use spark to distribute the hyperparameter tuning
   process and model deployment. this not only cuts down the training time
   but also improves accuracy and gives us a better understanding of
   various hyperparameters    sensibility.

   while this support is only available on python, we look forward to
   providing deeper integration between tensorflow and the rest of the
   spark framework.

   about: [44]databricks was founded by the team at uc berkeley amplab
   that created and continues to drive apache spark. their vision is to
   make big data simple for data scientists, engineers, developers, and
   business users alike.

   [45]original. reposted with permission.

   related:
     * [46]spark 2015 year in review
     * [47]tensorflow disappoints     google deep learning falls shallow
     * [48]introduction to spark with python
     __________________________________________________________________

   [49][prv.gif] previous post
   [50]next post [nxt.gif]
     __________________________________________________________________

top stories past 30 days

                                              most popular
    1. [51]another 10 free must-read books for machine learning and data
       science
    2. [52]9 must-have skills you need to become a data scientist, updated
    3. [53]who is a typical data scientist in 2019?
    4. [54]the pareto principle for data scientists
    5. [55]what no one will tell you about data science job applications
    6. [56]19 inspiring women in ai, big data, data science, machine
       learning
    7. [57]my favorite mind-blowing machine learning/ai breakthroughs

                                                most shared
    1. [58]id158s optimization using genetic algorithm
       with python
    2. [59]who is a typical data scientist in 2019?
    3. [60]8 reasons why you should get a microsoft azure certification
    4. [61]the pareto principle for data scientists
    5. [62]r vs python for data visualization
    6. [63]how to work in data science, ai, big data
    7. [64]the deep learning toolset     an overview

[65]latest news

     * [66]download your datax guide to ai in marketing
     * [67]kdnuggets offer: save 20% on strata in london
     * [68]training a champion: building deep neural nets for big ...
     * [69]building a recommender system
     * [70]predict age and gender using convolutional neural netwo...
     * [71]top tweets, mar 27     apr 02: here is a great ex...

more recent stories

     * [72]top tweets, mar 27     apr 02: here is a great explanat...
     * [73]odsc east is selling out; odsc india announced
     * [74]accelerate ai and data science career expo, may 4, 2019
     * [75]grow your data career at datasciencego, san diego, sep 27-29
     * [76]getting started with nlp using the pytorch framework
     * [77]how to diy your data science education
     * [78]top 8 data science use cases in gaming
     * [79]kdnuggets 19:n13, apr 3: top 10 data scientist coding mista...
     * [80]make better data-driven business decisions
     * [81]top stories, mar 25-31: r vs python for data visualization;
       th...
     * [82]two predictive analytics world events in europe this fall
     * [83]7 qualities your big data visualization tools absolutely must
       ...
     * [84]yeshiva university: tenure-track faculty in ai and machine
       lea...
     * [85]which face is real?
     * [86]yeshiva university: program director / tenure track faculty
       me...
     * [87]top 10 coding mistakes made by data scientists
     * [88]uber   s case study at paw industry 4.0: machine learning ...
     * [89]xai     a data scientist   s mouthpiece
     * [90]what does gpt-2 think about the ai arms race?
     * [91]openclassrooms: data freelance online course creator
       [telecomm...

   [92]kdnuggets home    [93]news    [94]2016    [95]jan    [96]tutorials,
   overviews    deep learning with spark and tensorflow ( [97]16:n04 )
      2019 kdnuggets. [98]about kdnuggets.  [99]privacy policy. [100]terms
   of service

   [101]subscribe to kdnuggets news
   [102][tw_c48.png] [103]facebook [104]linkedin
   x
   [envelope.png] [105]get kdnuggets, a leading newsletter on ai, data
   science, and machine learning
   email: ______________________________
   sign up
   leave this field empty if you're human: ____________________

references

   visible links
   1. https://www.kdnuggets.com/feed/
   2. https://www.kdnuggets.com/feed
   3. https://www.kdnuggets.com/comments/feed
   4. https://www.kdnuggets.com/2016/01/deep-learning-spark-tensorflow.html/feed
   5. https://www.kdnuggets.com/2016/01/businesses-need-one-million-data-scientists-2018.html
   6. https://www.kdnuggets.com/2016/01/udel-certificate-analytics-optimizing-big-data.html
   7. https://www.kdnuggets.com/news/subscribe.html
   8. https://twitter.com/kdnuggets
   9. https://www.facebook.com/kdnuggets
  10. https://www.linkedin.com/groups/54257/
  11. https://www.kdnuggets.com/contact.html
  12. https://www.kdnuggets.com/software/index.html
  13. https://www.kdnuggets.com/news/index.html
  14. https://www.kdnuggets.com/news/top-stories.html
  15. https://www.kdnuggets.com/opinions/index.html
  16. https://www.kdnuggets.com/tutorials/index.html
  17. https://www.kdnuggets.com/jobs/index.html
  18. https://www.kdnuggets.com/companies/index.html
  19. https://www.kdnuggets.com/courses/index.html
  20. https://www.kdnuggets.com/datasets/index.html
  21. https://www.kdnuggets.com/education/index.html
  22. https://www.kdnuggets.com/education/analytics-data-mining-certificates.html
  23. https://www.kdnuggets.com/meetings/index.html
  24. https://www.kdnuggets.com/webcasts/index.html
  25. https://www.kdnuggets.com/
  26. https://www.kdnuggets.com/news/index.html
  27. https://www.kdnuggets.com/2016/index.html
  28. https://www.kdnuggets.com/2016/01/index.html
  29. https://www.kdnuggets.com/2016/01/tutorials.html
  30. https://www.kdnuggets.com/2016/n04.html
  31. https://www.kdnuggets.com/2016/01/businesses-need-one-million-data-scientists-2018.html
  32. https://www.kdnuggets.com/2016/01/udel-certificate-analytics-optimizing-big-data.html
  33. https://www.kdnuggets.com/tag/apache-spark
  34. https://www.kdnuggets.com/tag/deep-learning
  35. https://www.kdnuggets.com/tag/distributed-systems
  36. https://www.kdnuggets.com/tag/tensorflow
  37. https://www.tensorflow.org/
  38. http://research.google.com/archive/unsupervised_icml2012.html
  39. https://www.tensorflow.org/versions/master/tutorials/mnist/pros/index.html#train-and-evaluate-the-mode
  40. https://www.tensorflow.org/get_started/os_setup.html
  41. http://go.databricks.com/hubfs/notebooks/tensorflow/distributed_processing_of_images_using_tensorflow.html
  42. http://go.databricks.com/hubfs/notebooks/tensorflow/test_distributed_processing_of_images_using_tensorflow.html
  43. http://arxiv.org/abs/1512.00567
  44. https://databricks.com/
  45. https://databricks.com/blog/2016/01/25/deep-learning-with-spark-and-tensorflow.html
  46. https://www.kdnuggets.com/2016/01/spark-2015-year-in-review.html
  47. https://www.kdnuggets.com/2015/11/google-tensorflow-deep-learning-disappoints.html
  48. https://www.kdnuggets.com/2015/11/introduction-spark-python.html
  49. https://www.kdnuggets.com/2016/01/businesses-need-one-million-data-scientists-2018.html
  50. https://www.kdnuggets.com/2016/01/udel-certificate-analytics-optimizing-big-data.html
  51. https://www.kdnuggets.com/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html
  52. https://www.kdnuggets.com/2018/05/simplilearn-9-must-have-skills-data-scientist.html
  53. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  54. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  55. https://www.kdnuggets.com/2019/03/data-science-job-applications.html
  56. https://www.kdnuggets.com/2019/03/women-ai-big-data-science-machine-learning.html
  57. https://www.kdnuggets.com/2019/03/favorite-ml-ai-breakthroughs.html
  58. https://www.kdnuggets.com/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html
  59. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  60. https://www.kdnuggets.com/2019/03/simplilearn-8-reasons-microsoft-azure-certification.html
  61. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  62. https://www.kdnuggets.com/2019/03/r-vs-python-data-visualization.html
  63. https://www.kdnuggets.com/2019/03/work-data-science-ai-big-data.html
  64. https://www.kdnuggets.com/2019/03/deep-learning-toolset-overview.html
  65. https://www.kdnuggets.com/news/index.html
  66. https://www.kdnuggets.com/2019/04/datax-download-guide-ai-marketing.html
  67. https://www.kdnuggets.com/2019/04/strata-kdnuggets-offer-save-london.html
  68. https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html
  69. https://www.kdnuggets.com/2019/04/building-recommender-system.html
  70. https://www.kdnuggets.com/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html
  71. https://www.kdnuggets.com/2019/04/top-tweets-mar27-apr02.html
  72. https://www.kdnuggets.com/2019/04/top-tweets-mar27-apr02.html
  73. https://www.kdnuggets.com/2019/04/odsc-east-selling-out-india-announced.html
  74. https://www.kdnuggets.com/jobs/19/04-03-accelerate-ai-data-science-career-expo-2019.html
  75. https://www.kdnuggets.com/2019/04/formulated-data-career-datasciencego-san-diego.html
  76. https://www.kdnuggets.com/2019/04/nlp-pytorch.html
  77. https://www.kdnuggets.com/2019/04/diy-your-data-science-education.html
  78. https://www.kdnuggets.com/2019/04/top-8-data-science-use-cases-gaming.html
  79. https://www.kdnuggets.com/2019/n13.html
  80. https://www.kdnuggets.com/2019/04/psu-make-better-data-driven-business-decisions.html
  81. https://www.kdnuggets.com/2019/04/top-news-week-0325-0331.html
  82. https://www.kdnuggets.com/2019/04/paw-two-predictive-analytics-world-events-europe-fall.html
  83. https://www.kdnuggets.com/2019/04/7-qualities-big-data-visualization-tools.html
  84. https://www.kdnuggets.com/jobs/19/04-02-yeshiva-university-faculty-ai-machine-learning.html
  85. https://www.kdnuggets.com/2019/04/which-face-real-stylegan.html
  86. https://www.kdnuggets.com/jobs/19/04-02-yeshiva-university-program-director-faculty-artificial-intelligence-machine-learning.html
  87. https://www.kdnuggets.com/2019/04/top-10-coding-mistakes-data-scientists.html
  88. https://www.kdnuggets.com/2019/04/paw-uber-case-study-machine-learning-enforce-mobile-performance.html
  89. https://www.kdnuggets.com/2019/04/xai-data-scientist.html
  90. https://www.kdnuggets.com/2019/04/gpt-2-think-about-ai-arms-race.html
  91. https://www.kdnuggets.com/jobs/19/04-01-openclassrooms-data-freelance-online-course-creator-b.html
  92. https://www.kdnuggets.com/
  93. https://www.kdnuggets.com/news/index.html
  94. https://www.kdnuggets.com/2016/index.html
  95. https://www.kdnuggets.com/2016/01/index.html
  96. https://www.kdnuggets.com/2016/01/tutorials.html
  97. https://www.kdnuggets.com/2016/n04.html
  98. https://www.kdnuggets.com/about/index.html
  99. https://www.kdnuggets.com/news/privacy-policy.html
 100. https://www.kdnuggets.com/terms-of-service.html
 101. https://www.kdnuggets.com/news/subscribe.html
 102. https://twitter.com/kdnuggets
 103. https://facebook.com/kdnuggets
 104. https://www.linkedin.com/groups/54257
 105. https://www.kdnuggets.com/news/subscribe.html

   hidden links:
 107. https://www.kdnuggets.com/
 108. https://www.kdnuggets.com/
