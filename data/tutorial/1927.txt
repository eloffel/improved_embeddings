   [1]naoaki okazaki's website
     * [2]home
     * [3]research
     * [4]publication
     * [5]software
     * [6]blog
     * [7]japanese

crfsuite

a fast implementation of id49 (crfs)

introduction

   crfsuite is an implementation of id49 (crfs)
   [[8]lafferty 01][[9]sha 03][[10]sutton] for labeling sequential data.
   among the various implementations of crfs, this software provides
   following features.
     * fast training and tagging. the primary mission of this software is
       to train and use crf models as fast as possible. see the
       [11]benchmark result for more information.
     * simple data format for training and tagging. the data format is
       similar to those used in other machine learning tools; each line
       consists of a label and attributes (features) of an item,
       consequtive lines represent a sequence of items (an empty line
       denotes an end of item sequence). this means that users can design
       an arbitrary number of features for each item, which is impossible
       in [12]crf++.
     * state-of-the-art training methods. crfsuite implements:
          + limited-memory bfgs (l-bfgs) [[13]nocedal 80]
          + orthant-wise limited-memory quasi-newton (owl-qn) method
            [[14]andrew 07]
          + stochastic id119 (sgd) [[15]shalev-shwartz 07]
          + averaged id88 [[16]collins 02]
          + passive aggressive [[17]crammer 06]
          + adaptive id173 of weight vector (arow) [[18]mejer 10]
     * forward/backward algorithm using the scaling method[[19]rabiner
       90]. the scaling method seems faster than computing the
       forward/backward scores in logarithm domain.
     * linear-chain (first-order markov) crf.
     * performance evaluation on training. crfsuite can output precision,
       recall, f1 scores of the model evaluated on test data.
     * an efficient file format for storing/accessing crf models using
       [20]constant quark database (cqdb). it takes a little time to start
       up a tagger since a preparation is done only by reading an entire
       model file to a memory block. retriving the weight of a feature is
       also very quick.
     * c++/swig api. crfsuite provides an easy-to-use api for c++ language
       (crfsuite.hpp). crfsuite also provides the swig interface for
       various languages (e.g., python) on top of the c++ api. see the
       [21]api documentation for more information.

   for more information about crfsuite, please refer to these pages.
     * [22]tutorial
     * [23]documentation
     * [24]benchmark evaluation
     * [25]api documentation

download

   the current release is crfsuite version 0.12.
     * [26]source package (the source package requires [27]liblbfgs 1.8 or
       later)
     * [28]win32 binary (this binary requires [29]microsoft visual c++
       2010 redistributable package (x86) to be installed on your
       computers)
     * [30]linux 64bit binary

   crfsuite is distributed under the [31]modified bsd license.

   please use the following bibtex entry when you cite crfsuite in your
   papers.
@misc{crfsuite,
        author = {naoaki okazaki},
        title = {crfsuite: a fast implementation of id49 (c
rfs)},
        url = {http://www.chokkan.org/software/crfsuite/},
        year = {2007}
}

change log

   refer to the [32]full change log. updates for the latest release are:

   crfsuite 0.12 (2011-08-11)

          + [core] optimized the implementation for faster training;
            approximately 1.4-1.5 x speed up.
          + [core] faster routine for computing exp(x) using sse2.
          + [core] restructured the source code to separate routines for
            crf id114 and training algorithms; this is an
            initial attempt for implementing crfs with different feature
            types (e.g., 2nd-order crf, 1st-order transition features
            conditioned on observations) and different training
            algorithms.
          + [core] implemented new training algorithms: averaged
            id88, passive aggressive, and adaptive id173 of
            weights (arow).
          + [core] removed automatic generation of bos/eos features; one
            can use these features by inserting attributes to the
            first/last items (e.g., "__bos__" at the first item and
            "__eos__" at the last item).
          + [core] fixed some memory-leak problems.
          + [core] reduced memory usage in training.
          + [core] fixed a crash problem when the model file does not
            exist in tagging.
          + [frontend:learn] training and test sets are maintained by
            group numbers; specify the group number for hold-out
            evaluation with "-e" option.
          + [frontend:learn] training algorithm is now specified by "-a"
            option instead of "-p algorithm=".
          + [frontend:learn] renamed some training parameters; for
            example, an l2 id173 coefficient is specified by "c2"
            instead of "id173.sigma" (c2 = 0.5 / sigma * sigma).
          + [frontend:learn] show the list of parameters, default values,
            and descriptions with "-h" option.
          + [frontend:learn] removed the support of comment lines for
            simplicity; one may forget to escape '#' characters in a data
            set. crfsuite now does not handle '#' as a special character.
          + [frontend:tagger] output probabilities of predicted sequences
            with "-p" option.
          + [frontend:tagger] output marginal probabilities of predicted
            items with "-i" option.
          + [api] numerous changes in api for the enhancements.
          + [api] renamed the library name "libcrf" to "libcrfsuite".
          + [api] renamed the prefix "crf_" to "crfsuite_" in structure
            and function names.
          + [api] implemented a high-level and easy-to-use api for
            c++/swig (crfsuite.hpp and crfsuite_api.hpp).
          + [api] implemented the python swig module and sample programs;
            writing a tagger is very easy with this module.
          + [sample] a new sample: id39 (ner) using
            the conll2003 data set.
          + [sample] rewritten samples.
          + [sample] a sample program (template.py) for using feature
            templates that are compatible with crf++.
          + [sample] new samples in example directory: named entity
            recognition (ner.py) using the conll2003 data set, and
            part-of-speech tagging (pos.py).

related software

     * [33]crf++: yet another crf toolkit
     * [34]flexcrfs: flexible id49
     * [35]crf project page
     * [36]mallet
     * [37]hcrf library (including crf and ldcrf)
     * [38]projects:sgd [l  on bottou]
     * [39]wapiti

references

   [andrew 07] galen andrew and jianfeng gao.    [40]scalable training of
   l1-regularized id148   . proceedings of the 24th
   international conference on machine learning (icml 2007). 33-40. 2007.

   [crammer 06] koby crammer, ofer dekel, joseph keshet, shai
   shalev-shwartz, and yoram singer.    [41]online passive-aggressive
   algorithms   . journal of machine learning research. 7. mar. 551-585.
   2006.

   [collins 02] michael collins.    [42]discriminative training methods for
   id48: theory and experiments with id88
   algorithms   . proceedings of the conference on empirical methods in
   natural language processing (emnlp 2002). 1-8. 2002.

   [lafferty 01] john lafferty, andrew mccallum, and fernando pereira.
      [43]id49: probabilistic models for segmenting and
   labeling sequence data   . proceedings of the 18th international
   conference on machine learning. 282-289. 2001.

   [malouf 02] robert malouf.    [44]a comparison of algorithms for maximum
   id178 parameter estimation   . proceedings of the 6th conference on
   natural language learning (conll-2002). 49-55. 2002.

   [mejer 10] avihai mejer and koby crammer.    [45]con   dence in
   structured-prediction using con   dence-weighted models   . proceedings of
   the 2010 conference on empirical methods in natural language processing
   (emnlp 2010). 971-981. 2010.

   [nocedal 80] jorge nocedal.    updating quasi-newton matrices with
   limited storage   . mathematics of computation. 35. 151. 773-782. 1980.

   [rabiner 90] lawrence r. rabiner.    [46]a tutorial on hidden markov
   models and selected applications in id103   . readings in
   id103. 267-296. 1990. morgan kaufmann publishers inc., san
   francisco, ca, usa.

   [sha 03] fei sha and fernando pereira.    [47]id66 with
   id49   . naacl '03: proceedings of the 2003
   conference of the north american chapter of the association for
   computational linguistics on human language technology. 134-141. 2003.

   [shalev-shwartz 07] shai shalev-shwartz, yoram singer, and nathan
   srebro.    [48]pegasos: primal estimated sub-gradient solver for id166   .
   proceedings of the 24th international conference on machine learning
   (icml 2007). 807-814. 2007.

   [sutton] charles sutton and andrew mccallum.    [49]an introduction to
   id49   . (submitting).

   copyright (c) 2002-2016 by naoaki okazaki
   wed, 25 may 2016 23:24:13 +0900

references

   1. http://www.chokkan.org/
   2. http://www.chokkan.org/index.html.en
   3. http://www.chokkan.org/research/index.html.en
   4. http://www.chokkan.org/publication.html.en
   5. http://www.chokkan.org/software/index.html.en
   6. http://www.chokkan.org/blog/
   7. http://www.chokkan.org/software/crfsuite/index.html.ja
   8. http://www.chokkan.org/software/crfsuite/#idp8853501200
   9. http://www.chokkan.org/software/crfsuite/#idp8854546608
  10. http://www.chokkan.org/software/crfsuite/#idp8854560656
  11. http://www.chokkan.org/software/crfsuite/benchmark.html
  12. http://crfpp.sourceforge.net/
  13. http://www.chokkan.org/software/crfsuite/#idp8853522288
  14. http://www.chokkan.org/software/crfsuite/#idp8853477872
  15. http://www.chokkan.org/software/crfsuite/#idp8854553248
  16. http://www.chokkan.org/software/crfsuite/#idp8853495008
  17. http://www.chokkan.org/software/crfsuite/#idp8853484784
  18. http://www.chokkan.org/software/crfsuite/#idp8853515200
  19. http://www.chokkan.org/software/crfsuite/#idp8853528816
  20. http://www.chokkan.org/software/cqdb/
  21. http://www.chokkan.org/software/crfsuite/api/
  22. http://www.chokkan.org/software/crfsuite/tutorial.html
  23. http://www.chokkan.org/software/crfsuite/manual.html
  24. http://www.chokkan.org/software/crfsuite/benchmark.html
  25. http://www.chokkan.org/software/crfsuite/api/
  26. https://github.com/downloads/chokkan/crfsuite/crfsuite-0.12.tar.gz
  27. http://www.chokkan.org/software/liblbfgs/
  28. https://github.com/downloads/chokkan/crfsuite/crfsuite-0.12_win32.zip
  29. http://www.microsoft.com/download/en/details.aspx?id=5555
  30. https://github.com/downloads/chokkan/crfsuite/crfsuite-0.12-x86_64.tar.gz
  31. http://www.opensource.org/licenses/bsd-license.php
  32. https://github.com/chokkan/crfsuite/raw/master/changelog
  33. http://crfpp.sourceforge.net/
  34. http://flexcrfs.sourceforge.net/
  35. http://crf.sourceforge.net/
  36. http://mallet.cs.umass.edu/
  37. http://hcrf.sourceforge.net/
  38. http://leon.bottou.org/projects/sgd
  39. http://wapiti.limsi.fr/
  40. http://research.microsoft.com/users/galena/papers/andrew07scalable.pdf
  41. http://jmlr.csail.mit.edu/papers/v7/crammer06a.html
  42. http://www.aclweb.org/anthology-new/w/w02/w02-1001.pdf
  43. http://www.cis.upenn.edu/~pereira/papers/crf.pdf
  44. http://bulba.sdsu.edu/malouf/papers/conll02.pdf
  45. http://www.aclweb.org/anthology/d/d10/d10-1095.pdf
  46. http://www.cs.ubc.ca/~murphyk/bayes/rabiner.pdf
  47. http://citeseer.ist.psu.edu/sha03shallow.html
  48. http://www.machinelearning.org/proceedings/icml2007/papers/587.pdf
  49. http://homepages.inf.ed.ac.uk/csutton/publications/crftutv2.pdf
