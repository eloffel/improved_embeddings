   #[1]the glowing python - atom [2]the glowing python - rss [3]the
   glowing python - atom

   [4]the glowing python

   a collection of sloppy snippets for scientific computing and data
   visualization in python.

saturday, april 14, 2012

k-nearest neighbor search

   a k-nearest neighbor search identifies the top k nearest neighbors to a
   query. the problem is: given a dataset d of vectors in a d-dimensional
   space and a query point x in the same space, find the closest point in
   d to x. the following function performs a k-nearest neighbor search
   using the euclidean distance:
from numpy import random,argsort,sqrt
from pylab import plot,show

def knn_search(x, d, k):
 """ find k nearest neighbours of data among d """
 ndata = d.shape[1]
 k = k if k < ndata else ndata
 # euclidean distances from the other points
 sqd = sqrt(((d - x[:,:ndata])**2).sum(axis=0))
 idx = argsort(sqd) # sorting
 # return the indexes of k nearest neighbours
 return idx[:k]

   the function computes the euclidean distance between every point of d
   and x then returns the indexes of the points for which the distance is
   smaller.
   now, we will test this function on a random bidimensional dataset:
# knn_search test
data = random.rand(2,200) # random dataset
x = random.rand(2,1) # query point

# performing the search
neig_idx = knn_search(x,data,10)

# plotting the data and the input point
plot(data[0,:],data[1,:],'ob',x[0,0],x[1,0],'or')
# highlighting the neighbours
plot(data[0,neig_idx],data[1,neig_idx],'o',
  markerfacecolor='none',markersize=15,markeredgewidth=1)
show()

   the result is as follows:
   [5][knn.png]
   the red point is the query vector and the blue ones represent the data.
   the blue points surrounded by a black circle are the nearest neighbors.
   [6]email this[7]blogthis![8]share to twitter[9]share to
   facebook[10]share to pinterest
   labels: [11]data mining, [12]knn, [13]numpy, [14]search

13 comments:

    1. [15]michael lin[16]april 19, 2012 at 5:36 pm
       how does this compare with using scipy's ckdtree?
       http://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.c
       kdtree.html
       reply[17]delete
       replies
            reply
    2. [18]justglowing[19]april 19, 2012 at 5:49 pm
       hi michael, the class scipy.spatial.ckdtree implements another
       algorithm for the nearest-neighbor search based on kdtrees. of
       course, kdtrees have pro and cons. for example, the search cost
       using a kdtree is logarithmic (so, it's faster than the naive
       algorithm implemented here) but you have to build the tree and if
       need to delete or insert points in your dataset, you have to modify
       the tree.
       if you need more details look at this:
       http://en.wikipedia.org/wiki/k-d_tree
       reply[20]delete
       replies
            reply
    3. [21]daniel rugeles[22]december 12, 2012 at 11:02 am
       this comment has been removed by the author.
       reply[23]delete
       replies
            reply
    4. [24]daniel rugeles[25]december 12, 2012 at 11:17 am
       """thanks a lot, i made a small change so that the user can make
       several queries with one call of knn_serach(...). sorry i don't
       know how to format code here"""
       from numpy import random,argsort,sqrt,array,ones
       from pylab import plot,show
       # the function computes the euclidean distance between every point
       of d and x then returns the indexes of the points for which the
       distance is smaller.
       def knn_search(x, d, k):
       """ find k nearest neighbours of data among d """
       ndata = d.shape[0]
       # num of query points
       queries=x.shape
       k = k if k < ndata else ndata
       # euclidean distances from the other points
       diff=array(d*ones(queries,int)).t - x[:,:ndata].t
       sqd=sqrt(((diff.t)**2).sum(axis=2))
       # sorting
       idx=argsort(sqd)
       # return the indexes of k nearest neighbours
       return idx[:,:k]
       # now, we will test this function on a random bidimensional
       dataset:
       data = random.rand(200,2) # random dataset
       x = array([[[0.4,0.4]],[[0.6,0.8]],[[0.9,0.2]],[[0.2,0.9]]]) #
       query points
       # performing the search
       neig_idx = knn_search(x,data,10)
       # plotting the data and the input points
       plot(data[:,0],data[:,1],'ob',x.t[0,0],x.t[1,0],'or')
       # highlighting the neighbours for each input
       plot(data[neig_idx,0],data[neig_idx,1],'o',
       markerfacecolor='none',markersize=15,markeredgewidth=1)
       #plot(data[neig_idx[1],0],data[neig_idx[1],1],'xk',
       markerfacecolor='none',markersize=15,markeredgewidth=1)
       show()
       reply[26]delete
       replies
            reply
    5. anonymous[27]march 22, 2013 at 11:58 am
       awesome code - this really helped me out! thanks for sharing!
       reply[28]delete
       replies
            reply
    6. anonymous[29]may 23, 2013 at 7:57 pm
       gp,
       great tutorial. thanks as always for uploading these. one question,
       tho: it's not clear to me (a beginner) what form "x" should take
       when it's passed into knn_search function. you say that x is "a
       query point," but what does a query point look like?? is it a slice
       of ndata -- a point within the features?? thank you for your
       thoughts!
       reply[30]delete
       replies
         1. [31]justglowing[32]may 23, 2013 at 8:18 pm
            hello, if you data matrix is of dimension n by m then x have
            to be a vector of dimension n.
            [33]delete
            replies
                 reply
         2. anonymous[34]may 23, 2013 at 9:04 pm
            is data matrix, then, some kind of similarity or distance
            measure if i'm doing knn on documents??
            [35]delete
            replies
                 reply
         3. [36]justglowing[37]may 24, 2013 at 8:43 am
            usually each row of the data matrix contains one of your
            samples and the knn computes the distance between each sample
            you have and a query vector. at the end it reports to you the
            k samples closest to your query vector.
            [38]delete
            replies
                 reply
            reply
    7. anonymous[39]december 4, 2013 at 3:02 pm
       i have my training data in a csv file. the data contains 35 points
       corresponding to 3d vector in 3 columns x,y, and z and a feature
       'color' in the fourth column. not being a great pythonista, how do
       i modify your code here to employ my data to test a random new
       vector?
       reply[40]delete
       replies
         1. anonymous[41]december 4, 2013 at 3:11 pm
            forgot to mention, the color feature is numeric 1, 0.5, 0.3,
            or 0. i want a new random vector to be predicted.
            [42]delete
            replies
                 reply
         2. [43]justglowing[44]december 5, 2013 at 3:54 pm
            hi, i would suggest you to read the csv file using pandas.
            since your dataset has 3 dimensions you have to make a 3d plot
            (or ignore one of the variables). matplotlib has a module
            named mplot3 that enables 3d visualization.
            [45]delete
            replies
                 reply
            reply
    8. [46]unknown[47]february 2, 2016 at 4:19 pm
       should be axis=1 instead of axis=0 for euclidean distance
       reply[48]delete
       replies
            reply

   add comment
   load more...

   [49]newer post [50]older post [51]home
   subscribe to: [52]post comments (atom)

   [ins: :ins]

tweet this blog!

   [53]tweet

follow the glowing python

                                     on
                           [54][twitter_logo.jpg]

   [55]follow @justglowing

things you can find here

   [56]3d [57]ai [58]algorithms [59]andrews [60]animation
   [61]approximation [62]arrow [63]audio [64]automata [65]beer [66]binary
   [67]book [68]boxplot [69]calendar [70]carbon emissions [71]choice
   [72]classification [73]id91 [74]color [75]complex numbers
   [76]conway [77]corner [78]crawler [79]cross-validation [80]curves
   [81]data mining [82]data structures [83]datetime [84]id90
   [85]derivative [86]dice [87]eigenvectors [88]energy [89]environment
   [90]facebook [91]features selection [92]feed [93]fft [94]files
   [95]filtering [96]fitting [97]football [98]forecast [99]fourier
   [100]fractal [101]geometric_transform [102]gif [103]ginput [104]gmail
   [105]google [106]hdf5 [107]heatmap [108]histogram [109]image [110]imap
   [111]impalib [112]information retrieval [113]integral [114]interactive
   [115]interpolation [116]ipython [117]irc [118]jit [119]joblib [120]json
   [121]jukowski [122]id116 [123]keras [124]knn [125]life [126]linear
   algebra [127]lsa [128]machine learning [129]map [130]math
   [131]matplotlib [132]minimization [133]moving average [134]mp3
   [135]multithreading [136]natural language [137]network analysis
   [138]networking [139]neural network [140]nlp [141]numba [142]number
   theory [143]numpy [144]oop [145]opencv [146]optimization [147]outliers
   [148]id95 [149]pandas [150]parallelization [151]pca
   [152]persistence [153]pi [154]picking [155]pickle [156]plotly
   [157]plotting [158]prediction [159]prices [160]id203 [161]pylab
   [162]quadrature [163]random [164]re [165]reflection [166]regex
   [167]regression [168]review [169]rolling windws [170]rotation [171]rss
   [172]scikit-learn [173]scipy [174]scraping [175]seaborn [176]search
   [177]sequences [178]serialization [179]shape [180]signal [181]sklearn
   [182]socket [183]sorting [184]sound [185]speech [186]spider
   [187]spirals [188]stacked plot [189]statistics [190]stereo vision
   [191]stft [192]storage [193]string [194]structures analysis
   [195]summarization [196]id166 [197]tangent [198]tax [199]text to speech
   [200]time series [201]timestamp [202]transformation [203]twitter
   [204]urllib [205]vector [206]visualization [207]wav [208]wikipedia
   [209]xml

followers

looking for a snippet?

   __________ search

archive

     * [210]     [211]2019 (4)
          + [212]     [213]mar (3)
          + [214]     [215]jan (1)

     * [216]     [217]2018 (2)
          + [218]     [219]jun (1)
          + [220]     [221]may (1)

     * [222]     [223]2017 (4)
          + [224]     [225]oct (1)
          + [226]     [227]jul (1)
          + [228]     [229]jun (1)
          + [230]     [231]apr (1)

     * [232]     [233]2016 (1)
          + [234]     [235]may (1)

     * [236]     [237]2015 (3)
          + [238]     [239]oct (1)
          + [240]     [241]apr (1)
          + [242]     [243]jan (1)

     * [244]     [245]2014 (9)
          + [246]     [247]nov (1)
          + [248]     [249]oct (1)
          + [250]     [251]sep (1)
          + [252]     [253]aug (2)
          + [254]     [255]may (1)
          + [256]     [257]apr (1)
          + [258]     [259]feb (1)
          + [260]     [261]jan (1)

     * [262]     [263]2013 (20)
          + [264]     [265]dec (1)
          + [266]     [267]nov (1)
          + [268]     [269]sep (1)
          + [270]     [271]jul (2)
          + [272]     [273]jun (2)
          + [274]     [275]may (2)
          + [276]     [277]apr (2)
          + [278]     [279]mar (3)
          + [280]     [281]feb (3)
          + [282]     [283]jan (3)

     * [284]     [285]2012 (23)
          + [286]     [287]dec (2)
          + [288]     [289]nov (2)
          + [290]     [291]oct (1)
          + [292]     [293]sep (2)
          + [294]     [295]aug (1)
          + [296]     [297]jul (2)
          + [298]     [299]may (2)
          + [300]     [301]apr (3)
               o [302]k-nearest neighbour classifier
               o [303]k-nearest neighbor search
               o [304]k- means id91 with scipy
          + [305]     [306]mar (3)
          + [307]     [308]feb (2)
          + [309]     [310]jan (3)

     * [311]     [312]2011 (62)
          + [313]     [314]dec (4)
          + [315]     [316]nov (4)
          + [317]     [318]oct (3)
          + [319]     [320]sep (4)
          + [321]     [322]aug (3)
          + [323]     [324]jul (9)
          + [325]     [326]jun (6)
          + [327]     [328]may (16)
          + [329]     [330]apr (13)

quote

     the greatest value of a picture is that it forces us to notice what
     we never expected to see

   john tukey

subscribe to

   [arrow_dropdown.gif] posts
   [331][subscribe-netvibes.png] [332][subscribe-yahoo.png]
   [333][icon_feed12.png] atom
   [arrow_dropdown.gif] posts
   [arrow_dropdown.gif] comments
   [334][subscribe-netvibes.png] [335][subscribe-yahoo.png]
   [336][icon_feed12.png] atom
   [arrow_dropdown.gif] comments
   the glowing python is just glowing ;). powered by [337]blogger.

references

   visible links
   1. https://glowingpython.blogspot.com/feeds/posts/default
   2. https://glowingpython.blogspot.com/feeds/posts/default?alt=rss
   3. https://glowingpython.blogspot.com/feeds/465036473043427682/comments/default
   4. https://glowingpython.blogspot.com/
   5. https://1.bp.blogspot.com/-udbykisxa6c/t4fya_xu3_i/aaaaaaaaav0/2r_m2jrwpsg/s1600/knn.png
   6. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=465036473043427682&target=email
   7. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=465036473043427682&target=blog
   8. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=465036473043427682&target=twitter
   9. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=465036473043427682&target=facebook
  10. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=465036473043427682&target=pinterest
  11. https://glowingpython.blogspot.com/search/label/data mining
  12. https://glowingpython.blogspot.com/search/label/knn
  13. https://glowingpython.blogspot.com/search/label/numpy
  14. https://glowingpython.blogspot.com/search/label/search
  15. https://www.blogger.com/profile/09721355086352173334
  16. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1334853375550#c1356236628175761520
  17. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=1356236628175761520
  18. https://www.blogger.com/profile/17212021288715206641
  19. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1334854168595#c4051283825159093188
  20. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=4051283825159093188
  21. https://www.blogger.com/profile/12745086989912594780
  22. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1355310156713#c3171724888879678552
  23. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=3171724888879678552
  24. https://www.blogger.com/profile/12745086989912594780
  25. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1355311029556#c8236097544823362777
  26. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=8236097544823362777
  27. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1363953492722#c4804784818288894556
  28. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=4804784818288894556
  29. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1369335447637#c2028755540040873226
  30. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2028755540040873226
  31. https://www.blogger.com/profile/17212021288715206641
  32. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1369336691562#c9099674433033410721
  33. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=9099674433033410721
  34. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1369339469085#c3258070302127570522
  35. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=3258070302127570522
  36. https://www.blogger.com/profile/17212021288715206641
  37. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1369381411770#c3671671260979988583
  38. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=3671671260979988583
  39. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1386169378581#c5715813561051407998
  40. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5715813561051407998
  41. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1386169905333#c6758483342005396981
  42. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=6758483342005396981
  43. https://www.blogger.com/profile/17212021288715206641
  44. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1386258853003#c5225769745433449149
  45. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5225769745433449149
  46. https://www.blogger.com/profile/11162533055096729122
  47. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html?showcomment=1454429943579#c5702916713449603053
  48. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5702916713449603053
  49. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbour-classifier.html
  50. https://glowingpython.blogspot.com/2012/04/id116-id91-with-scipy.html
  51. https://glowingpython.blogspot.com/
  52. https://glowingpython.blogspot.com/feeds/465036473043427682/comments/default
  53. https://twitter.com/share
  54. http://twitter.com/justglowing
  55. https://twitter.com/justglowing
  56. https://glowingpython.blogspot.com/search/label/3d
  57. https://glowingpython.blogspot.com/search/label/ai
  58. https://glowingpython.blogspot.com/search/label/algorithms
  59. https://glowingpython.blogspot.com/search/label/andrews
  60. https://glowingpython.blogspot.com/search/label/animation
  61. https://glowingpython.blogspot.com/search/label/approximation
  62. https://glowingpython.blogspot.com/search/label/arrow
  63. https://glowingpython.blogspot.com/search/label/audio
  64. https://glowingpython.blogspot.com/search/label/automata
  65. https://glowingpython.blogspot.com/search/label/beer
  66. https://glowingpython.blogspot.com/search/label/binary
  67. https://glowingpython.blogspot.com/search/label/book
  68. https://glowingpython.blogspot.com/search/label/boxplot
  69. https://glowingpython.blogspot.com/search/label/calendar
  70. https://glowingpython.blogspot.com/search/label/carbon emissions
  71. https://glowingpython.blogspot.com/search/label/choice
  72. https://glowingpython.blogspot.com/search/label/classification
  73. https://glowingpython.blogspot.com/search/label/id91
  74. https://glowingpython.blogspot.com/search/label/color
  75. https://glowingpython.blogspot.com/search/label/complex numbers
  76. https://glowingpython.blogspot.com/search/label/conway
  77. https://glowingpython.blogspot.com/search/label/corner
  78. https://glowingpython.blogspot.com/search/label/crawler
  79. https://glowingpython.blogspot.com/search/label/cross-validation
  80. https://glowingpython.blogspot.com/search/label/curves
  81. https://glowingpython.blogspot.com/search/label/data mining
  82. https://glowingpython.blogspot.com/search/label/data structures
  83. https://glowingpython.blogspot.com/search/label/datetime
  84. https://glowingpython.blogspot.com/search/label/id90
  85. https://glowingpython.blogspot.com/search/label/derivative
  86. https://glowingpython.blogspot.com/search/label/dice
  87. https://glowingpython.blogspot.com/search/label/eigenvectors
  88. https://glowingpython.blogspot.com/search/label/energy
  89. https://glowingpython.blogspot.com/search/label/environment
  90. https://glowingpython.blogspot.com/search/label/facebook
  91. https://glowingpython.blogspot.com/search/label/features selection
  92. https://glowingpython.blogspot.com/search/label/feed
  93. https://glowingpython.blogspot.com/search/label/fft
  94. https://glowingpython.blogspot.com/search/label/files
  95. https://glowingpython.blogspot.com/search/label/filtering
  96. https://glowingpython.blogspot.com/search/label/fitting
  97. https://glowingpython.blogspot.com/search/label/football
  98. https://glowingpython.blogspot.com/search/label/forecast
  99. https://glowingpython.blogspot.com/search/label/fourier
 100. https://glowingpython.blogspot.com/search/label/fractal
 101. https://glowingpython.blogspot.com/search/label/geometric_transform
 102. https://glowingpython.blogspot.com/search/label/gif
 103. https://glowingpython.blogspot.com/search/label/ginput
 104. https://glowingpython.blogspot.com/search/label/gmail
 105. https://glowingpython.blogspot.com/search/label/google
 106. https://glowingpython.blogspot.com/search/label/hdf5
 107. https://glowingpython.blogspot.com/search/label/heatmap
 108. https://glowingpython.blogspot.com/search/label/histogram
 109. https://glowingpython.blogspot.com/search/label/image
 110. https://glowingpython.blogspot.com/search/label/imap
 111. https://glowingpython.blogspot.com/search/label/impalib
 112. https://glowingpython.blogspot.com/search/label/information retrieval
 113. https://glowingpython.blogspot.com/search/label/integral
 114. https://glowingpython.blogspot.com/search/label/interactive
 115. https://glowingpython.blogspot.com/search/label/interpolation
 116. https://glowingpython.blogspot.com/search/label/ipython
 117. https://glowingpython.blogspot.com/search/label/irc
 118. https://glowingpython.blogspot.com/search/label/jit
 119. https://glowingpython.blogspot.com/search/label/joblib
 120. https://glowingpython.blogspot.com/search/label/json
 121. https://glowingpython.blogspot.com/search/label/jukowski
 122. https://glowingpython.blogspot.com/search/label/id116
 123. https://glowingpython.blogspot.com/search/label/keras
 124. https://glowingpython.blogspot.com/search/label/knn
 125. https://glowingpython.blogspot.com/search/label/life
 126. https://glowingpython.blogspot.com/search/label/id202
 127. https://glowingpython.blogspot.com/search/label/lsa
 128. https://glowingpython.blogspot.com/search/label/machine learning
 129. https://glowingpython.blogspot.com/search/label/map
 130. https://glowingpython.blogspot.com/search/label/math
 131. https://glowingpython.blogspot.com/search/label/matplotlib
 132. https://glowingpython.blogspot.com/search/label/minimization
 133. https://glowingpython.blogspot.com/search/label/moving average
 134. https://glowingpython.blogspot.com/search/label/mp3
 135. https://glowingpython.blogspot.com/search/label/multithreading
 136. https://glowingpython.blogspot.com/search/label/natural language
 137. https://glowingpython.blogspot.com/search/label/network analysis
 138. https://glowingpython.blogspot.com/search/label/networking
 139. https://glowingpython.blogspot.com/search/label/neural network
 140. https://glowingpython.blogspot.com/search/label/nlp
 141. https://glowingpython.blogspot.com/search/label/numba
 142. https://glowingpython.blogspot.com/search/label/number theory
 143. https://glowingpython.blogspot.com/search/label/numpy
 144. https://glowingpython.blogspot.com/search/label/oop
 145. https://glowingpython.blogspot.com/search/label/opencv
 146. https://glowingpython.blogspot.com/search/label/optimization
 147. https://glowingpython.blogspot.com/search/label/outliers
 148. https://glowingpython.blogspot.com/search/label/id95
 149. https://glowingpython.blogspot.com/search/label/pandas
 150. https://glowingpython.blogspot.com/search/label/parallelization
 151. https://glowingpython.blogspot.com/search/label/pca
 152. https://glowingpython.blogspot.com/search/label/persistence
 153. https://glowingpython.blogspot.com/search/label/pi
 154. https://glowingpython.blogspot.com/search/label/picking
 155. https://glowingpython.blogspot.com/search/label/pickle
 156. https://glowingpython.blogspot.com/search/label/plotly
 157. https://glowingpython.blogspot.com/search/label/plotting
 158. https://glowingpython.blogspot.com/search/label/prediction
 159. https://glowingpython.blogspot.com/search/label/prices
 160. https://glowingpython.blogspot.com/search/label/id203
 161. https://glowingpython.blogspot.com/search/label/pylab
 162. https://glowingpython.blogspot.com/search/label/quadrature
 163. https://glowingpython.blogspot.com/search/label/random
 164. https://glowingpython.blogspot.com/search/label/re
 165. https://glowingpython.blogspot.com/search/label/reflection
 166. https://glowingpython.blogspot.com/search/label/regex
 167. https://glowingpython.blogspot.com/search/label/regression
 168. https://glowingpython.blogspot.com/search/label/review
 169. https://glowingpython.blogspot.com/search/label/rolling windws
 170. https://glowingpython.blogspot.com/search/label/rotation
 171. https://glowingpython.blogspot.com/search/label/rss
 172. https://glowingpython.blogspot.com/search/label/scikit-learn
 173. https://glowingpython.blogspot.com/search/label/scipy
 174. https://glowingpython.blogspot.com/search/label/scraping
 175. https://glowingpython.blogspot.com/search/label/seaborn
 176. https://glowingpython.blogspot.com/search/label/search
 177. https://glowingpython.blogspot.com/search/label/sequences
 178. https://glowingpython.blogspot.com/search/label/serialization
 179. https://glowingpython.blogspot.com/search/label/shape
 180. https://glowingpython.blogspot.com/search/label/signal
 181. https://glowingpython.blogspot.com/search/label/sklearn
 182. https://glowingpython.blogspot.com/search/label/socket
 183. https://glowingpython.blogspot.com/search/label/sorting
 184. https://glowingpython.blogspot.com/search/label/sound
 185. https://glowingpython.blogspot.com/search/label/speech
 186. https://glowingpython.blogspot.com/search/label/spider
 187. https://glowingpython.blogspot.com/search/label/spirals
 188. https://glowingpython.blogspot.com/search/label/stacked plot
 189. https://glowingpython.blogspot.com/search/label/statistics
 190. https://glowingpython.blogspot.com/search/label/stereo vision
 191. https://glowingpython.blogspot.com/search/label/stft
 192. https://glowingpython.blogspot.com/search/label/storage
 193. https://glowingpython.blogspot.com/search/label/string
 194. https://glowingpython.blogspot.com/search/label/structures analysis
 195. https://glowingpython.blogspot.com/search/label/summarization
 196. https://glowingpython.blogspot.com/search/label/id166
 197. https://glowingpython.blogspot.com/search/label/tangent
 198. https://glowingpython.blogspot.com/search/label/tax
 199. https://glowingpython.blogspot.com/search/label/text to speech
 200. https://glowingpython.blogspot.com/search/label/time series
 201. https://glowingpython.blogspot.com/search/label/timestamp
 202. https://glowingpython.blogspot.com/search/label/transformation
 203. https://glowingpython.blogspot.com/search/label/twitter
 204. https://glowingpython.blogspot.com/search/label/urllib
 205. https://glowingpython.blogspot.com/search/label/vector
 206. https://glowingpython.blogspot.com/search/label/visualization
 207. https://glowingpython.blogspot.com/search/label/wav
 208. https://glowingpython.blogspot.com/search/label/wikipedia
 209. https://glowingpython.blogspot.com/search/label/xml
 210. javascript:void(0)
 211. https://glowingpython.blogspot.com/2019/
 212. javascript:void(0)
 213. https://glowingpython.blogspot.com/2019/03/
 214. javascript:void(0)
 215. https://glowingpython.blogspot.com/2019/01/
 216. javascript:void(0)
 217. https://glowingpython.blogspot.com/2018/
 218. javascript:void(0)
 219. https://glowingpython.blogspot.com/2018/06/
 220. javascript:void(0)
 221. https://glowingpython.blogspot.com/2018/05/
 222. javascript:void(0)
 223. https://glowingpython.blogspot.com/2017/
 224. javascript:void(0)
 225. https://glowingpython.blogspot.com/2017/10/
 226. javascript:void(0)
 227. https://glowingpython.blogspot.com/2017/07/
 228. javascript:void(0)
 229. https://glowingpython.blogspot.com/2017/06/
 230. javascript:void(0)
 231. https://glowingpython.blogspot.com/2017/04/
 232. javascript:void(0)
 233. https://glowingpython.blogspot.com/2016/
 234. javascript:void(0)
 235. https://glowingpython.blogspot.com/2016/05/
 236. javascript:void(0)
 237. https://glowingpython.blogspot.com/2015/
 238. javascript:void(0)
 239. https://glowingpython.blogspot.com/2015/10/
 240. javascript:void(0)
 241. https://glowingpython.blogspot.com/2015/04/
 242. javascript:void(0)
 243. https://glowingpython.blogspot.com/2015/01/
 244. javascript:void(0)
 245. https://glowingpython.blogspot.com/2014/
 246. javascript:void(0)
 247. https://glowingpython.blogspot.com/2014/11/
 248. javascript:void(0)
 249. https://glowingpython.blogspot.com/2014/10/
 250. javascript:void(0)
 251. https://glowingpython.blogspot.com/2014/09/
 252. javascript:void(0)
 253. https://glowingpython.blogspot.com/2014/08/
 254. javascript:void(0)
 255. https://glowingpython.blogspot.com/2014/05/
 256. javascript:void(0)
 257. https://glowingpython.blogspot.com/2014/04/
 258. javascript:void(0)
 259. https://glowingpython.blogspot.com/2014/02/
 260. javascript:void(0)
 261. https://glowingpython.blogspot.com/2014/01/
 262. javascript:void(0)
 263. https://glowingpython.blogspot.com/2013/
 264. javascript:void(0)
 265. https://glowingpython.blogspot.com/2013/12/
 266. javascript:void(0)
 267. https://glowingpython.blogspot.com/2013/11/
 268. javascript:void(0)
 269. https://glowingpython.blogspot.com/2013/09/
 270. javascript:void(0)
 271. https://glowingpython.blogspot.com/2013/07/
 272. javascript:void(0)
 273. https://glowingpython.blogspot.com/2013/06/
 274. javascript:void(0)
 275. https://glowingpython.blogspot.com/2013/05/
 276. javascript:void(0)
 277. https://glowingpython.blogspot.com/2013/04/
 278. javascript:void(0)
 279. https://glowingpython.blogspot.com/2013/03/
 280. javascript:void(0)
 281. https://glowingpython.blogspot.com/2013/02/
 282. javascript:void(0)
 283. https://glowingpython.blogspot.com/2013/01/
 284. javascript:void(0)
 285. https://glowingpython.blogspot.com/2012/
 286. javascript:void(0)
 287. https://glowingpython.blogspot.com/2012/12/
 288. javascript:void(0)
 289. https://glowingpython.blogspot.com/2012/11/
 290. javascript:void(0)
 291. https://glowingpython.blogspot.com/2012/10/
 292. javascript:void(0)
 293. https://glowingpython.blogspot.com/2012/09/
 294. javascript:void(0)
 295. https://glowingpython.blogspot.com/2012/08/
 296. javascript:void(0)
 297. https://glowingpython.blogspot.com/2012/07/
 298. javascript:void(0)
 299. https://glowingpython.blogspot.com/2012/05/
 300. javascript:void(0)
 301. https://glowingpython.blogspot.com/2012/04/
 302. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbour-classifier.html
 303. https://glowingpython.blogspot.com/2012/04/k-nearest-neighbor-search.html
 304. https://glowingpython.blogspot.com/2012/04/id116-id91-with-scipy.html
 305. javascript:void(0)
 306. https://glowingpython.blogspot.com/2012/03/
 307. javascript:void(0)
 308. https://glowingpython.blogspot.com/2012/02/
 309. javascript:void(0)
 310. https://glowingpython.blogspot.com/2012/01/
 311. javascript:void(0)
 312. https://glowingpython.blogspot.com/2011/
 313. javascript:void(0)
 314. https://glowingpython.blogspot.com/2011/12/
 315. javascript:void(0)
 316. https://glowingpython.blogspot.com/2011/11/
 317. javascript:void(0)
 318. https://glowingpython.blogspot.com/2011/10/
 319. javascript:void(0)
 320. https://glowingpython.blogspot.com/2011/09/
 321. javascript:void(0)
 322. https://glowingpython.blogspot.com/2011/08/
 323. javascript:void(0)
 324. https://glowingpython.blogspot.com/2011/07/
 325. javascript:void(0)
 326. https://glowingpython.blogspot.com/2011/06/
 327. javascript:void(0)
 328. https://glowingpython.blogspot.com/2011/05/
 329. javascript:void(0)
 330. https://glowingpython.blogspot.com/2011/04/
 331. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/posts/default
 332. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/posts/default
 333. https://glowingpython.blogspot.com/feeds/posts/default
 334. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/465036473043427682/comments/default
 335. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/465036473043427682/comments/default
 336. https://glowingpython.blogspot.com/feeds/465036473043427682/comments/default
 337. https://www.blogger.com/

   hidden links:
 339. https://www.blogger.com/post-edit.g?blogid=1693014329567144872&postid=465036473043427682&from=pencil
 340. https://www.blogger.com/comment-iframe.g?blogid=1693014329567144872&postid=465036473043427682
 341. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=adsense&widgetid=adsense1&action=editwidget&sectionid=sidebar-right-1
 342. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=html&widgetid=html1&action=editwidget&sectionid=sidebar-right-1
 343. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text1&action=editwidget&sectionid=sidebar-right-1
 344. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=image&widgetid=image1&action=editwidget&sectionid=sidebar-right-1
 345. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=label&widgetid=label1&action=editwidget&sectionid=sidebar-right-1
 346. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=followers&widgetid=followers1&action=editwidget&sectionid=sidebar-right-1
 347. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogsearch&widgetid=blogsearch1&action=editwidget&sectionid=sidebar-right-1
 348. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogarchive&widgetid=blogarchive1&action=editwidget&sectionid=sidebar-right-1
 349. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text3&action=editwidget&sectionid=footer-2-1
 350. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=subscribe&widgetid=subscribe2&action=editwidget&sectionid=footer-2-2
 351. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=attribution&widgetid=attribution1&action=editwidget&sectionid=footer-3
