   #[1]the glowing python - atom [2]the glowing python - rss [3]the
   glowing python - atom

   [4]the glowing python

   a collection of sloppy snippets for scientific computing and data
   visualization in python.

saturday, march 24, 2012

id75 with numpy

   [5]few post ago, we have seen how to use the function
   numpy.linalg.lstsq(...) to solve an over-determined system. this time,
   we'll use it to estimate the parameters of a [6]regression line.
   a id75 line is of the form w[1]x+w[2]=y and it is the line
   that minimizes the sum of the squares of the distance from each data
   point to the line. so, given n pairs of data (x[i], y[i]), the
   parameters that we are looking for are w[1] and w[2] which minimize the
   error
   [7][lineregopt.png]
   and we can compute the parameter vector w = (w[1] , w[2])^t as the
   least-squares solution of the following over-determined system
   [8][sysregline.png]
   let's use numpy to compute the regression line:
from numpy import arange,array,ones,linalg
from pylab import plot,show

xi = arange(0,9)
a = array([ xi, ones(9)])
# linearly generated sequence
y = [19, 20, 20.5, 21.5, 22, 23, 23, 25.5, 24]
w = linalg.lstsq(a.t,y)[0] # obtaining the parameters

# plotting the line
line = w[0]*xi+w[1] # regression line
plot(xi,line,'r-',xi,y,'o')
show()

   we can see the result in the plot below.
   [9][linereg.png]
   you can find more about data fitting using numpy in the following
   posts:
     * [10]polynomial curve fitting
     * [11]curve fitting using fmin

   update, the same result could be achieve using the function
   scipy.stats.linregress (thanks ianalis!):
from numpy import arange,array,ones#,random,linalg
from pylab import plot,show
from scipy import stats

xi = arange(0,9)
a = array([ xi, ones(9)])
# linearly generated sequence
y = [19, 20, 20.5, 21.5, 22, 23, 23, 25.5, 24]

slope, intercept, r_value, p_value, std_err = stats.linregress(xi,y)

print 'r value', r_value
print  'p_value', p_value
print 'standard deviation', std_err

line = slope*xi+intercept
plot(xi,line,'r-',xi,y,'o')
show()

   [12]email this[13]blogthis![14]share to twitter[15]share to
   facebook[16]share to pinterest
   labels: [17]fitting, [18]id202, [19]numpy, [20]scipy,
   [21]statistics

27 comments:

    1. [22]g. steve arnold[23]march 24, 2012 at 2:36 pm
       possible bugs: x_lst is unused and w[] is undefined?
       reply[24]delete
       replies
            reply
    2. [25]justglowing[26]march 24, 2012 at 2:41 pm
       thanks steve, i fixed it. i changed the code at the end to make it
       consisted with the notation.
       reply[27]delete
       replies
            reply
    3. [28]ianalis[29]march 27, 2012 at 12:09 am
       another method is to use scipy.stats.linregress()
       reply[30]delete
       replies
         1. anonymous[31]november 27, 2012 at 5:37 pm
            in the particular case when y=w1*x+w2 you can use both
            linregress and lstsq as shown above.
            when you want to regress to multiple x-s, e.g.
            y=w1*x1+w2*x2+w3*x3 you need to use lstsq.
            [32]delete
            replies
                 reply
            reply
    4. anonymous[33]october 15, 2012 at 2:06 am
       what is the r_value and the p_value in the second program? what do
       they represent?
       reply[34]delete
       replies
            reply
    5. [35]justglowing[36]october 15, 2012 at 8:09 am
       r_value is the correlation coefficient and p_value is the p-value
       for a hypothesis test whose null hypothesis is that the slope is
       zero.
       for more information about correlation you can fin my last post:
       http://glowingpython.blogspot.com/2012/10/visualizing-correlation-m
       atrices.html
       and you can find more about p-value here:
       http://en.wikipedia.org/wiki/p-value
       reply[37]delete
       replies
            reply
    6. anonymous[38]october 22, 2012 at 3:01 pm
       how can i get the sum squared error of the regression from this
       function ??
       reply[39]delete
       replies
         1. [40]justglowing[41]october 22, 2012 at 3:19 pm
            you can compute the mean square error as follows:
            err=sqrt(sum((line-xi)**2)/n)
            [42]delete
            replies
                 reply
         2. anonymous[43]october 22, 2012 at 3:35 pm
            thank you, and what's n in this case? the number of rows in
            the 2d list ??
            [44]delete
            replies
                 reply
         3. [45]justglowing[46]october 22, 2012 at 3:39 pm
            n is the number of samples that you have: n = len(y).
            btw, there's a mistake in my last comment, the squared error
            is err=sqrt(sum((line-y)**2)/n)
            [47]delete
            replies
                 reply
            reply
    7. anonymous[48]october 24, 2012 at 3:50 pm
       is there a way to calculate the maximum and minimum gradient, given
       multiple pairs of (x,y) measurements at each point e.g. repeated
       trials? thanks!!
       reply[49]delete
       replies
            reply
    8. andrew m[50]january 30, 2013 at 4:36 pm
       the following function is quite nice: scipy.stats.linregress
       http://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.lin
       regress.html
       it provides the p-value and r-value without extra work.
       reply[51]delete
       replies
            reply
    9. [52]jared forsyth[53]april 20, 2013 at 2:21 am
       awesome! just what i was looking for.
       reply[54]delete
       replies
            reply
   10. [55]david[56]february 4, 2014 at 9:29 pm
       this comment has been removed by the author.
       reply[57]delete
       replies
            reply
   11. [58]david[59]february 4, 2014 at 9:38 pm
       i stumbled upon this fine piece of work, and it seemed to work just
       fine.
       i although came across a problem, once the slope (from the updated
       code) turned either negative or below zero which meant that the
       "line" list became empty. to solve this, i simply did the following
       instead which solved my issue:
       line = a[0]+intercept
       reply[60]delete
       replies
         1. [61]david[62]february 4, 2014 at 9:45 pm
            update:
            while the data now provided is correct, i ran into yet another
            issue. when i tried to plot the line for a negative
            coefficient, it didn't plot the slope as going downwards, but
            rather upwards. i couldn't get to solve the issue so instead,
            i ended up using the following library:
            coefficients = np.polyfit(xi, y, 1)
            polynomial = np.poly1d(coefficients)
            ys = polynomial(xi)
            plot(xi, ys, 'r-', xi, y, 'o')
            show()
            source:
            http://sdtidbits.blogspot.dk/2009/03/curve-fitting-and-plottin
            g-in-python.html
            * note that this requires that you: import numpy as np
            i will investigate this issue further and hopefully find away
            around this issue as i like the extra variables which the
            original code from this blog post provides. until then, i will
            use the two libraries together to avoid any further issues, as
            i am still interested in the "r"- and "p"-values as well the
            standard error.
            [63]delete
            replies
                 reply
         2. [64]david[65]february 4, 2014 at 10:31 pm
            alright, so i finally managed to find a solution which
            combines the best of both worlds basically hassle-free. the
            approach is basically the same as from the updated original
            code:
            slope, intercept, r_value, p_value, std_err =
            stats.linregress(xi,y)
            instead of calculating the "line", i managed to solve my
            issues as explained above doing the following:
            polynomial = np.poly1d([slope, intercept])
            line = polynomial(xi)
            plot(xi, line, 'r-', xi, y, 'o')
            show()
            and there you have it; a solution which also works when the
            coefficient is below 1! this also means, that you no longer
            have to use the "a" matrix as implemented in the original
            code; which doesn't seem to be used anyhow.
            thanks for the great work, to the original author!
            [66]delete
            replies
                 reply
            reply
   12. [67]justglowing[68]february 5, 2014 at 1:09 pm
       hi david, at the moment i'm using the implementation provided by
       sklearn, maybe you could find it helpful:
       http://scikit-learn.org/stable/auto_examples/linear_model/plot_ols.
       html#example-linear-model-plot-ols-py
       reply[69]delete
       replies
            reply
   13. anonymous[70]february 14, 2014 at 6:38 am
       this comment has been removed by a blog administrator.
       reply[71]delete
       replies
            reply
   14. [72]adviser[73]april 10, 2014 at 4:14 am
       how about a 2d id75 ? can you please suggest whats the
       easiest way to perform the same analysis on a 2d dataset ?
       reply[74]delete
       replies
         1. [75]justglowing[76]april 10, 2014 at 8:56 am
            hi adviser, you could try the id75 module
            provided by sklearn. you can find the link some comments
            above.
            [77]delete
            replies
                 reply
            reply
   15. anonymous[78]april 11, 2014 at 5:03 am
       is there an easy way to plot a regression line that would be based
       only part of the y data. for example plot the whole y but plot
       regression line only for:
       [20.5, 21.5, 22, 23, 23, 25.5, 24]
       reply[79]delete
       replies
         1. [80]justglowing[81]april 11, 2014 at 9:27 am
            it should be very simple, you create your shorter version of y
            and you apply the regression to this data. then, you plot the
            regression line and the the points of the original data as
            showed in the post.
            [82]delete
            replies
                 reply
            reply
   16. anonymous[83]july 30, 2014 at 3:56 pm
       std_err is not standard deviation, but the error of the estimated
       slope!
       reply[84]delete
       replies
            reply
   17. [85]javier lazaro[86]january 25, 2017 at 11:58 am
       is it necessary to add "ones(9)"? i usually have just the
       independent variable x, and the dependent one y,... i don't know
       how, why and when should i add ones column to my independent var
       (x). regards
       reply[87]delete
       replies
            reply
   18. [88]javier lazaro[89]january 25, 2017 at 12:02 pm
       just one more,... how to predict the new data set with my new set
       of points? y use xtrain and y train, the model
       w=inv(xtrain.t*xtrain)*xtrain.t*ytrain , with np.dot, of course...
       so when predicting y use ypred = xvalid*w, ... but it's not working
       to me :(
       reply[90]delete
       replies
         1. [91]justglowing[92]january 25, 2017 at 2:45 pm
            hi javier, given your two questions i'd recommend you to check
            http://scikit-learn.org/stable/modules/generated/sklearn.linea
            r_model.linearregression.html
            this takes care of the "ones" and the prediction for you.
            [93]delete
            replies
                 reply
            reply

   add comment
   load more...

   [94]newer post [95]older post [96]home
   subscribe to: [97]post comments (atom)

   [ins: :ins]

tweet this blog!

   [98]tweet

follow the glowing python

                                     on
                           [99][twitter_logo.jpg]

   [100]follow @justglowing

things you can find here

   [101]3d [102]ai [103]algorithms [104]andrews [105]animation
   [106]approximation [107]arrow [108]audio [109]automata [110]beer
   [111]binary [112]book [113]boxplot [114]calendar [115]carbon emissions
   [116]choice [117]classification [118]id91 [119]color [120]complex
   numbers [121]conway [122]corner [123]crawler [124]cross-validation
   [125]curves [126]data mining [127]data structures [128]datetime
   [129]id90 [130]derivative [131]dice [132]eigenvectors
   [133]energy [134]environment [135]facebook [136]features selection
   [137]feed [138]fft [139]files [140]filtering [141]fitting [142]football
   [143]forecast [144]fourier [145]fractal [146]geometric_transform
   [147]gif [148]ginput [149]gmail [150]google [151]hdf5 [152]heatmap
   [153]histogram [154]image [155]imap [156]impalib [157]information
   retrieval [158]integral [159]interactive [160]interpolation
   [161]ipython [162]irc [163]jit [164]joblib [165]json [166]jukowski
   [167]id116 [168]keras [169]knn [170]life [171]id202 [172]lsa
   [173]machine learning [174]map [175]math [176]matplotlib
   [177]minimization [178]moving average [179]mp3 [180]multithreading
   [181]natural language [182]network analysis [183]networking [184]neural
   network [185]nlp [186]numba [187]number theory [188]numpy [189]oop
   [190]opencv [191]optimization [192]outliers [193]id95 [194]pandas
   [195]parallelization [196]pca [197]persistence [198]pi [199]picking
   [200]pickle [201]plotly [202]plotting [203]prediction [204]prices
   [205]id203 [206]pylab [207]quadrature [208]random [209]re
   [210]reflection [211]regex [212]regression [213]review [214]rolling
   windws [215]rotation [216]rss [217]scikit-learn [218]scipy
   [219]scraping [220]seaborn [221]search [222]sequences
   [223]serialization [224]shape [225]signal [226]sklearn [227]socket
   [228]sorting [229]sound [230]speech [231]spider [232]spirals
   [233]stacked plot [234]statistics [235]stereo vision [236]stft
   [237]storage [238]string [239]structures analysis [240]summarization
   [241]id166 [242]tangent [243]tax [244]text to speech [245]time series
   [246]timestamp [247]transformation [248]twitter [249]urllib [250]vector
   [251]visualization [252]wav [253]wikipedia [254]xml

followers

looking for a snippet?

   __________ search

archive

     * [255]     [256]2019 (4)
          + [257]     [258]mar (3)
          + [259]     [260]jan (1)

     * [261]     [262]2018 (2)
          + [263]     [264]jun (1)
          + [265]     [266]may (1)

     * [267]     [268]2017 (4)
          + [269]     [270]oct (1)
          + [271]     [272]jul (1)
          + [273]     [274]jun (1)
          + [275]     [276]apr (1)

     * [277]     [278]2016 (1)
          + [279]     [280]may (1)

     * [281]     [282]2015 (3)
          + [283]     [284]oct (1)
          + [285]     [286]apr (1)
          + [287]     [288]jan (1)

     * [289]     [290]2014 (9)
          + [291]     [292]nov (1)
          + [293]     [294]oct (1)
          + [295]     [296]sep (1)
          + [297]     [298]aug (2)
          + [299]     [300]may (1)
          + [301]     [302]apr (1)
          + [303]     [304]feb (1)
          + [305]     [306]jan (1)

     * [307]     [308]2013 (20)
          + [309]     [310]dec (1)
          + [311]     [312]nov (1)
          + [313]     [314]sep (1)
          + [315]     [316]jul (2)
          + [317]     [318]jun (2)
          + [319]     [320]may (2)
          + [321]     [322]apr (2)
          + [323]     [324]mar (3)
          + [325]     [326]feb (3)
          + [327]     [328]jan (3)

     * [329]     [330]2012 (23)
          + [331]     [332]dec (2)
          + [333]     [334]nov (2)
          + [335]     [336]oct (1)
          + [337]     [338]sep (2)
          + [339]     [340]aug (1)
          + [341]     [342]jul (2)
          + [343]     [344]may (2)
          + [345]     [346]apr (3)
          + [347]     [348]mar (3)
               o [349]id75 with numpy
               o [350]svd decomposition with numpy
               o [351]solving overdetermined systems with the qr
                 decompo...
          + [352]     [353]feb (2)
          + [354]     [355]jan (3)

     * [356]     [357]2011 (62)
          + [358]     [359]dec (4)
          + [360]     [361]nov (4)
          + [362]     [363]oct (3)
          + [364]     [365]sep (4)
          + [366]     [367]aug (3)
          + [368]     [369]jul (9)
          + [370]     [371]jun (6)
          + [372]     [373]may (16)
          + [374]     [375]apr (13)

quote

     the greatest value of a picture is that it forces us to notice what
     we never expected to see

   john tukey

subscribe to

   [arrow_dropdown.gif] posts
   [376][subscribe-netvibes.png] [377][subscribe-yahoo.png]
   [378][icon_feed12.png] atom
   [arrow_dropdown.gif] posts
   [arrow_dropdown.gif] comments
   [379][subscribe-netvibes.png] [380][subscribe-yahoo.png]
   [381][icon_feed12.png] atom
   [arrow_dropdown.gif] comments
   the glowing python is just glowing ;). powered by [382]blogger.

references

   visible links
   1. https://glowingpython.blogspot.com/feeds/posts/default
   2. https://glowingpython.blogspot.com/feeds/posts/default?alt=rss
   3. https://glowingpython.blogspot.com/feeds/6865968811065092320/comments/default
   4. https://glowingpython.blogspot.com/
   5. http:///
   6. http://en.wikipedia.org/wiki/linear_regression
   7. https://3.bp.blogspot.com/-uf6klfhkcyq/t2cuiukt8li/aaaaaaaaaum/j33suvqrdd8/s1600/lineregopt.png
   8. https://2.bp.blogspot.com/-iswkphe5fsw/t22dnaz1e8i/aaaaaaaaaug/q-ap5mktgne/s1600/sysregline.png
   9. https://2.bp.blogspot.com/-eex0cfuahhs/t2cowyttyji/aaaaaaaaat0/gu48nahobfo/s1600/linereg.png
  10. http://glowingpython.blogspot.it/2011/07/polynomial-curve-fitting.html
  11. http://glowingpython.blogspot.it/2011/05/curve-fitting-using-fmin.html
  12. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=6865968811065092320&target=email
  13. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=6865968811065092320&target=blog
  14. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=6865968811065092320&target=twitter
  15. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=6865968811065092320&target=facebook
  16. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=6865968811065092320&target=pinterest
  17. https://glowingpython.blogspot.com/search/label/fitting
  18. https://glowingpython.blogspot.com/search/label/id202
  19. https://glowingpython.blogspot.com/search/label/numpy
  20. https://glowingpython.blogspot.com/search/label/scipy
  21. https://glowingpython.blogspot.com/search/label/statistics
  22. https://www.blogger.com/profile/14630142782594497646
  23. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1332599784872#c8817814473873695705
  24. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=8817814473873695705
  25. https://www.blogger.com/profile/17212021288715206641
  26. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1332600119836#c860150977157299113
  27. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=860150977157299113
  28. https://www.blogger.com/profile/01773990348425956371
  29. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1332803395932#c6555194149997985337
  30. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=6555194149997985337
  31. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1354037879574#c123534024232718827
  32. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=123534024232718827
  33. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1350263193942#c1155536415663112888
  34. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=1155536415663112888
  35. https://www.blogger.com/profile/17212021288715206641
  36. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1350284954111#c7755168376738763230
  37. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=7755168376738763230
  38. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1350914492283#c2277304822122329790
  39. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2277304822122329790
  40. https://www.blogger.com/profile/17212021288715206641
  41. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1350915546007#c4250665029170900793
  42. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=4250665029170900793
  43. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1350916532087#c2592403686690468903
  44. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2592403686690468903
  45. https://www.blogger.com/profile/17212021288715206641
  46. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1350916753463#c4313864591542658618
  47. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=4313864591542658618
  48. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1351090231736#c5625251129702856516
  49. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5625251129702856516
  50. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1359563801398#c775572368661222058
  51. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=775572368661222058
  52. https://www.blogger.com/profile/15235563645979524582
  53. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1366420887835#c4798057690988768403
  54. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=4798057690988768403
  55. https://www.blogger.com/profile/09229466344841958534
  56. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1391549345093#c1225973331537239732
  57. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=1225973331537239732
  58. https://www.blogger.com/profile/09229466344841958534
  59. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1391549887495#c6259219273235624265
  60. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=6259219273235624265
  61. https://www.blogger.com/profile/09229466344841958534
  62. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1391550324995#c608593674617365984
  63. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=608593674617365984
  64. https://www.blogger.com/profile/09229466344841958534
  65. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1391553078611#c2505057461294267839
  66. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2505057461294267839
  67. https://www.blogger.com/profile/17212021288715206641
  68. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1391605757604#c324881913783329098
  69. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=324881913783329098
  70. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1392359927634#c5976214100657455341
  71. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5976214100657455341
  72. https://www.blogger.com/profile/03463398018567048410
  73. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1397099683559#c5538283205689674694
  74. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5538283205689674694
  75. https://www.blogger.com/profile/17212021288715206641
  76. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1397116613268#c5517598704443280860
  77. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5517598704443280860
  78. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1397189029546#c6632737767967020589
  79. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=6632737767967020589
  80. https://www.blogger.com/profile/17212021288715206641
  81. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1397204831969#c7211945337260953404
  82. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=7211945337260953404
  83. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1406732199629#c2038075640014125538
  84. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2038075640014125538
  85. https://www.blogger.com/profile/09355965255599164055
  86. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1485345504635#c2176462463897825908
  87. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2176462463897825908
  88. https://www.blogger.com/profile/09355965255599164055
  89. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1485345722942#c4686117310348925674
  90. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=4686117310348925674
  91. https://www.blogger.com/profile/17212021288715206641
  92. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html?showcomment=1485355510117#c8265660998335660821
  93. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=8265660998335660821
  94. https://glowingpython.blogspot.com/2012/04/id116-id91-with-scipy.html
  95. https://glowingpython.blogspot.com/2011/06/svd-decomposition-with-numpy.html
  96. https://glowingpython.blogspot.com/
  97. https://glowingpython.blogspot.com/feeds/6865968811065092320/comments/default
  98. https://twitter.com/share
  99. http://twitter.com/justglowing
 100. https://twitter.com/justglowing
 101. https://glowingpython.blogspot.com/search/label/3d
 102. https://glowingpython.blogspot.com/search/label/ai
 103. https://glowingpython.blogspot.com/search/label/algorithms
 104. https://glowingpython.blogspot.com/search/label/andrews
 105. https://glowingpython.blogspot.com/search/label/animation
 106. https://glowingpython.blogspot.com/search/label/approximation
 107. https://glowingpython.blogspot.com/search/label/arrow
 108. https://glowingpython.blogspot.com/search/label/audio
 109. https://glowingpython.blogspot.com/search/label/automata
 110. https://glowingpython.blogspot.com/search/label/beer
 111. https://glowingpython.blogspot.com/search/label/binary
 112. https://glowingpython.blogspot.com/search/label/book
 113. https://glowingpython.blogspot.com/search/label/boxplot
 114. https://glowingpython.blogspot.com/search/label/calendar
 115. https://glowingpython.blogspot.com/search/label/carbon emissions
 116. https://glowingpython.blogspot.com/search/label/choice
 117. https://glowingpython.blogspot.com/search/label/classification
 118. https://glowingpython.blogspot.com/search/label/id91
 119. https://glowingpython.blogspot.com/search/label/color
 120. https://glowingpython.blogspot.com/search/label/complex numbers
 121. https://glowingpython.blogspot.com/search/label/conway
 122. https://glowingpython.blogspot.com/search/label/corner
 123. https://glowingpython.blogspot.com/search/label/crawler
 124. https://glowingpython.blogspot.com/search/label/cross-validation
 125. https://glowingpython.blogspot.com/search/label/curves
 126. https://glowingpython.blogspot.com/search/label/data mining
 127. https://glowingpython.blogspot.com/search/label/data structures
 128. https://glowingpython.blogspot.com/search/label/datetime
 129. https://glowingpython.blogspot.com/search/label/id90
 130. https://glowingpython.blogspot.com/search/label/derivative
 131. https://glowingpython.blogspot.com/search/label/dice
 132. https://glowingpython.blogspot.com/search/label/eigenvectors
 133. https://glowingpython.blogspot.com/search/label/energy
 134. https://glowingpython.blogspot.com/search/label/environment
 135. https://glowingpython.blogspot.com/search/label/facebook
 136. https://glowingpython.blogspot.com/search/label/features selection
 137. https://glowingpython.blogspot.com/search/label/feed
 138. https://glowingpython.blogspot.com/search/label/fft
 139. https://glowingpython.blogspot.com/search/label/files
 140. https://glowingpython.blogspot.com/search/label/filtering
 141. https://glowingpython.blogspot.com/search/label/fitting
 142. https://glowingpython.blogspot.com/search/label/football
 143. https://glowingpython.blogspot.com/search/label/forecast
 144. https://glowingpython.blogspot.com/search/label/fourier
 145. https://glowingpython.blogspot.com/search/label/fractal
 146. https://glowingpython.blogspot.com/search/label/geometric_transform
 147. https://glowingpython.blogspot.com/search/label/gif
 148. https://glowingpython.blogspot.com/search/label/ginput
 149. https://glowingpython.blogspot.com/search/label/gmail
 150. https://glowingpython.blogspot.com/search/label/google
 151. https://glowingpython.blogspot.com/search/label/hdf5
 152. https://glowingpython.blogspot.com/search/label/heatmap
 153. https://glowingpython.blogspot.com/search/label/histogram
 154. https://glowingpython.blogspot.com/search/label/image
 155. https://glowingpython.blogspot.com/search/label/imap
 156. https://glowingpython.blogspot.com/search/label/impalib
 157. https://glowingpython.blogspot.com/search/label/information retrieval
 158. https://glowingpython.blogspot.com/search/label/integral
 159. https://glowingpython.blogspot.com/search/label/interactive
 160. https://glowingpython.blogspot.com/search/label/interpolation
 161. https://glowingpython.blogspot.com/search/label/ipython
 162. https://glowingpython.blogspot.com/search/label/irc
 163. https://glowingpython.blogspot.com/search/label/jit
 164. https://glowingpython.blogspot.com/search/label/joblib
 165. https://glowingpython.blogspot.com/search/label/json
 166. https://glowingpython.blogspot.com/search/label/jukowski
 167. https://glowingpython.blogspot.com/search/label/id116
 168. https://glowingpython.blogspot.com/search/label/keras
 169. https://glowingpython.blogspot.com/search/label/knn
 170. https://glowingpython.blogspot.com/search/label/life
 171. https://glowingpython.blogspot.com/search/label/id202
 172. https://glowingpython.blogspot.com/search/label/lsa
 173. https://glowingpython.blogspot.com/search/label/machine learning
 174. https://glowingpython.blogspot.com/search/label/map
 175. https://glowingpython.blogspot.com/search/label/math
 176. https://glowingpython.blogspot.com/search/label/matplotlib
 177. https://glowingpython.blogspot.com/search/label/minimization
 178. https://glowingpython.blogspot.com/search/label/moving average
 179. https://glowingpython.blogspot.com/search/label/mp3
 180. https://glowingpython.blogspot.com/search/label/multithreading
 181. https://glowingpython.blogspot.com/search/label/natural language
 182. https://glowingpython.blogspot.com/search/label/network analysis
 183. https://glowingpython.blogspot.com/search/label/networking
 184. https://glowingpython.blogspot.com/search/label/neural network
 185. https://glowingpython.blogspot.com/search/label/nlp
 186. https://glowingpython.blogspot.com/search/label/numba
 187. https://glowingpython.blogspot.com/search/label/number theory
 188. https://glowingpython.blogspot.com/search/label/numpy
 189. https://glowingpython.blogspot.com/search/label/oop
 190. https://glowingpython.blogspot.com/search/label/opencv
 191. https://glowingpython.blogspot.com/search/label/optimization
 192. https://glowingpython.blogspot.com/search/label/outliers
 193. https://glowingpython.blogspot.com/search/label/id95
 194. https://glowingpython.blogspot.com/search/label/pandas
 195. https://glowingpython.blogspot.com/search/label/parallelization
 196. https://glowingpython.blogspot.com/search/label/pca
 197. https://glowingpython.blogspot.com/search/label/persistence
 198. https://glowingpython.blogspot.com/search/label/pi
 199. https://glowingpython.blogspot.com/search/label/picking
 200. https://glowingpython.blogspot.com/search/label/pickle
 201. https://glowingpython.blogspot.com/search/label/plotly
 202. https://glowingpython.blogspot.com/search/label/plotting
 203. https://glowingpython.blogspot.com/search/label/prediction
 204. https://glowingpython.blogspot.com/search/label/prices
 205. https://glowingpython.blogspot.com/search/label/id203
 206. https://glowingpython.blogspot.com/search/label/pylab
 207. https://glowingpython.blogspot.com/search/label/quadrature
 208. https://glowingpython.blogspot.com/search/label/random
 209. https://glowingpython.blogspot.com/search/label/re
 210. https://glowingpython.blogspot.com/search/label/reflection
 211. https://glowingpython.blogspot.com/search/label/regex
 212. https://glowingpython.blogspot.com/search/label/regression
 213. https://glowingpython.blogspot.com/search/label/review
 214. https://glowingpython.blogspot.com/search/label/rolling windws
 215. https://glowingpython.blogspot.com/search/label/rotation
 216. https://glowingpython.blogspot.com/search/label/rss
 217. https://glowingpython.blogspot.com/search/label/scikit-learn
 218. https://glowingpython.blogspot.com/search/label/scipy
 219. https://glowingpython.blogspot.com/search/label/scraping
 220. https://glowingpython.blogspot.com/search/label/seaborn
 221. https://glowingpython.blogspot.com/search/label/search
 222. https://glowingpython.blogspot.com/search/label/sequences
 223. https://glowingpython.blogspot.com/search/label/serialization
 224. https://glowingpython.blogspot.com/search/label/shape
 225. https://glowingpython.blogspot.com/search/label/signal
 226. https://glowingpython.blogspot.com/search/label/sklearn
 227. https://glowingpython.blogspot.com/search/label/socket
 228. https://glowingpython.blogspot.com/search/label/sorting
 229. https://glowingpython.blogspot.com/search/label/sound
 230. https://glowingpython.blogspot.com/search/label/speech
 231. https://glowingpython.blogspot.com/search/label/spider
 232. https://glowingpython.blogspot.com/search/label/spirals
 233. https://glowingpython.blogspot.com/search/label/stacked plot
 234. https://glowingpython.blogspot.com/search/label/statistics
 235. https://glowingpython.blogspot.com/search/label/stereo vision
 236. https://glowingpython.blogspot.com/search/label/stft
 237. https://glowingpython.blogspot.com/search/label/storage
 238. https://glowingpython.blogspot.com/search/label/string
 239. https://glowingpython.blogspot.com/search/label/structures analysis
 240. https://glowingpython.blogspot.com/search/label/summarization
 241. https://glowingpython.blogspot.com/search/label/id166
 242. https://glowingpython.blogspot.com/search/label/tangent
 243. https://glowingpython.blogspot.com/search/label/tax
 244. https://glowingpython.blogspot.com/search/label/text to speech
 245. https://glowingpython.blogspot.com/search/label/time series
 246. https://glowingpython.blogspot.com/search/label/timestamp
 247. https://glowingpython.blogspot.com/search/label/transformation
 248. https://glowingpython.blogspot.com/search/label/twitter
 249. https://glowingpython.blogspot.com/search/label/urllib
 250. https://glowingpython.blogspot.com/search/label/vector
 251. https://glowingpython.blogspot.com/search/label/visualization
 252. https://glowingpython.blogspot.com/search/label/wav
 253. https://glowingpython.blogspot.com/search/label/wikipedia
 254. https://glowingpython.blogspot.com/search/label/xml
 255. javascript:void(0)
 256. https://glowingpython.blogspot.com/2019/
 257. javascript:void(0)
 258. https://glowingpython.blogspot.com/2019/03/
 259. javascript:void(0)
 260. https://glowingpython.blogspot.com/2019/01/
 261. javascript:void(0)
 262. https://glowingpython.blogspot.com/2018/
 263. javascript:void(0)
 264. https://glowingpython.blogspot.com/2018/06/
 265. javascript:void(0)
 266. https://glowingpython.blogspot.com/2018/05/
 267. javascript:void(0)
 268. https://glowingpython.blogspot.com/2017/
 269. javascript:void(0)
 270. https://glowingpython.blogspot.com/2017/10/
 271. javascript:void(0)
 272. https://glowingpython.blogspot.com/2017/07/
 273. javascript:void(0)
 274. https://glowingpython.blogspot.com/2017/06/
 275. javascript:void(0)
 276. https://glowingpython.blogspot.com/2017/04/
 277. javascript:void(0)
 278. https://glowingpython.blogspot.com/2016/
 279. javascript:void(0)
 280. https://glowingpython.blogspot.com/2016/05/
 281. javascript:void(0)
 282. https://glowingpython.blogspot.com/2015/
 283. javascript:void(0)
 284. https://glowingpython.blogspot.com/2015/10/
 285. javascript:void(0)
 286. https://glowingpython.blogspot.com/2015/04/
 287. javascript:void(0)
 288. https://glowingpython.blogspot.com/2015/01/
 289. javascript:void(0)
 290. https://glowingpython.blogspot.com/2014/
 291. javascript:void(0)
 292. https://glowingpython.blogspot.com/2014/11/
 293. javascript:void(0)
 294. https://glowingpython.blogspot.com/2014/10/
 295. javascript:void(0)
 296. https://glowingpython.blogspot.com/2014/09/
 297. javascript:void(0)
 298. https://glowingpython.blogspot.com/2014/08/
 299. javascript:void(0)
 300. https://glowingpython.blogspot.com/2014/05/
 301. javascript:void(0)
 302. https://glowingpython.blogspot.com/2014/04/
 303. javascript:void(0)
 304. https://glowingpython.blogspot.com/2014/02/
 305. javascript:void(0)
 306. https://glowingpython.blogspot.com/2014/01/
 307. javascript:void(0)
 308. https://glowingpython.blogspot.com/2013/
 309. javascript:void(0)
 310. https://glowingpython.blogspot.com/2013/12/
 311. javascript:void(0)
 312. https://glowingpython.blogspot.com/2013/11/
 313. javascript:void(0)
 314. https://glowingpython.blogspot.com/2013/09/
 315. javascript:void(0)
 316. https://glowingpython.blogspot.com/2013/07/
 317. javascript:void(0)
 318. https://glowingpython.blogspot.com/2013/06/
 319. javascript:void(0)
 320. https://glowingpython.blogspot.com/2013/05/
 321. javascript:void(0)
 322. https://glowingpython.blogspot.com/2013/04/
 323. javascript:void(0)
 324. https://glowingpython.blogspot.com/2013/03/
 325. javascript:void(0)
 326. https://glowingpython.blogspot.com/2013/02/
 327. javascript:void(0)
 328. https://glowingpython.blogspot.com/2013/01/
 329. javascript:void(0)
 330. https://glowingpython.blogspot.com/2012/
 331. javascript:void(0)
 332. https://glowingpython.blogspot.com/2012/12/
 333. javascript:void(0)
 334. https://glowingpython.blogspot.com/2012/11/
 335. javascript:void(0)
 336. https://glowingpython.blogspot.com/2012/10/
 337. javascript:void(0)
 338. https://glowingpython.blogspot.com/2012/09/
 339. javascript:void(0)
 340. https://glowingpython.blogspot.com/2012/08/
 341. javascript:void(0)
 342. https://glowingpython.blogspot.com/2012/07/
 343. javascript:void(0)
 344. https://glowingpython.blogspot.com/2012/05/
 345. javascript:void(0)
 346. https://glowingpython.blogspot.com/2012/04/
 347. javascript:void(0)
 348. https://glowingpython.blogspot.com/2012/03/
 349. https://glowingpython.blogspot.com/2012/03/linear-regression-with-numpy.html
 350. https://glowingpython.blogspot.com/2011/06/svd-decomposition-with-numpy.html
 351. https://glowingpython.blogspot.com/2012/03/solving-overdetermined-systems-with-qr.html
 352. javascript:void(0)
 353. https://glowingpython.blogspot.com/2012/02/
 354. javascript:void(0)
 355. https://glowingpython.blogspot.com/2012/01/
 356. javascript:void(0)
 357. https://glowingpython.blogspot.com/2011/
 358. javascript:void(0)
 359. https://glowingpython.blogspot.com/2011/12/
 360. javascript:void(0)
 361. https://glowingpython.blogspot.com/2011/11/
 362. javascript:void(0)
 363. https://glowingpython.blogspot.com/2011/10/
 364. javascript:void(0)
 365. https://glowingpython.blogspot.com/2011/09/
 366. javascript:void(0)
 367. https://glowingpython.blogspot.com/2011/08/
 368. javascript:void(0)
 369. https://glowingpython.blogspot.com/2011/07/
 370. javascript:void(0)
 371. https://glowingpython.blogspot.com/2011/06/
 372. javascript:void(0)
 373. https://glowingpython.blogspot.com/2011/05/
 374. javascript:void(0)
 375. https://glowingpython.blogspot.com/2011/04/
 376. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/posts/default
 377. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/posts/default
 378. https://glowingpython.blogspot.com/feeds/posts/default
 379. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/6865968811065092320/comments/default
 380. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/6865968811065092320/comments/default
 381. https://glowingpython.blogspot.com/feeds/6865968811065092320/comments/default
 382. https://www.blogger.com/

   hidden links:
 384. https://www.blogger.com/post-edit.g?blogid=1693014329567144872&postid=6865968811065092320&from=pencil
 385. https://www.blogger.com/comment-iframe.g?blogid=1693014329567144872&postid=6865968811065092320
 386. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=adsense&widgetid=adsense1&action=editwidget&sectionid=sidebar-right-1
 387. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=html&widgetid=html1&action=editwidget&sectionid=sidebar-right-1
 388. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text1&action=editwidget&sectionid=sidebar-right-1
 389. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=image&widgetid=image1&action=editwidget&sectionid=sidebar-right-1
 390. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=label&widgetid=label1&action=editwidget&sectionid=sidebar-right-1
 391. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=followers&widgetid=followers1&action=editwidget&sectionid=sidebar-right-1
 392. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogsearch&widgetid=blogsearch1&action=editwidget&sectionid=sidebar-right-1
 393. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogarchive&widgetid=blogarchive1&action=editwidget&sectionid=sidebar-right-1
 394. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text3&action=editwidget&sectionid=footer-2-1
 395. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=subscribe&widgetid=subscribe2&action=editwidget&sectionid=footer-2-2
 396. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=attribution&widgetid=attribution1&action=editwidget&sectionid=footer-3
