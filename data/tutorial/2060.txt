nlp

introduction to nlp

probabilistic parsing (1/2)

need for probabilistic parsing

    time flies like an arrow

    many parses
    some (clearly) more likely than others
    need for a probabilistic ranking method

probabilistic context-free 

grammars

   

just like (deterministic) id18, a 4-tuple (n,s,r,s)
    n: non-terminal symbols
    s: terminal symbols (disjoint from n)
    r: rules (a    b) [p]

    b is a string from (s    n)*
    p is the id203 p(b|a)

    s: start symbol (from n)

example

s -> np vp
np -> dt n | np pp
pp -> prp np
vp -> v np | vp pp
dt -> 'a' | 'the'
n -> 'child' | 'cake' | 'fork'
prp -> 'with' | 'to'
v -> 'saw' | 'ate'

example

s -> np vp    
np -> dt n    
np -> np pp   
pp -> prp np  
vp -> v np    
vp -> vp pp   
dt -> 'a'     
dt -> 'the'   
n -> 'child'  
n -> 'cake'   
n -> 'fork'   
prp -> 'with' 
prp -> 'to'   
v -> 'saw'    
v -> 'ate'    

example

s -> np vp    
np -> dt n    
np -> np pp   
pp -> prp np  
vp -> v np    
vp -> vp pp   
dt -> 'a'     
dt -> 'the'   
n -> 'child'  
n -> 'cake'   
n -> 'fork'   
prp -> 'with' 
prp -> 'to'   
v -> 'saw'    
v -> 'ate'    

example

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

id203 of a parse tree

    the id203 of a parse tree tgiven all n productions used to 

build it:

tp
)(

=

n

  

i

1
=

ip
(
)
ba
i

  

    the most likely parse is determined as follows:

arg

max
stt  
)(

tp
)(

    the probabilities are obtained using id113 from the training 
    the id203 of a sentenceis the sumof the probabilities of 

corpus
all of its parses

example

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

example

t1

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

example

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

t1

t2

example

tp
1)(

=

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

t1

t2

ppppppppppppppp
0
10

11

14

7

1

9

7

3

1

2

8

7

4

1

example

tp
1)(

=

tp
(

2)

=

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

t1

t2

ppppppppppppppp
0
10

11

14

7

1

9

7

3

1

2

8

7

4

1

ppppppppppppppp
0
10

11

14

7

9

7

1

1

3

4

8

7

5

1

example

tp
1)(

=

tp
(

2)

=

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

t1

t2

ppppppppppppppp
0
10

11

14

7

1

9

7

3

1

2

8

7

4

1

ppppppppppppppp
0
10

11

14

7

9

7

1

1

3

4

8

7

5

1

example

tp
1)(

=

tp
(

2)

=

s -> np vp    [p0=1]
np -> dt n    [p1]
np -> np pp   [p2]
pp -> prp np  [p3=1]
vp -> v np    [p4]
vp -> vp pp   [p5]
dt -> 'a'     [p6]
dt -> 'the'   [p7]
n -> 'child'  [p8]
n -> 'cake'   [p9]
n -> 'fork'   [p10]
prp -> 'with' [p11]
prp -> 'to'   [p12]
v -> 'saw'    [p13]
v -> 'ate'    [p14]

t1

t2

ppppppppppppppp
0
10

11

14

7

1

9

7

3

1

2

8

7

4

1

ppppppppppppppp
0
10

11

14

7

9

7

1

1

3

4

8

7

5

1

nlp

