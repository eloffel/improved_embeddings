nlp

introduction to nlp

id33

techniques (1)

    constraint-based methods

    maruyama 1990, karlsson 1990
    example

    word(pos(x)) = det    (label(x) = nmod, word(mod(x)) = nn, pos(x) 
    a determiner (det) modifies a noun (nn) on the right with the label 

< mod(x))
nmod.

    np-complete problem; heuristics needed

    constraint graph

    for initial constraint graph using a core grammar: nodes, 
    find an assignment that doesn   t contradict any constraints. if 

domains, constraints
more than one assignment exists, add more constraints.

techniques (2)

    id145

    cky     similar to lexicalized pid18, cubic complexity (eisner 

96)

nsubj

dobj

mary likes cats

   

likes

dobj

nsubj
mary likes cats

techniques (3)

    deterministic parsing 
    graph-based methods

    covington 2001

    maximum spanning trees (mst)
    mst parser by mcdonald et al.
    (next)

    transition-based 

    maltparser by nivre et al. 
    and its variants
    (later lecture)

the eisner (1996) method

[figure from nivre 2013]

eisner 1996

    split-head representation

    represent half-trees in the cky table
    keep track whether the head is on the left or the right

    two operations

    combine two half-trees by adding a dependency arc 
    then combine an incomplete half-tree with a complete 

between their heads. this creates an incomplete half-tree.
half-tree

eisner 1996

[figure from nivre 2013]

the eisner (1996) method

incomplete half-tree

[figure from nivre 2013]

the eisner (1996) method

[slide from mcdonald and nivre]

the eisner (1996) method

[slide from mcdonald and nivre]

introduction to nlp

graph-based id33

graph-based id33
    background

    mcdonald et al. 2005
idea
    id33 is equivalent to search for a maximum 
    chu and liu (1965) and edmonds (1967) give an efficient 

spanning tree in a directed graph.
algorithm for finding mst for directed graphs.

   

mst parser example

    consider the sentence    john saw mary   
    recursively remove cycle
    the chu-liu-edmonds algorithm gives the mst on the right 

hand side (right). this is in general  a non-projective tree.

9

9

root

john

10

30

saw

0

20

30

mary

root

john

10

30

saw

30

mary

11
3

notes

    complexity

    interestingly, it   s o(n2), compared with o(n3) for eisner, 

even though mst is non-projective.

nlp

