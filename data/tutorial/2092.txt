nlp

introduction to nlp

id136

modus ponens

    modus ponens:

a
a     b
b

    example:
cat(martin)
"x: cat(x)     eatsfish(x)
eatsfish(martin)

id136

    as individual facts are added to the database, all derived 

id136s are generated

    forward chaining
    backward chaining
    starts from queries 
    example: the prolog programming language
    father(x, y) :- parent(x, y), male(x).

    prolog example
parent(john, bill).
parent(jane, bill).
female(jane).
male (john).
?- father(m, bill).

the kinship domain

    brothers are siblings
    one's mother is one's female parent
       sibling    is symmetric

"x,y brother(x,y)    sibling(x,y)
"m,c mother(c)= m    (female(m)    parent(m,c))
"x,y sibling(x,y)    sibling(y,x)

universal instantiation

    every instantiation of a universally quantified sentence is entailed 

by it:

"v  

subst({v/g},   )
for any variable vand ground term g

    e.g., "x cat(x)    fish(y)    eats(x,y) yields:
cat(martin)    fish(blub)    eats(martin,blub) 

existential instantiation

for any sentence   , variable v, and constant symbol k that does not 
appear elsewhere in the knowledge base:
subst({v/k},   )

$v  

e.g., $xcat(x)    eatsfish(x) yields:

   

   

cat(c1)    eatsfish(c1)

provided c1is a new constant symbol, called a skolem constant

unification

   
    examples:

if a substitution    is available, unification is possible
    p=eats(x,y), q=eats(x,blub), possible if    = {y/blub}
    p=eats(martin,y), q=eats(x,blub), possible if    = 
    p=eats(martin,y), q=eats(y,blub), fails because martin   blub

{x/martin,y/blub}

    subsumption

    unification works not only when two things are the same but 
    example: all cats eat fish, martin is a cat, blub is a fish

also when one of them subsumes the other one

nlp

