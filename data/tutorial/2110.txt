nlp

introduction to nlp

id86
using features and unification

systemic grammars

    language is viewed as a resource for expressing 
    layers: mood, transitivity, theme

meaning in context (halliday, 1985)

the system

will

save

the document

mood

transitivity

theme

subject

actor

theme

finite

process

rheme

predicator

object

goal

example

(

:process save-1
:actor system-1
:goal document-1
:speechact assertion
:tense future

)
   input is underspecified

the functional unification formalism

    aka fuf
    based on kay   s (83) formalism
    partial information, declarative, uniform, compact
    same framework used for all stages: syntactic 

realization, lexicalization, and text planning

functional analysis

    functional vs. structured analysis
       john eats an apple   
    actor (john), affected (apple), process (eat)
    suitable for generation

partial vs. complete specification

    voice: an apple is eaten by john
    tense: john ate an apple
    mode: did john eat an apple?     
    modality: john must eat an apple

action    =         eat
actor      =       john
object    =      apple

unification

    target sentence
input fd
   
    grammar
    unification process
    linearization process

path notation

    view an fd as a tree
    to specify features, use a path
    {feature feature     feature} value
    e.g. {prot number}
    {^ number} value = the feature number for the current 
    {^ ^ number} value = the feature number for the node 

    also use relative paths

node
above the current node

sample input

((cat s)
(prot ((n ((lex john)))))
(verb ((v ((lex like)))))
(goal ((n ((lex mary))))))

sample grammar

((alt top (((cat s)

(number {prot number})))

(prot ((cat np)))
(goal ((cat np)))
(verb ((cat vp)
(pattern (prot verb goal)))
((cat np)
(n ((cat noun)
(alt (((proper yes)
(pattern (n)))
((proper no)
(pattern (det n))
(det ((cat article)

(number {^ ^ number})))

(lex    the   )))))))

((cat vp)
(pattern (v))
(v ((cat verb))))
((cat noun))
((cat verb))
((cat article)))))

sample output

((cat s)
(goal ((cat np)

(pattern (prot verb goal))
(prot ((cat np)

(n ((cat noun)
(lex mary)
(number {goal number})))
(pattern (n))
(proper yes)))

(n ((cat noun)
(lex john)
(number {verb number})))

(number {verb number})
(pattern (n))
(proper yes)))
(pattern (v))
(v ((cat verb)

(lex like))))))       

(verb ((cat vp)

unification example

unify prot

unify goal

unify vp

unify verb

finish

the surge grammar (elhadad)

    syntactic realization front-end
    variable level of abstraction
    5,600 branches and 1,600 alts

lexical
chooser

lexicalized fd

surge

syntactic fd

linearizer
morphology

text

links

    simpleid86 (gatt and reiter)
    https://github.com/simpleid86
    fuf in nltk

    https://github.com/nltk/nltk_contrib/tree/master/nltk_co

ntrib/fuf

nlp

