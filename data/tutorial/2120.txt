nlp

machine translation

decoding

decoding

    find a translation that maximizes p(f|e)p(e)
    np-complete for ibm model 1
    use a phrase translation table (e.g., koehn   s pharaoh 
system, 2004)
    use id67 to find the subset of phrase 
translations that covers the source sentence
    combine with id125

machine translation

syntax in machine translation

(includes slides from philipp koehn)

notes

    bilingual cky parsing

e1

e2

e3

e5

e7

e8

e6
n/n

v/v

n/n

f1
f2
f3
f4

notes

    bilingual cky parsing

e1

e2

e3

e5

e6

e8

e7
np/np

v/v

np/np

f1
f2
f3
f4

notes

    bilingual cky parsing

e1

e2

e3

e5

e6

e7

e8

vp/vp

np/np

f1
f2
f3
f4

notes

    bilingual cky parsing

e1

e2

e3

e5

e6

e7

e8

s/s

f1
f2
f3
f4

string to tree translation

i

semantics

semantics

syntax

syntax

phrases

f

phrases

e

(yamada and knight 2001)

string to tree translation

(yamada and knight 2001)

naclo problem #1

naclo solution #1

clause restructuring (collins et al.)

   

ich werde ihnen den report aushaendigen     damit sie den eventuell
uebernehment koennen.
i will pass_on to_you the report, so_that you can adopt that perhaps 
   
    verb initial: that perhaps adopt can -> adopt that perhaps can
    verb second: so that you adopt   can -> so that you can adopt
    move subject: so that can you adopt -> so that you can adopt
    particles: we accept the presidency *particle* -> we accept 

the presidency
(in german, split-prefix phrasal verbs are very common, 
e.g.,    anrufen    ->    rufen sie bitte noch einmal an        call right back please)

synchronous grammars

    generate parse trees in parallel in two languages 
    e.g.,

using different rules
    np -> adj n (in english)
    np -> n adj (in spanish)
itg (inversion transduction grammar) [wu 1995]
    don   t allow all permutations in derivations
    only <> and [ ] are allowed

   

naclo problem #2

[problem by jonathan may]

naclo problem #2

naclo problem #2

naclo solution #2

naclo solution #2

nlp

