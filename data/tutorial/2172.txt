   #[1]the glowing python - atom [2]the glowing python - rss [3]the
   glowing python - atom

   [4]the glowing python

   a collection of sloppy snippets for scientific computing and data
   visualization in python.

thursday, october 6, 2011

the id88

   in the field of pattern classification, the purpose of a classifier is
   to use the object's characteristics to identify which class it belongs
   to. the id88 is a classifier and it is one of the simplest kind
   of [5]id158. in this post we will see a python
   implementation of the id88. the code that we will see implements
   the schema represented below.
   [6][id88.png]
   in this schema, an object (pattern) is represented by a vector x and
   its characteristics (features) are represented by the vector's elements
   x_1 and x_2. we call the vector w, with elements w_1 and w_2, the
   weights vector. the values x_1 and x_2 are the input of the id88.
   when we activate the id88 each input is multiplied by the
   respective weight and then summed. this produces a single value that it
   is passed to a threshold step function. the output of this function is
   the output of the id88. the threshold step function has only two
   possible output: 1 and -1. hence, when it is activated his reponse
   indicates that x belong to the first class (1) or the second (-1).
   a id88 can be trained and we have to guide his learning. in order
   to train the id88 we need something that the id88 can
   imitate, this data is called train set. so, the id88 learns as
   follow: an input pattern is shown, it produces an output, compares the
   output to what the output should be, and then adjusts its weights. this
   is repeated until the id88 converges to the correct behavior or a
   maximum number of iteration is reached.
   the following python class implements the percepron using the
   [7]rosenblatt training algorithm.
from pylab import rand,plot,show,norm

class id88:
 def __init__(self):
  """ id88 initialization """
  self.w = rand(2)*2-1 # weights
  self.learningrate = 0.1

 def response(self,x):
  """ id88 output """
  y = x[0]*self.w[0]+x[1]*self.w[1] # dot product between w and x
  if y >= 0:
   return 1
  else:
   return -1

 def updateweights(self,x,itererror):
  """
   updates the weights status, w at time t+1 is
       w(t+1) = w(t) + learningrate*(d-r)*x
   where d is desired output and r the id88 response
   itererror is (d-r)
  """
  self.w[0] += self.learningrate*itererror*x[0]
  self.w[1] += self.learningrate*itererror*x[1]

 def train(self,data):
  """
   trains all the vector in data.
   every vector in data must have three elements,
   the third element (x[2]) must be the label (desired output)
  """
  learned = false
  iteration = 0
  while not learned:
   globalerror = 0.0
   for x in data: # for each sample
    r = self.response(x)
    if x[2] != r: # if we have a wrong response
     itererror = x[2] - r # desired response - actual response
     self.updateweights(x,itererror)
     globalerror += abs(itererror)
   iteration += 1
   if globalerror == 0.0 or iteration >= 100: # stop criteria
    print 'iterations',iteration
    learned = true # stop learning

   id88s can only classify data when the two classes can be divided
   by a straight line (or, more generally, a hyperplane if there are more
   than two inputs). this is called linear separation. here is a function
   that generates a linearly separable random dataset.
def generatedata(n):
 """
  generates a 2d linearly separable dataset with n samples.
  the third element of the sample is the label
 """
 xb = (rand(n)*2-1)/2-0.5
 yb = (rand(n)*2-1)/2+0.5
 xr = (rand(n)*2-1)/2+0.5
 yr = (rand(n)*2-1)/2-0.5
 inputs = []
 for i in range(len(xb)):
  inputs.append([xb[i],yb[i],1])
  inputs.append([xr[i],yr[i],-1])
 return inputs

   and now we can use the id88. we generate two dataset, the first
   one is used to train the classifier (train set), and the second one is
   used to test it (test set):
trainset = generatedata(30) # train set generation
id88 = id88()   # id88 instance
id88.train(trainset)  # training
testset = generatedata(20)  # test set generation

# id88 test
for x in testset:
 r = id88.response(x)
 if r != x[2]: # if the response is not correct
  print 'error'
 if r == 1:
  plot(x[0],x[1],'ob')
 else:
  plot(x[0],x[1],'or')

# plot of the separation line.
# the separation line is orthogonal to w
n = norm(id88.w)
ww = id88.w/n
ww1 = [ww[1],-ww[0]]
ww2 = [-ww[1],ww[0]]
plot([ww1[0], ww2[0]],[ww1[1], ww2[1]],'--k')
show()

   the script above gives the following result:
   [8][id88.png]
   the blue points belong to the first class and the red ones belong to
   the second. the dashed line is the separation line learned by the
   id88 during the training.
   [9]email this[10]blogthis![11]share to twitter[12]share to
   facebook[13]share to pinterest
   labels: [14]ai, [15]neural network, [16]statistics

12 comments:

    1. anonymous[17]january 16, 2013 at 5:35 pm
       it seems like current implementation doesn't work with dots,
       scattered it full quadrant [-1,1]x[-1,1].
       reply[18]delete
       replies
            reply
    2. [19]honghe[20]april 10, 2013 at 11:45 am
       i have referenced your code and shared the modified code on
       github(https://github.com/honghe/id88).
       if your don't like please inform me.
       thx!
       reply[21]delete
       replies
         1. [22]justglowing[23]april 10, 2013 at 1:28 pm
            no problem honge!
            [24]delete
            replies
                 reply
            reply
    3. anonymous[25]may 7, 2013 at 6:43 pm
       how would you modify the code to plot for a vector with 3 features
       instead of 2
       reply[26]delete
       replies
         1. [27]justglowing[28]may 7, 2013 at 6:51 pm
            you have to draw a 3d plot. maybe this could help you:
            http://glowingpython.blogspot.it/2012/12/3d-stem-plot.html
            pay attention, in this case the separation surface is a plane
            and not a line.
            [29]delete
            replies
                 reply
            reply
    4. anonymous[30]may 7, 2013 at 7:44 pm
       thank you, that was helpful. how would you calculate the z
       cordinate ie. "ww3" following your example. thank you for your
       time.
       reply[31]delete
       replies
         1. [32]justglowing[33]may 7, 2013 at 8:33 pm
            you should find the plane orthogonal to the vector
            percepton.w. let me know if you succeed :)
            [34]delete
            replies
                 reply
            reply
    5. anonymous[35]may 7, 2013 at 11:15 pm
       :-) will try, thanks
       reply[36]delete
       replies
            reply
    6. anonymous[37]october 4, 2014 at 6:12 am
       cool ... very nicely blogged ...
       reply[38]delete
       replies
            reply
    7. anonymous[39]november 15, 2017 at 4:51 am
       what can i do if i have a 4 class data with x and y features?
       reply[40]delete
       replies
         1. [41]justglowing[42]november 15, 2017 at 6:44 am
            hi, you can use a one vs all strategy:
            https://en.wikipedia.org/wiki/multiclass_classification
            i'd recommend you to use the sklearn implementation:
            http://scikit-learn.org/stable/modules/generated/sklearn.neura
            l_network.mlpclassifier.html
            [43]delete
            replies
                 reply
            reply
    8. [44]jvstone[45]february 23, 2019 at 2:47 pm
       i would like to use your id88 code as part of demonstration
       code included here (in draft form):
       https://github.com/jgvfwstone/deeplearningengines/blob/master/deepl
       earningenginescode/python/ch03_id88
       please email me at j.v.stone@sheffield.ac.uk
       regards,
       jim
       reply[46]delete
       replies
            reply

   add comment
   load more...

   [47]newer post [48]older post [49]home
   subscribe to: [50]post comments (atom)

   [ins: :ins]

tweet this blog!

   [51]tweet

follow the glowing python

                                     on
                           [52][twitter_logo.jpg]

   [53]follow @justglowing

things you can find here

   [54]3d [55]ai [56]algorithms [57]andrews [58]animation
   [59]approximation [60]arrow [61]audio [62]automata [63]beer [64]binary
   [65]book [66]boxplot [67]calendar [68]carbon emissions [69]choice
   [70]classification [71]id91 [72]color [73]complex numbers
   [74]conway [75]corner [76]crawler [77]cross-validation [78]curves
   [79]data mining [80]data structures [81]datetime [82]id90
   [83]derivative [84]dice [85]eigenvectors [86]energy [87]environment
   [88]facebook [89]features selection [90]feed [91]fft [92]files
   [93]filtering [94]fitting [95]football [96]forecast [97]fourier
   [98]fractal [99]geometric_transform [100]gif [101]ginput [102]gmail
   [103]google [104]hdf5 [105]heatmap [106]histogram [107]image [108]imap
   [109]impalib [110]information retrieval [111]integral [112]interactive
   [113]interpolation [114]ipython [115]irc [116]jit [117]joblib [118]json
   [119]jukowski [120]id116 [121]keras [122]knn [123]life [124]linear
   algebra [125]lsa [126]machine learning [127]map [128]math
   [129]matplotlib [130]minimization [131]moving average [132]mp3
   [133]multithreading [134]natural language [135]network analysis
   [136]networking [137]neural network [138]nlp [139]numba [140]number
   theory [141]numpy [142]oop [143]opencv [144]optimization [145]outliers
   [146]id95 [147]pandas [148]parallelization [149]pca
   [150]persistence [151]pi [152]picking [153]pickle [154]plotly
   [155]plotting [156]prediction [157]prices [158]id203 [159]pylab
   [160]quadrature [161]random [162]re [163]reflection [164]regex
   [165]regression [166]review [167]rolling windws [168]rotation [169]rss
   [170]scikit-learn [171]scipy [172]scraping [173]seaborn [174]search
   [175]sequences [176]serialization [177]shape [178]signal [179]sklearn
   [180]socket [181]sorting [182]sound [183]speech [184]spider
   [185]spirals [186]stacked plot [187]statistics [188]stereo vision
   [189]stft [190]storage [191]string [192]structures analysis
   [193]summarization [194]id166 [195]tangent [196]tax [197]text to speech
   [198]time series [199]timestamp [200]transformation [201]twitter
   [202]urllib [203]vector [204]visualization [205]wav [206]wikipedia
   [207]xml

followers

looking for a snippet?

   __________ search

archive

     * [208]     [209]2019 (4)
          + [210]     [211]mar (3)
          + [212]     [213]jan (1)

     * [214]     [215]2018 (2)
          + [216]     [217]jun (1)
          + [218]     [219]may (1)

     * [220]     [221]2017 (4)
          + [222]     [223]oct (1)
          + [224]     [225]jul (1)
          + [226]     [227]jun (1)
          + [228]     [229]apr (1)

     * [230]     [231]2016 (1)
          + [232]     [233]may (1)

     * [234]     [235]2015 (3)
          + [236]     [237]oct (1)
          + [238]     [239]apr (1)
          + [240]     [241]jan (1)

     * [242]     [243]2014 (9)
          + [244]     [245]nov (1)
          + [246]     [247]oct (1)
          + [248]     [249]sep (1)
          + [250]     [251]aug (2)
          + [252]     [253]may (1)
          + [254]     [255]apr (1)
          + [256]     [257]feb (1)
          + [258]     [259]jan (1)

     * [260]     [261]2013 (20)
          + [262]     [263]dec (1)
          + [264]     [265]nov (1)
          + [266]     [267]sep (1)
          + [268]     [269]jul (2)
          + [270]     [271]jun (2)
          + [272]     [273]may (2)
          + [274]     [275]apr (2)
          + [276]     [277]mar (3)
          + [278]     [279]feb (3)
          + [280]     [281]jan (3)

     * [282]     [283]2012 (23)
          + [284]     [285]dec (2)
          + [286]     [287]nov (2)
          + [288]     [289]oct (1)
          + [290]     [291]sep (2)
          + [292]     [293]aug (1)
          + [294]     [295]jul (2)
          + [296]     [297]may (2)
          + [298]     [299]apr (3)
          + [300]     [301]mar (3)
          + [302]     [303]feb (2)
          + [304]     [305]jan (3)

     * [306]     [307]2011 (62)
          + [308]     [309]dec (4)
          + [310]     [311]nov (4)
          + [312]     [313]oct (3)
               o [314]corner detection with opencv
               o [315]beginning with opencv in python
               o [316]the id88
          + [317]     [318]sep (4)
          + [319]     [320]aug (3)
          + [321]     [322]jul (9)
          + [323]     [324]jun (6)
          + [325]     [326]may (16)
          + [327]     [328]apr (13)

quote

     the greatest value of a picture is that it forces us to notice what
     we never expected to see

   john tukey

subscribe to

   [arrow_dropdown.gif] posts
   [329][subscribe-netvibes.png] [330][subscribe-yahoo.png]
   [331][icon_feed12.png] atom
   [arrow_dropdown.gif] posts
   [arrow_dropdown.gif] comments
   [332][subscribe-netvibes.png] [333][subscribe-yahoo.png]
   [334][icon_feed12.png] atom
   [arrow_dropdown.gif] comments
   the glowing python is just glowing ;). powered by [335]blogger.

references

   visible links
   1. https://glowingpython.blogspot.com/feeds/posts/default
   2. https://glowingpython.blogspot.com/feeds/posts/default?alt=rss
   3. https://glowingpython.blogspot.com/feeds/8275315919704258051/comments/default
   4. https://glowingpython.blogspot.com/
   5. http://www.heatonresearch.com/content/non-mathematical-introduction-using-neural-networks
   6. https://1.bp.blogspot.com/-p5zuva_zryk/tobono7urfi/aaaaaaaaaim/tnivcdnowau/s1600/id88.png
   7. http://lcn.epfl.ch/tutorial/english/id88/html/learning.html
   8. https://3.bp.blogspot.com/-w1v9cdplf1y/todo92rjf3i/aaaaaaaaaie/nn8nl2n9iv0/s1600/id88.png
   9. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=8275315919704258051&target=email
  10. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=8275315919704258051&target=blog
  11. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=8275315919704258051&target=twitter
  12. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=8275315919704258051&target=facebook
  13. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=8275315919704258051&target=pinterest
  14. https://glowingpython.blogspot.com/search/label/ai
  15. https://glowingpython.blogspot.com/search/label/neural network
  16. https://glowingpython.blogspot.com/search/label/statistics
  17. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1358357729911#c7720981013875818677
  18. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=7720981013875818677
  19. https://www.blogger.com/profile/08953756537822096518
  20. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1365590757839#c7105864034249927969
  21. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=7105864034249927969
  22. https://www.blogger.com/profile/17212021288715206641
  23. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1365596908034#c1196604496715408276
  24. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=1196604496715408276
  25. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1367948585523#c2086698931738054461
  26. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=2086698931738054461
  27. https://www.blogger.com/profile/17212021288715206641
  28. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1367949060000#c4814444481807126542
  29. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=4814444481807126542
  30. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1367952253803#c5475734373098575906
  31. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5475734373098575906
  32. https://www.blogger.com/profile/17212021288715206641
  33. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1367955187932#c774976860865556699
  34. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=774976860865556699
  35. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1367964944598#c9018515305961456472
  36. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=9018515305961456472
  37. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1412399544292#c661298205085889948
  38. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=661298205085889948
  39. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1510721475917#c5872776153453011950
  40. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5872776153453011950
  41. https://www.blogger.com/profile/17212021288715206641
  42. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1510728268813#c1154714081039209396
  43. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=1154714081039209396
  44. https://www.blogger.com/profile/05680348229490680330
  45. https://glowingpython.blogspot.com/2011/10/id88.html?showcomment=1550933222020#c6693807814340501390
  46. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=6693807814340501390
  47. https://glowingpython.blogspot.com/2011/10/beginning-with-opencv-in-python.html
  48. https://glowingpython.blogspot.com/2011/09/sampling-theorem-explained-with-numpy.html
  49. https://glowingpython.blogspot.com/
  50. https://glowingpython.blogspot.com/feeds/8275315919704258051/comments/default
  51. https://twitter.com/share
  52. http://twitter.com/justglowing
  53. https://twitter.com/justglowing
  54. https://glowingpython.blogspot.com/search/label/3d
  55. https://glowingpython.blogspot.com/search/label/ai
  56. https://glowingpython.blogspot.com/search/label/algorithms
  57. https://glowingpython.blogspot.com/search/label/andrews
  58. https://glowingpython.blogspot.com/search/label/animation
  59. https://glowingpython.blogspot.com/search/label/approximation
  60. https://glowingpython.blogspot.com/search/label/arrow
  61. https://glowingpython.blogspot.com/search/label/audio
  62. https://glowingpython.blogspot.com/search/label/automata
  63. https://glowingpython.blogspot.com/search/label/beer
  64. https://glowingpython.blogspot.com/search/label/binary
  65. https://glowingpython.blogspot.com/search/label/book
  66. https://glowingpython.blogspot.com/search/label/boxplot
  67. https://glowingpython.blogspot.com/search/label/calendar
  68. https://glowingpython.blogspot.com/search/label/carbon emissions
  69. https://glowingpython.blogspot.com/search/label/choice
  70. https://glowingpython.blogspot.com/search/label/classification
  71. https://glowingpython.blogspot.com/search/label/id91
  72. https://glowingpython.blogspot.com/search/label/color
  73. https://glowingpython.blogspot.com/search/label/complex numbers
  74. https://glowingpython.blogspot.com/search/label/conway
  75. https://glowingpython.blogspot.com/search/label/corner
  76. https://glowingpython.blogspot.com/search/label/crawler
  77. https://glowingpython.blogspot.com/search/label/cross-validation
  78. https://glowingpython.blogspot.com/search/label/curves
  79. https://glowingpython.blogspot.com/search/label/data mining
  80. https://glowingpython.blogspot.com/search/label/data structures
  81. https://glowingpython.blogspot.com/search/label/datetime
  82. https://glowingpython.blogspot.com/search/label/id90
  83. https://glowingpython.blogspot.com/search/label/derivative
  84. https://glowingpython.blogspot.com/search/label/dice
  85. https://glowingpython.blogspot.com/search/label/eigenvectors
  86. https://glowingpython.blogspot.com/search/label/energy
  87. https://glowingpython.blogspot.com/search/label/environment
  88. https://glowingpython.blogspot.com/search/label/facebook
  89. https://glowingpython.blogspot.com/search/label/features selection
  90. https://glowingpython.blogspot.com/search/label/feed
  91. https://glowingpython.blogspot.com/search/label/fft
  92. https://glowingpython.blogspot.com/search/label/files
  93. https://glowingpython.blogspot.com/search/label/filtering
  94. https://glowingpython.blogspot.com/search/label/fitting
  95. https://glowingpython.blogspot.com/search/label/football
  96. https://glowingpython.blogspot.com/search/label/forecast
  97. https://glowingpython.blogspot.com/search/label/fourier
  98. https://glowingpython.blogspot.com/search/label/fractal
  99. https://glowingpython.blogspot.com/search/label/geometric_transform
 100. https://glowingpython.blogspot.com/search/label/gif
 101. https://glowingpython.blogspot.com/search/label/ginput
 102. https://glowingpython.blogspot.com/search/label/gmail
 103. https://glowingpython.blogspot.com/search/label/google
 104. https://glowingpython.blogspot.com/search/label/hdf5
 105. https://glowingpython.blogspot.com/search/label/heatmap
 106. https://glowingpython.blogspot.com/search/label/histogram
 107. https://glowingpython.blogspot.com/search/label/image
 108. https://glowingpython.blogspot.com/search/label/imap
 109. https://glowingpython.blogspot.com/search/label/impalib
 110. https://glowingpython.blogspot.com/search/label/information retrieval
 111. https://glowingpython.blogspot.com/search/label/integral
 112. https://glowingpython.blogspot.com/search/label/interactive
 113. https://glowingpython.blogspot.com/search/label/interpolation
 114. https://glowingpython.blogspot.com/search/label/ipython
 115. https://glowingpython.blogspot.com/search/label/irc
 116. https://glowingpython.blogspot.com/search/label/jit
 117. https://glowingpython.blogspot.com/search/label/joblib
 118. https://glowingpython.blogspot.com/search/label/json
 119. https://glowingpython.blogspot.com/search/label/jukowski
 120. https://glowingpython.blogspot.com/search/label/id116
 121. https://glowingpython.blogspot.com/search/label/keras
 122. https://glowingpython.blogspot.com/search/label/knn
 123. https://glowingpython.blogspot.com/search/label/life
 124. https://glowingpython.blogspot.com/search/label/id202
 125. https://glowingpython.blogspot.com/search/label/lsa
 126. https://glowingpython.blogspot.com/search/label/machine learning
 127. https://glowingpython.blogspot.com/search/label/map
 128. https://glowingpython.blogspot.com/search/label/math
 129. https://glowingpython.blogspot.com/search/label/matplotlib
 130. https://glowingpython.blogspot.com/search/label/minimization
 131. https://glowingpython.blogspot.com/search/label/moving average
 132. https://glowingpython.blogspot.com/search/label/mp3
 133. https://glowingpython.blogspot.com/search/label/multithreading
 134. https://glowingpython.blogspot.com/search/label/natural language
 135. https://glowingpython.blogspot.com/search/label/network analysis
 136. https://glowingpython.blogspot.com/search/label/networking
 137. https://glowingpython.blogspot.com/search/label/neural network
 138. https://glowingpython.blogspot.com/search/label/nlp
 139. https://glowingpython.blogspot.com/search/label/numba
 140. https://glowingpython.blogspot.com/search/label/number theory
 141. https://glowingpython.blogspot.com/search/label/numpy
 142. https://glowingpython.blogspot.com/search/label/oop
 143. https://glowingpython.blogspot.com/search/label/opencv
 144. https://glowingpython.blogspot.com/search/label/optimization
 145. https://glowingpython.blogspot.com/search/label/outliers
 146. https://glowingpython.blogspot.com/search/label/id95
 147. https://glowingpython.blogspot.com/search/label/pandas
 148. https://glowingpython.blogspot.com/search/label/parallelization
 149. https://glowingpython.blogspot.com/search/label/pca
 150. https://glowingpython.blogspot.com/search/label/persistence
 151. https://glowingpython.blogspot.com/search/label/pi
 152. https://glowingpython.blogspot.com/search/label/picking
 153. https://glowingpython.blogspot.com/search/label/pickle
 154. https://glowingpython.blogspot.com/search/label/plotly
 155. https://glowingpython.blogspot.com/search/label/plotting
 156. https://glowingpython.blogspot.com/search/label/prediction
 157. https://glowingpython.blogspot.com/search/label/prices
 158. https://glowingpython.blogspot.com/search/label/id203
 159. https://glowingpython.blogspot.com/search/label/pylab
 160. https://glowingpython.blogspot.com/search/label/quadrature
 161. https://glowingpython.blogspot.com/search/label/random
 162. https://glowingpython.blogspot.com/search/label/re
 163. https://glowingpython.blogspot.com/search/label/reflection
 164. https://glowingpython.blogspot.com/search/label/regex
 165. https://glowingpython.blogspot.com/search/label/regression
 166. https://glowingpython.blogspot.com/search/label/review
 167. https://glowingpython.blogspot.com/search/label/rolling windws
 168. https://glowingpython.blogspot.com/search/label/rotation
 169. https://glowingpython.blogspot.com/search/label/rss
 170. https://glowingpython.blogspot.com/search/label/scikit-learn
 171. https://glowingpython.blogspot.com/search/label/scipy
 172. https://glowingpython.blogspot.com/search/label/scraping
 173. https://glowingpython.blogspot.com/search/label/seaborn
 174. https://glowingpython.blogspot.com/search/label/search
 175. https://glowingpython.blogspot.com/search/label/sequences
 176. https://glowingpython.blogspot.com/search/label/serialization
 177. https://glowingpython.blogspot.com/search/label/shape
 178. https://glowingpython.blogspot.com/search/label/signal
 179. https://glowingpython.blogspot.com/search/label/sklearn
 180. https://glowingpython.blogspot.com/search/label/socket
 181. https://glowingpython.blogspot.com/search/label/sorting
 182. https://glowingpython.blogspot.com/search/label/sound
 183. https://glowingpython.blogspot.com/search/label/speech
 184. https://glowingpython.blogspot.com/search/label/spider
 185. https://glowingpython.blogspot.com/search/label/spirals
 186. https://glowingpython.blogspot.com/search/label/stacked plot
 187. https://glowingpython.blogspot.com/search/label/statistics
 188. https://glowingpython.blogspot.com/search/label/stereo vision
 189. https://glowingpython.blogspot.com/search/label/stft
 190. https://glowingpython.blogspot.com/search/label/storage
 191. https://glowingpython.blogspot.com/search/label/string
 192. https://glowingpython.blogspot.com/search/label/structures analysis
 193. https://glowingpython.blogspot.com/search/label/summarization
 194. https://glowingpython.blogspot.com/search/label/id166
 195. https://glowingpython.blogspot.com/search/label/tangent
 196. https://glowingpython.blogspot.com/search/label/tax
 197. https://glowingpython.blogspot.com/search/label/text to speech
 198. https://glowingpython.blogspot.com/search/label/time series
 199. https://glowingpython.blogspot.com/search/label/timestamp
 200. https://glowingpython.blogspot.com/search/label/transformation
 201. https://glowingpython.blogspot.com/search/label/twitter
 202. https://glowingpython.blogspot.com/search/label/urllib
 203. https://glowingpython.blogspot.com/search/label/vector
 204. https://glowingpython.blogspot.com/search/label/visualization
 205. https://glowingpython.blogspot.com/search/label/wav
 206. https://glowingpython.blogspot.com/search/label/wikipedia
 207. https://glowingpython.blogspot.com/search/label/xml
 208. javascript:void(0)
 209. https://glowingpython.blogspot.com/2019/
 210. javascript:void(0)
 211. https://glowingpython.blogspot.com/2019/03/
 212. javascript:void(0)
 213. https://glowingpython.blogspot.com/2019/01/
 214. javascript:void(0)
 215. https://glowingpython.blogspot.com/2018/
 216. javascript:void(0)
 217. https://glowingpython.blogspot.com/2018/06/
 218. javascript:void(0)
 219. https://glowingpython.blogspot.com/2018/05/
 220. javascript:void(0)
 221. https://glowingpython.blogspot.com/2017/
 222. javascript:void(0)
 223. https://glowingpython.blogspot.com/2017/10/
 224. javascript:void(0)
 225. https://glowingpython.blogspot.com/2017/07/
 226. javascript:void(0)
 227. https://glowingpython.blogspot.com/2017/06/
 228. javascript:void(0)
 229. https://glowingpython.blogspot.com/2017/04/
 230. javascript:void(0)
 231. https://glowingpython.blogspot.com/2016/
 232. javascript:void(0)
 233. https://glowingpython.blogspot.com/2016/05/
 234. javascript:void(0)
 235. https://glowingpython.blogspot.com/2015/
 236. javascript:void(0)
 237. https://glowingpython.blogspot.com/2015/10/
 238. javascript:void(0)
 239. https://glowingpython.blogspot.com/2015/04/
 240. javascript:void(0)
 241. https://glowingpython.blogspot.com/2015/01/
 242. javascript:void(0)
 243. https://glowingpython.blogspot.com/2014/
 244. javascript:void(0)
 245. https://glowingpython.blogspot.com/2014/11/
 246. javascript:void(0)
 247. https://glowingpython.blogspot.com/2014/10/
 248. javascript:void(0)
 249. https://glowingpython.blogspot.com/2014/09/
 250. javascript:void(0)
 251. https://glowingpython.blogspot.com/2014/08/
 252. javascript:void(0)
 253. https://glowingpython.blogspot.com/2014/05/
 254. javascript:void(0)
 255. https://glowingpython.blogspot.com/2014/04/
 256. javascript:void(0)
 257. https://glowingpython.blogspot.com/2014/02/
 258. javascript:void(0)
 259. https://glowingpython.blogspot.com/2014/01/
 260. javascript:void(0)
 261. https://glowingpython.blogspot.com/2013/
 262. javascript:void(0)
 263. https://glowingpython.blogspot.com/2013/12/
 264. javascript:void(0)
 265. https://glowingpython.blogspot.com/2013/11/
 266. javascript:void(0)
 267. https://glowingpython.blogspot.com/2013/09/
 268. javascript:void(0)
 269. https://glowingpython.blogspot.com/2013/07/
 270. javascript:void(0)
 271. https://glowingpython.blogspot.com/2013/06/
 272. javascript:void(0)
 273. https://glowingpython.blogspot.com/2013/05/
 274. javascript:void(0)
 275. https://glowingpython.blogspot.com/2013/04/
 276. javascript:void(0)
 277. https://glowingpython.blogspot.com/2013/03/
 278. javascript:void(0)
 279. https://glowingpython.blogspot.com/2013/02/
 280. javascript:void(0)
 281. https://glowingpython.blogspot.com/2013/01/
 282. javascript:void(0)
 283. https://glowingpython.blogspot.com/2012/
 284. javascript:void(0)
 285. https://glowingpython.blogspot.com/2012/12/
 286. javascript:void(0)
 287. https://glowingpython.blogspot.com/2012/11/
 288. javascript:void(0)
 289. https://glowingpython.blogspot.com/2012/10/
 290. javascript:void(0)
 291. https://glowingpython.blogspot.com/2012/09/
 292. javascript:void(0)
 293. https://glowingpython.blogspot.com/2012/08/
 294. javascript:void(0)
 295. https://glowingpython.blogspot.com/2012/07/
 296. javascript:void(0)
 297. https://glowingpython.blogspot.com/2012/05/
 298. javascript:void(0)
 299. https://glowingpython.blogspot.com/2012/04/
 300. javascript:void(0)
 301. https://glowingpython.blogspot.com/2012/03/
 302. javascript:void(0)
 303. https://glowingpython.blogspot.com/2012/02/
 304. javascript:void(0)
 305. https://glowingpython.blogspot.com/2012/01/
 306. javascript:void(0)
 307. https://glowingpython.blogspot.com/2011/
 308. javascript:void(0)
 309. https://glowingpython.blogspot.com/2011/12/
 310. javascript:void(0)
 311. https://glowingpython.blogspot.com/2011/11/
 312. javascript:void(0)
 313. https://glowingpython.blogspot.com/2011/10/
 314. https://glowingpython.blogspot.com/2011/10/corner-detection-with-opencv.html
 315. https://glowingpython.blogspot.com/2011/10/beginning-with-opencv-in-python.html
 316. https://glowingpython.blogspot.com/2011/10/id88.html
 317. javascript:void(0)
 318. https://glowingpython.blogspot.com/2011/09/
 319. javascript:void(0)
 320. https://glowingpython.blogspot.com/2011/08/
 321. javascript:void(0)
 322. https://glowingpython.blogspot.com/2011/07/
 323. javascript:void(0)
 324. https://glowingpython.blogspot.com/2011/06/
 325. javascript:void(0)
 326. https://glowingpython.blogspot.com/2011/05/
 327. javascript:void(0)
 328. https://glowingpython.blogspot.com/2011/04/
 329. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/posts/default
 330. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/posts/default
 331. https://glowingpython.blogspot.com/feeds/posts/default
 332. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/8275315919704258051/comments/default
 333. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/8275315919704258051/comments/default
 334. https://glowingpython.blogspot.com/feeds/8275315919704258051/comments/default
 335. https://www.blogger.com/

   hidden links:
 337. https://www.blogger.com/post-edit.g?blogid=1693014329567144872&postid=8275315919704258051&from=pencil
 338. https://www.blogger.com/comment-iframe.g?blogid=1693014329567144872&postid=8275315919704258051
 339. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=adsense&widgetid=adsense1&action=editwidget&sectionid=sidebar-right-1
 340. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=html&widgetid=html1&action=editwidget&sectionid=sidebar-right-1
 341. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text1&action=editwidget&sectionid=sidebar-right-1
 342. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=image&widgetid=image1&action=editwidget&sectionid=sidebar-right-1
 343. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=label&widgetid=label1&action=editwidget&sectionid=sidebar-right-1
 344. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=followers&widgetid=followers1&action=editwidget&sectionid=sidebar-right-1
 345. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogsearch&widgetid=blogsearch1&action=editwidget&sectionid=sidebar-right-1
 346. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogarchive&widgetid=blogarchive1&action=editwidget&sectionid=sidebar-right-1
 347. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text3&action=editwidget&sectionid=footer-2-1
 348. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=subscribe&widgetid=subscribe2&action=editwidget&sectionid=footer-2-2
 349. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=attribution&widgetid=attribution1&action=editwidget&sectionid=footer-3
