   #[1]github [2]recent commits to textsimilarityconvnet:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]3
     * [35]star [36]37
     * [37]fork [38]58

[39]hohocode/[40]textsimilarityconvnet forked from [41]castorini/mp-id98-torch

   [42]code [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   semantic similarity measurement of texts using convolutional neural
   networks (he et al., emnlp 2015)
   [47]torch7 [48]deep-learning [49]textual-similarity [50]neural-networks
     * [51]42 commits
     * [52]2 branches
     * [53]0 releases
     * [54]fetching contributors

    1. [55]lua 73.8%
    2. [56]python 17.9%
    3. [57]r 6.3%
    4. [58]perl 1.4%
    5. [59]shell 0.6%

   (button) lua python r perl shell
   branch: master (button) new pull request
   [60]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/h
   [61]download zip

downloading...

   want to be notified of new releases in hohocode/textsimilarityconvnet?
   [62]sign in [63]sign up

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [65]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [66]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [67]download the github extension for visual studio
   and try again.

   (button) go back
   [68]pull request [69]compare this branch is 6 commits ahead, 1 commit
   behind castorini:master.
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [70]permalink
   type              name              latest commit message commit time
        failed to load latest commit information.
        [71]data
        [72]scripts
        [73]util
        [74]conv.lua
        [75]csdis.lua
        [76]paddingreshape.lua
        [77]readme.md
        [78]fetch_and_preprocess.sh
        [79]models.lua
        [80]testdeploytrainedmodel.lua
        [81]trainmsrvid.lua
        [82]trainsic.lua

readme.md

multi-perspective convolutional neural networks for modeling textual
similarity

   this repo contains the torch implementation of multi-perspective
   convolutional neural networks for modeling textual similarity,
   described in the following paper:
     * hua he, kevin gimpel, and jimmy lin. [83]multi-perspective sentence
       similarity modeling with convolutional neural networks. proceedings
       of the 2015 conference on empirical methods in natural language
       processing (emnlp 2015), pages 1576-1586.

   this model does not require external resources such as id138 or
   parsers, does not use sparse features, and achieves good accuracy on
   standard public datasets.

installation and dependencies

     * please install torch deep learning library. we recommend this local
       installation which includes all required packages our tool needs,
       simply follow the instructions here:
       [84]https://github.com/torch/distro
     * currently our tool only runs on cpus, therefore it is recommended
       to use intel mkl library (or at least openblas lib) so torch can
       run much faster on cpus.
     * our tool then requires glove embeddings by stanford. please run
       fetech_and_preprocess.sh for downloading and preprocessing this
       data set (around 3 gbs).

running

     * command to run (training, tuning and testing all included):
     * th trainsic.lua or th trainmsrvid.lua

   the tool will output pearson scores and also write the predicted
   similarity scores given each pair of sentences from test data into
   predictions directory.

adaption to new dataset

   to run our model on your own dataset, first you need to build the
   dataset following below format and put it under data folder:
     * a.toks: sentence a, each sentence per line.
     * b.toks: sentence b, each sentence per line.
     * id.txt: sentence pair id
     * sim.txt: semantic relatedness gold label, can be in any scale. for
       binary classification, the set of labels will be {0, 1}.

   then build vocabulary for your dataset which writes the vocab-cased.txt
   into your data folder:
$ python build_vocab.py

   the last thing is to change the training and model code slightly to
   process your dataset:
     * change util/read_data.lua to handle your data.
     * create a new piece of training code following trainsic.lua to read
       in your dataset.
     * change conv.lua in line 89-102 and 142-148 to handle your own task
     * more details can refer to issue
       [85]https://github.com/castorini/mp-id98-torch/issues/6

   then you should be able to run your training code.

trained model

   we also porvide a model which is already trained on sts dataset. so it
   is easier if you just want to use the model and do not want to re-train
   the whole thing.

   the tarined model download link is [86]here. model file size is 500mb.
   to use the trained model, then simply use codes below:
modeltrained = torch.load("download_local_location/modelsts.trained.th", 'ascii'
)
modeltrained.convmodel:evaluate()
modeltrained.softmaxc:evaluate()
local linputs = torch.zeros(rigth_sentence_length, emd_dimension)
linpus = xassignembeddingvaluesx
local rinputs = torch.zeros(left_sentence_length, emd_dimension)
rinpus = xassignembeddingvaluesx

local part2 = modeltrained.convmodel:forward({linputs, rinputs})
local output = modeltrained.softmaxc:forward(part2)
local val = torch.range(0, 5, 1):dot(output:exp())
return val/5

   the ouput variable 'val' contains a similarity score between [0,1]. the
   input linputs1/rinputs are torch tensors and you need to fill in the
   id27 values for both.

example deployment script with our trained model

   we provide one example file for deployment: testdeploytrainedmodel.lua.
   so it is easier for you to directly use our model. run:
$ th testdeploytrainedmodel.lua

   this deployment file will use the trained model (assume you have
   downloaded the trained model from the above link), and it will generate
   scores given all test sentences of sick dataset. please note the
   trained model is not trained on sick data.

ackowledgement

   we thank kai sheng tai for providing the preprocessing codes. we also
   thank the public data providers and torch developers. thanks.

     *    2019 github, inc.
     * [87]terms
     * [88]privacy
     * [89]security
     * [90]status
     * [91]help

     * [92]contact github
     * [93]pricing
     * [94]api
     * [95]training
     * [96]blog
     * [97]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [98]reload to refresh your
   session. you signed out in another tab or window. [99]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/hohocode/textsimilarityconvnet/commits/master.atom
   3. https://github.com/hohocode/textsimilarityconvnet#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/hohocode/textsimilarityconvnet
  32. https://github.com/join
  33. https://github.com/login?return_to=/hohocode/textsimilarityconvnet
  34. https://github.com/hohocode/textsimilarityconvnet/watchers
  35. https://github.com/login?return_to=/hohocode/textsimilarityconvnet
  36. https://github.com/hohocode/textsimilarityconvnet/stargazers
  37. https://github.com/login?return_to=/hohocode/textsimilarityconvnet
  38. https://github.com/hohocode/textsimilarityconvnet/network/members
  39. https://github.com/hohocode
  40. https://github.com/hohocode/textsimilarityconvnet
  41. https://github.com/castorini/mp-id98-torch
  42. https://github.com/hohocode/textsimilarityconvnet
  43. https://github.com/hohocode/textsimilarityconvnet/pulls
  44. https://github.com/hohocode/textsimilarityconvnet/projects
  45. https://github.com/hohocode/textsimilarityconvnet/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/torch7
  48. https://github.com/topics/deep-learning
  49. https://github.com/topics/textual-similarity
  50. https://github.com/topics/neural-networks
  51. https://github.com/hohocode/textsimilarityconvnet/commits/master
  52. https://github.com/hohocode/textsimilarityconvnet/branches
  53. https://github.com/hohocode/textsimilarityconvnet/releases
  54. https://github.com/hohocode/textsimilarityconvnet/graphs/contributors
  55. https://github.com/hohocode/textsimilarityconvnet/search?l=lua
  56. https://github.com/hohocode/textsimilarityconvnet/search?l=python
  57. https://github.com/hohocode/textsimilarityconvnet/search?l=r
  58. https://github.com/hohocode/textsimilarityconvnet/search?l=perl
  59. https://github.com/hohocode/textsimilarityconvnet/search?l=shell
  60. https://github.com/hohocode/textsimilarityconvnet/find/master
  61. https://github.com/hohocode/textsimilarityconvnet/archive/master.zip
  62. https://github.com/login?return_to=https://github.com/hohocode/textsimilarityconvnet
  63. https://github.com/join?return_to=/hohocode/textsimilarityconvnet
  64. https://desktop.github.com/
  65. https://desktop.github.com/
  66. https://developer.apple.com/xcode/
  67. https://visualstudio.github.com/
  68. https://github.com/hohocode/textsimilarityconvnet/pull/new/master
  69. https://github.com/hohocode/textsimilarityconvnet/compare
  70. https://github.com/hohocode/textsimilarityconvnet/tree/b634651322aa084ff2399d5d94e31c2d2f0a1073
  71. https://github.com/hohocode/textsimilarityconvnet/tree/master/data
  72. https://github.com/hohocode/textsimilarityconvnet/tree/master/scripts
  73. https://github.com/hohocode/textsimilarityconvnet/tree/master/util
  74. https://github.com/hohocode/textsimilarityconvnet/blob/master/conv.lua
  75. https://github.com/hohocode/textsimilarityconvnet/blob/master/csdis.lua
  76. https://github.com/hohocode/textsimilarityconvnet/blob/master/paddingreshape.lua
  77. https://github.com/hohocode/textsimilarityconvnet/blob/master/readme.md
  78. https://github.com/hohocode/textsimilarityconvnet/blob/master/fetch_and_preprocess.sh
  79. https://github.com/hohocode/textsimilarityconvnet/blob/master/models.lua
  80. https://github.com/hohocode/textsimilarityconvnet/blob/master/testdeploytrainedmodel.lua
  81. https://github.com/hohocode/textsimilarityconvnet/blob/master/trainmsrvid.lua
  82. https://github.com/hohocode/textsimilarityconvnet/blob/master/trainsic.lua
  83. http://aclweb.org/anthology/d/d15/d15-1181.pdf
  84. https://github.com/torch/distro
  85. https://github.com/castorini/mp-id98-torch/issues/6
  86. https://drive.google.com/file/d/0b-lu_eemkpvxyvdpmldjx3jdvjg/view?usp=sharing
  87. https://github.com/site/terms
  88. https://github.com/site/privacy
  89. https://github.com/security
  90. https://githubstatus.com/
  91. https://help.github.com/
  92. https://github.com/contact
  93. https://github.com/pricing
  94. https://developer.github.com/
  95. https://training.github.com/
  96. https://github.blog/
  97. https://github.com/about
  98. https://github.com/hohocode/textsimilarityconvnet
  99. https://github.com/hohocode/textsimilarityconvnet

   hidden links:
 101. https://github.com/
 102. https://github.com/hohocode/textsimilarityconvnet
 103. https://github.com/hohocode/textsimilarityconvnet
 104. https://github.com/hohocode/textsimilarityconvnet
 105. https://help.github.com/articles/which-remote-url-should-i-use
 106. https://github.com/hohocode/textsimilarityconvnet#multi-perspective-convolutional-neural-networks-for-modeling-textual-similarity
 107. https://github.com/hohocode/textsimilarityconvnet#installation-and-dependencies
 108. https://github.com/hohocode/textsimilarityconvnet#running
 109. https://github.com/hohocode/textsimilarityconvnet#adaption-to-new-dataset
 110. https://github.com/hohocode/textsimilarityconvnet#trained-model
 111. https://github.com/hohocode/textsimilarityconvnet#example-deployment-script-with-our-trained-model
 112. https://github.com/hohocode/textsimilarityconvnet#ackowledgement
 113. https://github.com/
