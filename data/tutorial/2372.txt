   #[1]the glowing python - atom [2]the glowing python - rss [3]the
   glowing python - atom

   [4]the glowing python

   a collection of sloppy snippets for scientific computing and data
   visualization in python.

monday, january 28, 2013

a toy bloom filter

   a bloom filter is a data structure designed to tell you, rapidly and
   memory-efficiently, whether an element is present in a set. it is based
   on a probabilistic mechanism where false positive retrieval results are
   possible, but false negatives are not. in this post we will see a pure
   python implementation of the bloom filter and the end we will see how
   to tune the parameters in order to minimize the number of false
   positive results.
   let's begin with a little bit of theory. the idea behind the filter is
   to allocate a bit vector of length m, initially all set to 0, and then
   choose k independent hash functions, h[1], h[2], ..., h[k], each with
   range [1 m]. when an element a is added to the set then the bits at
   positions h(a)[1], h(a)[2], ..., h(a)[k] in the bit vector are set to
   1. given a query element q we can test whether it is in the set using
   the bits at positions h(q)[1], h(q)[2], ..., h(q)[k] in the vector. if
   any of these bits is 0 we report that q is not in the set otherwise we
   report that q is. the thing we have to care about is that in the first
   case there remains some id203 that q is not in the set which
   could lead us to a false positive response.
   the following class is a naive implementation of a bloom filter (pay
   attention: this implementation is not supposed to be suitable for
   production. it is made just to show how a bloom filter works and to
   study its behavior):
class bloom:
 """ bloom filter """
 def __init__(self,m,k,hash_fun):
  """
   m, size of the vector
   k, number of hash fnctions to compute
   hash_fun, hash function to use
  """
  self.m = m
  # initialize the vector
  # (attention a real implementation
  #  should use an actual bit-array)
  self.vector = [0]*m
  self.k = k
  self.hash_fun = hash_fun
  self.data = {} # data structure to store the data
  self.false_positive = 0

 def insert(self,key,value):
  """ insert the pair (key,value) in the database """
  self.data[key] = value
  for i in range(self.k):
   self.vector[self.hash_fun(key+str(i)) % self.m] = 1

 def contains(self,key):
  """ check if key is cointained in the database
      using the filter mechanism """
  for i in range(self.k):
   if self.vector[self.hash_fun(key+str(i)) % self.m] == 0:
    return false # the key doesn't exist
  return true # the key can be in the data set

 def get(self,key):
  """ return the value associated with key """
  if self.contains(key):
   try:
    return self.data[key] # actual lookup
   except keyerror:
    self.false_positive += 1

   the usage of this filter is pretty easy, we have to initialize the data
   structure with a hash function, a value for k and the size of the bit
   vector then we can start adding items as in this example:
import hashlib

def hash_f(x):
 h = hashlib.sha256(x) # we'll use sha256 just for this example
 return int(h.hexdigest(),base=16)

b = bloom(100,10,hash_f)
b.insert('this is a key','this is a value')
print b.get('this is a key')

   now, the problem is to choose the parameters of the filter in order to
   minimize the number of false positive results. we have that after
   inserting n elements into a table of size m, the id203 that a
   particular bit is still 0 is exactly
   [5][prob1.png]
   hence, afer n insertions, the id203 that a certain bit is 1 is
   [6][prob2.png]
   so, for fixed parameters m and n, the optimal value k that minimizes
   this id203 is
   [7][probkmin.png]
   with this in mind we can test our filter. the first thing we need is a
   function which tests the bloom filter for fixed values of m, n and k
   countinig the percentage of false positive:
import random

def rand_data(n, chars):
 """ generate random strings using the characters in chars """
 return ''.join(random.choice(chars) for i in range(n))

def bloomtest(m,n,k):
 """ return the percentage of false positive """
 bloom = bloom(m,k,hash_f)
 # generating a random data
 rand_keys = [rand_data(10,'abcde') for i in range(n)]
 # pushing the items into the data structure
 for rk in rand_keys:
  bloom.insert(rk,'data')
 # adding other elements to the dataset
 rand_keys = rand_keys + [rand_data(10,'fghil') for i in range(n)]
 # performing a query for each element of the dataset
 for rk in rand_keys:
  bloom.get(rk)
 return float(bloom.false_positive)/n*100.0

   if we fix m = 10000 and n = 1000, according to the equations above, we
   have that the value of k which minimizes the false positive number is
   around 6.9314. we can confirm that experimentally with the following
   test:
# testing the filter
m = 10000
n = 1000
k = range(1,64)
perc = [bloomtest(m,n,kk) for kk in k] # k is varying

# plotting the result of the test
from pylab import plot,show,xlabel,ylabel
plot(k,perc,'--ob',alpha=.7)
ylabel('false positive %')
xlabel('k')
show()

   the result of the test should be as follows
   [8][bloomfilter.png]
   looking at the graph we can confirm that for k around 7 we have the
   lowest false positive percentage.
   [9]email this[10]blogthis![11]share to twitter[12]share to
   facebook[13]share to pinterest
   labels: [14]data structures, [15]filtering, [16]id203,
   [17]statistics

2 comments:

    1. [18]simon harrison[19]february 2, 2013 at 4:20 pm
       in your theory description should it not read
       "given a query element q .... h(q)1, h(q)2, ..., h(q) in the
       vector"
       rather than h(a)1, h(a)2, ..., h(a)
       reply[20]delete
       replies
         1. [21]justglowing[22]february 2, 2013 at 4:53 pm
            thank you simon.
            [23]delete
            replies
                 reply
            reply

   add comment
   load more...

   [24]newer post [25]older post [26]home
   subscribe to: [27]post comments (atom)

   [ins: :ins]

tweet this blog!

   [28]tweet

follow the glowing python

                                     on
                           [29][twitter_logo.jpg]

   [30]follow @justglowing

things you can find here

   [31]3d [32]ai [33]algorithms [34]andrews [35]animation
   [36]approximation [37]arrow [38]audio [39]automata [40]beer [41]binary
   [42]book [43]boxplot [44]calendar [45]carbon emissions [46]choice
   [47]classification [48]id91 [49]color [50]complex numbers
   [51]conway [52]corner [53]crawler [54]cross-validation [55]curves
   [56]data mining [57]data structures [58]datetime [59]id90
   [60]derivative [61]dice [62]eigenvectors [63]energy [64]environment
   [65]facebook [66]features selection [67]feed [68]fft [69]files
   [70]filtering [71]fitting [72]football [73]forecast [74]fourier
   [75]fractal [76]geometric_transform [77]gif [78]ginput [79]gmail
   [80]google [81]hdf5 [82]heatmap [83]histogram [84]image [85]imap
   [86]impalib [87]information retrieval [88]integral [89]interactive
   [90]interpolation [91]ipython [92]irc [93]jit [94]joblib [95]json
   [96]jukowski [97]id116 [98]keras [99]knn [100]life [101]linear
   algebra [102]lsa [103]machine learning [104]map [105]math
   [106]matplotlib [107]minimization [108]moving average [109]mp3
   [110]multithreading [111]natural language [112]network analysis
   [113]networking [114]neural network [115]nlp [116]numba [117]number
   theory [118]numpy [119]oop [120]opencv [121]optimization [122]outliers
   [123]id95 [124]pandas [125]parallelization [126]pca
   [127]persistence [128]pi [129]picking [130]pickle [131]plotly
   [132]plotting [133]prediction [134]prices [135]id203 [136]pylab
   [137]quadrature [138]random [139]re [140]reflection [141]regex
   [142]regression [143]review [144]rolling windws [145]rotation [146]rss
   [147]scikit-learn [148]scipy [149]scraping [150]seaborn [151]search
   [152]sequences [153]serialization [154]shape [155]signal [156]sklearn
   [157]socket [158]sorting [159]sound [160]speech [161]spider
   [162]spirals [163]stacked plot [164]statistics [165]stereo vision
   [166]stft [167]storage [168]string [169]structures analysis
   [170]summarization [171]id166 [172]tangent [173]tax [174]text to speech
   [175]time series [176]timestamp [177]transformation [178]twitter
   [179]urllib [180]vector [181]visualization [182]wav [183]wikipedia
   [184]xml

followers

looking for a snippet?

   __________ search

archive

     * [185]     [186]2019 (4)
          + [187]     [188]mar (3)
          + [189]     [190]jan (1)

     * [191]     [192]2018 (2)
          + [193]     [194]jun (1)
          + [195]     [196]may (1)

     * [197]     [198]2017 (4)
          + [199]     [200]oct (1)
          + [201]     [202]jul (1)
          + [203]     [204]jun (1)
          + [205]     [206]apr (1)

     * [207]     [208]2016 (1)
          + [209]     [210]may (1)

     * [211]     [212]2015 (3)
          + [213]     [214]oct (1)
          + [215]     [216]apr (1)
          + [217]     [218]jan (1)

     * [219]     [220]2014 (9)
          + [221]     [222]nov (1)
          + [223]     [224]oct (1)
          + [225]     [226]sep (1)
          + [227]     [228]aug (2)
          + [229]     [230]may (1)
          + [231]     [232]apr (1)
          + [233]     [234]feb (1)
          + [235]     [236]jan (1)

     * [237]     [238]2013 (20)
          + [239]     [240]dec (1)
          + [241]     [242]nov (1)
          + [243]     [244]sep (1)
          + [245]     [246]jul (2)
          + [247]     [248]jun (2)
          + [249]     [250]may (2)
          + [251]     [252]apr (2)
          + [253]     [254]mar (3)
          + [255]     [256]feb (3)
          + [257]     [258]jan (3)
               o [259]a toy bloom filter
               o [260]box-muller transformation
               o [261]book review: numpy cookbook

     * [262]     [263]2012 (23)
          + [264]     [265]dec (2)
          + [266]     [267]nov (2)
          + [268]     [269]oct (1)
          + [270]     [271]sep (2)
          + [272]     [273]aug (1)
          + [274]     [275]jul (2)
          + [276]     [277]may (2)
          + [278]     [279]apr (3)
          + [280]     [281]mar (3)
          + [282]     [283]feb (2)
          + [284]     [285]jan (3)

     * [286]     [287]2011 (62)
          + [288]     [289]dec (4)
          + [290]     [291]nov (4)
          + [292]     [293]oct (3)
          + [294]     [295]sep (4)
          + [296]     [297]aug (3)
          + [298]     [299]jul (9)
          + [300]     [301]jun (6)
          + [302]     [303]may (16)
          + [304]     [305]apr (13)

quote

     the greatest value of a picture is that it forces us to notice what
     we never expected to see

   john tukey

subscribe to

   [arrow_dropdown.gif] posts
   [306][subscribe-netvibes.png] [307][subscribe-yahoo.png]
   [308][icon_feed12.png] atom
   [arrow_dropdown.gif] posts
   [arrow_dropdown.gif] comments
   [309][subscribe-netvibes.png] [310][subscribe-yahoo.png]
   [311][icon_feed12.png] atom
   [arrow_dropdown.gif] comments
   the glowing python is just glowing ;). powered by [312]blogger.

references

   visible links
   1. https://glowingpython.blogspot.com/feeds/posts/default
   2. https://glowingpython.blogspot.com/feeds/posts/default?alt=rss
   3. https://glowingpython.blogspot.com/feeds/2925068443072976381/comments/default
   4. https://glowingpython.blogspot.com/
   5. https://1.bp.blogspot.com/-y2t5w9z986c/uo22anl9_-i/aaaaaaaaaf4/-mjxrpzxwgc/s1600/prob1.png
   6. https://3.bp.blogspot.com/-pkadksebm6k/uo22nswrb3i/aaaaaaaaage/3eyhqvd3n6u/s1600/prob2.png
   7. https://4.bp.blogspot.com/-4drrgg4lba4/uo23h67tiki/aaaaaaaaagu/gf-aspqosro/s1600/probkmin.png
   8. https://2.bp.blogspot.com/-ss7oj9g_zni/uo26gaj21di/aaaaaaaaag0/n-9twvktosw/s1600/bloomfilter.png
   9. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=2925068443072976381&target=email
  10. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=2925068443072976381&target=blog
  11. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=2925068443072976381&target=twitter
  12. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=2925068443072976381&target=facebook
  13. https://www.blogger.com/share-post.g?blogid=1693014329567144872&postid=2925068443072976381&target=pinterest
  14. https://glowingpython.blogspot.com/search/label/data structures
  15. https://glowingpython.blogspot.com/search/label/filtering
  16. https://glowingpython.blogspot.com/search/label/id203
  17. https://glowingpython.blogspot.com/search/label/statistics
  18. https://www.blogger.com/profile/05754660986228748641
  19. https://glowingpython.blogspot.com/2013/01/bloom-filter.html?showcomment=1359822027762#c5964472472556390066
  20. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=5964472472556390066
  21. https://www.blogger.com/profile/17212021288715206641
  22. https://glowingpython.blogspot.com/2013/01/bloom-filter.html?showcomment=1359823984083#c3892105850240688477
  23. https://www.blogger.com/delete-comment.g?blogid=1693014329567144872&postid=3892105850240688477
  24. https://glowingpython.blogspot.com/2013/02/betweenness-centrality.html
  25. https://glowingpython.blogspot.com/2013/01/box-muller-transformation.html
  26. https://glowingpython.blogspot.com/
  27. https://glowingpython.blogspot.com/feeds/2925068443072976381/comments/default
  28. https://twitter.com/share
  29. http://twitter.com/justglowing
  30. https://twitter.com/justglowing
  31. https://glowingpython.blogspot.com/search/label/3d
  32. https://glowingpython.blogspot.com/search/label/ai
  33. https://glowingpython.blogspot.com/search/label/algorithms
  34. https://glowingpython.blogspot.com/search/label/andrews
  35. https://glowingpython.blogspot.com/search/label/animation
  36. https://glowingpython.blogspot.com/search/label/approximation
  37. https://glowingpython.blogspot.com/search/label/arrow
  38. https://glowingpython.blogspot.com/search/label/audio
  39. https://glowingpython.blogspot.com/search/label/automata
  40. https://glowingpython.blogspot.com/search/label/beer
  41. https://glowingpython.blogspot.com/search/label/binary
  42. https://glowingpython.blogspot.com/search/label/book
  43. https://glowingpython.blogspot.com/search/label/boxplot
  44. https://glowingpython.blogspot.com/search/label/calendar
  45. https://glowingpython.blogspot.com/search/label/carbon emissions
  46. https://glowingpython.blogspot.com/search/label/choice
  47. https://glowingpython.blogspot.com/search/label/classification
  48. https://glowingpython.blogspot.com/search/label/id91
  49. https://glowingpython.blogspot.com/search/label/color
  50. https://glowingpython.blogspot.com/search/label/complex numbers
  51. https://glowingpython.blogspot.com/search/label/conway
  52. https://glowingpython.blogspot.com/search/label/corner
  53. https://glowingpython.blogspot.com/search/label/crawler
  54. https://glowingpython.blogspot.com/search/label/cross-validation
  55. https://glowingpython.blogspot.com/search/label/curves
  56. https://glowingpython.blogspot.com/search/label/data mining
  57. https://glowingpython.blogspot.com/search/label/data structures
  58. https://glowingpython.blogspot.com/search/label/datetime
  59. https://glowingpython.blogspot.com/search/label/id90
  60. https://glowingpython.blogspot.com/search/label/derivative
  61. https://glowingpython.blogspot.com/search/label/dice
  62. https://glowingpython.blogspot.com/search/label/eigenvectors
  63. https://glowingpython.blogspot.com/search/label/energy
  64. https://glowingpython.blogspot.com/search/label/environment
  65. https://glowingpython.blogspot.com/search/label/facebook
  66. https://glowingpython.blogspot.com/search/label/features selection
  67. https://glowingpython.blogspot.com/search/label/feed
  68. https://glowingpython.blogspot.com/search/label/fft
  69. https://glowingpython.blogspot.com/search/label/files
  70. https://glowingpython.blogspot.com/search/label/filtering
  71. https://glowingpython.blogspot.com/search/label/fitting
  72. https://glowingpython.blogspot.com/search/label/football
  73. https://glowingpython.blogspot.com/search/label/forecast
  74. https://glowingpython.blogspot.com/search/label/fourier
  75. https://glowingpython.blogspot.com/search/label/fractal
  76. https://glowingpython.blogspot.com/search/label/geometric_transform
  77. https://glowingpython.blogspot.com/search/label/gif
  78. https://glowingpython.blogspot.com/search/label/ginput
  79. https://glowingpython.blogspot.com/search/label/gmail
  80. https://glowingpython.blogspot.com/search/label/google
  81. https://glowingpython.blogspot.com/search/label/hdf5
  82. https://glowingpython.blogspot.com/search/label/heatmap
  83. https://glowingpython.blogspot.com/search/label/histogram
  84. https://glowingpython.blogspot.com/search/label/image
  85. https://glowingpython.blogspot.com/search/label/imap
  86. https://glowingpython.blogspot.com/search/label/impalib
  87. https://glowingpython.blogspot.com/search/label/information retrieval
  88. https://glowingpython.blogspot.com/search/label/integral
  89. https://glowingpython.blogspot.com/search/label/interactive
  90. https://glowingpython.blogspot.com/search/label/interpolation
  91. https://glowingpython.blogspot.com/search/label/ipython
  92. https://glowingpython.blogspot.com/search/label/irc
  93. https://glowingpython.blogspot.com/search/label/jit
  94. https://glowingpython.blogspot.com/search/label/joblib
  95. https://glowingpython.blogspot.com/search/label/json
  96. https://glowingpython.blogspot.com/search/label/jukowski
  97. https://glowingpython.blogspot.com/search/label/id116
  98. https://glowingpython.blogspot.com/search/label/keras
  99. https://glowingpython.blogspot.com/search/label/knn
 100. https://glowingpython.blogspot.com/search/label/life
 101. https://glowingpython.blogspot.com/search/label/id202
 102. https://glowingpython.blogspot.com/search/label/lsa
 103. https://glowingpython.blogspot.com/search/label/machine learning
 104. https://glowingpython.blogspot.com/search/label/map
 105. https://glowingpython.blogspot.com/search/label/math
 106. https://glowingpython.blogspot.com/search/label/matplotlib
 107. https://glowingpython.blogspot.com/search/label/minimization
 108. https://glowingpython.blogspot.com/search/label/moving average
 109. https://glowingpython.blogspot.com/search/label/mp3
 110. https://glowingpython.blogspot.com/search/label/multithreading
 111. https://glowingpython.blogspot.com/search/label/natural language
 112. https://glowingpython.blogspot.com/search/label/network analysis
 113. https://glowingpython.blogspot.com/search/label/networking
 114. https://glowingpython.blogspot.com/search/label/neural network
 115. https://glowingpython.blogspot.com/search/label/nlp
 116. https://glowingpython.blogspot.com/search/label/numba
 117. https://glowingpython.blogspot.com/search/label/number theory
 118. https://glowingpython.blogspot.com/search/label/numpy
 119. https://glowingpython.blogspot.com/search/label/oop
 120. https://glowingpython.blogspot.com/search/label/opencv
 121. https://glowingpython.blogspot.com/search/label/optimization
 122. https://glowingpython.blogspot.com/search/label/outliers
 123. https://glowingpython.blogspot.com/search/label/id95
 124. https://glowingpython.blogspot.com/search/label/pandas
 125. https://glowingpython.blogspot.com/search/label/parallelization
 126. https://glowingpython.blogspot.com/search/label/pca
 127. https://glowingpython.blogspot.com/search/label/persistence
 128. https://glowingpython.blogspot.com/search/label/pi
 129. https://glowingpython.blogspot.com/search/label/picking
 130. https://glowingpython.blogspot.com/search/label/pickle
 131. https://glowingpython.blogspot.com/search/label/plotly
 132. https://glowingpython.blogspot.com/search/label/plotting
 133. https://glowingpython.blogspot.com/search/label/prediction
 134. https://glowingpython.blogspot.com/search/label/prices
 135. https://glowingpython.blogspot.com/search/label/id203
 136. https://glowingpython.blogspot.com/search/label/pylab
 137. https://glowingpython.blogspot.com/search/label/quadrature
 138. https://glowingpython.blogspot.com/search/label/random
 139. https://glowingpython.blogspot.com/search/label/re
 140. https://glowingpython.blogspot.com/search/label/reflection
 141. https://glowingpython.blogspot.com/search/label/regex
 142. https://glowingpython.blogspot.com/search/label/regression
 143. https://glowingpython.blogspot.com/search/label/review
 144. https://glowingpython.blogspot.com/search/label/rolling windws
 145. https://glowingpython.blogspot.com/search/label/rotation
 146. https://glowingpython.blogspot.com/search/label/rss
 147. https://glowingpython.blogspot.com/search/label/scikit-learn
 148. https://glowingpython.blogspot.com/search/label/scipy
 149. https://glowingpython.blogspot.com/search/label/scraping
 150. https://glowingpython.blogspot.com/search/label/seaborn
 151. https://glowingpython.blogspot.com/search/label/search
 152. https://glowingpython.blogspot.com/search/label/sequences
 153. https://glowingpython.blogspot.com/search/label/serialization
 154. https://glowingpython.blogspot.com/search/label/shape
 155. https://glowingpython.blogspot.com/search/label/signal
 156. https://glowingpython.blogspot.com/search/label/sklearn
 157. https://glowingpython.blogspot.com/search/label/socket
 158. https://glowingpython.blogspot.com/search/label/sorting
 159. https://glowingpython.blogspot.com/search/label/sound
 160. https://glowingpython.blogspot.com/search/label/speech
 161. https://glowingpython.blogspot.com/search/label/spider
 162. https://glowingpython.blogspot.com/search/label/spirals
 163. https://glowingpython.blogspot.com/search/label/stacked plot
 164. https://glowingpython.blogspot.com/search/label/statistics
 165. https://glowingpython.blogspot.com/search/label/stereo vision
 166. https://glowingpython.blogspot.com/search/label/stft
 167. https://glowingpython.blogspot.com/search/label/storage
 168. https://glowingpython.blogspot.com/search/label/string
 169. https://glowingpython.blogspot.com/search/label/structures analysis
 170. https://glowingpython.blogspot.com/search/label/summarization
 171. https://glowingpython.blogspot.com/search/label/id166
 172. https://glowingpython.blogspot.com/search/label/tangent
 173. https://glowingpython.blogspot.com/search/label/tax
 174. https://glowingpython.blogspot.com/search/label/text to speech
 175. https://glowingpython.blogspot.com/search/label/time series
 176. https://glowingpython.blogspot.com/search/label/timestamp
 177. https://glowingpython.blogspot.com/search/label/transformation
 178. https://glowingpython.blogspot.com/search/label/twitter
 179. https://glowingpython.blogspot.com/search/label/urllib
 180. https://glowingpython.blogspot.com/search/label/vector
 181. https://glowingpython.blogspot.com/search/label/visualization
 182. https://glowingpython.blogspot.com/search/label/wav
 183. https://glowingpython.blogspot.com/search/label/wikipedia
 184. https://glowingpython.blogspot.com/search/label/xml
 185. javascript:void(0)
 186. https://glowingpython.blogspot.com/2019/
 187. javascript:void(0)
 188. https://glowingpython.blogspot.com/2019/03/
 189. javascript:void(0)
 190. https://glowingpython.blogspot.com/2019/01/
 191. javascript:void(0)
 192. https://glowingpython.blogspot.com/2018/
 193. javascript:void(0)
 194. https://glowingpython.blogspot.com/2018/06/
 195. javascript:void(0)
 196. https://glowingpython.blogspot.com/2018/05/
 197. javascript:void(0)
 198. https://glowingpython.blogspot.com/2017/
 199. javascript:void(0)
 200. https://glowingpython.blogspot.com/2017/10/
 201. javascript:void(0)
 202. https://glowingpython.blogspot.com/2017/07/
 203. javascript:void(0)
 204. https://glowingpython.blogspot.com/2017/06/
 205. javascript:void(0)
 206. https://glowingpython.blogspot.com/2017/04/
 207. javascript:void(0)
 208. https://glowingpython.blogspot.com/2016/
 209. javascript:void(0)
 210. https://glowingpython.blogspot.com/2016/05/
 211. javascript:void(0)
 212. https://glowingpython.blogspot.com/2015/
 213. javascript:void(0)
 214. https://glowingpython.blogspot.com/2015/10/
 215. javascript:void(0)
 216. https://glowingpython.blogspot.com/2015/04/
 217. javascript:void(0)
 218. https://glowingpython.blogspot.com/2015/01/
 219. javascript:void(0)
 220. https://glowingpython.blogspot.com/2014/
 221. javascript:void(0)
 222. https://glowingpython.blogspot.com/2014/11/
 223. javascript:void(0)
 224. https://glowingpython.blogspot.com/2014/10/
 225. javascript:void(0)
 226. https://glowingpython.blogspot.com/2014/09/
 227. javascript:void(0)
 228. https://glowingpython.blogspot.com/2014/08/
 229. javascript:void(0)
 230. https://glowingpython.blogspot.com/2014/05/
 231. javascript:void(0)
 232. https://glowingpython.blogspot.com/2014/04/
 233. javascript:void(0)
 234. https://glowingpython.blogspot.com/2014/02/
 235. javascript:void(0)
 236. https://glowingpython.blogspot.com/2014/01/
 237. javascript:void(0)
 238. https://glowingpython.blogspot.com/2013/
 239. javascript:void(0)
 240. https://glowingpython.blogspot.com/2013/12/
 241. javascript:void(0)
 242. https://glowingpython.blogspot.com/2013/11/
 243. javascript:void(0)
 244. https://glowingpython.blogspot.com/2013/09/
 245. javascript:void(0)
 246. https://glowingpython.blogspot.com/2013/07/
 247. javascript:void(0)
 248. https://glowingpython.blogspot.com/2013/06/
 249. javascript:void(0)
 250. https://glowingpython.blogspot.com/2013/05/
 251. javascript:void(0)
 252. https://glowingpython.blogspot.com/2013/04/
 253. javascript:void(0)
 254. https://glowingpython.blogspot.com/2013/03/
 255. javascript:void(0)
 256. https://glowingpython.blogspot.com/2013/02/
 257. javascript:void(0)
 258. https://glowingpython.blogspot.com/2013/01/
 259. https://glowingpython.blogspot.com/2013/01/bloom-filter.html
 260. https://glowingpython.blogspot.com/2013/01/box-muller-transformation.html
 261. https://glowingpython.blogspot.com/2013/01/book-review-numpy-cookbook.html
 262. javascript:void(0)
 263. https://glowingpython.blogspot.com/2012/
 264. javascript:void(0)
 265. https://glowingpython.blogspot.com/2012/12/
 266. javascript:void(0)
 267. https://glowingpython.blogspot.com/2012/11/
 268. javascript:void(0)
 269. https://glowingpython.blogspot.com/2012/10/
 270. javascript:void(0)
 271. https://glowingpython.blogspot.com/2012/09/
 272. javascript:void(0)
 273. https://glowingpython.blogspot.com/2012/08/
 274. javascript:void(0)
 275. https://glowingpython.blogspot.com/2012/07/
 276. javascript:void(0)
 277. https://glowingpython.blogspot.com/2012/05/
 278. javascript:void(0)
 279. https://glowingpython.blogspot.com/2012/04/
 280. javascript:void(0)
 281. https://glowingpython.blogspot.com/2012/03/
 282. javascript:void(0)
 283. https://glowingpython.blogspot.com/2012/02/
 284. javascript:void(0)
 285. https://glowingpython.blogspot.com/2012/01/
 286. javascript:void(0)
 287. https://glowingpython.blogspot.com/2011/
 288. javascript:void(0)
 289. https://glowingpython.blogspot.com/2011/12/
 290. javascript:void(0)
 291. https://glowingpython.blogspot.com/2011/11/
 292. javascript:void(0)
 293. https://glowingpython.blogspot.com/2011/10/
 294. javascript:void(0)
 295. https://glowingpython.blogspot.com/2011/09/
 296. javascript:void(0)
 297. https://glowingpython.blogspot.com/2011/08/
 298. javascript:void(0)
 299. https://glowingpython.blogspot.com/2011/07/
 300. javascript:void(0)
 301. https://glowingpython.blogspot.com/2011/06/
 302. javascript:void(0)
 303. https://glowingpython.blogspot.com/2011/05/
 304. javascript:void(0)
 305. https://glowingpython.blogspot.com/2011/04/
 306. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/posts/default
 307. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/posts/default
 308. https://glowingpython.blogspot.com/feeds/posts/default
 309. https://www.netvibes.com/subscribe.php?url=https://glowingpython.blogspot.com/feeds/2925068443072976381/comments/default
 310. https://add.my.yahoo.com/content?url=https://glowingpython.blogspot.com/feeds/2925068443072976381/comments/default
 311. https://glowingpython.blogspot.com/feeds/2925068443072976381/comments/default
 312. https://www.blogger.com/

   hidden links:
 314. https://www.blogger.com/post-edit.g?blogid=1693014329567144872&postid=2925068443072976381&from=pencil
 315. https://www.blogger.com/comment-iframe.g?blogid=1693014329567144872&postid=2925068443072976381
 316. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=adsense&widgetid=adsense1&action=editwidget&sectionid=sidebar-right-1
 317. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=html&widgetid=html1&action=editwidget&sectionid=sidebar-right-1
 318. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text1&action=editwidget&sectionid=sidebar-right-1
 319. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=image&widgetid=image1&action=editwidget&sectionid=sidebar-right-1
 320. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=label&widgetid=label1&action=editwidget&sectionid=sidebar-right-1
 321. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=followers&widgetid=followers1&action=editwidget&sectionid=sidebar-right-1
 322. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogsearch&widgetid=blogsearch1&action=editwidget&sectionid=sidebar-right-1
 323. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=blogarchive&widgetid=blogarchive1&action=editwidget&sectionid=sidebar-right-1
 324. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=text&widgetid=text3&action=editwidget&sectionid=footer-2-1
 325. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=subscribe&widgetid=subscribe2&action=editwidget&sectionid=footer-2-2
 326. https://www.blogger.com/rearrange?blogid=1693014329567144872&widgettype=attribution&widgetid=attribution1&action=editwidget&sectionid=footer-3
