   #[1]github [2]recent commits to onto-lstm:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]3
     * [35]star [36]34
     * [37]fork [38]14

[39]pdasigi/[40]onto-lstm

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   keras implementation of ontology aware token embeddings
   [47]embeddings [48]natural-language-understanding [49]id138
   [50]keras-layer
     * [51]129 commits
     * [52]2 branches
     * [53]0 releases
     * [54]fetching contributors
     * [55]apache-2.0

    1. [56]python 100.0%

   (button) python
   branch: master (button) new pull request
   [57]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/p
   [58]download zip

downloading...

   want to be notified of new releases in pdasigi/onto-lstm?
   [59]sign in [60]sign up

launching github desktop...

   if nothing happens, [61]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [63]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [64]download the github extension for visual studio
   and try again.

   (button) go back
   [65]@pdasigi
   [66]pdasigi [67]added a pointer to autoextended glove embeddings in
   readme
   latest commit [68]e6feebb jun 1, 2017
   [69]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [70]data
   [71].gitignore
   [72]license
   [73]readme.md
   [74]embedding.py
   [75]encoders.py [76]make entailment model use encoders module, and
   changed trainability o    may 13, 2017
   [77]index_data.py
   [78]keras_extensions.py [79]minor casting fixes jan 18, 2017
   [80]model_entailment.py
   [81]model_pp_attachment.py
   [82]model_pp_relation.py
   [83]model_sentences.py
   [84]nse.py [85]get_config methods for custom layers oct 30, 2016
   [86]onto_attention.py
   [87]pooling.py
   [88]preposition_model.py
   [89]preposition_predictors.py
   [90]requirements.txt [91]minor changes to readme and enfrcing keras
   version in requirements may 9, 2017
   [92]test_ontolstm.py

readme.md

ontology-aware token embedding and lstm encoder

   this repository contains a keras implementation of id138 grounded
   context sensitive token embeddings, described in the paper
   [93]ontology-aware token embeddings for prepositional phrase
   attachment. primarily, we implement two keras layers here:
   ontologyawareembedding and ontoattentionlstm, which (in most cases)
   will be used together.

background

   the idea behind id138 grounding is to represent words as a
   distribution over their senses and possible hypernyms from id138.
   that is, given a word pool as a noun, id138 3.1 identifies 9 senses
   of the word:
     * pool.n.01: an excavation
     * pool.n.02: a small lake
     * pool.n.03: an organization of people or resources
     * ...

   for each of these senses, id138 also defines hypernyms
   (generalizations) in order, like:
     * pool.n.01: excavation.n.01, artifact.n.01, ...
     * pool.n.02: lake.n.01, body_of_water.n.01, ...
     * pool.n.03: organization.n.01, social_group.n.01, ...

   we represent a token pool as a weighted average of the representations
   of a fixed number of its hyperyms, coming from a fixed number of its
   senses.

   the weights in the weighted average depend on the context, thus making
   our word representations context-sensitive (or formally token-level
   representations instead of type-level). for example, the distribution
   of weights for the word pool in the following sentence:

   swimming is not allowed in this pool.

   is different from those in the following sentence:

   i managed to find a car pool.

   the computation of this context sensitive weight distribution is tied
   to the computation that happens in the encoder (lstm in our case).

installation

   clone this repository and run
pip install -r requirements.txt

   the code is written in python 2.7 and depends on keras 1.2.1.

using ontolstm in your network

   the input needs to be pos tagged. look at data/test_data.tsv as an
   example. the file contains labels in the first column and pos-tagged
   sentences in the second. these sentences were tagged using [94]stanford
   pos tagger.

   test_ontolstm.py shows a simple implementation of a binary classifier
   using ontolstm as the encoder. try running the following to test your
   installation.
python test_ontolstm.py

reproducing pp attachment results from acl 2017 paper

set up the data

   download the train and test data created by yonatan belinkov, available
   [95]here, and set them up in the same format as the sample test data,
   with labels indicating the index of the correct head words. the dataset
   comes with pos tags of head words, so you will not need a pos tagger
   for this. concatenate the preposition and the dependent of the
   preposition at the end of the set of head words. your train and test
   sets should have tab separated lines that look like this:
4  succeed_vb arbitrator_nn decision_nn made_vb in_pp dispute_nn

   where 4 indicates the label (i.e. the 4th word, made is the head word
   to which the pp in dispute attaches to). note that all verbs are
   indicated as vb and all nouns as nn. we do not follow the penn tree
   bank pos tag set here. in fact, ontolstm needs a coarse distinction
   among nouns, verbs, adjectives and adverbs, and not more since those
   are the word classes available in id138. see the method
   get_hypernyms_sentence in index_data.py for the logic.

obtain synset embeddings

   we got synset vectors by running autoextend on glove, and used these to
   initialize our synset embeddings. you can download them [96]here.
   alternatively, you can build them yourself: download [97]autoextend and
   run it on [98]glove vectors, to obtain synset vectors. we use the 100d
   vectors. make sure to use id138 3.1 as the ontology for autoextend.

train and test ontolstm pp

   run
python2.7 model_pp_attachment.py --train_file train.tsv --test_file test.tsv --e
mbedding_file autoextend_glove_100d.txt.gz --embed_dim 100 --tune_embedding --bi
directional --onto_aware --use_attention --num_senses 3 --num_hyps 5 --embedding
_dropout 0.5 --encoder_dropout 0.2

   that's it! this should also save the best trained model on your disk.

contact

   if you use ontolstm in your work, i would love to hear about it. please
   feel free to contact [99]me if you run into any issues using it or even
   with general feedback.

     *    2019 github, inc.
     * [100]terms
     * [101]privacy
     * [102]security
     * [103]status
     * [104]help

     * [105]contact github
     * [106]pricing
     * [107]api
     * [108]training
     * [109]blog
     * [110]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [111]reload to refresh your
   session. you signed out in another tab or window. [112]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/pdasigi/onto-lstm/commits/master.atom
   3. https://github.com/pdasigi/onto-lstm#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/pdasigi/onto-lstm
  32. https://github.com/join
  33. https://github.com/login?return_to=/pdasigi/onto-lstm
  34. https://github.com/pdasigi/onto-lstm/watchers
  35. https://github.com/login?return_to=/pdasigi/onto-lstm
  36. https://github.com/pdasigi/onto-lstm/stargazers
  37. https://github.com/login?return_to=/pdasigi/onto-lstm
  38. https://github.com/pdasigi/onto-lstm/network/members
  39. https://github.com/pdasigi
  40. https://github.com/pdasigi/onto-lstm
  41. https://github.com/pdasigi/onto-lstm
  42. https://github.com/pdasigi/onto-lstm/issues
  43. https://github.com/pdasigi/onto-lstm/pulls
  44. https://github.com/pdasigi/onto-lstm/projects
  45. https://github.com/pdasigi/onto-lstm/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/embeddings
  48. https://github.com/topics/natural-language-understanding
  49. https://github.com/topics/id138
  50. https://github.com/topics/keras-layer
  51. https://github.com/pdasigi/onto-lstm/commits/master
  52. https://github.com/pdasigi/onto-lstm/branches
  53. https://github.com/pdasigi/onto-lstm/releases
  54. https://github.com/pdasigi/onto-lstm/graphs/contributors
  55. https://github.com/pdasigi/onto-lstm/blob/master/license
  56. https://github.com/pdasigi/onto-lstm/search?l=python
  57. https://github.com/pdasigi/onto-lstm/find/master
  58. https://github.com/pdasigi/onto-lstm/archive/master.zip
  59. https://github.com/login?return_to=https://github.com/pdasigi/onto-lstm
  60. https://github.com/join?return_to=/pdasigi/onto-lstm
  61. https://desktop.github.com/
  62. https://desktop.github.com/
  63. https://developer.apple.com/xcode/
  64. https://visualstudio.github.com/
  65. https://github.com/pdasigi
  66. https://github.com/pdasigi/onto-lstm/commits?author=pdasigi
  67. https://github.com/pdasigi/onto-lstm/commit/e6feebb7161e5453fde23ff254c10ee090c9ad20
  68. https://github.com/pdasigi/onto-lstm/commit/e6feebb7161e5453fde23ff254c10ee090c9ad20
  69. https://github.com/pdasigi/onto-lstm/tree/e6feebb7161e5453fde23ff254c10ee090c9ad20
  70. https://github.com/pdasigi/onto-lstm/tree/master/data
  71. https://github.com/pdasigi/onto-lstm/blob/master/.gitignore
  72. https://github.com/pdasigi/onto-lstm/blob/master/license
  73. https://github.com/pdasigi/onto-lstm/blob/master/readme.md
  74. https://github.com/pdasigi/onto-lstm/blob/master/embedding.py
  75. https://github.com/pdasigi/onto-lstm/blob/master/encoders.py
  76. https://github.com/pdasigi/onto-lstm/commit/366d9888720a19470fd19f932f3490cd2c0cc5e8
  77. https://github.com/pdasigi/onto-lstm/blob/master/index_data.py
  78. https://github.com/pdasigi/onto-lstm/blob/master/keras_extensions.py
  79. https://github.com/pdasigi/onto-lstm/commit/a5aee1095150fda23944d47727c44140bc220796
  80. https://github.com/pdasigi/onto-lstm/blob/master/model_entailment.py
  81. https://github.com/pdasigi/onto-lstm/blob/master/model_pp_attachment.py
  82. https://github.com/pdasigi/onto-lstm/blob/master/model_pp_relation.py
  83. https://github.com/pdasigi/onto-lstm/blob/master/model_sentences.py
  84. https://github.com/pdasigi/onto-lstm/blob/master/nse.py
  85. https://github.com/pdasigi/onto-lstm/commit/2faebd7931efb5f25623aa4a35363637c182eb21
  86. https://github.com/pdasigi/onto-lstm/blob/master/onto_attention.py
  87. https://github.com/pdasigi/onto-lstm/blob/master/pooling.py
  88. https://github.com/pdasigi/onto-lstm/blob/master/preposition_model.py
  89. https://github.com/pdasigi/onto-lstm/blob/master/preposition_predictors.py
  90. https://github.com/pdasigi/onto-lstm/blob/master/requirements.txt
  91. https://github.com/pdasigi/onto-lstm/commit/d7d6fad24ea4c4ff1f29ef2a606e51658d85da64
  92. https://github.com/pdasigi/onto-lstm/blob/master/test_ontolstm.py
  93. https://arxiv.org/abs/1705.02925
  94. https://nlp.stanford.edu/software/tagger.shtml
  95. https://belinkov.mit.edu/data
  96. https://drive.google.com/drive/folders/0b6kty_3y_sxxnxniekvrwgtvvle?usp=sharing
  97. http://www.cis.lmu.de/~sascha/autoextend/
  98. https://nlp.stanford.edu/projects/glove/
  99. mailto:pdasigi@cs.cmu.edu
 100. https://github.com/site/terms
 101. https://github.com/site/privacy
 102. https://github.com/security
 103. https://githubstatus.com/
 104. https://help.github.com/
 105. https://github.com/contact
 106. https://github.com/pricing
 107. https://developer.github.com/
 108. https://training.github.com/
 109. https://github.blog/
 110. https://github.com/about
 111. https://github.com/pdasigi/onto-lstm
 112. https://github.com/pdasigi/onto-lstm

   hidden links:
 114. https://github.com/
 115. https://github.com/pdasigi/onto-lstm
 116. https://github.com/pdasigi/onto-lstm
 117. https://github.com/pdasigi/onto-lstm
 118. https://help.github.com/articles/which-remote-url-should-i-use
 119. https://github.com/pdasigi/onto-lstm#ontology-aware-token-embedding-and-lstm-encoder
 120. https://github.com/pdasigi/onto-lstm#background
 121. https://github.com/pdasigi/onto-lstm#installation
 122. https://github.com/pdasigi/onto-lstm#using-ontolstm-in-your-network
 123. https://github.com/pdasigi/onto-lstm#reproducing-pp-attachment-results-from-acl-2017-paper
 124. https://github.com/pdasigi/onto-lstm#set-up-the-data
 125. https://github.com/pdasigi/onto-lstm#obtain-synset-embeddings
 126. https://github.com/pdasigi/onto-lstm#train-and-test-ontolstm-pp
 127. https://github.com/pdasigi/onto-lstm#contact
 128. https://github.com/
