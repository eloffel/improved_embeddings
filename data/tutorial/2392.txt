   ____________________
   search this site

what is this site?

   this website is my bag of tricks! here, i put up some interesting tips
   that i face somewhere.
   please feel free to explore different branches of the site.

table of contents

     * [1]artificial intelligence + nlp + deep learning
          + [2]ai
               o [3]lisp
               o machine learning
                    # [4]decision tree
                    # [5]id44
                    # [6]neural networks
                         @ [7]deep learning
                              - [8]active learning
                              - [9]python
                                   = [10]autograd
                                   = [11]mnist (theano)
                                   * [12]1 id28
                                   * [13]10 id137 for sentiment
                                     analysis
                                   * [14]11 modeling and generating
                                     sequences of polyphonic music with
                                     the id56-rbm  
                                   * [15]12 miscellaneous
                                   * [16]13 references
                                   * [17]2 multi-layer id88
                                   + [18]mlp (ffnn)
                                   * [19]3 convolutional neural network
                                     (lenet)
                                   * [20]4 denoising autoencoders
                                   * [21]5 stacked denoising auto encoders
                                   * [22]6 restricted boltzman machine
                                     (rbm)
                                   * [23]7 id50
                                   * [24]8 hybrid monte-carlo sampling
                                   * [25]9 recurrent neural networks
                                   = [26]tensorflow
                                   * [27]save
                                   + [28]example
                              - [29]torch
                                   = [30]autograd
                                   = [31]custom layer
                                   = [32]example1
                                   = [33]lua
                                   * [34]extra stuff
                                   = [35]madbits tutorial
                                   * [36]1
                                   * [37]2
                                   * [38]3
                                   * [39]4
                                   * [40]5
                                   * [41]6
                         @ [42]self organizing maps
                    # [43]id79
                    # [44]id23
                    # [45]sequence
                         @ [46]crf
                    # [47]id166
               o [48]text analysis
          + [49]algorithm
               o [50]kolmogorov complexity
          + [51]design patterns
               o [52]aop
               o [53]code style
               o [54]ioc
          + [55]math
               o [56]calculus
               o [57]geometry
               o [58]graph
                    # [59]random graph
               o [60]id202
                    # [61]derivative
                    # [62]svd
               o [63]optimization
                    # [64]id145
                    # [65]kkt conditions
                    # [66]lagrange multiplier
                    # [67]id135
                    # [68]markov decision process
                    # [69]multi-armed bandit
                    # [70]multi-commodity flow
               o [71]id203
                    # [72]jensen's inequality
                    # [73]markov chain
                    # [74]poisson
               o [75]statistics
          + [76]misc.
               o [77]common knowledge
               o [78]good articles
               o [79]home network
               o [80]printer driver
               o [81]ssl
          + [82]os
               o [83]android
               o [84]binary
               o [85]docker
               o [86]hybrid app
               o [87]ios
                    # [88]ios-lynda
                    # [89]old
                         @ [90]objective-c
                         @ [91]stanford fall'13 class
                    # [92]swift
               o [93]linux
                    # [94]bash
                    # [95]centos
                    # [96]ftp server
                    # [97]install
                    # [98]lynx
                    # [99]shell
                    # [100]some good notes
                    # [101]ssh
                         @ [102]generating ssh keys
                         @ [103]ssh tunneling - port fowarding
                         @ [104]working with ssh key passphrase
                    # [105]texts
                         @ [106]awk
                         @ [107]sed
                    # [108]users groups
                         @ [109]new instance
                    # [110]vim
                    # [111]vnc
                    # [112]wine
               o [113]mac
                    # [114]sublime
                    # [115]xcode
               o [116]virtualbox
               o [117]windows
               o [118]xen
          + [119]protocols
               o [120]http
               o [121]mobile ip
               o [122]ns2
                    # [123]nam trace format
                    # [124]trace format
                    # [125]trace in a nutshell
               o [126]security
          + [127]tools - business
               o [128]amazon
               o [129]apache
               o [130]c
               o [131]c++
               o [132]dbms
                    # [133]mongodb
                    # [134]my sql
                         @ [135]import .sql file
                    # [136]postgres
               o [137]eclipse
                    # [138]target management - remote system explorer
               o [139]enterprise
                    # [140]jenkins
                    # [141]microservices
                    # [142]nginx
               o [143]google
                    # [144]golang
                         @ [145]other issues
                         @ [146]protobuf
               o [147]hadoop-hdfs
                    # [148]cloud
               o [149]html
                    # [150]css
                         @ [151]compass
                         @ [152]position
                         @ [153]property-values
                         @ [154]sass
                    # [155]html forms
                    # [156]html preprocessors
                    # [157]html5
                    # [158]test html
               o [159]jason
               o [160]java
                    # [161]e-learning
                         @ [162]sakai
                              - [163]development environment setup
                                walkthrough
                              - [164]jar files
                                   = [165]shared/lib/
                              - [166]sakai source install (2.7)
                    # [167]jar
                    # [168]java ee
                         @ [169].war
                         @ [170]alfresco
                         @ [171]glassfish
                         @ [172]jsp
                         @ [173]ldap
                         @ [174]rmi
                              - [175]jini
                         @ [176]servlet
                              - [177]e.g.
                              - [178]e.g. form-based log-in
                              - [179]filter
                         @ [180]struts mvc
                         @ [181]websphere
                    # [182]junit
                    # [183]maven
                    # [184]snippet
                    # [185]spring
                         @ [186]1. hello world ii (application context)
                         @ [187]2. hello world ii (bean factory)
                         @ [188]hello world
                         @ [189]maven
                         @ [190]other notes
                         @ [191]roo
                              - [192]jspx-bay
               o [193]javascript
                    # [194]angular
                    # [195]async
                    # [196]demo
                         @ [197]airline
                         @ [198]chat
                         @ [199]dom
                         @ [200]hp
                              - [201]useful snippets
                         @ [202]mean
                         @ [203]nodeapi
                         @ [204]plural-ytics
                    # [205]jquery
                    # [206]node.js
                         @ [207]express
                         @ [208]sql orm
                              - [209]associations
                                   = [210]more docs
                              - [211]model definition
                    # [212]react
                         @ [213]flux
                         @ [214]multiple-step registration form
                    # [215]workflow
                         @ [216]webpack
               o [217]kafka
               o [218]perl
                    # [219]epic ide eclipse plugin
                    # [220]good modules
                         @ [221]xml::libxml
                    # [222]regular expression
                         @ [223]examples
               o [224]php
                    # [225]cpanel
                    # [226]drupal
                         @ [227]drupal 7.2
                         @ [228]modules
                    # [229]eclipse debug
                    # [230]php snippets
                    # [231]smarty
               o [232]python
                    # [233]jupyter notebook
                    # [234]numpy
               o [235]ruby
                    # [236]cs169
                         @ [237]3- advanced rails
                              - [238]associations
                              - [239]associations
                         @ [240]hw-tips
                              - [241]hw2
                         @ [242]rails intro
                         @ [243]tdd/bdd
                    # [244]evented ruby
                    # [245]grocrb
                         @ [246]devise authorization
                    # [247]heroku
                    # [248]oo
                    # [249]oo
                    # [250]railstutorial.org
                         @ [251]demo app
                         @ [252]sample app
                         @ [253]test driven development
                    # [254]ruby on rails
                    # [255]ruby on rails
               o [256]scala
                    # [257]cheatsheet
                    # [258]collections
                    # [259]functional programming principles in scala
                    # [260]sbt
                    # [261]scala coding style
               o [262]seo
               o [263]spark
                    # [264]spark streaming
               o [265]testing
               o [266]version control
                    # [267]git
                         @ [268]markdown
                    # [269]subversion
               o [270]web scraping
                    # [271]imacros
                    # [272]scrapy
               o [273]web service
                    # [274]google maps
                    # [275]rest
                         @ [276]atomic transactions
                         @ [277]authorization
                         @ [278]rest in php
                    # [279]soap
                    # [280]wsdl
               o [281]webapp
               o [282]xml
                    # [283]jdom
                    # [284]json
                    # [285]xpath
                    # [286]xslt
          + [287]tools - scientific
               o [288]endnote
               o [289]excel
                    # [290]histogram
               o [291]irc
               o [292]latex
               o [293]mathematica
                    # [294]example1
               o [295]matlab
                    # [296]libid166
               o [297]networks
                    # [298]ddos
                    # [299]ieee 802.11 wlan
                    # [300]ieee 802.15 wpan
                    # [301]ieee 802.16 wimax
                    # [302]ieee 802.22 wran with cr
                    # [303]physical layer
               o [304]r
                    # [305]scidb-r
               o [306]wiki
               o [307]word
          + [308]ui/ux
               o [309]adobe premier pro
     * [310]entrepreneurials
          + [311]angel investor
               o [312]being rich
          + [313]faq
               o [314]momentum
          + [315]finance
          + [316]hints
          + [317]history
          + [318]ideas
               o [319]dropbox yc application
               o [320]hoodpantry
               o [321]notes
          + [322]jobs
               o [323]academy
               o [324]academy or industry?
               o [325]how to get attention from internet celebrities
               o [326]interview
                    # [327]2017
                    # [328]data science
                    # [329]examples
                         @ [330]divide and conquer
                         @ [331]radomized algorithms
                         @ [332]sort
                    # [333]interview training
                         @ [334]java interview
                    # [335]nlp
                    # [336]random algorithm
                         @ [337]monte-carlo
               o [338]salary negotiation: make more money, be more valued
               o [339]the most revealing interview question
               o [340]what austin seeks
          + [341]law
          + [342]life stuff
               o [343]food
               o [344]house
               o [345]jokes
               o [346]languages
               o [347]legal
               o [348]medicine
               o [349]mom
               o [350]travel
               o [351]watch
               o [352]women
                    # [353]datamining the heart
                    # [354]farsi
                         @ [355]sher
                         @ [356]teen
                         @ [357]                                                        !
                         @ [358]            
                         @ [359]          
                         @ [360]        
                         @ [361]               
                         @ [362]                                                            
                         @ [363]                   
                         @ [364]         
                    # [365]first date
                    # [366]how to get her say yes
                    # [367]married or not    you should read this.
                    # [368]the end of courtship?
                    # [369]who pays
               o [370]            
          + [371]mba
          + [372]psycology
          + [373]startup school
          + [374]stocks
               o [375]personal finance
          + [376]tax
          + [377]tool set
          + [378]values
     * [379]good stuff
          + [380]data
               o [381]data science links
               o [382]ecology papers
                    # [383]mesmatemp
               o [384]farsi
               o [385]group meetings
               o [386]knowledge base
               o [387]nltk
               o [388]papers nlp
                    # [389]attention
                    # [390]code
               o [391]talks
          + [392]english
          + [393]good books
               o [394]mining of massive datasets
               o [395]misc
               o [396]obeid zakani
               o [397]parvin etesami
               o [398]safarname naser khosro
          + [399]good films
          + [400]good food
          + [401]good people
          + [402]good software!
          + [403]spanish
          + [404]talks
               o [405]13 things mentally strong people don   t do
               o [406]14 years ago: the day teller gave me the secret to
                 my career in magic.
               o [407]frontend meetup
               o [408]weekly discussions
                    # [409]spring 2012
                         @ [410]modeling channel and rendezvous
     * [411]public services (community - health care)
     * [412]sitemap

   [413]artificial intelligence + nlp + deep learning > [414]ai >

machine learning

   gradient boosting
   conjugate, beta distribution
   hypothesis testing
   id166
   id185
   l1 vs l2 reg
   id166 vs id28
   how to avoid overfitting in decision tree to find threshold to cut off
   (cross validation)
   crf vs markov models
   id112 boosting
     __________________________________________________________________

   [415]sgd vs id119:
   normal batch id119:
   usually takes the mean squared error of all the training samples when
   it is updating the weights of the network. for every id119
   update in the weights, you have to cycle through every training sample.
   stochastic id119:
   data is shuffled at each epoch. updates the weight parameters after
   evaluation the cost function after each sample.
   this is easily implemented by a minor variation of the batch gradient
   descent code in python, by simply shifting the update component into
   the sample loop
   where does the    stochastic    part come in?  the stochastic component is
   in the selection of the random selection of training sample.
   mini-batch id119
   the cost function (and therefore gradient) is averaged over a small
   number of samples, from around 10-500.  this is opposed to the sgd
   batch size of 1 sample, and the bgd size of all the training samples.
   what   s the benefit of doing it this way?  first, it smooths out some of
   the noise in sgd, but not all of it, thereby still allowing the    kick   
   out of local minimums of the cost function.  second, the mini-batch
   size is still small, thereby keeping the performance benefits of sgd.
   id64: is any test or metric that relies on random sampling
   with replacement
   bootstrap aggregating (id112): id64 the data plus using the
   aggregate to make a decision is called id112.
   ensemble model
   flat
   1. generate multiple bootstraped samplings (sample with replacement)
   2. use the majority vote or average to get the final prediction.
   it   s done to reduce the variance e.g. on id90
   id79 actually uses this concept but it goes a step ahead to
   further reduce the variance by randomly choosing a subset of features
   as well for each bootstrapped sample to make the splits while training.
   (bootstraped samples + random features)
   sequential
   boosting:
   a sequential technique: the first algorithm is trained on the entire
   dataset and the subsequent algorithms are built by fitting the
   residuals of the first algorithm, thus giving higher weight to those
   observations that were poorly predicted by the previous model.
   it relies on creating a series of weak learners each of which might not
   be good for the entire dataset but is good for some part of the
   dataset. thus, each model actually boosts the performance of the
   ensemble.
   focused on reducing the bias. this makes the boosting algorithms prone
   to overfitting. thus, parameter tuning becomes a crucial part of
   boosting algorithms to make them avoid overfitting. some examples of
   boosting are xgboost, gbm, adaboost, etc.
   adaboost (adaptive boosting)
   1. create a sequence of weak learners (boosting).
   at each iteration get n samples based on weights (id112: create
   boosted bags of data)
   2. train a (simple) model and pass the model on training data to get
   errors (we call these models weak learners)
   3. use the errors as weights to boost another bag of data such that
   sampling with replacement puts more weights on data that had higher
   errors
   4. go to 2.
   in this way you get simple models where each is good at identifying a
   special segment of the data
   by ensembling such as majority vote or averaging combine the results.
   a tree with one node and two leaves is called a stump
   so we get a forest of stumps rather than trees
   stumps votes  are weighted for final resulyt
   iterate over features and see which feature does the best
   classification itself. for continuous variables pick one with maximum
   id178 (?) similar to decision tree
   pick one with best gini index
   in id79 each tree has equal vote as others
   order of tree gerenaration doesnt matter
   stacked
   in stacking multiple layers of machine learning models are placed one
   over another where each of the models passes their predictions to the
   model in the layer above it and the top layer model takes decisions
   based on the outputs of the models in layers below it.
     __________________________________________________________________

   label propagation on the manifold for id62: propagate
   labels on the manifold(connected samples) and instead of marking the
   nearest one (nearest neighbor) to mark it as blue mark it as red where
   the nearest propagated label is red: [416]link
   [417][screen%20shot%202018-04-03%20at%201.33.39%20pm.png?height=123&amp
   ;width=320]
   [418][screen%20shot%202018-04-03%20at%201.38.57%20pm.png?height=248&amp
   ;width=400]
   [419][screen%20shot%202018-04-03%20at%201.49.28%20pm.png?height=283&amp
   ;width=400]
   one shot learning andrew ng
   [420]https://www.youtube.com/watch?v=jypydneqcak
   triplet loss, for training choose samples where d(a,p) ~ d(a, n)
   ==========> today i learned that
   - one shot learning can be done via using embedding of classes taken
   from e.g. id97 instead of multiclass and label propagation in
   manifold
     multi-million face recognition can be done using [421]facenet and
   triplet loss as done in google and taught by ng in a single-shot
   learning lecture through siamese network
   id173
   [422]cross id178:
   the cross id178 between two id203 distributions p and q over
   the same underlying set of events measures the average number of bits
   needed to identify an event drawn from the set, if a coding scheme is
   used that is optimized for an "unnatural" id203 distribution q,
   rather than the "true" distribution  p.
   h(p,q) = - sigma_x y log(y')
   - the optimal number of bits for each symbol transmission is called
   id178. for one class is equal to the one over log of its
   id203.  log(1/p)  the more probable the less bits the less
   probable the more bits. the overall id178 is the expected number of
   bits for all classes =  sigma pi log(1/pi)
   if we think of a distribution as the tool we use to encode symbols,
   then id178 measures the number of bits we'll need if we use the
   correct tool y . this is optimal, in that we can't encode the symbols
   using fewer bits on average.

   if we assume that seeing a toyota is 128x as likely as seeing a tesla,
   then we'd give the toyota symbol 7 less bits than the tesla symbol:
   btoyota=log1128ptesla=log1ptesla+log1128=btesla   7
   cross id178 is the number of bits we'll need if we encode symbols
   from  y  using the predicted tool  y    . which is always more than
   id178 itself.
   cross id178 = sigma_x y log(1 / y')
   we of course still take the expected value to the true distribution y ,
   since it's the distribution that truly generates the symbols, and use
   the new number of bits
   kl divergence is simply the difference between cross id178 and
   id178: sigma [ pi log(1/p'i) -  pi log (1/pi) ]
   it measures the number of extra bits we'll need on average if we encode
   symbols from y according to y   ; you can think of it as a bit tax for
   encoding symbols from y with an inappropriate distribution y   . it's
   never negative, and it's 0 only when y and y   are the same.
   kl divergence helps us to measure just how much information we lose
   when we choose an approximation. [423]link
   it may be tempting to think of kl divergence as a distance metric,
   however we cannot use kl divergence to measure the distance between two
   distributions. the reason for this is that kl divergence is not
   symmetric.    sigma [ pi log(1/p'i) -  pi log (1/pi) ]   =  pi sigma [
   log(1/p'i) - log (1/pi) ] = pi sigma [log (1/p'i) / (1/pi) ] = pi sigma
   log (pi/p'1)      (not symmetric)    intuitively this makes sense as in
   each of these cases we're doing a very different form of approximation.
   the key point here is that we can use kl divergence as an objective
   function to find the optimal value for any approximating distribution
   we can come up with
   if you are familiar with neural networks, you may have guessed where we
   were headed after the last section. neural networks, in the most
   general sense, are function approximators. this means that you can use
   a neural network to learn a wide range of complex functions. the key to
   getting neural networks to learn is to use an objective function that
   can inform the network how well it's doing. you train neural networks
   by minimizing the loss of the objective function.
   as we've seen, we can use kl divergence to minimize how much
   information loss we have when approximating a distribution. combining
   kl divergence with neural networks allows us to learn very complex
   approximating distribution for our data. a common approach to this is
   called a "variational autoencoder" which learns the best way to
   approximate the information in a data set. here is [424]a great
   tutorial that dives into the details of building variational
   autoencoders.
   even more general is the area of id58ian methods. in other
   posts we've seen how powerful [425]monte carlo simulations can be to
   solve a range of id203 problems. while monte carlo simulations
   can help solve many intractable integrals needed for bayesian
   id136, even these methods can be very computationally expensive.
   id58ian method, including id5, use kl
   divergence to generate optimal approximating distributions, allowing
   for much more efficient id136 for very difficult integrals. to
   learn more about variational id136 check out the [426]edward
   library for python.
   note that minimizing cross id178 is the same as minimizing the kl
   divergence from y   to y . (they're equivalent up to an additive
   constant, the id178 of y , which doesn't depend on y   .)
   - from one perspective, minimizing cross id178 lets us find a y   that
   requires as few extra bits as possible when we try to encode symbols
   from y using y   .
   - from another perspective, minimizing cross id178 is equivalent to
   minimizing the negative log likelihood of our data, which is a direct
   measure of the predictive power of our model.
   [427]here it shows that
   we can look at it as maximizing the likelihood of model: l({y(n),
   y'(n)})
   since log is monotonic its like maximizing log of likelihood
   its like minimizing negative of log likelihood
     __________________________________________________________________

   based on data:
   lots of labeled car/motorcycle images and no-other: supervised learning
   small labeled car/motorcycle images but lots of unlabeled
   car/motorcycle images: semi-supervised
   unsupervised id171
   [428]list of machine learning algorithms

courses

   [429]machine learning - ng - stanford
   [430]pattern analysis ([431]lecture notes). [432]neural networks -
   ricardo gutierrez osuna - tamu
   datamining pennstate 2010
   [433]neural networks for machine learning - coursera
   [434]http://fastml.com/machine-learning-courses-online/
   conference
   [435]http://nips.cc/   nips conference
   textbooks
   [436]pattern classification (pt.1)
   pattern recognition [437]uf 2013  [438]uf
   pattern recognition and machine learning [439]ucla 2013 [good for cs
   students]
    [440]the elements of statistical learning [good for statistics
   students]
   ucla-2013
   pennstate 2010 [441]datamining [442]another link
   [443]pattern recognition and machine learning - 2007 $31
   bishop            [444]machine learning: a probabilistic perspective
   2012 - $43 murphy
   [445]bayesian reasoning and machine learning
   [446]data mining algorithms in r (with code in r)
   [447]mining of massive datasets
   [448]a programmer's guide to data mining (python)
   [449]data mining and analysis: fundamental concepts and algorithms
   [450]theory and applications for advanced id111

naive bayes === maximum likelihood

   in the bayesian analysis, the final classification is produced by
   combining both sources of information, i.e., the prior and the
   likelihood.
   prior id203: e.g. prob(red) = 20/60, prob(green) = 40/60     --
   if we don't know anything else, this would be our guess
   likelihood: based on the # of neighbors, that belong to each class.
   prob(red)= 3/20  prob(green) = 1/40
   draw a circle around (test node)x which encompasses a number (to be
   chosen a priori) of points irrespective of their class labels. then we
   calculate the number of points in the circle belonging to each class
   label.
   to form a posterior id203 using the so-called bayes' rule
   posterior prob = apriori * likelihood
   posterior id203 of x being green ~ prior id203 of x being
   green * likelihood of x given green = 40/60 * 1/40
   for red 2/60 * 3/20
   [451]example [452]example

confusion matrix.

   predicted
   class
                   cat dog rabbit
   actual class
               cat 5   3   0
               dog 2   3   1
      rabbit   0   2   11
   lecture notes based on the videos from stanford course on machine
   learning video series: [453]lecture 1 | machine learning (stanford)
     __________________________________________________________________

   lecture 2
   -----------------
   m: # training examples
   x: "input" variable/features
   y: "output" variable/target variable
   (x, y) one training example
   ith training example (ith row in table) (x^(i), y^(i))
   training set -> learning algorthm -> hypothesis h: input new living
   area, output estimated price
   for this example h =    +
   x1 size (ft2) x2 @ bedrooms
   linear hypothesis class    h(x) = h[  ](x) =   [0] +   [1]*x[1]
   +   [2]*x[2]   to be concise in notation x[0] = 1, n # features    h(x)
   =   [(i=0 to n)]   [i] x[i] =   ^t x,   's are parameters and the purpose
   is to learn right parameters
   min[  ] 1/2   [(i=0 to m)] (h[  ](x^(i)) - y^(i))^2     minimize the error
   for the training set  that we already know their output value, 1/2 is
   for conveniece which will reduce our future formulas
   j(  ) = 1/2   [(i=0 to m)] (h[  ](x^(i)) - y^(i))^2
   min[  ] j(  )
   start with some    (   = 0 vector) keep changing    to reduce j(  )
   -------------
   gradient decent:   i :=   i -        /     i  j(  )   (:= replace the value)
   [454][photo%20apr%2008%2c%202%2016%2019%20pm.jpg?height=72&amp;width=40
   0]
       /     i  j(  ) =   [(k=0 to m)] (h[  ](x^(k)) - y^(k))^2 . x[i]^(k)
      is the parameter of the learning algorithm called learning rate.
   controls how large a step you take
   repeat until convergence the following steps
     i :=   i -      [(k=0 to m)] (h[  ](x^(k)) - y^(k))^2 . x[i]^(k) =    /     [i]
   j(  )       least squares is bell shaped has no local minima
   as you approach local minimum gradient converges to zero
   after multiple iterations of the gradient decent (taking steps started
   from an arbitrary initial point) we get the least square fit. ==>
   id75, linear fit. the gradient of a function(derivative)
   gives the direction of the steepest descent. ==> batch id119
   : on every step look at all the samples.
   [stochastic id119: ]

   []


     [repeat{]

     [for k = 1 to m{]

     i :=   i -    h[  ](x^(k)) - y^(k))^2 . x[i]^(k)

     //update all parameters for all values of i

     [}]

     } to update parameters: only look at one training example each time.
     (the derivative w.r.t. just the first training example)


   [455][stochastic%20gd.jpg]

   [456][photo%20apr%2008%2c%203%2057%2009%20pm.jpg?height=400&amp;width=3
   00]
     __________________________________________________________________

   lecture 3
   -----------------
   id75

   locally weighted regression

   probabilistic interpretation

   id28 (first classification algorithm)

   digression (preceptron)

   newton's method

   (x^(i), y^(i)): ith training example
   h[  ](x^(i)) =   [(i=0 to n)]   [i] x[i] =   ^t x, x[0] = 1   n parameters
   j(  ) = 1/2   [(i=0 to m)] (h[  ](x^(i)) - y^(i))^2   m training set
   closed form solution:    = (x^tx)^-1x^ty
   back to previous example
   x1 : size of house
   y : price of house
   --
   x1 : size of house
   x2 : size^2
   h =   0 +   1 x1 +   2 x2 =   0 +   1 x1 +   2 x1^2
   underfitting  :
   overfitting    :
   parametric learning algorithm: fixed # of parameters that fits to the
   data (  's)
   non-parametric : # of params grows with m (the size of training set)

   locally weighted regression lwr (loess/lowes)

   evaluate hypothesis h at certain position x

   lr (id75) fit    to minimize least squares and return   ^t x

   min_     [(i=0 to m)] ( y^(i) -^   ^t x^(i))^2

     locally weighted id75: look at point x, lokk at
     datapoints, only takes data that aare in the little vicinity of x:
     where i want to evaluate the hypothesis, in its vicinity take a
     id75 and where we hit that line fro our x is going to
     be our hypothesis value (predicted value).

   ======
   lwr: fit    to minimize    [(i=0 to
   m)] w^(i) ( y^(i) -^   ^t x^(i))^2 , w^(i): weights e.g. = exp(-
   (x^(i)-x)^2/2)  [looks like a gaussian dist. but has nothing to do with
   it! just looks like it no assumtions of nay kind on anything is assumed
   to be gaussian]. if a training example x^(i) where x is close to it.

    |x^(i)-x| is small, then exp(0) is one from the formula then w^(i) ~ 1

    |x^(i)-x| is large, then w^(i) ~ 0 :pay more attention to the points
   more close by more accurately

   to make the formula more detailed there is a parameter   
   (bandwith) exp(- (x^(i)-x)^2/(2  ^2)) it' not variance of a gaussian
   just a parameter, control how fast weights fall off with distance.
   (width of the bell)
   ====
   probabilistic interpretaton: assume hypothesis is a linear combination
   plus an error   ^(i) (additional features that we dont capture ,
   function is not as linear as we think or random noise).
   assume y^(i) =   ^t x^(i) +   ^(i) .    ^(i) ~ n(0,   ^2) normal
   distributed.
   this implies that density for gaussian
   subpages (7): [457]decision tree [458]id44
   [459]neural networks [460]id79 [461]id23
   [462]sequence [463]id166
   comments

   [464]sign in|[465]recent site activity|[466]report abuse|[467]print
   page|powered by [468]google sites

references

   visible links
   1. https://sites.google.com/site/shahriarinia/home
   2. https://sites.google.com/site/shahriarinia/home/ai
   3. https://sites.google.com/site/shahriarinia/home/ai/lisp
   4. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/decision-tree
   5. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/latent-dirichlet-allocation
   6. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks
   7. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning
   8. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/active-learning
   9. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python
  10. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/autograd
  11. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano
  12. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/1-logistic-regression
  13. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/10-lstm-networks-for-sentiment-analysis
  14. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/11
  15. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/miscellaneous
  16. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/13-references
  17. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/2-multi-layer-id88
  18. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/2-multi-layer-id88/mlp-ffnn
  19. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/3-convolutional-neural-network-lenet
  20. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/4-denoising-autoencoders
  21. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/5-stacked-denoising-auto-encoders
  22. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/6-restricted-boltzman-machine-rbm
  23. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/7-deep-belief-networks
  24. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/8-hybrid-monte-carlo-sampling
  25. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/mnist_theano/9-recurrent-neural-networks
  26. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/tensorflow
  27. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/tensorflow/save
  28. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/python/tensorflow/save/example
  29. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch
  30. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/autograd
  31. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/custom-layer
  32. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/example1
  33. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/lua
  34. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/lua/extra-stuff
  35. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/madbits-tutorial
  36. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/madbits-tutorial/1
  37. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/madbits-tutorial/2
  38. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/madbits-tutorial/3
  39. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/madbits-tutorial/4
  40. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/madbits-tutorial/5
  41. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/deep-learning/torch/madbits-tutorial/6
  42. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks/self-organizing-maps
  43. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/random-forest
  44. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/reinforcement-learning
  45. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/sequence
  46. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/sequence/cr
  47. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/id166
  48. https://sites.google.com/site/shahriarinia/home/ai/text-analysis
  49. https://sites.google.com/site/shahriarinia/home/algorithm
  50. https://sites.google.com/site/shahriarinia/home/algorithm/kolmogorov-complexity
  51. https://sites.google.com/site/shahriarinia/home/design-patterns
  52. https://sites.google.com/site/shahriarinia/home/design-patterns/aop
  53. https://sites.google.com/site/shahriarinia/home/design-patterns/code-style
  54. https://sites.google.com/site/shahriarinia/home/design-patterns/ioc
  55. https://sites.google.com/site/shahriarinia/home/math
  56. https://sites.google.com/site/shahriarinia/home/math/calculus
  57. https://sites.google.com/site/shahriarinia/home/math/geometry
  58. https://sites.google.com/site/shahriarinia/home/math/graph
  59. https://sites.google.com/site/shahriarinia/home/math/graph/random-graph
  60. https://sites.google.com/site/shahriarinia/home/math/linear-algebra
  61. https://sites.google.com/site/shahriarinia/home/math/linear-algebra/derivative
  62. https://sites.google.com/site/shahriarinia/home/math/linear-algebra/svd
  63. https://sites.google.com/site/shahriarinia/home/math/optimization
  64. https://sites.google.com/site/shahriarinia/home/math/optimization/dynamic-programming
  65. https://sites.google.com/site/shahriarinia/home/math/optimization/kkt-conditions
  66. https://sites.google.com/site/shahriarinia/home/math/optimization/lagrange-multiplier
  67. https://sites.google.com/site/shahriarinia/home/math/optimization/linear-program
  68. https://sites.google.com/site/shahriarinia/home/math/optimization/markov-decision-process
  69. https://sites.google.com/site/shahriarinia/home/math/optimization/multi-armed-bandit
  70. https://sites.google.com/site/shahriarinia/home/math/optimization/multi-commodity-flow
  71. https://sites.google.com/site/shahriarinia/home/math/id203
  72. https://sites.google.com/site/shahriarinia/home/math/id203/jensen-s-inequality
  73. https://sites.google.com/site/shahriarinia/home/math/id203/markov-chain
  74. https://sites.google.com/site/shahriarinia/home/math/id203/poisson
  75. https://sites.google.com/site/shahriarinia/home/math/statistics
  76. https://sites.google.com/site/shahriarinia/home/misc
  77. https://sites.google.com/site/shahriarinia/home/misc/common-knowledge
  78. https://sites.google.com/site/shahriarinia/home/misc/good-articles
  79. https://sites.google.com/site/shahriarinia/home/misc/home-network
  80. https://sites.google.com/site/shahriarinia/home/misc/printer-driver
  81. https://sites.google.com/site/shahriarinia/home/misc/ssl
  82. https://sites.google.com/site/shahriarinia/home/operating-system
  83. https://sites.google.com/site/shahriarinia/home/operating-system/android
  84. https://sites.google.com/site/shahriarinia/home/operating-system/binary
  85. https://sites.google.com/site/shahriarinia/home/operating-system/docker
  86. https://sites.google.com/site/shahriarinia/home/operating-system/hybrid-app
  87. https://sites.google.com/site/shahriarinia/home/operating-system/ios
  88. https://sites.google.com/site/shahriarinia/home/operating-system/ios/ios-lynda
  89. https://sites.google.com/site/shahriarinia/home/operating-system/ios/old
  90. https://sites.google.com/site/shahriarinia/home/operating-system/ios/old/objective-c
  91. https://sites.google.com/site/shahriarinia/home/operating-system/ios/old/stanford-fall-13-class
  92. https://sites.google.com/site/shahriarinia/home/operating-system/ios/swift
  93. https://sites.google.com/site/shahriarinia/home/operating-system/linux
  94. https://sites.google.com/site/shahriarinia/home/operating-system/linux/bash
  95. https://sites.google.com/site/shahriarinia/home/operating-system/linux/centos
  96. https://sites.google.com/site/shahriarinia/home/operating-system/linux/ftp-server
  97. https://sites.google.com/site/shahriarinia/home/operating-system/linux/install
  98. https://sites.google.com/site/shahriarinia/home/operating-system/linux/lynx
  99. https://sites.google.com/site/shahriarinia/home/operating-system/linux/shell
 100. https://sites.google.com/site/shahriarinia/home/operating-system/linux/some-good-notes
 101. https://sites.google.com/site/shahriarinia/home/operating-system/linux/ssh
 102. https://sites.google.com/site/shahriarinia/home/operating-system/linux/ssh/generating-ssh-keys
 103. https://sites.google.com/site/shahriarinia/home/operating-system/linux/ssh/ssh-tunneling---port-fowarding
 104. https://sites.google.com/site/shahriarinia/home/operating-system/linux/ssh/working-with-ssh-key-passphrase
 105. https://sites.google.com/site/shahriarinia/home/operating-system/linux/texts
 106. https://sites.google.com/site/shahriarinia/home/operating-system/linux/texts/awk
 107. https://sites.google.com/site/shahriarinia/home/operating-system/linux/texts/sed
 108. https://sites.google.com/site/shahriarinia/home/operating-system/linux/users-groups
 109. https://sites.google.com/site/shahriarinia/home/operating-system/linux/users-groups/new-instance
 110. https://sites.google.com/site/shahriarinia/home/operating-system/linux/vim
 111. https://sites.google.com/site/shahriarinia/home/operating-system/linux/vnc
 112. https://sites.google.com/site/shahriarinia/home/operating-system/linux/wine
 113. https://sites.google.com/site/shahriarinia/home/operating-system/mac
 114. https://sites.google.com/site/shahriarinia/home/operating-system/mac/sublime
 115. https://sites.google.com/site/shahriarinia/home/operating-system/mac/xcode
 116. https://sites.google.com/site/shahriarinia/home/operating-system/virtualbox
 117. https://sites.google.com/site/shahriarinia/home/operating-system/windows
 118. https://sites.google.com/site/shahriarinia/home/operating-system/xen
 119. https://sites.google.com/site/shahriarinia/home/protocols
 120. https://sites.google.com/site/shahriarinia/home/protocols/http
 121. https://sites.google.com/site/shahriarinia/home/protocols/mobile-ip
 122. https://sites.google.com/site/shahriarinia/home/protocols/ns2
 123. https://sites.google.com/site/shahriarinia/home/protocols/ns2/nam-trace-format
 124. https://sites.google.com/site/shahriarinia/home/protocols/ns2/trace-format
 125. https://sites.google.com/site/shahriarinia/home/protocols/ns2/trace-in-a-nutshell
 126. https://sites.google.com/site/shahriarinia/home/protocols/security
 127. https://sites.google.com/site/shahriarinia/home/tools-business
 128. https://sites.google.com/site/shahriarinia/home/tools-business/amazon
 129. https://sites.google.com/site/shahriarinia/home/tools-business/apache
 130. https://sites.google.com/site/shahriarinia/home/tools-business/c-1
 131. https://sites.google.com/site/shahriarinia/home/tools-business/c
 132. https://sites.google.com/site/shahriarinia/home/tools-business/dbms
 133. https://sites.google.com/site/shahriarinia/home/tools-business/dbms/mongodb
 134. https://sites.google.com/site/shahriarinia/home/tools-business/dbms/my-sql
 135. https://sites.google.com/site/shahriarinia/home/tools-business/dbms/my-sql/import-sql-file
 136. https://sites.google.com/site/shahriarinia/home/tools-business/dbms/postgres
 137. https://sites.google.com/site/shahriarinia/home/tools-business/eclipse
 138. https://sites.google.com/site/shahriarinia/home/tools-business/eclipse/target-management---remote-system-explorer
 139. https://sites.google.com/site/shahriarinia/home/tools-business/enterprise
 140. https://sites.google.com/site/shahriarinia/home/tools-business/enterprise/jenkins
 141. https://sites.google.com/site/shahriarinia/home/tools-business/enterprise/microservices
 142. https://sites.google.com/site/shahriarinia/home/tools-business/enterprise/nginx
 143. https://sites.google.com/site/shahriarinia/home/tools-business/google
 144. https://sites.google.com/site/shahriarinia/home/tools-business/google/golang
 145. https://sites.google.com/site/shahriarinia/home/tools-business/google/golang/other-issues
 146. https://sites.google.com/site/shahriarinia/home/tools-business/google/golang/protobuf
 147. https://sites.google.com/site/shahriarinia/home/tools-business/hadoop-hdfs
 148. https://sites.google.com/site/shahriarinia/home/tools-business/hadoop-hdfs/cloud
 149. https://sites.google.com/site/shahriarinia/home/tools-business/html
 150. https://sites.google.com/site/shahriarinia/home/tools-business/html/css
 151. https://sites.google.com/site/shahriarinia/home/tools-business/html/css/compass
 152. https://sites.google.com/site/shahriarinia/home/tools-business/html/css/position
 153. https://sites.google.com/site/shahriarinia/home/tools-business/html/css/property-values
 154. https://sites.google.com/site/shahriarinia/home/tools-business/html/css/sass
 155. https://sites.google.com/site/shahriarinia/home/tools-business/html/html-forms
 156. https://sites.google.com/site/shahriarinia/home/tools-business/html/html-preprocessors
 157. https://sites.google.com/site/shahriarinia/home/tools-business/html/html5
 158. https://sites.google.com/site/shahriarinia/home/tools-business/html/test-html
 159. https://sites.google.com/site/shahriarinia/home/tools-business/jason
 160. https://sites.google.com/site/shahriarinia/home/tools-business/java
 161. https://sites.google.com/site/shahriarinia/home/tools-business/java/e-learning
 162. https://sites.google.com/site/shahriarinia/home/tools-business/java/e-learning/sakai
 163. https://sites.google.com/site/shahriarinia/home/tools-business/java/e-learning/sakai/development-environment-setup-walkthrough
 164. https://sites.google.com/site/shahriarinia/home/tools-business/java/e-learning/sakai/jar-files
 165. https://sites.google.com/site/shahriarinia/home/tools-business/java/e-learning/sakai/jar-files/shared-lib
 166. https://sites.google.com/site/shahriarinia/home/tools-business/java/e-learning/sakai/sakai-source-install-2-7
 167. https://sites.google.com/site/shahriarinia/home/tools-business/java/jar
 168. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee
 169. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/-war
 170. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/alfresco
 171. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/glassfish
 172. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/jsp
 173. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/ldap
 174. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/rmi
 175. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/rmi/jini
 176. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/servlet
 177. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/servlet/e-g
 178. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/servlet/e-g-form-based-log-in
 179. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/servlet/filter
 180. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/struts
 181. https://sites.google.com/site/shahriarinia/home/tools-business/java/j2ee/websphere
 182. https://sites.google.com/site/shahriarinia/home/tools-business/java/junit
 183. https://sites.google.com/site/shahriarinia/home/tools-business/java/maven
 184. https://sites.google.com/site/shahriarinia/home/tools-business/java/snippet
 185. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring
 186. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring/hello-world-ii
 187. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring/2-hello-world-ii-bf
 188. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring/spring-helloworld
 189. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring/maven
 190. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring/other-notes
 191. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring/roo
 192. https://sites.google.com/site/shahriarinia/home/tools-business/java/spring/roo/jspx-bay
 193. https://sites.google.com/site/shahriarinia/home/tools-business/javascript
 194. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/angular
 195. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/async
 196. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo
 197. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/airline
 198. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/chat
 199. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/dom
 200. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/hp
 201. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/hp/useful-snippets
 202. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/mean
 203. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/nodeapi
 204. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/demo/plural-ytics
 205. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/jquery
 206. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/node-js
 207. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/node-js/express
 208. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/node-js/sql-orm
 209. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/node-js/sql-orm/associations
 210. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/node-js/sql-orm/associations/more-docs
 211. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/node-js/sql-orm/model-definition
 212. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/react
 213. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/react/flux
 214. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/react/multiple-step-registration-form
 215. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/workflow
 216. https://sites.google.com/site/shahriarinia/home/tools-business/javascript/workflow/webpack
 217. https://sites.google.com/site/shahriarinia/home/tools-business/kafka
 218. https://sites.google.com/site/shahriarinia/home/tools-business/perl
 219. https://sites.google.com/site/shahriarinia/home/tools-business/perl/eclipse-epic
 220. https://sites.google.com/site/shahriarinia/home/tools-business/perl/good-modules
 221. https://sites.google.com/site/shahriarinia/home/tools-business/perl/good-modules/xml-libxml
 222. https://sites.google.com/site/shahriarinia/home/tools-business/perl/regular-expression
 223. https://sites.google.com/site/shahriarinia/home/tools-business/perl/regular-expression/examples
 224. https://sites.google.com/site/shahriarinia/home/tools-business/php
 225. https://sites.google.com/site/shahriarinia/home/tools-business/php/cpanel
 226. https://sites.google.com/site/shahriarinia/home/tools-business/php/drupal
 227. https://sites.google.com/site/shahriarinia/home/tools-business/php/drupal/drupal-7-2
 228. https://sites.google.com/site/shahriarinia/home/tools-business/php/drupal/modules
 229. https://sites.google.com/site/shahriarinia/home/tools-business/php/eclipse-debug
 230. https://sites.google.com/site/shahriarinia/home/tools-business/php/php-snippets
 231. https://sites.google.com/site/shahriarinia/home/tools-business/php/smarty
 232. https://sites.google.com/site/shahriarinia/home/tools-business/python
 233. https://sites.google.com/site/shahriarinia/home/tools-business/python/jupyter-notebook
 234. https://sites.google.com/site/shahriarinia/home/tools-business/python/numpy
 235. https://sites.google.com/site/shahriarinia/home/tools-business/ruby
 236. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169
 237. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169/3--advanced-rails
 238. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169/3--advanced-rails/associations-1
 239. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169/3--advanced-rails/associations
 240. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169/hw-tips
 241. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169/hw-tips/hw2
 242. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169/rails-intro
 243. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/cs169/tdd-bdd
 244. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/evented-ruby
 245. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/grocrb
 246. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/grocrb/devise-authorization
 247. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/heroku
 248. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/oo
 249. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/oo-1
 250. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/railstutorial-org
 251. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/railstutorial-org/demo-app
 252. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/railstutorial-org/sample-app
 253. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/railstutorial-org/test-driven-development
 254. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/ruby-on-rails
 255. https://sites.google.com/site/shahriarinia/home/tools-business/ruby/ruby-on-rails-1
 256. https://sites.google.com/site/shahriarinia/home/tools-business/scala
 257. https://sites.google.com/site/shahriarinia/home/tools-business/scala/cheatsheet
 258. https://sites.google.com/site/shahriarinia/home/tools-business/scala/collections
 259. https://sites.google.com/site/shahriarinia/home/tools-business/scala/functional-programming-principles-in-scala
 260. https://sites.google.com/site/shahriarinia/home/tools-business/scala/sbt
 261. https://sites.google.com/site/shahriarinia/home/tools-business/scala/scala-coding-style
 262. https://sites.google.com/site/shahriarinia/home/tools-business/seo
 263. https://sites.google.com/site/shahriarinia/home/tools-business/spark
 264. https://sites.google.com/site/shahriarinia/home/tools-business/spark/spark-streaming
 265. https://sites.google.com/site/shahriarinia/home/tools-business/testing
 266. https://sites.google.com/site/shahriarinia/home/tools-business/version-control
 267. https://sites.google.com/site/shahriarinia/home/tools-business/version-control/git
 268. https://sites.google.com/site/shahriarinia/home/tools-business/version-control/git/markdown
 269. https://sites.google.com/site/shahriarinia/home/tools-business/version-control/subversion
 270. https://sites.google.com/site/shahriarinia/home/tools-business/web-scraping
 271. https://sites.google.com/site/shahriarinia/home/tools-business/web-scraping/imacros
 272. https://sites.google.com/site/shahriarinia/home/tools-business/web-scraping/scrapy
 273. https://sites.google.com/site/shahriarinia/home/tools-business/web-service
 274. https://sites.google.com/site/shahriarinia/home/tools-business/web-service/google-maps
 275. https://sites.google.com/site/shahriarinia/home/tools-business/web-service/rest
 276. https://sites.google.com/site/shahriarinia/home/tools-business/web-service/rest/atomic-transactions
 277. https://sites.google.com/site/shahriarinia/home/tools-business/web-service/rest/authorization
 278. https://sites.google.com/site/shahriarinia/home/tools-business/web-service/rest/rest-in-php
 279. https://sites.google.com/site/shahriarinia/home/tools-business/web-service/soap
 280. https://sites.google.com/site/shahriarinia/home/tools-business/web-service/wsdl
 281. https://sites.google.com/site/shahriarinia/home/tools-business/webapp
 282. https://sites.google.com/site/shahriarinia/home/tools-business/xml
 283. https://sites.google.com/site/shahriarinia/home/tools-business/xml/jdom
 284. https://sites.google.com/site/shahriarinia/home/tools-business/xml/json
 285. https://sites.google.com/site/shahriarinia/home/tools-business/xml/xpath
 286. https://sites.google.com/site/shahriarinia/home/tools-business/xml/xslt
 287. https://sites.google.com/site/shahriarinia/home/scientific-tools
 288. https://sites.google.com/site/shahriarinia/home/scientific-tools/endnote
 289. https://sites.google.com/site/shahriarinia/home/scientific-tools/excel
 290. https://sites.google.com/site/shahriarinia/home/scientific-tools/excel/histogram
 291. https://sites.google.com/site/shahriarinia/home/scientific-tools/irc
 292. https://sites.google.com/site/shahriarinia/home/scientific-tools/latex
 293. https://sites.google.com/site/shahriarinia/home/scientific-tools/mathematica
 294. https://sites.google.com/site/shahriarinia/home/scientific-tools/mathematica/example1
 295. https://sites.google.com/site/shahriarinia/home/scientific-tools/matlab
 296. https://sites.google.com/site/shahriarinia/home/scientific-tools/matlab/libid166
 297. https://sites.google.com/site/shahriarinia/home/scientific-tools/networks
 298. https://sites.google.com/site/shahriarinia/home/scientific-tools/networks/ddos
 299. https://sites.google.com/site/shahriarinia/home/scientific-tools/networks/ieee-802-11-wlan
 300. https://sites.google.com/site/shahriarinia/home/scientific-tools/networks/ieee-802-15-wpan
 301. https://sites.google.com/site/shahriarinia/home/scientific-tools/networks/ieee-802-16-wimax
 302. https://sites.google.com/site/shahriarinia/home/scientific-tools/networks/ieee-802-22-wran-with-cr
 303. https://sites.google.com/site/shahriarinia/home/scientific-tools/networks/physical-layer
 304. https://sites.google.com/site/shahriarinia/home/scientific-tools/r
 305. https://sites.google.com/site/shahriarinia/home/scientific-tools/r/scidb-r
 306. https://sites.google.com/site/shahriarinia/home/scientific-tools/wiki
 307. https://sites.google.com/site/shahriarinia/home/scientific-tools/word
 308. https://sites.google.com/site/shahriarinia/home/ui-ux
 309. https://sites.google.com/site/shahriarinia/home/ui-ux/adobe-premier-pro
 310. https://sites.google.com/site/shahriarinia/entrepreneurials
 311. https://sites.google.com/site/shahriarinia/entrepreneurials/angel-investor
 312. https://sites.google.com/site/shahriarinia/entrepreneurials/angel-investor/being-rich
 313. https://sites.google.com/site/shahriarinia/entrepreneurials/faq
 314. https://sites.google.com/site/shahriarinia/entrepreneurials/faq/momentum
 315. https://sites.google.com/site/shahriarinia/entrepreneurials/finance
 316. https://sites.google.com/site/shahriarinia/entrepreneurials/hints
 317. https://sites.google.com/site/shahriarinia/entrepreneurials/history
 318. https://sites.google.com/site/shahriarinia/entrepreneurials/ideas
 319. https://sites.google.com/site/shahriarinia/entrepreneurials/ideas/dropbox-yc-application
 320. https://sites.google.com/site/shahriarinia/entrepreneurials/ideas/hoodpantry
 321. https://sites.google.com/site/shahriarinia/entrepreneurials/ideas/notes
 322. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs
 323. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/academy
 324. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/academy-or-industry
 325. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/how-to-get-attention-from-internet-celebrities
 326. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview
 327. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/2017
 328. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/data-science
 329. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/examples
 330. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/examples/divide-and-conquer
 331. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/examples/radomized-algorithms
 332. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/examples/sort
 333. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/interview-training
 334. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/interview-training/java-interview
 335. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/nlp
 336. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/random-algorithm
 337. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/interview/random-algorithm/monte-carlo
 338. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/salary-negotiation-make-more-money-be-more-valued
 339. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/the-most-revealing-interview-question
 340. https://sites.google.com/site/shahriarinia/entrepreneurials/jobs/what-austin-seeks
 341. https://sites.google.com/site/shahriarinia/entrepreneurials/law
 342. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff
 343. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/food
 344. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/house
 345. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/joke
 346. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/languages
 347. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/legal
 348. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/medicine
 349. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/mom
 350. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/travel
 351. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/watch
 352. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women
 353. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/datamining-the-heart
 354. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi
 355. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/sher
 356. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/teen
 357. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/ba-10ghadam-behtarin-shohar-e-donya-shavid
 358. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/tlgram
 359. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/rftar
 360. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/swal
 361. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/swal-akhr
 362. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/shnasayy-mrdan-by-wfa-az-tryq-chhrh
 363. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/mataleb-jaleb
 364. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/farsi/-jdhb
 365. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/first-date
 366. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/how-to-get-her-say-yes
 367. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/married-or-not-you-should-read-this
 368. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/the-end-of-courtship
 369. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/women/who-pays
 370. https://sites.google.com/site/shahriarinia/entrepreneurials/life-stuff/bashgah
 371. https://sites.google.com/site/shahriarinia/entrepreneurials/mba
 372. https://sites.google.com/site/shahriarinia/entrepreneurials/psycology
 373. https://sites.google.com/site/shahriarinia/entrepreneurials/startup-school
 374. https://sites.google.com/site/shahriarinia/entrepreneurials/stocks
 375. https://sites.google.com/site/shahriarinia/entrepreneurials/stocks/personal-finance
 376. https://sites.google.com/site/shahriarinia/entrepreneurials/tax
 377. https://sites.google.com/site/shahriarinia/entrepreneurials/tool-set
 378. https://sites.google.com/site/shahriarinia/entrepreneurials/values
 379. https://sites.google.com/site/shahriarinia/good-stuff
 380. https://sites.google.com/site/shahriarinia/good-stuff/data
 381. https://sites.google.com/site/shahriarinia/good-stuff/data/data-science-links
 382. https://sites.google.com/site/shahriarinia/good-stuff/data/ecology-papers
 383. https://sites.google.com/site/shahriarinia/good-stuff/data/ecology-papers/mesmatemp
 384. https://sites.google.com/site/shahriarinia/good-stuff/data/farsi
 385. https://sites.google.com/site/shahriarinia/good-stuff/data/group-meetings
 386. https://sites.google.com/site/shahriarinia/good-stuff/data/knowledge-base
 387. https://sites.google.com/site/shahriarinia/good-stuff/data/nltk
 388. https://sites.google.com/site/shahriarinia/good-stuff/data/papers-nlp
 389. https://sites.google.com/site/shahriarinia/good-stuff/data/papers-nlp/attention
 390. https://sites.google.com/site/shahriarinia/good-stuff/data/papers-nlp/code
 391. https://sites.google.com/site/shahriarinia/good-stuff/data/talks
 392. https://sites.google.com/site/shahriarinia/good-stuff/english
 393. https://sites.google.com/site/shahriarinia/good-stuff/good-books
 394. https://sites.google.com/site/shahriarinia/good-stuff/good-books/mining-of-massive-datasets
 395. https://sites.google.com/site/shahriarinia/good-stuff/good-books/misc
 396. https://sites.google.com/site/shahriarinia/good-stuff/good-books/obeid-zakani
 397. https://sites.google.com/site/shahriarinia/good-stuff/good-books/parvin-etesami
 398. https://sites.google.com/site/shahriarinia/good-stuff/good-books/safarname-naser-khosro
 399. https://sites.google.com/site/shahriarinia/good-stuff/good-films
 400. https://sites.google.com/site/shahriarinia/good-stuff/good-food
 401. https://sites.google.com/site/shahriarinia/good-stuff/good-people
 402. https://sites.google.com/site/shahriarinia/good-stuff/good-software
 403. https://sites.google.com/site/shahriarinia/good-stuff/spanish
 404. https://sites.google.com/site/shahriarinia/good-stuff/talks
 405. https://sites.google.com/site/shahriarinia/good-stuff/talks/13-things-mentally-strong-people-don-t-do
 406. https://sites.google.com/site/shahriarinia/good-stuff/talks/14-years-ago-the-day-teller-gave-me-the-secret-to-my-career-in-magic
 407. https://sites.google.com/site/shahriarinia/good-stuff/talks/frontend-meetup
 408. https://sites.google.com/site/shahriarinia/good-stuff/talks/weekly-discussions
 409. https://sites.google.com/site/shahriarinia/good-stuff/talks/weekly-discussions/spring-2012
 410. https://sites.google.com/site/shahriarinia/good-stuff/talks/weekly-discussions/spring-2012/modelingchannelandrendezvous
 411. https://sites.google.com/site/shahriarinia/public-services-community---health-care
 412. https://sites.google.com/site/shahriarinia/system/app/pages/sitemap/hierarchy
 413. https://sites.google.com/site/shahriarinia/home
 414. https://sites.google.com/site/shahriarinia/home/ai
 415. https://adventuresinmachinelearning.com/stochastic-gradient-descent/
 416. https://www.youtube.com/watch?v=jbnccr-3bxc
 417. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/screen shot 2018-04-03 at 1.33.39 pm.png?attredirects=0
 418. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/screen shot 2018-04-03 at 1.38.57 pm.png?attredirects=0
 419. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/screen shot 2018-04-03 at 1.49.28 pm.png?attredirects=0
 420. https://www.youtube.com/watch?v=jypydneqcak
 421. https://arxiv.org/pdf/1503.03832.pdf
 422. https://rdipietro.github.io/friendly-intro-to-cross-id178-loss/
 423. https://www.countbayesie.com/blog/2017/5/9/kullback-leibler-divergence-explained
 424. https://arxiv.org/abs/1606.05908
 425. https://www.countbayesie.com/blog/2015/3/3/6-amazing-trick-with-monte-carlo-simulations
 426. http://edwardlib.org/
 427. https://rdipietro.github.io/friendly-intro-to-cross-id178-loss/
 428. http://en.wikipedia.org/wiki/list_of_machine_learning_algorithms
 429. http://cs229.stanford.edu/
 430. http://courses.cs.tamu.edu/rgutier/csce666_f13/
 431. http://psi.cse.tamu.edu/teaching/lecture_notes/
 432. http://courses.cs.tamu.edu/rgutier/cpsc636_s10/
 433. https://class.coursera.org/neuralnets-2012-001
 434. http://fastml.com/machine-learning-courses-online/
 435. http://nips.cc/
 436. http://www.amazon.com/pattern-classification-2nd-richard-duda/dp/0471056693
 437. http://www.wu.ece.ufl.edu/courses/eel6825s13/
 438. http://www.slatton.ece.ufl.edu/teaching/2010-1_sprg/syllabus_2010.pdf
 439. http://www.stat.ucla.edu/~sczhu/courses/ucla/stat_231/stat_231.html
 440. http://www-stat.stanford.edu/~tibs/elemstatlearn/
 441. https://onlinecourses.science.psu.edu/statprogram/stat557
 442. https://onlinecourses.science.psu.edu/stat557/node/34
 443. http://research.microsoft.com/en-us/um/people/cmbishop/prml/
 444. http://www.cs.ubc.ca/~murphyk/mlbook/
 445. http://web4.cs.ucl.ac.uk/staff/d.barber/pmwiki/pmwiki.php?n=brml.homepage
 446. http://en.wikibooks.org/wiki/data_mining_algorithms_in_r
 447. http://infolab.stanford.edu/~ullman/mmds.html
 448. http://guidetodatamining.com/
 449. http://www.dataminingbook.info/dokuwiki/doku.php?id=start
 450. http://www.intechopen.com/books/theory-and-applications-for-advanced-text-mining
 451. http://stackoverflow.com/questions/10059594/a-simple-explanation-of-naive-bayes-classification
 452. http://www.inf.u-szeged.hu/~ormandi/ai2/06-naivebayes-example.pdf
 453. https://www.youtube.com/watch?v=uzxylbk2c7e
 454. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/photo apr 08, 2 16 19 pm.jpg?attredirects=0
 455. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/stochastic gd.jpg?attredirects=0
 456. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/photo apr 08, 3 57 09 pm.jpg?attredirects=0
 457. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/decision-tree
 458. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/latent-dirichlet-allocation
 459. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/neural-networks
 460. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/random-forest
 461. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/reinforcement-learning
 462. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/sequence
 463. https://sites.google.com/site/shahriarinia/home/ai/machine-learning/id166
 464. https://accounts.google.com/servicelogin?continue=https://sites.google.com/site/shahriarinia/home/ai/machine-learning&service=jotspot
 465. https://sites.google.com/site/shahriarinia/system/app/pages/recentchanges
 466. https://sites.google.com/site/shahriarinia/system/app/pages/reportabuse
 467. javascript:;
 468. http://sites.google.com/site

   hidden links:
 470. http://statweb.stanford.edu/~tibs/elemstatlearn/
