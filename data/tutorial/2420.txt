   #[1]kdnuggets: analytics, big data, data mining and data science feed
   [2]kdnuggets    feed [3]kdnuggets    comments feed [4]kdnuggets   
   implementing your own k-nearest neighbor algorithm using python
   comments feed [5]how to tackle a lottery with mathematics [6]useful
   data science: feature hashing

kdnuggets

     [7]subscribe to kdnuggets news  | [8]twitter    [9]facebook
   [10]linkedin  |  [11]contact
   ____________________ search
   [menu-30.png]
   [search-icon.png]
     * [12]software
     * [13]news/blog
     * [14]top stories
     * [15]opinions
     * [16]tutorials
     * [17]jobs
     * [18]companies
     * [19]courses
     * [20]datasets
     * [21]education
     * [22]certificates
     * [23]meetings
     * [24]webinars


   [25]kdnuggets home    [26]news    [27]2016    [28]jan    [29]tutorials,
   overviews    implementing your own k-nearest neighbor algorithm using
   python ( [30]16:n04 )

implementing your own k-nearest neighbor algorithm using python

   [31][prv.gif] previous post
   [32]next post [nxt.gif]

     http likes 175
   tags: [33]k-nearest neighbors, [34]python, [35]python tutorial

   a detailed explanation of one of the most used machine learning
   algorithms, k-nearest neighbors, and its implementation from scratch in
   python. enhance your algorithmic understanding with this hands-on
   coding exercise.
     __________________________________________________________________

   by natasha latysheva.
   editor's note: natasha is active in the [36]cambridge coding academy,
   which is holding an upcoming [37]data science bootcamp in python on
   20-21 february 2016, where you can learn state-of-the-art machine
   learning techniques for real-world problems.
   in machine learning, you may often wish to build predictors that allows
   to classify things into categories based on some set of associated
   values. for example, it is possible to provide a diagnosis to a patient
   based on data from previous patients. classification can involve
   constructing highly non-linear boundaries between classes, as in the
   case of the red, green and blue classes [38]below:
   knn boundaries
   many algorithms have been developed for automated classification, and
   common ones include id79s, support vector machines, na  ve
   bayes classifiers, and many types of neural networks. to get a feel for
   how classification works, we take a simple example of a classification
   algorithm - k-nearest neighbours (knn) - and build it from scratch in
   python 2. you can use a mostly imperative [39]style of coding, rather
   than a declarative/functional one with [40]lambda functions and
   [41]list comprehensions to keep things simple if you are starting with
   python. here, we will provide an introduction to the latter approach.
   knn classifies new instances by grouping them together with the most
   similar cases. here, you will use knn on the popular (if idealized)
   iris dataset, which consists of flower measurements for three species
   of iris flower. our task is to predict the species labels of a set of
   flowers based on their flower measurements. since you   ll be building a
   predictor based on a set of known correct classifications, knn is a
   type of supervised machine learning (though somewhat confusingly, in
   knn there is no explicit training phase; see [42]lazy learning). the
   knn task can be broken down into writing 3 primary functions:
       1. calculate the distance between any two points
       2. find the nearest neighbours based on these pairwise distances
       3. majority vote on a class labels based on the nearest neighbour
   list
   the steps in the following diagram provide a high-level overview of the
   tasks you'll need to accomplish in your code.
   [43]knn algorithm
   the algorithm
   briefly, you would like to build a script that, for each input that
   needs classification, searches through the entire training set for the
   k-most similar instances. the class labels of the most similar
   instances should then be summarised by majority voting and returned as
   predictions for the test cases.
   the complete code is at the end of the post. now, let's go through the
   different parts separately and explain what they do.
   loading the data and splitting into train and test sets to get up and
   running, you   ll use some helper functions: although we can [44]download
   the iris data ourselves and use [45]csv.reader to load it in, you can
   also quickly fetch the iris data straight from scikit-learn. further,
   you can do a 60/40 train/test split using the train_test_split
   function, but you could have also randomly assigned the rows yourself
   (see this type of implementation here). in machine learning, the
   train/test split is used in order to reduce overfitting - training
   models on the full dataset tends to lead to the model being overfitted
   to the noise and peculiarities of the data, rather than the real,
   underlying trend. you do any sort of model tuning (e.g. picking the
   number of neighbours, k) on the training set only - the test set acts
   as a stand-alone, untouched dataset that you use to test your final
   model performance on.
from sklearn.datasets import load_iris
from sklearn import cross_validation
import numpy as np

# load dataset and partition in training and testing sets
iris = load_iris()
x_train, x_test, y_train, y_test = cross_validation.train_test_split(iris.data,
iris.target, test_size=0.4, random_state=1)

# reformat train/test datasets for convenience
train = np.array(zip(x_train,y_train))
test = np.array(zip(x_test, y_test))

   here is an overview of the iris dataset, the data split, and a quick
   guide to the indexing.
   [46]splitting the iris dataset

   pages: 1 [47]2 [48]3
     __________________________________________________________________

   [49][prv.gif] previous post
   [50]next post [nxt.gif]
     __________________________________________________________________

top stories past 30 days

                                              most popular
    1. [51]another 10 free must-read books for machine learning and data
       science
    2. [52]9 must-have skills you need to become a data scientist, updated
    3. [53]who is a typical data scientist in 2019?
    4. [54]the pareto principle for data scientists
    5. [55]what no one will tell you about data science job applications
    6. [56]19 inspiring women in ai, big data, data science, machine
       learning
    7. [57]my favorite mind-blowing machine learning/ai breakthroughs

                                                most shared
    1. [58]id158s optimization using genetic algorithm
       with python
    2. [59]who is a typical data scientist in 2019?
    3. [60]8 reasons why you should get a microsoft azure certification
    4. [61]the pareto principle for data scientists
    5. [62]r vs python for data visualization
    6. [63]how to work in data science, ai, big data
    7. [64]the deep learning toolset     an overview

[65]latest news

     * [66]download your datax guide to ai in marketing
     * [67]kdnuggets offer: save 20% on strata in london
     * [68]training a champion: building deep neural nets for big ...
     * [69]building a recommender system
     * [70]predict age and gender using convolutional neural netwo...
     * [71]top tweets, mar 27     apr 02: here is a great ex...

more recent stories

     * [72]top tweets, mar 27     apr 02: here is a great explanat...
     * [73]odsc east is selling out; odsc india announced
     * [74]accelerate ai and data science career expo, may 4, 2019
     * [75]grow your data career at datasciencego, san diego, sep 27-29
     * [76]getting started with nlp using the pytorch framework
     * [77]how to diy your data science education
     * [78]top 8 data science use cases in gaming
     * [79]kdnuggets 19:n13, apr 3: top 10 data scientist coding mista...
     * [80]make better data-driven business decisions
     * [81]top stories, mar 25-31: r vs python for data visualization;
       th...
     * [82]two predictive analytics world events in europe this fall
     * [83]7 qualities your big data visualization tools absolutely must
       ...
     * [84]yeshiva university: tenure-track faculty in ai and machine
       lea...
     * [85]which face is real?
     * [86]yeshiva university: program director / tenure track faculty
       me...
     * [87]top 10 coding mistakes made by data scientists
     * [88]uber   s case study at paw industry 4.0: machine learning ...
     * [89]xai     a data scientist   s mouthpiece
     * [90]what does gpt-2 think about the ai arms race?
     * [91]openclassrooms: data freelance online course creator
       [telecomm...

   [92]kdnuggets home    [93]news    [94]2016    [95]jan    [96]tutorials,
   overviews    implementing your own k-nearest neighbor algorithm using
   python ( [97]16:n04 )
      2019 kdnuggets. [98]about kdnuggets.  [99]privacy policy. [100]terms
   of service

   [101]subscribe to kdnuggets news
   [102][tw_c48.png] [103]facebook [104]linkedin
   x
   [envelope.png] [105]get kdnuggets, a leading newsletter on ai, data
   science, and machine learning
   email: ______________________________
   sign up
   leave this field empty if you're human: ____________________

references

   visible links
   1. https://www.kdnuggets.com/feed/
   2. https://www.kdnuggets.com/feed
   3. https://www.kdnuggets.com/comments/feed
   4. https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html/feed
   5. https://www.kdnuggets.com/2016/01/how-tackle-lottery-mathematics.html
   6. https://www.kdnuggets.com/2016/01/useful-data-science-feature-hashing.html
   7. https://www.kdnuggets.com/news/subscribe.html
   8. https://twitter.com/kdnuggets
   9. https://www.facebook.com/kdnuggets
  10. https://www.linkedin.com/groups/54257/
  11. https://www.kdnuggets.com/contact.html
  12. https://www.kdnuggets.com/software/index.html
  13. https://www.kdnuggets.com/news/index.html
  14. https://www.kdnuggets.com/news/top-stories.html
  15. https://www.kdnuggets.com/opinions/index.html
  16. https://www.kdnuggets.com/tutorials/index.html
  17. https://www.kdnuggets.com/jobs/index.html
  18. https://www.kdnuggets.com/companies/index.html
  19. https://www.kdnuggets.com/courses/index.html
  20. https://www.kdnuggets.com/datasets/index.html
  21. https://www.kdnuggets.com/education/index.html
  22. https://www.kdnuggets.com/education/analytics-data-mining-certificates.html
  23. https://www.kdnuggets.com/meetings/index.html
  24. https://www.kdnuggets.com/webcasts/index.html
  25. https://www.kdnuggets.com/
  26. https://www.kdnuggets.com/news/index.html
  27. https://www.kdnuggets.com/2016/index.html
  28. https://www.kdnuggets.com/2016/01/index.html
  29. https://www.kdnuggets.com/2016/01/tutorials.html
  30. https://www.kdnuggets.com/2016/n04.html
  31. https://www.kdnuggets.com/2016/01/how-tackle-lottery-mathematics.html
  32. https://www.kdnuggets.com/2016/01/useful-data-science-feature-hashing.html
  33. https://www.kdnuggets.com/tag/k-nearest-neighbors
  34. https://www.kdnuggets.com/tag/python
  35. https://www.kdnuggets.com/tag/python-tutorial
  36. https://cambridgecoding.com/
  37. https://cambridgecoding.com/datascience-bootcamp
  38. https://en.wikipedia.org/wiki/k-nearest_neighbors_algorithm
  39. http://latentflip.com/imperative-vs-declarative/
  40. http://www.secnetix.de/olli/python/lambda_functions.hawk
  41. http://www.secnetix.de/olli/python/list_comprehensions.hawk
  42. https://en.wikipedia.org/wiki/lazy_learning
  43. https://cambridgecoding.files.wordpress.com/2016/01/knn2.jpg
  44. https://archive.ics.uci.edu/ml/datasets/iris
  45. https://docs.python.org/2/library/csv.html
  46. https://cambridgecoding.files.wordpress.com/2016/01/knn3.jpg
  47. https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html/2
  48. https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html/3
  49. https://www.kdnuggets.com/2016/01/how-tackle-lottery-mathematics.html
  50. https://www.kdnuggets.com/2016/01/useful-data-science-feature-hashing.html
  51. https://www.kdnuggets.com/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html
  52. https://www.kdnuggets.com/2018/05/simplilearn-9-must-have-skills-data-scientist.html
  53. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  54. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  55. https://www.kdnuggets.com/2019/03/data-science-job-applications.html
  56. https://www.kdnuggets.com/2019/03/women-ai-big-data-science-machine-learning.html
  57. https://www.kdnuggets.com/2019/03/favorite-ml-ai-breakthroughs.html
  58. https://www.kdnuggets.com/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html
  59. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  60. https://www.kdnuggets.com/2019/03/simplilearn-8-reasons-microsoft-azure-certification.html
  61. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  62. https://www.kdnuggets.com/2019/03/r-vs-python-data-visualization.html
  63. https://www.kdnuggets.com/2019/03/work-data-science-ai-big-data.html
  64. https://www.kdnuggets.com/2019/03/deep-learning-toolset-overview.html
  65. https://www.kdnuggets.com/news/index.html
  66. https://www.kdnuggets.com/2019/04/datax-download-guide-ai-marketing.html
  67. https://www.kdnuggets.com/2019/04/strata-kdnuggets-offer-save-london.html
  68. https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html
  69. https://www.kdnuggets.com/2019/04/building-recommender-system.html
  70. https://www.kdnuggets.com/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html
  71. https://www.kdnuggets.com/2019/04/top-tweets-mar27-apr02.html
  72. https://www.kdnuggets.com/2019/04/top-tweets-mar27-apr02.html
  73. https://www.kdnuggets.com/2019/04/odsc-east-selling-out-india-announced.html
  74. https://www.kdnuggets.com/jobs/19/04-03-accelerate-ai-data-science-career-expo-2019.html
  75. https://www.kdnuggets.com/2019/04/formulated-data-career-datasciencego-san-diego.html
  76. https://www.kdnuggets.com/2019/04/nlp-pytorch.html
  77. https://www.kdnuggets.com/2019/04/diy-your-data-science-education.html
  78. https://www.kdnuggets.com/2019/04/top-8-data-science-use-cases-gaming.html
  79. https://www.kdnuggets.com/2019/n13.html
  80. https://www.kdnuggets.com/2019/04/psu-make-better-data-driven-business-decisions.html
  81. https://www.kdnuggets.com/2019/04/top-news-week-0325-0331.html
  82. https://www.kdnuggets.com/2019/04/paw-two-predictive-analytics-world-events-europe-fall.html
  83. https://www.kdnuggets.com/2019/04/7-qualities-big-data-visualization-tools.html
  84. https://www.kdnuggets.com/jobs/19/04-02-yeshiva-university-faculty-ai-machine-learning.html
  85. https://www.kdnuggets.com/2019/04/which-face-real-stylegan.html
  86. https://www.kdnuggets.com/jobs/19/04-02-yeshiva-university-program-director-faculty-artificial-intelligence-machine-learning.html
  87. https://www.kdnuggets.com/2019/04/top-10-coding-mistakes-data-scientists.html
  88. https://www.kdnuggets.com/2019/04/paw-uber-case-study-machine-learning-enforce-mobile-performance.html
  89. https://www.kdnuggets.com/2019/04/xai-data-scientist.html
  90. https://www.kdnuggets.com/2019/04/gpt-2-think-about-ai-arms-race.html
  91. https://www.kdnuggets.com/jobs/19/04-01-openclassrooms-data-freelance-online-course-creator-b.html
  92. https://www.kdnuggets.com/
  93. https://www.kdnuggets.com/news/index.html
  94. https://www.kdnuggets.com/2016/index.html
  95. https://www.kdnuggets.com/2016/01/index.html
  96. https://www.kdnuggets.com/2016/01/tutorials.html
  97. https://www.kdnuggets.com/2016/n04.html
  98. https://www.kdnuggets.com/about/index.html
  99. https://www.kdnuggets.com/news/privacy-policy.html
 100. https://www.kdnuggets.com/terms-of-service.html
 101. https://www.kdnuggets.com/news/subscribe.html
 102. https://twitter.com/kdnuggets
 103. https://facebook.com/kdnuggets
 104. https://www.linkedin.com/groups/54257
 105. https://www.kdnuggets.com/news/subscribe.html

   hidden links:
 107. https://www.kdnuggets.com/
 108. https://www.kdnuggets.com/
