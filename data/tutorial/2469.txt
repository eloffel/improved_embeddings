   #[1]github [2]recent commits to multivec:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]19
     * [35]star [36]105
     * [37]fork [38]32

[39]eske/[40]multivec

   [41]code [42]issues 5 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a multilingual and multilevel representation learning toolkit for nlp
     * [47]119 commits
     * [48]8 branches
     * [49]0 releases
     * [50]fetching contributors
     * [51]apache-2.0

    1. [52]c++ 54.8%
    2. [53]python 16.3%
    3. [54]shell 11.5%
    4. [55]java 10.2%
    5. [56]perl 4.0%
    6. [57]cmake 1.3%
    7. other 1.9%

   (button) c++ python shell java perl cmake other
   branch: master (button) new pull request
   [58]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/e
   [59]download zip

downloading...

   want to be notified of new releases in eske/multivec?
   [60]sign in [61]sign up

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [64]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [65]download the github extension for visual studio
   and try again.

   (button) go back
   [66]@eske
   [67]eske [68]save method in bilingualmodel
   latest commit [69]5d7fae6 dec 2, 2016
   [70]permalink
   type        name              latest commit message        commit time
        failed to load latest commit information.
        [71]benchmarks
        [72]cython
        [73]docs           [74]add scientifi paper           apr 26, 2016
        [75]multivec
        [76]scripts
        [77]id97
        [78].gitignore     [79]ignore cython-generated files jun 8, 2016
        [80]cmakelists.txt
        [81]license
        [82]readme.md

readme.md

multivec

   c++ implementation of id97, bivec, and paragraph vector.

features

monolingual model

     * most of id97's features [1, 6]
     * evaluation on the analogical reasoning task (multithreaded version
       of id97's compute-accuracy)
     * batch and online paragraph vector [2]
     * save & load full model, including configuration and vocabulary
     * python wrapper

bilingual model

     * bivec-like training with a parallel corpus [3, 7]
     * save & load full model
     * trains two monolingual models, which can be exported and used by
       multivec
     * python wrapper

dependencies

     * g++ 4.4+
     * cmake 2.6+
     * cython and numpy for the python wrapper

installation

git clone https://github.com/eske/multivec.git
mkdir multivec/build
cd multivec/build
cmake ..
make
cd ..

   the bin directory should now contain 4 binaries:
     * multivec-mono which is used to generate monolingual models;
     * multivec-bi to generate bilingual models;
     * id97 which is a modified version of id97 that matches our
       user interface;
     * compute-accuracy to evaluate id27s on the analogical
       reasoning task (multithreaded version of id97's
       compute-accuracy program).

usage examples

   first create two directories data and models at the root of the
   project, where you will put the text corpora and trained models. the
   script scripts/prepare-data.py can be used to pre-process a corpus
   (punctuation id172, id121, etc.)
mkdir data
mkdir models
wget http://www.statmt.org/wmt14/training-parallel-nc-v9.tgz -p data
tar xzf data/training-parallel-nc-v9.tgz -c data
scripts/prepare-data.py data/training/news-commentary-v9.fr-en data/news-comment
ary fr en --tokenize --normalize-punk

   to train a monolingual model using text corpus data/news-commentary.en
   (use -v option to see the training progress):
bin/multivec-mono --train data/news-commentary.en --save models/news-commentary.
en.bin --threads 16

   to train a bilingual model using parallel corpus
   data/news-commentary.fr and data/news-commentary.en:
bin/multivec-bi --train-src data/news-commentary.fr --train-trg data/news-commen
tary.en --save models/news-commentary.fr-en.bin --threads 16

   to load a bilingual model and export it to source and target
   monolingual models:
bin/multivec-bi --load models/news-commentary.fr-en.bin --save-src models/news-c
ommentary.fr-en.fr.bin --save-trg models/news-commentary.fr-en.en.bin

   to evaluate a trained english model on the analogical reasoning task,
   first export it to the id97 format, then use compute-accuracy:
bin/multivec-mono --load models/news-commentary.en.bin --save-vectors models/vec
tors.txt
bin/compute-accuracy models/vectors.txt 0 < id97/questions-words.txt

   with this example, you should obtain results similar to these:
vocabulary size: 25298
embeddings size: 100
....
total accuracy: 13.2%
syntactic accuracy: 12.8%, semantic accuracy: 33.3%
questions seen: 6792/19544, 34.8%

python wrapper

cd cython
make

   use and train models with python (multivec.so must be in the
   pythonpath, e.g. working directory):
python2
>>> from multivec import monolingualmodel, bilingualmodel
>>> model = bilingualmodel('../models/news-commentary.fr-en.bin')
>>> model.trg_model
<multivec.monolingualmodel at 0x7fcfe0d59870>
>>> model.trg_model.word_vec('france')
array([ 0.2600708 ,  0.72489363, ...,  1.00654161,  0.38837495])
>>> new_model = bilingualmodel(dimension=300, threads=16)
>>> new_model.train('../data/news-commentary.fr', '../data/news-commentary.en')
>>> help(bilingualmodel)  # all the help you need

todo

     * paragraph vector: dbow model (similar to skip-gram)
     * paragraph vector: option to concatenate, sum or average with word
       vectors on projection layer.
     * giza alignment for bilingual model
     * bilingual paragraph vector training

acknowledgements

   this toolkit is part of the project kehath ([83]https://kehath.imag.fr)
   funded by the french national research agency.

lrec paper

   when you use this toolkit, please cite:
@inproceedings{multiveclrec2016,
title                    = {{multivec: a multilingual and multilevel representat
ion learning toolkit for nlp}},
author                   = {alexandre b  rard and christophe servan and olivier p
ietquin and laurent besacier},
booktitle                = {the 10th edition of the language resources and evalu
ation conference (lrec 2016)},
year                     = {2016},
month                    = {may}
}

references

    1. [84]distributed representations of words and phrases and their
       compositionality, mikolov et al. (2013)
    2. [85]distributed representations of sentences and documents, le and
       mikolov (2014)
    3. [86]bilingual word representations with monolingual quality in
       mind, luong et al. (2015)
    4. [87]learning distributed representations for multilingual text
       sequences, pham et al. (2015)
    5. [88]bilbowa: fast bilingual distributed representations without
       word alignments, gouws et al. (2014)
    6. [89]id97 project
    7. [90]bivec project

     *    2019 github, inc.
     * [91]terms
     * [92]privacy
     * [93]security
     * [94]status
     * [95]help

     * [96]contact github
     * [97]pricing
     * [98]api
     * [99]training
     * [100]blog
     * [101]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [102]reload to refresh your
   session. you signed out in another tab or window. [103]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/eske/multivec/commits/master.atom
   3. https://github.com/eske/multivec#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/eske/multivec
  32. https://github.com/join
  33. https://github.com/login?return_to=/eske/multivec
  34. https://github.com/eske/multivec/watchers
  35. https://github.com/login?return_to=/eske/multivec
  36. https://github.com/eske/multivec/stargazers
  37. https://github.com/login?return_to=/eske/multivec
  38. https://github.com/eske/multivec/network/members
  39. https://github.com/eske
  40. https://github.com/eske/multivec
  41. https://github.com/eske/multivec
  42. https://github.com/eske/multivec/issues
  43. https://github.com/eske/multivec/pulls
  44. https://github.com/eske/multivec/projects
  45. https://github.com/eske/multivec/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/eske/multivec/commits/master
  48. https://github.com/eske/multivec/branches
  49. https://github.com/eske/multivec/releases
  50. https://github.com/eske/multivec/graphs/contributors
  51. https://github.com/eske/multivec/blob/master/license
  52. https://github.com/eske/multivec/search?l=c++
  53. https://github.com/eske/multivec/search?l=python
  54. https://github.com/eske/multivec/search?l=shell
  55. https://github.com/eske/multivec/search?l=java
  56. https://github.com/eske/multivec/search?l=perl
  57. https://github.com/eske/multivec/search?l=cmake
  58. https://github.com/eske/multivec/find/master
  59. https://github.com/eske/multivec/archive/master.zip
  60. https://github.com/login?return_to=https://github.com/eske/multivec
  61. https://github.com/join?return_to=/eske/multivec
  62. https://desktop.github.com/
  63. https://desktop.github.com/
  64. https://developer.apple.com/xcode/
  65. https://visualstudio.github.com/
  66. https://github.com/eske
  67. https://github.com/eske/multivec/commits?author=eske
  68. https://github.com/eske/multivec/commit/5d7fae6fc2f75bafe3a1cde3fe51ee27bdc664fb
  69. https://github.com/eske/multivec/commit/5d7fae6fc2f75bafe3a1cde3fe51ee27bdc664fb
  70. https://github.com/eske/multivec/tree/5d7fae6fc2f75bafe3a1cde3fe51ee27bdc664fb
  71. https://github.com/eske/multivec/tree/master/benchmarks
  72. https://github.com/eske/multivec/tree/master/cython
  73. https://github.com/eske/multivec/tree/master/docs
  74. https://github.com/eske/multivec/commit/7ba5e9ecb3dfcb6015c48a652e2ab0c69b647a0a
  75. https://github.com/eske/multivec/tree/master/multivec
  76. https://github.com/eske/multivec/tree/master/scripts
  77. https://github.com/eske/multivec/tree/master/id97
  78. https://github.com/eske/multivec/blob/master/.gitignore
  79. https://github.com/eske/multivec/commit/34acef8ca7bef8138d3c22a1f448c2fdcf4a8fd9
  80. https://github.com/eske/multivec/blob/master/cmakelists.txt
  81. https://github.com/eske/multivec/blob/master/license
  82. https://github.com/eske/multivec/blob/master/readme.md
  83. https://kehath.imag.fr/
  84. http://arxiv.org/abs/1310.4546
  85. http://arxiv.org/abs/1405.4053
  86. http://stanford.edu/~lmthang/bivec/
  87. http://www.aclweb.org/anthology/w15-1512
  88. http://arxiv.org/abs/1410.2455
  89. https://code.google.com/p/id97/
  90. http://stanford.edu/~lmthang/bivec/
  91. https://github.com/site/terms
  92. https://github.com/site/privacy
  93. https://github.com/security
  94. https://githubstatus.com/
  95. https://help.github.com/
  96. https://github.com/contact
  97. https://github.com/pricing
  98. https://developer.github.com/
  99. https://training.github.com/
 100. https://github.blog/
 101. https://github.com/about
 102. https://github.com/eske/multivec
 103. https://github.com/eske/multivec

   hidden links:
 105. https://github.com/
 106. https://github.com/eske/multivec
 107. https://github.com/eske/multivec
 108. https://github.com/eske/multivec
 109. https://help.github.com/articles/which-remote-url-should-i-use
 110. https://github.com/eske/multivec#multivec
 111. https://github.com/eske/multivec#features
 112. https://github.com/eske/multivec#monolingual-model
 113. https://github.com/eske/multivec#bilingual-model
 114. https://github.com/eske/multivec#dependencies
 115. https://github.com/eske/multivec#installation
 116. https://github.com/eske/multivec#usage-examples
 117. https://github.com/eske/multivec#python-wrapper
 118. https://github.com/eske/multivec#todo
 119. https://github.com/eske/multivec#acknowledgements
 120. https://github.com/eske/multivec#lrec-paper
 121. https://github.com/eske/multivec#references
 122. https://github.com/
