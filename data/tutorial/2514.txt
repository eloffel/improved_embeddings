   #[1]index [2]search [3]library documentation

navigation

     * [4]index
     * [5]next |
     * [6]pylearn2 dev documentation   

[7]table of contents

     * [8]welcome
     * [9]pylearn2 vision
     * [10]download and installation
          + [11]data path
          + [12]other methods
               o [13]vagrant (any os)
     * [14]dependencies
     * [15]license and citations
     * [16]documentation
     * [17]community
     * [18]developer

next topic

   [19]library documentation

this page

     * [20]show source

quick search

   ____________________
   go

welcome[21]  

   warning

   this project does not have any current developer. we will continue to
   review pull requests and merge them when appropriate, but do not expect
   new development unless someone decides to work on it.

   there are other machine learning frameworks built on top of theano that
   could interest you, such as: [22]blocks, [23]keras and [24]lasagne.

   don   t expect a clean road without bumps! if you find a bug please write
   to [25]pylearn-dev@googlegroups.com. if you   re a pylearn2 developer and
   you find a bug, please write a unit test for it so the bug doesn   t come
   back!

   pylearn2 is a machine learning library. most of its functionality is
   built on top of [26]theano. this means you can write pylearn2 plugins
   (new models, algorithms, etc) using mathematical expressions, and
   theano will optimize and stabilize those expressions for you, and
   compile them to a backend of your choice (cpu or gpu).

pylearn2 vision[27]  

     * researchers add features as they need them. we avoid getting bogged
       down by too much top-down planning in advance.
     * a machine learning toolbox for easy scientific experimentation.
     * all models/algorithms published by the lisa lab should have
       reference implementations in pylearn2.
     * pylearn2 may wrap other libraries such as scikit-learn when this is
       practical
     * pylearn2 differs from scikit-learn in that pylearn2 aims to provide
       great flexibility and make it possible for a researcher to do
       almost anything, while scikit-learn aims to work as a    black box   
       that can produce good results even if the user does not understand
       the implementation
     * dataset interface for vector, images, video, ...
     * small framework for all what is needed for one normal
       mlp/rbm/sda/convolution experiments.
     * easy reuse of sub-component of pylearn2.
     * using one sub-component of the library does not force you to use /
       learn to use all of the other sub-components if you choose not to.
     * support cross-platform serialization of learned models.
     * remain approachable enough to be used in the classroom (ift6266 at
       the university of montreal).

download and installation[28]  

   there is no pypi download yet, so pylearn2 cannot be installed using
   e.g. pip. you must check out the bleeding-edge/development version from
   github using:
git clone git://github.com/lisa-lab/pylearn2.git

   to make pylearn2 available in your python installation, run the
   following command in the top-level pylearn2 directory (which should
   have been created by the previous command):
python setup.py develop

   you may need to use sudo to invoke this command with administrator
   privileges. if you do not have such access (or would rather not add
   pylearn2 to the global site-packages for whatever reason), you can
   install the relevant links inside the [29]user site-packages directory
   by issuing the command:
python setup.py develop --user

   this command will also compile the cython extensions required for e.g.
   pylearn2.train_extensions.window_flip.

   alternatively, you can make pylearn2 available by adding the
   installation directory to your pythonpath environment variable, but
   note that changing your pythonpath alone won   t compile the cython
   extensions (you will need to make sure the extension .so files are
   built and accessible within the source tree, e.g. with python setup.py
   build_ext --inplace).

data path[30]  

   for some tutorials and tests you will also need to set your
   pylearn2_data_path variable. on linux, the best way to do this is to
   add a line to your ~/.bashrc file:
export pylearn2_data_path=/data/lisa/data

   note that this is only an example, and if you are not in the lisa lab,
   you will need to choose a directory path that is valid on your
   filesystem. simply choose a path where it will be convenient for you to
   store datasets for use with pylearn2.

other methods[31]  

vagrant (any os)[32]  

   [33]pylearn2 in a box uses vagrant to easily create a new vm installed
   with pylearn2 and the necessary packages.
    1. download and install vagrant [34]http://www.vagrantup.com/
    2. download and install virtual box and virtualbox extension pack
       [35]https://www.virtualbox.org/wiki/downloads
    3. download the vagrant scripts from [36]pylearn2 in a box
    4. start the vm by running vagrant up in the directory from step 3

dependencies[37]  

     * [38]theano and its dependencies are required to use pylearn2. since
       pylearn2 is under rapid development some of its features might
       depend on the [39]bleeding-edge version of theano.
     * pyyaml is required for most functionality.
     * pil is required for some image-related functionality.
     * [40]matplotlib is required for some plotting functionality.
     *

        some dependencies are optional:

               o pylearn2 includes code for accessing several standard
                 datasets, such as mnist and cifar-10. however, if you
                 wish to use one of these datasets, you must download the
                 dataset itself manually.
               o the original [41]pylearn project is required for loading
                 some datasets, such as the unsupervised and transfer
                 learning challenge datasets
               o some features (id166s) depend on scikit-learn.
               o id116 depends on [42]milk.
               o reading svhn dataset depends on [43]pytables.

license and citations[44]  

   pylearn2 is released under the 3-claused bsd license, so it may be used
   for commercial purposes. the license does not require anyone to cite
   pylearn2, but if you use pylearn2 in published research work we
   encourage you to cite this article:
     * ian j. goodfellow, david warde-farley, pascal lamblin, vincent
       dumoulin, mehdi mirza, razvan pascanu, james bergstra, fr  d  ric
       bastien, and yoshua bengio. [45]   pylearn2: a machine learning
       research library   . arxiv preprint arxiv:1308.4214 ([46]bibtex)

   pylearn2 is primarily developed by academics, and so citations matter a
   lot to us. as an added benefit, you increase pylearn2   s exposure and
   potential user (and developer) base, which is to the benefit of all
   users of pylearn2. thanks in advance!

documentation[47]  

   roughly in order of what you   ll want to check out:
     * [48]quick-start example     learn the basics via an example.
     * [49]yaml for pylearn2     a tutorial on yaml tags employed by
       pylearn2.
     * [50]ipython notebook tutorials     at this point, you might want to
       work through the ipython notebooks in the    scripts/tutorials   
       directory.
     * [51]a first experiment with pylearn2     a brief introduction to
       running experiments.
     * [52]monitoring experiments in pylearn2     an overview of monitoring
       experiments.
     * [53]your models in pylearn2     a tutorial on porting theano code to
       pylearn2
     * [54]features     a list of features available in the library.
     * [55]overview     a detailed but high-level overview of how pylearn2
       works. this is the place to start if you want to really learn the
       library.
     * [56]library documentation     documentation of the library modules.
     * [57]working with computer clusters     the tools we use at lisa for
       running pylearn2 jobs on hpc clusters.
     * [58]working with large datasets in pylearn2     a guide on how to
       deal with large datasets.
     * [59]pylearn2 vision     some more detailed elaboration of some points
       of the pylearn2 vision.
     * [60]f.a.q.     please read the faq section before posting to
       mailing-lists.

community[61]  

     * register and post to [62]pylearn-users for general inquiries and
       support questions or if you want to talk to other users.
     * register and post to [63]pylearn-dev if you want to talk to the
       developers. we don   t bite.
     * register to [64]pylearn2-github if you want to receive an email for
       all changes to the github repository.
     * register to [65]theano-buildbot if you want to receive our daily
       buildbot email. this is the buildbot for pylearn2, theano, pylearn
       and the deep learning tutorial.
     * ask/view questions/answers about machine learning in general at
       [66]metaoptimize/qa/tags/theano (it   s like stack overflow for
       machine learning)
     * we use the [67]github issues to stay organized.
     * come visit us in montreal! most of the developers are students in
       the [68]lisa group at the [69]university of montreal.

developer[70]  

     * register to everything listed in the community section above
     * follow the lisa lab coding style guidelines:
       [71]http://deeplearning.net/software/pylearn/v2_planning/api_coding
       _style.html
     * [72]pylearn2 api change best practices guide     the best practices
       guide you should follow when changing any api in the library
     * [73]developer start guide     how to contribute code to pylearn2
     * [74]pylearn2 pull request checklist     things you should check your
       pull request for before review.
     * [75]data specifications, spaces, and sources     the interface
       different elements use to request and provide data

navigation

     * [76]index
     * [77]next |
     * [78]pylearn2 dev documentation   

      copyright 2011-2015, lisa lab. last updated on may 26, 2017. created
   using [79]sphinx 1.5.theme by [80]vkvn

references

   1. http://deeplearning.net/software/pylearn2/genindex.html
   2. http://deeplearning.net/software/pylearn2/search.html
   3. http://deeplearning.net/software/pylearn2/library/index.html
   4. http://deeplearning.net/software/pylearn2/genindex.html
   5. http://deeplearning.net/software/pylearn2/library/index.html
   6. http://deeplearning.net/software/pylearn2/
   7. http://deeplearning.net/software/pylearn2/
   8. http://deeplearning.net/software/pylearn2/
   9. http://deeplearning.net/software/pylearn2/#pylearn2-vision
  10. http://deeplearning.net/software/pylearn2/#download-and-installation
  11. http://deeplearning.net/software/pylearn2/#data-path
  12. http://deeplearning.net/software/pylearn2/#other-methods
  13. http://deeplearning.net/software/pylearn2/#vagrant-any-os
  14. http://deeplearning.net/software/pylearn2/#dependencies
  15. http://deeplearning.net/software/pylearn2/#license-and-citations
  16. http://deeplearning.net/software/pylearn2/#documentation
  17. http://deeplearning.net/software/pylearn2/#community
  18. http://deeplearning.net/software/pylearn2/#developer
  19. http://deeplearning.net/software/pylearn2/library/index.html
  20. http://deeplearning.net/software/pylearn2/_sources/index.txt
  21. http://deeplearning.net/software/pylearn2/#welcome
  22. https://blocks.readthedocs.org/en/latest
  23. http://keras.io/
  24. https://lasagne.readthedocs.org/en/latest
  25. mailto:pylearn-dev@googlegroups.com
  26. http://deeplearning.net/software/theano/
  27. http://deeplearning.net/software/pylearn2/#pylearn2-vision
  28. http://deeplearning.net/software/pylearn2/#download-and-installation
  29. https://docs.python.org/2/install/#alternate-installation-the-user-scheme
  30. http://deeplearning.net/software/pylearn2/#data-path
  31. http://deeplearning.net/software/pylearn2/#other-methods
  32. http://deeplearning.net/software/pylearn2/#vagrant-any-os
  33. https://github.com/ironchief/pylearn2_vagrant
  34. http://www.vagrantup.com/
  35. https://www.virtualbox.org/wiki/downloads
  36. https://github.com/ironchief/pylearn2_vagrant
  37. http://deeplearning.net/software/pylearn2/#dependencies
  38. http://deeplearning.net/software/theano/
  39. http://deeplearning.net/software/theano/install.html#bleeding-edge-install-instructions
  40. http://matplotlib.org/
  41. http://deeplearning.net/software/pylearn/
  42. https://pythonhosted.org/milk/
  43. http://www.pytables.org/
  44. http://deeplearning.net/software/pylearn2/#license-and-citations
  45. http://arxiv.org/abs/1308.4214
  46. http://www.iro.umontreal.ca/~lisa/publications2/index.php/export/publication/594/bibtex
  47. http://deeplearning.net/software/pylearn2/#documentation
  48. http://deeplearning.net/software/pylearn2/tutorial/index.html#tutorial
  49. http://deeplearning.net/software/pylearn2/yaml_tutorial/index.html#yaml-tutorial
  50. http://deeplearning.net/software/pylearn2/tutorial/notebook_tutorials.html#notebook-tutorials
  51. http://daemonmaker.blogspot.ca/2014/10/a-first-experiment-with-pylearn2.html
  52. http://daemonmaker.blogspot.ca/2014/12/monitoring-experiments-in-pylearn2.html
  53. http://deeplearning.net/software/pylearn2/theano_to_pylearn2_tutorial.html#theano-to-pylearn2-tutorial
  54. http://deeplearning.net/software/pylearn2/features.html#features
  55. http://deeplearning.net/software/pylearn2/overview.html#overview
  56. http://deeplearning.net/software/pylearn2/library/index.html#libdoc
  57. http://deeplearning.net/software/pylearn2/cluster.html#cluster
  58. http://deeplearning.net/software/pylearn2/large_data.html#large-data
  59. http://deeplearning.net/software/pylearn2/vision.html#vision
  60. http://deeplearning.net/software/pylearn2/faq.html#faq
  61. http://deeplearning.net/software/pylearn2/#community
  62. https://groups.google.com/group/pylearn-users
  63. https://groups.google.com/group/pylearn-dev
  64. https://groups.google.com/group/pylearn2-github
  65. http://groups.google.com/group/theano-buildbot
  66. http://metaoptimize.com/qa/tags/theano/
  67. https://github.com/lisa-lab/pylearn2/issues
  68. http://www.iro.umontreal.ca/~lisa
  69. http://www.umontreal.ca/
  70. http://deeplearning.net/software/pylearn2/#developer
  71. http://deeplearning.net/software/pylearn/v2_planning/api_coding_style.html
  72. http://deeplearning.net/software/pylearn2/api_change.html#api-change
  73. http://deeplearning.net/software/pylearn2/internal/dev_start_guide.html#dev-start-guide
  74. http://deeplearning.net/software/pylearn2/internal/pull_request_checklist.html#pull-request-checklist
  75. http://deeplearning.net/software/pylearn2/internal/data_specs.html#data-specs
  76. http://deeplearning.net/software/pylearn2/genindex.html
  77. http://deeplearning.net/software/pylearn2/library/index.html
  78. http://deeplearning.net/software/pylearn2/
  79. http://sphinx.pocoo.org/
  80. http://github.com/vkvn
