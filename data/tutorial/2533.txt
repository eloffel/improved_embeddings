   #[1]github [2]recent commits to nn_coref:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]11
     * [35]star [36]97
     * [37]fork [38]36

[39]swiseman/[40]nn_coref

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   neural coref models
     * [47]50 commits
     * [48]2 branches
     * [49]0 releases
     * [50]fetching contributors
     * [51]gpl-3.0

    1. [52]scala 73.4%
    2. [53]lua 13.4%
    3. [54]java 8.0%
    4. [55]perl 3.6%
    5. [56]python 1.6%

   (button) scala lua java perl python
   branch: master (button) new pull request
   [57]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/s
   [58]download zip

downloading...

   want to be notified of new releases in swiseman/nn_coref?
   [59]sign in [60]sign up

launching github desktop...

   if nothing happens, [61]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [63]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [64]download the github extension for visual studio
   and try again.

   (button) go back
   sam wiseman
   sam wiseman [65]updating sbt file and jar
   latest commit [66]e29b16d sep 26, 2018
   [67]permalink
 type                   name                  latest commit message  commit time
      failed to load latest commit information.
      [68]modifiedbcs
      [69]nn
      [70]reference-coreference-scorers/v8.01
      [71].gitignore
      [72]license.txt
      [73]readme.md
      [74]smalldevopcs.txt
      [75]smalltrainopcs.txt
      [76]nncoref_acl15_slides.pdf
      [77]nncoref_naacl16_slides.pdf          [78]adding slides     jun 22, 2016
      [79]text_feats_to_hdf5_replacezero.py

readme.md

nn_coref

   neural coref models, as described in [80]"learning global features for
   coreference resolution", sam wiseman, alexander m. rush, and stuart m.
   shieber, naacl 2016,

   and

   [81]"learning anaphoricity and antecedent ranking features for
   coreference resolution", sam wiseman, alexander m. rush, stuart m.
   shieber, and jason weston. acl 2015.

   for questions/concerns/bugs please contact swiseman at
   seas.harvard.edu.

overview

   to keep things simple, the original acl code is now in the acl15
   branch. this readme will cover duplicating the naacl 2016 results.

prerequisites

   in addition to torch, nn, and the prerequisites listed in
   modifiedbcs/readme.md, you will need the element-research id56 library:
   [82]https://github.com/element-research/id56

generating features

   see the readme in the modifiedbcs/ directory for running the scala
   feature/mention extractor. once you've generated text feature files,
   use text_feats_to_hdf_5_replacezero.py to convert them to hdf5 (to be
   consumed by torch), as follows:

   python text_feats_to_hdf5_replacezero.py
   small-final+moaranaph+moarpw-anaphtrainfeats.txt train_small ana -n 4
   -r 14215

   python text_feats_to_hdf5_replacezero.py
   small-final+moaranaph+moarpw-anaphdevfeats.txt dev_small ana -n 4 -r
   14215

   python text_feats_to_hdf5_replacezero.py
   small-final+moaranaph+moarpw-anaphtestfeats.txt test_small ana -n 4 -r
   14215

   python text_feats_to_hdf5_replacezero.py
   small-final+moaranaph+moarpw-pwtrainfeats.txt train_small pw -n 4 -r
   28394

   python text_feats_to_hdf5_replacezero.py
   small-final+moaranaph+moarpw-pwdevfeats.txt dev_small pw -n 4 -r 28394

   python text_feats_to_hdf5_replacezero.py
   small-final+moaranaph+moarpw-pwtestfeats.txt test_small pw -n 4 -r
   28394

   the "-r" argument takes the index of a dummy feature used to replace
   features unseen in the training set; above it is set to be one greater
   than the number of training features (and should never be less than
   this). the "-n" argument controls the number of processes spawned by
   the script.

   you can also download bzipped hdf5 features here:
   [83]https://drive.google.com/folderview?id=0b1ytqxpduw7ovzi3mlrlmefcchm
   &usp=sharing

   before doing any training or pre-training, please create a directory
   called nn/models/

pre-training

   given the hdf5 files generated in the previous step, you can pre-train
   anaphoricity and pairwise networks as follows:

   th ana_model.lua

   th ante_model.lua -gpuid 0

   see the respective files for additional options and documentation.

   you can download bzipped pre-trained anaphoricity and pairwise networks
   from
   [84]https://drive.google.com/folderview?id=0b1ytqxpduw7oyucwsevprjfem00
   &usp=sharing , where they are called small_200.model-na-0.100000.bz2
   and small_700.model-pw-0.100000.bz2, respectively.

training the full model

   assuming you've put your pre-trained networks in nn/models/, you can
   now train the full model as follows:

   th mr_clust_embed.lua -gpuid 0 -pt -save -savepfx trpldev

   the default settings in mr_clust_embed.lua reflect those used in our
   final experiments (and so, for instance, both dev and train will be
   used as training data), but see the file for additional options and
   documentation.

   you can download bzipped trained full model components from
   [85]https://drive.google.com/folderview?id=0b1ytqxpduw7oyucwsevprjfem00
   &usp=sharing , where the relevant files are
   trpldev-mce-700-200.model-na.bz2, trpldev-mce-700-200.model-pw.bz2, and
   trpldev-mce-700-200.model-lstm.bz2

predicting with saved models

   if you've trained (or downloaded) full model components, you can make
   predictions as follows:
     * if they don't exist, create the directories nn/bps/ and
       nn/conllouts/ .
     * run th mr_clust_embed.lua -gpuid 0 -loadandpredict -pwdevfeatprefix
       test_small -anadevfeatprefix test_small -savedpwnetfi
       models/trpldev-mce-700-200.model-pw -savednanetfi
       models/trpldev-mce-700-200.model-na -savedlstmfi
       models/trpldevdup-mce-700-200.model-lstm
     * the above will create a back-pointer file in bps/ . suppose the
       file is called bps/xyzdev.bps . then to generate a conll output
       file, run ../modifiedbcs/writeconllpreds.sh bps bps/xyzdev.bps
       conllouts ../flat_test_2012/ ../gender.data
          + n.b. you may need to modify the paths to the jar files on the
            second line of modifiedbcs/writeconllpreds.sh to get this to
            work
     * the resulting output file (in conllouts/) can now be scored using
       the standard conll scorer.

   training as in the previous sub-section and evaluating as above should
   produce results very close to those in the naacl paper, and probably a
   bit better. after re-training the cleaned-up and re-factored version in
   this repo, i got p/r/f scores of:

   muc: 77.14/70.12/73.46

   bcub: 66.43/57.47/61.62

   ceafe: 62.29/54.01/57.85

   conll: 64.31

training the acl (non-cluster) model

   the mention-ranking model from the acl paper has been re-implemented
   and considerably simplified in vanilla_mr.lua. it can be run as
   follows:

   th vanilla_mr.lua -gpuid 0 -pt

   unlike the original acl implementation, this implementation is easy to
   run on a gpu, and with the new, even-smaller feature-set it should do
   at least as well.

copyright

   copyright (c) 2016 sam wiseman. all rights reserved.

license

   the code in this repository is covered by a gnu gpl license. see
   license.txt.

     *    2019 github, inc.
     * [86]terms
     * [87]privacy
     * [88]security
     * [89]status
     * [90]help

     * [91]contact github
     * [92]pricing
     * [93]api
     * [94]training
     * [95]blog
     * [96]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [97]reload to refresh your
   session. you signed out in another tab or window. [98]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/swiseman/nn_coref/commits/master.atom
   3. https://github.com/swiseman/nn_coref#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/swiseman/nn_coref
  32. https://github.com/join
  33. https://github.com/login?return_to=/swiseman/nn_coref
  34. https://github.com/swiseman/nn_coref/watchers
  35. https://github.com/login?return_to=/swiseman/nn_coref
  36. https://github.com/swiseman/nn_coref/stargazers
  37. https://github.com/login?return_to=/swiseman/nn_coref
  38. https://github.com/swiseman/nn_coref/network/members
  39. https://github.com/swiseman
  40. https://github.com/swiseman/nn_coref
  41. https://github.com/swiseman/nn_coref
  42. https://github.com/swiseman/nn_coref/issues
  43. https://github.com/swiseman/nn_coref/pulls
  44. https://github.com/swiseman/nn_coref/projects
  45. https://github.com/swiseman/nn_coref/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/swiseman/nn_coref/commits/master
  48. https://github.com/swiseman/nn_coref/branches
  49. https://github.com/swiseman/nn_coref/releases
  50. https://github.com/swiseman/nn_coref/graphs/contributors
  51. https://github.com/swiseman/nn_coref/blob/master/license.txt
  52. https://github.com/swiseman/nn_coref/search?l=scala
  53. https://github.com/swiseman/nn_coref/search?l=lua
  54. https://github.com/swiseman/nn_coref/search?l=java
  55. https://github.com/swiseman/nn_coref/search?l=perl
  56. https://github.com/swiseman/nn_coref/search?l=python
  57. https://github.com/swiseman/nn_coref/find/master
  58. https://github.com/swiseman/nn_coref/archive/master.zip
  59. https://github.com/login?return_to=https://github.com/swiseman/nn_coref
  60. https://github.com/join?return_to=/swiseman/nn_coref
  61. https://desktop.github.com/
  62. https://desktop.github.com/
  63. https://developer.apple.com/xcode/
  64. https://visualstudio.github.com/
  65. https://github.com/swiseman/nn_coref/commit/e29b16deecd0d87d4b7c145e07e2908266fe63d6
  66. https://github.com/swiseman/nn_coref/commit/e29b16deecd0d87d4b7c145e07e2908266fe63d6
  67. https://github.com/swiseman/nn_coref/tree/e29b16deecd0d87d4b7c145e07e2908266fe63d6
  68. https://github.com/swiseman/nn_coref/tree/master/modifiedbcs
  69. https://github.com/swiseman/nn_coref/tree/master/nn
  70. https://github.com/swiseman/nn_coref/tree/master/reference-coreference-scorers/v8.01
  71. https://github.com/swiseman/nn_coref/blob/master/.gitignore
  72. https://github.com/swiseman/nn_coref/blob/master/license.txt
  73. https://github.com/swiseman/nn_coref/blob/master/readme.md
  74. https://github.com/swiseman/nn_coref/blob/master/smalldevopcs.txt
  75. https://github.com/swiseman/nn_coref/blob/master/smalltrainopcs.txt
  76. https://github.com/swiseman/nn_coref/blob/master/nncoref_acl15_slides.pdf
  77. https://github.com/swiseman/nn_coref/blob/master/nncoref_naacl16_slides.pdf
  78. https://github.com/swiseman/nn_coref/commit/bb421a51b4e57179be44ed1468c7e0d6a06cab49
  79. https://github.com/swiseman/nn_coref/blob/master/text_feats_to_hdf5_replacezero.py
  80. http://nlp.seas.harvard.edu/papers/corefmain.pdf
  81. http://people.seas.harvard.edu/~srush/acl15.pdf
  82. https://github.com/element-research/id56
  83. https://drive.google.com/folderview?id=0b1ytqxpduw7ovzi3mlrlmefcchm&usp=sharing
  84. https://drive.google.com/folderview?id=0b1ytqxpduw7oyucwsevprjfem00&usp=sharing
  85. https://drive.google.com/folderview?id=0b1ytqxpduw7oyucwsevprjfem00&usp=sharing
  86. https://github.com/site/terms
  87. https://github.com/site/privacy
  88. https://github.com/security
  89. https://githubstatus.com/
  90. https://help.github.com/
  91. https://github.com/contact
  92. https://github.com/pricing
  93. https://developer.github.com/
  94. https://training.github.com/
  95. https://github.blog/
  96. https://github.com/about
  97. https://github.com/swiseman/nn_coref
  98. https://github.com/swiseman/nn_coref

   hidden links:
 100. https://github.com/
 101. https://github.com/swiseman/nn_coref
 102. https://github.com/swiseman/nn_coref
 103. https://github.com/swiseman/nn_coref
 104. https://help.github.com/articles/which-remote-url-should-i-use
 105. https://github.com/swiseman/nn_coref#nn_coref
 106. https://github.com/swiseman/nn_coref#overview
 107. https://github.com/swiseman/nn_coref#prerequisites
 108. https://github.com/swiseman/nn_coref#generating-features
 109. https://github.com/swiseman/nn_coref#pre-training
 110. https://github.com/swiseman/nn_coref#training-the-full-model
 111. https://github.com/swiseman/nn_coref#predicting-with-saved-models
 112. https://github.com/swiseman/nn_coref#training-the-acl-non-cluster-model
 113. https://github.com/swiseman/nn_coref#copyright
 114. https://github.com/swiseman/nn_coref#license
 115. https://github.com/
