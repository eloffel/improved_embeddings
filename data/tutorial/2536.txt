open advancement of id53 systems

oaqa website

   [1]follow me ongithub

open advancement

   the open-source oaqa project is dedicated to open advancement in the
   engineering of id53 systems - language software systems
   that provide direct answers to questions posed in natural language.
   since 2007, carnegie mellon has collaborated with ibm research and
   other universities to advance the state of the art in language systems
   architecture, component algorithms, and end-to-end performance by
   establishing a shared vision, architectural commitments, and process to
   prioritize and guide an agile approach to developing high-performance
   applications.
     * vision. we believe that research and development of complex
       language technologies can be accelerated significantly by adhering
       to a set of architectural principles coupled with a formal,
       iterative development process.
     * commitments. in order to define and effectively search the space of
       possible solutions (software systems) for a task, a team must
       commit to a shared architecture, resources, tools and metrics - at
       both the component and system level.
     * process. in order to make rapid progress and, each system iteration
       must undergo a formal build / test / evaluate / analyze /
       prioritize cycle to keep the team focused on improvements that have
       the greatest impact.

   the watson id53 system developed at ibm research is the
   first highly-visible example of what is possible with this approach.
   the oaqa approach is the foundation for many sponsored research and
   development projects in the language technologies institute at cmu, not
   only for id53 but also for related language applications
   such as multimedia id37.

project organization

   at the base of the open advancement stack we have the [2]cse-framework,
   the framework provides a common ground for experimentation and
   analysis.

   on top of the cse-framework, we've built task level resources that
   provide pipelines, tools and metrics for building specific language
   processing components: [3]baseqa for id53, etc.

   to benefit developers who are already familiar with uima framework, we
   have developed a tutorial on cse in alignment with the examples in the
   official uima tutorial:
   [4]http://github.com/oaqa/oaqa-tutorial/wiki/tutorial.

   analogous to a typical uima cpe descriptor, components, configurations,
   and collection readers in the cse framework are declared in extended
   configuration descriptors7, which are based on the yaml format:
   [5]http://github.com/oaqa/uima-ecd.

   global resource caching. as these online resources, e.g. biomedical
   ontologies, entrezgene, mesh, etc., might sometimes become temporarily
   unavailable or have their contents updated, which makes it difficult to
   reproduce specific experimental results, we implement a generic
   resource caching strategy as part of the cse framework implementation:
   [6]http://github.com/oaqa/resource-wrappers.

   the component ranking strategy can be configured by the user; several
   heuristic strategies are implemented in the open source software:
   [7]https://github.com/oaqa/bagpipes.

   the implemented components, benchmarks, task-specific evaluation
   methods are included in domain-specific layer named bioqa, which was
   plugged into the baseqa framework: [8]http://github.com/oaqa/bioqa.
     * [9]oaqa tutorial
     * [10]wiki content, structure, and general rules
     * [11]oaqa development teams
     * [12]etiquette for working on another team's repo
     * [13]oaqa development model/developer manual
     * [14]oaqa development coding conventions

authors and contributors

   contact: eric nyberg [15]www, zi yang ([16]@ziy), avner maiberg
   ([17]@amaiberg), elmer garduno ([18]@elmer-garduno) or check [19]here
   for a list of all our contibutors.

publications

     * z. yang, e. garduno, y. fang, a. maiberg, c. mccormack, and e.
       nyberg. building optimal information systems automatically:
       configuration space exploration for biomedical information systems.
       in proceedings of the cikm   13, 2013.
     * alkesh patel, zi yang, eric nyberg and teruko mitamura. building
       optimal id53 system automatically using configuration
       space exploration (cse) qa4mre 2013 tasks
     * elmer garduno, zi yang, avner maiberg, collin mccormack, yan fang,
       eric nyberg. cse framework: a uima-based distributed system for
       configuration space exploration unstructured information management
       architecture (uima) 3rd uima@gscl workshop

reference

     * [20]https://mu.lti.cs.cmu.edu/trac/oaqa
     * [21]https://mu.lti.cs.cmu.edu/trac/oaqa2.0

   this page was generated by [22]github pages using the architect theme
   by [23]jason long.

references

   visible links
   1. https://github.com/oaqa
   2. https://github.com/oaqa/cse-framework
   3. https://github.com/oaqa/baseqa
   4. http://github.com/oaqa/oaqa-tutorial/wiki/tutorial
   5. http://github.com/oaqa/uima-ecd
   6. http://github.com/oaqa/resource-wrappers
   7. https://github.com/oaqa/bagpipes
   8. http://github.com/oaqa/bioqa
   9. https://github.com/oaqa/oaqa-tutorial/wiki/tutorial
  10. https://github.com/oaqa/oaqa.github.com/wiki/wikiinfo
  11. https://github.com/oaqa/oaqa.github.com/wiki/teams
  12. https://github.com/oaqa/oaqa.github.com/wiki/interteampractices
  13. https://github.com/oaqa/oaqa.github.com/wiki/devmodel
  14. https://github.com/oaqa/oaqa.github.com/wiki/coding-style
  15. http://www.cs.cmu.edu/~ehn/
  16. https://github.com/ziy
  17. https://github.com/amaiberg
  18. https://github.com/elmer-garduno
  19. https://github.com/oaqa?tab=members
  20. https://mu.lti.cs.cmu.edu/trac/oaqa
  21. https://mu.lti.cs.cmu.edu/trac/oaqa2.0
  22. https://oaqa.github.io/pages.github.com
  23. https://twitter.com/jasonlong

   hidden links:
  25. https://oaqa.github.io/#open-advancement
  26. https://oaqa.github.io/#project-organization
  27. https://oaqa.github.io/#authors-and-contributors
  28. https://oaqa.github.io/#publications
  29. https://oaqa.github.io/#reference
