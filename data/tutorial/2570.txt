   #[1]kdnuggets: analytics, big data, data mining and data science feed
   [2]kdnuggets    feed [3]kdnuggets    comments feed [4]kdnuggets    why
   implement machine learning algorithms from scratch? comments feed
   [5]ten signs of data science maturity     free o   reilly ebook [6]meet the
   11 big data & data science leaders on linkedin

kdnuggets

     [7]subscribe to kdnuggets news  | [8]twitter    [9]facebook
   [10]linkedin  |  [11]contact
   ____________________ search
   [menu-30.png]
   [search-icon.png]
     * [12]software
     * [13]news/blog
     * [14]top stories
     * [15]opinions
     * [16]tutorials
     * [17]jobs
     * [18]companies
     * [19]courses
     * [20]datasets
     * [21]education
     * [22]certificates
     * [23]meetings
     * [24]webinars


   [25]kdnuggets home    [26]news    [27]2016    [28]may    [29]opinions,
   interviews, reports    why implement machine learning algorithms from
   scratch? ( [30]16:n17 )

why implement machine learning algorithms from scratch?

   [31][prv.gif] previous post
   [32]next post [nxt.gif]

     http likes 548
   tags: [33]algorithms, [34]machine learning

   even with machine learning libraries covering almost any algorithm
   implementation you could imagine, there are often still good reasons to
   write your own. read on to find out what these reasons are.
     __________________________________________________________________

   by [35]sebastian raschka, michigan state university.

                                                            c [36]comments

   there are several different reasons why implementing algorithms from
   scratch can be useful:
    1. it can help us to understand the inner works of an algorithm
    2. we could try to implement an algorithm more efficiently
    3. we can add new features to an algorithm or experiment with
       different variations of the core idea
    4. we circumvent licensing issues (e.g., linux vs. unix) or platform
       restrictions
    5. we want to invent new algorithms or implement algorithms no one has
       implemented/shared yet
    6. we are not satisfied with the api and/or we want to integrate it
       more "naturally" into an existing software library

                          machine learning taxonomy

   let us narrow down the phrase "implementing from scratch" a bit further
   in context of the 6 points i mentioned above. when we talk about
   "implementing from scratch," we need to narrow down the scope to make
   this question really tangible. let's talk about a particular algorithm,
   simple id28, to address the different points using
   concrete examples. i'd claim that id28 has been
   implemented more than thousand times.

   one reason why we'd still want to implement id28 from
   scratch could be that we don't have the impression that we fully
   understand how it works; we read a bunch of papers, and kind of
   understood the core concept though. using a programming language for
   prototyping (e.g., python, matlab, r, and so forth), we could take the
   ideas from paper and try to express them in code -- step by step. an
   established library, such as scikit-learn, can help us than
   double-check the results and to see if our implementation -- our idea
   of how the algorithm is supposed to work -- is correct. here, we don't
   really care about efficiency; although we spend so much time to
   implement the algorithm, we probably want to use an established library
   if we want to perform some serious analysis in our research lab and/or
   company. established libraries are typically more trustworthy -- they
   have been battle-tested by many people, people who may have already
   encountered certain edge cases and made sure that there are no weird
   surprises. furthermore, it is also more likely that this code was
   highly optimized for computational efficiency over time. here,
   implementing from scratch simply serves the purpose of self-assessment.
   reading about a concept is one thing, but putting it to action is a
   whole other level of understanding -- and being able to explain it to
   others is the icing on the cake.

   another reason why we want to re-implement id28 from
   scratch may be that we are not satisfied with the "features" of other
   implementations. let's us naively assume that other implementations
   don't have id173 parameters, or it doesn't support multi-class
   settings (i.e., via one-vs-all, one-vs-one, or softmax). or if
   computational (or predictive) efficiency is an issue, maybe we want to
   implement it with another solver (e.g., newton vs. id119 vs.
   stochastic id119, etc.). but improvements concerning
   computational efficiency does not necessarily need to be in terms of
   modifications of the algorithms, but we could use lower-level
   programming languages, for example, scala instead of python, or fortran
   instead of scala, ... this can go all down to assembly or machine code,
   or designing a chip that is optimized for running such kind of
   analysis. however, if you are a machine learning (or "data science")
   practitioner or researcher, this is probably something you should
   delegate to the software engineering team.

                          decision tree pseudocode

   to come back to the main question: different people implement
   algorithms from scratch for various reasons. personally, when i
   implement algorithms from scratch, i do it because of the learning
   experience.

   bio: [37]sebastian raschka is a 'data scientist' and machine learning
   enthusiast with a big passion for python & open source. author of
   '[38]python machine learning'. michigan state university.

   [39]original. reposted with permission.

   related:
     * [40]when does deep learning work better than id166s or random
       forests?
     * [41]the development of classification as a learning machine
     * [42]top 10 data mining algorithms, explained
     __________________________________________________________________

   [43][prv.gif] previous post
   [44]next post [nxt.gif]
     __________________________________________________________________

top stories past 30 days

                                              most popular
    1. [45]another 10 free must-read books for machine learning and data
       science
    2. [46]9 must-have skills you need to become a data scientist, updated
    3. [47]who is a typical data scientist in 2019?
    4. [48]the pareto principle for data scientists
    5. [49]what no one will tell you about data science job applications
    6. [50]19 inspiring women in ai, big data, data science, machine
       learning
    7. [51]my favorite mind-blowing machine learning/ai breakthroughs

                                                most shared
    1. [52]id158s optimization using genetic algorithm
       with python
    2. [53]who is a typical data scientist in 2019?
    3. [54]8 reasons why you should get a microsoft azure certification
    4. [55]the pareto principle for data scientists
    5. [56]r vs python for data visualization
    6. [57]how to work in data science, ai, big data
    7. [58]the deep learning toolset     an overview

[59]latest news

     * [60]download your datax guide to ai in marketing
     * [61]kdnuggets offer: save 20% on strata in london
     * [62]training a champion: building deep neural nets for big ...
     * [63]building a recommender system
     * [64]predict age and gender using convolutional neural netwo...
     * [65]top tweets, mar 27     apr 02: here is a great ex...

   [66]kdnuggets home    [67]news    [68]2016    [69]may    [70]opinions,
   interviews, reports    why implement machine learning algorithms from
   scratch? ( [71]16:n17 )
      2019 kdnuggets. [72]about kdnuggets.  [73]privacy policy. [74]terms
   of service

   [75]subscribe to kdnuggets news
   [76][tw_c48.png] [77]facebook [78]linkedin
   x

   [envelope.png] [79]get kdnuggets, a leading newsletter on ai, data
   science, and machine learning
   email: ______________________________
   sign up
   leave this field empty if you're human: ____________________

references

   visible links
   1. https://www.kdnuggets.com/feed/
   2. https://www.kdnuggets.com/feed
   3. https://www.kdnuggets.com/comments/feed
   4. https://www.kdnuggets.com/2016/05/implement-machine-learning-algorithms-scratch.html/feed
   5. https://www.kdnuggets.com/2016/05/ten-signs-data-science-maturity-free-ebook.html
   6. https://www.kdnuggets.com/2016/05/10-big-data-data-science-leaders-linkedin.html
   7. https://www.kdnuggets.com/news/subscribe.html
   8. https://twitter.com/kdnuggets
   9. https://www.facebook.com/kdnuggets
  10. https://www.linkedin.com/groups/54257/
  11. https://www.kdnuggets.com/contact.html
  12. https://www.kdnuggets.com/software/index.html
  13. https://www.kdnuggets.com/news/index.html
  14. https://www.kdnuggets.com/news/top-stories.html
  15. https://www.kdnuggets.com/opinions/index.html
  16. https://www.kdnuggets.com/tutorials/index.html
  17. https://www.kdnuggets.com/jobs/index.html
  18. https://www.kdnuggets.com/companies/index.html
  19. https://www.kdnuggets.com/courses/index.html
  20. https://www.kdnuggets.com/datasets/index.html
  21. https://www.kdnuggets.com/education/index.html
  22. https://www.kdnuggets.com/education/analytics-data-mining-certificates.html
  23. https://www.kdnuggets.com/meetings/index.html
  24. https://www.kdnuggets.com/webcasts/index.html
  25. https://www.kdnuggets.com/
  26. https://www.kdnuggets.com/news/index.html
  27. https://www.kdnuggets.com/2016/index.html
  28. https://www.kdnuggets.com/2016/05/index.html
  29. https://www.kdnuggets.com/2016/05/opinions-interviews.html
  30. https://www.kdnuggets.com/2016/n17.html
  31. https://www.kdnuggets.com/2016/05/ten-signs-data-science-maturity-free-ebook.html
  32. https://www.kdnuggets.com/2016/05/10-big-data-data-science-leaders-linkedin.html
  33. https://www.kdnuggets.com/tag/algorithms
  34. https://www.kdnuggets.com/tag/machine-learning
  35. https://www.kdnuggets.com/author/sebastian-raschka
  36. https://www.kdnuggets.com/2016/05/implement-machine-learning-algorithms-scratch.html#comments
  37. https://twitter.com/rasbt
  38. https://www.packtpub.com/big-data-and-business-intelligence/python-machine-learning
  39. https://github.com/rasbt/python-machine-learning-book/blob/master/faq/implementing-from-scratch.md
  40. https://www.kdnuggets.com/2016/04/deep-learning-vs-id166-random-forest.html
  41. https://www.kdnuggets.com/2016/04/development-classification-learning-machine.html
  42. https://www.kdnuggets.com/2015/05/top-10-data-mining-algorithms-explained.html
  43. https://www.kdnuggets.com/2016/05/ten-signs-data-science-maturity-free-ebook.html
  44. https://www.kdnuggets.com/2016/05/10-big-data-data-science-leaders-linkedin.html
  45. https://www.kdnuggets.com/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html
  46. https://www.kdnuggets.com/2018/05/simplilearn-9-must-have-skills-data-scientist.html
  47. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  48. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  49. https://www.kdnuggets.com/2019/03/data-science-job-applications.html
  50. https://www.kdnuggets.com/2019/03/women-ai-big-data-science-machine-learning.html
  51. https://www.kdnuggets.com/2019/03/favorite-ml-ai-breakthroughs.html
  52. https://www.kdnuggets.com/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html
  53. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  54. https://www.kdnuggets.com/2019/03/simplilearn-8-reasons-microsoft-azure-certification.html
  55. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  56. https://www.kdnuggets.com/2019/03/r-vs-python-data-visualization.html
  57. https://www.kdnuggets.com/2019/03/work-data-science-ai-big-data.html
  58. https://www.kdnuggets.com/2019/03/deep-learning-toolset-overview.html
  59. https://www.kdnuggets.com/news/index.html
  60. https://www.kdnuggets.com/2019/04/datax-download-guide-ai-marketing.html
  61. https://www.kdnuggets.com/2019/04/strata-kdnuggets-offer-save-london.html
  62. https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html
  63. https://www.kdnuggets.com/2019/04/building-recommender-system.html
  64. https://www.kdnuggets.com/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html
  65. https://www.kdnuggets.com/2019/04/top-tweets-mar27-apr02.html
  66. https://www.kdnuggets.com/
  67. https://www.kdnuggets.com/news/index.html
  68. https://www.kdnuggets.com/2016/index.html
  69. https://www.kdnuggets.com/2016/05/index.html
  70. https://www.kdnuggets.com/2016/05/opinions-interviews.html
  71. https://www.kdnuggets.com/2016/n17.html
  72. https://www.kdnuggets.com/about/index.html
  73. https://www.kdnuggets.com/news/privacy-policy.html
  74. https://www.kdnuggets.com/terms-of-service.html
  75. https://www.kdnuggets.com/news/subscribe.html
  76. https://twitter.com/kdnuggets
  77. https://facebook.com/kdnuggets
  78. https://www.linkedin.com/groups/54257
  79. https://www.kdnuggets.com/news/subscribe.html

   hidden links:
  81. https://www.kdnuggets.com/
  82. https://www.kdnuggets.com/
