    #[1]page rss [2]page atom [3]wiki rss [4]wiki atom

     * connect
     * ____________________ submit
     * [5]articles
     * [6]cloud storage
     * [7]business voip
     * [8]internet speed test
     * [9]open source software
     * [10]business software
     * [11]blog
     * [12]deals
     * [13]help
     * [14]create
     * [15]join/login
     * [16]about
     * [17]top downloaded projects
     * [18]site status
     * [19]@sfnet_ops
     * [20]@sourceforge
     * [21]site documentation
     * [22]support request
     * [23]terms
     * [24]privacy
     * [25]opt out
     * [26]advertise

   [27]help [28]create [29]join [30]login

   (button)

   [31]open source software
     * [32]accounting
     * [33]crm
     * [34]business intelligence
     * [35]cad
     * [36]plm
     * [37]bpm
     * [38]project management
     * [39]knowledge management
     * [40]development
     * [41]sales
     * [42]e-commerce
     * [43]erp
     * [44]hr
     * [45]it management
     * [46]it security
     * [47]office
     * [48]science & engineering
     * [49]all software

   [50]business software
     * [51]crm
       crm
       [52]crm [53]customer service [54]customer engagement [55]customer
       experience [56]point of sale [57]content management system (cms)
       [58]lead management [59]event management
     * [60]accounting & finance
       accounting & finance
       [61]accounting [62]billing and invoicing [63]budgeting
       [64]compliance [65]payment processing [66]risk management
     * [67]analytics
       analytics
       [68]big data [69]business intelligence [70]predictive analytics
       [71]reporting
     * [72]collaboration
       collaboration
       [73]team collaboration [74]idea management [75]conferencing [76]cad
     * [77]communications
       communications
       [78]call center [79]call recording [80]call tracking [81]ivr
       [82]predictive dialer [83]telephony [84]voip [85]web conferencing
     * [86]marketing
       marketing
       [87]campaign management [88]digital asset management [89]email
       marketing [90]lead generation [91]marketing automation [92]seo
       [93]digital signage
     * [94]erp
       erp
       [95]erp [96]plm [97]business process management [98]ehs management
       [99]supply chain management
     * [100]hr
       hr
       [101]360 degree feedback [102]human resource management
       [103]benefits administration [104]compensation management
       [105]employee engagement [106]applicant tracking [107]time clock
       [108]workforce management [109]recruiting
     * [110]it management
       it management
       [111]it management [112]application performance management
       [113]application lifecycle management [114]it asset management
       [115]database management [116]cloud management [117]network
       monitoring [118]help desk [119]issue tracking [120]devops
     * [121]security
       security
       [122]it security [123]endpoint protection [124]identity management
       [125]network security [126]email security
     * [127]project management
       project management
       [128]project management [129]task management [130]project portfolio
       management [131]time tracking
     * [132]all software

   [133]services
     * [134]business voip
     * [135]cloud storage
     * [136]internet speed test

   [137]resources
     * [138]blog
     * [139]articles
     * [140]deals

   menu
     * [141]help
     * [142]create
     * [143]join
     * [144]login

   ____________________
   submit

     * [145]home
     * [146]browse
     * [147]id56lib
     * wiki

[148]id56lib

   status: beta
   brought to you by: [149]alexgraves
     * [150]summary
     * [151]files
     * [152]reviews
     * [153]support
     * [154]wiki
     * [155]discussion

   [156]menu        
   ____________________ submit
     * [157]wiki home
     * [158]browse pages
     * [159]browse labels

     * [160]formatting help

home

   authors: [161]alex graves

   id56lib is a recurrent neural network library for sequence learning
   problems. applicable to most types of spatiotemporal data, it has
   proven particularly effective for speech and handwriting recognition.

contents

     * [162]contents
     * [163]introduction
     * [164]installation
     * [165]usage
     * [166]autosave
     * [167]data file format
     * [168]examples
     * [169]utilities
     * [170]experimental results
     * [171]citations
     * [172]references

introduction

   id56lib is a recurrent neural network library for sequence labelling
   problems, such as speech and handwriting recognition. it implements the
   long short-term memory (lstm) architecture^1, as well as more
   traditional neural network structures, such as multilayer id88s
   and standard recurrent networks with nonlinear hidden units. its most
   important features are:
     * bidirectional long short-term memory^2, which provides access to
       long range contextual information in all input directions
     * connectionist temporal classification^3, which allows the system to
       transcribe unsegmented sequence data
     * multidimensional recurrent neural networks^4, which extends the
       system to data with more than one spatiotemporal dimension (images,
       videos, fmri scans etc.)

   all of which are explained in more detail in my ph.d. thesis^5. the
   library also implements the multilayer, subsampling structure developed
   for offline arabic handwriting recognition^6. this structure allows the
   network to efficiently label high resolution data such as raw images
   and
   speech waveforms.

   taken together, the above components make id56lib a generic system for
   labelling and classifying data with one or more spatiotemporal
   dimensions. perhaps its greatest strength is its flexibility: as well
   as
   speech and handwriting^7 recognition, it has so far been applied (with
   varying degrees of success) to image classification, object
   recognition,
   facial expression recognition, eeg and fmri classification, motion
   capture labelling, robot localisation, wind turbine energy prediction,
   signature verification, image compression and touch sensor
   classification. id56lib is also able to accept a wide variety of
   different input representations for the same task, e.g. raw sensor data
   or hand-crafted features (as shown for online handwriting^8). see my
   [173]homepage for more publications.

   id56lib also implements adaptive weight noise regularisation^14, which
   makes it possible to train an arbitrary neural network with stochastic
   variational id136 (or equivalently, to minimise the two part
   description length of the training data given the network weights plus
   the weights themselves). this form of regularisation makes overfitting
   virtually impossible; however it can lead to very long training times.

installation

   id56lib is written in c++ and should compile on any platform. however it
   is currently only tested for linux and osx.

   building it requires the following:
     * a modern c++ compiler (e.g. gcc 3.0 or higher)
     * [174]gnu libtool
     * [175]gnu automake version 1.9
       (note: will not work with version 1.10)
     * [176]netcdf scientific data
       library
     * [177]boost c++ libraries version 1.36 or higher
       (headers only, no compilation needed.)

   in addition, the following python packages are needed for the auxiliary
   scripts in the    utils    directory:
     * [178]scipy
     * [179]matplotlib
     * [180]pil

   and these packages are needed to create and manipulate netcdf data
   files
   with python, and to run the experiments in the    examples    directory:
     * [181]scientificpython
       (not scipy)
     * [182]netcdf operator

   to build id56lib, first download the source, then enter the root
   directory and type
./configure
make

   this should create the binary file    id56lib    in the    src    directory.
   note
   that on most linux systems the default installation directory for the
   boost headers is    /usr/local/include/boost-version_number    which is not
   on the standard include path. in this case type
cxxflags=-i/usr/local/include/boost-version_number/ ./configure
make

   if you wish to install the binary type:
make install

   by default this will use    /usr    as the installation root (for which you
   will usually need administrator privileges). you can change the install
   path with the --prefix option of the configure script (use ./configure
   --help for other options)

   it is recommended that you add the directory containing the    id56lib   
   binary to your path, as otherwise the tools in the    utilities   
   directory
   will not work.

   project files are provided for the following integrated development
   environments in the    ide    directory:
     * kdevelop (kde, linux)
     * xcode (osx)

usage

   id56lib can be run from the command line as follows:
usage: id56lib [config_options] config_file
config_options syntax: --<variable_name>=<variable_value>
whitespace not allowed in variable names or values
all config_file variables overwritten by config_options
setting <variable_value> = "" removes the variable from the config
repeated variables overwritten by last specified

   all the parameters determining the network structure, experimental
   setup
   etc. can be specified either in the config file or on the command line.

   the main parameters are as follows:
   parameter type allowed values default comment
   autosave boolean true,false false see below
   batchlearn boolean true,false true if rprop is used, false otherwise
   false => id119 updates at the end of each sequence, true =>
   at the end of epochs only
   datafraction real 0-1 1 determines fraction of the data to load
   hiddenblock list of integer lists all >=1 hidden layer block dimensions
   hiddensize integer list all >=1 sizes of the hidden layers
   hiddentype string tanh, linear, logistic, lstm, linear_lstm, softsign
   lstm type of units in the hidden layers
   inputblock integer list all >= 1 input layer block dimensions
   maxtestsnobest integer >=0 20 number of error tests without improvement
   on the validation set before early stopping
   optimiser steepest, rprop steepest
   learnrate real 0-1 1e-4 learning rate (steepest descent optimiser only)
   momentum real 0-1 0.9 momentum (steepest descent optimiser only)
   subsamplesize integer list all >= 1 sizes of hidden subsample layers
   task string classification, sequence_classification, transcription
   network task. sequence_* => one target for whole sequence (not for each
   point in the sequence). transcription => unsegmented sequence labelling
   with ctc.
   trainfile string list netcdf files used for training. note that all
   datasets can consist of multiple files. during each training epoch, the
   files will be cycled through in random order, with the sequences cycled
   randomly within each file
   valfile string list netcdf files used for validation / early stopping
   testfile string list netcdf files used for testing
   verbose boolean true,false false verbose console output
   mdl boolean true,false false use adaptive weight noise (m)inimum
   (d)escription (l)ength regularisation
   mdlweight real 0-1 1 weight for mdl regularisation (0 => no
   regularisation; 1 => true mdl)
   mdlinitstddev real >0 0.075 initial std. dev. for mdl adaptive weight
   noise
   mdlsamples int >=1 1 number of monte carlo samples to pick for each
   sequence to get stochastic derivs for mdl adaptive weight noise (more
   samples => less noisy derivatives, more computationl cost)
   mdlsymmetricsampling boolean true,false false if true, use symmetric
   (aka antithetical) sampling to reduce variance in the derivatives

   parameter names and values are separated by whitespace, and must
   themselves contain no whitespace. lists are comma separated, e.g.:
trainfile a.nc,b.nc,c.nc

   and lists of lists are semicolon separated, e.g.:
hiddenblock 3,3;4,4

   see the    examples    directory for examples of config files.

   to override parameters at the command line, the syntax is:
id56lib --option_name=value config_file

   so e.g.
id56lib --learnrate=1e-5 config_file

   will override the learnrate set in the config file.

autosave

   if the 'autosave' option is true the system will store all dynamic
   information (e.g. network weights) as it runs. without this there will
   be no way to to resume an interrupted experiment (e.g. if a computer
   crashes) and the final trained system will not be saved. if saving is
   activated, timestamped config files with dynamic information appended
   will be saved after each training epoch, and whenever one of the error
   measures for the given task is improved on. in addition a timestamped
   log file will be saved, containing all the console output. for example,
   for a classification task, the command
id56lib --autosave=true classification.config

   might create the following files
     * classification@2009.07.17-13.08.40.712422.best_classificationerror.
       save
     * classification@2009.07.17-13.08.40.712422.best_crossid178error.sa
       ve
     * classification@2009.07.17-13.08.40.712422.last.save
     * classification@2009.07.17-13.08.40.712422.log

data file format

   all id56lib data files (for training, testing and validation) are in
   [183]netcdf format, a binary
   file format designed for large scientific datasets.

   a netcdf file has the following basic structure:
     * dimensions:

   o    
     * variables:

   o    
     * data:

   o    

   following the statement    variables    the variables that will listed in
   the    data    section are declared. for example
float foo[ 3 ]

   would declare an array of floats with size 3. for saving variable sized
   array the size can be declared after    dimensions   . so the example would
   look like:
dimensions:
foosize= 3
variables:
float foo[ foosize ];

   following    data    the actual values are stored:
data:
foo = 1,2,3;

   the data format for id56lib is specified below. the codes at the start
   determine which tasks the dimension/variable is required for:
     * r = regression (sum-of-squares error with linear outputs)
     * t = transcription (sequence labelling with connectionist temporal
       classification outputs)
     * c = classification (cross-id178 error with softmax outputs)
     * sc = sequence_classification (as above, but only one target per
       sequence)
     * o = optional, not required for any task

   dimensions:
     * numseqs = total number of data sequences
     * numtimesteps = total number of timesteps (sum of lengths of all
       sequences)
     * inputpattsize = size of input vectors (e.g. 3 if input points are
       rgb pixels)
     * ( o ) maxseqtaglength = length of longest sequence tag string
       (including null terminator)
     * ( r ) targetpattsize = size of target vectors
     * ( t, sc ) maxtargstringlength = length of longest target string
       (including null terminator)
     * ( t, c, sc ) numlabels = number of distinct class labels
     * ( t, c, sc ) maxlabellength = length of longest label string
       (including null terminator)

   variables:
     * float inputs[numtimesteps,inputpattsize] = array of input vectors
     * int seqdims[numseqs,numdims] = array of sequence dimensions
     * ( r ) float targetpatterns[numtimesteps,targetpattsize] = array of
       regression target vectors
     * ( c ) int targetclasses[numtimesteps] = array of target classes
     * ( t, sc ) char targetstrings[numseqs,maxtargstringlength] = array
       of
       target strings for transcription
     * ( t, c, sc ) char labels[numlabels, maxlabellength] = class label
       names (can just be    1   ,   2      )
     * ( o ) char seqtags[numseqs,maxseqtaglength] = array of tags for
       sequences (e.g. filename they were created from)

   [184]netcdf operator provides several tools
   for creating, manipulating and displaying netcdf files, and is
   recommended for anyone wanting to make their own datasets. in
   particular
   the toold ncgen and ncdump convert ascii text files to and from netcdf
   format.

examples

   the    examples    directory provides example experiments that can be run
   with id56lib. to run the experiments, the    utilities    directory must be
   added to your pythonpath, and the following python packages must be
   installed:
     * [185]scipy
     * [186]scientificpython
     * [187]pil

   in each subdirectory type
./build_netcdf

   to build the netcdf datasets, then
id56lib sample_name.config

   to run the experiments. note that some directories may contain more
   than
   1 config file, since different tasks may be defined for the same data.

   the results of these experiments will not correspond to published
   results, because only a fraction of the complete dataset is used in
   each
   case (to keep the size of the distribution down). in addition, early
   stopping is not used, because no validation files are created. however
   the same scripts can be used to build realistic experiments, given more
   data.

   if you want to adapt the python scripts to create netcdf files for your
   own experiments, [188]here is a useful tutorial on using netcdf with
   python.

utilities

   the    utilities    directory provides a range of auxiliary tools for
   id56lib. in order for these to work, the directory containing the
      id56lib    binary must be added to your path. the    utilities    directory
   must be added to your pythonpath for the experiments in the    examples   
   directory to work. the most important utilities are:
     * dump_sequence_variables.sh: writes to file all the internal
       variables (activations, delta terms etc.) of the network while
       processing a single sequence
     * plot_variables.py: plots a single variable file saved with
          dump_sequence_variables   
     * plot_errors.sh: plots the error curves written to a log file during
       training
     * normalise_inputs.sh: adjusts the inputs of one or more netcdf files
       to have mean 0, standard deviation 1 (relative to the first file,
       which should be used for training)
     * gradient_check.sh: numerically checks the network   s gradient
       calculation

   all files should provide a list of arguments if called with no
   arguments.the python scripts will give a list of optional arguments,
   defaults etc. if called with the single argument    -h   . the following
   python libraries are required for some of the scripts:
     * [189]scipy (for all scripts)
     * [190]matplotlib (for all
       plotting/visualisation scripts)
     * [191]pil (for
       plot_variables.py)
     * [192]scientificpython
       (for normalise_inputs.sh)

experimental results

   id56lib   s best results so far have been in speech and handwriting
   recognition. it has matched the best recorded performance in phoneme
   recognition on the timit database^9, and recently won three handwriting
   recognition competitions at the icdar 2009 conference, for offline
   french^10, offline arabic^11 and offline farsi character
   classification^12. unlike the competing systems, id56lib worked entirely
   on raw inputs, and therefore did not require any preprocessing or
   alphabet-specific feature extraction. it also has among the best
   published results on the iam online and iam offline english handwriting
   databases^13.

citations

   if you use id56lib for your research, please cite it with the following
   reference:

   @misc
   {id56lib,
   author = {alex graves},
   title = {id56lib: a recurrent neural network library for sequence
   learning problems},
   howpublished = {\url{http://sourceforge.net/projects/id56l/}}}

references

   ^1 sepp hochreiter and j  rgen schmidhuber
   [193]long short-term memory
   neural computation, 9(8):1735-1780, 1997

   ^2 alex graves and j  rgen schmidhuber.
   [194]framewise phoneme classification with bidirectional lstm and other
   neural network architectures
   neural networks, 18(5-6):602-610, june 2005

   ^3 alex graves, santiago fern  ndez, faustino gomez and j  rgen
   schmidhuber.
   [195]connectionist temporal classification: labelling unsegmented
   sequence data with recurrent neural networks
   international conference on machine learning, june 2006, pittsburgh

   ^4 alex graves, santiago fern  ndez and j  rgen schmidhuber.
   [196]multidimensional recurrent neural networks
   international conference on id158s, september 2007,
   porto

   ^5 alex graves.
   [197]supervised sequence labelling with recurrent neural networks
   phd thesis, july 2008, technische universit  t m  nchen

   ^6 alex graves and j  rgen schmidhuber.
   [198]offline handwriting recognition with multidimensional recurrent
   neural networks
   advances in neural information processing systems, december 2008,
   vancouver

   ^7 alex graves, marcus liwicki, santiago fern  ndez, roman bertolami,
   horst bunke, and j  rgen schmidhuber.
   [199]a novel connectionist system for unconstrained handwriting
   recognition
   ieee transactions on pattern analysis and machine intelligence,
   31(5):855-868, may 2009

   ^8 alex graves, santiago fern  ndez, marcus liwicki, horst bunke, and
   j  rgen schmidhuber.
   [200]unconstrained online handwriting recognition with recurrent neural
   networks
   advances in neural information processing systems, december 2007,
   vancouver

   ^9 santiago fern  ndez, alex graves, and j  rgen schmidhuber.
   [201]phoneme recognition in timit with blstm-ctc
   technical report idsia-04-08, idsia, april 2008.

   ^10 e. grosicki, h. el abed [202]icdar 2009 handwriting recognition
   competition
   international conference on document analysis and recognition, july
   2009, barcelona

   ^11 v. m  rgner and h. el abed.
   [203]icdar 2009 arabic handwriting recognition competition
   international conference on document analysis and recognition, july
   2009, barcelona

   ^12 s. mozaffari and h. soltanizadeh.
   [204]icdar 2009 handwritten
   farsi/arabic character recognition competition
   international conference on document analysis and recognition, july
   2009, barcelona

   ^13 alex graves, marcus liwicki, santiago fern  ndez, roman bertolami,
   horst bunke, and j  rgen schmidhuber.
   [205]a novel connectionist system for unconstrained handwriting
   recognition
   ieee transactions on pattern analysis and machine intelligence,
   31(5):855-868, may 2009

   ^14 alex graves.
   [206]practical variational id136 for neural networks
   advances in neural information processing systems, december 2011,
   granada, spain
   name
   ____________________
     __________________________________________________________________

   [207]about [208]site status [209]@sfnet_ops
   [210]create a project [211]open source software [212]business software
   [213]top downloaded projects
   [214]blog [215]@sourceforge [216]resources
   [217]articles [218]site documentation [219]support request

      2019 slashdot media. all rights reserved.
   [220]terms [221]privacy [222]opt out [223]advertise
   oh no! some styles failed to load. please try reloading this page, or
   [224]contact support.

get latest updates about open source projects, conferences and news.

   [225]sign up no, thank you

references

   visible links
   1. https://sourceforge.net/p/id56l/wiki/home/feed.rss
   2. https://sourceforge.net/p/id56l/wiki/home/feed.atom
   3. https://sourceforge.net/p/id56l/wiki/feed.rss
   4. https://sourceforge.net/p/id56l/wiki/feed.atom
   5. https://sourceforge.net/articles/
   6. https://sourceforge.net/cloud-storage-providers/
   7. https://sourceforge.net/business-voip/
   8. https://sourceforge.net/speedtest/
   9. https://sourceforge.net/directory/
  10. https://sourceforge.net/software/
  11. https://sourceforge.net/blog
  12. https://deals.sourceforge.net/?utm_source=sourceforge&utm_medium=navbar&utm_campaign=homepage
  13. https://sourceforge.net/support
  14. https://sourceforge.net/create
  15. https://sourceforge.net/p/id56l/wiki/home/
  16. https://sourceforge.net/about
  17. https://sourceforge.net/top
  18. https://sourceforge.net/blog/category/sitestatus/
  19. https://twitter.com/sfnet_ops
  20. https://twitter.com/sourceforge
  21. https://p.sf.net/sourceforge/docs
  22. https://sourceforge.net/support
  23. https://slashdotmedia.com/terms-of-use/
  24. https://slashdotmedia.com/privacy-statement/
  25. https://slashdotmedia.com/opt-out-choices/
  26. https://slashdotmedia.com/
  27. https://sourceforge.net/support
  28. https://sourceforge.net/create
  29. https://sourceforge.net/user/registration/
  30. https://sourceforge.net/auth/
  31. https://sourceforge.net/directory
  32. https://sourceforge.net/directory/business-enterprise/financial/accounting/
  33. https://sourceforge.net/directory/business-enterprise/enterprise/crm/
  34. https://sourceforge.net/directory/business-enterprise/enterprise/enterprisebi/
  35. https://sourceforge.net/directory/graphics/graphics/3dmodeling/
  36. https://sourceforge.net/directory/business-enterprise/enterprise/plm/
  37. https://sourceforge.net/directory/business-enterprise/enterprise/processmanagement/
  38. https://sourceforge.net/directory/business-enterprise/project-management/
  39. https://sourceforge.net/directory/business-enterprise/knowledgemanagement/
  40. https://sourceforge.net/directory/development/
  41. https://sourceforge.net/directory/business-enterprise/enterprise/sales/
  42. https://sourceforge.net/directory/business-enterprise/ecommerce/
  43. https://sourceforge.net/directory/business-enterprise/enterprise/erp/
  44. https://sourceforge.net/directory/business-enterprise/enterprise/humanresources/
  45. https://sourceforge.net/directory/system-administration/
  46. https://sourceforge.net/directory/security-utilities/
  47. https://sourceforge.net/directory/business-enterprise/suites/
  48. https://sourceforge.net/directory/science-engineering/
  49. https://sourceforge.net/directory
  50. https://sourceforge.net/software
  51. https://sourceforge.net/software/crm/
  52. https://sourceforge.net/software/crm/
  53. https://sourceforge.net/software/customer-service/
  54. https://sourceforge.net/software/customer-engagement/
  55. https://sourceforge.net/software/customer-experience/
  56. https://sourceforge.net/software/point-of-sale/
  57. https://sourceforge.net/software/content-management/
  58. https://sourceforge.net/software/lead-management/
  59. https://sourceforge.net/software/event-management/
  60. https://sourceforge.net/software/accounting/
  61. https://sourceforge.net/software/accounting/
  62. https://sourceforge.net/software/billing-and-invoicing/
  63. https://sourceforge.net/software/budgeting/
  64. https://sourceforge.net/software/compliance/
  65. https://sourceforge.net/software/payment-processing/
  66. https://sourceforge.net/software/risk-management/
  67. https://sourceforge.net/software/big-data/
  68. https://sourceforge.net/software/big-data/
  69. https://sourceforge.net/software/business-intelligence/
  70. https://sourceforge.net/software/predictive-analytics/
  71. https://sourceforge.net/software/reporting/
  72. https://sourceforge.net/software/collaboration/
  73. https://sourceforge.net/software/collaboration/
  74. https://sourceforge.net/software/idea-management/
  75. https://sourceforge.net/software/conference/
  76. https://sourceforge.net/software/engineering-cad/
  77. https://sourceforge.net/software/communications/
  78. https://sourceforge.net/software/call-center/
  79. https://sourceforge.net/software/call-recording/
  80. https://sourceforge.net/software/call-tracking/
  81. https://sourceforge.net/software/ivr/
  82. https://sourceforge.net/software/predictive-dialer/
  83. https://sourceforge.net/software/telephony/
  84. https://sourceforge.net/software/voip/
  85. https://sourceforge.net/software/web-conferencing/
  86. https://sourceforge.net/software/marketing/
  87. https://sourceforge.net/software/campaign-management/
  88. https://sourceforge.net/software/digital-asset-management/
  89. https://sourceforge.net/software/email-marketing/
  90. https://sourceforge.net/software/lead-generation/
  91. https://sourceforge.net/software/marketing-automation/
  92. https://sourceforge.net/software/seo/
  93. https://sourceforge.net/software/digital-signage/
  94. https://sourceforge.net/software/erp/
  95. https://sourceforge.net/software/erp/
  96. https://sourceforge.net/software/product-lifecycle-management/
  97. https://sourceforge.net/software/business-process-management/
  98. https://sourceforge.net/software/ehs-management/
  99. https://sourceforge.net/software/supply-chain-management/
 100. https://sourceforge.net/software/human-resources/
 101. https://sourceforge.net/software/360-degree-feedback/
 102. https://sourceforge.net/software/human-resources/
 103. https://sourceforge.net/software/benefits-administration/
 104. https://sourceforge.net/software/compensation-management/
 105. https://sourceforge.net/software/employee-engagement/
 106. https://sourceforge.net/software/applicant-tracking/
 107. https://sourceforge.net/software/time-clock/
 108. https://sourceforge.net/software/workforce-management/
 109. https://sourceforge.net/software/recruiting/
 110. https://sourceforge.net/software/it-management/
 111. https://sourceforge.net/software/it-management/
 112. https://sourceforge.net/software/application-performance-management/
 113. https://sourceforge.net/software/application-lifecycle-management/
 114. https://sourceforge.net/software/it-asset-management/
 115. https://sourceforge.net/software/database-management/
 116. https://sourceforge.net/software/cloud-management/
 117. https://sourceforge.net/software/network-monitoring/
 118. https://sourceforge.net/software/help-desk/
 119. https://sourceforge.net/software/issue-tracking/
 120. https://sourceforge.net/software/devops/
 121. https://sourceforge.net/software/it-security/
 122. https://sourceforge.net/software/it-security/
 123. https://sourceforge.net/software/endpoint-protection/
 124. https://sourceforge.net/software/identity-management/
 125. https://sourceforge.net/software/network-security/
 126. https://sourceforge.net/software/email-security/
 127. https://sourceforge.net/software/project-management/
 128. https://sourceforge.net/software/project-management/
 129. https://sourceforge.net/software/task-management/
 130. https://sourceforge.net/software/project-portfolio-management/
 131. https://sourceforge.net/software/time-tracking/
 132. https://sourceforge.net/software/
 133. https://sourceforge.net/p/id56l/wiki/home/
 134. https://sourceforge.net/business-voip/
 135. https://sourceforge.net/cloud-storage-providers/
 136. https://sourceforge.net/speedtest/
 137. https://sourceforge.net/p/id56l/wiki/home/
 138. https://sourceforge.net/blog
 139. https://sourceforge.net/articles
 140. https://deals.sourceforge.net/?utm_source=sourceforge&utm_medium=navbar&utm_campaign=homepage
 141. https://sourceforge.net/support
 142. https://sourceforge.net/create
 143. https://sourceforge.net/user/registration/
 144. https://sourceforge.net/auth/
 145. https://sourceforge.net/
 146. https://sourceforge.net/directory
 147. https://sourceforge.net/p/id56l/
 148. https://sourceforge.net/p/id56l/
 149. https://sourceforge.net/u/alexgraves/
 150. https://sourceforge.net/projects/id56l/
 151. https://sourceforge.net/projects/id56l/files/
 152. https://sourceforge.net/projects/id56l/reviews
 153. https://sourceforge.net/projects/id56l/support
 154. https://sourceforge.net/p/id56l/wiki/
 155. https://sourceforge.net/p/id56l/discussion/
 156. https://sourceforge.net/p/id56l/wiki/home/
 157. https://sourceforge.net/p/id56l/wiki/
 158. https://sourceforge.net/p/id56l/wiki/browse_pages/
 159. https://sourceforge.net/p/id56l/wiki/browse_tags/
 160. https://sourceforge.net/p/id56l/wiki/markdown_syntax/
 161. https://sourceforge.net/u/alexgraves/
 162. https://sourceforge.net/p/id56l/wiki/home/#contents
 163. https://sourceforge.net/p/id56l/wiki/home/#introduction
 164. https://sourceforge.net/p/id56l/wiki/home/#installation
 165. https://sourceforge.net/p/id56l/wiki/home/#usage
 166. https://sourceforge.net/p/id56l/wiki/home/#autosave
 167. https://sourceforge.net/p/id56l/wiki/home/#data-file-format
 168. https://sourceforge.net/p/id56l/wiki/home/#examples
 169. https://sourceforge.net/p/id56l/wiki/home/#utilities
 170. https://sourceforge.net/p/id56l/wiki/home/#experimental-results
 171. https://sourceforge.net/p/id56l/wiki/home/#citations
 172. https://sourceforge.net/p/id56l/wiki/home/#references
 173. http://www6.in.tum.de/main/graves
 174. http://www.gnu.org/software/libtool/
 175. http://www.gnu.org/software/automake/
 176. http://www.unidata.ucar.edu/software/netcdf/
 177. http://www.boost.org/
 178. http://www.scipy.org/
 179. http://matplotlib.sourceforge.net/
 180. http://www.pythonware.com/products/pil/
 181. http://sourcesup.cru.fr/projects/scientific-py/
 182. http://nco.sourceforge.net/
 183. http://www.unidata.ucar.edu/software/netcdf/
 184. http://nco.sourceforge.net/
 185. http://www.scipy.org/
 186. http://sourcesup.cru.fr/projects/scientific-py/
 187. http://www.pythonware.com/products/pil/
 188. http://gfesuite.noaa.gov/developer/netcdfpythoninterface.html
 189. http:///www.scipy.org/
 190. http://matplotlib.sourceforge.net/
 191. http://www.pythonware.com/products/pil/
 192. http://sourcesup.cru.fr/projects/scientific-py/
 193. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.56.7752&rep=rep1&type=pdf
 194. http://www6.in.tum.de/pub/main/publications/graves2005b.pdf
 195. http://www6.in.tum.de/pub/main/publications/graves2006a.pdf
 196. http://www6.in.tum.de/pub/main/publications/graves2007a.pdf
 197. http://www6.in.tum.de/pub/main/publications/graves2008c.pdf
 198. http://www6.in.tum.de/pub/main/publications/graves_nips_2009.pdf
 199. http://www6.in.tum.de/pub/main/publications/graves2008b.pdf
 200. http://www6.in.tum.de/pub/main/publications/graves2008a.pdf
 201. http://www6.in.tum.de/pub/main/publications/fernandez2008a.pdf
 202. http://www.cvc.uab.es/icdar2009/papers/3725b398.pdf
 203. http://www.cvc.uab.es/icdar2009/papers/3725b383.pdf
 204. http://www.cvc.uab.es/icdar2009/papers/3725b413.pdf
 205. http://www6.in.tum.de/pub/main/publications/graves2008b.pdf
 206. http://www.cs.toronto.edu/~graves/nips_2011.pdf
 207. https://sourceforge.net/about
 208. https://sourceforge.net/blog/category/sitestatus/
 209. https://twitter.com/sfnet_ops
 210. https://sourceforge.net/create
 211. https://sourceforge.net/directory/
 212. https://sourceforge.net/software/
 213. https://sourceforge.net/top
 214. https://sourceforge.net/blog/
 215. https://twitter.com/sourceforge
 216. https://library.slashdotmedia.com/
 217. https://sourceforge.net/articles/
 218. https://p.sf.net/sourceforge/docs
 219. https://sourceforge.net/support
 220. http://slashdotmedia.com/terms-of-use
 221. http://slashdotmedia.com/privacy-statement/
 222. http://slashdotmedia.com/opt-out-choices
 223. http://slashdotmedia.com/
 224. https://sourceforge.net/support
 225. https://sourceforge.net/user/newsletters?source=floating

   hidden links:
 227. https://twitter.com/sourceforge
 228. https://www.facebook.com/sourceforgenet/
 229. https://www.linkedin.com/company/sourceforge.net
 230. https://sourceforge.net/
 231. https://sourceforge.net/
 232. https://sourceforge.net/
 233. https://twitter.com/sourceforge
 234. https://www.facebook.com/sourceforgenet/
 235. https://www.linkedin.com/company/sourceforge.net
 236. https://sourceforge.net/p/id56l/wiki/home/history
 237. https://sourceforge.net/p/id56l/wiki/home/feed
 238. https://sourceforge.net/p/id56l/wiki/search
 239. https://sourceforge.net/p/id56l/wiki/home/
 240. https://sourceforge.net/
