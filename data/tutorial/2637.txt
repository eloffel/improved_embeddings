   #[1]github [2]recent commits to bicvm:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]4
     * [35]star [36]41
     * [37]fork [38]19

[39]karlmoritz/[40]bicvm

   [41]code [42]issues 3 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   bicvm code
     * [47]76 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors

    1. [51]c++ 98.4%
    2. [52]cmake 1.1%
    3. other 0.5%

   (button) c++ cmake other
   branch: master (button) new pull request
   [53]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/k
   [54]download zip

downloading...

   want to be notified of new releases in karlmoritz/bicvm?
   [55]sign in [56]sign up

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [59]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [60]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [61]permalink
   type      name      latest commit message commit time
        failed to load latest commit information.
        [62]cmake
        [63]sample
        [64]scripts
        [65]src
        [66].gitignore
        [67]makefile
        [68]readme.md

readme.md

bicvm

   bicvm code for learning distributed representations in a variety of
   settings. in particular, this code can be used to reproduce the results
   of the paper "multilingual models for compositional distributional
   semantics" (hermann and blunsom, acl 2104).

   since publishing this paper, the code-base has been rewritten quite
   significantly to allow training on significantly larger data than was
   previously possible.

dependencies

   this code require several libraries in order to run:
     * pugixml (included)
     * liblbfgs ([69]http://www.chokkan.org/software/liblbfgs/)
     * boost
     * eigen (version >3.2.0)

installation

   install via cmake:
   mkdir release
   cd release
   cmake ../src
   make

   install via docker: there is also docker image for bicvm
   ([70]https://hub.docker.com/r/mpolatcan/bicvm/)
   sudo docker pull mpolatcan/bicvm

   run this docker image with that command:
   sudo docker run -it --name bicvm mpolatcan/bicvm bash

usage

     * dbltrain - learns embeddings given two files of parallel, sentence
       aligned text
     * doctrain - learns embeddings given two folders of sentence aligned
       documents (matching names in folders)

   more documentation to come - please contribute!

   one simple example
./dbltrain --input1 ../sample/english \
    --input2 ../sample/german \
    --tree plain \
    --type additive \
    --method adagrad \
    --word-width 128 \
    --hinge_loss_margin 128 \
    --model1-out modela.en.128 \
    --model2-out modelb.de.128 \
    --noise 10 \
    --batches 10 \
    --eta 0.05 \
    --lambdad 1 \
    --calc_bi_error1 true \
    --calc_bi_error2 true \
    --iterations 5

   should result in the following output:
bicvm distributed representation learner: copyright 2013-2014 karl moritz herman
n
################################
# config summary
# alpha = 0.2
# batches = 10
# calc_bi_error1 = 1
# calc_bi_error2 = 1
# calc_lbl_error1 = 0
# calc_lbl_error2 = 0
# calc_rae_error1 = 0
# calc_rae_error2 = 0
# calc_thr_error1 = 0
# calc_thr_error2 = 0
# calc_uae_error1 = 0
# calc_uae_error2 = 0
# cv-split = -1
# dump-frequency = 10
# dynamic-mode = 0
# embeddings = -1
# epsilon = 1e-06
# eta = 0.05
# ftcbatches = 100
# ftceta = 0.01
# ftiterations = 1000
# gamma = 0.1
# hinge_loss_margin = 128
# initi = 1
# input1 = sample/english
# input2 = sample/german
# iterations = 9
# l1 = 0
# lambdabd = 1
# lambdabl = 1
# lambdad = 1
# lambdawd = 1
# lambdawl = 1
# linesearch = armijo
# method = adagrad
# model1-out = modela.en.128
# model2-out = modelb.de.128
# noise = 10
# norm = 0
# num-sentences = 0
# tree = plain
# type = additive
# updated1 = 1
# updated2 = 1
# updatef1 = 1
# updatef2 = 1
# updatewd1 = 1
# updatewd2 = 1
# updatewl1 = 1
# updatewl2 = 1
# word-width = 128
# history
#  | adagrad(armijo) it:9 lambdas: /1/
################################
read in 0 words and 0 embeddings.
read in 0 words and 0 embeddings.
l1 size 10
l2 size 10
reindexed dictionary from 19 entries down to 19.
reindexed dictionary from 22 entries down to 22.
dict size: 19 and 22
training with adagrad
batch size: 2  eta 0.05
iteration 0
error   524.989
iteration 1
error   483.947
iteration 2
error   434.471
iteration 3
error   367.271
iteration 4
error   281.668
iteration 5
error   179.812
iteration 6
error   86.0947
iteration 7
error   27.2102
iteration 8
error   5.8242

   until there is more documentation, please refer to the code and the
   "--help" commands for more information on usage.

references

   if you use this software package in your experiments and publish
   related work, please cite one of the following papers as appropriately:

   for most work, the following paper should be cited, in which this code
   was introduced, as well ash the recursive document-level model.
@inproceedings{hermann:2014:aclphil,
  author    = {hermann, karl moritz and blunsom, phil},
  title     = {{multilingual models for compositional id65}}
,
  booktitle = {proceedings of acl},
  year      = {2014},
  month     = jun,
  url       = {http://arxiv.org/abs/1404.4641},
}

   for the basic noise-contrastive/large margin objective function over
   parallel data:
@inproceedings{hermann:2014:iclr,
  author    = {hermann, karl moritz and blunsom, phil},
  title     = {{multilingual distributed representations without word alignment}
},
  booktitle = {proceedings of iclr},
  year      = {2014},
  month     = apr,
  url       = {http://arxiv.org/abs/1312.6173},
}

   for anything related to syntax-based composition models:
@inproceedings{hermann:2013:acl,
  author    = {hermann, karl moritz and blunsom, phil},
  title     = {{the role of syntax in vector space models of compositional seman
tics}},
  booktitle = {proceedings of acl},
  year      = {2013},
  month     = aug,
  url       = {http://www.karlmoritz.com/_media/hermannblunsom_acl2013.pdf}
}

notes

   this is development code and may not be fully functional. that said,
   the doctrain and dbltrain programmes should work as expected and you
   should be able to reproduce all the results from the papers mentioned
   above.

   there are a number of auxiliary programmes to extract vectors and for
   file conversion, as well as a number of programmes that use the
   underlying model for different tasks such as id53.

   in particular the qa related code is still under development and
   included here primarily in order to demonstrate how the model can
   easily be extended with different training algorithms and modalities.

to do

   dictionary/model initialisation could be cleaned up!

   there is some technical debt from the memory optimisation on the corpus
   side. principally this concerns the push_back overload for the corpus
   function - this needs to be completed given more complex models.

   most models from the 2013 acl paper have not yet been ported to the new
   architecture (ccae-a..d etc.). this should be done at some point. for
   now, please refer to the [71]"oxcid166" repository, which features some
   of these models.

     *    2019 github, inc.
     * [72]terms
     * [73]privacy
     * [74]security
     * [75]status
     * [76]help

     * [77]contact github
     * [78]pricing
     * [79]api
     * [80]training
     * [81]blog
     * [82]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [83]reload to refresh your
   session. you signed out in another tab or window. [84]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/karlmoritz/bicvm/commits/master.atom
   3. https://github.com/karlmoritz/bicvm#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/karlmoritz/bicvm
  32. https://github.com/join
  33. https://github.com/login?return_to=/karlmoritz/bicvm
  34. https://github.com/karlmoritz/bicvm/watchers
  35. https://github.com/login?return_to=/karlmoritz/bicvm
  36. https://github.com/karlmoritz/bicvm/stargazers
  37. https://github.com/login?return_to=/karlmoritz/bicvm
  38. https://github.com/karlmoritz/bicvm/network/members
  39. https://github.com/karlmoritz
  40. https://github.com/karlmoritz/bicvm
  41. https://github.com/karlmoritz/bicvm
  42. https://github.com/karlmoritz/bicvm/issues
  43. https://github.com/karlmoritz/bicvm/pulls
  44. https://github.com/karlmoritz/bicvm/projects
  45. https://github.com/karlmoritz/bicvm/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/karlmoritz/bicvm/commits/master
  48. https://github.com/karlmoritz/bicvm/branches
  49. https://github.com/karlmoritz/bicvm/releases
  50. https://github.com/karlmoritz/bicvm/graphs/contributors
  51. https://github.com/karlmoritz/bicvm/search?l=c++
  52. https://github.com/karlmoritz/bicvm/search?l=cmake
  53. https://github.com/karlmoritz/bicvm/find/master
  54. https://github.com/karlmoritz/bicvm/archive/master.zip
  55. https://github.com/login?return_to=https://github.com/karlmoritz/bicvm
  56. https://github.com/join?return_to=/karlmoritz/bicvm
  57. https://desktop.github.com/
  58. https://desktop.github.com/
  59. https://developer.apple.com/xcode/
  60. https://visualstudio.github.com/
  61. https://github.com/karlmoritz/bicvm/tree/64fb7c1ce4a55239cdb4f66941166d87910ef2a2
  62. https://github.com/karlmoritz/bicvm/tree/master/cmake
  63. https://github.com/karlmoritz/bicvm/tree/master/sample
  64. https://github.com/karlmoritz/bicvm/tree/master/scripts
  65. https://github.com/karlmoritz/bicvm/tree/master/src
  66. https://github.com/karlmoritz/bicvm/blob/master/.gitignore
  67. https://github.com/karlmoritz/bicvm/blob/master/makefile
  68. https://github.com/karlmoritz/bicvm/blob/master/readme.md
  69. http://www.chokkan.org/software/liblbfgs/
  70. https://hub.docker.com/r/mpolatcan/bicvm/
  71. https://github.com/karlmoritz/oxcvsm
  72. https://github.com/site/terms
  73. https://github.com/site/privacy
  74. https://github.com/security
  75. https://githubstatus.com/
  76. https://help.github.com/
  77. https://github.com/contact
  78. https://github.com/pricing
  79. https://developer.github.com/
  80. https://training.github.com/
  81. https://github.blog/
  82. https://github.com/about
  83. https://github.com/karlmoritz/bicvm
  84. https://github.com/karlmoritz/bicvm

   hidden links:
  86. https://github.com/
  87. https://github.com/karlmoritz/bicvm
  88. https://github.com/karlmoritz/bicvm
  89. https://github.com/karlmoritz/bicvm
  90. https://help.github.com/articles/which-remote-url-should-i-use
  91. https://github.com/karlmoritz/bicvm#bicvm
  92. https://github.com/karlmoritz/bicvm#dependencies
  93. https://github.com/karlmoritz/bicvm#installation
  94. https://github.com/karlmoritz/bicvm#usage
  95. https://github.com/karlmoritz/bicvm#references
  96. https://github.com/karlmoritz/bicvm#notes
  97. https://github.com/karlmoritz/bicvm#to-do
  98. https://github.com/
