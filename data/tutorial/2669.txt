   #[1]kdnuggets: analytics, big data, data mining and data science feed
   [2]kdnuggets    feed [3]kdnuggets    comments feed [4]kdnuggets    great
   collection of minimal and clean implementations of machine learning
   algorithms comments feed [5]regis university ms in data science now
   offered on campus [6]why the data scientist and data engineer need to
   understand virtualization in the cloud

kdnuggets

     [7]subscribe to kdnuggets news  | [8]twitter    [9]facebook
   [10]linkedin  |  [11]contact
   ____________________ search
   [menu-30.png]
   [search-icon.png]
     * [12]software
     * [13]news/blog
     * [14]top stories
     * [15]opinions
     * [16]tutorials
     * [17]jobs
     * [18]companies
     * [19]courses
     * [20]datasets
     * [21]education
     * [22]certificates
     * [23]meetings
     * [24]webinars


   [25]kdnuggets home    [26]news    [27]2017    [28]jan    [29]tutorials,
   overviews    great collection of minimal and clean implementations of
   machine learning algorithms ( [30]17:n04 )

great collection of minimal and clean implementations of machine learning
algorithms

   [31][prv.gif] previous post
   [32]next post [nxt.gif]

     http likes 209
   tags: [33]algorithms, [34]machine learning, [35]programming, [36]python

   interested in learning machine learning algorithms by implementing them
   from scratch? need a good set of examples to work from? check out this
   post with links to minimal and clean implementations of various
   algorithms.
     __________________________________________________________________

   by [37]matthew mayo, kdnuggets.

   want to implement machine learning algorithms from scratch?

   a recent kdnuggets poll asked "[38]which methods/algorithms you used in
   the past 12 months for an actual data science-related application?"
   with results [39]found here. the results are analyzed by industry
   employment sector and region, but the main take away for the
   uninitiated is that there are a wide array of algorithms covered.

   top 10 algorithms and let's be clear: this is not a complete
   representation of available machine learning algorithms, but rather a
   subset of the most-used algorithms (as per our readers). there are lots
   of machine learning algorithms in existence today. but with so many
   machine learning [40]libraries, projects, programs, and other projects
   out there, covering so many of these algorithms, for a variety of
   programming languages and different platforms and environments, why on
   earth would you ever want to implement an algorithm from scratch?

   [41]sebastian raschka, noted machine learning enthusiast, "data
   scientist" (his quotes, note mine), phd candidate, and author of
   [42]python machine learning has this to say about [43]implementing
   machine learning algorithms from scratch:

     there are several different reasons why implementing algorithms from
     scratch can be useful:
    1. it can help us to understand the inner works of an algorithm
    2. we could try to implement an algorithm more efficiently
    3. we can add new features to an algorithm or experiment with
       different variations of the core idea
    4. we circumvent licensing issues (e.g., linux vs. unix) or platform
       restrictions
    5. we want to invent new algorithms or implement algorithms no one has
       implemented/shared yet
    6. we are not satisfied with the api and/or we want to integrate it
       more "naturally" into an existing software library

   so, let's say you have a reason to implement machine learning
   algorithms from scratch. or, alternatively, let's say you simply want a
   better understanding of how machine learning algorithms work (#1), or
   want to add new features to an algorithm (#3), or something else
   entirely. locating a collection of independently-implemented
   algorithms, preferably from the same author in order to make the code
   easier to follow from one algorithm to the next, and (especially)
   implemented in minimal, clean code, can be a challenging undertaking.

   enter the [44]mlalgorithms github repository, by [45]rushter, described
   via the repo readme as:

     a collection of minimal and clean implementations of machine
     learning algorithms.

   and that's actually a very good description of the included code. as
   someone who has both implemented numerous machine learning algorithms
   from scratch -- having had to look through textbooks, papers, blog
   post, and code for direction -- and investigated algorithm code in
   order to understand how particular implementations worked in order to
   make modifications, i can say from experience that the code in this
   code is quite easy to follow.

   more from the readme:

     this project is targeting people who want to learn internals of ml
     algorithms or implement them from scratch. the code is much easier
     to follow than the optimized libraries and easier to play with. all
     algorithms are implemented in python, using numpy, scipy and
     autograd.

   so, important points: algorithms are not optimized, so probably not
   good for production; algorithms implemented in python with only a few
   common scientific computing libraries. as long as you are good with
   these points, and are interested in learning how to implement
   algorithms or simply understand them better, this code is for you.

   as of writing, rushter has implemented algorithms of various task
   types, including id91, classification, regression, dimensionality
   reduction, and a variety of deep neural network algorithms. in an
   attempt to help you coordinate learning by implementing, what follows
   is a partial list of implemented algorithm links as well as some
   supporting material. note that all credit for these implemented
   algorithms goes to the repo's owner, [46]rushter, whose github profile
   indicates that he is available for hire. i would suspect this repo
   would be a well-received resume.

   deep learning (mlp, id98, id56, lstm)

   deep learning start here: [47]7 steps to understanding deep learning

   go from vague understanding of deep neural networks to knowledgeable
   practitioner in 7 steps!

   the code: [48]rushter's neuralnet module

   id75/id28

   id75 start here: [49]id75, least squares &
   id127: a concise technical overview

   id75 is a simple algebraic tool which attempts to find the
      best    line fitting 2 or more attributes.

   the code: [50]rushter's linear_models.py

   id79s

   id79s start here: [51]id79: a criminal tutorial

   get an overview of id79 here, one of the most used algorithms
   by kdnuggets readers according to a recent poll.

   the code: [52]rushter's linear_models.py

   support vector machines

   id166s start here: [53]support vector machines: a concise technical
   overview

   support vector machines remain a popular and time-tested classification
   algorithm. this post provides a high-level concise technical overview
   of their functionality.

   the code: [54]rushter's id166.py, and [55]rushter's kernels.py

   k-nearest neighbors

   knn start here: [56]implementing your own k-nearest neighbour algorithm
   using python

   a detailed explanation of one of the most used machine learning
   algorithms, k-nearest neighbors.

   the code: [57]rushter's knn.py

   naive bayes

   bayesian start here: [58]bayesian machine learning, explained

   get a great introductory bayesian machine learning explanation here, as
   well as suggestions where to go for further study.

   the code: [59]rushter's naive_bayes.py

   id116 id91

   id91 start here: [60]comparing id91 techniques: a concise
   technical overview

   a wide array of id91 techniques are in use today. given the
   widespread use of id91 in everyday data mining, this post
   provides a concise technical overview of 2 such exemplar techniques.

   the code: [61]rushter's kmeans.py

   all implemented algorithms come with example code, which is helpful for
   understanding the apis. an example is as follows:

   the above algorithm implementations are a sample of what is included in
   the repo, so be sure to have a look at the following implementations as
   well:
     * [62]gaussian mixture model
     * [63]principal component analysis (pca)
     * [64]factorization machines
     * [65]restricted id82 (rbm)
     * [66]t-distributed stochastic neighbor embedding (id167)
     * [67]gradient boosting machines

   if you have found these code examples helpful, i'm sure [68]the author
   would be happy to hear from you.

   related:
     * [69]why implement machine learning algorithms from scratch?
     * [70]the great algorithm tutorial roundup
     * [71]the 10 algorithms machine learning engineers need to know
     __________________________________________________________________

   [72][prv.gif] previous post
   [73]next post [nxt.gif]
     __________________________________________________________________

top stories past 30 days

                                              most popular
    1. [74]another 10 free must-read books for machine learning and data
       science
    2. [75]9 must-have skills you need to become a data scientist, updated
    3. [76]who is a typical data scientist in 2019?
    4. [77]the pareto principle for data scientists
    5. [78]what no one will tell you about data science job applications
    6. [79]19 inspiring women in ai, big data, data science, machine
       learning
    7. [80]my favorite mind-blowing machine learning/ai breakthroughs

                                                most shared
    1. [81]id158s optimization using genetic algorithm
       with python
    2. [82]who is a typical data scientist in 2019?
    3. [83]8 reasons why you should get a microsoft azure certification
    4. [84]the pareto principle for data scientists
    5. [85]r vs python for data visualization
    6. [86]how to work in data science, ai, big data
    7. [87]the deep learning toolset     an overview

[88]latest news

     * [89]statistical thinking for industrial problem solving (st...
     * [90]from business intelligence to machine intelligence
     * [91]what is missing when ai makes a decision?
     * [92]spatio-temporal statistics: a primer
     * [93]another 10 free must-see courses for machine learning a...
     * [94]download your datax guide to ai in marketing

   [95]kdnuggets home    [96]news    [97]2017    [98]jan    [99]tutorials,
   overviews    great collection of minimal and clean implementations of
   machine learning algorithms ( [100]17:n04 )
      2019 kdnuggets. [101]about kdnuggets.  [102]privacy policy.
   [103]terms of service

   [104]subscribe to kdnuggets news
   [105][tw_c48.png] [106]facebook [107]linkedin
   x

   [envelope.png] [108]get kdnuggets, a leading newsletter on ai, data
   science, and machine learning
   email: ______________________________
   sign up
   leave this field empty if you're human: ____________________

references

   visible links
   1. https://www.kdnuggets.com/feed/
   2. https://www.kdnuggets.com/feed
   3. https://www.kdnuggets.com/comments/feed
   4. https://www.kdnuggets.com/2017/01/great-collection-clean-machine-learning-algorithms.html/feed
   5. https://www.kdnuggets.com/2017/01/regis-university-ms-data-science-on-campus.html
   6. https://www.kdnuggets.com/2017/01/data-scientist-engineer-understand-virtualization-cloud.html
   7. https://www.kdnuggets.com/news/subscribe.html
   8. https://twitter.com/kdnuggets
   9. https://www.facebook.com/kdnuggets
  10. https://www.linkedin.com/groups/54257/
  11. https://www.kdnuggets.com/contact.html
  12. https://www.kdnuggets.com/software/index.html
  13. https://www.kdnuggets.com/news/index.html
  14. https://www.kdnuggets.com/news/top-stories.html
  15. https://www.kdnuggets.com/opinions/index.html
  16. https://www.kdnuggets.com/tutorials/index.html
  17. https://www.kdnuggets.com/jobs/index.html
  18. https://www.kdnuggets.com/companies/index.html
  19. https://www.kdnuggets.com/courses/index.html
  20. https://www.kdnuggets.com/datasets/index.html
  21. https://www.kdnuggets.com/education/index.html
  22. https://www.kdnuggets.com/education/analytics-data-mining-certificates.html
  23. https://www.kdnuggets.com/meetings/index.html
  24. https://www.kdnuggets.com/webcasts/index.html
  25. https://www.kdnuggets.com/
  26. https://www.kdnuggets.com/news/index.html
  27. https://www.kdnuggets.com/2017/index.html
  28. https://www.kdnuggets.com/2017/01/index.html
  29. https://www.kdnuggets.com/2017/01/tutorials.html
  30. https://www.kdnuggets.com/2017/n04.html
  31. https://www.kdnuggets.com/2017/01/regis-university-ms-data-science-on-campus.html
  32. https://www.kdnuggets.com/2017/01/data-scientist-engineer-understand-virtualization-cloud.html
  33. https://www.kdnuggets.com/tag/algorithms
  34. https://www.kdnuggets.com/tag/machine-learning
  35. https://www.kdnuggets.com/tag/programming
  36. https://www.kdnuggets.com/tag/python
  37. https://www.kdnuggets.com/author/matt-mayo
  38. https://www.kdnuggets.com/2016/08/new-poll-data-science-methods-algorithms-used.html
  39. https://www.kdnuggets.com/2016/09/poll-algorithms-used-data-scientists.html
  40. https://www.kdnuggets.com/2016/11/top-20-python-machine-learning-open-source-updated.html
  41. https://twitter.com/rasbt
  42. https://www.amazon.com/python-machine-learning-sebastian-raschka/dp/1783555130
  43. https://www.kdnuggets.com/2016/05/implement-machine-learning-algorithms-scratch.html
  44. https://github.com/rushter/mlalgorithms
  45. https://github.com/rushter
  46. https://github.com/rushter
  47. https://www.kdnuggets.com/2016/01/seven-steps-deep-learning.html
  48. https://github.com/rushter/mlalgorithms/tree/master/mla/neuralnet
  49. https://www.kdnuggets.com/2016/11/linear-regression-least-squares-matrix-multiplication-concise-technical-overview.html
  50. https://github.com/rushter/mlalgorithms/blob/master/mla/linear_models.py
  51. https://www.kdnuggets.com/2016/09/reandom-forest-criminal-tutorial.html
  52. https://github.com/rushter/mlalgorithms/blob/master/mla/ensemble/random_forest.py
  53. https://www.kdnuggets.com/2016/09/support-vector-machines-concise-technical-overview.html
  54. https://github.com/rushter/mlalgorithms/blob/master/mla/id166/id166.py
  55. https://github.com/rushter/mlalgorithms/blob/master/mla/id166/kernerls.py
  56. https://www.kdnuggets.com/2016/01/implementing-your-own-knn-using-python.html
  57. https://github.com/rushter/mlalgorithms/blob/master/mla/knn.py
  58. https://www.kdnuggets.com/2016/07/bayesian-machine-learning-explained.html
  59. https://github.com/rushter/mlalgorithms/blob/master/mla/naive_bayes.py
  60. https://www.kdnuggets.com/2016/09/comparing-id91-techniques-concise-technical-overview.html
  61. https://github.com/rushter/mlalgorithms/blob/master/mla/kmeans.py
  62. https://github.com/rushter/mlalgorithms/blob/master/mla/gaussian_mixture.py
  63. https://github.com/rushter/mlalgorithms/blob/master/mla/pca.py
  64. https://github.com/rushter/mlalgorithms/blob/master/mla/fm.py
  65. https://github.com/rushter/mlalgorithms/blob/master/mla/rbm.py
  66. https://github.com/rushter/mlalgorithms/blob/master/mla/tsne.py
  67. https://github.com/rushter/mlalgorithms/blob/master/mla/ensemble/gbm.py
  68. https://github.com/rushter
  69. https://www.kdnuggets.com/2016/05/implement-machine-learning-algorithms-scratch.html
  70. https://www.kdnuggets.com/2016/09/great-algorithm-tutorial-roundup.html
  71. https://www.kdnuggets.com/2016/08/10-algorithms-machine-learning-engineers.html
  72. https://www.kdnuggets.com/2017/01/regis-university-ms-data-science-on-campus.html
  73. https://www.kdnuggets.com/2017/01/data-scientist-engineer-understand-virtualization-cloud.html
  74. https://www.kdnuggets.com/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html
  75. https://www.kdnuggets.com/2018/05/simplilearn-9-must-have-skills-data-scientist.html
  76. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  77. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  78. https://www.kdnuggets.com/2019/03/data-science-job-applications.html
  79. https://www.kdnuggets.com/2019/03/women-ai-big-data-science-machine-learning.html
  80. https://www.kdnuggets.com/2019/03/favorite-ml-ai-breakthroughs.html
  81. https://www.kdnuggets.com/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html
  82. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
  83. https://www.kdnuggets.com/2019/03/simplilearn-8-reasons-microsoft-azure-certification.html
  84. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
  85. https://www.kdnuggets.com/2019/03/r-vs-python-data-visualization.html
  86. https://www.kdnuggets.com/2019/03/work-data-science-ai-big-data.html
  87. https://www.kdnuggets.com/2019/03/deep-learning-toolset-overview.html
  88. https://www.kdnuggets.com/news/index.html
  89. https://www.kdnuggets.com/2019/04/jmp-statistical-thinking-free-online-course.html
  90. https://www.kdnuggets.com/2019/04/datarobot-from-business-intelligence-machine-intelligence.html
  91. https://www.kdnuggets.com/2019/04/ai-makes-decision.html
  92. https://www.kdnuggets.com/2019/04/spatio-temporal-statistics-primer.html
  93. https://www.kdnuggets.com/2019/04/another-10-free-must-see-courses-machine-learning-data-science.html
  94. https://www.kdnuggets.com/2019/04/datax-download-guide-ai-marketing.html
  95. https://www.kdnuggets.com/
  96. https://www.kdnuggets.com/news/index.html
  97. https://www.kdnuggets.com/2017/index.html
  98. https://www.kdnuggets.com/2017/01/index.html
  99. https://www.kdnuggets.com/2017/01/tutorials.html
 100. https://www.kdnuggets.com/2017/n04.html
 101. https://www.kdnuggets.com/about/index.html
 102. https://www.kdnuggets.com/news/privacy-policy.html
 103. https://www.kdnuggets.com/terms-of-service.html
 104. https://www.kdnuggets.com/news/subscribe.html
 105. https://twitter.com/kdnuggets
 106. https://facebook.com/kdnuggets
 107. https://www.linkedin.com/groups/54257
 108. https://www.kdnuggets.com/news/subscribe.html

   hidden links:
 110. https://www.kdnuggets.com/
 111. https://www.kdnuggets.com/
