   #[1]github [2]recent commits to deeplearningfornlpinpytorch:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]90
     * [35]star [36]1,425
     * [37]fork [38]324

[39]rguthrie3/[40]deeplearningfornlpinpytorch

   [41]code [42]issues 4 [43]pull requests 1 [44]projects 0 [45]insights
   [46]permalink
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [47]sign up
   branch: master
   [48]deeplearningfornlpinpytorch/readme.md
   [49]find file copy path
   fetching contributors   
   cannot retrieve contributors at this time
   53 lines (44 sloc) 5.1 kb
   [50]raw [51]blame [52]history
   (button) (button)

table of contents:

    1. introduction to torch's tensor library
    2. computation graphs and automatic differentiation
    3. deep learning building blocks: affine maps, non-linearities, and
       objectives
    4. optimization and training
    5. creating network components in pytorch

     * example: id28 bag-of-words text classifier

    6. id27s: encoding lexical semantics

     * example: id165 id38
     * exercise: continuous bag-of-words for learning id27s

    7. sequence modeling and long-short term memory networks

     * example: an lstm for part-of-speech tagging
     * exercise: augmenting the lstm tagger with character-level features

    8. advanced: dynamic toolkits, id145, and the bilstm-crf

     * example: bi-lstm conditional random field for named-entity
       recognition
     * exercise: a new id168 for discriminative tagging

what is this tutorial?

   i am writing this tutorial because, although there are plenty of other
   tutorials out there, they all seem to have one of three problems:
     * they have a lot of content on id161 and conv nets, which
       is irrelevant for most nlp (although conv nets have been applied in
       cool ways to nlp problems).
     * pytorch is brand new, and so many deep learning for nlp tutorials
       are in older frameworks, and usually not in dynamic frameworks like
       pytorch, which have a totally different flavor.
     * the examples don't move beyond id56 language models and show the
       awesome stuff you can do when trying to do lingusitic structure
       prediction. i think this is a problem, because pytorch's dynamic
       graphs make structure prediction one of its biggest strengths.

   specifically, i am writing this tutorial for a natural language
   processing class at georgia tech, to ease into a problem set i wrote
   for the class on deep transition parsing. the problem set uses some
   advanced techniques. the intention of this tutorial is to cover the
   basics, so that students can focus on the more challenging aspects of
   the problem set. the aim is to start with the basics and move up to
   linguistic structure prediction, which i feel is almost completely
   absent in other pytorch tutorials. the general deep learning basics
   have short expositions. topics more nlp-specific received more in-depth
   discussions, although i have referred to other sources when i felt a
   full description would be reinventing the wheel and take up too much
   space.

id33 problem set

   as mentioned above, [53]here is the problem set that goes through
   implementing a high-performing dependency parser in pytorch. i wanted
   to add a link here since it might be useful, provided you ignore the
   things that were specific to the class. a few notes:
     * there is a lot of code, so the beginning of the problem set was
       mainly to get people familiar with the way my code represented the
       relevant data, and the interfaces you need to use. the rest of the
       problem set is actually implementing components for the parser.
       since we hadn't done deep learning in the class before, i tried to
       provide an enormous amount of comments and hints when writing it.
     * there is a unit test for every deliverable, which you can run with
       nosetests.
     * since we use this problem set in the class, please don't publically
       post solutions.
     * the same repo has some notes that include a section on shift-reduce
       id33, if you are looking for a written source to
       complement the problem set.
     * the link above might not work if it is taken down at the start of a
       new semester.

references:

     * i learned a lot about deep structure prediction at emnlp 2016 from
       [54]this tutorial on [55]dynet, given by chris dyer and graham
       neubig of cmu and yoav goldberg of bar ilan university. dynet is a
       great package, especially if you want to use c++ and avoid dynamic
       typing. the final bilstm crf exercise and the character-level
       features exercise are things i learned from this tutorial.
     * a great book on structure prediction is [56]linguistic structure
       prediction by noah smith. it doesn't use deep learning, but that is
       ok.
     * the best deep learning book i am aware of is [57]deep learning,
       which is by some major contributors to the field and very
       comprehensive, although there is not an nlp focus. it is free
       online, but worth having on your shelf.

exercises:

   there are a few exercises in the tutorial, which are either to
   implement a popular model (cbow) or augment one of my models. the
   character-level features exercise especially is very non-trivial, but
   very useful (i can't quote the exact numbers, but i have run the
   experiment before and usually the character-level features increase
   accuracy 2-3%). since they aren't simple exercises, i will soon
   implement them myself and add them to the repo.

suggestions:

   please open a github issue if you find any mistakes or think there is a
   particular model that would be useful to add.
   ____________________ (button) go

     *    2019 github, inc.
     * [58]terms
     * [59]privacy
     * [60]security
     * [61]status
     * [62]help

     * [63]contact github
     * [64]pricing
     * [65]api
     * [66]training
     * [67]blog
     * [68]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [69]reload to refresh your
   session. you signed out in another tab or window. [70]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/rguthrie3/deeplearningfornlpinpytorch/commits/master.atom
   3. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md
  32. https://github.com/join
  33. https://github.com/login?return_to=/rguthrie3/deeplearningfornlpinpytorch
  34. https://github.com/rguthrie3/deeplearningfornlpinpytorch/watchers
  35. https://github.com/login?return_to=/rguthrie3/deeplearningfornlpinpytorch
  36. https://github.com/rguthrie3/deeplearningfornlpinpytorch/stargazers
  37. https://github.com/login?return_to=/rguthrie3/deeplearningfornlpinpytorch
  38. https://github.com/rguthrie3/deeplearningfornlpinpytorch/network/members
  39. https://github.com/rguthrie3
  40. https://github.com/rguthrie3/deeplearningfornlpinpytorch
  41. https://github.com/rguthrie3/deeplearningfornlpinpytorch
  42. https://github.com/rguthrie3/deeplearningfornlpinpytorch/issues
  43. https://github.com/rguthrie3/deeplearningfornlpinpytorch/pulls
  44. https://github.com/rguthrie3/deeplearningfornlpinpytorch/projects
  45. https://github.com/rguthrie3/deeplearningfornlpinpytorch/pulse
  46. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/f046c3a0f7163eefaec0c3ffb9668046cbc61c47/readme.md
  47. https://github.com/join?source=prompt-blob-show
  48. https://github.com/rguthrie3/deeplearningfornlpinpytorch
  49. https://github.com/rguthrie3/deeplearningfornlpinpytorch/find/master
  50. https://github.com/rguthrie3/deeplearningfornlpinpytorch/raw/master/readme.md
  51. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blame/master/readme.md
  52. https://github.com/rguthrie3/deeplearningfornlpinpytorch/commits/master/readme.md
  53. https://github.com/jacobeisenstein/gt-nlp-class/tree/master/psets/ps4
  54. https://github.com/clab/dynet_tutorial_examples
  55. http://dynet.readthedocs.io/en/latest/
  56. https://www.amazon.com/linguistic-structure-prediction-synthesis-technologies/dp/1608454053/ref=sr_1_1?ie=utf8&qid=1489510387&sr=8-1&keywords=linguistic+structure+prediction
  57. http://deeplearningbook.org/
  58. https://github.com/site/terms
  59. https://github.com/site/privacy
  60. https://github.com/security
  61. https://githubstatus.com/
  62. https://help.github.com/
  63. https://github.com/contact
  64. https://github.com/pricing
  65. https://developer.github.com/
  66. https://training.github.com/
  67. https://github.blog/
  68. https://github.com/about
  69. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md
  70. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md

   hidden links:
  72. https://github.com/
  73. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md
  74. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md
  75. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md
  76. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md#table-of-contents
  77. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md#what-is-this-tutorial
  78. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md#dependency-parsing-problem-set
  79. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md#references
  80. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md#exercises
  81. https://github.com/rguthrie3/deeplearningfornlpinpytorch/blob/master/readme.md#suggestions
  82. https://github.com/
