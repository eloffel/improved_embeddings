   [1]cs231n convolutional neural networks for visual recognition

   in this assignment you will practice writing id26 code, and
   training neural networks and convolutional neural networks. the goals
   of this assignment are as follows:
     * understand neural networks and how they are arranged in layered
       architectures
     * understand and be able to implement (vectorized) id26
     * implement various update rules used to optimize neural networks
     * implement batch id172 for training deep networks
     * implement dropout to regularize networks
     * effectively cross-validate and find the best hyperparameters for
       neural network architecture
     * understand the architecture of convolutional neural networks and
       train gain experience with training these models on data

setup

   you can work on the assignment in one of two ways: locally on your own
   machine, or on a virtual machine through terminal.com.

working in the cloud on terminal

   terminal has created a separate subdomain to serve our class,
   [2]www.stanfordterminalcloud.com. register your account there. the
   assignment 2 snapshot can then be found [3]here. if you are registered
   in the class you can contact the ta (see piazza for more information)
   to request terminal credits for use on the assignment. once you boot up
   the snapshot everything will be installed for you, and you will be
   ready to start on your assignment right away. we have written a small
   tutorial on terminal [4]here.

working locally

   get the code as a zip file [5]here. as for the dependencies:

   [option 1] use anaconda: the preferred approach for installing all the
   assignment dependencies is to use [6]anaconda, which is a python
   distribution that includes many of the most popular python packages for
   science, math, engineering and data analysis. once you install it you
   can skip all mentions of requirements and you are ready to go directly
   to working on the assignment.

   [option 2] manual install, virtual environment: if you do not want to
   use anaconda and want to go with a more manual and risky installation
   route you will likely want to create a [7]virtual environment for the
   project. if you choose not to use a virtual environment, it is up to
   you to make sure that all dependencies for the code are installed
   globally on your machine. to set up a virtual environment, run the
   following:
cd assignment2
sudo pip install virtualenv      # this may already be installed
virtualenv .env                  # create a virtual environment
source .env/bin/activate         # activate the virtual environment
pip install -r requirements.txt  # install dependencies
# work on the assignment for a while ...
deactivate                       # exit the virtual environment

   download data: once you have the starter code, you will need to
   download the cifar-10 dataset. run the following from the assignment2
   directory:
cd cs231n/datasets
./get_datasets.sh

   compile the cython extension: convolutional neural networks require a
   very efficient implementation. we have implemented of the functionality
   using [8]cython; you will need to compile the cython extension before
   you can run the code. from the cs231n directory, run the following
   command:
python setup.py build_ext --inplace

   start ipython: after you have the cifar-10 data, you should start the
   ipython notebook server from the assignment2 directory. if you are
   unfamiliar with ipython, you should read our [9]ipython tutorial.

   note: if you are working in a virtual environment on osx, you may
   encounter errors with matplotlib due to the [10]issues described here.
   you can work around this issue by starting the ipython server using the
   start_ipython_osx.sh script from the assignment2 directory; the script
   assumes that your virtual environment is named .env.

submitting your work:

   whether you work on the assignment locally or using terminal, once you
   are done working run the collectsubmission.sh script; this will produce
   a file called assignment2.zip. upload this file under the assignments
   tab on [11]the coursework page for the course.

q1: fully-connected neural network (30 points)

   the ipython notebook fullyconnectednets.ipynb will introduce you to our
   modular layer design, and then use those layers to implement
   fully-connected networks of arbitrary depth. to optimize these models
   you will implement several popular update rules.

q2: batch id172 (30 points)

   in the ipython notebook batchid172.ipynb you will implement
   batch id172, and use it to train deep fully-connected networks.

q3: dropout (10 points)

   the ipython notebook dropout.ipynb will help you implement dropout and
   explore its effects on model generalization.

q4: convnet on cifar-10 (30 points)

   in the ipython notebook convolutionalnetworks.ipynb you will implement
   several new layers that are commonly used in convolutional networks.
   you will train a (shallow) convolutional network on cifar-10, and it
   will then be up to you to train the best network that you can.

q5: do something extra! (up to +10 points)

   in the process of training your network, you should feel free to
   implement anything that you want to get better performance. you can
   modify the solver, implement additional layers, use different types of
   id173, use an ensemble of models, or anything else that comes
   to mind. if you implement these or other ideas not covered in the
   assignment then you will be awarded some bonus points.

     * [12]cs231n
     * [13]cs231n
     * [14]karpathy@cs.stanford.edu

references

   1. http://cs231n.github.io/
   2. https://www.stanfordterminalcloud.com/
   3. https://www.stanfordterminalcloud.com/snapshot/6c95ca2c9866a962964ede3ea5813d4c2410ba48d92cf8d11a93fbb13e08b76a
   4. http://cs231n.github.io/terminal-tutorial
   5. http://cs231n.stanford.edu/assignments/2016/winter1516_assignment2.zip
   6. https://www.continuum.io/downloads
   7. http://docs.python-guide.org/en/latest/dev/virtualenvs/
   8. http://cython.org/
   9. http://cs231n.github.io/ipython-tutorial
  10. http://matplotlib.org/faq/virtualenv_faq.html
  11. https://coursework.stanford.edu/portal/site/w15-cs-231n-01/
  12. https://github.com/cs231n
  13. https://twitter.com/cs231n
  14. mailto:karpathy@cs.stanford.edu
