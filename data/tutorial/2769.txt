   #[1]github [2]recent commits to pystanforddependencies:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]2
     * [35]star [36]47
     * [37]fork [38]14

[39]dmcc/[40]pystanforddependencies

   [41]code [42]issues 9 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   python interface for converting id32 trees to stanford
   dependencies and universal depenencies
   [47]https://pypi.python.org/pypi/pystanfo   
     * [48]143 commits
     * [49]3 branches
     * [50]11 releases
     * [51]fetching contributors
     * [52]apache-2.0

    1. [53]python 100.0%

   (button) python
   branch: master (button) new pull request
   [54]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/d
   [55]download zip

downloading...

   want to be notified of new releases in dmcc/pystanforddependencies?
   [56]sign in [57]sign up

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [60]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [61]download the github extension for visual studio
   and try again.

   (button) go back
   [62]@kaushikacharya [63]@dmcc
   [64]kaushikacharya and [65]dmcc [66]wrapping the text to pass flake8
   latest commit [67]43d8f38 mar 15, 2019
   [68]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [69]stanforddependencies [70]wrapping the text to pass flake8 mar 15,
   2019
   [71]examples
   [72]test
   [73].gitignore
   [74].hgignore [75].gitignore, .hgignore: add egg-info oct 9, 2015
   [76].travis.yml
   [77]checklist.txt
   [78]contributing.rst
   [79]contributors.rst [80]contribut{ors,ing}.rst jul 23, 2015
   [81]license-2.0.txt
   [82]manifest.in [83]manifest.in: fix notice.txt typo dec 14, 2014
   [84]notice.txt
   [85]readme.rst
   [86]setup.id18
   [87]setup.py
   [88]tox.ini

readme.rst

pystanforddependencies

   [89]https://travis-ci.org/dmcc/pystanforddependencies.svg?branch=master
   [90]https://badge.fury.io/py/pystanforddependencies.png
   [91]https://coveralls.io/repos/dmcc/pystanforddependencies/badge.png?br
   anch=master

   python interface for converting [92]id32 trees to
   [93]universal dependencies and [94]stanford dependencies.

example usage

   start by getting a stanforddependencies instance with
   stanforddependencies.get_instance():
>>> import stanforddependencies
>>> sd = stanforddependencies.get_instance(backend='subprocess')

   get_instance() takes several options. backend can currently be
   subprocess or jpype (see below). if you have an existing [95]stanford
   corenlp or [96]stanford parser jar file, use the jar_filename parameter
   to point to the full path of the jar file. otherwise,
   pystanforddependencies will download a jar file for you and store it in
   locally (~/.local/share/pystanforddeps). you can request a specific
   version with the version flag, e.g., version='3.4.1'. to convert trees,
   use the convert_trees() or convert_tree() method (note that by default,
   convert_trees() can be considerably faster if you're doing batch
   conversion). these return a sentence (list of token objects) or a list
   of sentences (list of list of token objects) respectively:
>>> sent = sd.convert_tree('(s1 (np (dt some) (jj blue) (nn moose)))')
>>> for token in sent:
...     print token
...
token(index=1, form='some', cpos='dt', pos='dt', head=3, deprel='det')
token(index=2, form='blue', cpos='jj', pos='jj', head=3, deprel='amod')
token(index=3, form='moose', cpos='nn', pos='nn', head=0, deprel='root')

   this tells you that moose is the head of the sentence and is modified
   by some (with a det = determiner relation) and blue (with an amod =
   adjective modifier relation). fields on token objects are readable as
   attributes. see docs for additional options in convert_tree() and
   convert_trees().

visualization

   if you have the [97]asciitree package, you can use a prettier ascii
   formatter:
>>> print sent.as_asciitree()
 moose [root]
  +-- some [det]
  +-- blue [amod]

   if you have python 2.7 or later, you can use [98]graphviz to render
   your graphs. you'll need the [99]python graphviz package to call
   as_dotgraph():
>>> dotgraph = sent.as_dotgraph()
>>> print dotgraph
digraph {
        0 [label=root]
        1 [label=some]
                3 -> 1 [label=det]
        2 [label=blue]
                3 -> 2 [label=amod]
        3 [label=moose]
                0 -> 3 [label=root]
}
>>> dotgraph.render('moose') # renders a pdf by default
'moose.pdf'
>>> dotgraph.format = 'svg'
>>> dotgraph.render('moose')
'moose.svg'

   the python [100]xdot package provides an interactive visualization:
>>> import xdot
>>> window = xdot.dotwindow()
>>> window.set_dotcode(dotgraph.source)

   both as_asciitree() and as_dotgraph() allow customization. see the docs
   for additional options.

backends

   currently pystanforddependencies includes two backends:
     * subprocess (works anywhere with a java binary, but more overhead so
       batched conversions with convert_trees() are recommended)
     * jpype (requires [101]jpype1, faster than the subprocess backend,
       also includes access to the stanford corenlp lemmatizer)

   by default, pystanforddependencies will attempt to use the jpype
   backend. if jpype isn't available or crashes on startup,
   pystanforddependencies will fallback to subprocess with a warning.

universal dependencies status

   pystanforddependencies supports most features in [102]universal
   dependencies (see [103]issue #10 for the most up to date status).
   pystanforddependencies output matches universal dependencies in terms
   of structure and dependency labels, but universal pos tags and features
   are missing. currently, pystanforddependencies will output universal
   dependencies by default (unless you're using stanford corenlp 3.5.1 or
   earlier).

related projects

     * [104]clearnlp-converter (uses [105]clearnlp instead of
       [106]stanford corenlp for dependency conversion)

more information

   licensed under [107]apache 2.0.

   written by david mcclosky ([108]homepage, [109]code)

   bug reports and feature requests: [110]github issue tracker

release summaries

     * 0.3.1 (2015.11.02): better collapsed universal handling, bugfixes
     * 0.3.0 (2015.10.09): support copy nodes, more input
       checking/debugging help, example convert.py program
     * 0.2.0 (2015.08.02): universal dependencies support (mostly), python
       3 support (fully), minor api updates
     * 0.1.7 (2015.06.13): bugfixes for jpype, handle version mismatches
       in ibm java
     * 0.1.6 (2015.02.12): support for graphviz formatting, corenlp 3.5.1,
       better windows portability
     * 0.1.5 (2015.01.10): support for ascii tree formatting
     * 0.1.4 (2015.01.07): fix ccprocessed support
     * 0.1.3 (2015.01.03): bugfixes, coveralls integration, refactoring
     * 0.1.2 (2015.01.02): better conll structures, test suite and travis
       ci support, bugfixes
     * 0.1.1 (2014.12.15): more docs, fewer bugs
     * 0.1 (2014.12.14): initial release

     *    2019 github, inc.
     * [111]terms
     * [112]privacy
     * [113]security
     * [114]status
     * [115]help

     * [116]contact github
     * [117]pricing
     * [118]api
     * [119]training
     * [120]blog
     * [121]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [122]reload to refresh your
   session. you signed out in another tab or window. [123]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/dmcc/pystanforddependencies/commits/master.atom
   3. https://github.com/dmcc/pystanforddependencies#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/dmcc/pystanforddependencies
  32. https://github.com/join
  33. https://github.com/login?return_to=/dmcc/pystanforddependencies
  34. https://github.com/dmcc/pystanforddependencies/watchers
  35. https://github.com/login?return_to=/dmcc/pystanforddependencies
  36. https://github.com/dmcc/pystanforddependencies/stargazers
  37. https://github.com/login?return_to=/dmcc/pystanforddependencies
  38. https://github.com/dmcc/pystanforddependencies/network/members
  39. https://github.com/dmcc
  40. https://github.com/dmcc/pystanforddependencies
  41. https://github.com/dmcc/pystanforddependencies
  42. https://github.com/dmcc/pystanforddependencies/issues
  43. https://github.com/dmcc/pystanforddependencies/pulls
  44. https://github.com/dmcc/pystanforddependencies/projects
  45. https://github.com/dmcc/pystanforddependencies/pulse
  46. https://github.com/join?source=prompt-code
  47. https://pypi.python.org/pypi/pystanforddependencies
  48. https://github.com/dmcc/pystanforddependencies/commits/master
  49. https://github.com/dmcc/pystanforddependencies/branches
  50. https://github.com/dmcc/pystanforddependencies/releases
  51. https://github.com/dmcc/pystanforddependencies/graphs/contributors
  52. https://github.com/dmcc/pystanforddependencies/blob/master/license-2.0.txt
  53. https://github.com/dmcc/pystanforddependencies/search?l=python
  54. https://github.com/dmcc/pystanforddependencies/find/master
  55. https://github.com/dmcc/pystanforddependencies/archive/master.zip
  56. https://github.com/login?return_to=https://github.com/dmcc/pystanforddependencies
  57. https://github.com/join?return_to=/dmcc/pystanforddependencies
  58. https://desktop.github.com/
  59. https://desktop.github.com/
  60. https://developer.apple.com/xcode/
  61. https://visualstudio.github.com/
  62. https://github.com/kaushikacharya
  63. https://github.com/dmcc
  64. https://github.com/dmcc/pystanforddependencies/commits?author=kaushikacharya
  65. https://github.com/dmcc/pystanforddependencies/commits?author=dmcc
  66. https://github.com/dmcc/pystanforddependencies/commit/43d8f38a19e40087f273330087918c87df6d4d8f
  67. https://github.com/dmcc/pystanforddependencies/commit/43d8f38a19e40087f273330087918c87df6d4d8f
  68. https://github.com/dmcc/pystanforddependencies/tree/43d8f38a19e40087f273330087918c87df6d4d8f
  69. https://github.com/dmcc/pystanforddependencies/tree/master/stanforddependencies
  70. https://github.com/dmcc/pystanforddependencies/commit/43d8f38a19e40087f273330087918c87df6d4d8f
  71. https://github.com/dmcc/pystanforddependencies/tree/master/examples
  72. https://github.com/dmcc/pystanforddependencies/tree/master/test
  73. https://github.com/dmcc/pystanforddependencies/blob/master/.gitignore
  74. https://github.com/dmcc/pystanforddependencies/blob/master/.hgignore
  75. https://github.com/dmcc/pystanforddependencies/commit/3a0491f7206604157931cfef0742c6cb24b5989b
  76. https://github.com/dmcc/pystanforddependencies/blob/master/.travis.yml
  77. https://github.com/dmcc/pystanforddependencies/blob/master/checklist.txt
  78. https://github.com/dmcc/pystanforddependencies/blob/master/contributing.rst
  79. https://github.com/dmcc/pystanforddependencies/blob/master/contributors.rst
  80. https://github.com/dmcc/pystanforddependencies/commit/3c9c00fd5e1b7265acb7493fc51c083c42cd88a1
  81. https://github.com/dmcc/pystanforddependencies/blob/master/license-2.0.txt
  82. https://github.com/dmcc/pystanforddependencies/blob/master/manifest.in
  83. https://github.com/dmcc/pystanforddependencies/commit/44121f13a4dd0fc9b49913eb6c8d151ba77e614a
  84. https://github.com/dmcc/pystanforddependencies/blob/master/notice.txt
  85. https://github.com/dmcc/pystanforddependencies/blob/master/readme.rst
  86. https://github.com/dmcc/pystanforddependencies/blob/master/setup.id18
  87. https://github.com/dmcc/pystanforddependencies/blob/master/setup.py
  88. https://github.com/dmcc/pystanforddependencies/blob/master/tox.ini
  89. https://travis-ci.org/dmcc/pystanforddependencies
  90. https://badge.fury.io/py/pystanforddependencies
  91. https://coveralls.io/r/dmcc/pystanforddependencies?branch=master
  92. http://www.cis.upenn.edu/~treebank/
  93. http://universaldependencies.github.io/docs/
  94. http://nlp.stanford.edu/software/stanford-dependencies.shtml
  95. http://nlp.stanford.edu/software/corenlp.shtml
  96. http://nlp.stanford.edu/software/lex-parser.shtml
  97. https://pypi.python.org/pypi/asciitree
  98. http://graphviz.org/
  99. https://pypi.python.org/pypi/graphviz
 100. https://pypi.python.org/pypi/xdot
 101. https://pypi.python.org/pypi/jpype1
 102. http://universaldependencies.github.io/docs/
 103. https://github.com/dmcc/pystanforddependencies/issues/10
 104. https://pypi.python.org/pypi/clearnlp-converter/
 105. http://www.clearnlp.com/
 106. http://nlp.stanford.edu/software/corenlp.shtml
 107. http://www.apache.org/licenses/license-2.0
 108. http://nlp.stanford.edu/~mcclosky/
 109. http://github.com/dmcc
 110. http://github.com/dmcc/pystanforddependencies/issues
 111. https://github.com/site/terms
 112. https://github.com/site/privacy
 113. https://github.com/security
 114. https://githubstatus.com/
 115. https://help.github.com/
 116. https://github.com/contact
 117. https://github.com/pricing
 118. https://developer.github.com/
 119. https://training.github.com/
 120. https://github.blog/
 121. https://github.com/about
 122. https://github.com/dmcc/pystanforddependencies
 123. https://github.com/dmcc/pystanforddependencies

   hidden links:
 125. https://github.com/
 126. https://github.com/dmcc/pystanforddependencies
 127. https://github.com/dmcc/pystanforddependencies
 128. https://github.com/dmcc/pystanforddependencies
 129. https://help.github.com/articles/which-remote-url-should-i-use
 130. https://github.com/dmcc/pystanforddependencies#pystanforddependencies
 131. https://github.com/dmcc/pystanforddependencies#example-usage
 132. https://github.com/dmcc/pystanforddependencies#visualization
 133. https://github.com/dmcc/pystanforddependencies#backends
 134. https://github.com/dmcc/pystanforddependencies#universal-dependencies-status
 135. https://github.com/dmcc/pystanforddependencies#related-projects
 136. https://github.com/dmcc/pystanforddependencies#more-information
 137. https://github.com/dmcc/pystanforddependencies#release-summaries
 138. https://github.com/
