   [1]view on github [2]download zip file
   [logo.png]

   interactive tutorial and introduction into programming with python for
   the humanities
   [3]folgert karsdorp

   the programming language [4]python is widely used within many
   scientific domains nowadays and the language is readily accessible to
   scholars from the humanities. python is an excellent choice for dealing
   with (linguistic as well as literary) textual data, which is so typical
   of the humanities. in this book you will be thoroughly introduced to
   the language and be taught to program basic algorithmic procedures. the
   book expects no prior experience with programming, although we hope to
   provide some interesting insights and skills for more advanced
   programmers as well. the book consists of 10 chapters. chapter 5 and
   chapter 6 are still in draft status and not ready for use.
     * [5]chapter 1 starts with the very basics where we will try to whet
       your appetite. you will be asked to do many short quizes to test
       whether you really understand the material.
     * [6]chapter 2 will introduce you to the task of text processing. you
       will learn how to read files from your computer, how to clean them
       and compute a frequency distribution over words.
     * [7]chapter 3 deals with preprocessing text. you will learn some of
       the elementary tools to analyse your data.
     * [8]chapter 4 is a more theoretical chapter that explains to you
       some of the basic programming principles, common practices and
       where to find documentation.
     * in [9]chapter 5 things are becoming increasingly difficult. first,
       you will write a program to compute the readability of texts. next,
       you will implement the basic algorithm that is behind authorship
       attribution!
     * in [10]chapter 6 we will introduce you to the concept of object
       oriented programming. you will implement a network structure with
       which you can analyze relations between people on twitter.
     * from chapter 7 onwards, we will start working on more real
       applications. in [11]chapter 7 we will work on systems for
       archiving and searching through collections of text. we introduce
       you to the field of information retrieval and build a simple
       information retrieval system. this chapter furthers your knowledge
       about object oriented programming.
     * in [12]chapter 8 we create a complete web application to search
       through your own library of pdf files. this will be our first real
       application ready for use by end-users. the chapter introduces you
       to many modules available in the standard library as well as
       third-party modules.
     * [13]chapter 9 will introduce you to some of the more advanced
       techniques used in automatic classification. we will implement a
       naive bayes classifier, show you a number of id74 and
       strategies and briefly address the question of parameter
       optimization.
     * [14]chapter 10 focusses on hierarchical id91, one of the
       important methods for unsupervized learning. we explain the basic
       methods for doining hierarchical id91 and create a simple
       implementation in python.

   this document describes the installation procedure for all the software
   needed for the python class. if your stuck anywhere in the installation
   procedure, please do not hesitate to contact [15]folgert karsdorp.

text editor

   we advice you to install a good text editor, sublime text 2/3 for
   example. however, you are absolutely free to use your own favorite
   editor. for sublime text 2/3 go to http://www.sublimetext.com/ download
   the version for your operating system and install.

   in the course we will be using software that works best with google
   chrome. firefox 6 (or above) and safari will also work. internet
   explorer is not supported.

   we will be using python 3.4 for our course. lower versions are more or
   less supported, but not recommended.

installation

all platforms

   we strongly advice you to install the anaconda python distribution.
   this distribution contains all the necessary modules and packages
   needed for this course. it is available for all platforms and provides
   a simple installation procedure/ you can download it from:
   http://continuum.io/downloads. more detailed installation instructions
   can be found here: [16]http://docs.continuum.io/anaconda/install.html

   anaconda's default installation is python 2.7. however, we will use
   python 3 in this course. to install all necessary packages for python
   3.4, type

conda create -n py34 python=3.4 anaconda

   followed by

source activate py34

   at the command line. if you work on a windows machine, use the
   following command instead:

activate py34

   (if this doesn't work, have a look here:
   http://continuum.io/blog/anaconda-python-3). after that you can start
   the course with double clicking the file start-windows.bat (if you are
   working on windows) or start-unix.sh if you work with linux or
   start-osx.command if you work on mac os x.

windows

   download and install the anaconda python distribution (see above).

   double click the file start-windows.bat.

   if everything goes right, this should open your browser (preferably
   google chrome or firefox) on a page http://127.0.0.1:8888/ (or
   something similar) which says ip\[y\]: notebook. if for some reason,
   the notebook is opened by internet explorer, copy the url and paste
   that in either google chrome or firefox.

os x

   only take these steps if you know what you are doing. otherwise, simply
   download and install the anaconda python distribution (see above).
   after that, double click the file start-osx.command.

   first you will need to install xcode from the app store. after you have
   successfully installed xcode, open xcode and go to xcode -> preferences
   -> downloads. now click on the install button next to commandline
   tools.

   open spotlight and type in terminal to open the terminal application.
   (you can also go to your applications folder and then to utilities
   where you'll find the terminal.app)

   cd to the folder where you downloaded or saved the file
   mac-installer.sh (probably in ~/downloads) by using

cd /folder/of/mac-installer.sh

   run the installer with the following command. the installer will
   download some packages and will request for your password to install
   them.

. mac-installer.sh

   to check your installation, relaunch the terminal.app. then type in

ipython3 notebook --matplotlib=inline

   if everything went well this should open your browser (best with google
   chrome or firefox) on the page http://127.0.0.1:8888/ which says ip[y]:
   notebook.

linux (ubuntu/debian)

   only take these steps if you know what you are doing. otherwise, simply
   download and install the anaconda python distribution

   first open a terminal, then type

sudo apt-get install python3 ipython3 ipython3-notebook numpy scipy matplotlib f
lask whoosh seaborn

   if you run another linux distribution, similar packages should be
   available. finally execute the file start-unix.sh.

static notebooks

   this is a fall-back method.

   [17]chapter 1 - getting started

   [18]chapter 2 - first steps into text processing

   [19]chapter 3 - text analysis

   [20]chapter 4 - programming principles

   [21]chapter 5 - building nlp applications

   [22]chapter 6 - objected oriented programming

   [23]chapter 7 - archiving and searching

   [24]chapter 8 - practical: searching your own pdf library

   [25]chapter 9 - learning from examples

   [26]chapter 10 - learning without supervision

   this project is maintained by folgert karsdorp with contributions by
   maarten van gompel and matt munson

   hosted on github pages     css by [27]bstn.nl

   [28]creative commons license
   python programming for the humanities by
   [29]http://fbkarsdorp.github.io/python-course is licensed under a
   [30]creative commons attribution-sharealike 4.0 international license.
   based on a work at [31]https://github.com/fbkarsdorp/python-course.

references

   1. https://github.com/fbkarsdorp/python-course
   2. https://github.com/fbkarsdorp/python-course/zipball/master
   3. http://www.folgertkarsdorp.nl/
   4. http://www.python.org/
   5. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 1 - getting started.ipynb
   6. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 2 - first steps.ipynb
   7. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 3 - text analysis.ipynb
   8. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 4 - programming principles.ipynb
   9. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter%205%20-%20building%20nlp%20applications.ipynb
  10. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 6 - object oriented programming.ipynb
  11. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 7 - archiving and searching.ipynb
  12. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 8 - pdf search app.ipynb
  13. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 9 - learning from examples.ipynb
  14. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 10 - learning without supervision.ipynb
  15. https://github.com/fbkarsdorp
  16. http://docs.continuum.io/anaconda/install.html
  17. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 1 - getting started.ipynb
  18. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 2 - first steps.ipynb
  19. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 3 - text analysis.ipynb
  20. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 4 - programming principles.ipynb
  21. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter%205%20-%20building%20nlp%20applications.ipynb
  22. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 6 - object oriented programming.ipynb
  23. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 7 - archiving and searching.ipynb
  24. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 8 - pdf search app.ipynb
  25. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 9 - learning from examples.ipynb
  26. http://nbviewer.ipython.org/urls/raw.github.com/fbkarsdorp/python-course/master/chapter 10 - learning without supervision.ipynb
  27. http://bstn.nl/
  28. http://creativecommons.org/licenses/by-sa/4.0/
  29. http://fbkarsdorp.github.io/python-course
  30. http://creativecommons.org/licenses/by-sa/4.0/
  31. https://github.com/fbkarsdorp/python-course
