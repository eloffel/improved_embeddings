   #[1]kdnuggets: analytics, big data, data mining and data science feed
   [2]kdnuggets    feed [3]kdnuggets    comments feed [4]kdnuggets    an
   overview of python deep learning frameworks comments feed [5]learn
   about modeling methods at paw chicago, jun 19-22 [6]data science vs
   fake news contest

kdnuggets

     [7]subscribe to kdnuggets news  | [8]twitter    [9]facebook
   [10]linkedin  |  [11]contact
   ____________________ search
   [menu-30.png]
   [search-icon.png]
     * [12]software
     * [13]news/blog
     * [14]top stories
     * [15]opinions
     * [16]tutorials
     * [17]jobs
     * [18]companies
     * [19]courses
     * [20]datasets
     * [21]education
     * [22]certificates
     * [23]meetings
     * [24]webinars


   [25]kdnuggets home    [26]news    [27]2017    [28]feb    [29]tutorials,
   overviews    an overview of python deep learning frameworks
   ( [30]17:n08 )

silver blog, 2017 an overview of python deep learning frameworks

   [31][prv.gif] previous post
   [32]next post [nxt.gif]

     http likes 1459
   tags: [33]deep learning, [34]keras, [35]neural networks, [36]python,
   [37]tensorflow, [38]theano, [39]torch

   read this concise overview of leading python deep learning frameworks,
   including theano, lasagne, blocks, tensorflow, keras, mxnet, and
   pytorch.
     __________________________________________________________________

   by madison may, [40]indico.

   i recently stumbled across an old data science stack exchange answer of
   mine on the topic of the [41]   best python library for neural networks   ,
   and it struck me how much the python deep learning ecosystem has
   evolved over the course of the past 2.5 years. the library i
   recommended in july 2014, pylearn2, is no longer actively developed or
   maintained, but a whole host of deep learning libraries have sprung up
   to take its place. each has its own strengths and weaknesses. we   ve
   used most of the technologies on this list in production or development
   at indico, but for the few that we haven   t, i   ll pull from the
   experiences of others to help give a clear, comprehensive picture of
   the python deep learning ecosystem of 2017.

                                   python

   in particular, we   ll be looking at:
     * theano
     * lasagne
     * blocks
     * tensorflow
     * keras
     * mxnet
     * pytorch

[42]theano


   description:

   theano is a python library that allows you to define, optimize, and
   evaluate mathematical expressions involving multi-dimensional arrays
   efficiently. it works with gpus and performs efficient symbolic
   differentiation.

   documentation:

   [43]http://deeplearning.net/software/theano/

   summary:

   theano is the numerical computing workhorse that powers many of the
   other deep learning frameworks on our list. it was built by fr  d  ric
   bastien and the excellent research team behind the university of
   montreal   s lab, mila. its api is quite low level, and in order to write
   effective theano you need to be quite familiar with the algorithms that
   are hidden away behind the scenes in other frameworks. theano is a
   go-to library if you have substantial academic machine learning
   expertise, are looking for very fine grained control of your models, or
   want to implement a novel or unusual model. in general, theano trades
   ease of use for flexibility.

   pros:
     * flexible
     * performant if used properly

   cons:
     * substantial learning curve
     * lower level api
     * compiling complex symbolic graphs can be slow

   resources:
     * [44]installation guide
     * [45]official theano tutorial
     * [46]theano slideshow and practice exercises
     * [47]from id75 to id98s with theano
     * [48]introduction to deep learning with python & theano (mnist video
       tutorial)

[49]lasagne


   description:

   lightweight library for building and training neural networks in
   theano.

   documentation:

   [50]http://lasagne.readthedocs.org/

   summary:

   since theano aims first and foremost to be a library for symbolic
   mathematics, lasagne offers abstractions on top of theano that make it
   more suitable for deep learning. it   s written and maintained primarily
   by sander dieleman, a current deepmind research scientist. instead of
   specifying network models in terms of function relationships between
   symbolic variables, lasagne allows users to think at the layer level,
   offering building blocks like    conv2dlayer    and    dropoutlayer    for
   users to work with. lasagne requires little sacrifice in terms of
   flexibility while providing a wealth of common components to help with
   layer definition, layer initialization, model id173, model
   monitoring, and model training.

   pros:
     * still very flexible
     * higher layer of abstraction than theano
     * docs and code contain an assortment of pasta puns

   cons:
     * smaller community

   resources:
     * [51]official github page
     * [52]official installation guide
     * [53]official lasagne tutorial
     * [54]example lasagne code

[55]blocks


   description:

   a theano framework for building and training neural networks.

   documentation:

   [56]http://blocks.readthedocs.io/en/latest/

   summary:

   similar to lasagne, blocks is a shot at adding a layer of abstraction
   on top of theano to facilitate cleaner, simpler, more standardized
   definitions of deep learning models than writing raw theano. it   s
   written by the university of montreal   s lab, mila     some of the same
   folks who contributed to the building of theano and its first high
   level interface to neural network definitions, the deceased pylearn2.
   it   s a bit more flexible than lasagne at the cost of having a slightly
   more difficult learning curve to use effectively. among other things,
   blocks has excellent support for recurrent neural network
   architectures, so it   s worth a look if you   re interested in exploring
   that genre of model. alongside tensorflow, blocks is the library of
   choice for many of the apis we   ve deployed to production at indico.

   pros:
     * still very flexible
     * higher layer of abstraction than theano
     * very well tested

   cons:
     * substantial learning curve
     * smaller community

   resources:
     * [57]official installation guide
     * [58]arxiv paper on the design of the blocks library
     * [59]a reddit discussion on the differences between blocks and
       lasagne
     * [60]block   s sister library for data pipelines, fuel

                                 tensorflow

[61]tensorflow


   description:

   an open source software library for numerical computation using data
   flow graphs.

   documentation:

   [62]https://www.tensorflow.org/api_docs/python/

   summary:

   tensorflow is a blend between lower level, symbolic computation
   libraries like theano, and higher level, network specification
   libraries like blocks and lasagne. although it   s the newest member of
   the python deep learning library collection, it likely has garnered the
   largest active community because it   s backed by the google brain team.
   it offers support for running machine learning models across multiple
   gpus, provides utilities for efficient data pipelining, and has
   built-in modules for the inspection, visualization, and serialization
   of models. more recently, the tensorflow team decided to incorporate
   support for keras, the next deep learning library on our list. the
   community seems to agree that although [63]tensorflow has its
   shortcomings, the sheer size of its community and the massive amount of
   momentum behind the project mean that learning tensorflow is a safe
   bet. consequently, tensorflow is our deep learning library of choice
   today at indico.

   pros:
     * backed by software giant google
     * very large community
     * low level and high level interfaces to network training
     * faster model compilation than theano-based options
     * clean multi-gpu support

   cons:
     * initially slower at many benchmarks than theano-based options,
       although tensorflow is catching up.
     * id56 support is still outclassed by theano

   resources:
     * [64]official tensorflow website
     * [65]download and setup guide
     * [66]indico   s take on tensorflow
     * [67]a collection of tensorflow tutorials
     * [68]a udacity machine learning course taught using tensorflow
     * [69]tensorflow mnist tutorial
     * [70]tensorflow data input

[71]keras


   description:

   deep learning library for python. convnets, recurrent neural networks,
   and more. runs on theano or tensorflow.

   documentation:

   [72]https://keras.io/

   summary:

   keras is probably the highest level, most user friendly library of the
   bunch. it   s written and maintained by francis chollet, another member
   of the google brain team. it allows users to choose whether the models
   they build are executed on theano   s or tensorflow   s symbolic graph.
   keras    user interface is torch-inspired, so if you have prior
   experience with machine learning in lua, keras is definitely worth a
   look. thanks in part to excellent documentation and its relative ease
   of use, the keras community is quite large and very active. recently,
   the tensorflow team announced plans to ship with keras support built
   in, so soon keras will be a subset of the tensorflow project.

   pros:
     * your choice of a theano or tensorflow backend
     * intuitive, high level interface
     * easier learning curve

   cons:
     * less flexible, more prescriptive than other options

   resources:
     * [73]official installation guide
     * [74]keras users google group
     * [75]repository of keras examples
     * [76]instructions for using keras with docker
     * [77]repository of keras tutorials by application area

[78]mxnet


   description:

   mxnet is a deep learning framework designed for both efficiency and
   flexibility.

   documentation:

   [79]http://mxnet.io/api/python/index.html#python-api-reference

   summary:

   mxnet is amazon   s library of choice for deep learning, and is perhaps
   the most performant library of the bunch. it has a data flow graph
   similar to theano and tensorflow, offers good support for multi-gpu
   configurations, has higher level model building blocks similar to that
   of lasagne and blocks, and can run on just about any hardware you can
   imagine (including mobile phones). python support is just the tip of
   the iceberg     mxnet also offers interfaces to r, julia, c++, scala,
   matlab, and javascript. choose mxnet if you   re looking for performance
   that   s second to none, but you must be willing to deal with a few of
   mxnet   s quirks to get you there.

   pros:
     * blazing fast benchmarks
     * extremely flexible

   cons:
     * smallest community
     * steeper learning curve than theano

   resources:
     * [80]official getting started guide
     * [81]indico   s intro to mxnet
     * [82]repository of mxnet examples
     * [83]amazon   s cto   s take on mxnet
     * [84]mxnet arxiv paper

[85]pytorch


   description:

   tensors and dynamic neural networks in python with strong gpu
   acceleration.

   documentation:

   [86]http://pytorch.org/docs/

   summary:

   released just over a week ago, pytorch is the new kid on the block in
   our list of deep learning frameworks for python. it   s a loose port of
   lua   s torch library to python, and is notable because it   s backed by
   the facebook artificial intelligence research team (fair), and because
   it   s [87]designed to handle dynamic computation graphs     a feature
   absent from the likes of theano, tensorflow, and derivatives. the jury
   is still out on what role pytorch will play in the python deep learning
   ecosystem, but all signs point to pytorch being a very respectable
   alternative to the other frameworks on our list.

   pros:
     * organizational backing from facebook
     * clean support for dynamic graphs
     * blend of high level and low level apis

   cons:
     * much less mature than alternatives (in their own words        we are in
       an early-release beta. expect some adventures.   )
     * limited references / resources outside of the official
       documentation

   resources:
     * [88]official pytorch homepage
     * [89]pytorch twitter feed
     * [90]repository of pytorch examples
     * [91]repository of pytorch tutorials

   bio: [92]madison may is a developer, designer, and engineer, and is the
   cto of [93]indico data solutions.

   [94]original. reposted with permission.

   related:
     * [95]deep learning, artificial intuition and the quest for agi
     * [96]why deep learning is radically different from machine learning
     * [97]is deep learning the silver bullet?
     __________________________________________________________________

   [98][prv.gif] previous post
   [99]next post [nxt.gif]
     __________________________________________________________________

top stories past 30 days

                                               most popular
    1. [100]another 10 free must-read books for machine learning and data
       science
    2. [101]9 must-have skills you need to become a data scientist,
       updated
    3. [102]who is a typical data scientist in 2019?
    4. [103]the pareto principle for data scientists
    5. [104]what no one will tell you about data science job applications
    6. [105]19 inspiring women in ai, big data, data science, machine
       learning
    7. [106]my favorite mind-blowing machine learning/ai breakthroughs

                                             most shared
    1. [107]id158s optimization using genetic
       algorithm with python
    2. [108]who is a typical data scientist in 2019?
    3. [109]8 reasons why you should get a microsoft azure certification
    4. [110]the pareto principle for data scientists
    5. [111]r vs python for data visualization
    6. [112]how to work in data science, ai, big data
    7. [113]the deep learning toolset     an overview

[114]latest news

     * [115]download your datax guide to ai in marketing
     * [116]kdnuggets offer: save 20% on strata in london
     * [117]training a champion: building deep neural nets for big ...
     * [118]building a recommender system
     * [119]predict age and gender using convolutional neural netwo...
     * [120]top tweets, mar 27     apr 02: here is a great ex...

   [121]kdnuggets home    [122]news    [123]2017    [124]feb   
   [125]tutorials, overviews    an overview of python deep learning
   frameworks ( [126]17:n08 )
      2019 kdnuggets. [127]about kdnuggets.  [128]privacy policy.
   [129]terms of service

   [130]subscribe to kdnuggets news
   [131][tw_c48.png] [132]facebook [133]linkedin
   x

   [envelope.png] [134]get kdnuggets, a leading newsletter on ai, data
   science, and machine learning
   email: ______________________________
   sign up
   leave this field empty if you're human: ____________________

references

   visible links
   1. https://www.kdnuggets.com/feed/
   2. https://www.kdnuggets.com/feed
   3. https://www.kdnuggets.com/comments/feed
   4. https://www.kdnuggets.com/2017/02/python-deep-learning-frameworks-overview.html/feed
   5. https://www.kdnuggets.com/2017/02/paw-chicago-learn-modeling-methods.html
   6. https://www.kdnuggets.com/2017/02/data-science-vs-fake-news-contest.html
   7. https://www.kdnuggets.com/news/subscribe.html
   8. https://twitter.com/kdnuggets
   9. https://www.facebook.com/kdnuggets
  10. https://www.linkedin.com/groups/54257/
  11. https://www.kdnuggets.com/contact.html
  12. https://www.kdnuggets.com/software/index.html
  13. https://www.kdnuggets.com/news/index.html
  14. https://www.kdnuggets.com/news/top-stories.html
  15. https://www.kdnuggets.com/opinions/index.html
  16. https://www.kdnuggets.com/tutorials/index.html
  17. https://www.kdnuggets.com/jobs/index.html
  18. https://www.kdnuggets.com/companies/index.html
  19. https://www.kdnuggets.com/courses/index.html
  20. https://www.kdnuggets.com/datasets/index.html
  21. https://www.kdnuggets.com/education/index.html
  22. https://www.kdnuggets.com/education/analytics-data-mining-certificates.html
  23. https://www.kdnuggets.com/meetings/index.html
  24. https://www.kdnuggets.com/webcasts/index.html
  25. https://www.kdnuggets.com/
  26. https://www.kdnuggets.com/news/index.html
  27. https://www.kdnuggets.com/2017/index.html
  28. https://www.kdnuggets.com/2017/02/index.html
  29. https://www.kdnuggets.com/2017/02/tutorials.html
  30. https://www.kdnuggets.com/2017/n08.html
  31. https://www.kdnuggets.com/2017/02/paw-chicago-learn-modeling-methods.html
  32. https://www.kdnuggets.com/2017/02/data-science-vs-fake-news-contest.html
  33. https://www.kdnuggets.com/tag/deep-learning
  34. https://www.kdnuggets.com/tag/keras
  35. https://www.kdnuggets.com/tag/neural-networks
  36. https://www.kdnuggets.com/tag/python
  37. https://www.kdnuggets.com/tag/tensorflow
  38. https://www.kdnuggets.com/tag/theano
  39. https://www.kdnuggets.com/tag/torch
  40. https://indico.io/
  41. http://datascience.stackexchange.com/a/695/684
  42. https://github.com/theano/theano
  43. http://deeplearning.net/software/theano/
  44. http://deeplearning.net/software/theano/install.html
  45. http://deeplearning.net/software/theano/tutorial/
  46. https://github.com/goodfeli/theano_exercises
  47. https://github.com/newmu/theano-tutorials
  48. https://indico.io/blog/introduction-to-deep-learning-with-python-and-theano-2/
  49. https://github.com/lasagne/lasagne
  50. http://lasagne.readthedocs.org/
  51. https://github.com/lasagne/lasagne
  52. http://lasagne.readthedocs.io/en/latest/user/installation.html
  53. http://lasagne.readthedocs.io/en/latest/user/tutorial.html
  54. https://github.com/lasagne/lasagne/tree/master/examples
  55. https://github.com/mila-udem/blocks
  56. http://blocks.readthedocs.io/en/latest/
  57. http://blocks.readthedocs.io/en/latest/setup.html
  58. https://arxiv.org/pdf/1506.00619.pdf
  59. https://www.reddit.com/r/machinelearning/comments/4kpztm/lasagne_vs_blocks_for_deep_learning/
  60. https://github.com/mila-udem/fuel
  61. https://github.com/tensorflow/tensorflow
  62. https://www.tensorflow.org/api_docs/python/
  63. https://indico.io/blog/the-good-bad-ugly-of-tensorflow/
  64. https://www.tensorflow.org/
  65. https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md
  66. https://indico.io/blog/the-good-bad-ugly-of-tensorflow/
  67. https://github.com/nlintz/tensorflow-tutorials
  68. https://www.udacity.com/course/deep-learning--ud730
  69. https://www.tensorflow.org/tutorials/mnist/beginners/
  70. https://indico.io/blog/tensorflow-data-inputs-part1-placeholders-protobufs-queues/
  71. https://github.com/fchollet/keras
  72. https://keras.io/
  73. https://keras.io/#installation
  74. https://groups.google.com/forum/#!forum/keras-users
  75. https://github.com/fchollet/keras/tree/master/examples
  76. https://github.com/fchollet/keras/tree/master/docker
  77. https://github.com/fchollet/keras-resources
  78. https://github.com/dmlc/mxnet
  79. http://mxnet.io/api/python/index.html#python-api-reference
  80. http://mxnet.io/get_started/
  81. https://indico.io/blog/getting-started-with-mxnet/
  82. https://github.com/dmlc/mxnet/tree/master/example
  83. http://www.allthingsdistributed.com/2016/11/mxnet-default-framework-deep-learning-aws.html
  84. https://arxiv.org/abs/1512.01274
  85. https://github.com/pytorch/pytorch
  86. http://pytorch.org/docs/
  87. http://pytorch.org/about/#dynamic-neural-networks-tape-based-autograd
  88. http://pytorch.org/
  89. https://twitter.com/pytorch
  90. https://github.com/pytorch/examples
  91. https://github.com/pytorch/tutorials
  92. https://www.linkedin.com/in/madison-may-49a1924a
  93. https://indico.io/
  94. https://indico.io/blog/python-deep-learning-frameworks-reviewed/
  95. https://www.kdnuggets.com/2017/02/deep-learning-artificial-intelligence-quest-agi.html
  96. https://www.kdnuggets.com/2016/12/deep-learning-radically-different-machine-learning.html
  97. https://www.kdnuggets.com/2017/02/deep-learning-silver-bullet.html
  98. https://www.kdnuggets.com/2017/02/paw-chicago-learn-modeling-methods.html
  99. https://www.kdnuggets.com/2017/02/data-science-vs-fake-news-contest.html
 100. https://www.kdnuggets.com/2019/03/another-10-free-must-read-books-for-machine-learning-and-data-science.html
 101. https://www.kdnuggets.com/2018/05/simplilearn-9-must-have-skills-data-scientist.html
 102. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
 103. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
 104. https://www.kdnuggets.com/2019/03/data-science-job-applications.html
 105. https://www.kdnuggets.com/2019/03/women-ai-big-data-science-machine-learning.html
 106. https://www.kdnuggets.com/2019/03/favorite-ml-ai-breakthroughs.html
 107. https://www.kdnuggets.com/2019/03/artificial-neural-networks-optimization-genetic-algorithm-python.html
 108. https://www.kdnuggets.com/2019/03/typical-data-scientist-2019.html
 109. https://www.kdnuggets.com/2019/03/simplilearn-8-reasons-microsoft-azure-certification.html
 110. https://www.kdnuggets.com/2019/03/pareto-principle-data-scientists.html
 111. https://www.kdnuggets.com/2019/03/r-vs-python-data-visualization.html
 112. https://www.kdnuggets.com/2019/03/work-data-science-ai-big-data.html
 113. https://www.kdnuggets.com/2019/03/deep-learning-toolset-overview.html
 114. https://www.kdnuggets.com/news/index.html
 115. https://www.kdnuggets.com/2019/04/datax-download-guide-ai-marketing.html
 116. https://www.kdnuggets.com/2019/04/strata-kdnuggets-offer-save-london.html
 117. https://www.kdnuggets.com/2019/04/sisense-deep-neural-nets-big-data-analytics.html
 118. https://www.kdnuggets.com/2019/04/building-recommender-system.html
 119. https://www.kdnuggets.com/2019/04/predict-age-gender-using-convolutional-neural-network-opencv.html
 120. https://www.kdnuggets.com/2019/04/top-tweets-mar27-apr02.html
 121. https://www.kdnuggets.com/
 122. https://www.kdnuggets.com/news/index.html
 123. https://www.kdnuggets.com/2017/index.html
 124. https://www.kdnuggets.com/2017/02/index.html
 125. https://www.kdnuggets.com/2017/02/tutorials.html
 126. https://www.kdnuggets.com/2017/n08.html
 127. https://www.kdnuggets.com/about/index.html
 128. https://www.kdnuggets.com/news/privacy-policy.html
 129. https://www.kdnuggets.com/terms-of-service.html
 130. https://www.kdnuggets.com/news/subscribe.html
 131. https://twitter.com/kdnuggets
 132. https://facebook.com/kdnuggets
 133. https://www.linkedin.com/groups/54257
 134. https://www.kdnuggets.com/news/subscribe.html

   hidden links:
 136. https://www.kdnuggets.com/
 137. https://www.kdnuggets.com/
