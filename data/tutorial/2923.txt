   #[1]github [2]recent commits to socialsent:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]7
     * [35]star [36]117
     * [37]fork [38]48

[39]williaid113if/[40]socialsent

   [41]code [42]issues 10 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   code and data for inducing domain-specific sentiment lexicons.
     * [47]36 commits
     * [48]2 branches
     * [49]0 releases
     * [50]fetching contributors
     * [51]apache-2.0

    1. [52]python 99.4%
    2. [53]shell 0.6%

   (button) python shell
   branch: master (button) new pull request
   [54]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/w
   [55]download zip

downloading...

   want to be notified of new releases in williaid113if/socialsent?
   [56]sign in [57]sign up

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [60]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [61]download the github extension for visual studio
   and try again.

   (button) go back
   [62]@williaid113if
   [63]williaid113if [64]update readme.md
   latest commit [65]c9fed63 aug 18, 2017
   [66]permalink
   type         name              latest commit message       commit time
        failed to load latest commit information.
        [67]socialsent      [68]update evaluate_methods.py   jun 30, 2017
        [69].gitignore      [70]added gitignore to the repo. mar 7, 2017
        [71]license.txt
        [72]readme.md
        [73]environment.yml
        [74]example.py
        [75]example.sh
        [76]setup.py

readme.md

socialsent: domain-specific sentiment lexicons for computational social
science

authors: william l. hamilton and kevin clark

[77]project website

overview

   socialsent is a package for inducing and analyzing domain-specific
   sentiment lexicons. a number of state-of-the-art algorithms are
   included, including sentprop and densifier
   ([78]http://www.cis.lmu.de/~sascha/ultradense/). a detailed description
   of the algorithms in the socialsent package, with references, is
   provided in the paper: [79]inducing domain-specific sentiment lexicons
   from unlabeled corpora.

   the [80]project website includes pre-constructed sentiment lexicons for
   150 years of historical english and 250 online communities from the
   social media forum reddit.

   if you make use of this work in your research please cite the following
   paper:

   william l. hamilton, kevin clark, jure leskovec, and dan jurafsky.
   inducing domain-specific sentiment lexicons from unlabeled corpora.
   proceedings of emnlp. 2016. (to appear; arxiv:1606.02820).

install

   pip install socialsent will work but has some downsides right now. in
   particular, if you use the pip install method, you will need to know
   where the installation directory is in order to modify the paths in the
   constants.py folder. you also won't have access to the examples that
   are discussed below if you install via pip.

   as a preferred alternative, download the source from the github repo
   and run python setup.py install

   note that you should re-run this command every time after you update
   the paths in constants.py folder.

   if you run into issues related to keras dependencies: you can use the
   provided environment.yml file to set up a conda environment that should
   solve these issues. if you still run into issues after creating the
   conda environment, you might need to change the keras backend to theano
   (instead of tensorflow). many thanks to [81]@sashank06 for this fix.

using the code

   to use sentprop you will need to either build some word vector
   embeddings or download some that are pre-trained. once this is done,
   you would specify the path to these embeddings in constants.py. the
   file constants.py also contains some links to pre-trained embeddings
   that were used in [82]the paper mentioned above. running example.sh
   will download some pre-trained embeddings and run sentprop on them
   (using the code in example.py). you can build embeddings yourself with
   the code in the representations directory, which is based upon code in
   [83]https://github.com/williaid113if/historical-embeddings this code also
   illustrates how to use the socialsent methods.

   the file polarity_induction_methods.py contains implementations for a
   suite of sentiment induction algorithms, along with some
   comments/documentation on how to use them. the file evaluate_methods.py
   also includes the evaluation script used in our published work.

   nb: right now the code uses dense numpy matrices in a (relatively)
   naive way and thus has memory requirements proportional to the square
   of the vocabulary size; with a reasonable amount of ram, this works for
   vocabs of size 20000 words or less (which is reasonable for specific
   domain), but there are definitely optimizations that could be done,
   exploiting sparsity etc. i hope to get to these optimizations soon, but
   feel free to submit a pull request :).

   nb: the random walk based implementation of the sentprop algorithm is
   quite sensitive to the embedding method used and pre-processing. we
   found it worked well on very small corpora with our "default" svd-based
   embeddings on a restricted vocabulary (<50000 words), i.e. using
   context distribution smoothing (with a smoothing value of 0.75) and
   throwing away the singular values, as described in the paper. however,
   its performance varies substantially with embedding pre-processing. on
   large vocabularies/datasets and using more general
   embeddings/pre-processing (e.g., id97), the densifier method
   usually achieves superior performance (as described in the paper,
   tables 2a-b), with less sensitivity to pre-processing.

dependencies

   the code is not currently compatible with the newest keras distribution
   (1.0); only the "denisfy"/densifier method requires this package,
   however. so you can either (a) set up a conda environment using the
   provided environment.yml file, (b) install an older keras (0.3)
   manually, or (c) remove all calls to the "densify" method. i aim to
   update this dependency in the near future

   an up-to-date python 2.7 distribution, with the standard packages
   provided by the anaconda distribution is required. however, the code
   was only tested with some versions of these packages.

   in particular, the code was tested with:
     * theano (0.8.0)
     * keras (0.3.3)
     * numpy (1.11.0)
     * scipy (0.15.1)
     * sklearn (0.18.dev0 or 0.17.1)

     *    2019 github, inc.
     * [84]terms
     * [85]privacy
     * [86]security
     * [87]status
     * [88]help

     * [89]contact github
     * [90]pricing
     * [91]api
     * [92]training
     * [93]blog
     * [94]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [95]reload to refresh your
   session. you signed out in another tab or window. [96]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/williaid113if/socialsent/commits/master.atom
   3. https://github.com/williaid113if/socialsent#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/williaid113if/socialsent
  32. https://github.com/join
  33. https://github.com/login?return_to=/williaid113if/socialsent
  34. https://github.com/williaid113if/socialsent/watchers
  35. https://github.com/login?return_to=/williaid113if/socialsent
  36. https://github.com/williaid113if/socialsent/stargazers
  37. https://github.com/login?return_to=/williaid113if/socialsent
  38. https://github.com/williaid113if/socialsent/network/members
  39. https://github.com/williaid113if
  40. https://github.com/williaid113if/socialsent
  41. https://github.com/williaid113if/socialsent
  42. https://github.com/williaid113if/socialsent/issues
  43. https://github.com/williaid113if/socialsent/pulls
  44. https://github.com/williaid113if/socialsent/projects
  45. https://github.com/williaid113if/socialsent/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/williaid113if/socialsent/commits/master
  48. https://github.com/williaid113if/socialsent/branches
  49. https://github.com/williaid113if/socialsent/releases
  50. https://github.com/williaid113if/socialsent/graphs/contributors
  51. https://github.com/williaid113if/socialsent/blob/master/license.txt
  52. https://github.com/williaid113if/socialsent/search?l=python
  53. https://github.com/williaid113if/socialsent/search?l=shell
  54. https://github.com/williaid113if/socialsent/find/master
  55. https://github.com/williaid113if/socialsent/archive/master.zip
  56. https://github.com/login?return_to=https://github.com/williaid113if/socialsent
  57. https://github.com/join?return_to=/williaid113if/socialsent
  58. https://desktop.github.com/
  59. https://desktop.github.com/
  60. https://developer.apple.com/xcode/
  61. https://visualstudio.github.com/
  62. https://github.com/williaid113if
  63. https://github.com/williaid113if/socialsent/commits?author=williaid113if
  64. https://github.com/williaid113if/socialsent/commit/c9fed63e1db08d9eab34264af893d04064eca50c
  65. https://github.com/williaid113if/socialsent/commit/c9fed63e1db08d9eab34264af893d04064eca50c
  66. https://github.com/williaid113if/socialsent/tree/c9fed63e1db08d9eab34264af893d04064eca50c
  67. https://github.com/williaid113if/socialsent/tree/master/socialsent
  68. https://github.com/williaid113if/socialsent/commit/03c749041769636a3e9f0035634222a5104ca4dc
  69. https://github.com/williaid113if/socialsent/blob/master/.gitignore
  70. https://github.com/williaid113if/socialsent/commit/9299a19daa8d2037f6a853615f3634537d577c12
  71. https://github.com/williaid113if/socialsent/blob/master/license.txt
  72. https://github.com/williaid113if/socialsent/blob/master/readme.md
  73. https://github.com/williaid113if/socialsent/blob/master/environment.yml
  74. https://github.com/williaid113if/socialsent/blob/master/example.py
  75. https://github.com/williaid113if/socialsent/blob/master/example.sh
  76. https://github.com/williaid113if/socialsent/blob/master/setup.py
  77. http://nlp.stanford.edu/projects/socialsent
  78. http://www.cis.lmu.de/~sascha/ultradense/
  79. https://arxiv.org/abs/1606.02820
  80. http://nlp.stanford.edu/projects/socialsent
  81. https://github.com/sashank06
  82. https://arxiv.org/abs/1606.02820
  83. https://github.com/williaid113if/historical-embeddings
  84. https://github.com/site/terms
  85. https://github.com/site/privacy
  86. https://github.com/security
  87. https://githubstatus.com/
  88. https://help.github.com/
  89. https://github.com/contact
  90. https://github.com/pricing
  91. https://developer.github.com/
  92. https://training.github.com/
  93. https://github.blog/
  94. https://github.com/about
  95. https://github.com/williaid113if/socialsent
  96. https://github.com/williaid113if/socialsent

   hidden links:
  98. https://github.com/
  99. https://github.com/williaid113if/socialsent
 100. https://github.com/williaid113if/socialsent
 101. https://github.com/williaid113if/socialsent
 102. https://help.github.com/articles/which-remote-url-should-i-use
 103. https://github.com/williaid113if/socialsent#socialsent-domain-specific-sentiment-lexicons-for-computational-social-science
 104. https://github.com/williaid113if/socialsent#authors-william-l-hamilton-and-kevin-clark
 105. https://github.com/williaid113if/socialsent#project-website
 106. https://github.com/williaid113if/socialsent#overview
 107. https://github.com/williaid113if/socialsent#install
 108. https://github.com/williaid113if/socialsent#using-the-code
 109. https://github.com/williaid113if/socialsent#dependencies
 110. https://github.com/
