   #[1]github [2]recent commits to scholar.py:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]3
     * [35]star [36]4
     * [37]fork [38]671

[39]dnlcrl/[40]scholar.py forked from [41]ckreibich/scholar.py

   [42]code [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a parser for google scholar, written in python
     * [47]53 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors

    1. [51]python 100.0%

   (button) python
   branch: master (button) new pull request
   [52]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/d
   [53]download zip

downloading...

   want to be notified of new releases in dnlcrl/scholar.py?
   [54]sign in [55]sign up

launching github desktop...

   if nothing happens, [56]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [58]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [59]download the github extension for visual studio
   and try again.

   (button) go back
   [60]pull request [61]compare this branch is 11 commits ahead, 5 commits
   behind ckreibich:master.
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [62]permalink
   type      name      latest commit message commit time
        failed to load latest commit information.
        [63]src
        [64].gitignore
        [65]readme.md

readme.md

scholar.py

   scholar.py is a python module that implements a querier and parser for
   google scholar's output. its classes can be used independently, but it
   can also be invoked as a command-line tool.

features

     * extracts publication title, most relevant web link, pdf link,
       number of citations, number of online versions, link to google
       scholar's article cluster for the work, google scholar's cluster of
       all works referencing the publication, and excerpt of content.
     * extracts total number of hits as reported by scholar (new in
       version 2.5)
     * supports the full range of advanced query options provided by
       google scholar, such as title-only search, publication date
       timeframes, and inclusion/exclusion of patents and citations.
     * supports article cluster ids, i.e., information relating to the
       variants of an article already identified by google scholar
     * supports retrieval of citation details in standard external formats
       as provided by google scholar, including bibtex and endnote.
     * command-line tool prints entries in csv format, simple plain text,
       or in the citation export format.
     * cookie support for higher query volume, including ability to
       persist cookies to disk across invocations.

note

   i will always strive to add features that increase the power of this
   api, but i will never add features that intentionally try to work
   around the query limits imposed by google scholar. please don't ask me
   to add such features.

examples

   try scholar.py --help for all available options. note, the command line
   arguments changed considerably in version 2.0! a few examples:

   retrieve one article written by einstein on quantum theory:
$ scholar.py -c 1 --author "albert einstein" --phrase "quantum theory"
         title on the quantum theory of radiation
           url http://icole.mut-es.ac.ir/downloads/sci_sec/w1/einstein%201917.pd
f
          year 1917
     citations 184
      versions 3
    cluster id 17749203648027613321
      pdf link http://icole.mut-es.ac.ir/downloads/sci_sec/w1/einstein%201917.pd
f
citations list http://scholar.google.com/scholar?cites=17749203648027613321&as_s
dt=2005&sciodt=0,5&hl=en
 versions list http://scholar.google.com/scholar?cluster=17749203648027613321&hl
=en&as_sdt=0,5
       excerpt the formal similarity between the chromatic distribution curve fo
r thermal radiation [...]

   note the cluster id in the above. using this id, you can directly
   access the cluster of articles google scholar has already determined to
   be variants of the same paper. so, let's see the versions:
$ scholar.py -c 17749203648027613321
         title on the quantum theory of radiation
           url http://icole.mut-es.ac.ir/downloads/sci_sec/w1/einstein%201917.pd
f
     citations 184
      versions 0
    cluster id 17749203648027613321
      pdf link http://icole.mut-es.ac.ir/downloads/sci_sec/w1/einstein%201917.pd
f
citations list http://scholar.google.com/scholar?cites=17749203648027613321&as_s
dt=2005&sciodt=0,5&hl=en
       excerpt the formal similarity between the chromatic distribution curve fo
r thermal radiation [...]

         title on the quantum theory of radiation
           url http://www.informationphilosopher.com/solutions/scientists/einste
in/1917_radiation.pdf
     citations 0
      versions 0
      pdf link http://www.informationphilosopher.com/solutions/scientists/einste
in/1917_radiation.pdf
       excerpt the formal similarity between the chromatic distribution curve fo
r thermal radiation [...]

         title the quantum theory of radiation
           url http://web.ihep.su/dbserv/compas/src/einstein17/eng.pdf
     citations 0
      versions 0
      pdf link http://web.ihep.su/dbserv/compas/src/einstein17/eng.pdf
       excerpt 1 on the assumption that there are discrete elements of energy, f
rom which quantum [...]

   let's retrieve a bibtex entry for that quantum theory paper. the best
   bibtex often seems to be the one linked from search results, not those
   in the article cluster, so let's do a search again:
$ scholar.py -c 1 --author "albert einstein" --phrase "quantum theory" --citatio
n bt
@article{einstein1917quantum,
  title={on the quantum theory of radiation},
  author={einstein, albert},
  journal={phys. z},
  volume={18},
  pages={121--128},
  year={1917}
}

   report the total number of articles google scholar has for einstein:
$ scholar.py --txt-globals --author "albert einstein" | grep '\[g\]' | grep resu
lts
[g]    results 4190

changelog

     * 2.9 fixed unicode problem in certain queries. thanks to smidm for
       this contribution.
     * 2.8 improved quotation-mark handling for multi-word phrases in
       queries. also, log urls %-decoded in debugging output, for easier
       interpretation.
     * 2.7 ability to extract content excerpts as reported in search
       results. also a fix to -s|--some and -n|--none: these did not yet
       support passing lists of phrases. this now works correctly if you
       provide separate phrases via commas.
     * 2.6 ability to disable inclusion of patents and citations. this has
       the same effect as unchecking the two patents/citations checkboxes
       in the scholar ui, which are checked by default. accordingly, the
       command-line options are --no-patents and --no-citations.
     * 2.5: ability to parse global result attributes. this right now
       means only the total number of results as reported by scholar at
       the top of the results pages (e.g. "about 31 results"). such global
       result attributes end up in the new attrs member of the used
       scholarquery class. to render those attributes, you need to use the
       new --txt-globals flag. rendering global results is currently not
       supported for csv (as they don't fit the one-line-per-article
       pattern). for grepping, you can separate the global results from
       the per-article ones by looking for a line prefix of "[g]": $
       scholar.py --txt-globals -a "einstein" [g] results 11900 title can
       quantum-mechanical description of physical reality be considered
       complete? url
       [66]http://journals.aps.org/pr/abstract/10.1103/physrev.47.777 year
       1935 citations 12804 versions 80 cluster id 8174092782678430881
       citations list
       [67]http://scholar.google.com/scholar?cites=8174092782678430881&as_
       sdt=2005&sciodt=0,5&hl=en versions list
       [68]http://scholar.google.com/scholar?cluster=8174092782678430881&h
       l=en&as_sdt=0,5
     * 2.4: bugfixes: - correctly handle unicode characters when reporting
       results in text format. - correctly parse citation-only (i.e.
       linkless) results in google scholar results.
     * 2.3: additional features: - direct extraction of first pdf version
       of an article - ability to pull up an article cluster's results
       directly. this is based on work from @aliparsai on github --
       thanks! - suppress missing search results (so far shown as "none"
       in the textual output form.
     * 2.2: added a logging option that reports full html contents, for
       debugging, as well as incrementally more detailed logging via -d up
       to -dddd.
     * 2.1: additional features: - improved cookie support: the new
       --cookie-file options allows the reuse of a cookie across
       invocations of the tool; this allows higher query rates than would
       otherwise result when invoking scholar.py repeatedly. - workaround:
       remove the num= url-encoded argument from parsed urls. for some
       reason, google scholar decides to propagate the value from the
       original query into the urls embedded in the results.
     * 2.0: thorough overhaul of design, with substantial improvements: -
       full support for advanced search arguments provided by google
       scholar - support for retrieval of external citation formats, such
       as bibtex or endnote - simple logging framework to track activity
       during execution
     * 1.7: python 3 and beautifulsoup 4 compatibility, as well as
       printing of usage info when no options are given. thanks to pablo
       oliveira ([69]https://github.com/pablooliveira)! also a bunch of
       pylinting and code cleanups.
     * 1.6: cookie support, from matej smid
       ([70]https://github.com/palmstrom).
     * 1.5: a few changes: - tweak suggested by tobias isenberg: use
       unicode during csv formatting. - the option -c|--count now
       understands numbers up to 100 as well. likewise suggested by
       tobias. - by default, text rendering mode is now active. this
       avoids confusion when playing with the script, as it used to report
       nothing when the user didn't select an explicit output mode.
     * 1.4: updates to reflect changes in scholar's page rendering,
       contributed by amanda hay at tufts -- thanks!
     * 1.3: updates to reflect changes in scholar's page rendering.
     * 1.2: minor tweaks, mostly thanks to helpful feedback from dan
       bolser. thanks dan!
     * 1.1: made author field explicit, added --author option.

license

   scholar.py is using the standard [71]bsd license.

     *    2019 github, inc.
     * [72]terms
     * [73]privacy
     * [74]security
     * [75]status
     * [76]help

     * [77]contact github
     * [78]pricing
     * [79]api
     * [80]training
     * [81]blog
     * [82]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [83]reload to refresh your
   session. you signed out in another tab or window. [84]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/dnlcrl/scholar.py/commits/master.atom
   3. https://github.com/dnlcrl/scholar.py#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/dnlcrl/scholar.py
  32. https://github.com/join
  33. https://github.com/login?return_to=/dnlcrl/scholar.py
  34. https://github.com/dnlcrl/scholar.py/watchers
  35. https://github.com/login?return_to=/dnlcrl/scholar.py
  36. https://github.com/dnlcrl/scholar.py/stargazers
  37. https://github.com/login?return_to=/dnlcrl/scholar.py
  38. https://github.com/dnlcrl/scholar.py/network/members
  39. https://github.com/dnlcrl
  40. https://github.com/dnlcrl/scholar.py
  41. https://github.com/ckreibich/scholar.py
  42. https://github.com/dnlcrl/scholar.py
  43. https://github.com/dnlcrl/scholar.py/pulls
  44. https://github.com/dnlcrl/scholar.py/projects
  45. https://github.com/dnlcrl/scholar.py/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/dnlcrl/scholar.py/commits/master
  48. https://github.com/dnlcrl/scholar.py/branches
  49. https://github.com/dnlcrl/scholar.py/releases
  50. https://github.com/dnlcrl/scholar.py/graphs/contributors
  51. https://github.com/dnlcrl/scholar.py/search?l=python
  52. https://github.com/dnlcrl/scholar.py/find/master
  53. https://github.com/dnlcrl/scholar.py/archive/master.zip
  54. https://github.com/login?return_to=https://github.com/dnlcrl/scholar.py
  55. https://github.com/join?return_to=/dnlcrl/scholar.py
  56. https://desktop.github.com/
  57. https://desktop.github.com/
  58. https://developer.apple.com/xcode/
  59. https://visualstudio.github.com/
  60. https://github.com/dnlcrl/scholar.py/pull/new/master
  61. https://github.com/dnlcrl/scholar.py/compare
  62. https://github.com/dnlcrl/scholar.py/tree/6d76a2a126c3c3d982d991752d609cc15872b7cf
  63. https://github.com/dnlcrl/scholar.py/tree/master/src
  64. https://github.com/dnlcrl/scholar.py/blob/master/.gitignore
  65. https://github.com/dnlcrl/scholar.py/blob/master/readme.md
  66. http://journals.aps.org/pr/abstract/10.1103/physrev.47.777
  67. http://scholar.google.com/scholar?cites=8174092782678430881&as_sdt=2005&sciodt=0,5&hl=en
  68. http://scholar.google.com/scholar?cluster=8174092782678430881&hl=en&as_sdt=0,5
  69. https://github.com/pablooliveira
  70. https://github.com/palmstrom
  71. http://opensource.org/licenses/bsd-2-clause
  72. https://github.com/site/terms
  73. https://github.com/site/privacy
  74. https://github.com/security
  75. https://githubstatus.com/
  76. https://help.github.com/
  77. https://github.com/contact
  78. https://github.com/pricing
  79. https://developer.github.com/
  80. https://training.github.com/
  81. https://github.blog/
  82. https://github.com/about
  83. https://github.com/dnlcrl/scholar.py
  84. https://github.com/dnlcrl/scholar.py

   hidden links:
  86. https://github.com/
  87. https://github.com/dnlcrl/scholar.py
  88. https://github.com/dnlcrl/scholar.py
  89. https://github.com/dnlcrl/scholar.py
  90. https://help.github.com/articles/which-remote-url-should-i-use
  91. https://github.com/dnlcrl/scholar.py#scholarpy
  92. https://github.com/dnlcrl/scholar.py#features
  93. https://github.com/dnlcrl/scholar.py#note
  94. https://github.com/dnlcrl/scholar.py#examples
  95. https://github.com/dnlcrl/scholar.py#changelog
  96. https://github.com/dnlcrl/scholar.py#license
  97. https://github.com/
