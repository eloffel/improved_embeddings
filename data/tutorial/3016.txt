   #[1]github [2]recent commits to quepy:develop

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]100
     * [35]star [36]1,078
     * [37]fork [38]268

[39]machinalis/[40]quepy

   [41]code [42]issues 21 [43]pull requests 5 [44]projects 0 [45]wiki
   [46]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [47]sign up
   a python framework to transform natural language questions to queries
   in a database query language.
     * [48]150 commits
     * [49]2 branches
     * [50]1 release
     * [51]fetching contributors
     * [52]view license

    1. [53]python 100.0%

   (button) python
   branch: develop (button) new pull request
   [54]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/m
   [55]download zip

downloading...

   want to be notified of new releases in machinalis/quepy?
   [56]sign in [57]sign up

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [60]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [61]download the github extension for visual studio
   and try again.

   (button) go back
   [62]@tutuca
   [63]tutuca [64]updated build script
   latest commit [65]c0a83fa may 28, 2018
   [66]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [67]docs [68]merge pull request [69]#37 [70]from sigvef/patch-1 dec 20,
   2016
   [71]examples [72]added populatedplace ([73]fixes [74]#3[75]) dec 21,
   2015
   [76]quepy [77]updated to new pos tagger dec 21, 2016
   [78]scripts [79]updated to new pos tagger dec 21, 2016
   [80]tests [81]skipping real hard test sep 10, 2013
   [82].gitignore
   [83].travis.yml
   [84]license
   [85]manifest.in [86]pypi bugfixes dec 4, 2012
   [87]readme.rst
   [88]setup.py

readme.rst

  __ _ _   _  ___ _ __  _   _
 / _` | | | |/ _ \ '_ \| | | |
| (_| | |_| |  __/ |_) | |_| |
 \__, |\__,_|\___| .__/ \__, |
    |_|          |_|    |___/

what's quepy?

   quepy is a python framework to transform natural language questions to
   queries in a database query language. it can be easily customized to
   different kinds of questions in natural language and database queries.
   so, with little coding you can build your own system for natural
   language access to your database.

   currently quepy provides support for [89]sparql and [90]mql query
   languages. we plan to extended it to other database query languages.

an example

   to illustrate what can you do with quepy, we included an example
   application to access [91]dbpedia contents via their sparql endpoint.

   you can try the example online here: [92]online demo

   or, you can try the example yourself by doing:
python examples/dbpedia/main.py "who is tom cruise?"

   and it will output something like this:
select distinct ?x1 where {
    ?x0 rdf:type foaf:person.
    ?x0 rdfs:label "tom cruise"@en.
    ?x0 rdfs:comment ?x1.
}

thomas cruise mapother iv, widely known as tom cruise, is an...

   the transformation from natural language to sparql is done by first
   using a special form of id157:
person_name = group(plus(pos("nnp")), "person_name")
regex = lemma("who") + lemma("be") + person_name + question(pos("."))

   and then using and a convenient way to express semantic relations:
person = isperson() + haskeyword(person_name)
definition = definitionof(person)

   the rest of the transformation is handled automatically by the
   framework to finally produce this sparql:
select distinct ?x1 where {
    ?x0 rdf:type foaf:person.
    ?x0 rdfs:label "tom cruise"@en.
    ?x0 rdfs:comment ?x1.
}

   using a very similar procedure you could generate and mql query for the
   same question obtaining:
[{
    "/common/topic/description": [{}],
    "/type/object/name": "tom cruise",
    "/type/object/type": "/people/person"
}]

installation

   you need to have installed [93]docopt and [94]numpy. other than that,
   you can just type:
pip install quepy

   you can get more details on the installation here:

   [95]http://quepy.readthedocs.org/en/latest/installation.html

learn more

   you can find a tutorial here:

   [96]http://quepy.readthedocs.org/en/latest/tutorial.html

   and the full documentation here:

   [97]http://quepy.readthedocs.org/

   join our [98]mailing list

contribute!

   want to help develop quepy? welcome aboard! find us in
   [99]http://groups.google.com/group/quepy

     *    2019 github, inc.
     * [100]terms
     * [101]privacy
     * [102]security
     * [103]status
     * [104]help

     * [105]contact github
     * [106]pricing
     * [107]api
     * [108]training
     * [109]blog
     * [110]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [111]reload to refresh your
   session. you signed out in another tab or window. [112]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/machinalis/quepy/commits/develop.atom
   3. https://github.com/machinalis/quepy#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/machinalis/quepy
  32. https://github.com/join
  33. https://github.com/login?return_to=/machinalis/quepy
  34. https://github.com/machinalis/quepy/watchers
  35. https://github.com/login?return_to=/machinalis/quepy
  36. https://github.com/machinalis/quepy/stargazers
  37. https://github.com/login?return_to=/machinalis/quepy
  38. https://github.com/machinalis/quepy/network/members
  39. https://github.com/machinalis
  40. https://github.com/machinalis/quepy
  41. https://github.com/machinalis/quepy
  42. https://github.com/machinalis/quepy/issues
  43. https://github.com/machinalis/quepy/pulls
  44. https://github.com/machinalis/quepy/projects
  45. https://github.com/machinalis/quepy/wiki
  46. https://github.com/machinalis/quepy/pulse
  47. https://github.com/join?source=prompt-code
  48. https://github.com/machinalis/quepy/commits/develop
  49. https://github.com/machinalis/quepy/branches
  50. https://github.com/machinalis/quepy/releases
  51. https://github.com/machinalis/quepy/graphs/contributors
  52. https://github.com/machinalis/quepy/blob/develop/license
  53. https://github.com/machinalis/quepy/search?l=python
  54. https://github.com/machinalis/quepy/find/develop
  55. https://github.com/machinalis/quepy/archive/develop.zip
  56. https://github.com/login?return_to=https://github.com/machinalis/quepy
  57. https://github.com/join?return_to=/machinalis/quepy
  58. https://desktop.github.com/
  59. https://desktop.github.com/
  60. https://developer.apple.com/xcode/
  61. https://visualstudio.github.com/
  62. https://github.com/tutuca
  63. https://github.com/machinalis/quepy/commits?author=tutuca
  64. https://github.com/machinalis/quepy/commit/c0a83fab9b11056f6951ee65046a72ac5d025136
  65. https://github.com/machinalis/quepy/commit/c0a83fab9b11056f6951ee65046a72ac5d025136
  66. https://github.com/machinalis/quepy/tree/c0a83fab9b11056f6951ee65046a72ac5d025136
  67. https://github.com/machinalis/quepy/tree/develop/docs
  68. https://github.com/machinalis/quepy/commit/98b1e22f84720c65163003d1e959c6f5892699ff
  69. https://github.com/machinalis/quepy/pull/37
  70. https://github.com/machinalis/quepy/commit/98b1e22f84720c65163003d1e959c6f5892699ff
  71. https://github.com/machinalis/quepy/tree/develop/examples
  72. https://github.com/machinalis/quepy/commit/39857098ad279a637c1a44216d33f2c90cb21505
  73. https://github.com/machinalis/quepy/commit/39857098ad279a637c1a44216d33f2c90cb21505
  74. https://github.com/machinalis/quepy/issues/3
  75. https://github.com/machinalis/quepy/commit/39857098ad279a637c1a44216d33f2c90cb21505
  76. https://github.com/machinalis/quepy/tree/develop/quepy
  77. https://github.com/machinalis/quepy/commit/76b8108a7e71793663eeb3496d1caf66a8c99728
  78. https://github.com/machinalis/quepy/tree/develop/scripts
  79. https://github.com/machinalis/quepy/commit/76b8108a7e71793663eeb3496d1caf66a8c99728
  80. https://github.com/machinalis/quepy/tree/develop/tests
  81. https://github.com/machinalis/quepy/commit/d2b0c58b42de1033222e073660bb2ae1e053a5cf
  82. https://github.com/machinalis/quepy/blob/develop/.gitignore
  83. https://github.com/machinalis/quepy/blob/develop/.travis.yml
  84. https://github.com/machinalis/quepy/blob/develop/license
  85. https://github.com/machinalis/quepy/blob/develop/manifest.in
  86. https://github.com/machinalis/quepy/commit/9522b8663fb9ac1b743788da229683349f41c3b1
  87. https://github.com/machinalis/quepy/blob/develop/readme.rst
  88. https://github.com/machinalis/quepy/blob/develop/setup.py
  89. http://www.w3.org/tr/rdf-sparql-query/
  90. http://www.freebase.com/
  91. http://dbpedia.org/
  92. http://quepy.machinalis.com/
  93. http://docopt.org/
  94. http://numpy.scipy.org/
  95. http://quepy.readthedocs.org/en/latest/installation.html
  96. http://quepy.readthedocs.org/en/latest/tutorial.html
  97. http://quepy.readthedocs.org/
  98. http://groups.google.com/group/quepy
  99. http://groups.google.com/group/quepy
 100. https://github.com/site/terms
 101. https://github.com/site/privacy
 102. https://github.com/security
 103. https://githubstatus.com/
 104. https://help.github.com/
 105. https://github.com/contact
 106. https://github.com/pricing
 107. https://developer.github.com/
 108. https://training.github.com/
 109. https://github.blog/
 110. https://github.com/about
 111. https://github.com/machinalis/quepy
 112. https://github.com/machinalis/quepy

   hidden links:
 114. https://github.com/
 115. https://github.com/machinalis/quepy
 116. https://github.com/machinalis/quepy
 117. https://github.com/machinalis/quepy
 118. https://help.github.com/articles/which-remote-url-should-i-use
 119. https://github.com/machinalis/quepy#whats-quepy
 120. https://github.com/machinalis/quepy#an-example
 121. https://github.com/machinalis/quepy#installation
 122. https://github.com/machinalis/quepy#learn-more
 123. https://github.com/machinalis/quepy#contribute
 124. https://github.com/
