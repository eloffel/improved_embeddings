   #[1]github [2]recent commits to media_frames_corpus:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]5
     * [35]star [36]16
     * [37]fork [38]4

[39]dallascard/[40]media_frames_corpus

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a set of media framing annotations, along with scripts for obtaining
   the corresponding news articles
     * [47]15 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors
     * [51]gpl-3.0

    1. [52]python 100.0%

   (button) python
   branch: master (button) new pull request
   [53]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/d
   [54]download zip

downloading...

   want to be notified of new releases in dallascard/media_frames_corpus?
   [55]sign in [56]sign up

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [59]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [60]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [61]permalink
   type                 name                latest commit message commit time
        failed to load latest commit information.
        [62]annotations
        [63].gitignore
        [64]license
        [65]readme.md
        [66]check_output.py
        [67]combine_text_and_annotations.py
        [68]get_news_articles.py
        [69]immigration_config.json
        [70]parse_ln_to_json.py
        [71]process_json_files.py
        [72]samesex_config.json
        [73]smoking_config.json
        [74]sources.json

readme.md

media frames corpus v2.0

    1. requirements ===============

     * python 2.7 with selenium module installed (via pip)
     * chrome browser
     * [75]chrome driver
     * access to lexis-nexis academic

    2. obtaining the articles =====================

   this repository contains the metadata for all articles in the media
   frames corpus (version 2), along with the beginning and end (and
   associated framing dimension) of all annotated spans of text. all of
   this information is in a single json file in the annotations/
   directory, with one file for each issue (immigration, smoking, and
   same-sex marriage). to obtain the actual articles, however, it is
   necessary to have access to lexis-nexis academic.

   to begin, download a copy of the chrome driver, and place it in a
   subdirectory of this repo called chrome.

   second, if you do not already have it, install selenium using pip:
> pip install selenium

   then, in the repo directory, run:
> python get_news_articles.py config_file.json

   where config_file.json is one of the provided configuration files (e.g.
   immigration_config.json, etc.)

   if your chrome driver is located elsewhere, you can specify it with the
   -c option, i.e.:
> python get_news_articles.py config_file.json -c /path/to/chromedriver

   this script will open a chrome browser window and begin downloading all
   the relevant articles for the corresponding issue. this requires that
   you have access to lexis-nexis, and it may take a few hours per issue.

   once all files have been downloaded, the second step is to run:
> python parse_ln_to_json.py config_file.json

   which splits the downloads up into individual articles, and extracts
   the structured information (author, title, etc.)

   third, run:
> python process_json_files.py config_file.json

   this script recombines the information from each article in such a way
   so as to match the articles as they were annotated, and then recombines
   all the articles into a single json file.

   finally, run:
> python combine_text_and_annotations.py config_file.json

   this will produce a single file in the output directory which contains
   the annotations and text for each article.

   the annotations are specified with a coder name (anonymized), a code
   (corresponding to a framing dimension), and a start and end for the
   annotated span (see reference below for additional details). the codes
   are mapped to names of framing dimensions and tones in the codes.json
   file in the annotations directory. "start" is the first character using
   0-based indexing, and "end" is the last plus one. in python, for
   example, if the text of the article were loaded into a variable called
   "text", the annotated span could be extracted using text[start:end].

   some users may need to modify the website address needed to access
   lexis-nexis. the default is [76]http://www.lexisnexis.com

   to specify a replacement for this address (upon which all urls will be
   built), use the -u option in download_articles.py. for example,
> python get_news_articles.py immigration_config.json -u http://www.lexisnexis.c
om.libproxy.lib.unc.edu

    3. revision history =======

   5/dec/2016:
     * v2.0 of the mfc provides a new set of annotations which entirely
       replaces those from v1.0.
     * the annotations scheme remains the same, except that the overall
       tone of the article (pro, neutral, anti) has been added. also, for
       these annotations, the annotators resolved all conflicts on the
       primary frame and tone of each article. (note that some articles
       only have annotations for framing or tone, but not both).
     * finally, the browser was switched from firefox to chrome, and the
       download process sped up.
     * data format has changed slightly
     * note that annotator ids are not the same across issues

    4. references ================== if you make use of this corpus,
       please cite the following paper:

   card d, boydstun ae, gross jh, resnik p, smith na. the media frames
   corpus: annotations of frames across issues. in proceedings of the
   annual meeting of the association for computational linguistics (acl
   2015), beijing, china, july 2015.
   [77]http://www.cs.cmu.edu/~dcard/resources/card.acl2015.pdf
    5. contact ========== if you find any bugs or have questions, please
       email dallas card (dcard at cmu dot edu).

     *    2019 github, inc.
     * [78]terms
     * [79]privacy
     * [80]security
     * [81]status
     * [82]help

     * [83]contact github
     * [84]pricing
     * [85]api
     * [86]training
     * [87]blog
     * [88]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [89]reload to refresh your
   session. you signed out in another tab or window. [90]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/dallascard/media_frames_corpus/commits/master.atom
   3. https://github.com/dallascard/media_frames_corpus#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/dallascard/media_frames_corpus
  32. https://github.com/join
  33. https://github.com/login?return_to=/dallascard/media_frames_corpus
  34. https://github.com/dallascard/media_frames_corpus/watchers
  35. https://github.com/login?return_to=/dallascard/media_frames_corpus
  36. https://github.com/dallascard/media_frames_corpus/stargazers
  37. https://github.com/login?return_to=/dallascard/media_frames_corpus
  38. https://github.com/dallascard/media_frames_corpus/network/members
  39. https://github.com/dallascard
  40. https://github.com/dallascard/media_frames_corpus
  41. https://github.com/dallascard/media_frames_corpus
  42. https://github.com/dallascard/media_frames_corpus/issues
  43. https://github.com/dallascard/media_frames_corpus/pulls
  44. https://github.com/dallascard/media_frames_corpus/projects
  45. https://github.com/dallascard/media_frames_corpus/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/dallascard/media_frames_corpus/commits/master
  48. https://github.com/dallascard/media_frames_corpus/branches
  49. https://github.com/dallascard/media_frames_corpus/releases
  50. https://github.com/dallascard/media_frames_corpus/graphs/contributors
  51. https://github.com/dallascard/media_frames_corpus/blob/master/license
  52. https://github.com/dallascard/media_frames_corpus/search?l=python
  53. https://github.com/dallascard/media_frames_corpus/find/master
  54. https://github.com/dallascard/media_frames_corpus/archive/master.zip
  55. https://github.com/login?return_to=https://github.com/dallascard/media_frames_corpus
  56. https://github.com/join?return_to=/dallascard/media_frames_corpus
  57. https://desktop.github.com/
  58. https://desktop.github.com/
  59. https://developer.apple.com/xcode/
  60. https://visualstudio.github.com/
  61. https://github.com/dallascard/media_frames_corpus/tree/12b95bb715d26433161c7934943bb24ec795f787
  62. https://github.com/dallascard/media_frames_corpus/tree/master/annotations
  63. https://github.com/dallascard/media_frames_corpus/blob/master/.gitignore
  64. https://github.com/dallascard/media_frames_corpus/blob/master/license
  65. https://github.com/dallascard/media_frames_corpus/blob/master/readme.md
  66. https://github.com/dallascard/media_frames_corpus/blob/master/check_output.py
  67. https://github.com/dallascard/media_frames_corpus/blob/master/combine_text_and_annotations.py
  68. https://github.com/dallascard/media_frames_corpus/blob/master/get_news_articles.py
  69. https://github.com/dallascard/media_frames_corpus/blob/master/immigration_config.json
  70. https://github.com/dallascard/media_frames_corpus/blob/master/parse_ln_to_json.py
  71. https://github.com/dallascard/media_frames_corpus/blob/master/process_json_files.py
  72. https://github.com/dallascard/media_frames_corpus/blob/master/samesex_config.json
  73. https://github.com/dallascard/media_frames_corpus/blob/master/smoking_config.json
  74. https://github.com/dallascard/media_frames_corpus/blob/master/sources.json
  75. https://sites.google.com/a/chromium.org/chromedriver/downloads
  76. http://www.lexisnexis.com/
  77. http://www.cs.cmu.edu/~dcard/resources/card.acl2015.pdf
  78. https://github.com/site/terms
  79. https://github.com/site/privacy
  80. https://github.com/security
  81. https://githubstatus.com/
  82. https://help.github.com/
  83. https://github.com/contact
  84. https://github.com/pricing
  85. https://developer.github.com/
  86. https://training.github.com/
  87. https://github.blog/
  88. https://github.com/about
  89. https://github.com/dallascard/media_frames_corpus
  90. https://github.com/dallascard/media_frames_corpus

   hidden links:
  92. https://github.com/
  93. https://github.com/dallascard/media_frames_corpus
  94. https://github.com/dallascard/media_frames_corpus
  95. https://github.com/dallascard/media_frames_corpus
  96. https://help.github.com/articles/which-remote-url-should-i-use
  97. https://github.com/dallascard/media_frames_corpus#media-frames-corpus-v20
  98. https://github.com/
