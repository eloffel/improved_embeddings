   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]becoming human: artificial intelligence magazine
     * [9]     consulting
     * [10]     tutorials
     * [11]       submit an article
     * [12]     communities
     * [13]     our bot
     __________________________________________________________________

setting up deep learning gpu environment

   go to the profile of prathamesh sarang
   [14]prathamesh sarang (button) blockedunblock (button) followfollowing
   may 2, 2017
   [0*mkprgitzpreempx2.jpg]

   source: youtube: [15]@herotech

   setting up a deep learning environment for a gpu enabled system is a
   headache. it is harder compared to the simple cpu setups that take
   hardly much time. this post is for you, if you have struggled to get
   things working on ubuntu.

   (note: there might be a few changes in getting things working for your
   system, since this might get very obsolete in a month or few months
   time)

   you   ll be going step-by-step in how not to sweat it out while getting
   things working. gpus don   t come cheap and it is obvious that no one
   wants to screw things up while working on the same. below are the
   sections that we   ll go through:
     * basic checks for installations needed for cuda 8.0 and cudnn.
     * installing the nvidia drivers along with cuda 8.0.
     * installing cudnn.
     * installing python using miniconda.
     * installing gpu version of tensorflow.
     * installing the other required libraries to work with (keras,
       lasagne).
     * checking whether everything works.

   of all the challenges, nvidia driver installation is the biggest
   headache involving the most tedious workaround.

   our machine specs:

   iframe: [16]/media/452c745dbc400116c5fb753370957131?postid=5651564ff936

   the gpu we have isn   t an nvidia one, but from msi (so be careful while
   following this blog post if you have an nvidia gpu).

   let   s start off:

basic checks for installations needed for cuda 8.0 and cudnn

     * check for the nvidia enabled drivers:

   lspci | grep -i nvidia
     * check for the version of gcc (we need to install version less than
       5.0 for some issues with theano):

   gcc --version
     * if version is above 4.9, downgrade the existing version from 5.3 to
       4.

sudo apt-get install gcc-4.9
sudo apt-get install g++-4.9
     * need to remove the initial installation for gcc:

sudo rm -rf /usr/bin/gcc
sudo rm -rf /usr/bin/g++
     * create hard links for the gcc versions:

sudo ln -s /usr/bin/gcc-4.9 /usr/bin/gcc
sudo ln -s /usr/bin/g++-4.9 /usr/bin/g++
     * check whether things are working or not:

gcc --version
g++ --version

installing the nvidia drivers along with cuda 8.0

     * you need to download the cuda installer kit from [17]this location
       (for linux distribution)
     * path: linux --> x86_64 --> ubuntu --> 16.04 --> runfile(local) -->
       base installer (1.4 gb)
     * create a folder to extract contents of the installer file
       (optional)

mkdir ~/downloads/nvidia_installers
cd ~/downloads
     * instead of this directly copy-paste, run:

   sudo sh ./cuda_8.0.44_linux.run --extract=~/downloads/nvidia_installers
     * follow this step only if you have an existing nvidia installer in
       your system, after this is done you will have the open source
       driver coming in picture.
     * in the next few steps we would take care of that:

   sudo apt-get --purge remove nvidia-<version name>
     * i   m not sure if the issue: [18]graphics issues after/while
       installing ubuntu 16.04/16.10 with nvidia graphics got resolved (in
       2017). updating the graphics driver from gui console didn   t help
       the cause. so we had to do a work-around for that (follow along).
     * need to create the xorg.config file. you would have it in the
       location /etc/x11. not needed for a fresh install, still run it.

   sudo rm /etc/x11/xorg.conf
     * blacklist the nouveau module:

     to list the available modules in the system: lsmod

     to check for the dependencies of that module: modinfo -f depends
     nouveau

     to remove without the dependencies, create
     /etc/modprobe.d/blacklist.conf and add the lines below:

     blacklist nouveau
     options nouveau modeset = 0

     * download the nvidia driver for 16.04 (recommended nvidia-367). copy
       everything in the downloads/nvidia_installers
     * run the commands below

   sudo update-initramfs -u
     * reboot the computer after this to boot into tty mode:

     reading for tty mode: [19]what does tty stand for? & [20]tty
     demystified

     reading on how to boot into tty mode: [21]link

     while booting up, press crtl+alt+f1

     you should see a black screen terminal (see below):

   [1*0gsewu4pekyqdkpxudtaew.png]
     * the next step is to: stop the xserver. reading on: [22]what is
       xserver.
     * run the command:

   sudo service lightdm stop
     * you have to run the cuda installation in the tty for mode: sudo
       sh ./cuda_8.0.44_linux.run
     * the above command installs the driver as well as the tool kit,
       driver is the one for 16.04. we had downloaded the 16.04 version.
     * you will encounter the following questions:

     scroll through the entire document, there will be a few questions:

     eula acceptance? accept

     cuda driver installation? y

     do you want to install opengl libraries? n (y for nvidia drivers)

     do you want to run nvidia-xconfig? y

     install cuda 8.0 toolkit? y

     enter tool kit location? enter a new one or default

     do you want to install a symbolic link at ? y

     install the cuda samples? y

     enter cuda sample location: enter the path of cuda directory/samples

     missing recommended libraries: upto you.

     * export the paths: sudo nano .bashrc and put the export comments
       (below) at the end of the file:

   export path=/usr/local/cuda-8.0/bin:$path export
   ld_library_path=/usr/local/cuda-8.0/lib64:$ld_library_path
     * run: source .bashrc
     * check the driver version: cat /proc/driver/nvidia/version
     * should be whatever version you install, our system has:

nvrm version: nvidia unix x86_64 kernel module  375.39  tue jan 31 20:47:00 pst
2017
gcc version:  gcc version 4.9.3 (ubuntu 4.9.3-13ubuntu2)
     * check the cuda version: nvcc -v
     * if it is successful, you should have the output below:

nvcc: nvidia (r) cuda compiler driver
copyright (c) 2005-2016 nvidia corporation
built on sun_sep__4_22:14:01_cdt_2016
cuda compilation tools, release 8.0, v8.0.44
     * restart the lightdm service, this will take you back to your gui
       console.

   sudo service lightdm start
     * make sure you remember where you saved your cuda samples. we saved
       ours in: /usr/local/cuda-8.0/samples/1_utilities/devicequery
     * fire up the terminal and run the commands below:

   cd /usr/local/cuda-8.0/samples/1_utilities/devicequery
     * run: sudo make. this would compile the files for you, for the
       program to be run.
     * to run the devicequery sample, run: ./devicequery. it should give
       you the details of your device (below):

   iframe: [23]/media/26e67e70635f6932e7318d870f6ae569?postid=5651564ff936

installing cudnn

     * download the cudnn zip folder from this location: [24]cudnn
       download

   (note: first time download needs a login and need to create nvidia
   developer account         going through the motions of creating an account,
   answering the survey and other things and also activating the account
   after which the downloads would be available for us mortals.)
     * choose    cudnn v5.1 library for linux    and follow the steps below:

tar xvzf ~/downloads/cudnn-8.0-linux-x64-v5.1.tgz
cd cuda
sudo cp include/cudnn.h /usr/local/cuda/include/
sudo cp lib64/* /usr/local/cuda/lib64/
     * cudnn v5.1 should now be available for you.

   now you are done through with the most difficult part, the next set
   shouldn   t be taxing!

installing python using miniconda

     * it is always better to use continuum   s anaconda distribution, but
       it is best to use [25]miniconda as the minimal base python version.
     * use any version from [26]this link.

wget [27]https://repo.continuum.io/miniconda/miniconda3-latest-linux-x86_64.sh
bash miniconda3-latest-linux-x86_64.sh
     * a set of questions would follow, answer them appropriately. if
       interested in reading more and getting a pre-designed python
       environment follow [28]this link
     * test it once on the terminal, to make sure you are running the
       miniconda version.
     * create the python3.5 environment: conda create --name dlgpu
       python=3.5
     * activate the environment: source activate dlgpu

installing gpu version of tensorflow

     * visit the site: [29]os setup         tensorflow
     * follow the steps below:

export tf_binary_url=https://storage.googleapis.com/tensorflow/linux/gpu/tensorf
low_gpu-1.0.1-cp35-cp35m-linux_x86_64.whl
     * update setuptools (through conda to avoid install_path.pth issues)

   conda install setuptools
     * now install tensorflow gpu using the command:

   pip install --ignore-installed --upgrade $tf_binary_url
     * for this issue: [30]nvidia digits issue

   sudo ldconfig /usr/local/cuda/lib64

installing the other required libraries to work with (e.g. keras, lasagne)

     * install other libraries that you   ll need, we   ll be going for keras
       & lasagne

pip install keras
pip install lasagne

checking whether everything works

   iframe: [31]/media/ab5a1e458cd7056ccf836cafaa1eabf9?postid=5651564ff936

   if you are here, i felt the same as you!
   [1*ttmwjlx-fwf87rnp37z-zw.gif]

   this should get your started with deep learning using gpu. do let me
   know in the comments if there was any issue during the installation,
   would try to answer the questions to the best of my knowledge.

   sources:
    1. [32]nvidia blog: installation
    2. [33]install gpu tensorflow ubuntu 16.04
    3. [34]floydhub/dl-setup
    4. [35]setup for ubunutu 16.04
    5. [36]installing gpu tensorflow in xenial 16.04
    6. [37]older setup
    7. [38]deep learning installation
    8. [39]deep learning setup for windows
    9. [40]nvidia driver issues
   10. [41]how to chose the driver for linux
     __________________________________________________________________

   originally published at [42]pratos.github.io.

   iframe: [43]/media/c43026df6fee7cdb1aab8aaf916125ea?postid=5651564ff936

   [1*bqlrszfhjemf4q7pyrlgng.gif]
   [44][1*2f7oqe2ajk1ksrhkmd9zmw.png]
   [45][1*v-ppfkswhbvlwwamsvhhwg.png]
   [46][1*wt2auqisieaozxj-i7brdq.png]

     * [47]machine learning
     * [48]deep learning
     * [49]tensorflow
     * [50]linux
     * [51]ubuntu

   (button)
   (button)
   (button) 30 claps
   (button) (button) (button) 2 (button) (button)

     (button) blockedunblock (button) followfollowing
   go to the profile of prathamesh sarang

[52]prathamesh sarang

   medium member since oct 2018

     (button) follow
   [53]becoming human: artificial intelligence magazine

[54]becoming human: artificial intelligence magazine

   latest news, info and tutorials on artificial intelligence, machine
   learning, deep learning, big data and what it means for humanity.

     * (button)
       (button) 30
     * (button)
     *
     *

   [55]becoming human: artificial intelligence magazine
   never miss a story from becoming human: artificial intelligence
   magazine, when you sign up for medium. [56]learn more
   never miss a story from becoming human: artificial intelligence
   magazine
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://becominghuman.ai/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/5651564ff936
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://becominghuman.ai/setting-up-deep-learning-gpu-environment-5651564ff936&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://becominghuman.ai/setting-up-deep-learning-gpu-environment-5651564ff936&source=--------------------------nav_reg&operation=register
   8. https://becominghuman.ai/?source=logo-lo_qizofkzddb1v---5e5bef33608a
   9. https://becominghuman.ai/artificial-intelligence-software-developers-af09386dc05d
  10. https://becominghuman.ai/tagged/tutorial
  11. https://becominghuman.ai/write-for-us-48270209de63
  12. https://becominghuman.ai/artificial-intelligence-communities-c305f28e674c
  13. http://m.me/becominghumanai
  14. https://becominghuman.ai/@prato_s
  15. https://www.youtube.com/watch?v=uqawox5uxyu
  16. https://becominghuman.ai/media/452c745dbc400116c5fb753370957131?postid=5651564ff936
  17. https://developer.nvidia.com/cuda-downloads
  18. https://askubuntu.com/questions/760934/graphics-issues-after-while-installing-ubuntu-16-04-16-10-with-nvidia-graphics
  19. https://askubuntu.com/questions/481906/what-does-tty-stand-for
  20. http://www.linusakesson.net/programming/tty/
  21. http://ubuntuhandbook.org/index.php/2014/01/boot-into-text-console-ubuntu-linux-14-04/
  22. https://askubuntu.com/questions/7881/what-is-the-x-server
  23. https://becominghuman.ai/media/26e67e70635f6932e7318d870f6ae569?postid=5651564ff936
  24. https://developer.nvidia.com/rdp/cudnn-download
  25. https://conda.io/miniconda.html
  26. https://conda.io/miniconda.html
  27. https://repo.continuum.io/miniconda/miniconda3-latest-linux-x86_64.sh
  28. https://github.com/soumendra/python-machinelearning-setup
  29. https://www.tensorflow.org/versions/r0.11/get_started/os_setup.html
  30. https://github.com/nvidia/digits/issues/8
  31. https://becominghuman.ai/media/ab5a1e458cd7056ccf836cafaa1eabf9?postid=5651564ff936
  32. http://www.nvidia.com/object/gpu-accelerated-applications-tensorflow-installation.html
  33. http://deeplearning.lipingyang.org/2017/01/18/install-gpu-tensorflow-ubuntu-16-04/
  34. https://github.com/floydhub/dl-setup
  35. http://www.computervisionbytecnalia.com/en/2016/06/deep-learning-development-setup-for-ubuntu-16-04-xenial/
  36. https://alliseesolutions.wordpress.com/2016/09/08/install-gpu-tensorflow-from-sources-w-ubuntu-16-04-and-cuda-8-0-rc/
  37. http://kislayabhi.github.io/installing_cuda_with_ubuntu/
  38. https://www.born2data.com/2016/deeplearning_install-part1.html
  39. https://github.com/philferriere/dlwin
  40. http://technozed.com/fix-nvidia-graphical-issues-installing-ubuntu-16-04/
  41. https://linuxconfig.org/how-to-install-the-latest-nvidia-drivers-on-ubuntu-16-04-xenial-xerus
  42. https://pratos.github.io/setup-tensorflow-gpu-on-ubuntu.html
  43. https://becominghuman.ai/media/c43026df6fee7cdb1aab8aaf916125ea?postid=5651564ff936
  44. https://medium.com/becoming-human/artificial-intelligence-communities-c305f28e674c
  45. https://upscri.be/8f5f8b
  46. https://medium.com/becoming-human/write-for-us-48270209de63
  47. https://becominghuman.ai/tagged/machine-learning?source=post
  48. https://becominghuman.ai/tagged/deep-learning?source=post
  49. https://becominghuman.ai/tagged/tensorflow?source=post
  50. https://becominghuman.ai/tagged/linux?source=post
  51. https://becominghuman.ai/tagged/ubuntu?source=post
  52. https://becominghuman.ai/@prato_s
  53. https://becominghuman.ai/?source=footer_card
  54. https://becominghuman.ai/?source=footer_card
  55. https://becominghuman.ai/
  56. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  58. https://becominghuman.ai/@prato_s?source=post_header_lockup
  59. https://medium.com/p/5651564ff936/share/twitter
  60. https://medium.com/p/5651564ff936/share/facebook
  61. https://becominghuman.ai/@prato_s?source=footer_card
  62. https://medium.com/p/5651564ff936/share/twitter
  63. https://medium.com/p/5651564ff936/share/facebook
