   #[1]github [2]recent commits to handson-ml:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]874
     * [35]star [36]13,691
     * [37]fork [38]7,288

[39]ageron/[40]handson-ml

   [41]code [42]issues 52 [43]pull requests 7 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a series of jupyter notebooks that walk you through the fundamentals of
   machine learning and deep learning in python using scikit-learn and
   tensorflow.
   [47]tensorflow [48]scikit-learn [49]machine-learning [50]python
   [51]deep-learning [52]neural-network [53]ml [54]distributed
   [55]jupyter-notebook
     * [56]416 commits
     * [57]1 branch
     * [58]0 releases
     * [59]32 contributors
     * [60]apache-2.0

    1. [61]jupyter notebook 99.7%
    2. other 0.3%

   (button) jupyter notebook other
   branch: master (button) new pull request
   [62]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/a
   [63]download zip

downloading...

   want to be notified of new releases in ageron/handson-ml?
   [64]sign in [65]sign up

launching github desktop...

   if nothing happens, [66]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [67]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [68]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [69]download the github extension for visual studio
   and try again.

   (button) go back
   [70]@ageron
   [71]ageron [72]add a comment about the use of pd.cut()
   latest commit [73]e22556c mar 15, 2019
   [74]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [75]datasets [76]update readme.md jan 17, 2018
   [77]docker [78]merge pull request [79]#317 [80]from cezcz/fix-jupyter
   dec 2, 2018
   [81]images [82]add id91, density estimation and anomaly detection
   to chapter 8 apr 4, 2018
   [83].gitignore [84]add *.old, *.dot and lifesat.csv (generated) to
   .gitignore may 7, 2018
   [85]01_the_machine_learning_landscape.ipynb [86]import matplotlib as
   mpl and use mpl.rc() jan 8, 2019
   [87]02_end_to_end_machine_learning_project.ipynb [88]add a comment
   about the use of pd.cut() mar 15, 2019
   [89]03_classification.ipynb [90]import matplotlib as mpl and use
   mpl.rc() jan 8, 2019
   [91]04_training_linear_models.ipynb [92]import matplotlib as mpl and
   use mpl.rc() jan 8, 2019
   [93]05_support_vector_machines.ipynb [94]import matplotlib as mpl and
   use mpl.rc() jan 8, 2019
   [95]06_decision_trees.ipynb [96]import matplotlib as mpl and use
   mpl.rc() jan 8, 2019
   [97]07_ensemble_learning_and_random_forests.ipynb [98]import matplotlib
   as mpl and use mpl.rc() jan 8, 2019
   [99]08_dimensionality_reduction.ipynb [100]import matplotlib as mpl and
   use mpl.rc() jan 8, 2019
   [101]09_up_and_running_with_tensorflow.ipynb [102]use
   tensorflow_graph_in_jupyter.py in notebooks, [103]fixes [104]#223 may
   18, 2018
   [105]10_introduction_to_artificial_neural_networks.ipynb [106]fix
   sigmoid activation function name dec 27, 2018
   [107]11_deep_learning.ipynb [108]use frozen_outputs instead of
   dnn_outputs mar 6, 2019
   [109]12_distributed_tensorflow.ipynb [110]add a quick intro to the data
   api in notebook 12 may 7, 2018
   [111]13_convolutional_neural_networks.ipynb [112]resize to
   skimage.transform.resize mar 7, 2019
   [113]14_recurrent_neural_networks.ipynb [114]use tf.nn.id56_cell rather
   than tf.contrib.id56 dec 25, 2018
   [115]15_autoencoders.ipynb [116]fix a typo: s/it/is feb 27, 2018
   [117]16_reinforcement_learning.ipynb [118]update replaymemory class and
   add a short description may 9, 2018
   [119]license [120]first notebook added: matplotlib feb 16, 2016
   [121]readme.md [122]add note about tensorflow and python 3.7
   compatibility coming soon, f    dec 21, 2018
   [123]book_equations.ipynb [124]fix equation 16-6 (max_alpha'=>max_a')
   may 7, 2018
   [125]extra_autodiff.ipynb [126]improve formatting may 18, 2018
   [127]extra_capsnets-cn.ipynb [128]zh-cn version may 2, 2018
   [129]extra_capsnets.ipynb [130]made initial weights higher-variance feb
   10, 2018
   [131]extra_gradient_descent_comparison.ipynb [132]add intro paragraph,
   tx to daniel and minor formatting fixes sep 17, 2018
   [133]extra_tensorflow_reproducibility.ipynb [134]fix expected result
   for first estimator training sep 3, 2018
   [135]future_encoders.py [136]add columntransformer to
   future_encoders.py jul 31, 2018
   [137]index.ipynb [138]add a notebook about achieving reproducibility
   with tensorflow aug 11, 2018
   [139]math_linear_algebra.ipynb [140]right angle is pi/2, not pi/4. one
   reason why tau > pi ;) oct 27, 2017
   [141]ml-project-checklist.md [142]add ml-project-checklist (appendix b
   of the book) mar 13, 2019
   [143]requirements.txt [144]update libraries to latest versions mar 15,
   2019
   [145]tensorflow_graph_in_jupyter.py [146]use
   tensorflow_graph_in_jupyter.py in notebooks, [147]fixes [148]#223 may
   18, 2018
   [149]tools_matplotlib.ipynb [150]fixed typo in tools_matplotlib.ipynb
   mar 4, 2016
   [151]tools_numpy.ipynb [152]fix small typo in numpy notebook mar 24,
   2018
   [153]tools_pandas.ipynb [154]upgrade to latest pandas version, update
   resampling api jan 5, 2018

readme.md

machine learning notebooks

   this project aims at teaching you the fundamentals of machine learning
   in python. it contains the example code and solutions to the exercises
   in my o'reilly book [155]hands-on machine learning with scikit-learn
   and tensorflow:

   [156]book

   simply open the [157]jupyter notebooks you are interested in:
     * using [158]jupyter.org's notebook viewer
          + note: [159]github.com's notebook viewer also works but it is
            slower and the math formulas are not displayed correctly,
     * or by cloning this repository and running jupyter locally. this
       option lets you play around with the code. in this case, follow the
       installation instructions below.

installation

   first, you will need to install [160]git, if you don't have it already.

   next, clone this repository by opening a terminal and typing the
   following commands:
$ cd $home  # or any other development directory you prefer
$ git clone https://github.com/ageron/handson-ml.git
$ cd handson-ml

   if you do not want to install git, you can instead download
   [161]master.zip, unzip it, rename the resulting directory to handson-ml
   and move it to your development directory.

   if you want to go through chapter 16 on id23, you
   will need to [162]install openai gym and its dependencies for atari
   simulations.

   if you are familiar with python and you know how to install python
   libraries, go ahead and install the libraries listed in
   requirements.txt and jump to the [163]starting jupyter section. if you
   need detailed instructions, please read on.

python & required libraries

   of course, you obviously need python. python 2 is already preinstalled
   on most systems nowadays, and sometimes even python 3. you can check
   which version(s) you have by typing the following commands:
$ python --version   # for python 2
$ python3 --version  # for python 3

   any python 3 version should be fine, preferably 3.5 or 3.6 (tensorflow
   support for python 3.7 is [164]coming soon). if you don't have python
   3, i recommend installing it (python    2.6 should work, but it is
   deprecated so python 3 is preferable). to do so, you have several
   options: on windows or macosx, you can just download it from
   [165]python.org. on macosx, you can alternatively use [166]macports or
   [167]homebrew. if you are using python 3.6 on macosx, you need to run
   the following command to install the certifi package of certificates
   because python 3.6 on macosx has no certificates to validate ssl
   connections (see this [168]stackoverflow question):
$ /applications/python\ 3.6/install\ certificates.command

   on linux, unless you know what you are doing, you should use your
   system's packaging system. for example, on debian or ubuntu, type:
$ sudo apt-get update
$ sudo apt-get install python3

   another option is to download and install [169]anaconda. this is a
   package that includes both python and many scientific libraries. you
   should prefer the python 3 version.

   if you choose to use anaconda, read the next section, or else jump to
   the [170]using pip section.

using anaconda

   when using anaconda, you can optionally create an isolated python
   environment dedicated to this project. this is recommended as it makes
   it possible to have a different environment for each project (e.g. one
   for this project), with potentially different libraries and library
   versions:
$ conda create -n mlbook python=3.5 anaconda
$ conda activate mlbook

   this creates a fresh python 3.5 environment called mlbook (you can
   change the name if you want to), and it activates it. this environment
   contains all the scientific libraries that come with anaconda. this
   includes all the libraries we will need (numpy, matplotlib, pandas,
   jupyter and a few others), except for tensorflow, so let's install it:
$ conda install -n mlbook -c conda-forge tensorflow

   this installs the latest version of tensorflow available for anaconda
   (which is usually not the latest tensorflow version) in the mlbook
   environment (fetching it from the conda-forge repository). if you chose
   not to create an mlbook environment, then just remove the -n mlbook
   option.

   next, you can optionally install jupyter extensions. these are useful
   to have nice tables of contents in the notebooks, but they are not
   required.
$ conda install -n mlbook -c conda-forge jupyter_contrib_nbextensions

   you are all set! next, jump to the [171]starting jupyter section.

using pip

   if you are not using anaconda, you need to install several scientific
   python libraries that are necessary for this project, in particular
   numpy, matplotlib, pandas, jupyter and tensorflow (and a few others).
   for this, you can either use python's integrated packaging system, pip,
   or you may prefer to use your system's own packaging system (if
   available, e.g. on linux, or on macosx when using macports or
   homebrew). the advantage of using pip is that it is easy to create
   multiple isolated python environments with different libraries and
   different library versions (e.g. one environment for each project). the
   advantage of using your system's packaging system is that there is less
   risk of having conflicts between your python libraries and your
   system's other packages. since i have many projects with different
   library requirements, i prefer to use pip with isolated environments.
   moreover, the pip packages are usually the most recent ones available,
   while anaconda and system packages often lag behind a bit.

   these are the commands you need to type in a terminal if you want to
   use pip to install the required libraries. note: in all the following
   commands, if you chose to use python 2 rather than python 3, you must
   replace pip3 with pip, and python3 with python.

   first you need to make sure you have the latest version of pip
   installed:
$ pip3 install --user --upgrade pip

   the --user option will install the latest version of pip only for the
   current user. if you prefer to install it system wide (i.e. for all
   users), you must have administrator rights (e.g. use sudo pip3 instead
   of pip3 on linux), and you should remove the --user option. the same is
   true of the command below that uses the --user option.

   next, you can optionally create an isolated environment. this is
   recommended as it makes it possible to have a different environment for
   each project (e.g. one for this project), with potentially very
   different libraries, and different versions:
$ pip3 install --user --upgrade virtualenv
$ virtualenv -p `which python3` env

   this creates a new directory called env in the current directory,
   containing an isolated python environment based on python 3. if you
   installed multiple versions of python 3 on your system, you can replace
   `which python3` with the path to the python executable you prefer to
   use.

   now you must activate this environment. you will need to run this
   command every time you want to use this environment.
$ source ./env/bin/activate

   on windows, the command is slightly different:
$ .\env\scripts\activate

   next, use pip to install the required python packages. if you are not
   using virtualenv, you should add the --user option (alternatively you
   could install the libraries system-wide, but this will probably require
   administrator rights, e.g. using sudo pip3 instead of pip3 on linux).
$ pip3 install --upgrade -r requirements.txt

   great! you're all set, you just need to start jupyter now.

starting jupyter

   if you want to use the jupyter extensions (optional, they are mainly
   useful to have nice tables of contents), you first need to install
   them:
$ jupyter contrib nbextension install --user

   then you can activate an extension, such as the table of contents (2)
   extension:
$ jupyter nbextension enable toc2/main

   okay! you can now start jupyter, simply type:
$ jupyter notebook

   this should open up your browser, and you should see jupyter's tree
   view, with the contents of the current directory. if your browser does
   not open automatically, visit [172]localhost:8888. click on index.ipynb
   to get started!

   note: you can also visit [173]http://localhost:8888/nbextensions to
   activate and configure jupyter extensions.

   congrats! you are ready to learn machine learning, hands on!

contributors

   i would like to thank everyone who contributed to this project, either
   by providing useful feedback, filing issues or submitting pull
   requests. special thanks go to steven bunkley and ziembla who created
   the docker directory.

     *    2019 github, inc.
     * [174]terms
     * [175]privacy
     * [176]security
     * [177]status
     * [178]help

     * [179]contact github
     * [180]pricing
     * [181]api
     * [182]training
     * [183]blog
     * [184]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [185]reload to refresh your
   session. you signed out in another tab or window. [186]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/ageron/handson-ml/commits/master.atom
   3. https://github.com/ageron/handson-ml#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/ageron/handson-ml
  32. https://github.com/join
  33. https://github.com/login?return_to=/ageron/handson-ml
  34. https://github.com/ageron/handson-ml/watchers
  35. https://github.com/login?return_to=/ageron/handson-ml
  36. https://github.com/ageron/handson-ml/stargazers
  37. https://github.com/login?return_to=/ageron/handson-ml
  38. https://github.com/ageron/handson-ml/network/members
  39. https://github.com/ageron
  40. https://github.com/ageron/handson-ml
  41. https://github.com/ageron/handson-ml
  42. https://github.com/ageron/handson-ml/issues
  43. https://github.com/ageron/handson-ml/pulls
  44. https://github.com/ageron/handson-ml/projects
  45. https://github.com/ageron/handson-ml/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/tensorflow
  48. https://github.com/topics/scikit-learn
  49. https://github.com/topics/machine-learning
  50. https://github.com/topics/python
  51. https://github.com/topics/deep-learning
  52. https://github.com/topics/neural-network
  53. https://github.com/topics/ml
  54. https://github.com/topics/distributed
  55. https://github.com/topics/jupyter-notebook
  56. https://github.com/ageron/handson-ml/commits/master
  57. https://github.com/ageron/handson-ml/branches
  58. https://github.com/ageron/handson-ml/releases
  59. https://github.com/ageron/handson-ml/graphs/contributors
  60. https://github.com/ageron/handson-ml/blob/master/license
  61. https://github.com/ageron/handson-ml/search?l=jupyter-notebook
  62. https://github.com/ageron/handson-ml/find/master
  63. https://github.com/ageron/handson-ml/archive/master.zip
  64. https://github.com/login?return_to=https://github.com/ageron/handson-ml
  65. https://github.com/join?return_to=/ageron/handson-ml
  66. https://desktop.github.com/
  67. https://desktop.github.com/
  68. https://developer.apple.com/xcode/
  69. https://visualstudio.github.com/
  70. https://github.com/ageron
  71. https://github.com/ageron/handson-ml/commits?author=ageron
  72. https://github.com/ageron/handson-ml/commit/e22556c79de96337d18de6e9caae5b77e78aaa14
  73. https://github.com/ageron/handson-ml/commit/e22556c79de96337d18de6e9caae5b77e78aaa14
  74. https://github.com/ageron/handson-ml/tree/e22556c79de96337d18de6e9caae5b77e78aaa14
  75. https://github.com/ageron/handson-ml/tree/master/datasets
  76. https://github.com/ageron/handson-ml/commit/da6b985c248e24b53bdd5d5ccaf5e470e985b7ae
  77. https://github.com/ageron/handson-ml/tree/master/docker
  78. https://github.com/ageron/handson-ml/commit/7c0e51e570e22faff3fd8176aac1756a2f57bb44
  79. https://github.com/ageron/handson-ml/pull/317
  80. https://github.com/ageron/handson-ml/commit/7c0e51e570e22faff3fd8176aac1756a2f57bb44
  81. https://github.com/ageron/handson-ml/tree/master/images
  82. https://github.com/ageron/handson-ml/commit/2fc01950f828a7a64431b8d35c4159ba5ce4306c
  83. https://github.com/ageron/handson-ml/blob/master/.gitignore
  84. https://github.com/ageron/handson-ml/commit/c66d755792fe284d69c753d885e776e3fa1562c2
  85. https://github.com/ageron/handson-ml/blob/master/01_the_machine_learning_landscape.ipynb
  86. https://github.com/ageron/handson-ml/commit/5bb8d2e071852f3b5907679668705e59c0fb4a16
  87. https://github.com/ageron/handson-ml/blob/master/02_end_to_end_machine_learning_project.ipynb
  88. https://github.com/ageron/handson-ml/commit/e22556c79de96337d18de6e9caae5b77e78aaa14
  89. https://github.com/ageron/handson-ml/blob/master/03_classification.ipynb
  90. https://github.com/ageron/handson-ml/commit/5bb8d2e071852f3b5907679668705e59c0fb4a16
  91. https://github.com/ageron/handson-ml/blob/master/04_training_linear_models.ipynb
  92. https://github.com/ageron/handson-ml/commit/5bb8d2e071852f3b5907679668705e59c0fb4a16
  93. https://github.com/ageron/handson-ml/blob/master/05_support_vector_machines.ipynb
  94. https://github.com/ageron/handson-ml/commit/5bb8d2e071852f3b5907679668705e59c0fb4a16
  95. https://github.com/ageron/handson-ml/blob/master/06_decision_trees.ipynb
  96. https://github.com/ageron/handson-ml/commit/5bb8d2e071852f3b5907679668705e59c0fb4a16
  97. https://github.com/ageron/handson-ml/blob/master/07_ensemble_learning_and_random_forests.ipynb
  98. https://github.com/ageron/handson-ml/commit/5bb8d2e071852f3b5907679668705e59c0fb4a16
  99. https://github.com/ageron/handson-ml/blob/master/08_dimensionality_reduction.ipynb
 100. https://github.com/ageron/handson-ml/commit/5bb8d2e071852f3b5907679668705e59c0fb4a16
 101. https://github.com/ageron/handson-ml/blob/master/09_up_and_running_with_tensorflow.ipynb
 102. https://github.com/ageron/handson-ml/commit/51b12887938bb15f05969bde10629c175ffbbb8d
 103. https://github.com/ageron/handson-ml/commit/51b12887938bb15f05969bde10629c175ffbbb8d
 104. https://github.com/ageron/handson-ml/issues/223
 105. https://github.com/ageron/handson-ml/blob/master/10_introduction_to_artificial_neural_networks.ipynb
 106. https://github.com/ageron/handson-ml/commit/8e67cac277d4353d45a6dcf336da6bb5b504d70d
 107. https://github.com/ageron/handson-ml/blob/master/11_deep_learning.ipynb
 108. https://github.com/ageron/handson-ml/commit/9a3a2e9de575a85e10e8cd590a6f22de01403ac5
 109. https://github.com/ageron/handson-ml/blob/master/12_distributed_tensorflow.ipynb
 110. https://github.com/ageron/handson-ml/commit/5f350473e708137fbfb8a144473b39b292bb89ef
 111. https://github.com/ageron/handson-ml/blob/master/13_convolutional_neural_networks.ipynb
 112. https://github.com/ageron/handson-ml/commit/e3fcaf0387301f703debc89eb8c43a866f228005
 113. https://github.com/ageron/handson-ml/blob/master/14_recurrent_neural_networks.ipynb
 114. https://github.com/ageron/handson-ml/commit/30959a005a5be508f9f6121911f4ac2b8829f83d
 115. https://github.com/ageron/handson-ml/blob/master/15_autoencoders.ipynb
 116. https://github.com/ageron/handson-ml/commit/ef0cfb3c077d8c95e18bffa85e4af92cab87b10e
 117. https://github.com/ageron/handson-ml/blob/master/16_reinforcement_learning.ipynb
 118. https://github.com/ageron/handson-ml/commit/4cec6c294b7d60219fbe18b3bc69855a245f3bff
 119. https://github.com/ageron/handson-ml/blob/master/license
 120. https://github.com/ageron/handson-ml/commit/b0677168f12ac38ee176bd872c3ada00cd36b96e
 121. https://github.com/ageron/handson-ml/blob/master/readme.md
 122. https://github.com/ageron/handson-ml/commit/9bf2d9e1200264d6b1b883764d2752d1e4c28e52
 123. https://github.com/ageron/handson-ml/blob/master/book_equations.ipynb
 124. https://github.com/ageron/handson-ml/commit/ea7e84e97fb1a463013e97ca20c681f7ab56fb0d
 125. https://github.com/ageron/handson-ml/blob/master/extra_autodiff.ipynb
 126. https://github.com/ageron/handson-ml/commit/5f9ae7b3be6422f9f6f8c889ae49e31d92e002b9
 127. https://github.com/ageron/handson-ml/blob/master/extra_capsnets-cn.ipynb
 128. https://github.com/ageron/handson-ml/commit/50bef9e1e5b804f6f99233dd944092759734a7f9
 129. https://github.com/ageron/handson-ml/blob/master/extra_capsnets.ipynb
 130. https://github.com/ageron/handson-ml/commit/3c0e93b3d5b1eb88805f5c897848912767aadd3c
 131. https://github.com/ageron/handson-ml/blob/master/extra_gradient_descent_comparison.ipynb
 132. https://github.com/ageron/handson-ml/commit/6b89e129646853708b8490b8b5c8008324ec0de6
 133. https://github.com/ageron/handson-ml/blob/master/extra_tensorflow_reproducibility.ipynb
 134. https://github.com/ageron/handson-ml/commit/4fcc952cd8555d5024ad0166597c478f18be24e5
 135. https://github.com/ageron/handson-ml/blob/master/future_encoders.py
 136. https://github.com/ageron/handson-ml/commit/d93bcdf01a47d6473b45931d544874dc6fee012c
 137. https://github.com/ageron/handson-ml/blob/master/index.ipynb
 138. https://github.com/ageron/handson-ml/commit/36542f7703fbb05473e33b55ad2da5ba8819702e
 139. https://github.com/ageron/handson-ml/blob/master/math_linear_algebra.ipynb
 140. https://github.com/ageron/handson-ml/commit/0f983ce39a6751d24a8c0429513b1f935e367dde
 141. https://github.com/ageron/handson-ml/blob/master/ml-project-checklist.md
 142. https://github.com/ageron/handson-ml/commit/690674192d41782ddfacbdd97a94f60eff41fa06
 143. https://github.com/ageron/handson-ml/blob/master/requirements.txt
 144. https://github.com/ageron/handson-ml/commit/d0f7cb6a9111bd323e79c4a006a456adbbacabca
 145. https://github.com/ageron/handson-ml/blob/master/tensorflow_graph_in_jupyter.py
 146. https://github.com/ageron/handson-ml/commit/51b12887938bb15f05969bde10629c175ffbbb8d
 147. https://github.com/ageron/handson-ml/commit/51b12887938bb15f05969bde10629c175ffbbb8d
 148. https://github.com/ageron/handson-ml/issues/223
 149. https://github.com/ageron/handson-ml/blob/master/tools_matplotlib.ipynb
 150. https://github.com/ageron/handson-ml/commit/32571a70a19cb85864ab4304d2e9d63e3052da67
 151. https://github.com/ageron/handson-ml/blob/master/tools_numpy.ipynb
 152. https://github.com/ageron/handson-ml/commit/a2d756e822b38fde26dec12e8b5735c30ac25a0b
 153. https://github.com/ageron/handson-ml/blob/master/tools_pandas.ipynb
 154. https://github.com/ageron/handson-ml/commit/f1f65b9216c54d348c1453a502a16797cc198ed8
 155. http://shop.oreilly.com/product/0636920052289.do
 156. http://shop.oreilly.com/product/0636920052289.do
 157. http://jupyter.org/
 158. http://nbviewer.jupyter.org/github/ageron/handson-ml/blob/master/index.ipynb
 159. https://github.com/ageron/handson-ml/blob/master/index.ipynb
 160. https://git-scm.com/
 161. https://github.com/ageron/handson-ml/archive/master.zip
 162. https://gym.openai.com/docs
 163. https://github.com/ageron/handson-ml#starting-jupyter
 164. https://github.com/tensorflow/tensorflow/issues/20517
 165. https://www.python.org/downloads/
 166. https://www.macports.org/
 167. https://brew.sh/
 168. https://stackoverflow.com/questions/27835619/urllib-and-ssl-certificate-verify-failed-error
 169. https://www.continuum.io/downloads
 170. https://github.com/ageron/handson-ml#using-pip
 171. https://github.com/ageron/handson-ml#starting-jupyter
 172. http://localhost:8888/tree
 173. http://localhost:8888/nbextensions
 174. https://github.com/site/terms
 175. https://github.com/site/privacy
 176. https://github.com/security
 177. https://githubstatus.com/
 178. https://help.github.com/
 179. https://github.com/contact
 180. https://github.com/pricing
 181. https://developer.github.com/
 182. https://training.github.com/
 183. https://github.blog/
 184. https://github.com/about
 185. https://github.com/ageron/handson-ml
 186. https://github.com/ageron/handson-ml

   hidden links:
 188. https://github.com/
 189. https://github.com/ageron/handson-ml
 190. https://github.com/ageron/handson-ml
 191. https://github.com/ageron/handson-ml
 192. https://help.github.com/articles/which-remote-url-should-i-use
 193. https://github.com/ageron/handson-ml#machine-learning-notebooks
 194. https://github.com/ageron/handson-ml#installation
 195. https://github.com/ageron/handson-ml#python--required-libraries
 196. https://github.com/ageron/handson-ml#using-anaconda
 197. https://github.com/ageron/handson-ml#using-pip
 198. https://github.com/ageron/handson-ml#starting-jupyter
 199. https://github.com/ageron/handson-ml#contributors
 200. https://github.com/
