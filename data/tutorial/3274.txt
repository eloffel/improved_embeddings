   #[1]the personal blog of cristi vlad    feed [2]the personal blog of
   cristi vlad    comments feed [3]the personal blog of cristi vlad    voice
   input app in python     code release and overview [may 2017] comments
   feed [4]on the potential benefits of physiologic stressors     cold
   exposure [5]the five most mutated genes in cancers     [a 2017 icgc
   perspective] [6]alternate [7]alternate

   [8]skip to content

   [9]the personal blog of cristi vlad

   (button) menu
     * [10]home
     * books
          + [11]stress and adaptation
          + [12]persistent fat loss
          + [13]periodic fasting
          + [14]ketone power
          + [15]t-(rx)
          + [16]urban escape
          + [17]mastering udemy
     * [18]course
     * [19]rom  n  
     * [20]coaching
     * about
          + [21]about me
          + [22]supplements (i used)
          + [23]contact me

   posted on [24]may 3, 2017 by [25]chris

voice input app in python     code release and overview [may 2017]

   i built the following application, primarily, for convenience   

   there are times when i don   t wanna type on my laptop. and i didn   t know
   of any general purpose, simple, minimal application that could do voice
   recognition and text input in the most basic form, as in: listen to my
   voice, paste what i just said, so i don   t have to type it.

   i use this app in social media replies as well as when i post updates
   on different channels.

   and, to be completely honest, there are times when i eat chocolate
   while watching scientific lectures (positive reinforcement). some of
   these lectures spark spontaneous thoughts that i want to share, and the
   only    clean    way to do it is by voice: one hand is used for chocolate
   manipulation, while the other for handling the mouse.

   so, this gave me a solid reason to build this application.

   i posted a showcase video of the app a few weeks ago   

            iframe: [26]https://www.youtube.com/embed/9cdjanvmpti

   in that video i was promising that i will do a code release and review
   sometime in the future. and that    sometime    is now.

voice input app     the code

   i   ll jump right into it, not before doing some important remarks.

   this app uses the powerful id103 api of google, which is
   pretty damn accurate (even when you speak with a mouthful of dark
   chocolate).

   when i click the    speak    button, it beeps for voice input, then it does
   its recognition    magic    and delivers my message on the clipboard. then
   i can right-click and paste the message from the clipboard     in any
   field that takes text.

   the following python libraries are needed to build the app:

       [27]speech_recognition
       [28]pygame
       [29]pyperclip

   additionally, you will need to register for api keys with [30]google
   speech cloud. the current free tier provides sufficient personal use on
   a monthly basis.
    1. making the necessary imports.

   python

   #!/usr/bin/env python3.4____________________________________
   ____________________________________________________________
   from tkinter import *_______________________________________
   from tkinter import ttk_____________________________________
   import speech_recognition as sr_____________________________
   from pygame import mixer____________________________________
   import pyperclip____________________________________________
   import threading____________________________________________
   1
   2
   3
   4
   5
   6
   7
   8
   #!/usr/bin/env python3.4

   from tkinter import *
   from tkinter import ttk
   import speech_recognition as sr
   from pygame import mixer
   import pyperclip
   import threading

    2. instantiating a tkinter object, creating a custom title, using a
       custom icon (instead of the default), and applying a custom tkinter
       style to the app.

   python

   root = tk()                              ___________________
   root.title('voice input')___________________________________
   root.iconbitmap('mic.ico')__________________________________
   style = ttk.style()_________________________________________
   style.theme_use('winnative')________________________________
   1
   2
   3
   4
   5
   root = tk()
   root.title('voice input')
   root.iconbitmap('mic.ico')
   style = ttk.style()
   style.theme_use('winnative')

    3. we   ll be using a microphone image for the speak button, so we have
       to initiate it via the photoimage method. we   re not gonna use it
       full size, but as a diminished (scaled) sample.

   python

   photo = photoimage(file='microphone.png').subsample(15,15)__
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   photo = photoimage(file='microphone.png').subsample(15,15)

    4. creating a guiding    label    widget.

   python

   label1 = ttk.label(root, text="speak -&gt; paste (or ctrl+v)
   label1.grid(row=0, column=1)________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   label1 = ttk.label(root, text="speak -&gt; paste (or ctrl+v)",
   font='courier 11 bold')
   label1.grid(row=0, column=1)

    5. this is the main part of the application in which we do the
       following:

       create a function to handle the click of the speak button
       play sound effect to prompt the user to speak
       initiate the voice recognizer, with some custom parameters
       listen to input
       play sound effect to let the user know that listening has stopped
       input processing (recognition)
       place the recognized message into clipboard
       handling of exceptions (via try     except)
   python

   def buttonclick():__________________________________________
   ____________________________________________________________
       mixer.init()____________________________________________
       mixer.music.load('chime1.mp3')__________________________
       mixer.music.play()______________________________________
   ____________________________________________________________
       r = sr.recognizer()                                     
       r.pause_threshold = 0.7                                 
       r.energy_threshold = 400________________________________
       ________________________________________________________
       with sr.microphone() as source:_________________________
           ____________________________________________________
           try:________________________________________________
               ________________________________________________
               audio = r.listen(source, timeout=5)_____________
   ____________________________________________________________
               # use your own api key. ________________________
   ____________________________________________________________
               message = str(r.recognize_google(audio, key='you
   ____________________________________________________________
               mixer.music.load('chime2.mp3')__________________
               mixer.music.play()______________________________
   ____________________________________________________________
               pyperclip.copy(message)_________________________
   ____________________________________________________________
           except sr.unknownvalueerror:________________________
               print("google id103 could not under
               ________________________________________________
           except sr.requesterror as e:________________________
               print("could not request results from google spe
   ____________________________________________________________
           else:_______________________________________________
               pass____________________________________________
   1
   2
   3
   4
   5
   6
   7
   8
   9
   10
   11
   12
   13
   14
   15
   16
   17
   18
   19
   20
   21
   22
   23
   24
   25
   26
   27
   28
   29
   30
   31
   32
   33
   def buttonclick():

       mixer.init()
       mixer.music.load('chime1.mp3')
       mixer.music.play()

       r = sr.recognizer()
       r.pause_threshold = 0.7
       r.energy_threshold = 400

       with sr.microphone() as source:

           try:

               audio = r.listen(source, timeout=5)

               # use your own api key.

               message = str(r.recognize_google(audio,
   key='your_google_api_key'))

               mixer.music.load('chime2.mp3')
               mixer.music.play()

               pyperclip.copy(message)

           except sr.unknownvalueerror:
               print("google id103 could not understand
   audio")

           except sr.requesterror as e:
               print("could not request results from google speech
   recognition service; {0}".format(e))

           else:
               pass

    6. we   ll be using threading to prevent the application from freezing
       or becoming unresponsive.

   python

   def thr():__________________________________________________
       t1 = threading.thread(target=buttonclick, daemon=true)__
       t1.start()______________________________________________
   ____________________________________________________________
   1
   2
   3
   def thr():
       t1 = threading.thread(target=buttonclick, daemon=true)
       t1.start()

    7. then, we   re creating the    speak    button, which, when clicked, calls
       the buttonclick() function which is invoked inside the thr()
       threading function.

   python

   mybutton1 = button(root, image=photo, width=150, command=thr
   mybutton1.grid(row=0, column=2)_____________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   mybutton1 = button(root, image=photo, width=150, command=thr,
   activebackground='#c1bfbf', bd=0)
   mybutton1.grid(row=0, column=2)

    8. since the application is minimalist in design, we can    force    it to
       stay on top of all windows. finally, we run the mainloop(), which
       is specific to tkinter.

   python

   root.wm_attributes('-topmost', 1)___________________________
   root.mainloop()_____________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   root.wm_attributes('-topmost', 1)
   root.mainloop()

conclusion

   you can download the single-piece code and the additional files (icons,
   sounds effects) in the [31]github repository i created for it. i hope
   it serves you at least as well as it serves me!
     __________________________________________________________________

   [32]get on my list of friends
   [33]more about my book stress and adaptation
   [34]more about my book persistent fat loss
   [35]more about my book ketone power
   [36]more about my book periodic fasting

related posts

     * [37]my steemit crypto experience     personal reflections [one year
       later] [38]my steemit crypto experience     personal reflections [one
       year later]
     * [39]my machine learning android app     getting into mobile
       development [40]my machine learning android app     getting into
       mobile development
     * [41]intermediate python     building a gui app with tkinter [video
       series] [42]intermediate python     building a gui app with tkinter
       [video series]

   categories[43]code, [44]productivity

3 replies to    voice input app in python     code release and overview [may
2017]   

    1.
   avatar gustavo says:
       [45]may 12, 2017 at 2:53 am
       very interesting. thanks for share.
       [46]reply
    2.
   avatar jasun says:
       [47]june 15, 2018 at 12:30 pm
       i like this app you have here, especially how simple it is. i have
       a similar one i   m trying to build but i am having some trouble with
       it. do you know how it could work with a continuous voice
       recognition instance (from what i learned that has to be in another
       thread) and to have it update a label or message box within the
       main gui based on the user commands and calling different functions
       based on those commands?
       my thought was to simply contain each loop within its own thread
       start each one. however the gui thread never starts, and no matter
       where i put the speech recognizer loop it works.
       any thoughts would be helpful. appreciate your work! thanks!
       [48]reply
         1.
        chris [49]chris says:
            [50]june 16, 2018 at 9:08 am
            i havent been able to figure that out either, even though i
            thought a lot about it too.
            [51]reply

leave a reply [52]cancel reply

   your email address will not be published. required fields are marked *

   comment
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   name * ______________________________

   email * ______________________________

   website ______________________________

   post comment

   current ye@r * 5.3_________________

   leave this field empty ____________________

post navigation

   [53]previous postprevious on the potential benefits of physiologic
   stressors     cold exposure
   [54]next postnext the five most mutated genes in cancers     [a 2017 icgc
   perspective]

my channel:

                    [55][youtube-698282_640-600x198.png]

be one of my patrons:

   [56][1000px-patreon_logo_with_wordmark.svg.png]

stay in touch:

   [57]join my list of 3,211 friends

my latest book:

                            [58][3dboxcover.png]

popular posts:

   [59]insights from the 105 books i read in 2016
   ----------------------------------------------------------- [60]my
   machine learning resources
   ----------------------------------------------------------- [61]how i
   lost fat
   ----------------------------------------------------------- [62]recent
   blood work
   ----------------------------------------------------------- [63]how to
   fight your brain's inborn flaws
   ----------------------------------------------------------- [64]belly
   fat progression by dexa
   ----------------------------------------------------------- [65]energy
   in the fasted state
   ----------------------------------------------------------- [66]flaws
   of flexible dieting
   -----------------------------------------------------------

   [67]proudly powered by wordpress

references

   1. https://cristivlad.com/feed/
   2. https://cristivlad.com/comments/feed/
   3. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/feed/
   4. https://cristivlad.com/on-the-potential-benefits-of-physiologic-stressors-cold-exposure/
   5. https://cristivlad.com/the-five-most-mutated-genes-in-cancers-a-2017-icgc-perspective/
   6. https://cristivlad.com/wp-json/oembed/1.0/embed?url=https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/
   7. https://cristivlad.com/wp-json/oembed/1.0/embed?url=https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/&format=xml
   8. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/#content
   9. https://cristivlad.com/
  10. https://cristivlad.com/
  11. https://www.amazon.com/dp/b01n5lg07y/
  12. http://www.amazon.com/dp/b017y3w8xc
  13. https://cristivlad.com/periodic-fasting-the-book/
  14. https://cristivlad.com/ketone-power-the-book/
  15. https://cristivlad.com/testosterone-protocol/
  16. http://www.amazon.com/dp/b011a8bqyy/
  17. http://www.amazon.com/dp/b019yaxs14/
  18. https://cristivlad.com/ketoif/
  19. https://cristivlad.com/category/romana/
  20. https://cristivlad.com/work-with-me/
  21. https://cristivlad.com/about/
  22. https://cristivlad.com/supplements-stack-1-what-im-using-and-what-ive-experimented-with/
  23. https://cristivlad.com/contact/
  24. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/
  25. https://cristivlad.com/author/chris/
  26. https://www.youtube.com/embed/9cdjanvmpti
  27. https://github.com/uberi/speech_recognition/
  28. http://pygame.org/
  29. https://pypi.python.org/pypi/pyperclip/
  30. https://cloud.google.com/speech/
  31. https://github.com/cristivlad25/voice-input
  32. http://cristivlad.us3.list-manage.com/subscribe?u=405bd127b393b4896b9abf3d2&id=92414b858e
  33. https://www.amazon.com/dp/b01n5lg07y/
  34. http://www.amazon.com/dp/b017y3w8xc/
  35. https://cristivlad.com/ketone-power-the-book/
  36. https://cristivlad.com/periodic-fasting-the-book/
  37. https://cristivlad.com/my-steemit-crypto-experience-personal-reflections-one-year-later/
  38. https://cristivlad.com/my-steemit-crypto-experience-personal-reflections-one-year-later/
  39. https://cristivlad.com/my-machine-learning-android-app-getting-into-mobile-development/
  40. https://cristivlad.com/my-machine-learning-android-app-getting-into-mobile-development/
  41. https://cristivlad.com/intermediate-python-building-a-gui-app-with-tkinter-video-series/
  42. https://cristivlad.com/intermediate-python-building-a-gui-app-with-tkinter-video-series/
  43. https://cristivlad.com/category/code/
  44. https://cristivlad.com/category/productivity/
  45. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/#comment-2071
  46. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/?replytocom=2071#respond
  47. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/#comment-2239
  48. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/?replytocom=2239#respond
  49. https://cristivlad.com/
  50. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/#comment-2240
  51. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/?replytocom=2240#respond
  52. https://cristivlad.com/voice-input-app-in-python-code-release-and-overview-may-2017/#respond
  53. https://cristivlad.com/on-the-potential-benefits-of-physiologic-stressors-cold-exposure/
  54. https://cristivlad.com/the-five-most-mutated-genes-in-cancers-a-2017-icgc-perspective/
  55. https://www.youtube.com/c/cristivladz
  56. https://www.patreon.com/cristivlad
  57. http://cristivlad.us3.list-manage.com/subscribe?u=405bd127b393b4896b9abf3d2&id=92414b858e
  58. https://www.amazon.com/dp/b01n5lg07y/
  59. https://cristivlad.com/insights-from-the-105-books-i-read-in-2016-on-self-education/
  60. https://cristivlad.com/beginning-machine-learning-a-few-resources-subjective/
  61. https://cristivlad.com/priviledged-metabolic-state-19-to-14-bodyfat-in-2-months-pics-ketogenic/
  62. https://cristivlad.com/blood-work-6-dec-2016-reliability/
  63. https://cristivlad.com/self-deception-how-to-fight-your-brains-inborn-flaws-and-biases-s-novella/
  64. https://cristivlad.com/my-belly-fat-progression-by-dxa-2013-2016/
  65. https://cristivlad.com/energy-metabolism-in-the-fasted-state-cahills-research/
  66. https://cristivlad.com/iifym-and-the-major-flaws-of-flexible-dieting/
  67. https://wordpress.org/
