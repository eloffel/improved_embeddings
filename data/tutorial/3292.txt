   #[1]github [2]recent commits to pytorch-playground:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]52
     * [35]star [36]1,413
     * [37]fork [38]363

[39]aaron-xichen/[40]pytorch-playground

   [41]code [42]issues 12 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   base pretrained models and datasets in pytorch (mnist, svhn, cifar10,
   cifar100, stl10, alexnet, vgg16, vgg19, resnet, inception, squeezenet)
   [47]pytorch-tutorial [48]pytorch-tutorials [49]pytorch [50]quantization
     * [51]10 commits
     * [52]3 branches
     * [53]0 releases
     * [54]fetching contributors
     * [55]mit

    1. [56]python 100.0%

   (button) python
   branch: master (button) new pull request
   [57]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/a
   [58]download zip

downloading...

   want to be notified of new releases in aaron-xichen/pytorch-playground?
   [59]sign in [60]sign up

launching github desktop...

   if nothing happens, [61]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [63]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [64]download the github extension for visual studio
   and try again.

   (button) go back
   [65]@aaron-xichen
   [66]aaron-xichen [67]merge pull request [68]#6 [69]from
   aaron-xichen/add-license-1 (button)    
create license

   latest commit [70]c62c470 dec 22, 2017
   [71]permalink
   type        name        latest commit message   commit time
        failed to load latest commit information.
        [72]cifar
        [73]id163      [74]clean up a little   may 9, 2017
        [75]mnist
        [76]script        [77]v0.1                may 8, 2017
        [78]stl10         [79]v0.2, fix some bugs may 8, 2017
        [80]svhn
        [81]utee          [82]add top5 acc        may 24, 2017
        [83].gitignore
        [84]license
        [85]readme.md
        [86]quantize.py   [87]add top5 acc        may 24, 2017
        [88]roadmap_zh.md

readme.md

   this is a playground for pytorch beginners, which contains predefined
   models on popular dataset. currently we support
     * mnist, svhn
     * cifar10, cifar100
     * stl10
     * alexnet
     * vgg16, vgg16_bn, vgg19, vgg19_bn
     * resnet18, resnet34, resnet50, resnet101, resnet152
     * squeezenet_v0, squeezenet_v1
     * inception_v3

   here is an example for mnist dataset. this will download the dataset
   and pre-trained model automatically.
import torch
from torch.autograd import variable
from utee import selector
model_raw, ds_fetcher, is_id163 = selector.select('mnist')
ds_val = ds_fetcher(batch_size=10, train=false, val=true)
for idx, (data, target) in enumerate(ds_val):
    data =  variable(torch.floattensor(data)).cuda()
    output = model_raw(data)

   also, if want to train the mlp model on mnist, simply run python
   mnist/train.py

install

     * pytorch (>=0.1.11) and torchvision from [89]official website, for
       example, cuda8.0 for python3.5
          + pip install
            http://download.pytorch.org/whl/cu80/torch-0.1.12.post2-cp35-c
            p35m-linux_x86_64.whl
          + pip install torchvision
     * tqdm
          + pip install tqdm
     * opencv
          + conda install -c menpo opencv3
     * setting pythonpath
          + export pythonpath=/path/to/pytorch-playground:$pythonpath

id163 dataset

   we provide precomputed id163 validation dataset with 224x224x3 size.
   we first resize the shorter size of image to 256, then we crop 224x224
   image in the center. then we encode the cropped images to jpg string
   and dump to pickle.
     * cd script
     * download the [90]val224_compressed.pkl
          + axel
            http://ml.cs.tsinghua.edu.cn/~chenxi/dataset/val224_compressed
            .pkl
     * python convert.py

quantization

   we also provide a simple demo to quantize these models to specified
   bit-width with several methods, including linear method, minmax method
   and non-linear method.

   python quantize.py --type cifar10 --quant_method linear --param_bits 8
   --fwd_bits 8 --bn_bits 8 --ngpu 1

top1 accuracy

   we evaluate the performance of popular dataset and models with linear
   quantized method. the bit-width of running mean and running variance in
   bn are 10 bits for all results. (except for 32-float)
   model              32-float     12-bit      10-bit       8-bit       6-bit
   [91]mnist            98.42       98.43       98.44       98.44       98.32
   [92]svhn             96.03       96.03       96.04       96.02       95.46
   [93]cifar10          93.78       93.79       93.80       93.58       90.86
   [94]cifar100         74.27       74.21       74.19       73.70       66.32
   [95]stl10            77.59       77.65       77.70       77.59       73.40
   [96]alexnet       55.70/78.42 55.66/78.41 55.54/78.39 54.17/77.29 18.19/36.25
   [97]vgg16         70.44/89.43 70.45/89.43 70.44/89.33 69.99/89.17 53.33/76.32
   [98]vgg19         71.36/89.94 71.35/89.93 71.34/89.88 70.88/89.62 56.00/78.62
   [99]resnet18      68.63/88.31 68.62/88.33 68.49/88.25 66.80/87.20
   19.14/36.49
   [100]resnet34     72.50/90.86 72.46/90.82 72.45/90.85 71.47/90.00
   32.25/55.71
   [101]resnet50     74.98/92.17 74.94/92.12 74.91/92.09 72.54/90.44  2.43/5.36
   [102]resnet101    76.69/93.30 76.66/93.25 76.22/92.90 65.69/79.54
   1.41/1.18
   [103]resnet152    77.55/93.59 77.51/93.62 77.40/93.54 74.95/92.46
   9.29/16.75
   [104]squeezenetv0 56.73/79.39 56.75/79.40 56.70/79.27 53.93/77.04
   14.21/29.74
   [105]squeezenetv1 56.52/79.13 56.52/79.15 56.24/79.03 54.56/77.33
   17.10/32.46
   [106]inceptionv3  76.41/92.78 76.43/92.71 76.44/92.73 73.67/91.34
   1.50/4.82

   note: id163 32-float models are directly from torchvision

selected arguments

   here we give an overview of selected arguments of quantize.py
   flag default value description & options
   type cifar10
   mnist,svhn,cifar10,cifar100,stl10,alexnet,vgg16,vgg16_bn,vgg19,vgg19_bn
   ,resent18,resent34,resnet50,resnet101,resnet152,squeezenet_v0,squeezene
   t_v1,inception_v3
   quant_method linear quantization method:linear,minmax,log,tanh
   param_bits 8 bit-width of weights and bias
   fwd_bits 8 bit-width of activation
   bn_bits 32 bit-width of running mean and running vairance
   overflow_rate 0.0 overflow rate threshold for linear quantization
   method
   n_samples 20 number of samples to make statistics for activation

     *    2019 github, inc.
     * [107]terms
     * [108]privacy
     * [109]security
     * [110]status
     * [111]help

     * [112]contact github
     * [113]pricing
     * [114]api
     * [115]training
     * [116]blog
     * [117]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [118]reload to refresh your
   session. you signed out in another tab or window. [119]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/aaron-xichen/pytorch-playground/commits/master.atom
   3. https://github.com/aaron-xichen/pytorch-playground#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/aaron-xichen/pytorch-playground
  32. https://github.com/join
  33. https://github.com/login?return_to=/aaron-xichen/pytorch-playground
  34. https://github.com/aaron-xichen/pytorch-playground/watchers
  35. https://github.com/login?return_to=/aaron-xichen/pytorch-playground
  36. https://github.com/aaron-xichen/pytorch-playground/stargazers
  37. https://github.com/login?return_to=/aaron-xichen/pytorch-playground
  38. https://github.com/aaron-xichen/pytorch-playground/network/members
  39. https://github.com/aaron-xichen
  40. https://github.com/aaron-xichen/pytorch-playground
  41. https://github.com/aaron-xichen/pytorch-playground
  42. https://github.com/aaron-xichen/pytorch-playground/issues
  43. https://github.com/aaron-xichen/pytorch-playground/pulls
  44. https://github.com/aaron-xichen/pytorch-playground/projects
  45. https://github.com/aaron-xichen/pytorch-playground/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/pytorch-tutorial
  48. https://github.com/topics/pytorch-tutorials
  49. https://github.com/topics/pytorch
  50. https://github.com/topics/quantization
  51. https://github.com/aaron-xichen/pytorch-playground/commits/master
  52. https://github.com/aaron-xichen/pytorch-playground/branches
  53. https://github.com/aaron-xichen/pytorch-playground/releases
  54. https://github.com/aaron-xichen/pytorch-playground/graphs/contributors
  55. https://github.com/aaron-xichen/pytorch-playground/blob/master/license
  56. https://github.com/aaron-xichen/pytorch-playground/search?l=python
  57. https://github.com/aaron-xichen/pytorch-playground/find/master
  58. https://github.com/aaron-xichen/pytorch-playground/archive/master.zip
  59. https://github.com/login?return_to=https://github.com/aaron-xichen/pytorch-playground
  60. https://github.com/join?return_to=/aaron-xichen/pytorch-playground
  61. https://desktop.github.com/
  62. https://desktop.github.com/
  63. https://developer.apple.com/xcode/
  64. https://visualstudio.github.com/
  65. https://github.com/aaron-xichen
  66. https://github.com/aaron-xichen/pytorch-playground/commits?author=aaron-xichen
  67. https://github.com/aaron-xichen/pytorch-playground/commit/c62c47052ef31c1c112154bd41c790c63c3169d1
  68. https://github.com/aaron-xichen/pytorch-playground/pull/6
  69. https://github.com/aaron-xichen/pytorch-playground/commit/c62c47052ef31c1c112154bd41c790c63c3169d1
  70. https://github.com/aaron-xichen/pytorch-playground/commit/c62c47052ef31c1c112154bd41c790c63c3169d1
  71. https://github.com/aaron-xichen/pytorch-playground/tree/c62c47052ef31c1c112154bd41c790c63c3169d1
  72. https://github.com/aaron-xichen/pytorch-playground/tree/master/cifar
  73. https://github.com/aaron-xichen/pytorch-playground/tree/master/id163
  74. https://github.com/aaron-xichen/pytorch-playground/commit/9e05ff3583d0a22d3e1034d02f942ced6107484b
  75. https://github.com/aaron-xichen/pytorch-playground/tree/master/mnist
  76. https://github.com/aaron-xichen/pytorch-playground/tree/master/script
  77. https://github.com/aaron-xichen/pytorch-playground/commit/5a46cf4bbd522e74212cb4afb25100ac51b5bb13
  78. https://github.com/aaron-xichen/pytorch-playground/tree/master/stl10
  79. https://github.com/aaron-xichen/pytorch-playground/commit/a70a5423a3875d1b52b0cc0248260550e0325287
  80. https://github.com/aaron-xichen/pytorch-playground/tree/master/svhn
  81. https://github.com/aaron-xichen/pytorch-playground/tree/master/utee
  82. https://github.com/aaron-xichen/pytorch-playground/commit/f8d9059a41fb9202ca5a4f7662dfb836dcd5f695
  83. https://github.com/aaron-xichen/pytorch-playground/blob/master/.gitignore
  84. https://github.com/aaron-xichen/pytorch-playground/blob/master/license
  85. https://github.com/aaron-xichen/pytorch-playground/blob/master/readme.md
  86. https://github.com/aaron-xichen/pytorch-playground/blob/master/quantize.py
  87. https://github.com/aaron-xichen/pytorch-playground/commit/f8d9059a41fb9202ca5a4f7662dfb836dcd5f695
  88. https://github.com/aaron-xichen/pytorch-playground/blob/master/roadmap_zh.md
  89. http://pytorch.org/
  90. http://ml.cs.tsinghua.edu.cn/~chenxi/dataset/val224_compressed.pkl
  91. http://ml.cs.tsinghua.edu.cn/~chenxi/pytorch-models/mnist-b07bb66b.pth
  92. http://ml.cs.tsinghua.edu.cn/~chenxi/pytorch-models/svhn-f564f3d8.pth
  93. http://ml.cs.tsinghua.edu.cn/~chenxi/pytorch-models/cifar10-d875770b.pth
  94. http://ml.cs.tsinghua.edu.cn/~chenxi/pytorch-models/cifar100-3a55a987.pth
  95. http://ml.cs.tsinghua.edu.cn/~chenxi/pytorch-models/stl10-866321e9.pth
  96. https://download.pytorch.org/models/alexnet-owt-4df8aa71.pth
  97. https://download.pytorch.org/models/vgg16-397923af.pth
  98. https://download.pytorch.org/models/vgg19-dcbb9e9d.pth
  99. https://download.pytorch.org/models/resnet18-5c106cde.pth
 100. https://download.pytorch.org/models/resnet34-333f7ec4.pth
 101. https://download.pytorch.org/models/resnet50-19c8e357.pth
 102. https://download.pytorch.org/models/resnet101-5d3b4d8f.pth
 103. https://download.pytorch.org/models/resnet152-b121ed2d.pth
 104. https://download.pytorch.org/models/squeezenet1_0-a815701f.pth
 105. https://download.pytorch.org/models/squeezenet1_1-f364aa15.pth
 106. https://download.pytorch.org/models/inception_v3_google-1a9a5a14.pth
 107. https://github.com/site/terms
 108. https://github.com/site/privacy
 109. https://github.com/security
 110. https://githubstatus.com/
 111. https://help.github.com/
 112. https://github.com/contact
 113. https://github.com/pricing
 114. https://developer.github.com/
 115. https://training.github.com/
 116. https://github.blog/
 117. https://github.com/about
 118. https://github.com/aaron-xichen/pytorch-playground
 119. https://github.com/aaron-xichen/pytorch-playground

   hidden links:
 121. https://github.com/
 122. https://github.com/aaron-xichen/pytorch-playground
 123. https://github.com/aaron-xichen/pytorch-playground
 124. https://github.com/aaron-xichen/pytorch-playground
 125. https://help.github.com/articles/which-remote-url-should-i-use
 126. https://github.com/aaron-xichen/pytorch-playground#install
 127. https://github.com/aaron-xichen/pytorch-playground#id163-dataset
 128. https://github.com/aaron-xichen/pytorch-playground#quantization
 129. https://github.com/aaron-xichen/pytorch-playground#top1-accuracy
 130. https://github.com/aaron-xichen/pytorch-playground#selected-arguments
 131. https://github.com/
