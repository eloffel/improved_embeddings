   #[1]chris mccormick

[2]chris mccormick    [3]about    [4]tutorials    [5]archive

opencv sift tutorial

   24 jan 2013

   this tutorial covers sift feature extraction, and matching sift
   features between two images using opencv   s    matcher_simple    example. it
   does not go as far, though, as setting up an object recognition demo,
   where you can identify a trained object in any image.

opencv setup & project

   if you haven   t already, get opencv installed and a project setup in
   visual studio. you can find some instructions for doing that [6]here.

   i   ve also uploaded my visual studio project, [7]here. it assumes you
   have opencv 2.4.3 installed to c:\opencv\, and that you   ve added opencv
   to your path as described in the instructions i linked to above. if you
   have a different version you   ll have to change the referenced library
   names.

   matcher_simple.cpp    example

   if you look under    c:\opencv\samples\cpp" you   ll find a big
   disorganized mess of example source files and images.

   one of the examples,    matcher_simple.cpp   , provides an introduction to
   feature extraction. it uses surf by default, but you can change it to
   sift with a simple find-and-replace of    surf    with    sift   !

   here is the only documentation i   ve been able to find on the example:

   http://docs.opencv.org/doc/user_guide/ug_features2d.html

   the documentation doesn   t provide much insight into the significance of
   the example, and disappointingly doesn   t offer any recommendations for
   example images to play with.

   here   s what the matcher_simple example shows you how to do, though:
    1. load two images
    2. detect keypoints in each image
    3. extract sift features for those keypoints
    4. find the closest matching features between the two images
    5. display the images side-by-side and draw lines connecting the
       matching features

   i have a sequence of images that i   ve captured of me holding a flash
   card in different positions and angles. the flash card has a penguin on
   it. here are the two frames from the sequence that i   ve used for this
   example.

   [8]frame_18 [9]frame_20

   i took two images from the sequence, and cropped one of them down to
   just the penguin, then ran the example on the two images. below is the
   result.

   [10]siftmatching

   the example code is extracting all of the sift features that it can
   find in both images. then, for each feature in the left image, it   s
   finding the closest matching feature in the image on the right. it
   draws a line from each keypoint in the left image to its closest match
   in the right image. i can see about five features that are clearly
   matched incorrectly, but it looks like the majority of them are
   correct.

   you can probably see why i cropped one of the images. if i had two full
   images, it would be matching features that i didn   t care about, like
   those on the shutters in the background.

id164 with sift

   simply matching the features between two images is a good illustration
   of how sift works, but it doesn   t get you all the way to actually
   recognizing a trained object. for example, i   d like to set up an
   example that is able to reliably detect the penguin flash card in a
   video stream. when i   ve found some example code, i   ll write another
   post.
   [ins: :ins]
   please enable javascript to view the [11]comments powered by disqus.

related posts

     * [12]the inner workings of id97 12 mar 2019
     * [13]applying id97 to recommenders and advertising 15 jun 2018
     * [14]product quantizers for id92 tutorial part 2 22 oct 2017

      2019. all rights reserved.

references

   1. http://mccormickml.com/atom.xml
   2. http://mccormickml.com/
   3. http://mccormickml.com/about/
   4. http://mccormickml.com/tutorials/
   5. http://mccormickml.com/archive/
   6. http://chrisjmccormick.wordpress.com/2013/01/24/opencv-setup-in-visual-studio-2010/
   7. https://docs.google.com/file/d/0b-kwgxjrqkq7z3nla1rzyzlszuu/edit
   8. http://chrisjmccormick.files.wordpress.com/2013/01/frame_18.png
   9. http://chrisjmccormick.files.wordpress.com/2013/01/frame_20.png
  10. http://chrisjmccormick.files.wordpress.com/2013/01/siftmatching.png
  11. https://disqus.com/?ref_noscript
  12. http://mccormickml.com/2019/03/12/the-inner-workings-of-id97/
  13. http://mccormickml.com/2018/06/15/applying-id97-to-recommenders-and-advertising/
  14. http://mccormickml.com/2017/10/22/product-quantizer-tutorial-part-2/
