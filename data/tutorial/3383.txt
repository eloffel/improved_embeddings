    #[1]id111 online    feed [2]id111 online    comments feed
   [3]id111 online    fasttext for fast id31 comments
   feed [4]dive into tensorflow, part iv: hello mnist [5]dive into
   tensorflow, part v: deep mnist [6]alternate [7]alternate

   [ins: :ins]

   [8]   



   javascript is disabled. please enable javascript on your browser to
   best view this site.

[9]id111 online

   search for: ____________________ search

id111 | text analysis | text process | natural language processing

   id111 online
     * [10]home
     * [11]textanalysis
     * [12]keywordextraction
     * [13]textsummarization
     * [14]wordsimilarity
     * [15]about

   [16]home   [17]id31   fasttext for fast id31
   [ins: :ins]

post navigation

   [18]    dive into tensorflow, part iv: hello mnist
   [19]dive into tensorflow, part v: deep mnist    

fasttext for fast id31

   posted on [20]august 7, 2016 by [21]textmineraugust 8, 2016
   [22]deep learning specialization on coursera

   [23]fasttext is a library for fast text representation and
   classification which recently launched by facebookresearch team. the
   related papers are    [24]enriching word vectors with subword
   information    and    [25]bag of tricks for efficient text classification   .
   i   m very interested in the [26]text classification method in the
   fasttext, so test it with the [27]large movie review dataset for fast
   [28]id31.
   [ins: :ins]

   first get the fasttext code and compile it:

   git clone https://github.com/facebookresearch/fasttext.git
   cd fasttext
   make

     c++ -pthread -o3 -funroll-loops -std=c++0x -c src/args.cc
     c++ -pthread -o3 -funroll-loops -std=c++0x -c src/dictionary.cc
     c++ -pthread -o3 -funroll-loops -std=c++0x -c src/matrix.cc
     c++ -pthread -o3 -funroll-loops -std=c++0x -c src/vector.cc
     c++ -pthread -o3 -funroll-loops -std=c++0x -c src/model.cc
     c++ -pthread -o3 -funroll-loops -std=c++0x -c src/utils.cc
     c++ -pthread -o3 -funroll-loops -std=c++0x args.o dictionary.o
     matrix.o vector.o model.o utils.o src/fasttext.cc -o fasttext

   then run the classification-example.sh:
   sh -x classification-example.sh

   + resultdir=result
   + datadir=data
   + mkdir -p result
   + mkdir -p data
   + [ ! -f data/dbpedia.train ]
   + wget -c https://googledrive.com/host/0bz8a_dbh9qhbq2vic1kxmmzzq1k -o
   data/dbpedia_csv.tar.gz
   --2016-08-07 16:50:33--
   https://googledrive.com/host/0bz8a_dbh9qhbq2vic1kxmmzzq1k
   + tar -xzvf data/dbpedia_csv.tar.gz -c data
   dbpedia_csv/
   dbpedia_csv/classes.txt
   dbpedia_csv/test.csv
   dbpedia_csv/train.csv
   dbpedia_csv/readme.txt
   + cat data/dbpedia_csv/train.csv
   + normalize_text
   + tr [:upper:] [:lower:]
   + sed -e s/^/__label__/g
   + sed -e s/'/ ' /g -e s/"//g -e s/\./ \. /g -e s/
   / /g -e s/,/ , /g -e s/(/ ( /g -e s/)/ ) /g -e s/\!/ \! /g -e s/\?/ \?
   /g -e s/\;/ /g -e s/\:/ /g
   + tr -s
   + myshuf
   + perl -mlist::util=shuffle -e print shuffle(<>);
   + cat data/dbpedia_csv/test.csv
   + normalize_text
   + sed -e s/^/__label__/g
   + sed -e s/'/ ' /g -e s/"//g+ -e s/\./ \. /gtr -e s/
   / /g [:upper:] -e [:lower:] s/,/ , /g
   -e s/(/ ( /g -e s/)/ ) /g -e s/\!/ \! /g -e s/\?/ \? /g -e s/\;/ /g -e
   s/\:/ /g
   + tr -s
   + myshuf
   + perl -mlist::util=shuffle -e print shuffle(<>);
   + make
   make: nothing to be done for 'all'.
   + ./fasttext supervised -input data/dbpedia.train -output
   result/dbpedia -dim 10 -lr 0.1 -wordngrams 2 -mincount 1 -bucket
   10000000 -epoch 5 -thread 4
   read 32m words
   progress: 0.0% words/sec/thread: 338554 lr: 0.099994 loss: 2.654805
   eta: 0h2progress: 0.0% words/sec/thread: 497461 lr: 0.099982 loss:
   2.654805 eta: 0h1progress: 0.0% words/sec/thread: 713565 lr: 0.099957
   loss: 2.654805 eta: 0h0progress: 0.1% words/sec/thread: 824608 lr:
   0.099933 loss: 2.654805 eta: 0h0progress: 0.1% words/sec/thread: 956788
   lr: 0.099902 loss: 2.654805 eta: 0h0progress: 0.1% words/sec/thread:
   1002078 lr: 0.099878 loss: 2.654805 eta: 0hprogress: 0.1%
   words/sec/thread: 1042413 lr: 0.099853 loss: 2.654727 eta: 0hprogress:
   0.2% words/sec/thread: 1113521 lr: 0.099823 loss: 2.654189 eta: 0h
   ......
   train time: 15.000000 sec
   + ./fasttext test result/dbpedia.bin data/dbpedia.test
   p@1: 0.984
   number of examples: 70000
   + ./fasttext predict result/dbpedia.bin data/dbpedia.test

   dbpedia_csv.tar.gz data is the dbpedia ontology classification dataset:

     the dbpedia ontology classification dataset is constructed by
     picking 14 non-overlapping classes from dbpedia 2014. they are
     listed in classes.txt. from each of thse 14 ontology classes, we
     randomly choose 40,000 training samples and 5,000 testing samples.
     therefore, the total size of the training dataset is 560,000 and
     testing dataset 70,000.

     the files train.csv and test.csv contain all the training samples as
     comma-sparated values. there are 3 columns in them, corresponding to
     class index (1 to 14), title and content. the title and content are
     escaped using double quotes (   ), and any internal double quote is
     escaped by 2 double quotes (      ). there are no new lines in title or
     content.

   back to the [29]large movie review dataset: aclimdb_v1.tar.gz, we can
   follow the steps to get a fast id31 result:

     the core dataset contains 50,000 reviews split evenly into 25k train
     and 25k test sets. the overall distribution of labels is balanced
     (25k pos and 25k neg).

   first we write a script to preprocess the positive and negative movie
   reviews data to output_train and output_test data:

   head -n 10 output_train

     pos,bromwell high is a cartoon comedy. it ran at the same time as
     some other programs about school life, such as    teachers   . my 35
     years in the teaching profession lead me to believe that bromwell
     high   s satire is much closer to reality than is    teachers   . the
     scramble to survive financially, the insightful students who can see
     right through their pathetic teachers    pomp, the pettiness of the
     whole situation, all remind me of the schools i knew and their
     students. when i saw the episode in which a student repeatedly tried
     to burn down the school, i immediately recalled           at          . high. a
     classic line: inspector: i   m here to sack one of your teachers.
     student: welcome to bromwell high. i expect that many adults of my
     age think that bromwell high is far fetched. what a pity that it
     isn   t!
           

   head -n 10 output_test

     pos,i went and saw this movie last night after being coaxed to by a
     few friends of mine. i   ll admit that i was reluctant to see it
     because from what i knew of ashton kutcher he was only able to do
     comedy. i was wrong. kutcher played the character of jake fischer
     very well, and kevin costner played ben randall with such
     professionalism. the sign of a good movie is that it can toy with
     our emotions. this one did exactly that. the entire theater (which
     was sold out) was overcome by laughter during the first half of the
     movie, and were moved to tears during the second half. while exiting
     the theater i not only saw many women in tears, but many full grown
     men as well, trying desperately not to let anyone see them crying.
     this movie was great, and i suggest that you go see it before you
     judge.
           

   then we copy and modify classification-example.sh to
   classification-lmdb-example.sh:
#!/bin/sh
#
# copyright (c) 2016-present, facebook, inc.
# all rights reserved.
#
# this source code is licensed under the bsd-style license found in the
# license file in the root directory of this source tree. an additional grant
# of patent rights can be found in the patents file in the same directory.
#

myshuf() {
  perl -mlist::util=shuffle -e 'print shuffle(<>);' "$@";
}

normalize_text() {
  tr '[:upper:]' '[:lower:]' | sed -e 's/^/__label__/g' | \
    sed -e "s/'/ ' /g" -e 's/"//g' -e 's/\./ \. /g' -e 's/
/ /g' \
        -e 's/,/ , /g' -e 's/(/ ( /g' -e 's/)/ ) /g' -e 's/\!/ \! /g' \
        -e 's/\?/ \? /g' -e 's/\;/ /g' -e 's/\:/ /g' | tr -s " " | myshuf
}

resultdir=lmdbresult
datadir=lmdbdata

mkdir -p "${resultdir}"
mkdir -p "${datadir}"

if [ ! -f "${datadir}/lmdb.train" ]
then
  cat "${datadir}/output_train" | normalize_text > "${datadir}/lmdb.train"
  cat "${datadir}/output_test" | normalize_text > "${datadir}/lmdb.test"
fi

./fasttext supervised -input "${datadir}/lmdb.train" -output "${resultdir}/lmdb"
 -dim 10 -lr 0.1 -wordngrams 2 -mincount 1 -bucket 10000000 -epoch 5 -thread 4

./fasttext test "${resultdir}/lmdb.bin" "${datadir}/lmdb.test"

./fasttext predict "${resultdir}/lmdb.bin" "${datadir}/lmdb.test" > "${resultdir
}/lmdb.test.predict"

   here we used the same normalize_text() for lmdb train data and test
   data and add __label__ for the pos or neg tag:

     textminer@textminer:~/text/fasttext/lmdbdata$ wc -l lmdb.train
     25000 lmdb.train
     textminer@textminer:~/text/fasttext/lmdbdata$ head -n 1 lmdb.train
     __label__neg , a female vampire kills young women and paints with
     their blood . she has an assistant who doesn     t want to be a
     vampire , so he has to do what she orders or be turned into a blood
     sucker . after a few kills , the assistant gets remorse and falls in
     love with a homeless girl . what can i say about this movie ? that
     its pacing is over-slow , that it has some strange sound effects (
     never a bite sounded so strange ) and ambiance ( new jazz here i
     come ) and that lights don     t seem to be included on the set . it
     looks like an auteur horror movie with all the self-sufficiency
     inside . the plot is completely stupid and as you can guess , it     s
     the female vampire who explains how to kill her even if she doesn    
     t have to do it of course , crosses , light , garlic and sticks don
         t work . it     s not even a funny lousy movie . perhaps with some
     friends and a lot of beers , it can     t have its funny sides ( to be
     honest , it     s funny during 10     15 minutes near the end of the
     movie ) . don     t be fooled by the troma sticker , it     s one the
     bad movie they present .
     textminer@textminer:~/text/fasttext/lmdbdata$ wc -l lmdb.test
     25000 lmdb.test
     textminer@textminer:~/text/fasttext/lmdbdata$ head -n 1 lmdb.test
     __label__pos , this is the true story of the great pianist and jazz
     singer/legend ray charles ( oscar , bafta and golden globe winning
     jamie foxx ) . he was born in a poor african american-town , and he
     went blind at 7 years old , but with his skills of touch and hearing
     , this is what would later in life would lead him to stardom . by
     the 1960     s he had accomplished his dream , and selling records in
     millions , and leading the charts with songs and albums . but the
     story also showed his downfalls , including the separation from his
     wife and child , because of his affair with a band member , his drug
     and alcohol use , and going to prison because of this . also
     starring regina king as margie hendricks , kerry washington as della
     bea robinson , clifton powell as jeff brown , harry j . lennix as
     joe adams , bokeem woodbine as fathead newman , aunjanue ellis as
     mary ann fisher , sharon warren as aretha robinson , c . j . sanders
     as young ray robinson , curtis armstrong as ahmet ertegun and
     richard schiff as jerry wexler . it is a great story with a great
     singer impression , the songs , including hit the road jack , are
     the highlights . it won the oscar for best sound mixing , and it was
     nominated for best costume design , best director for taylor
     hackford , best editing and best motion picture of the year , it won
     the bafta for best sound , and it was nominated for the anthony
     asquith award for film music for craig armstrong and best original
     screenplay , and it was nominated the golden globe for best motion
     picture     musical or comedy . it was number 99 on 100 years , 100
     cheers . very good !

   the data has been shuffled. run the script, we get:

   sh -x classification-lmdb-example.sh
   + resultdir=lmdbresult
   + datadir=lmdbdata
   + mkdir -p lmdbresult
   + mkdir -p lmdbdata
   + [ ! -f lmdbdata/lmdb.train ]
   + cat lmdbdata/output_train
   + normalize_text
   + tr -s
   + tr [:upper:] [:lower:]+
   sed -e+ s/^/__label__/g
   myshuf
   + perl -mlist::util=shuffle -e print shuffle(<>);
   + sed -e s/'/ ' /g -e s/"//g -e s/\./ \. /g -e s/
   / /g -e s/,/ , /g -e s/(/ ( /g -e s/)/ ) /g -e s/\!/ \! /g -e s/\?/ \?
   /g -e s/\;/ /g -e s/\:/ /g
   + cat lmdbdata/output_test
   + normalize_text
   + tr [:upper:] [:lower:]
   + sed -e s/^/__label__/g
   + sed+ -e s/'/ ' /g -e s/"//g -e s/\./ \. /g -e s/
   / /gtr -e s/,/ , /g -s -e s/(/ ( /g
   -e s/)/ ) /g -e s/\!/ \! /g -e s/\?/ \? /g -e s/\;/ /g -e s/\:/ /g
   + myshuf
   + perl -mlist::util=shuffle -e print shuffle(<>);
   + ./fasttext supervised -input lmdbdata/lmdb.train -output
   lmdbresult/lmdb -dim 10 -lr 0.1 -wordngrams 2 -mincount 1 -bucket
   10000000 -epoch 5 -thread 4
   read 6m words
   progress: 0.0% words/sec/thread: 567700 lr: 0.099969 loss: 0.695051
   eta: 0h0progress: 0.1% words/sec/thread: 664640 lr: 0.099909 loss:
   0.694964 eta: 0h0progress: 0.2% words/sec/thread: 749614 lr: 0.099820
   loss: 0.694986 eta: 0h0progress: 0.3%
   ......
   progress: 98.1% words/sec/thread: 2893504 lr: 0.001874 loss: 0.459213
   eta: 0progress: 98.2% words/sec/thread: 2892876 lr: 0.001786 loss:
   0.459080 eta: 0progress: 98.3% words/sec/thread: 2893128 lr: 0.001666
   loss: 0.458800 eta: 0progress: 98.5% words/sec/thread: 2894126 lr:
   0.001517 loss: 0.458699 eta: 0progress: 98.6% words/sec/thread: 2894408
   lr: 0.001398 loss: 0.458508 eta: 0progress: 98.7% words/sec/thread:
   2894636 lr: 0.001279 loss: 0.458280 eta: 0progress: 98.8%
   words/sec/thread: 2894771 lr: 0.001158 loss: 0.458114 eta: 0progress:
   99.0% words/sec/thread: 2895030 lr: 0.001040 loss: 0.457879 eta:
   0progress: 99.1% words/sec/thread: 2895397 lr: 0.000919 loss: 0.457723
   eta: 0progress: 99.2% words/sec/thread: 2895666 lr: 0.000799 loss:
   0.457522 eta: 0progress: 99.3% words/sec/thread: 2895922 lr: 0.000680
   loss: 0.457340 eta: 0progress: 99.4% words/sec/thread: 2896141 lr:
   0.000561 loss: 0.457192 eta: 0progress: 99.6% words/sec/thread: 2896448
   lr: 0.000441 loss: 0.457020 eta: 0progress: 99.7% words/sec/thread:
   2896746 lr: 0.000322 loss: 0.456832 eta: 0progress: 99.8%
   words/sec/thread: 2896189 lr: 0.000233 loss: 0.456715 eta: 0progress:
   99.9% words/sec/thread: 2897281 lr: 0.000084 loss: 0.456515 eta:
   0progress: 100.0% words/sec/thread: 2896822 lr: 0.000001 loss: 0.456412
   eta: progress: 100.0% words/sec/thread: 2896817 lr: 0.000001 loss:
   0.456412 eta: 0h0m
   train time: 3.000000 sec
   + ./fasttext test lmdbresult/lmdb.bin lmdbdata/lmdb.test
   p@1: 0.86
   number of examples: 25000
   + ./fasttext predict lmdbresult/lmdb.bin lmdbdata/lmdb.test

   the train time is really fast, and the accuracy for this [30]sentiment
   analysis is almost compared with other methods.

   posted by [31]textminer

related posts:

    1. [32]dive into nltk, part ix: from text classification to sentiment
       analysis
    2. [33]we have launched the professional text id31 api
       on mashape
    3. [34]dive into nltk, part viii: using external maximum id178
       modeling libraries for text classification
    4. [35]getting started with id31 and opinion mining

   [36]deep learning specialization on coursera

   posted in [37]id31, [38]text classification tagged
   [39]dbpedia ontology classification dataset, [40]fasttext, [41]large
   movie review dataset, [42]id31, [43]id31
   api, [44]sentiment analyzer, [45]text classification, [46]text
   classifier [47]permalink

post navigation

   [48]    dive into tensorflow, part iv: hello mnist
   [49]dive into tensorflow, part v: deep mnist    
     __________________________________________________________________

comments

fasttext for fast id31     no comments

leave a reply [50]cancel reply

   your email address will not be published. required fields are marked *

   comment
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   name * ______________________________

   email * ______________________________

   website ______________________________

   [ ] save my name, email, and website in this browser for the next time
   i comment.

   post comment

   [51][dlai-logo-final-minus-font-plus-white-backg.png]
   [show?id=9iqcvd3eeqc&bids=541296.11421701896&type=2&subid=0]

   search for: ____________________ search

   [ins: :ins]

recent posts

     * [52]deep learning practice for nlp: large movie review data
       id31 from scratch
     * [53]best coursera courses for data science
     * [54]best coursera courses for machine learning
     * [55]best coursera courses for deep learning
     * [56]dive into nlp with deep learning, part i: getting started with
       dl4nlp

recent comments

     * textminer on [57]training id97 model on english wikipedia by
       gensim
     * ankit ramani on [58]training id97 model on english wikipedia by
       gensim
     * vincent on [59]training id97 model on english wikipedia by
       gensim
     * muhammad amin nadim on [60]andrew ng deep learning specialization:
       best deep learning course for beginners and deep learners
     * saranya on [61]training id97 model on english wikipedia by
       gensim

archives

     * [62]november 2018
     * [63]august 2018
     * [64]july 2018
     * [65]june 2018
     * [66]january 2018
     * [67]october 2017
     * [68]september 2017
     * [69]august 2017
     * [70]july 2017
     * [71]may 2017
     * [72]april 2017
     * [73]march 2017
     * [74]december 2016
     * [75]october 2016
     * [76]august 2016
     * [77]july 2016
     * [78]june 2016
     * [79]may 2016
     * [80]april 2016
     * [81]february 2016
     * [82]december 2015
     * [83]november 2015
     * [84]september 2015
     * [85]may 2015
     * [86]april 2015
     * [87]march 2015
     * [88]february 2015
     * [89]january 2015
     * [90]december 2014
     * [91]november 2014
     * [92]october 2014
     * [93]september 2014
     * [94]july 2014
     * [95]june 2014
     * [96]may 2014
     * [97]april 2014
     * [98]january 2014

categories

     * [99]ainlp
     * [100]coursera course
     * [101]data science
     * [102]deep learning
     * [103]dl4nlp
     * [104]how to use mashape api
     * [105]keras
     * [106]machine learning
     * [107]id39
     * [108]nlp
     * [109]nlp tools
     * [110]nltk
     * [111]id31
     * [112]tensorflow
     * [113]text analysis
     * [114]text classification
     * [115]id111
     * [116]text processing
     * [117]text similarity
     * [118]text summarization
     * [119]textanalysis api
     * [120]uncategorized
     * [121]id27
     * [122]id40

meta

     * [123]log in
     * [124]entries rss
     * [125]comments rss
     * [126]wordpress.org

     [127]text analysis online

     [128]text summarizer

     [129]text processing

     [130]word similarity

     [131]best coursera course

     [132]best coursera courses

     [133]elastic patent

     2019 - [134]id111 online - [135]weaver xtreme theme

   [136]   

references

   visible links
   1. https://textminingonline.com/feed
   2. https://textminingonline.com/comments/feed
   3. https://textminingonline.com/fasttext-for-fast-sentiment-analysis/feed
   4. https://textminingonline.com/dive-into-tensorflow-part-iv-hello-mnist
   5. https://textminingonline.com/dive-into-tensorflow-part-v-deep-mnist
   6. https://textminingonline.com/wp-json/oembed/1.0/embed?url=https://textminingonline.com/fasttext-for-fast-sentiment-analysis
   7. https://textminingonline.com/wp-json/oembed/1.0/embed?url=https://textminingonline.com/fasttext-for-fast-sentiment-analysis&format=xml
   8. https://textminingonline.com/fasttext-for-fast-sentiment-analysis#page-bottom
   9. https://textminingonline.com/
  10. https://textminingonline.com/
  11. http://textanalysisonline.com/#new_tab
  12. http://keywordextraction.net/#new_tab
  13. http://textsummarization.net/#new_tab
  14. https://wordsimilarity.com/#new_tab
  15. https://textminingonline.com/about
  16. https://textminingonline.com/
  17. https://textminingonline.com/category/sentiment-analysis
  18. https://textminingonline.com/dive-into-tensorflow-part-iv-hello-mnist
  19. https://textminingonline.com/dive-into-tensorflow-part-v-deep-mnist
  20. https://textminingonline.com/fasttext-for-fast-sentiment-analysis
  21. https://textminingonline.com/author/yuzhen
  22. https://click.linksynergy.com/fs-bin/click?id=9iqcvd3eeqc&offerid=467035.416&subid=0&type=4
  23. https://github.com/facebookresearch/fasttext
  24. https://arxiv.org/abs/1607.04606
  25. https://arxiv.org/abs/1607.01759
  26. http://textminingonline.com/category/text-classification
  27. http://ai.stanford.edu/~amaas/data/sentiment/
  28. http://sentimentanalysis.net/
  29. http://ai.stanford.edu/~amaas/data/sentiment/
  30. http://sentimentanalysis.net/
  31. http://textminingonline.com/
  32. https://textminingonline.com/dive-into-nltk-part-ix-from-text-classification-to-sentiment-analysis
  33. https://textminingonline.com/we-have-launched-the-professional-text-sentiment-analysis-api-on-mashape
  34. https://textminingonline.com/dive-into-nltk-part-viii-using-external-maximum-id178-modeling-libraries-for-text-classification
  35. https://textminingonline.com/getting-started-with-sentiment-analysis-and-opinion-mining
  36. https://click.linksynergy.com/fs-bin/click?id=9iqcvd3eeqc&offerid=467035.414&subid=0&type=4
  37. https://textminingonline.com/category/sentiment-analysis
  38. https://textminingonline.com/category/text-classification
  39. https://textminingonline.com/tag/dbpedia-ontology-classification-dataset
  40. https://textminingonline.com/tag/fasttext
  41. https://textminingonline.com/tag/large-movie-review-dataset
  42. https://textminingonline.com/tag/sentiment-analysis
  43. https://textminingonline.com/tag/sentiment-analysis-api
  44. https://textminingonline.com/tag/sentiment-analyzer
  45. https://textminingonline.com/tag/text-classification-2
  46. https://textminingonline.com/tag/text-classifier
  47. https://textminingonline.com/fasttext-for-fast-sentiment-analysis
  48. https://textminingonline.com/dive-into-tensorflow-part-iv-hello-mnist
  49. https://textminingonline.com/dive-into-tensorflow-part-v-deep-mnist
  50. https://textminingonline.com/fasttext-for-fast-sentiment-analysis#respond
  51. https://click.linksynergy.com/link?id=9iqcvd3eeqc&offerid=541296.11421701896&type=2&murl=https://www.coursera.org/specializations/deep-learning
  52. https://textminingonline.com/deep-learning-practice-for-nlp-large-movie-review-data-sentiment-analysis-from-scratch
  53. https://textminingonline.com/best-coursera-courses-for-data-science
  54. https://textminingonline.com/best-coursera-courses-for-machine-learning
  55. https://textminingonline.com/best-coursera-courses-for-deep-learning
  56. https://textminingonline.com/dive-into-nlp-with-deep-learning-part-i-getting-started-with-dl4nlp
  57. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-138841
  58. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-138807
  59. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-138723
  60. https://textminingonline.com/andrew-ng-deep-learning-specialization-best-deep-learning-course-for-beginners-and-deep-learners#comment-138475
  61. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-137923
  62. https://textminingonline.com/2018/11
  63. https://textminingonline.com/2018/08
  64. https://textminingonline.com/2018/07
  65. https://textminingonline.com/2018/06
  66. https://textminingonline.com/2018/01
  67. https://textminingonline.com/2017/10
  68. https://textminingonline.com/2017/09
  69. https://textminingonline.com/2017/08
  70. https://textminingonline.com/2017/07
  71. https://textminingonline.com/2017/05
  72. https://textminingonline.com/2017/04
  73. https://textminingonline.com/2017/03
  74. https://textminingonline.com/2016/12
  75. https://textminingonline.com/2016/10
  76. https://textminingonline.com/2016/08
  77. https://textminingonline.com/2016/07
  78. https://textminingonline.com/2016/06
  79. https://textminingonline.com/2016/05
  80. https://textminingonline.com/2016/04
  81. https://textminingonline.com/2016/02
  82. https://textminingonline.com/2015/12
  83. https://textminingonline.com/2015/11
  84. https://textminingonline.com/2015/09
  85. https://textminingonline.com/2015/05
  86. https://textminingonline.com/2015/04
  87. https://textminingonline.com/2015/03
  88. https://textminingonline.com/2015/02
  89. https://textminingonline.com/2015/01
  90. https://textminingonline.com/2014/12
  91. https://textminingonline.com/2014/11
  92. https://textminingonline.com/2014/10
  93. https://textminingonline.com/2014/09
  94. https://textminingonline.com/2014/07
  95. https://textminingonline.com/2014/06
  96. https://textminingonline.com/2014/05
  97. https://textminingonline.com/2014/04
  98. https://textminingonline.com/2014/01
  99. https://textminingonline.com/category/ainlp
 100. https://textminingonline.com/category/coursera-course
 101. https://textminingonline.com/category/data-science
 102. https://textminingonline.com/category/deep-learning
 103. https://textminingonline.com/category/dl4nlp
 104. https://textminingonline.com/category/how-to-use-mashape-api
 105. https://textminingonline.com/category/keras
 106. https://textminingonline.com/category/machine-learning
 107. https://textminingonline.com/category/named-entity-recognition
 108. https://textminingonline.com/category/nlp
 109. https://textminingonline.com/category/nlp-tools
 110. https://textminingonline.com/category/nltk
 111. https://textminingonline.com/category/sentiment-analysis
 112. https://textminingonline.com/category/tensorflow
 113. https://textminingonline.com/category/text-analysis
 114. https://textminingonline.com/category/text-classification
 115. https://textminingonline.com/category/text-mining
 116. https://textminingonline.com/category/text-processing
 117. https://textminingonline.com/category/text-similarity
 118. https://textminingonline.com/category/text-summarization
 119. https://textminingonline.com/category/textanalysis-api-2
 120. https://textminingonline.com/category/uncategorized
 121. https://textminingonline.com/category/word-embedding
 122. https://textminingonline.com/category/word-segmentation
 123. https://textminingonline.com/wp-login.php
 124. https://textminingonline.com/feed
 125. https://textminingonline.com/comments/feed
 126. https://wordpress.org/
 127. http://textanalysisonline.com/
 128. http://textsummarization.net/
 129. http://textprocessing.org/
 130. http://wordsimilarity.com/
 131. https://bestcourseracourse.com/
 132. https://bestcourseracourses.com/
 133. https://elasticpatent.com/
 134. https://textminingonline.com/
 135. https://weavertheme.com/
 136. https://textminingonline.com/fasttext-for-fast-sentiment-analysis#page-top

   hidden links:
 138. https://wordpress.org/
