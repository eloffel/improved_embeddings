    #[1]id111 online    feed [2]id111 online    comments feed
   [3]id111 online    dive into nltk, part iv: id30 and
   lemmatization comments feed [4]dive into nltk, part iii: part-of-speech
   tagging and pos tagger [5]dive into nltk, part v: using stanford text
   analysis tools in python [6]alternate [7]alternate

   [ins: :ins]

   [8]   



   javascript is disabled. please enable javascript on your browser to
   best view this site.

[9]id111 online

   search for: ____________________ search

id111 | text analysis | text process | natural language processing

   id111 online
     * [10]home
     * [11]textanalysis
     * [12]keywordextraction
     * [13]textsummarization
     * [14]wordsimilarity
     * [15]about

   [16]home   [17]nltk   dive into nltk, part iv: id30 and lemmatization
   [ins: :ins]

post navigation

   [18]    dive into nltk, part iii: part-of-speech tagging and pos tagger
   [19]dive into nltk, part v: using stanford text analysis tools in
   python    

dive into nltk, part iv: id30 and lemmatization

   posted on [20]july 18, 2014 by [21]textminermarch 26, 2017
   [22]deep learning specialization on coursera

   this is the fourth article in the series    [23]dive into nltk   , here is
   an index of all the articles in the series that have been published to
   date:
   [ins: :ins]

   [24]part i: getting started with nltk
   [25]part ii: sentence tokenize and word tokenize
   [26]part iii: part-of-speech tagging and pos tagger
   [27]part iv: id30 and lemmatization
   [28]part v: using stanford text analysis tools in python
   [29]part vi: add stanford word segmenter interface for python nltk
   [30]part vii: a preliminary study on text classification
   [31]part viii: using external maximum id178 modeling libraries for
   text classification
   [32]part ix: from text classification to id31
   [33]part x: play with id97 models based on nltk corpus

   id30 and lemmatization are the basic [34]text processing methods
   for english text. the goal of both id30 and lemmatization is to
   reduce inflectional forms and sometimes derivationally related forms of
   a word to a common base form. here is the definition from wikipedia for
   id30 and lemmatization:

   [35]id30:

     in linguistic morphology and information retrieval, id30 is the
     process for reducing inflected (or sometimes derived) words to their
     stem, base or root form   generally a written word form. the stem need
     not be identical to the morphological root of the word; it is
     usually sufficient that related words map to the same stem, even if
     this stem is not in itself a valid root. algorithms for id30
     have been studied in computer science since the 1960s. many search
     engines treat words with the same stem as synonyms as a kind of
     id183, a process called conflation.

     id30 programs are commonly referred to as id30 algorithms or
     stemmers.

   [36]lemmatization:

     lemmatisation (or lemmatization) in linguistics, is the process of
     grouping together the different inflected forms of a word so they
     can be analysed as a single item.

     in computational linguistics, lemmatisation is the algorithmic
     process of determining the lemma for a given word. since the process
     may involve complex tasks such as understanding context and
     determining the part of speech of a word in a sentence (requiring,
     for example, knowledge of the grammar of a language) it can be a
     hard task to implement a lemmatiser for a new language.

     in many languages, words appear in several inflected forms. for
     example, in english, the verb    to walk    may appear as    walk   ,
        walked   ,    walks   ,    walking   . the base form,    walk   , that one might
     look up in a dictionary, is called the lemma for the word. the
     combination of the base form with the part of speech is often called
     the lexeme of the word.

     lemmatisation is closely related to id30. the difference is that
     a stemmer operates on a single word without knowledge of the
     context, and therefore cannot discriminate between words which have
     different meanings depending on part of speech. however, stemmers
     are typically easier to implement and run faster, and the reduced
     accuracy may not matter for some applications.

   how to use [37]stemmer in nltk

   nltk provides several famous stemmers interfaces, such as [38]porter
   stemmer, [39]lancaster stemmer, [40]snowball stemmer and etc. in nltk,
   using those stemmers is very simple.

   for [41]porter stemmer, which is based on [42]the porter id30
   algorithm, can be used like this:

   >>> from nltk.stem.porter import porterstemmer
   >>> porter_stemmer = porterstemmer()
   >>> porter_stemmer.stem(   maximum   )
   u   maximum   
   >>> porter_stemmer.stem(   presumably   )
   u   presum   
   >>> porter_stemmer.stem(   multiply   )
   u   multipli   
   >>> porter_stemmer.stem(   provision   )
   u   provis   
   >>> porter_stemmer.stem(   owed   )
   u   owe   
   >>> porter_stemmer.stem(   ear   )
   u   ear   
   >>> porter_stemmer.stem(   saying   )
   u   say   
   >>> porter_stemmer.stem(   crying   )
   u   cri   
   >>> porter_stemmer.stem(   string   )
   u   string   
   >>> porter_stemmer.stem(   meant   )
   u   meant   
   >>> porter_stemmer.stem(   cement   )
   u   cement   
   >>>

   for [43]lancaster stemmer, which is based on [44]the lancaster id30
   algorithm, can be used in nltk like this:

   >>> from nltk.stem.lancaster import lancasterstemmer
   >>> lancaster_stemmer = lancasterstemmer()
   >>> lancaster_stemmer.stem(   maximum   )
      maxim   
   >>> lancaster_stemmer.stem(   presumably   )
      presum   
   >>> lancaster_stemmer.stem(   presumably   )
      presum   
   >>> lancaster_stemmer.stem(   multiply   )
      multiply   
   >>> lancaster_stemmer.stem(   provision   )
   u   provid   
   >>> lancaster_stemmer.stem(   owed   )
      ow   
   >>> lancaster_stemmer.stem(   ear   )
      ear   
   >>> lancaster_stemmer.stem(   saying   )
      say   
   >>> lancaster_stemmer.stem(   crying   )
      cry   
   >>> lancaster_stemmer.stem(   string   )
      string   
   >>> lancaster_stemmer.stem(   meant   )
      meant   
   >>> lancaster_stemmer.stem(   cement   )
      cem   
   >>>

   for [45]snowball stemmer, which is based on [46]snowball id30
   algorithm, can be used in nltk like this:

   >>> from nltk.stem import snowballstemmer
   >>> snowball_stemmer = snowballstemmer(   english   )
   >>> snowball_stemmer.stem(   maximum   )
   u   maximum   
   >>> snowball_stemmer.stem(   presumably   )
   u   presum   
   >>> snowball_stemmer.stem(   multiply   )
   u   multipli   
   >>> snowball_stemmer.stem(   provision   )
   u   provis   
   >>> snowball_stemmer.stem(   owed   )
   u   owe   
   >>> snowball_stemmer.stem(   ear   )
   u   ear   
   >>> snowball_stemmer.stem(   saying   )
   u   say   
   >>> snowball_stemmer.stem(   crying   )
   u   cri   
   >>> snowball_stemmer.stem(   string   )
   u   string   
   >>> snowball_stemmer.stem(   meant   )
   u   meant   
   >>> snowball_stemmer.stem(   cement   )
   u   cement   
   >>>

   how to use [47]lemmatizer in nltk

   the nltk lemmatization method is based on id138   s built-in morphy
   function. here is the introduction from [48]id138 official website:

     id138   is a large lexical database of english. nouns, verbs,
     adjectives and adverbs are grouped into sets of cognitive synonyms
     (synsets), each expressing a distinct concept. synsets are
     interlinked by means of conceptual-semantic and lexical relations.
     the resulting network of meaningfully related words and concepts can
     be navigated with the browser. id138 is also freely and publicly
     available for download. id138   s structure makes it a useful tool
     for computational linguistics and natural language processing.

     id138 superficially resembles a thesaurus, in that it groups words
     together based on their meanings. however, there are some important
     distinctions. first, id138 interlinks not just word forms   strings
     of letters   but specific senses of words. as a result, words that are
     found in close proximity to one another in the network are
     semantically disambiguated. second, id138 labels the semantic
     relations among words, whereas the groupings of words in a thesaurus
     does not follow any explicit pattern other than meaning similarity

   in nltk, you can use it as the following:

   >>> from nltk.stem import id138lemmatizer
   >>> id138_lemmatizer = id138lemmatizer()
   >>> id138_lemmatizer.lemmatize(   dogs   )
   u   dog   
   >>> id138_lemmatizer.lemmatize(   churches   )
   u   church   
   >>> id138_lemmatizer.lemmatize(   aardwolves   )
   u   aardwolf   
   >>> id138_lemmatizer.lemmatize(   abaci   )
   u   abacus   
   >>> id138_lemmatizer.lemmatize(   hardrock   )
      hardrock   
   >>> id138_lemmatizer.lemmatize(   are   )
      are   
   >>> id138_lemmatizer.lemmatize(   is   )
      is   

   you would note that the    are    and    is    lemmatize results are not    be   ,
   that   s because the lemmatize method default pos argument is    n   :

   lemmatize(word, pos=   n   )

   so you need specified the pos for the word like these:

   >>> id138_lemmatizer.lemmatize(   is   , pos=   v   )
   u   be   
   >>> id138_lemmatizer.lemmatize(   are   , pos=   v   )
   u   be   
   >>>

   we have use id52 before word lemmatization, and implemented it
   in our [49]text analysis api, you can test and use it without specified
   pos tagger by our [50]text analysis api.

   the stem module in nltk
   you can find the stem module in nltk-master/nltk/stem

     yangtekimacbook-pro:stem textminer$ ls
     total 456
     -rwxr-xr-x@ 1 textminer staff 1270 7 22 2013 __init__.py
     -rwxr-xr-x@ 1 textminer staff 798 7 22 2013 api.py
     -rwxr-xr-x@ 1 textminer staff 17068 7 22 2013 isri.py
     -rwxr-xr-x@ 1 textminer staff 11337 7 22 2013 lancaster.py
     -rwxr-xr-x@ 1 textminer staff 24735 7 22 2013 porter.py
     -rwxr-xr-x@ 1 textminer staff 1701 7 22 2013 regexp.py
     -rwxr-xr-x@ 1 textminer staff 5563 7 22 2013 rslp.py
     -rwxr-xr-x@ 1 textminer staff 146857 7 22 2013 snowball.py
     -rwxr-xr-x@ 1 textminer staff 1513 7 22 2013 id138.py

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

# natural language toolkit: stemmers
#
# copyright (c) 2001-2013 nltk project
# author: trevor cohn <tacohn@cs.mu.oz.au>
#         edward loper <edloper@gradient.cis.upenn.edu>
#         steven bird <stevenbird1@gmail.com>
# url: <http://www.nltk.org/>
# for license information, see license.txt

"""
nltk stemmers

interfaces used to remove morphological affixes from words, leaving
only the word stem.  id30 algorithms aim to remove those affixes
required for eg. grammatical role, tense, derivational morphology
leaving only the stem of the word.  this is a difficult problem due to
irregular words (eg. common verbs in english), complicated
morphological rules, and part-of-speech and sense ambiguities
(eg. ``ceil-`` is not the stem of ``ceiling``).

stemmeri defines a standard interface for stemmers.
"""

from nltk.stem.api import stemmeri
from nltk.stem.regexp import regexpstemmer
from nltk.stem.lancaster import lancasterstemmer
from nltk.stem.isri import isristemmer
from nltk.stem.porter import porterstemmer
from nltk.stem.snowball import snowballstemmer
from nltk.stem.id138 import id138lemmatizer
from nltk.stem.rslp import rslpstemmer


if __name__ == "__main__":
    import doctest
    doctest.testmod(optionflags=doctest.normalize_whitespace)

   # natural language toolkit: stemmers # # copyright (c) 2001-2013 nltk
   project # author: trevor cohn <tacohn@cs.mu.oz.au> # edward loper
   <edloper@gradient.cis.upenn.edu> # steven bird <stevenbird1@gmail.com>
   # url: <http://www.nltk.org/> # for license information, see
   license.txt """ nltk stemmers interfaces used to remove morphological
   affixes from words, leaving only the word stem. id30 algorithms aim
   to remove those affixes required for eg. grammatical role, tense,
   derivational morphology leaving only the stem of the word. this is a
   difficult problem due to irregular words (eg. common verbs in english),
   complicated morphological rules, and part-of-speech and sense
   ambiguities (eg. ``ceil-`` is not the stem of ``ceiling``). stemmeri
   defines a standard interface for stemmers. """ from nltk.stem.api
   import stemmeri from nltk.stem.regexp import regexpstemmer from
   nltk.stem.lancaster import lancasterstemmer from nltk.stem.isri import
   isristemmer from nltk.stem.porter import porterstemmer from
   nltk.stem.snowball import snowballstemmer from nltk.stem.id138 import
   id138lemmatizer from nltk.stem.rslp import rslpstemmer if __name__ ==
   "__main__": import doctest
   doctest.testmod(optionflags=doctest.normalize_whitespace)

   read the code, and change the world! now it   s your time!

   posted by [51]textminer

related posts:

    1. [52]nltk id138 word lemmatizer api for english word with pos tag
       only
    2. [53]we have launched the text analysis api on mashape
    3. [54]dive into nltk, part iii: part-of-speech tagging and pos tagger
    4. [55]text analysis online no longer provides nltk stanford nlp api
       interface

   [56]deep learning specialization on coursera

   posted in [57]nltk, [58]text analysis, [59]id111 tagged
   [60]lancaster stemmer, [61]lemmatization, [62]lemmatization api,
   [63]lemmatize, [64]lemmatizer, [65]nltk, [66]porter stemmer,
   [67]snowball stemmer, [68]stem, [69]stemmer, [70]id30, [71]id30
   api, [72]word lemmatization api, [73]word lemmatize, [74]word stem,
   [75]word id30 api, [76]id138 lemmatization, [77]id138
   lemmatizer [78]permalink

post navigation

   [79]    dive into nltk, part iii: part-of-speech tagging and pos tagger
   [80]dive into nltk, part v: using stanford text analysis tools in
   python    
     __________________________________________________________________

comments

dive into nltk, part iv: id30 and lemmatization     7 comments

    1.
   u chauhan on [81]april 1, 2017 at 11:52 am said:
       i have gone through the text. i have been working in text
       summerization for    gujarati language. i want to develop
       lemmatization for the gujarati language. may i know if any
       provision for lemmatizing the gujarati language words?
       [82]reply    
          +
        textminer on [83]april 5, 2017 at 2:22 am said:
            sorry, i don   t know
            [84]reply    
          +
        sudheer reddy on [85]april 26, 2017 at 6:04 pm said:
            there is no package to use for
            you have to build your own package using dictionary which is a
            huge task
            probably you can translate each word of gujarati text into
            english and then do lemmatization and translate it back into
            the gujarati language it may not be accurate but serves the
            purpose
            [86]reply    
               o
             prabhu ram n on [87]august 4, 2017 at 3:54 am said:
                 sir,
                 i think translation of each word from native language to
                 english and then doing lemmatization is not much good
                 method. i think we have to work using unicode for our
                 language.
                 [88]reply    
          +
        prabhu ram n on [89]august 18, 2017 at 6:57 am said:
            have you got any idea in training own language?
            [90]reply    
    2.
   prabhu ram n on [91]august 4, 2017 at 3:50 am said:
       how can i build own package? which language can i use for?is python
       itself enough for building own package?i am trying for tamil
       language.
       [92]reply    
          +
        textminer on [93]august 6, 2017 at 3:14 am said:
            sorry, can   t help you more. it   s not depend on the programming
            languages, it   s depend on your target language like tamil
            language.
            [94]reply    

leave a reply [95]cancel reply

   your email address will not be published. required fields are marked *

   comment
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   name * ______________________________

   email * ______________________________

   website ______________________________

   [ ] save my name, email, and website in this browser for the next time
   i comment.

   post comment

   [96][dlai-logo-final-minus-font-plus-white-backg.png]
   [show?id=9iqcvd3eeqc&bids=541296.11421701896&type=2&subid=0]

   search for: ____________________ search

   [ins: :ins]

recent posts

     * [97]deep learning practice for nlp: large movie review data
       id31 from scratch
     * [98]best coursera courses for data science
     * [99]best coursera courses for machine learning
     * [100]best coursera courses for deep learning
     * [101]dive into nlp with deep learning, part i: getting started with
       dl4nlp

recent comments

     * textminer on [102]training id97 model on english wikipedia by
       gensim
     * ankit ramani on [103]training id97 model on english wikipedia
       by gensim
     * vincent on [104]training id97 model on english wikipedia by
       gensim
     * muhammad amin nadim on [105]andrew ng deep learning specialization:
       best deep learning course for beginners and deep learners
     * saranya on [106]training id97 model on english wikipedia by
       gensim

archives

     * [107]november 2018
     * [108]august 2018
     * [109]july 2018
     * [110]june 2018
     * [111]january 2018
     * [112]october 2017
     * [113]september 2017
     * [114]august 2017
     * [115]july 2017
     * [116]may 2017
     * [117]april 2017
     * [118]march 2017
     * [119]december 2016
     * [120]october 2016
     * [121]august 2016
     * [122]july 2016
     * [123]june 2016
     * [124]may 2016
     * [125]april 2016
     * [126]february 2016
     * [127]december 2015
     * [128]november 2015
     * [129]september 2015
     * [130]may 2015
     * [131]april 2015
     * [132]march 2015
     * [133]february 2015
     * [134]january 2015
     * [135]december 2014
     * [136]november 2014
     * [137]october 2014
     * [138]september 2014
     * [139]july 2014
     * [140]june 2014
     * [141]may 2014
     * [142]april 2014
     * [143]january 2014

categories

     * [144]ainlp
     * [145]coursera course
     * [146]data science
     * [147]deep learning
     * [148]dl4nlp
     * [149]how to use mashape api
     * [150]keras
     * [151]machine learning
     * [152]id39
     * [153]nlp
     * [154]nlp tools
     * [155]nltk
     * [156]id31
     * [157]tensorflow
     * [158]text analysis
     * [159]text classification
     * [160]id111
     * [161]text processing
     * [162]text similarity
     * [163]text summarization
     * [164]textanalysis api
     * [165]uncategorized
     * [166]id27
     * [167]id40

meta

     * [168]log in
     * [169]entries rss
     * [170]comments rss
     * [171]wordpress.org

     [172]text analysis online

     [173]text summarizer

     [174]text processing

     [175]word similarity

     [176]best coursera course

     [177]best coursera courses

     [178]elastic patent

     2019 - [179]id111 online - [180]weaver xtreme theme

   [181]   

references

   visible links
   1. https://textminingonline.com/feed
   2. https://textminingonline.com/comments/feed
   3. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization/feed
   4. https://textminingonline.com/dive-into-nltk-part-iii-part-of-speech-tagging-and-pos-tagger
   5. https://textminingonline.com/dive-into-nltk-part-v-using-stanford-text-analysis-tools-in-python
   6. https://textminingonline.com/wp-json/oembed/1.0/embed?url=https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization
   7. https://textminingonline.com/wp-json/oembed/1.0/embed?url=https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization&format=xml
   8. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#page-bottom
   9. https://textminingonline.com/
  10. https://textminingonline.com/
  11. http://textanalysisonline.com/#new_tab
  12. http://keywordextraction.net/#new_tab
  13. http://textsummarization.net/#new_tab
  14. https://wordsimilarity.com/#new_tab
  15. https://textminingonline.com/about
  16. https://textminingonline.com/
  17. https://textminingonline.com/category/nltk
  18. https://textminingonline.com/dive-into-nltk-part-iii-part-of-speech-tagging-and-pos-tagger
  19. https://textminingonline.com/dive-into-nltk-part-v-using-stanford-text-analysis-tools-in-python
  20. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization
  21. https://textminingonline.com/author/yuzhen
  22. https://click.linksynergy.com/fs-bin/click?id=9iqcvd3eeqc&offerid=467035.416&subid=0&type=4
  23. http://textminingonline.com/dive-into-nltk-part-i-getting-started-with-nltk
  24. http://textminingonline.com/dive-into-nltk-part-i-getting-started-with-nltk
  25. http://textminingonline.com/dive-into-nltk-part-ii-sentence-tokenize-and-word-tokenize
  26. http://textminingonline.com/dive-into-nltk-part-iii-part-of-speech-tagging-and-pos-tagger
  27. http://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization
  28. http://textminingonline.com/dive-into-nltk-part-v-using-stanford-text-analysis-tools-in-python
  29. http://textminingonline.com/dive-into-nltk-part-vi-add-stanford-word-segmenter-interface-for-python-nltk
  30. http://textminingonline.com/dive-into-nltk-part-vii-a-preliminary-study-on-text-classification
  31. http://textminingonline.com/dive-into-nltk-part-viii-using-external-maximum-id178-modeling-libraries-for-text-classification
  32. http://textminingonline.com/dive-into-nltk-part-ix-from-text-classification-to-sentiment-analysis
  33. http://textminingonline.com/?p=872
  34. http://textprocessing.org/
  35. http://en.wikipedia.org/wiki/id30
  36. http://en.wikipedia.org/wiki/lemmatisation
  37. http://textanalysisonline.com/nltk-porter-stemmer
  38. http://textanalysisonline.com/nltk-porter-stemmer
  39. http://textanalysisonline.com/nltk-lancaster-stemmer
  40. http://textanalysisonline.com/nltk-snowball-stemmer
  41. http://textanalysisonline.com/nltk-porter-stemmer
  42. http://tartarus.org/martin/porterstemmer/
  43. http://textanalysisonline.com/nltk-lancaster-stemmer
  44. http://www.comp.lancs.ac.uk/computing/research/id30/
  45. http://textanalysisonline.com/nltk-snowball-stemmer
  46. http://snowball.tartarus.org/
  47. http://textanalysisonline.com/nltk-id138-lemmatizer
  48. http://id138.princeton.edu/
  49. http://textanalysisonline.com/
  50. http://textanalysisonline.com/
  51. http://textminingonline.com/
  52. https://textminingonline.com/nltk-id138-word-lemmatizer-api-for-english-word-with-pos-tag-only
  53. https://textminingonline.com/we-have-launched-the-text-analysis-api-on-mashape
  54. https://textminingonline.com/dive-into-nltk-part-iii-part-of-speech-tagging-and-pos-tagger
  55. https://textminingonline.com/text-analysis-online-no-longer-provides-nltk-stanford-nlp-api-interface
  56. https://click.linksynergy.com/fs-bin/click?id=9iqcvd3eeqc&offerid=467035.414&subid=0&type=4
  57. https://textminingonline.com/category/nltk
  58. https://textminingonline.com/category/text-analysis
  59. https://textminingonline.com/category/text-mining
  60. https://textminingonline.com/tag/lancaster-stemmer
  61. https://textminingonline.com/tag/lemmatization
  62. https://textminingonline.com/tag/lemmatization-api
  63. https://textminingonline.com/tag/lemmatize
  64. https://textminingonline.com/tag/lemmatizer
  65. https://textminingonline.com/tag/nltk
  66. https://textminingonline.com/tag/porter-stemmer
  67. https://textminingonline.com/tag/snowball-stemmer
  68. https://textminingonline.com/tag/stem
  69. https://textminingonline.com/tag/stemmer
  70. https://textminingonline.com/tag/id30
  71. https://textminingonline.com/tag/id30-api
  72. https://textminingonline.com/tag/word-lemmatization-api
  73. https://textminingonline.com/tag/word-lemmatize
  74. https://textminingonline.com/tag/word-stem
  75. https://textminingonline.com/tag/word-id30-api
  76. https://textminingonline.com/tag/id138-lemmatization
  77. https://textminingonline.com/tag/id138-lemmatizer
  78. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization
  79. https://textminingonline.com/dive-into-nltk-part-iii-part-of-speech-tagging-and-pos-tagger
  80. https://textminingonline.com/dive-into-nltk-part-v-using-stanford-text-analysis-tools-in-python
  81. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#comment-130052
  82. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization?replytocom=130052#respond
  83. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#comment-130089
  84. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization?replytocom=130089#respond
  85. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#comment-130341
  86. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization?replytocom=130341#respond
  87. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#comment-131855
  88. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization?replytocom=131855#respond
  89. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#comment-132482
  90. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization?replytocom=132482#respond
  91. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#comment-131854
  92. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization?replytocom=131854#respond
  93. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#comment-132125
  94. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization?replytocom=132125#respond
  95. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#respond
  96. https://click.linksynergy.com/link?id=9iqcvd3eeqc&offerid=541296.11421701896&type=2&murl=https://www.coursera.org/specializations/deep-learning
  97. https://textminingonline.com/deep-learning-practice-for-nlp-large-movie-review-data-sentiment-analysis-from-scratch
  98. https://textminingonline.com/best-coursera-courses-for-data-science
  99. https://textminingonline.com/best-coursera-courses-for-machine-learning
 100. https://textminingonline.com/best-coursera-courses-for-deep-learning
 101. https://textminingonline.com/dive-into-nlp-with-deep-learning-part-i-getting-started-with-dl4nlp
 102. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-138841
 103. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-138807
 104. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-138723
 105. https://textminingonline.com/andrew-ng-deep-learning-specialization-best-deep-learning-course-for-beginners-and-deep-learners#comment-138475
 106. https://textminingonline.com/training-id97-model-on-english-wikipedia-by-gensim#comment-137923
 107. https://textminingonline.com/2018/11
 108. https://textminingonline.com/2018/08
 109. https://textminingonline.com/2018/07
 110. https://textminingonline.com/2018/06
 111. https://textminingonline.com/2018/01
 112. https://textminingonline.com/2017/10
 113. https://textminingonline.com/2017/09
 114. https://textminingonline.com/2017/08
 115. https://textminingonline.com/2017/07
 116. https://textminingonline.com/2017/05
 117. https://textminingonline.com/2017/04
 118. https://textminingonline.com/2017/03
 119. https://textminingonline.com/2016/12
 120. https://textminingonline.com/2016/10
 121. https://textminingonline.com/2016/08
 122. https://textminingonline.com/2016/07
 123. https://textminingonline.com/2016/06
 124. https://textminingonline.com/2016/05
 125. https://textminingonline.com/2016/04
 126. https://textminingonline.com/2016/02
 127. https://textminingonline.com/2015/12
 128. https://textminingonline.com/2015/11
 129. https://textminingonline.com/2015/09
 130. https://textminingonline.com/2015/05
 131. https://textminingonline.com/2015/04
 132. https://textminingonline.com/2015/03
 133. https://textminingonline.com/2015/02
 134. https://textminingonline.com/2015/01
 135. https://textminingonline.com/2014/12
 136. https://textminingonline.com/2014/11
 137. https://textminingonline.com/2014/10
 138. https://textminingonline.com/2014/09
 139. https://textminingonline.com/2014/07
 140. https://textminingonline.com/2014/06
 141. https://textminingonline.com/2014/05
 142. https://textminingonline.com/2014/04
 143. https://textminingonline.com/2014/01
 144. https://textminingonline.com/category/ainlp
 145. https://textminingonline.com/category/coursera-course
 146. https://textminingonline.com/category/data-science
 147. https://textminingonline.com/category/deep-learning
 148. https://textminingonline.com/category/dl4nlp
 149. https://textminingonline.com/category/how-to-use-mashape-api
 150. https://textminingonline.com/category/keras
 151. https://textminingonline.com/category/machine-learning
 152. https://textminingonline.com/category/named-entity-recognition
 153. https://textminingonline.com/category/nlp
 154. https://textminingonline.com/category/nlp-tools
 155. https://textminingonline.com/category/nltk
 156. https://textminingonline.com/category/sentiment-analysis
 157. https://textminingonline.com/category/tensorflow
 158. https://textminingonline.com/category/text-analysis
 159. https://textminingonline.com/category/text-classification
 160. https://textminingonline.com/category/text-mining
 161. https://textminingonline.com/category/text-processing
 162. https://textminingonline.com/category/text-similarity
 163. https://textminingonline.com/category/text-summarization
 164. https://textminingonline.com/category/textanalysis-api-2
 165. https://textminingonline.com/category/uncategorized
 166. https://textminingonline.com/category/word-embedding
 167. https://textminingonline.com/category/word-segmentation
 168. https://textminingonline.com/wp-login.php
 169. https://textminingonline.com/feed
 170. https://textminingonline.com/comments/feed
 171. https://wordpress.org/
 172. http://textanalysisonline.com/
 173. http://textsummarization.net/
 174. http://textprocessing.org/
 175. http://wordsimilarity.com/
 176. https://bestcourseracourse.com/
 177. https://bestcourseracourses.com/
 178. https://elasticpatent.com/
 179. https://textminingonline.com/
 180. https://weavertheme.com/
 181. https://textminingonline.com/dive-into-nltk-part-iv-id30-and-lemmatization#page-top

   hidden links:
 183. https://wordpress.org/
