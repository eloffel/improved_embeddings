   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    natural language processing made easy     using
   spacy (   in python) comments feed [4]alternate [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]machine learning [94]natural language processing made easy
       using spacy (   in python)

   [95]machine learning[96]nlp[97]python

natural language processing made easy     using spacy (   in python)

   [98]shivam bansal, april 4, 2017

introduction

   natural language processing is one of the principal areas of artificial
   intelligence. nlp plays a critical role in many intelligent
   applications such as automated id70, article summarizers,
   multi-lingual translation and opinion identification from data. every
   industry which exploits nlp to make sense of unstructured text data,
   not just demands accuracy, but also swiftness in obtaining results.

   natural language processing is a capacious field, some of the tasks in
   nlp are     text classification, entity detection, machine translation,
   id53, and concept identification. in one of my last
   [99]article, i discussed various tools and components that are used in
   the implementation of nlp. most of the components discussed in the
   article were described using venerated library     [100]nltk (natural
   language toolkit).

   in this article, i will share my notes on one of the powerful and
   advanced libraries used to implement nlp     spacy.


table of content

    1. about spacy and installation
    2. spacy pipeline and properties
          + id121
          + id52
          + entity detection
          + id33
    3. noun phrases
    4. word vectors
    5. integrating spacy with machine learning
    6. comparison with nltk and corenlp


1. about spacy and installation

1.1 about

   spacy is written in cython language, (c extension of python designed to
   give c like performance to the python program). hence is a quite fast
   library. spacy provides a concise api to access its methods and
   properties governed by trained machine (and deep) learning models.


1.2 installation

   spacy, its data, and its models can be easily installed using python
   package index and setup tools. use the following command to install
   spacy in your machine:
sudo pip install spacy

   in case of python3, replace    pip    with    pip3    in the above command.

   or download the source from [101]here and run the following command,
   after unzipping:
python setup.py install

   to download all the data and models, run the following command, after
   the installation:
python -m spacy.en.download all

   you are now all set to explore and use spacy.


2. spacy pipeline and properties

   implementation of spacy and access to different properties is initiated
   by creating pipelines. a pipeline is created by loading the models.
   there are different type of [102]models provided in the package which
   contains the information about language     vocabularies, trained
   vectors, syntaxes and entities.

   we will load the default model which is english-core-web.
import spacy
nlp = spacy.load(   en   )

   the object    nlp    is used to create documents, access linguistic
   annotations and different nlp properties. let   s create a document by
   loading a text data in our pipeline. i am using reviews of a hotel
   obtained from tripadvisor   s website. the data file can be downloaded
   [103]here.
document = unicode(open(filename).read().decode('utf8'))
document = nlp(document)

   the document is now part of spacy.english model   s class and is
   associated with a number of properties. the properties of a document
   (or tokens) can listed by using following command:
dir(document)
>> [ 'doc', 'ents',     'mem']

   this outputs a wide range of document properties such as     tokens,
   token   s reference index, part of speech tags, entities, vectors,
   sentiment, vocabulary etc. let   s explore some of these properties.


2.1 id121

   every spacy document is tokenized into sentences and further into
   tokens which can be accessed by iterating the document:
# first token of the doc
document[0]
>> nice

# last token of the doc
document[len(document)-5]
>> boston

# list of sentences of our doc
list(document.sents)
>> [ nice place better than some reviews give it credit for.,
 overall, the rooms were a bit small but nice.,
...
everything was clean, the view was wonderful and it is very well located (the pr
udential center makes shopping and eating easy and the t is nearby for jaunts ou
t and about the city).]


2.2 id52

   part-of-speech tags are the properties of the word that are defined by
   the usage of the word in the grammatically correct sentence. these tags
   can be used as the text features in information filtering, statistical
   models, and rule based parsing.

   lets check all the pos tags of our document
# get all tags
all_tags = {w.pos: w.pos_ for w in document}
>> {97:  u'sym', 98: u'verb', 99: u'x', 101: u'space', 82: u'adj', 83: u'adp', 8
4: u'adv', 87: u'cconj', 88: u'det', 89: u'intj', 90: u'noun', 91: u'num', 92: u
'part', 93: u'pron', 94: u'propn', 95: u'punct'}

# all tags of first sentence of our document
for word in list(document.sents)[0]:
    print word, word.tag_
>> ( nice, u'jj') (place, u'nn') (better, u'nnp') (than, u'in') (some, u'dt') (r
eviews, u'nns') (give, u'vbp') (it, u'prp') (creit, u'nn') (for, u'in') (., u'.'
)


   let   s explore some top unigrams of the document. i have created a basic
   preprocessing and text cleaning function.
#define some parameters
noisy_pos_tags = [   prop   ]
min_token_length = 2

#function to check if the token is a noise or not
def isnoise(token):
    is_noise = false
    if token.pos_ in noisy_pos_tags:
        is_noise = true
    elif token.is_stop == true:
        is_noise = true
    elif len(token.string) <= min_token_length:
        is_noise = true
    return is_noise
def cleanup(token, lower = true):
    if lower:
       token = token.lower()
    return token.strip()

# top unigrams used in the reviews
from collections import counter
cleaned_list = [cleanup(word.string) for word in document if not isnoise(word)]
counter(cleaned_list) .most_common(5)
>> [( u'hotel', 683), (u'room', 652), (u'great', 300),  (u'sheraton', 285), (u'l
ocation', 271)]


2.3 entity detection

   spacy consists of a fast entity recognition model which is capable of
   identifying entitiy phrases from the document. entities can be of
   different types, such as     person, location, organization, dates,
   numerals, etc. these entities can be accessed through    .ents    property.

   let   s find all the types of named entities from present in our
   document.
labels = set([w.label_ for w in document.ents])
for label in labels:
    entities = [cleanup(e.string, lower=false) for e in document.ents if label==
e.label_]
    entities = list(set(entities))
    print label,entities


2.4 id33

   one of the most powerful feature of spacy is the extremely fast and
   accurate syntactic dependency parser which can be accessed via
   lightweight api. the parser can also be used for sentence boundary
   detection and phrase chunking. the relations can be accessed by the
   properties    .children    ,    .root   ,    .ancestor    etc.
# extract all review sentences that contains the term - hotel
hotel = [sent for sent in document.sents if 'hotel' in sent.string.lower()]

# create dependency tree
sentence = hotel[2] for word in sentence:
print word, ': ', str(list(word.children))
>> a :  []  cab :  [a, from]
from :  [airport, to]
the :  []
airport :  [the]
to :  [hotel]
the :  [] hotel :
[the] can :  []
be :  [cab, can, cheaper, .]
cheaper :  [than] than :
[shuttles]
the :  []
shuttles :  [the, depending]
depending :  [time] what :  []
time :  [what, of] of :  [day]
the :  [] day :
[the, go] you :
[]
go :  [you]
. :  []

   let   s parse the dependency tree of all the sentences which contains the
   term hotel and check what are the adjectival tokens used for hotel. i
   have created a custom function that parses a dependency tree and
   extracts relevant pos tag.
# check all adjectives used with a word
def pos_words (sentence, token, ptag):
    sentences = [sent for sent in sentence.sents if token in sent.string]
    pwrds = []
    for sent in sentences:
        for word in sent:
            if character in word.string:
                   pwrds.extend([child.string.strip() for child in word.children
                                                      if child.pos_ == ptag] )
    return counter(pwrds).most_common(10)

pos_words(document, 'hotel',    adj   )
>> [(u'other', 20), (u'great', 10), (u'good', 7), (u'better', 6), (u'nice', 6),
(u'different', 5), (u'many', 5), (u'best', 4), (u'my', 4), (u'wonderful', 3)]


2.5 noun phrases

   dependency trees can also be used to generate noun phrases:
# generate noun phrases
doc = nlp(u'i love data science on analytics vidhya')
for np in doc.noun_chunks:
    print np.text, np.root.dep_, np.root.head.text
>> i nsubj love
   data science dobj love
   analytics pobj on


3. word to vectors integration

   spacy also provides inbuilt integration of dense, real valued vectors
   representing distributional similarity information. it uses [104]glove
   vectors to generate vectors. glove is an unsupervised learning
   algorithm for obtaining vector representations for words.

   let   s create some word vectors and perform some interesting operations.
from numpy import dot
from numpy.linalg import norm
from spacy.en import english
parser = english()

#generate word vector of the word - apple
apple = parser.vocab[u'apple']

#cosine similarity function
cosine = lambda v1, v2: dot(v1, v2) / (norm(v1) * norm(v2))
others = list({w for w in parser.vocab if w.has_vector and w.orth_.islower() and
 w.lower_ != unicode("apple")})

# sort by similarity score
others.sort(key=lambda w: cosine(w.vector, apple.vector))
others.reverse()


print "top most similar words to apple:"
for word in others[:10]:
    print word.orth_
>> apples iphone f ruit juice cherry lemon banana pie mac orange


4. machine learning with text using spacy

   integrating spacy in machine learning model is pretty easy and
   straightforward. let   s build a custom text classifier using sklearn. we
   will create a sklearn pipeline with following components: cleaner,
   tokenizer, vectorizer, classifier. for tokenizer and vectorizer we will
   built our own custom modules using spacy.
from sklearn.feature_extraction.stop_words import english_stop_words as stopword
s
from sklearn.feature_extraction.text import countvectorizer
from sklearn.metrics import accuracy_score
from sklearn.base import transformermixin
from sklearn.pipeline import pipeline
from sklearn.id166 import linearsvc

import string
punctuations = string.punctuation

from spacy.en import english
parser = english()

#custom transformer using spacy
class predictors(transformermixin):
    def transform(self, x, **transform_params):
        return [clean_text(text) for text in x]
    def fit(self, x, y=none, **fit_params):
        return self
    def get_params(self, deep=true):
        return {}

# basic utility function to clean the text
def clean_text(text):
    return text.strip().lower()

   let   s now create a custom tokenizer function using spacy parser and
   some basic cleaning. one thing to note here is that, the text features
   can be replaced with word vectors (especially beneficial in deep
   learning models)
#create spacy tokenizer that parses a sentence and generates tokens
#these can also be replaced by word vectors
def spacy_tokenizer(sentence):
    tokens = parser(sentence)
    tokens = [tok.lemma_.lower().strip() if tok.lemma_ != "-pron-" else tok.lowe
r_ for tok in tokens]
    tokens = [tok for tok in tokens if (tok not in stopwords and tok not in punc
tuations)]     return tokens

#create vectorizer object to generate feature vectors, we will use custom spacy
   s tokenizer
vectorizer = countvectorizer(tokenizer = spacy_tokenizer, ngram_range=(1,1)) cla
ssifier = linearsvc()

   we are now ready to create the pipeline, load the data (sample here),
   and run the classifier model.
# create the  pipeline to clean, tokenize, vectorize, and classify
pipe = pipeline([("cleaner", predictors()),
                 ('vectorizer', vectorizer),
                 ('classifier', classifier)])

# load sample data
train = [('i love this sandwich.', 'pos'),
         ('this is an amazing place!', 'pos'),
         ('i feel very good about these beers.', 'pos'),
         ('this is my best work.', 'pos'),
         ("what an awesome view", 'pos'),
         ('i do not like this restaurant', 'neg'),
         ('i am tired of this stuff.', 'neg'),
         ("i can't deal with this", 'neg'),
         ('he is my sworn enemy!', 'neg'),
         ('my boss is horrible.', 'neg')]
test =   [('the beer was good.', 'pos'),
         ('i do not enjoy my job', 'neg'),
         ("i ain't feelin dandy today.", 'neg'),
         ("i feel amazing!", 'pos'),
         ('gary is a good friend of mine.', 'pos'),
         ("i can't believe i'm doing this.", 'neg')]

# create model and measure accuracy
pipe.fit([x[0] for x in train], [x[1] for x in train])
pred_data = pipe.predict([x[0] for x in test])
for (sample, pred) in zip(test, pred_data):
    print sample, pred
print "accuracy:", accuracy_score([x[1] for x in test], pred_data)

>>    ('the beer was good.', 'pos') pos
      ('i do not enjoy my job', 'neg') neg
      ("i ain't feelin dandy today.", 'neg') neg
      ('i feel amazing!', 'pos') pos
      ('gary is a good friend of mine.', 'pos') pos
      ("i can't believe i'm doing this.", 'neg') neg
      accuracy: 1.0


5. comparison with other libraries

   spacy is very powerful and industrial strength package for almost all
   natural language processing tasks. if you are wondering why?

   let   s compare spacy with other famous tools to implement nlp in python
       corenlp and nltk.


feature availability

   feature                 spacy nltk core nlp
   easy installation       y     y    y
   python api              y     y    n
   multi language support  n     y    y
   id121            y     y    y
   part-of-speech tagging  y     y    y
   sentence segmentation   y     y    y
   id33      y     n    y
   entity recognition      y     y    y
   integrated word vectors y     n    n
   id31      y     y    y
   coreference resolution  n     n    y


speed: key functionalities     tokenizer, tagging, parsing

   package tokenizer tagging parsing
   spacy   0.2ms     1ms     19ms
   corenlp 2ms       10ms    49ms
   nltk    4ms       443ms      


accuracy: entity extraction

   package precition recall f-score
   spacy   0.72      0.65   0.69
   corenlp 0.79      0.73   0.76
   nltk    0.51      0.65   0.58


projects

   now, its time to take the plunge and actually play with some other real
   datasets. so are you ready to take on the challenge? accelerate your
   nlp journey with the following practice problems:


   [105]practice problem: identify the sentiments identify the sentiment
   of tweets
   [106]practice problem : twitter id31 to detect hate
   speech in tweets


end notes

   in this article we discussed about spacy     a complete package to
   implement nlp tasks in python. we went through various examples
   showcasing the usefulness of spacy, its speed and accuracy. finally we
   compared the package with other famous nlp libraries     corenlp and
   nltk.

   once the concepts described in this article are understood, one can
   implement (really) challenging problems exploiting text data and
   natural language processing.

   i hope you enjoyed reading this article, feel free to post your doubts,
   questions or any thoughts in the comments section.

[107]learn, [108]compete, hack and [109]get hired!

   you can also read this article on analytics vidhya's android app
   [110]get it on google play

share this:

     * [111]click to share on linkedin (opens in new window)
     * [112]click to share on facebook (opens in new window)
     * [113]click to share on twitter (opens in new window)
     * [114]click to share on pocket (opens in new window)
     * [115]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [116]advanced python, [117]natural language processing,
   [118]nlp, [119]nlp libraries, [120]python, [121]spacy
   next article

moving beyond frontiers in data science     interview with mahesh kumar,
founder & ceo, tiger analytics

   previous article

manager- wholesale impairment analytics- bangalore (5-10 years of experience)

[122]shivam bansal

   shivam bansal is a data scientist with exhaustive experience in natural
   language processing and machine learning in several domains. he is
   passionate about learning and always looks forward to solving
   challenging analytical problems.
     *
     *
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [123]discussion portal to get your queries resolved

32 comments

     * pratik says:
       [124]april 4, 2017 at 7:58 am
       hi shivam, i was just looking for this information! nltk vs spacy.
       thanks!
       [125]reply
     * [126]sourabh jindal says:
       [127]april 4, 2017 at 8:07 am
       awesome article!
       [128]reply
     * leo vogels says:
       [129]april 4, 2017 at 8:43 am
       just implementing spacy in ubuntu. works great. thanks!
       leo vogels
       [130]reply
     * chang-jung wu says:
       [131]april 4, 2017 at 11:36 am
       thanks!
       great and useful article!
       i   m wondering whether textblob is faster than nltk, and whether it
       is slower than specy
       [132]reply
          + [133]shivam bansal says:
            [134]april 4, 2017 at 1:16 pm
            hi chang,thanks.
            spacy > textblob > nltk
            [135]reply
               o vinay says:
                 [136]april 25, 2017 at 12:31 pm
                 hi shivam,
                 im getting this error
                 nameerror: name    character    is not defined
                 [137]reply
                    # vlad says:
                      [138]october 17, 2017 at 8:32 pm
                      replace character with token,
                      [139]reply
     * justin says:
       [140]april 4, 2017 at 1:37 pm
       great info here, thanks!
       [141]reply
     * suryanarayana ambatipudi says:
       [142]april 4, 2017 at 2:19 pm
       very useful article    thank you so much !!
       [143]reply
     * venkat b says:
       [144]april 4, 2017 at 4:54 pm
       thanks shivam. do you have a similar article for r?
       [145]reply
     * margaretawdy says:
       [146]april 8, 2017 at 5:04 am
       thank u for this awesome article:)
       [147]reply
     * swapnil gaikwad says:
       [148]april 10, 2017 at 6:52 pm
       hi shivam! very nice article.it helped me to get started with
       spacy. i have one question for you. i am trying to extract some
       entities like dates, location, name from the hundreds of resume   s.
       will it be possible to do so using spacy? will it do the task
       quickly within few minutes and how much accurate it will be? please
       provide your guidance as well as opinion.
       thanks.
       [149]reply
     * octavio says:
       [150]april 19, 2017 at 6:14 pm
       hi, i think there is a typo in 2.4 id33; in the
       function pos_words inside the second for.
       if character in word.string:
       there should be another for not a if.
       for character in word.string:
       however nice post. really thank you for it. it helps me a lot.
       [151]reply
          + kostasx says:
            [152]august 10, 2017 at 11:11 pm
            good catch!
            [153]reply
     * amit jaiswal says:
       [154]june 6, 2017 at 11:58 am
       i want to train entity please share code or help me. example: i
       want to train airtel, reliance and vodafone as biller entity.
       it   s behaving different plz share some error less n needful src.
       thanks.
       amit jaiswal
       [155][email protected]
       [156]reply
     * tiru says:
       [157]june 14, 2017 at 1:50 pm
       nice article , thank you for posting it here , i have one question
       for you , how can i use dependency tree output or pos information
       which i got from the spacy in multi class classification problem ,
       i would be very thank full if can i give more elaborate information
       on this
       [158]reply
     * ben says:
       [159]july 3, 2017 at 12:14 pm
       hi,
       great article and great explanation!
       i   m trying to work one step further by saving and reloading the
       trained pipeline:
       `joblib.dump(fitted_pipe, path)`
       works fine as well, but apparently the pickle doesn   t store the
       custom classes and functions. specially `predictors` and
       `space_tokenizer`.
       so by loading the pipe.pkl it doesn   t find the required classes or
       modules.
       any hint to fix that?
       thanks
       ben
       [160]reply
     * swedha b says:
       [161]july 7, 2017 at 7:35 pm
       hi,
       it   s better to use this command for installing spacy
       sudo pip install -u spacy
       sudo python -m spacy.en.download all
       [162]reply
     * swedha b says:
       [163]july 7, 2017 at 7:38 pm
       hi,
       thanks for this article.
       its better to use the following command below to install spacy
       package
       sudo pip install -u spacy
       sudo python -m spacy.en.download all
       my one got fixed using this above command
       [164]reply
          + jason b says:
            [165]november 27, 2017 at 8:51 pm
            for the install:
            sudo python -m spacy.en.download all
            did not work, but:
            python -m spacy download en
            did.
            [166]reply
     * ram says:
       [167]september 21, 2017 at 11:44 pm
       hi all,
       i am unable to install spacy in my python 2.7 version. anyone who
       has worked on this please share your thoughts
       [168]reply
     * parvathy sarat says:
       [169]october 25, 2017 at 3:20 pm
       very informative article. wish i had come across this the first
       time i searched for articles and comparisons. also, what about
       intent recognition in spacy?
       [170]reply
     * [171]cameron says:
       [172]november 11, 2017 at 12:05 pm
       getting a    name    unicode    is not defined    error on
       document =
       unicode(open(   tripadvisor_hotelreviews_shivambansal.txt   ).read().de
       code(   utf8   ))
       document = nlp(document)
       what is the prereq to load to make that work   running python 3.6
       jupyter notebook
       [173]reply
          + [174]iamlordaubrey says:
            [175]january 15, 2018 at 10:30 pm
            with python 3.6, all you need do is:
            document =
            open(   tripadvisor_hotelreviews_shivambansal.txt   ).read()
            document = nlp(document)
            that   s it.
            [176]reply
     * macbuse says:
       [177]november 22, 2017 at 3:55 am
       hi
       2.2 id52
       you **really** want to define a function is_not_noise
       (to reduce the nested elif s here and make the code
       read more like prose).
       the evaluation cost is the
       the same if you just use logical    and   s
       def is_not_noise(token):
       return ( token.pos_ not in noisy_pos_tags
       and len(token.string) <= min_token_length
       and not token.is_stop)
       [178]reply
     *   sma  l kahraman says:
       [179]november 24, 2017 at 1:53 am
       thanks a lot for this very informative article. but i didnot
       understand about how we get the parse tree ( not dependency) with
       spacy.
       [180]reply
     * shirish says:
       [181]january 18, 2018 at 1:06 am
       excellent article ! thank you.
       if you have some bandwidth   .can you check if following lines of
       code give you a list?
       apple = parser.vocab[u   apple   ]
       cosine = lambda v1, v2: dot(v1, v2) / (norm(v1) * norm(v2))
       others = list({w for w in parser.vocab if w.has_vector and
       w.orth_.islower() and w.lower_ != unicode(   apple   )})
       for me print(others) gives me an empty [ ]
       [182]reply
     * rashad says:
       [183]february 2, 2018 at 2:07 am
       document =
       unicode(open(   tripadvisor_hotelreviews_shivambansal.txt   ).read().de
       code(   utf8   ))
       line is depricated in python 3.
       should be just
       document = open(   tripadvisor_hotelreviews_shivambansal.txt   ).read()
       however, dir(document)
       does not produce any output! any ideas why?
       [184]reply
     * shoaib khan says:
       [185]february 2, 2018 at 1:00 pm
       a great article, however, i believe r is missing a lot of these
       features. i have used tidytext package in r but i can hardly
       compare it to spacy.
       is there some package very close to spacy in r ?
       [186]reply
     * rambabu dara says:
       [187]march 6, 2018 at 12:26 pm
       i have below requirement::-
       can any one help on using python
       features that need to be extracted
       role :
       there are different jobs     waiters, chefs, chauffeurs    
       (countrywise)
       1) information to be extracted from the cv is all possible roles
       that the candidate can possible be work as.
       2) assign a ranking to these roles (eg : candidate is a better
       waiter than a chef)
       3) identify from the cv if there are certifications that the
       candidate has
       cv can be any docx or pdf or excel
       [188]reply
     * mohamed says:
       [189]march 10, 2018 at 12:11 am
       amazing article. is there a way using the machine learning
       capability in spacy to create something that can extract bilingual
       chunks from texts in 2 different languages?
       [190]reply
     * rekha sharma says:
       [191]april 11, 2018 at 3:38 pm
       hi,
       i am doing a task of cleaning and preprocessing of data and i dont
       know machine learning and nlp but i have to do that task using nlp
       and spacy can you please suggest me how to learn this step by step
       so that i can be able to code for cleaning of textual data using
       nlp and spacy
       [192]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-05] [193]srk       3924
   2    [2.jpg?date=2019-04-05] [194]mark12    3510
   3    [3.jpg?date=2019-04-05] [195]nilabha   3261
   4    [4.jpg?date=2019-04-05] [196]nitish007 3237
   5    [5.jpg?date=2019-04-05] [197]tezdhar   3082
   [198]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [199]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [200]understanding support vector machine algorithm from examples
       (along with code)
     * [201]essentials of machine learning algorithms (with python and r
       codes)
     * [202]a complete tutorial to learn data science with python from
       scratch
     * [203]7 types of regression techniques you should know!
     * [204]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [205]a simple introduction to anova (with applications in excel)
     * [206]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [207]top 5 machine learning github repositories and reddit discussions
   from march 2019

[208]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [209]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[210]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [211]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[212]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [213]16 opencv functions to start your id161 journey (with
   python code)

[214]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [215][ds-finhack.jpg]

   [216][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [217]about us
     * [218]our team
     * [219]career
     * [220]contact us
     * [221]write for us

   [222]about us
   [223]   
   [224]our team
   [225]   
   [226]careers
   [227]   
   [228]contact us

data scientists

     * [229]blog
     * [230]hackathon
     * [231]discussions
     * [232]apply jobs
     * [233]leaderboard

companies

     * [234]post jobs
     * [235]trainings
     * [236]hiring hackathons
     * [237]advertising
     * [238]reach us

   don't have an account? [239]sign up here.

join our community :

   [240]46336 [241]followers
   [242]20224 [243]followers
   [244]followers
   [245]7513 [246]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [247]privacy policy
     * [248]terms of use
     * [249]refund policy

   don't have an account? [250]sign up here

   iframe: [251]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [252](button) join now

   subscribe!

   iframe: [253]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [254](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-%e2%80%8bin-python/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-%e2%80%8bin-python/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/machine-learning/
  94. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/
  95. https://www.analyticsvidhya.com/blog/category/machine-learning/
  96. https://www.analyticsvidhya.com/blog/category/nlp/
  97. https://www.analyticsvidhya.com/blog/category/python-2/
  98. https://www.analyticsvidhya.com/blog/author/shivam5992/
  99. https://www.analyticsvidhya.com/blog/2017/01/ultimate-guide-to-understand-implement-natural-language-processing-codes-in-python/
 100. http://www.nltk.org/
 101. https://pypi.python.org/pypi/spacy
 102. https://github.com/explosion/spacy-models/
 103. https://s3-ap-south-1.amazonaws.com/av-blog-media/wp-content/uploads/2017/04/04080929/tripadvisor_hotelreviews_shivambansal.txt
 104. https://nlp.stanford.edu/projects/glove/
 105. https://datahack.analyticsvidhya.com/contest/linguipedia-codefest-natural-language-processing-1/?utm_source=natural-language-processing-made-easy-using-spacy-   in-python&utm_medium=blog
 106. https://datahack.analyticsvidhya.com/contest/practice-problem-twitter-sentiment-analysis/?utm_source=natural-language-processing-made-easy-using-spacy-   in-python&utm_medium=blog
 107. https://www.analyticsvidhya.com/blog
 108. https://datahack.analyticsvidhya.com/
 109. https://www.analyticsvidhya.com/jobs/#/user/
 110. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 111. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/?share=linkedin
 112. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/?share=facebook
 113. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/?share=twitter
 114. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/?share=pocket
 115. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/?share=reddit
 116. https://www.analyticsvidhya.com/blog/tag/advanced-python/
 117. https://www.analyticsvidhya.com/blog/tag/natural-language-processing/
 118. https://www.analyticsvidhya.com/blog/tag/nlp/
 119. https://www.analyticsvidhya.com/blog/tag/nlp-libraries/
 120. https://www.analyticsvidhya.com/blog/tag/python/
 121. https://www.analyticsvidhya.com/blog/tag/spacy/
 122. https://www.analyticsvidhya.com/blog/author/shivam5992/
 123. https://discuss.analyticsvidhya.com/
 124. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126124
 125. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126124
 126. http://www.exzeo.com/
 127. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126125
 128. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126125
 129. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126128
 130. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126128
 131. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126142
 132. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126142
 133. http://shivambansal.com/
 134. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126148
 135. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126148
 136. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-127629
 137. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-127629
 138. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-139904
 139. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-139904
 140. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126150
 141. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126150
 142. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126153
 143. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126153
 144. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126161
 145. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126161
 146. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126360
 147. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126360
 148. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126546
 149. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-126546
 150. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-127176
 151. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-127176
 152. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-134055
 153. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-134055
 154. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-129870
 155. https://www.analyticsvidhya.com/cdn-cgi/l/email-protection#d2b3bfbba6b1a0b4e0e6e0e092b5bfb3bbbefcb1bdbf
 156. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-129870
 157. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-130471
 158. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-130471
 159. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-131476
 160. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-131476
 161. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-131678
 162. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-131678
 163. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-131679
 164. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-131679
 165. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-145152
 166. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-145152
 167. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-137652
 168. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-137652
 169. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-140777
 170. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-140777
 171. http://www.cameronstewart.com.au/
 172. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-143148
 173. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-143148
 174. http://iamlordaubrey.github.io/
 175. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-150778
 176. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-150778
 177. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-144308
 178. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-144308
 179. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-144453
 180. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-144453
 181. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-150817
 182. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-150817
 183. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151158
 184. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151158
 185. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151165
 186. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151165
 187. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151718
 188. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151718
 189. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151810
 190. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-151810
 191. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-152510
 192. https://www.analyticsvidhya.com/blog/2017/04/natural-language-processing-made-easy-using-spacy-   in-python/#comment-152510
 193. https://datahack.analyticsvidhya.com/user/profile/srk
 194. https://datahack.analyticsvidhya.com/user/profile/mark12
 195. https://datahack.analyticsvidhya.com/user/profile/nilabha
 196. https://datahack.analyticsvidhya.com/user/profile/nitish007
 197. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 198. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 199. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 200. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 201. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 202. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 203. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 204. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 205. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 206. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 207. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 208. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 209. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 210. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 211. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 212. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 213. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 214. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 215. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 216. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 217. http://www.analyticsvidhya.com/about-me/
 218. https://www.analyticsvidhya.com/about-me/team/
 219. https://www.analyticsvidhya.com/career-analytics-vidhya/
 220. https://www.analyticsvidhya.com/contact/
 221. https://www.analyticsvidhya.com/about-me/write/
 222. http://www.analyticsvidhya.com/about-me/
 223. https://www.analyticsvidhya.com/about-me/team/
 224. https://www.analyticsvidhya.com/about-me/team/
 225. https://www.analyticsvidhya.com/about-me/team/
 226. https://www.analyticsvidhya.com/career-analytics-vidhya/
 227. https://www.analyticsvidhya.com/about-me/team/
 228. https://www.analyticsvidhya.com/contact/
 229. https://www.analyticsvidhya.com/blog
 230. https://datahack.analyticsvidhya.com/
 231. https://discuss.analyticsvidhya.com/
 232. https://www.analyticsvidhya.com/jobs/
 233. https://datahack.analyticsvidhya.com/users/
 234. https://www.analyticsvidhya.com/corporate/
 235. https://trainings.analyticsvidhya.com/
 236. https://datahack.analyticsvidhya.com/
 237. https://www.analyticsvidhya.com/contact/
 238. https://www.analyticsvidhya.com/contact/
 239. https://datahack.analyticsvidhya.com/signup/
 240. https://www.facebook.com/analyticsvidhya/
 241. https://www.facebook.com/analyticsvidhya/
 242. https://twitter.com/analyticsvidhya
 243. https://twitter.com/analyticsvidhya
 244. https://plus.google.com/+analyticsvidhya
 245. https://in.linkedin.com/company/analytics-vidhya
 246. https://in.linkedin.com/company/analytics-vidhya
 247. https://www.analyticsvidhya.com/privacy-policy/
 248. https://www.analyticsvidhya.com/terms/
 249. https://www.analyticsvidhya.com/refund-policy/
 250. https://id.analyticsvidhya.com/accounts/signup/
 251. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 252. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 253. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 254. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 256. https://www.facebook.com/analyticsvidhya
 257. https://twitter.com/analyticsvidhya
 258. https://plus.google.com/+analyticsvidhya/posts
 259. https://in.linkedin.com/company/analytics-vidhya
 260. https://datahack.analyticsvidhya.com/contest/linguipedia-codefest-natural-language-processing-1/?utm_source=natural-language-processing-made-easy-using-spacy-%e2%80%8bin-python&utm_medium=blog
 261. https://datahack.analyticsvidhya.com/contest/practice-problem-twitter-sentiment-analysis/?utm_source=natural-language-processing-made-easy-using-spacy-%e2%80%8bin-python&utm_medium=blog
 262. https://www.analyticsvidhya.com/blog/2017/04/interview-with-mahesh-kumar-ceo-tiger-analytics/
 263. https://www.analyticsvidhya.com/blog/2017/04/manager-wholesale-impairment-analytics-bangalore-5-10-years-of-experience/
 264. https://www.analyticsvidhya.com/blog/author/shivam5992/
 265. https://twitter.com/shivamshaz
 266. https://www.linkedin.com/in/shivambansal1
 267. https://github.com/shivam5992
 268. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 269. https://www.facebook.com/analyticsvidhya/
 270. https://twitter.com/analyticsvidhya
 271. https://plus.google.com/+analyticsvidhya
 272. https://plus.google.com/+analyticsvidhya
 273. https://in.linkedin.com/company/analytics-vidhya
 274. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 275. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 276. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 277. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 278. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 279. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 280. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 281. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 282. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 283. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 284. javascript:void(0);
 285. javascript:void(0);
 286. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 287. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 288. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 289. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 290. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 291. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 292. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 293. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 294. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 295. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f04%2fnatural-language-processing-made-easy-using-spacy-%25e2%2580%258bin-python%2f&linkname=natural%20language%20processing%20made%20easy%20-%20using%20spacy%20%28%e2%80%8bin%20python%29
 296. javascript:void(0);
 297. javascript:void(0);
