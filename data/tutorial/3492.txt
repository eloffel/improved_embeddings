   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    introductory guide to generative adversarial
   networks (gans) and their promise! comments feed [4]alternate
   [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]deep learning [94]introductory guide to generative
   adversarial networks (gans) and their promise!

   [95]deep learning[96]machine learning

introductory guide to id3 (gans) and their
promise!

   [97]faizan shaikh, june 15, 2017

introduction

   neural networks have made great progress. they now recognize images and
   voice at levels comparable to humans. they are also able to understand
   natural language with a good accuracy.

   but, even then, the talk of automating human tasks with machines looks
   a bit far fetched. after all, we do much more than just recognizing
   image / voice or understanding what people around us are saying     don   t
   we?

   let us see a few examples where we need human creativity (at least as
   of now):
     * train an artificial author which can write an article and explain
       data science concepts to a community in a very simplistic manner by
       learning from past articles on analytics vidhya
     * you are not able to buy a painting from a famous painter which
       might be too expensive. can you create an artificial painter which
       can paint like any famous artist by learning from his / her past
       collections?

   do you think, these tasks can be accomplished by machines? well     the
   answer might surprise you     

   these are definitely difficult to automate tasks, but generative
   adversarial networks (gans) have started making some of these tasks
   possible.

   if you feel intimidated by the name gan     don   t worry! you will feel
   comfortable with them by end of this article.

   in this article, i will introduce you to the concept of gans and
   explain how they work along with the challenges. i will also let you
   know of some cool things people have done using gan and give you links
   to some of the important resources for getting deeper into these
   techniques.


excuse me, but what is a gan?

   yann lecun, a prominent figure in deep learning domain said in his
   quora session that

      (gans), and the variations that are now being proposed is the most
   interesting idea in the last 10 years in ml, in my opinion.   

   surely he has a point. when i saw the implicationsgenerative
   adversarial networks (gans) can have if they were executed to their
   fullest extent, i was impressed too.

   but what is a gan?

   let us take an analogy to explain the concept:

   if you want to get better at something, say chess; what would you do?
   you would compete with an opponent better than you. then you would
   analyze what you did wrong, what he / she did right, and think on what
   could you do to beat him / her in the next game.

   you would repeat this step until you defeat the opponent. this concept
   can be incorporated to build better models. so simply, for getting a
   powerful hero (viz generator), we need a more powerful opponent (viz
   discriminator)!

another analogy from real life

   a slightly more real analogy can be considered as a relation between
   forger and an investigator.

   the task of a forger is to create fraudulent imitations of original
   paintings by famous artists. if this created piece can pass as the
   original one, the forger gets a lot of money in exchange of the piece.

   on the other hand, an art investigator   s task is to catch these forgers
   who create the fraudulent pieces. how does he do it? he knows what are
   the properties which sets the original artist apart and what kind of
   painting he should have created. he evaluates this knowledge with the
   piece in hand to check if it is real or not.

   this contest of forger vs investigator goes on, which ultimately makes
   world class investigators (and unfortunately world class forger); a
   battle between good and evil.


how do gans work?

   we got a high level overview of gans. now, we will go on to understand
   their nitty-gritty of these things.

   as we saw, there are two main components of a gan     generator neural
   network and discriminator neural network.

   the generator network takes an random input and tries to generate a
   sample of data. in the above image, we can see that generator g(z)
   takes a input z from p(z), where  z is a sample from id203
   distribution p(z). it then generates a data which is then fed into a
   discriminator network d(x). the task of discriminator network is to
   take input either from the real data or from the generator and try to
   predict whether the input is real or generated. it takes an input x
   from p[data](x) where p[data](x) is our real data distribution. d(x)
   then solves a binary classification problem using sigmoid function
   giving output in the range 0 to 1.

   let us define the notations we will be using to formalize our gan,

   pdata(x) -> the distribution of real data
   x -> sample from pdata(x)
   p(z) -> distribution of generator
   z -> sample from p(z)
   g(z) -> generator network
   d(x) -> discriminator network

   now the training of gan is done (as we saw above) as a fight between
   generator and discriminator. this can be represented mathematically as

   in our function v(d, g) the first term is id178 that the data from
   real distribution (pdata(x)) passes through the discriminator (aka best
   case scenario). the discriminator tries to maximize this to 1. the
   second term is id178 that the data from random input (p(z)) passes
   through the generator, which then generates a fake sample which is then
   passed through the discriminator to identify the fakeness (aka worst
   case scenario). in this term, discriminator tries to maximize it to 0
   (i.e. the log id203 that the data from generated is fake is equal
   to 0). so overall, the discriminator is trying to maximize our function
   v.

   on the other hand, the task of generator is exactly opposite, i.e. it
   tries to minimize the function v so that the differentiation between
   real and fake data is bare minimum. this, in other words is a cat and
   mouse game between generator and discriminator!

   note: this method of training a gan is taken from game theory called
   the minimax game.

parts of training gan

   so broadly a training phase has two main subparts and they are done
   sequentially
     * pass 1: train discriminator and freeze generator (freezing means
       setting training as false. the network does only forward pass and
       no id26 is applied)
     * pass 2: train generator and freeze discriminator

steps to train a gan

   step 1: define the problem. do you want to generate fake images or fake
   text. here you should completely define the problem and collect data
   for it.

   step 2: define architecture of gan. define how your gan should look
   like. should both your generator and discriminator be multi layer
   id88s, or convolutional neural networks? this step will depend on
   what problem you are trying to solve.

   step 3: train discriminator on real data for n epochs. get the data you
   want to generate fake on and train the discriminator to correctly
   predict them as real. here value n can be any natural number between 1
   and infinity.

   step 4: generate fake inputs for generator and train discriminator on
   fake data. get generated data and let the discriminator correctly
   predict them as fake.

   step 5: train generator with the output of discriminator. now when the
   discriminator is trained, you can get its predictions and use it as an
   objective for training the generator. train the generator to fool the
   discriminator.

   step 6: repeat step 3 to step 5 for a few epochs.

   step 7: check if the fake data manually if it seems legit. if it seems
   appropriate, stop training, else go to step 3. this is a bit of a
   manual task, as hand evaluating the data is the best way to check the
   fakeness. when this step is over, you can evaluate whether the gan is
   performing well enough.

   now just take a breath and look at what kind of implications this
   technique could have. if hypothetically you had a fully functional
   generator, you can duplicate almost anything. to give you examples, you
   can generate fake news; create books and novels with unimaginable
   stories; on call support and much more. you can have artificial
   intelligence as close to reality; a true artificial  intelligence!
   that   s the dream!!


challenges with gans

   you may ask, if we know what could these beautiful creatures
   (monsters?) do; why haven   t something happened? this is because we have
   barely scratched the surface. there   s so many roadblocks into building
   a    good enough    gan and we haven   t cleared many of them yet. there   s a
   whole area of research out there just to find    [98]how to train a gan   

   the most important roadblock while training a gan is stability. if you
   start to train a gan, and the discriminator part is much powerful that
   its generator counterpart, the generator would fail to train
   effectively. this will in turn affect training of your gan. on the
   other hand, if the discriminator is too lenient; it would let literally
   any image be generated. and this will mean that your gan is useless.

   another way to glance at stability of gan is to look as a holistic
   convergence problem. both generator and discriminator are fighting
   against each other to get one step ahead of the other. also, they are
   dependent on each other for efficient training. if one of them fails,
   the whole system fails. so you have to make sure they don   t explode.

   this is kind of like the shadow in [99]prince of persia game . you have
   to defend yourself from the shadow, which tries to kill you. if you
   kill the shadow you die, but if you don   t do anything, you will
   definitely die!

   there are other problems too, which i will list down here. (reference:
   http://www.iangoodfellow.com/slides/2016-12-04-nips.pdf)

   note: below mentioned images are generated by a gan trained on id163
   dataset.
     * problem with counting: gans fail to differentiate how many of a
       particular object should occur at a location. as we can see below,
       it gives more number of eyes in the head than naturally present.


     * problems with perspective: gans fail to adapt to 3d objects. it
       doesn   t understand perspective, i.e.difference between frontview
       and backview. as we can see below, it gives flat (2d)
       representation of 3d objects.
     * problems with global structures: same as the problem with
       perspective, gans do not understand a holistic structure. for
       example, in the bottom left image, it gives a generated image of a
       quadruple cow, i.e. a cow standing on its hind legs and
       simultaneously on all four legs. that is definitely not possible in
       real life!


   a substantial research is being done to take care of these problems.
   newer types of models are proposed which give more accurate results
   than previous techniques, such as dcgan, wassersteingan etc


implementing a toy gan

   lets see a toy implementation of gan to strengthen our theory. we will
   try to generate digits by training a gan on [100]identify the digits
   dataset. a bit about the dataset; the dataset contains 28  28 images
   which are black and white. all the images are in    .png    format. for our
   task, we will only work on the training set. you can download the
   [101]dataset from here.

   you also need to setup the libraries , namely
     * [102]numpy
     * [103]pandas
     * [104]tensorflow
     * [105]keras
     * [106]keras_adversarial

   before starting with the code, let us understand the internal working
   thorugh pseudocode. a pseudocode of gan training can be thought out as
   follows

   source: [107]http://papers.nips.cc/paper/5423-generative-adversarial

   note: this is the first implementation of gan that was published in the
   paper. numerous improvements/updates in the pseudocode can be seen in
   the recent papers such as adding batch id172 in the generator
   and discrimination network, training generator k times etc.

   now lets start with the code!

   let us first import all the modules
# import modules
%pylab inline

import os
import numpy as np
import pandas as pd
from scipy.misc import imread

import keras
from keras.models import sequential
from keras.layers import dense, flatten, reshape, inputlayer
from keras.regularizers import l1l2

   to have a deterministic randomness, we set a seed value
# to stop potential randomness
seed = 128
rng = np.random.randomstate(seed)

   we set the path of our data and working directory
# set path
root_dir = os.path.abspath('.')
data_dir = os.path.join(root_dir, 'data')

   let us load our data
# load data
train = pd.read_csv(os.path.join(data_dir, 'train', 'train.csv'))
test = pd.read_csv(os.path.join(data_dir, 'test.csv'))

temp = []
for img_name in train.filename:
    image_path = os.path.join(data_dir, 'train', 'images', 'train', img_name)
    img = imread(image_path, flatten=true)
    img = img.astype('float32')
    temp.append(img)

train_x = np.stack(temp)

train_x = train_x / 255.

   to visualize what our data looks like, let us plot one of the image
# print image
img_name = rng.choice(train.filename)
filepath = os.path.join(data_dir, 'train', 'images', 'train', img_name)

img = imread(filepath, flatten=true)

pylab.imshow(img, cmap='gray')
pylab.axis('off')
pylab.show()

   define variables which we will be using later
# define variables

   # define vars g_input_shape = 100 d_input_shape = (28, 28)
   hidden_1_num_units = 500 hidden_2_num_units = 500 g_output_num_units =
   784 d_output_num_units = 1 epochs = 25 batch_size = 128

   now define our generator and discriminator networks
# generator
model_1 = sequential([
    dense(units=hidden_1_num_units, input_dim=g_input_shape, activation='relu',
kernel_regularizer=l1l2(1e-5, 1e-5)),

    dense(units=hidden_2_num_units, activation='relu', kernel_regularizer=l1l2(1
e-5, 1e-5)),

    dense(units=g_output_num_units, activation='sigmoid', kernel_regularizer=l1l
2(1e-5, 1e-5)),

    reshape(d_input_shape),
])

# discriminator
model_2 = sequential([
    inputlayer(input_shape=d_input_shape),

    flatten(),

    dense(units=hidden_1_num_units, activation='relu', kernel_regularizer=l1l2(1
e-5, 1e-5)),

    dense(units=hidden_2_num_units, activation='relu', kernel_regularizer=l1l2(1
e-5, 1e-5)),

    dense(units=d_output_num_units, activation='sigmoid', kernel_regularizer=l1l
2(1e-5, 1e-5)),
])

   here is the architecture of our networks

   we will then define our gan, for that we will first import a few
   important modules
from keras_adversarial import adversarialmodel, simple_gan, gan_targets
from keras_adversarial import adversarialoptimizersimultaneous, normal_latent_sa
mpling

   let us compile our gan and start the training
gan = simple_gan(model_1, model_2, normal_latent_sampling((100,)))
model = adversarialmodel(base_model=gan,player_params=[model_1.trainable_weights
, model_2.trainable_weights])
model.adversarial_compile(adversarial_optimizer=adversarialoptimizersimultaneous
(), player_optimizers=['adam', 'adam'], loss='binary_crossid178')

history = model.fit(x=train_x, y=gan_targets(train_x.shape[0]), epochs=10, batch
_size=batch_size)

   here   s how our gan would look like,

   we get a graph like after training for 10 epochs.
plt.plot(history.history['player_0_loss'])
plt.plot(history.history['player_1_loss'])
plt.plot(history.history['loss'])

   after training for 100 epochs, i got the following generated images
zsamples = np.random.normal(size=(10, 100))
pred = model_1.predict(zsamples)
for i in range(pred.shape[0]):
    plt.imshow(pred[i, :], cmap='gray')
    plt.show()

   and voila! you have built your first generative model!


applications of gan

   we saw an overview of how these things work and got to know the
   challenges of training them. we will now see the cutting edge research
   that has been done using gans
     * predicting the next frame in a video : you train a gan on video
       sequences and let it predict what would occur next
       paper : https://arxiv.org/pdf/1511.06380.pdf


     * increasing resolution of an image : generate a high resolution
       photo from a comparatively low resolution. paper:
       https://arxiv.org/pdf/1609.04802.pdf


     * interactive image generation : draw simple strokes and let the gan
       draw an impressive picture for you!
       link: https://github.com/junyanz/igan


     * image to image translation : generate an image from another image.
       for example, given on the left, you have labels of a street scene
       and you can generate a real looking photo with gan. on the right,
       you give a simple drawing of a handbag and you get a real looking
       drawing of a handbag. paper: https://arxiv.org/pdf/1611.07004.pdf


     * text to image generation : just say to your gan what you want to
       see and get a realistic photo of the target.
       paper : https://arxiv.org/pdf/1605.05396.pdf


resources

   here are some resources which you might find helpful to get more
   in-depth on gan
     * [108]list of papers published on gans
     * [109]a brief chapter on deep generative modelling
     * [110]workshop on generative adversarial network by ian goodfellow
     * [111]nips 2016 workshop on adversarial training


end notes

   phew! i hope you are now as excited about the future as i was when i
   first read about gans. they are set to change what machines can do for
   us. think of it     from preparing new recipes of food to creating
   drawings. the possibilities are endless.

   in this article, i tried to cover a general overview of gan and its
   applications. gan is very exciting area and that   s why researchers are
   so excited about building generative models and you can see that new
   papers on gans are coming out more frequently.

   if you have any questions on gans, please feel free to share them with
   me through comments.

[112]learn, [113]compete, hack and [114]get hired!


   you can also read this article on analytics vidhya's android app
   [115]get it on google play

share this:

     * [116]click to share on linkedin (opens in new window)
     * [117]click to share on facebook (opens in new window)
     * [118]click to share on twitter (opens in new window)
     * [119]click to share on pocket (opens in new window)
     * [120]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [121]id158, [122]deep learning,
   [123]discriminator, [124]gan, [125]generative adversarial net,
   [126]generator
   next article

director/ vp (analytics)     gurugram (8-14 years of experience)

   previous article

data scientist     bangalore (4-8 years of experience)

[127]faizan shaikh

   faizan is a data science enthusiast and a deep learning rookie. a
   recent comp. sc. undergrad, he aims to utilize his skills to push the
   boundaries of ai research.
     *
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [128]discussion portal to get your queries resolved

38 comments

     * preeti agarwal says:
       [129]june 15, 2017 at 1:53 pm
       fabulous explanation on a difficult topic   .great work
       [130]reply
          + faizan shaikh says:
            [131]june 15, 2017 at 6:58 pm
            thanks preeti!
            [132]reply
     * jint george says:
       [133]june 15, 2017 at 11:04 pm
       nice explanation. thanks!
       [134]reply
          + faizan shaikh says:
            [135]june 16, 2017 at 2:54 am
            thanks jint
            [136]reply
     * mileta says:
       [137]june 15, 2017 at 11:40 pm
       amazing article !
       thanks faizan !
       [138]reply
          + faizan shaikh says:
            [139]june 17, 2017 at 10:10 pm
            thanks mileta
            [140]reply
     * dikshant gupta says:
       [141]june 18, 2017 at 5:58 pm
       great work man!! i was looking for such explanation for quite a
       while.
       generating mnist image, so awesome!
       [142]reply
          + faizan shaikh says:
            [143]june 18, 2017 at 8:42 pm
            thanks dikshant
            [144]reply
     * b.rabbit says:
       [145]june 20, 2017 at 10:08 pm
       great explanation bro. keep it going.
       [146]reply
          + faizan shaikh says:
            [147]june 22, 2017 at 7:46 pm
            thanks rabbit!
            [148]reply
     * akram khan says:
       [149]june 21, 2017 at 12:30 am
       this is great very nice article it is very helpful keep up on the
       good work
       [150]reply
          + faizan shaikh says:
            [151]june 22, 2017 at 7:46 pm
            thanks akram!
            [152]reply
     * prof ravi vadlamani says:
       [153]july 2, 2017 at 6:23 pm
       impressive exposition mr faizan ! i liked it very much. its
       applications are mind boggling.
       [154]reply
     * amol says:
       [155]july 18, 2017 at 8:52 pm
       hello i am new to gan, i have data from 400 animations of a
       humanoid robot. data includes (joint angles at particular time
       frames). so basically 2d data for a total 22 joints on the robot.
       is it possible to use gan to generate new animations and if so can
       you please point me to the right direction? thanks
       [156]reply
          + faizan shaikh says:
            [157]august 17, 2017 at 4:52 pm
            hi amol.
            you problem seems interesting. on a high level, i can see a
            successful gan implementation here. but i can   t say for sure
            until it is tried out. i would suggest you to try out the same
            way as shown in the article. good luck!
            [158]reply
     * mrinal says:
       [159]july 25, 2017 at 11:07 am
       i understood the purpose of gan. one thing it may be to generate
       highly similar looking
       images. my question is, what can be the application of these fake
       images? what will we do with these fake images?
       [160]reply
          + faizan shaikh says:
            [161]august 9, 2017 at 12:46 pm
            a simple example can be like this; suppose you are chatting
            with you friend and telling him about your recent long drive.
            unfortunately you did not take any pictures along they way.
            what would you do? you tell the algorithm to create images
            which you describe to it and get    fake    real looking images
            which you send to your friend. cool enough?
            [162]reply
     * dhruv rathi says:
       [163]july 29, 2017 at 12:21 pm
       great explanation, but i am facing many errors inside the
       keras/engine/training.py file, and could not figure them out, is
       that a common problem? (using keras with tf as backend)
       [164]reply
          + faizan shaikh says:
            [165]august 9, 2017 at 12:40 pm
            well i did not face much issue when building a model. maybe
            you should report your issues in the official github repo
            ([166]https://github.com/bstriner/keras-adversarial)
            [167]reply
     * [168]david axelrod says:
       [169]july 31, 2017 at 4:39 pm
       this is awesome faizan! really great explanation and examples!
       [170]reply
     * saumya shah says:
       [171]august 2, 2017 at 3:26 pm
       attributeerror:    adversarialmodel    object has no attribute
          _feed_output_shapes   
       [172]reply
          + faizan shaikh says:
            [173]august 9, 2017 at 12:41 pm
            well i did not face much issue when building a model. maybe
            you should report your issues in the official github repo
            ([174]https://github.com/bstriner/keras-adversarial)
            [175]reply
     * nour soufi says:
       [176]august 9, 2017 at 5:33 pm
       thanks for the nice explanation.
       i am trying to apply my own dataset on this implementation.
       what should i place in( y=gan_targets(train_x.shape[0])) isn   t y
       should be the labels of my images ??
       when i pass my labels here i get the following error:
       valueerror: error when checking input: expected input_1 to have 3
       dimensions, but got array with shape (643, 3, 32, 32)
       [177]reply
          + faizan shaikh says:
            [178]august 17, 2017 at 4:48 pm
            hi, here y does not denote the label. i would suggest you to
            keep the value as it is.
            [179]reply
     * jitesh shah says:
       [180]august 11, 2017 at 2:04 pm
       g_input_shape = 100 , how this 100 coming ?
       [181]reply
          + faizan shaikh says:
            [182]august 17, 2017 at 4:46 pm
            hi, consider it as a random input to the generator.
            [183]reply
     * jitesh shah says:
       [184]august 16, 2017 at 1:01 pm
       i am not understanding how images are generated , after
       discriminator classify the real and fake images ?
       [185]reply
          + faizan shaikh says:
            [186]august 17, 2017 at 4:41 pm
            hi, images are generated by the generator. the task of
            discriminator can be considered as a peer who helps improve
            the performance of geenrator
            [187]reply
     * jitesh pradipkumar shah says:
       [188]august 17, 2017 at 4:50 pm
       hi, can you tell me source of detailed explanation for problems in
       gan ?
       [189]reply
          + faizan shaikh says:
            [190]august 21, 2017 at 7:16 pm
            hi jitesh,
            the resource which i mentioned in the article (ian
            goodfellow   s slides) has an overview of what chalenges we
            usually face when training gan. on the other hand, i could not
            find a survey paper on problems in gan. maybe the community
            can help us here?
            [191]reply
     * chaitra says:
       [192]august 18, 2017 at 12:24 pm
       hi faizan
       nice explanation!!. thanks for explaining gan as simple as
       possible.
       is it possible to convert a sonar image to a normal image using gan
       [193]reply
          + faizan shaikh says:
            [194]august 21, 2017 at 6:52 pm
            thanks chaitra!
            your use case seems a bit deviated towards supervised learning
            than using gans. to explain it simply, you can take sonar
            image as input, and you target is to predict a normal image.
            this looks more like a supervised learning problem.
            [195]reply
     * ricky charles says:
       [196]september 20, 2017 at 7:30 am
       hi faizan.
       great tutorial!
       what shape is your train_x ? i have loaded data from keras dataset
       as follows:
       #         -
       from keras.datasets import mnist
       (x_train, y_train), (x_test, y_test) = mnist.load_data()
       then converted and normalized as follows:
       #   
       x_train = x_train.astype(   float32   )
       x_test = x_test.astype(   float32   )
       x_train /= 255
       x_test /= 255
       #                                                      
       my model configuration is identical to yours. at this stage:
       history = model.fit(x= x_train, y=gan_targets(x_train.shape[0]),
       epochs=10, batch_size=batch_size)
       am getting the error:
       valueerror: error when checking target: expected player_0_yfake to
       have shape (none, 500) but got array with shape (60000, 1)
       #      
       what am i doing wrong?
       i tried re-shaping:
       x_train = x_train.reshape(x_train.shape[0], 1, 28,
       28).astype(   float32   )
       x_train/=255
       and got even worse:
       valueerror: error when checking input: expected input_1 to have 3
       dimensions, but got array with shape (60000, 1, 28, 28)
       [197]reply
     * ricky charles says:
       [198]september 20, 2017 at 7:50 am
       hi faizan,
       i figured it out.
       thanks
       [199]reply
     * anu says:
       [200]october 4, 2017 at 12:00 pm
       how to evaluate the gan model? if any one know please let me know
       [201]reply
          + faizan shaikh says:
            [202]november 16, 2017 at 5:28 pm
            the best way to evaluate any model     whether it be gan or any
            machine learning model     is to check the output created the
            model visually
            [203]reply
     * ziren_wang says:
       [204]october 15, 2017 at 7:29 am
       very good ! reply from china. by the way, your other articles is
       also valuable. study from you
       [205]reply
          + faizan shaikh says:
            [206]november 16, 2017 at 5:20 pm
            thanks!
            [207]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-05] [208]srk       3924
   2    [2.jpg?date=2019-04-05] [209]mark12    3510
   3    [3.jpg?date=2019-04-05] [210]nilabha   3261
   4    [4.jpg?date=2019-04-05] [211]nitish007 3237
   5    [5.jpg?date=2019-04-05] [212]tezdhar   3082
   [213]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [214]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [215]understanding support vector machine algorithm from examples
       (along with code)
     * [216]essentials of machine learning algorithms (with python and r
       codes)
     * [217]a complete tutorial to learn data science with python from
       scratch
     * [218]7 types of regression techniques you should know!
     * [219]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [220]a simple introduction to anova (with applications in excel)
     * [221]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [222]top 5 machine learning github repositories and reddit discussions
   from march 2019

[223]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [224]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[225]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [226]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[227]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [228]16 opencv functions to start your id161 journey (with
   python code)

[229]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [230][ds-finhack.jpg]

   [231][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [232]about us
     * [233]our team
     * [234]career
     * [235]contact us
     * [236]write for us

   [237]about us
   [238]   
   [239]our team
   [240]   
   [241]careers
   [242]   
   [243]contact us

data scientists

     * [244]blog
     * [245]hackathon
     * [246]discussions
     * [247]apply jobs
     * [248]leaderboard

companies

     * [249]post jobs
     * [250]trainings
     * [251]hiring hackathons
     * [252]advertising
     * [253]reach us

   don't have an account? [254]sign up here.

join our community :

   [255]46336 [256]followers
   [257]20224 [258]followers
   [259]followers
   [260]7513 [261]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [262]privacy policy
     * [263]terms of use
     * [264]refund policy

   don't have an account? [265]sign up here

   iframe: [266]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [267](button) join now

   subscribe!

   iframe: [268]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [269](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/deep-learning/
  94. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/
  95. https://www.analyticsvidhya.com/blog/category/deep-learning/
  96. https://www.analyticsvidhya.com/blog/category/machine-learning/
  97. https://www.analyticsvidhya.com/blog/author/jalfaizy/
  98. https://arxiv.org/pdf/1606.03498.pdf
  99. https://www.youtube.com/watch?v=b36edbvrge0
 100. https://datahack.analyticsvidhya.com/contest/practice-problem-identify-the-digits/
 101. https://datahack.analyticsvidhya.com/contest/practice-problem-identify-the-digits/
 102. https://scipy.org/install.html
 103. https://pandas.pydata.org/pandas-docs/stable/install.html
 104. https://www.tensorflow.org/install/
 105. https://keras.io/#installation
 106. https://github.com/bstriner/keras-adversarial#installation
 107. http://papers.nips.cc/paper/5423-generative-adversarial
 108. https://github.com/zhangqianhui/adversarialnetspapers
 109. http://www.deeplearningbook.org/contents/generative_models.html
 110. https://channel9.msdn.com/events/neural-information-processing-systems-conference/neural-information-processing-systems-conference-nips-2016/generative-adversarial-networks
 111. https://www.youtube.com/playlist?list=pljscn9ydd1buxcitmej1pjjkr5pmhentf
 112. https://www.analyticsvidhya.com/blog
 113. https://datahack.analyticsvidhya.com/
 114. https://www.analyticsvidhya.com/jobs/#/user/
 115. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 116. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/?share=linkedin
 117. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/?share=facebook
 118. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/?share=twitter
 119. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/?share=pocket
 120. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/?share=reddit
 121. https://www.analyticsvidhya.com/blog/tag/artificial-neural-network/
 122. https://www.analyticsvidhya.com/blog/tag/deep-learning/
 123. https://www.analyticsvidhya.com/blog/tag/discriminator/
 124. https://www.analyticsvidhya.com/blog/tag/gan/
 125. https://www.analyticsvidhya.com/blog/tag/generative-adversarial-net/
 126. https://www.analyticsvidhya.com/blog/tag/generator/
 127. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 128. https://discuss.analyticsvidhya.com/
 129. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130530
 130. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130530
 131. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130542
 132. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130542
 133. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130554
 134. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130554
 135. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130561
 136. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130561
 137. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130555
 138. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130555
 139. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130650
 140. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130650
 141. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130689
 142. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130689
 143. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130694
 144. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130694
 145. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130834
 146. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130834
 147. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130944
 148. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130944
 149. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130839
 150. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130839
 151. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130943
 152. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-130943
 153. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-131442
 154. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-131442
 155. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-132343
 156. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-132343
 157. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134519
 158. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134519
 159. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-132803
 160. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-132803
 161. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133963
 162. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133963
 163. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133163
 164. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133163
 165. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133961
 166. https://github.com/bstriner/keras-adversarial
 167. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133961
 168. http://tibah.io/
 169. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133302
 170. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133302
 171. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133493
 172. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133493
 173. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133962
 174. https://github.com/bstriner/keras-adversarial
 175. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133962
 176. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133984
 177. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-133984
 178. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134517
 179. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134517
 180. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134083
 181. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134083
 182. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134516
 183. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134516
 184. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134436
 185. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134436
 186. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134515
 187. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134515
 188. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134518
 189. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134518
 190. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134823
 191. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134823
 192. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134606
 193. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134606
 194. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134821
 195. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-134821
 196. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-137521
 197. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-137521
 198. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-137522
 199. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-137522
 200. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-138688
 201. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-138688
 202. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-144004
 203. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-144004
 204. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-139645
 205. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-139645
 206. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-144001
 207. https://www.analyticsvidhya.com/blog/2017/06/introductory-generative-adversarial-networks-gans/#comment-144001
 208. https://datahack.analyticsvidhya.com/user/profile/srk
 209. https://datahack.analyticsvidhya.com/user/profile/mark12
 210. https://datahack.analyticsvidhya.com/user/profile/nilabha
 211. https://datahack.analyticsvidhya.com/user/profile/nitish007
 212. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 213. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 214. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 215. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 216. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 217. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 218. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 219. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 220. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 221. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 222. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 223. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 224. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 225. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 226. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 227. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 228. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 229. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 230. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 231. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 232. http://www.analyticsvidhya.com/about-me/
 233. https://www.analyticsvidhya.com/about-me/team/
 234. https://www.analyticsvidhya.com/career-analytics-vidhya/
 235. https://www.analyticsvidhya.com/contact/
 236. https://www.analyticsvidhya.com/about-me/write/
 237. http://www.analyticsvidhya.com/about-me/
 238. https://www.analyticsvidhya.com/about-me/team/
 239. https://www.analyticsvidhya.com/about-me/team/
 240. https://www.analyticsvidhya.com/about-me/team/
 241. https://www.analyticsvidhya.com/career-analytics-vidhya/
 242. https://www.analyticsvidhya.com/about-me/team/
 243. https://www.analyticsvidhya.com/contact/
 244. https://www.analyticsvidhya.com/blog
 245. https://datahack.analyticsvidhya.com/
 246. https://discuss.analyticsvidhya.com/
 247. https://www.analyticsvidhya.com/jobs/
 248. https://datahack.analyticsvidhya.com/users/
 249. https://www.analyticsvidhya.com/corporate/
 250. https://trainings.analyticsvidhya.com/
 251. https://datahack.analyticsvidhya.com/
 252. https://www.analyticsvidhya.com/contact/
 253. https://www.analyticsvidhya.com/contact/
 254. https://datahack.analyticsvidhya.com/signup/
 255. https://www.facebook.com/analyticsvidhya/
 256. https://www.facebook.com/analyticsvidhya/
 257. https://twitter.com/analyticsvidhya
 258. https://twitter.com/analyticsvidhya
 259. https://plus.google.com/+analyticsvidhya
 260. https://in.linkedin.com/company/analytics-vidhya
 261. https://in.linkedin.com/company/analytics-vidhya
 262. https://www.analyticsvidhya.com/privacy-policy/
 263. https://www.analyticsvidhya.com/terms/
 264. https://www.analyticsvidhya.com/refund-policy/
 265. https://id.analyticsvidhya.com/accounts/signup/
 266. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 267. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 268. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 269. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 271. https://www.facebook.com/analyticsvidhya
 272. https://twitter.com/analyticsvidhya
 273. https://plus.google.com/+analyticsvidhya/posts
 274. https://in.linkedin.com/company/analytics-vidhya
 275. https://www.analyticsvidhya.com/blog/2017/06/director-vp-analytics-gurugram-8-14-years-of-experience/
 276. https://www.analyticsvidhya.com/blog/2017/06/data-scientist-bangalore-4-8-years-of-experience/
 277. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 278. https://www.linkedin.com/in/faizankshaikh
 279. http://github.com/faizankshaikh
 280. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 281. https://www.facebook.com/analyticsvidhya/
 282. https://twitter.com/analyticsvidhya
 283. https://plus.google.com/+analyticsvidhya
 284. https://plus.google.com/+analyticsvidhya
 285. https://in.linkedin.com/company/analytics-vidhya
 286. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 287. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 288. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 289. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 290. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 291. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 292. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 293. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 294. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 295. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 296. javascript:void(0);
 297. javascript:void(0);
 298. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 299. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 300. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 301. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 302. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 303. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 304. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 305. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 306. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 307. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f06%2fintroductory-generative-adversarial-networks-gans%2f&linkname=introductory%20guide%20to%20generative%20adversarial%20networks%20%28gans%29
 308. javascript:void(0);
 309. javascript:void(0);
