   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    simple beginner   s guide to id23
   & its implementation comments feed [4]alternate [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]machine learning [94]simple beginner   s guide to
   id23 & its implementation

   [95]machine learning[96]python

simple beginner   s guide to id23 & its implementation

   [97]faizan shaikh, january 19, 2017

introduction

   one of the most fundamental question for scientists across the globe
   has been        how to learn a new skill?   . the desire to understand the
   answer is obvious     if we can understand this, we can enable
   human species to do things we might not have thought before.
   alternately, we can train machines to do more    human    tasks and create
   true artificial intelligence.

   while we don   t have a complete answer to the above question yet, there
   are a few things which are clear. irrespective of the skill, we first
   learn by interacting with the environment. whether we are learning to
   drive a car or whether it an infant learning to walk, the learning is
   based on the interaction with the environment. learning from
   interaction is the foundational underlying concept for all theories of
   learning and intelligence.


re-inforcement learning

   today, we will explore id23     a goal-oriented
   learning based on interaction with environment. id23
   is said to be the hope of true artificial intelligence. and it is
   rightly said so, because the potential that id23
   possesses is immense.

   id23 is growing rapidly, producing wide variety of
   learning algorithms for different applications. hence it is important
   to be familiar with the techniques of id23. if you
   are not familiar with id23, i will suggest you to go
   through my [98]previous article on introduction to reinforcement
   learning and the open source rl platforms.

   once you have an understanding of underlying fundamentals, proceed with
   this article. by the end of this article you will have a thorough
   understanding of id23 and its practical
   implementation.


   p.s. for implementation, we assume that you have basic knowledge of
   python. if you don   t know python, you should first [99]go through this
   tutorial


table of content

    1. formulating a id23 problem
    2. comparison with other machine learning methodologies
    3. framework for solving id23 problems
    4. an implementation of id23
    5. increasing the complexity
    6. peek into recent rl advancements
    7. additional resources


1. formulating a id23 problem

   id23 is learning what to do and how to map situations
   to actions. the end result is to maximize the numerical reward signal.
   the learner is not told which action to take, but instead must discover
   which action will yield the maximum reward. let   s understand this with
   a simple example below.

   consider an example of a child learning to walk.

   [child-345523_1920.jpg]

   here are the steps a child will take while learning  to walk:
    1. the first thing the child will observe is to notice how you are
       walking. you use two legs, taking a step at a time in order to
       walk. grasping this concept, the child tries to replicate you.
    2. but soon he/she will understand that before walking, the child has
       to stand up! this is a challenge that comes along while trying to
       walk. so now the child attempts to get up, staggering and slipping
       but still determinant to get up.
    3. then there   s another challenge to cope up with. standing up was
       easy, but to remain still is another task altogether! clutching
       thin air to find support, the child manages to stay standing.
    4. now the real task for the child is to start walking. but it   s easy
       to say than actually do it. there are so many things to keep in
       mind, like balancing the body weight, deciding which foot to put
       next and where to put it.

   sounds like a difficult task right? it actually is a bit challenging to
   get up and start walking, but you have become so use to it that you are
   not fazed by the task. but now you can get the gist of how difficult it
   is for a child.

   let   s formalize the above example, the    problem statement    of the
   example is to walk, where the child is an agent trying to manipulate
   the environment (which is the surface on which it walks) by taking
   actions (viz walking) and he/she tries to go from one state (viz each
   step he/she takes) to another. the child gets a reward (let   s say
   chocolate) when he/she accomplishes a submodule of the task (viz taking
   couple of steps) and will not receive any chocolate (a.k.a negative
   reward) when he/she is not able to walk. this is a simplified
   description of a id23 problem.

   [figtmp7.png]

   [rl21.png]

   here   s a good introductory video on id23.

   iframe: [100]https://www.youtube.com/embed/m2wefarrie8?feature=oembed


2. comparison with other machine learning methodologies

   id23 belongs to a bigger class of machine learning
   algorithm. below is the description of types of machine learning
   methodologies.

   [ml_types.png]


   let   s see a comparison between rl and others:
     * supervised vs id23: in supervised learning,
       there   s an external    supervisor   , which has knowledge of the
       environment and who shares it with the agent to complete the task.
       but there are some problems in which there are so many combinations
       of subtasks that the agent can perform to achieve the objective. so
       that creating a    supervisor    is almost impractical. for example, in
       a chess game, there are tens of thousands of moves that can be
       played. so creating a knowledge base that can be played is a
       tedious task. in these problems, it is more feasible to learn from
       one   s own experiences and gain knowledge from them. this is the
       main difference that can be said of id23 and
       supervised learning. in both supervised and id23,
       there is a mapping between input and output. but in reinforcement
       learning, there is a reward function which acts as a feedback to
       the agent as opposed to supervised learning.
     * unsupervised vs reinforcement leanring: in id23,
       there   s a mapping from input to output which is not present in
       unsupervised learning. in unsupervised learning, the main task is
       to find the underlying patterns rather than the mapping. for
       example, if the task is to suggest a news article to a user, an
       unsupervised learning algorithm will look at similar articles which
       the person has previously read and suggest anyone from them.
       whereas a id23 algorithm will get constant
       feedback from the user by suggesting few news articles and then
       build a    id13    of which articles will the person like.

   there is also a fourth type of machine learning methodology called
   semi-supervised learning, which is essentially a combination of
   supervised and unsupervised learning. it differs from reinforcement
   learning as similar to supervised and semi-supervised learning has
   direct mapping whereas reinforcement does not.


3. framework for solving id23 problems

   to understand how to solve a id23 problem, let   s go
   through a classic example of id23 problem    
   multi-armed bandit problem. first, we would understand the fundamental
   problem of exploration vs exploitation and then go on to define the
   framework to solve rl problems.


   [addiction-bet-betting-casino.jpg]

   [jppc9i.gif]

   suppose you have many [101]slot machines with random payouts. a slot
   machine would look something like this.

   now you want to do is get the maximum bonus from the slot machines as
   fast as possible. what would you do?

   one naive approach might be to select only one slot machine and keep
   pulling the lever all day long. sounds boring, but it may give you
      some    payouts. with this approach, you might hit the jackpot (with a
   id203 close to 0.00000   .1) but most of the time you may just be
   sitting in front of the slot machine losing money. formally, this can
   be defined as a pure exploitation approach. is this the optimal choice?
   the answer is no.

   let   s look at another approach. we could pull a lever of each & every
   slot machine and pray to god that at least one of them would hit the
   jackpot. this is another naive approach which would keep you pulling
   levers all day long, but give you sub-optimal payouts. formally this
   approach is a pure exploration approach.

   both of these approaches are not optimal, and we have to find a proper
   balance between them to get maximum reward. this is said to be
   exploration vs exploitation dilemma of id23.

   first, we formally define the framework for id23
   problem and then list down the probable approaches to solve the
   problem.

markov decision process:

   the mathematical framework for defining a solution in reinforcement
   learning scenario is called markov decision process. this can be
   designed as:
     * set of states, s
     * set of actions, a
     * reward function, r
     * policy,   
     * value, v

   we have to take an action (a) to transition from our start state to our
   end state (s). in return getting rewards (r) for each action we take.
   our actions can lead to a positive reward or negative reward.

   the set of actions we took define our policy (  ) and the rewards we get
   in return defines our value (v). our task here is to maximize our
   rewards by choosing the correct policy. so we have to maximize
   [capture1.png] for all possible values of s for a time t.


shortest path problem

   let me take you through another example to make it clear.

[salesman2.png]

   this is a representation of a shortest path problem. the task is to go
   from place a to place f, with as low cost as possible. the numbers at
   each edge between two places represent the cost taken to traverse the
   distance. the negative cost are actually some earnings on the way. we
   define value is the total cumulative reward when you do a policy.

   here,
     * the set of states are the nodes, viz {a, b, c, d, e, f}
     * the action to take is to go from one place to other, viz {a -> b, c
       -> d, etc}
     * the reward function is the value represented by edge, i.e. cost
     * the policy is the    way    to complete the task, viz {a -> c -> f}

   now suppose you are at place a, the only visible path is your next
   destination and anything beyond that is not known at this stage (a.k.a
   observable space).

   you can take a greedy approach and take the best possible next step,
   which is going from {a -> d} from a subset of {a -> (b, c, d, e)}.
   similarly now you are at place d and want to go to place f, you can
   choose from {d -> (b, c, f)}. we see that {d -> f} has the lowest cost
   and hence we take that path.

   so here, our policy was to take {a -> d -> f} and our value is -120.

   congratulations! you have just implemented a id23
   algorithm. this algorithm is known as epsilon greedy, which is
   literally a greedy approach to solving the problem. now if you (the
   salesman) want to go from place a to place f again, you would always
   choose the same policy.

other ways of travelling?

   can you guess which category does our policy belong to  i.e. (pure
   exploration vs pure exploitation)?

   notice that the policy we took is not an optimal policy. we would have
   to    explore    a little bit to find the optimal policy. the approach
   which we took here is policy based learning, and our task is to find
   the optimal policy among all the possible policies. there are different
   ways to solve this problem, i   ll briefly list down the major categories
     * policy based, where our focus is to find optimal policy
     * value based, where our focus is to find optimal value, i.e.
       cumulative reward
     * action based, where our focus is on what optimal actions to take at
       each step

   i would try to cover in-depth id23 algorithms in
   future articles. till then, you can refer to this paper on a survey of
   [102]id23 algorithms.


4. an implementation of id23

   we will be using deep id24 algorithm. id24 is a policy
   based learning algorithm with the function approximator as a neural
   network. this algorithm was used by google to beat humans at atari
   games!

   let   s see a pseudocode of  id24:
    1. initialize the values table    q(s, a)   .
    2. observe the current state    s   .
    3. choose an action    a    for that state based on one of the action
       selection policies (eg. epsilon greedy)
    4. take the action, and observe the reward     r    as well as the new
       state     s   .
    5. update the value for the state using the observed reward and the
       maximum reward possible for the next state. the updating is done
       according to the formula and parameters described above.
    6. set the state to the new state, and repeat the process until a
       terminal state is reached.


   a simple description of id24 can be summarized as follows:

   [11038f3.jpg]

   we will first see what cartpole problem is then go on to coding up a
   solution

   when i was a kid, i remember that i would pick a stick and try to
   balance it on one hand. me and my friends used to have this competition
   where whoever balances it for more time would get a    reward   , a
   chocolate!

   here   s a short video description of a real cart-pole system

   iframe:
   [103]https://www.youtube.com/embed/xiigtgkzfks?start=132&feature=oembed

   let   s code it up!

   to setup our code, we need to first install a few things,

step 1: install keras-rl library

   from terminal, run the following commands:
git clone https://github.com/matthiasplappert/keras-rl.git
cd keras-rl
python setup.py install


step 2: install dependencies for cartpole environment

   assuming you have pip installed, you need to install the following
   libraries
pip install h5py
pip install gym


step 3: lets get started!

   first we have to import modules that are necessary
import numpy as np
import gym

from keras.models import sequential
from keras.layers import dense, activation, flatten
from keras.optimizers import adam

from rl.agents.id25 import id25agent
from rl.policy import epsgreedyqpolicy
from rl.memory import sequentialmemory

   then set the relevant variables
env_name = 'cartpole-v0'

# get the environment and extract the number of actions available in the cartpol
e problem
env = gym.make(env_name)
np.random.seed(123)
env.seed(123)
nb_actions = env.action_space.n

   next, we build a very simple single hidden layer neural network model.
model = sequential()
model.add(flatten(input_shape=(1,) + env.observation_space.shape))
model.add(dense(16))
model.add(activation('relu'))
model.add(dense(nb_actions))
model.add(activation('linear'))
print(model.summary())

   next, we configure and compile our agent. we set our policy as epsilon
   greedy and we also set our memory as sequential memory because we want
   to store the result of actions we performed and the rewards we get for
   each action.
policy = epsgreedyqpolicy()
memory = sequentialmemory(limit=50000, window_length=1)
id25 = id25agent(model=model, nb_actions=nb_actions, memory=memory, nb_steps_warmu
p=10,
target_model_update=1e-2, policy=policy)
id25.compile(adam(lr=1e-3), metrics=['mae'])

# okay, now it's time to learn something! we visualize the training here for sho
w, but this slows down training quite a lot.
id25.fit(env, nb_steps=5000, visualize=true, verbose=2)

   now we test our id23 model
id25.test(env, nb_episodes=5, visualize=true)

   this will be the output of our model:

   and voila! you have just built a id23 bot!


5. increasing the complexity

   now that you have seen a basic implementation of re-inforcement
   learning, let us start moving towards a few more problems, increasing
   the complexity little bit every time.


problem     towers of hanoi

   for those, who don   t know the game     it was invented in 1883
   and consists of 3 rods along with a number of sequentially-sized disks
   (3 in the figure above) starting at the leftmost rod. the objective is
   to move all the disks from the leftmost rod to the rightmost rod with
   the least number of moves. (you can read more on [104]wikipedia)

   if we have to map this problem, let us start with states:
     * starting state     all 3 disks in leftmost rod (in order 1, 2 and 3
       from top to bottom)
     * end state     all 3 disks in rightmost rod (in order 1, 2 and 3 from
       top to bottom)


   all possible states:

   here are our 27 possible states:
   all disks in a rod one disk in a rod (13) disks in a rod (23) disks in
   a rod (12) disks in a rod
        (123)** 321  (13)2*  (23)1*  (12)3*
         *(123)* 312  (13)*2 (23)*1 (12)*3
          **(123) 231 2(13)* 1(23)* 3(12)*
   132 *(13)2 *(23)1 *(12)3
   213 2*(13) 1*(23) 3*(12)
   123 *2(13) *1(23) *3(12)

   where (12)3* represents disks 1 and 2 in leftmost rod (top to bottom) 3
   in middle rod and * denotes an empty rightmost rod


   numerical reward:

   since we want to solve the problem in least number of steps, we can
   attach a reward of -1 to each step.


   policy:

   now, without going in any technical details, we can map possible
   transitions between above states. for example (123)** -> (23)1* with
   reward -1. it can also go to (23)*1

   if you can now see a parallel, each of these 27 states mentioned above
   can represent a graph similar to that of shortest path algorithm above
   and we can find the most optimal solutions by experimenting various
   states and paths.


problem     3 x 3 rubix cube

   while i can solve this for you as well, i would want you to do this by
   yourself. follow the same line of thought i used above and you should
   be good.

   start by defining the starting state and the end state. next, define
   all possible states and their transitions along with reward and policy.
   finally, you should be able to create a solution for solving a rubix
   cube using the same approach.



6. a peek into recent advancements in id23

   as you would realize that the complexity of this rubix cube is many
   folds higher than the towers of hanoi. you can also understand how the
   possible number of options have increased in number. now, think of
   number of states and options in a game of chess and then in go! google
   deepmind recently created a deep id23 algorithm which
   defeated lee sedol!

   with the recent success in deep learning, now the focus is slowly
   shifting to applying deep learning to solve id23
   problems. the news recently has been flooded with the defeat of lee
   sedol by a deep id23 algorithm developed by google
   deepmind. similar breakthroughs are being seen in video games, where
   the algorithms developed are achieving human-level accuracy and beyond.
   research is still at par, with both industrial and academic masterminds
   working together to accomplish the goal of building better
   self-learning robots

   [alphago-vs-lee-sedol-2_w_600.jpg]

   [105]source

   some major domains where rl has been applied are as follows:
     * game theory and multi-agent interaction
     * robotics
     * computer networking
     * vehicular navigation
     * medicine and
     * industrial logistic.

   there are so many things unexplored and with the current craze of deep
   learning applied to id23, there certainly are
   breakthroughs incoming!

   here is one of the recent news:

     excited to share an update on [106]#alphago!
     [107]pic.twitter.com/it5hgbmydr

         demis hassabis (@demishassabis) [108]january 4, 2017


7. additional resources

   i hope now you have in-depth understanding of how reinforcement
   learning works. here are some additional resources to help you explore
   more about id23
     * [109]videos on id23
     * [110]book on introduction to id23
     * [111]awesome id23 github repo
     * [112]course on id23 by david silver


end notes

   i hope you liked reading this article. if you have any doubts or
   questions, feel free to post them below. if you have worked with
   id23 before then share your experience below. through
   this article i wanted to provide you an overview of reinforcement
   learning with its practical implementation. hope you make found it
   useful.

[113]learn, [114]compete, hack and [115]get hired

   you can also read this article on analytics vidhya's android app
   [116]get it on google play

share this:

     * [117]click to share on linkedin (opens in new window)
     * [118]click to share on facebook (opens in new window)
     * [119]click to share on twitter (opens in new window)
     * [120]click to share on pocket (opens in new window)
     * [121]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [122]artificial intelligence, [123]cart pole, [124]deep
   learning, [125]machine learning, [126]multiarmed bandit, [127]open ai
   gym, [128]reinforcement, [129]id23, [130]supervised
   learning, [131]traveling salesman problem, [132]unsupervised learning
   next article

jr data analyst/ data scientist

   previous article

the most comprehensive data science learning plan for 2017

[133]faizan shaikh

   faizan is a data science enthusiast and a deep learning rookie. a
   recent comp. sc. undergrad, he aims to utilize his skills to push the
   boundaries of ai research.
     *
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [134]discussion portal to get your queries resolved

28 comments

     * david jung says:
       [135]january 19, 2017 at 8:30 am
       thanks for posting the article. very interesting and clear though
       my first trying for
       atari([136]https://github.com/matthiasplappert/keras-rl.git/example
       /id25_atari.py) training has ended up with resourceexhaustederror..
       since i   m using gt730 gddr5 1g ram and i   m rather noob in this
       field my question is that is it a normal situation that i can   t fit
       my model(atari example) with my gpu?
       [137]reply
          + faizan shaikh says:
            [138]january 19, 2017 at 8:54 am
            hi david! thanks for the feedback.
            to be frank, i think 1gb of vram is somewhat low to do
               not-so-simple    tasks and especially deep neural networks. i
            have too faced with problem in the past when i had a 2gb
            nvidia card before moving on to a bigger machine. if possible,
            you can try increasing memory or use the available cloud
            services like aws.
            having said that, i would suggest you to try a few things
               o use a pre-trained model shared here (
                 [139]https://github.com/matthiasplappert/keras-rl-weights
                 /tree/master/id25_atari/breakout ). this would save you to
                 time for training and quickly get result. but i   m not
                 sure if this would fit the memory limit
               o in the atariprocessor class, in process_state_batch
                 function change astype(   float32   ) to astype(   uint8   ). as
                 they mention in the code, this would decrease memory use
                 by 4x. beware that i haven   t done this, so cannot comment
                 will it work or not.
               o if this still doesn   t work, try asking the issue on their
                 official gitter channel (
                 [140]https://gitter.im/keras-rl/lobby )
            hope this helps!
            [141]reply
               o david jung says:
                 [142]january 19, 2017 at 9:04 am
                 thank you faizan!
                 [143]reply
          + ashwini says:
            [144]september 19, 2017 at 12:27 pm
            its realy good article to understand id23
            [145]reply
     * [146]stepherd says:
       [147]january 19, 2017 at 9:08 am
       it   s amazing in support of me to have a site, which is useful in
       support of my know-how. thanks admin, you surely come with
       remarkable articles. cheers for sharing your website page.excellent
       blog here   
       [148]reply
          + faizan shaikh says:
            [149]january 19, 2017 at 10:35 am
            thank you shepherd!
            [150]reply
     * sandeep says:
       [151]january 19, 2017 at 10:23 am
       brilliant
       [152]reply
          + faizan shaikh says:
            [153]january 19, 2017 at 10:35 am
            thanks sandeep
            [154]reply
     * vaibhav says:
       [155]january 20, 2017 at 2:31 am
       brilliant article faizan , there are 10 tutorials of reinforcement
       learning which is taught by david silver.
       david is one of the founding fathers of id23.
       here is the link, its really amazing & worth watching,
       [156]https://www.youtube.com/watch?v=2pwv7govuf0
       you can post these videos
       [157]reply
          + faizan shaikh says:
            [158]january 20, 2017 at 8:23 am
            thanks vaibhav! and thanks for your suggestion. added!
            [159]reply
     * harry says:
       [160]april 20, 2017 at 4:12 am
       semi supervised learning    . in this context     an overkill
       well presented introduction to rl . .. thanks
       [161]reply
          + faizan shaikh says:
            [162]may 24, 2017 at 9:07 am
            thanks harry
            [163]reply
     * ashok lathwal says:
       [164]april 24, 2017 at 9:01 pm
       thanku for this great article     
       [165]reply
          + faizan shaikh says:
            [166]may 24, 2017 at 9:08 am
            thanks ashok
            [167]reply
     * saksham sangal says:
       [168]august 2, 2017 at 4:25 pm
       the way of presenting the article is fantastic. i get so amazed
       after reading this article. thank you sir.
       [169]reply
          + faizan shaikh says:
            [170]august 18, 2017 at 3:30 pm
            you are welcome saksham!
            [171]reply
     * giorgosk says:
       [172]august 4, 2017 at 2:57 am
       i i encountered a problem with the terminal. when i ran the    git
       clone [173]https://github.com/matthiasplappert/keras-rl.git    it had
       an error saying       git    is not recognized      . i think that i did
       something wrong. i am a beginner at programming so maybe i didn   t
       do something that i should.
       [174]reply
          + giorgosk says:
            [175]august 4, 2017 at 2:59 am
            however this is a very good article and i understood a lot
            [176]reply
          + faizan shaikh says:
            [177]august 18, 2017 at 3:55 pm
            hi,
            you would have to install git to clone this project. here is
            the link for installation steps
            [178]https://git-scm.com/downloads
            [179]reply
     * paul says:
       [180]august 9, 2017 at 7:55 am
       thanks for the great article that explains basics!
       it really helps!     
       best,
       paul
       [181]reply
          + faizan shaikh says:
            [182]august 18, 2017 at 3:26 pm
            thanks paul
            [183]reply
     * katia says:
       [184]november 4, 2017 at 9:42 pm
       hiii some one can take give me example with markov dcision process
       in matlab
       [185]reply
          + faizan shaikh says:
            [186]november 16, 2017 at 6:04 pm
            hi     you can easily search for this on the web
            [187]reply
     * alex says:
       [188]november 21, 2017 at 7:57 pm
       hi! can i use your article as a source for our group report and
       show the examples and explanations in this article to my
       classmates? this is a really great article, it was easy to
       understand and has helped me understand beginner concepts in so i
       thought i could use your explanations to introduce my classmates to
       rl. if it is not okay, i can understand.
       [189]reply
          + faizan shaikh says:
            [190]december 7, 2017 at 2:13 pm
            hi     you can absolutely use this as a resource. it would be
            great if you could mention the appropriate source too. thanks
            [191]reply
     * [192]rohini ramalingam says:
       [193]november 22, 2017 at 10:14 am
       great article. can id23 be applied on financial
       transnational data to learn customer spending patters and predict
       future cash flow. i see unsupervised learning has been research for
       the above problem but yet id23 is not researched
       on transactional data. do you think researching the same would
       benefit?
       [194]reply
          + faizan shaikh says:
            [195]december 7, 2017 at 2:21 pm
            although i haven   t searched much     there definitely may be
            research going on in this field too. for example, you can see
            applications of id23 in stock market
            prediction etc
            [196]reply
     * benny says:
       [197]december 7, 2017 at 10:51 am
       thanks for a great article. you explain it in a clear way that
       helps me move forward on the ideas.
       [198]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-05] [199]srk       3924
   2    [2.jpg?date=2019-04-05] [200]mark12    3510
   3    [3.jpg?date=2019-04-05] [201]nilabha   3261
   4    [4.jpg?date=2019-04-05] [202]nitish007 3237
   5    [5.jpg?date=2019-04-05] [203]tezdhar   3082
   [204]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [205]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [206]understanding support vector machine algorithm from examples
       (along with code)
     * [207]essentials of machine learning algorithms (with python and r
       codes)
     * [208]a complete tutorial to learn data science with python from
       scratch
     * [209]7 types of regression techniques you should know!
     * [210]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [211]a simple introduction to anova (with applications in excel)
     * [212]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [213]top 5 machine learning github repositories and reddit discussions
   from march 2019

[214]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [215]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[216]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [217]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[218]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [219]16 opencv functions to start your id161 journey (with
   python code)

[220]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [221][ds-finhack.jpg]

   [222][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [223]about us
     * [224]our team
     * [225]career
     * [226]contact us
     * [227]write for us

   [228]about us
   [229]   
   [230]our team
   [231]   
   [232]careers
   [233]   
   [234]contact us

data scientists

     * [235]blog
     * [236]hackathon
     * [237]discussions
     * [238]apply jobs
     * [239]leaderboard

companies

     * [240]post jobs
     * [241]trainings
     * [242]hiring hackathons
     * [243]advertising
     * [244]reach us

   don't have an account? [245]sign up here.

join our community :

   [246]46336 [247]followers
   [248]20224 [249]followers
   [250]followers
   [251]7513 [252]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [253]privacy policy
     * [254]terms of use
     * [255]refund policy

   don't have an account? [256]sign up here

   iframe: [257]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [258](button) join now

   subscribe!

   iframe: [259]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [260](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/machine-learning/
  94. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/
  95. https://www.analyticsvidhya.com/blog/category/machine-learning/
  96. https://www.analyticsvidhya.com/blog/category/python-2/
  97. https://www.analyticsvidhya.com/blog/author/jalfaizy/
  98. https://www.analyticsvidhya.com/blog/2016/12/getting-ready-for-ai-based-gaming-agents-overview-of-open-source-reinforcement-learning-platforms/
  99. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 100. https://www.youtube.com/embed/m2wefarrie8?feature=oembed
 101. https://en.wikipedia.org/wiki/slot_machine
 102. https://www.jair.org/media/301/live-301-1562-jair.pdf
 103. https://www.youtube.com/embed/xiigtgkzfks?start=132&feature=oembed
 104. https://en.wikipedia.org/wiki/tower_of_hanoi
 105. http://www.tomshardware.com/news/alphago-defeats-sedol-second-time,31377.html
 106. https://twitter.com/hashtag/alphago?src=hash&ref_src=twsrc^tfw
 107. https://t.co/it5hgbmydr
 108. https://twitter.com/demishassabis/status/816660463282954240?ref_src=twsrc^tfw
 109. https://www.analyticsvidhya.com/blog/2016/12/21-deep-learning-videos-tutorials-courses-on-youtube-from-2016/
 110. http://people.inf.elte.hu/lorincz/files/rl_2006/suttonbook.pdf
 111. https://github.com/aikorea/awesome-rl
 112. https://www.youtube.com/playlist?list=plv_1ki9mrspgfoaxol9bczeen_s987yxb
 113. https://www.analyticsvidhya.com/blog
 114. https://datahack.analyticsvidhya.com/
 115. https://www.analyticsvidhya.com/jobs/#/user/
 116. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 117. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/?share=linkedin
 118. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/?share=facebook
 119. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/?share=twitter
 120. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/?share=pocket
 121. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/?share=reddit
 122. https://www.analyticsvidhya.com/blog/tag/artificial-intelligence/
 123. https://www.analyticsvidhya.com/blog/tag/cart-pole/
 124. https://www.analyticsvidhya.com/blog/tag/deep-learning/
 125. https://www.analyticsvidhya.com/blog/tag/machine-learning/
 126. https://www.analyticsvidhya.com/blog/tag/multiarmed-bandit/
 127. https://www.analyticsvidhya.com/blog/tag/open-ai-gym/
 128. https://www.analyticsvidhya.com/blog/tag/reinforcement/
 129. https://www.analyticsvidhya.com/blog/tag/reinforcement-learning/
 130. https://www.analyticsvidhya.com/blog/tag/supervised-learning/
 131. https://www.analyticsvidhya.com/blog/tag/traveling-salesman-problem/
 132. https://www.analyticsvidhya.com/blog/tag/unsupervised-learning/
 133. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 134. https://discuss.analyticsvidhya.com/
 135. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121258
 136. https://github.com/matthiasplappert/keras-rl.git/example/id25_atari.py
 137. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121258
 138. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121264
 139. https://github.com/matthiasplappert/keras-rl-weights/tree/master/id25_atari/breakout
 140. https://gitter.im/keras-rl/lobby
 141. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121264
 142. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121265
 143. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121265
 144. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-137467
 145. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-137467
 146. http://www.venpastaffing.com/
 147. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121266
 148. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121266
 149. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121272
 150. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121272
 151. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121270
 152. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121270
 153. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121273
 154. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121273
 155. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121296
 156. https://www.youtube.com/watch?v=2pwv7govuf0
 157. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121296
 158. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121311
 159. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-121311
 160. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-127203
 161. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-127203
 162. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-129122
 163. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-129122
 164. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-127556
 165. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-127556
 166. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-129123
 167. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-129123
 168. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133502
 169. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133502
 170. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-134621
 171. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-134621
 172. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133636
 173. https://github.com/matthiasplappert/keras-rl.git
 174. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133636
 175. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133638
 176. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133638
 177. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-134624
 178. https://git-scm.com/downloads
 179. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-134624
 180. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133944
 181. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-133944
 182. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-134619
 183. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-134619
 184. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-142221
 185. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-142221
 186. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-144016
 187. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-144016
 188. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-144283
 189. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-144283
 190. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-146616
 191. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-146616
 192. http://tcs.com/
 193. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-144321
 194. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-144321
 195. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-146617
 196. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-146617
 197. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-146586
 198. https://www.analyticsvidhya.com/blog/2017/01/introduction-to-reinforcement-learning-implementation/#comment-146586
 199. https://datahack.analyticsvidhya.com/user/profile/srk
 200. https://datahack.analyticsvidhya.com/user/profile/mark12
 201. https://datahack.analyticsvidhya.com/user/profile/nilabha
 202. https://datahack.analyticsvidhya.com/user/profile/nitish007
 203. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 204. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 205. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 206. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 207. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 208. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 209. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 210. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 211. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 212. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 213. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 214. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 215. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 216. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 217. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 218. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 219. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 220. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 221. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 222. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 223. http://www.analyticsvidhya.com/about-me/
 224. https://www.analyticsvidhya.com/about-me/team/
 225. https://www.analyticsvidhya.com/career-analytics-vidhya/
 226. https://www.analyticsvidhya.com/contact/
 227. https://www.analyticsvidhya.com/about-me/write/
 228. http://www.analyticsvidhya.com/about-me/
 229. https://www.analyticsvidhya.com/about-me/team/
 230. https://www.analyticsvidhya.com/about-me/team/
 231. https://www.analyticsvidhya.com/about-me/team/
 232. https://www.analyticsvidhya.com/career-analytics-vidhya/
 233. https://www.analyticsvidhya.com/about-me/team/
 234. https://www.analyticsvidhya.com/contact/
 235. https://www.analyticsvidhya.com/blog
 236. https://datahack.analyticsvidhya.com/
 237. https://discuss.analyticsvidhya.com/
 238. https://www.analyticsvidhya.com/jobs/
 239. https://datahack.analyticsvidhya.com/users/
 240. https://www.analyticsvidhya.com/corporate/
 241. https://trainings.analyticsvidhya.com/
 242. https://datahack.analyticsvidhya.com/
 243. https://www.analyticsvidhya.com/contact/
 244. https://www.analyticsvidhya.com/contact/
 245. https://datahack.analyticsvidhya.com/signup/
 246. https://www.facebook.com/analyticsvidhya/
 247. https://www.facebook.com/analyticsvidhya/
 248. https://twitter.com/analyticsvidhya
 249. https://twitter.com/analyticsvidhya
 250. https://plus.google.com/+analyticsvidhya
 251. https://in.linkedin.com/company/analytics-vidhya
 252. https://in.linkedin.com/company/analytics-vidhya
 253. https://www.analyticsvidhya.com/privacy-policy/
 254. https://www.analyticsvidhya.com/terms/
 255. https://www.analyticsvidhya.com/refund-policy/
 256. https://id.analyticsvidhya.com/accounts/signup/
 257. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 258. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 259. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 260. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 262. https://www.facebook.com/analyticsvidhya
 263. https://twitter.com/analyticsvidhya
 264. https://plus.google.com/+analyticsvidhya/posts
 265. https://in.linkedin.com/company/analytics-vidhya
 266. https://www.analyticsvidhya.com/blog/2017/01/jr-data-analyst-data-scientist/
 267. https://www.analyticsvidhya.com/blog/2017/01/the-most-comprehensive-data-science-learning-plan-for-2017/
 268. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 269. https://www.linkedin.com/in/faizankshaikh
 270. http://github.com/faizankshaikh
 271. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 272. https://www.facebook.com/analyticsvidhya/
 273. https://twitter.com/analyticsvidhya
 274. https://plus.google.com/+analyticsvidhya
 275. https://plus.google.com/+analyticsvidhya
 276. https://in.linkedin.com/company/analytics-vidhya
 277. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 278. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 279. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 280. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 281. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 282. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 283. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 284. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 285. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 286. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 287. javascript:void(0);
 288. javascript:void(0);
 289. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 290. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 291. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 292. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 293. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 294. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 295. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 296. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 297. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 298. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f01%2fintroduction-to-reinforcement-learning-implementation%2f&linkname=beginner%26%23039%3bs%20guide%20to%20reinforcement%20learning%20%26amp%3b%20its%20implementation%20in%20python
 299. javascript:void(0);
 300. javascript:void(0);
