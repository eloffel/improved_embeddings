   #[1]github [2]recent commits to machine-learning:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]16
     * [35]star [36]139
     * [37]fork [38]124

[39]florianmuellerklein/[40]machine-learning

   [41]code [42]issues 2 [43]pull requests 1 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   machine learning library written in readable python code
     * [47]187 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors

    1. [51]jupyter notebook 63.4%
    2. [52]python 36.6%

   (button) jupyter notebook python
   branch: master (button) new pull request
   [53]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/f
   [54]download zip

downloading...

   want to be notified of new releases in
   florianmuellerklein/machine-learning?
   [55]sign in [56]sign up

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [59]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [60]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [61]permalink
   type             name            latest commit message commit time
        failed to load latest commit information.
        [62].idea
        [63]data
        [64]old
        [65]1_id88.ipynb
        [66]linearregression.py
        [67]logisticclassifier.py
        [68]multilayerid88.py
        [69]readme.md

readme.md

machine-learning

   various machine learning algorithms broken down in basic and readable
   python code. useful for studying and learning how the algorithms
   function.
     * multilayerid88.py - basic multilayer id88 neural
       network written with numpy. with weight decay id173,
       learning rate decay, softmax or logistic sigmoid output layer, and
       tanh hidden layer.
     * linearregression.py - id119 id75 with l2
       id173.
     * logisticregression.py - id119 id28 with
       l2 id173.

usage

multilayerid88

parameters

   -input (int): size of input layer, must match the number of features in
   the input dataset.

   -hidden (int): size of hidden layer, more hidden neurons can model more
   complex data at the cost of potentially overfitting.

   -output (int): size of output layers, must match the number of possible
   classes. can use 1 for binary classification.

   -iterations (int): controls the number of passes over the traning data
   (aka epochs). defaults to 50

   -learning_rate (float): the learning rate constant controls how much
   weights are updated on each iteration. defaults to 0.01.

   -l2_in (float): weight decay id173 term for the input layer
   weights, keeps weights low to avoid overfitting. useful when hidden
   layer is large. defaults to 0 (off).

   -l2_out (float): weight decay id173 term for the hidden layer
   weights, keeps weights low to avoid overfitting. useful when hidden
   layer is large. defaults to 0 (off).

   -momentum (float): adds a fraction of the previous weight update to the
   current weight update. is used to help system from converging at a
   local minimum. a high value can increase the learning speed but risks
   overshooting the minimum. a low momentum can get stuck in a local
   minimum and decreases the speed of learning. defaults to 0 (off).

   -rate_decay (float): how much to decrease learning rate on each
   iteration. the idea is to start with a high learning rate to avoid
   local minima and then slow down as the global minimum is approached.
   defaults to 0 (off).

   -output_layer (string): which activation function to use for the output
   layer. currently accepts 'logistic' for logistic sigmoid or 'softmax'
   for softmax. use softmax when the outputs are mutually exclusive.
   defaults to 'logistic'.

   -verbose (bool): whether to print current error rate while training.
   defaults to true.

fitting and predicting

    1. initialize the network and setting up the size of each layer.

nn = mlp_classifier(64, 100, 10)

    2. train the network with the training dataset. the training dataset
       must be in the following format with y values one hot encoded.
       there is an example in the demo function of the mlp on how to
       import data with numpy and get it into the appropriate format.

        [[[x1, x2, x3, ..., xn], [y1, y2, ..., yn]],
    [[[x1, x2, x3, ..., xn], [y1, y2, ..., yn]],
    ...
    [[[x1, x2, x3, ..., xn], [y1, y2, ..., yn]]]

nn.fit(train)

    3. make predictions on testing dataset. same format as training
       dataset without the list of y values. will return a list of
       predictions.

nn.predict(x_test)

linear and id28

parameters

   -learning_rate (float): the learning rate constant controls how much
   weights are updated on each iteration. defaults to 0.01.

   -iterations (int): controls the number of passes over the traning data
   (aka epochs). defaults to 50.

   -intercept (bool): whether or not to fit an intercept. defaults to
   true.

   -l2 (float): weight decay id173 term for the weights, keeps
   weights low to avoid overfitting. defaults to 0 (off).

   -tolerance (float): the error value in which to stop training. defaults
   to 0 (off).

   -verbose (bool): whether to print current error rate while training.
   defaults to true.

fitting and predicting

    1. initialize the linear model.

linearreg = linreg(learning_rate = 0.1, iterations = 500, verbose = true, l2 = 0
.001)

    2. train the model with the training dataset. the training dataset has
       to be a numpy array, the x and y values must be seperated into two
       different arrays.

linearreg.fit(x = x_train, y = y_train)

    3. make predictions on testing dataset. same format as training
       dataset without the array of y values. will return a list of
       predictions.

linearreg.predict(x_test)

   id28 has one extra parameter for .predict. if labels is
   set to 'true' the predicted class is returned, otherwise the
   id203 of the class being label 1 is returned.
logit.predict(x_test, labels = true)

     *    2019 github, inc.
     * [70]terms
     * [71]privacy
     * [72]security
     * [73]status
     * [74]help

     * [75]contact github
     * [76]pricing
     * [77]api
     * [78]training
     * [79]blog
     * [80]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [81]reload to refresh your
   session. you signed out in another tab or window. [82]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/florianmuellerklein/machine-learning/commits/master.atom
   3. https://github.com/florianmuellerklein/machine-learning#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/florianmuellerklein/machine-learning
  32. https://github.com/join
  33. https://github.com/login?return_to=/florianmuellerklein/machine-learning
  34. https://github.com/florianmuellerklein/machine-learning/watchers
  35. https://github.com/login?return_to=/florianmuellerklein/machine-learning
  36. https://github.com/florianmuellerklein/machine-learning/stargazers
  37. https://github.com/login?return_to=/florianmuellerklein/machine-learning
  38. https://github.com/florianmuellerklein/machine-learning/network/members
  39. https://github.com/florianmuellerklein
  40. https://github.com/florianmuellerklein/machine-learning
  41. https://github.com/florianmuellerklein/machine-learning
  42. https://github.com/florianmuellerklein/machine-learning/issues
  43. https://github.com/florianmuellerklein/machine-learning/pulls
  44. https://github.com/florianmuellerklein/machine-learning/projects
  45. https://github.com/florianmuellerklein/machine-learning/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/florianmuellerklein/machine-learning/commits/master
  48. https://github.com/florianmuellerklein/machine-learning/branches
  49. https://github.com/florianmuellerklein/machine-learning/releases
  50. https://github.com/florianmuellerklein/machine-learning/graphs/contributors
  51. https://github.com/florianmuellerklein/machine-learning/search?l=jupyter-notebook
  52. https://github.com/florianmuellerklein/machine-learning/search?l=python
  53. https://github.com/florianmuellerklein/machine-learning/find/master
  54. https://github.com/florianmuellerklein/machine-learning/archive/master.zip
  55. https://github.com/login?return_to=https://github.com/florianmuellerklein/machine-learning
  56. https://github.com/join?return_to=/florianmuellerklein/machine-learning
  57. https://desktop.github.com/
  58. https://desktop.github.com/
  59. https://developer.apple.com/xcode/
  60. https://visualstudio.github.com/
  61. https://github.com/florianmuellerklein/machine-learning/tree/c6fdda905ea572164f21b1380ef7d094ad1c48e6
  62. https://github.com/florianmuellerklein/machine-learning/tree/master/.idea
  63. https://github.com/florianmuellerklein/machine-learning/tree/master/data
  64. https://github.com/florianmuellerklein/machine-learning/tree/master/old
  65. https://github.com/florianmuellerklein/machine-learning/blob/master/1_id88.ipynb
  66. https://github.com/florianmuellerklein/machine-learning/blob/master/linearregression.py
  67. https://github.com/florianmuellerklein/machine-learning/blob/master/logisticclassifier.py
  68. https://github.com/florianmuellerklein/machine-learning/blob/master/multilayerid88.py
  69. https://github.com/florianmuellerklein/machine-learning/blob/master/readme.md
  70. https://github.com/site/terms
  71. https://github.com/site/privacy
  72. https://github.com/security
  73. https://githubstatus.com/
  74. https://help.github.com/
  75. https://github.com/contact
  76. https://github.com/pricing
  77. https://developer.github.com/
  78. https://training.github.com/
  79. https://github.blog/
  80. https://github.com/about
  81. https://github.com/florianmuellerklein/machine-learning
  82. https://github.com/florianmuellerklein/machine-learning

   hidden links:
  84. https://github.com/
  85. https://github.com/florianmuellerklein/machine-learning
  86. https://github.com/florianmuellerklein/machine-learning
  87. https://github.com/florianmuellerklein/machine-learning
  88. https://help.github.com/articles/which-remote-url-should-i-use
  89. https://github.com/florianmuellerklein/machine-learning#machine-learning
  90. https://github.com/florianmuellerklein/machine-learning#usage
  91. https://github.com/florianmuellerklein/machine-learning#multilayerid88
  92. https://github.com/florianmuellerklein/machine-learning#parameters
  93. https://github.com/florianmuellerklein/machine-learning#fitting-and-predicting
  94. https://github.com/florianmuellerklein/machine-learning#linear-and-logistic-regression
  95. https://github.com/florianmuellerklein/machine-learning#parameters-1
  96. https://github.com/florianmuellerklein/machine-learning#fitting-and-predicting-1
  97. https://github.com/
