   #[1]github [2]recent commits to keras-vis:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]77
     * [35]star [36]2,080
     * [37]fork [38]383

[39]raghakot/[40]keras-vis

   [41]code [42]issues 76 [43]pull requests 7 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   neural network visualization toolkit for keras
   [47]https://raghakot.github.io/keras-vis
   [48]visualization [49]keras [50]deep-learning [51]theano [52]tensorflow
   [53]neural-networks [54]machine-learning
     * [55]181 commits
     * [56]2 branches
     * [57]8 releases
     * [58]fetching contributors
     * [59]mit

    1. [60]python 100.0%

   (button) python
   branch: master (button) new pull request
   [61]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/r
   [62]download zip

downloading...

   want to be notified of new releases in raghakot/keras-vis?
   [63]sign in [64]sign up

launching github desktop...

   if nothing happens, [65]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [66]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [67]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [68]download the github extension for visual studio
   and try again.

   (button) go back
   [69]@primozgodec [70]@raghakot
   [71]primozgodec and [72]raghakot [73]fix: condition to check if channel
   need to be swapped ([74]#101[75])
   latest commit [76]668b0e1 sep 15, 2018
   [77]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [78]applications/self_driving [79]delete accidental commit jul 6, 2017
   [80]docs [81]fix bad links, typos in docs jul 6, 2017
   [82]examples
   [83]images [84]crop images to view. jun 30, 2017
   [85]resources [86]- introducing grad_modifiers, backprop_modifiers,
   input_modifiers. jul 5, 2017
   [87]tests/vis
   [88]vis [89]fix: condition to check if channel need to be swapped
   ([90]#101[91]) sep 15, 2018
   [92].gitattributes
   [93].gitignore
   [94].travis.yml
   [95]contributing.md
   [96]issue_template.md
   [97]license
   [98]manifest.in
   [99]readme.md
   [100]pytest.ini
   [101]setup.id18 [102]update pypi major version due to breaking api
   changes. jul 5, 2017
   [103]setup.py

readme.md

keras visualization toolkit

   [104]build status [105]license [106]slack

   keras-vis is a high-level toolkit for visualizing and debugging your
   trained keras neural net models. currently supported visualizations
   include:
     * activation maximization
     * saliency maps
     * class activation maps

   all visualizations by default support n-dimensional image inputs. i.e.,
   it generalizes to n-dim image inputs to your model.

   the toolkit generalizes all of the above as energy minimization
   problems with a clean, easy to use, and extendable interface.
   compatible with both theano and tensorflow backends with
   'channels_first', 'channels_last' data format.

quick links

     * read the documentation at
       [107]https://raghakot.github.io/keras-vis.
          + the japanese edition is
            [108]https://keisen.github.io/keras-vis-docs-ja.
     * join the slack [109]channel for questions/discussions.
     * we are tracking new features/tasks in [110]waffle.io. would love it
       if you lend us a hand and submit prs.

getting started

   in image backprop problems, the goal is to generate an input image that
   minimizes some id168. setting up an image backprop problem is
   easy.

   define weighted id168

   various useful id168s are defined in [111]losses. a custom loss
   function can be defined by implementing [112]loss.build_loss.
from vis.losses import activationmaximization
from vis.regularizers import totalvariation, lpnorm

filter_indices = [1, 2, 3]

# tuple consists of (loss_function, weight)
# add regularizers as needed.
losses = [
    (activationmaximization(keras_layer, filter_indices), 1),
    (lpnorm(model.input), 10),
    (totalvariation(model.input), 10)
]

   configure optimizer to minimize weighted loss

   in order to generate natural looking images, image search space is
   constrained using id173 penalties. some common regularizers
   are defined in [113]regularizers. like id168s, custom
   regularizer can be defined by implementing [114]loss.build_loss.
from vis.optimizer import optimizer

optimizer = optimizer(model.input, losses)
opt_img, grads, _ = optimizer.minimize()

   concrete examples of various supported visualizations can be found in
   [115]examples folder.

installation

    1. install [116]keras with theano or tensorflow backend. note that
       this library requires keras > 2.0
    2. install keras-vis

     from sources

sudo python setup.py install

     pypi package

sudo pip install keras-vis

visualizations

   note: the links are currently broken and the entire documentation is
   being reworked. please see examples/ for samples.

   neural nets are black boxes. in the recent years, several approaches
   for understanding and visualizing convolutional networks have been
   developed in the literature. they give us a way to peer into the black
   boxes, diagnose mis-classifications, and assess whether the network is
   over/under fitting.

   guided backprop can also be used to create [117]trippy art,
   neural/texture [118]style transfer among the list of other growing
   applications.

   various visualizations, documented in their own pages, are summarized
   here.
     __________________________________________________________________

[119]conv filter visualization

   [120][cover.jpg?raw=true]

   convolutional filters learn 'template matching' filters that maximize
   the output when a similar template pattern is found in the input image.
   visualize those templates via activation maximization.
     __________________________________________________________________

[121]dense layer visualization

   [122][cover.png?raw=true]

   how can we assess whether a network is over/under fitting or
   generalizing well?
     __________________________________________________________________

[123]attention maps

   [124][cover.png?raw=true]

   how can we assess whether a network is attending to correct parts of
   the image in order to generate a decision?
     __________________________________________________________________

generating animated gif of optimization progress

   it is possible to generate an animated gif of optimization progress by
   leveraging [125]callbacks. following example shows how to visualize the
   activation maximization for 'ouzel' class (output_index: 20).
from vis.losses import activationmaximization
from vis.regularizers import totalvariation, lpnorm
from vis.modifiers import jitter
from vis.optimizer import optimizer

from vis.callbacks import gifgenerator
from vis.utils.vggnet import vgg16

# build the vgg16 network with id163 weights
model = vgg16(weights='id163', include_top=true)
print('model loaded.')

# the name of the layer we want to visualize
# (see model definition in vggnet.py)
layer_name = 'predictions'
layer_dict = dict([(layer.name, layer) for layer in model.layers[1:]])
output_class = [20]

losses = [
    (activationmaximization(layer_dict[layer_name], output_class), 2),
    (lpnorm(model.input), 10),
    (totalvariation(model.input), 10)
]
opt = optimizer(model.input, losses)
opt.minimize(max_iter=500, verbose=true, image_modifiers=[jitter()], callbacks=[
gifgenerator('opt_progress')])

   notice how the output jitters around? this is because we used
   [126]jitter, a kind of [127]imagemodifier that is known to produce
   crisper activation maximization images. as an exercise, try:
     * without jitter
     * varying various loss weights

   [128]opt_progress
     __________________________________________________________________

citation

   please cite keras-vis in your publications if it helped your research.
   here is an example bibtex entry:
@misc{raghakotkerasvis,
  title={keras-vis},
  author={kotikalapudi, raghavendra and contributors},
  year={2017},
  publisher={github},
  howpublished={\url{https://github.com/raghakot/keras-vis}},
}

     *    2019 github, inc.
     * [129]terms
     * [130]privacy
     * [131]security
     * [132]status
     * [133]help

     * [134]contact github
     * [135]pricing
     * [136]api
     * [137]training
     * [138]blog
     * [139]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [140]reload to refresh your
   session. you signed out in another tab or window. [141]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/raghakot/keras-vis/commits/master.atom
   3. https://github.com/raghakot/keras-vis#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/raghakot/keras-vis
  32. https://github.com/join
  33. https://github.com/login?return_to=/raghakot/keras-vis
  34. https://github.com/raghakot/keras-vis/watchers
  35. https://github.com/login?return_to=/raghakot/keras-vis
  36. https://github.com/raghakot/keras-vis/stargazers
  37. https://github.com/login?return_to=/raghakot/keras-vis
  38. https://github.com/raghakot/keras-vis/network/members
  39. https://github.com/raghakot
  40. https://github.com/raghakot/keras-vis
  41. https://github.com/raghakot/keras-vis
  42. https://github.com/raghakot/keras-vis/issues
  43. https://github.com/raghakot/keras-vis/pulls
  44. https://github.com/raghakot/keras-vis/projects
  45. https://github.com/raghakot/keras-vis/pulse
  46. https://github.com/join?source=prompt-code
  47. https://raghakot.github.io/keras-vis
  48. https://github.com/topics/visualization
  49. https://github.com/topics/keras
  50. https://github.com/topics/deep-learning
  51. https://github.com/topics/theano
  52. https://github.com/topics/tensorflow
  53. https://github.com/topics/neural-networks
  54. https://github.com/topics/machine-learning
  55. https://github.com/raghakot/keras-vis/commits/master
  56. https://github.com/raghakot/keras-vis/branches
  57. https://github.com/raghakot/keras-vis/releases
  58. https://github.com/raghakot/keras-vis/graphs/contributors
  59. https://github.com/raghakot/keras-vis/blob/master/license
  60. https://github.com/raghakot/keras-vis/search?l=python
  61. https://github.com/raghakot/keras-vis/find/master
  62. https://github.com/raghakot/keras-vis/archive/master.zip
  63. https://github.com/login?return_to=https://github.com/raghakot/keras-vis
  64. https://github.com/join?return_to=/raghakot/keras-vis
  65. https://desktop.github.com/
  66. https://desktop.github.com/
  67. https://developer.apple.com/xcode/
  68. https://visualstudio.github.com/
  69. https://github.com/primozgodec
  70. https://github.com/raghakot
  71. https://github.com/raghakot/keras-vis/commits?author=primozgodec
  72. https://github.com/raghakot/keras-vis/commits?author=raghakot
  73. https://github.com/raghakot/keras-vis/commit/668b0e11dab93f3487f23c17e07f40554a8939e9
  74. https://github.com/raghakot/keras-vis/pull/101
  75. https://github.com/raghakot/keras-vis/commit/668b0e11dab93f3487f23c17e07f40554a8939e9
  76. https://github.com/raghakot/keras-vis/commit/668b0e11dab93f3487f23c17e07f40554a8939e9
  77. https://github.com/raghakot/keras-vis/tree/668b0e11dab93f3487f23c17e07f40554a8939e9
  78. https://github.com/raghakot/keras-vis/tree/master/applications/self_driving
  79. https://github.com/raghakot/keras-vis/commit/b1199bbef0fd3d5e784755a36ecdfbe9a4ab4939
  80. https://github.com/raghakot/keras-vis/tree/master/docs
  81. https://github.com/raghakot/keras-vis/commit/72bb8df635f1f16384537ae4a79e2edd5653da8f
  82. https://github.com/raghakot/keras-vis/tree/master/examples
  83. https://github.com/raghakot/keras-vis/tree/master/images
  84. https://github.com/raghakot/keras-vis/commit/b9685c7801a5c694298d7dd0802ba11f32f3ff52
  85. https://github.com/raghakot/keras-vis/tree/master/resources
  86. https://github.com/raghakot/keras-vis/commit/29580bdf7b46f06fe51ef063c41bf2709024239f
  87. https://github.com/raghakot/keras-vis/tree/master/tests/vis
  88. https://github.com/raghakot/keras-vis/tree/master/vis
  89. https://github.com/raghakot/keras-vis/commit/668b0e11dab93f3487f23c17e07f40554a8939e9
  90. https://github.com/raghakot/keras-vis/pull/101
  91. https://github.com/raghakot/keras-vis/commit/668b0e11dab93f3487f23c17e07f40554a8939e9
  92. https://github.com/raghakot/keras-vis/blob/master/.gitattributes
  93. https://github.com/raghakot/keras-vis/blob/master/.gitignore
  94. https://github.com/raghakot/keras-vis/blob/master/.travis.yml
  95. https://github.com/raghakot/keras-vis/blob/master/contributing.md
  96. https://github.com/raghakot/keras-vis/blob/master/issue_template.md
  97. https://github.com/raghakot/keras-vis/blob/master/license
  98. https://github.com/raghakot/keras-vis/blob/master/manifest.in
  99. https://github.com/raghakot/keras-vis/blob/master/readme.md
 100. https://github.com/raghakot/keras-vis/blob/master/pytest.ini
 101. https://github.com/raghakot/keras-vis/blob/master/setup.id18
 102. https://github.com/raghakot/keras-vis/commit/af4ec3bc3d64a18b7a61854367ab0375fc9d35c7
 103. https://github.com/raghakot/keras-vis/blob/master/setup.py
 104. https://travis-ci.org/raghakot/keras-vis
 105. https://github.com/raghakot/keras-vis/blob/master/license
 106. https://keras-vis.herokuapp.com/
 107. https://raghakot.github.io/keras-vis
 108. https://keisen.github.io/keras-vis-docs-ja
 109. https://keras-vis.herokuapp.com/
 110. https://waffle.io/raghakot/keras-vis
 111. https://raghakot.github.io/keras-vis/vis.losses
 112. https://raghakot.github.io/keras-vis/vis.losses/#lossbuild_loss
 113. https://raghakot.github.io/keras-vis/vis.regularizers
 114. https://raghakot.github.io/keras-vis/vis.losses/#lossbuild_loss
 115. https://github.com/raghakot/keras-vis/tree/master/examples
 116. https://github.com/fchollet/keras/blob/master/readme.md#installation
 117. https://deepdreamgenerator.com/gallery
 118. https://github.com/jcjohnson/neural-style
 119. https://raghakot.github.io/keras-vis/visualizations/conv_filters
 120. https://raw.githubusercontent.com/raghakot/keras-vis/master/images/conv_vis/cover.jpg?raw=true
 121. https://raghakot.github.io/keras-vis/visualizations/dense
 122. https://raw.githubusercontent.com/raghakot/keras-vis/master/images/dense_vis/cover.png?raw=true
 123. https://raghakot.github.io/keras-vis/visualizations/attention
 124. https://raw.githubusercontent.com/raghakot/keras-vis/master/images/attention_vis/cover.png?raw=true
 125. https://raghakot.github.io/keras-vis/vis.callbacks
 126. https://raghakot.github.io/keras-vis/vis.modifiers/#jitter
 127. https://raghakot.github.io/keras-vis/vis.modifiers/#imagemodifier
 128. https://raw.githubusercontent.com/raghakot/keras-vis/master/images/opt_progress.gif?raw=true
 129. https://github.com/site/terms
 130. https://github.com/site/privacy
 131. https://github.com/security
 132. https://githubstatus.com/
 133. https://help.github.com/
 134. https://github.com/contact
 135. https://github.com/pricing
 136. https://developer.github.com/
 137. https://training.github.com/
 138. https://github.blog/
 139. https://github.com/about
 140. https://github.com/raghakot/keras-vis
 141. https://github.com/raghakot/keras-vis

   hidden links:
 143. https://github.com/
 144. https://github.com/raghakot/keras-vis
 145. https://github.com/raghakot/keras-vis
 146. https://github.com/raghakot/keras-vis
 147. https://help.github.com/articles/which-remote-url-should-i-use
 148. https://github.com/raghakot/keras-vis#keras-visualization-toolkit
 149. https://github.com/raghakot/keras-vis#quick-links
 150. https://github.com/raghakot/keras-vis#getting-started
 151. https://github.com/raghakot/keras-vis#installation
 152. https://github.com/raghakot/keras-vis#visualizations
 153. https://github.com/raghakot/keras-vis#conv-filter-visualization
 154. https://github.com/raghakot/keras-vis#dense-layer-visualization
 155. https://github.com/raghakot/keras-vis#attention-maps
 156. https://github.com/raghakot/keras-vis#generating-animated-gif-of-optimization-progress
 157. https://github.com/raghakot/keras-vis#citation
 158. https://github.com/
