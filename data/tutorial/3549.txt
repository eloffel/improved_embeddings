   #[1]computational statistics in python 0.1 documentation
   [2]introduction to python

   (button) [3]computational statistics in python 0.1
     * [4]site
          + [5]introduction to python
               o [6]variables
               o [7]operators
               o [8]iterators
               o [9]conditional statements
               o [10]functions
               o [11]strings and string handling
               o [12]lists, tuples, dictionaries
               o [13]classes
               o [14]modules
               o [15]the standard library
               o [16]keeping the anaconda distribution up-to-date
               o [17]exercises
          + [18]getting started with python and the ipython notebook
               o [19]cells
               o [20]code cells
               o [21]magic commands
               o [22]python as glue
               o [23]python <-> r <-> matlab <-> octave
               o [24]more glue: julia and perl
          + [25]functions are first class objects
          + [26]function argumnents
               o [27]call by    object reference   
               o [28]binding of default arguments occurs at function
                 definition
          + [29]higher-order functions
          + [30]anonymous functions
          + [31]pure functions
          + [32]recursion
          + [33]iterators
          + [34]generators
               o [35]generators and comprehensions
               o [36]utilites - enumerate, zip and the ternary if-else
                 operator
          + [37]decorators
          + [38]the operator module
          + [39]the functools module
          + [40]the itertools module
          + [41]the toolz, fn and funcy modules
          + [42]exercises
          + [43]data science is osemn
               o [44]obtaining data
               o [45]scrubbing data
               o [46]exercises
          + [47]working with text
               o [48]string methods
               o [49]splitting and joining strings
               o [50]the string module
               o [51]id157
               o [52]the nltk toolkit
               o [53]exercises
          + [54]preprocessing text data
               o [55]example: counting words in a document
          + [56]working with structured data
               o [57]using sqlite3
               o [58]basic concepts of database id172
               o [59]using hdf5
               o [60]interfacing withpandas
          + [61]using numpy
               o [62]references
               o [63]example
               o [64]ndarray
               o [65]broadcasting, row, column and matrix operations
               o [66]universal functions (ufuncs)
               o [67]generalized ufucns
               o [68]random numbers
               o [69]id202
               o [70]exercises
          + [71]using pandas
               o [72]series
               o [73]dataframe
               o [74]panels
               o [75]split-apply-combine
               o [76]using statsmodels
          + [77]using r from ipython
               o [78]using rmagic
               o [79]using r from pandas
          + [80]computational problems in statistics
               o [81]textbook example - is coin fair?
               o [82]bayesian approach
               o [83]comment
          + [84]computer numbers and mathematics
               o [85]some examples of numbers behaving badly
               o [86]finite representation of numbers
               o [87]using arbitrary precision libraries
               o [88]from numbers to functions: stability and conditioning
               o [89]exercises
          + [90]algorithmic complexity
               o [91]profling and benchmarking
               o [92]measuring algorithmic complexity
               o [93]space complexity
          + [94]id202 and linear systems
               o [95]simultaneous equations
               o [96]linear independence
               o [97]norms and distance of vectors
               o [98]trace and determinant of matrices
               o [99]column space, row space, rank and kernel
               o [100]matrices as linear transformations
               o [101]matrix norms
               o [102]special matrices
               o [103]exercises
          + [104]id202 and matrix decompositions
               o [105]large linear systems
               o [106]example: netflix competition (circa 2006-2009)
               o [107]matrix decompositions
               o [108]matrix decompositions for pca and least squares
               o [109]singular value decomposition
               o [110]stabilty and condition number
               o [111]exercises
          + [112]change of basis
               o [113]variance and covariance
               o [114]eigendecomposition of the covariance matrix
               o [115]pca
               o [116]change of basis via pca
               o [117]graphical illustration of change of basis
               o [118]dimension reduction via pca
               o [119]using singular value decomposition (svd) for pca
          + [120]optimization and non-linear methods
               o [121]example: id113 (id113)
               o [122]bisection method
               o [123]secant method
               o [124]newton-rhapson method
               o [125]gauss-newton
               o [126]inverse quadratic interpolation
               o [127]brent   s method
          + [128]practical optimizatio routines
               o [129]finding roots
               o [130]optimization primer
               o [131]using scipy.optimize
               o [132]gradient deescent
               o [133]newton   s method and variants
               o [134]constrained optimization
               o [135]curve fitting
               o [136]finding paraemeters for ode models
               o [137]optimization of graph node placement
               o [138]optimization of standard statistical models
          + [139]fitting odes with the levenberg   marquardt algorithm
               o [140]1d example
               o [141]2d example
          + [142]algorithms for optimization and root finding for
            multivariate problems
               o [143]optimizers
               o [144]solvers
               o [145]glm estimation and irls
          + [146]expectation maximizatio (em) algorithm
               o [147]jensen   s inequality
               o [148]maximum likelihood with complete information
               o [149]incomplete information
               o [150]gaussian mixture models
               o [151]using em
               o [152]vectorized version
               o [153]vectorization with einstein summation notation
               o [154]comparison of em routines
          + [155]monte carlo methods
               o [156]pseudorandom number generators (prng)
               o [157]monte carlo swindles (variance reduction techniques)
               o [158]quasi-random numbers
          + [159]resampling methods
               o [160]resampling
               o [161]simulations
               o [162]setting the random seed
               o [163]sampling with and without replacement
               o [164]calculation of cook   s distance
               o [165]permutation resampling
               o [166]design of simulation experiments
               o [167]example: simulations to estimate power
               o [168]check with r
               o [169]estimating the cdf
               o [170]estimating the pdf
               o [171]kernel density estimation
               o [172]multivariate kerndel density estimation
          + [173]id115 (mcmc)
               o [174]bayesian data analysis
               o [175]metropolis-hastings sampler
               o [176]gibbs sampler
               o [177]slice sampler
               o [178]id187
          + [179]using pymc2
               o [180]coin toss
               o [181]estimating mean and standard deviation of normal
                 distribution
               o [182]estimating parameters of a linear regreession model
               o [183]estimating parameters of a logistic model
               o [184]using a hierarchcical model
          + [185]using pymc3
               o [186]coin toss
               o [187]estimating mean and standard deviation of normal
                 distribution
               o [188]estimating parameters of a linear regreession model
               o [189]estimating parameters of a logistic model
               o [190]using a hierarchcical model
          + [191]using pystan
               o [192]references
               o [193]simple logistic model
          + [194]animations of metropolis, gibbs and slice sampler
            dynamics
          + [195]c crash course
               o [196]hello world
               o [197]a tutorial example - coding a fibonacci function in
                 c
               o [198]types in c
               o [199]operators
               o [200]control of program flow
               o [201]arrays and pointers
               o [202]functions
               o [203]function pointers
               o [204]using make to compile c programs
               o [205]exercise
          + [206]code optimization
               o [207]profiling
               o [208]using better algorihtms and data structures
               o [209]i/o bound problems
               o [210]problem set for optimization
          + [211]using c code in python
               o [212]example: the fibonacci sequence
               o [213]using clang and bitey
               o [214]using gcc and ctypes
               o [215]using cython
               o [216]benchmark
          + [217]using functions from various compiled languages in python
               o [218]c
               o [219]c++
               o [220]fortran
               o [221]benchmarking
               o [222]wrapping a function from a c library for use in
                 python
               o [223]wrapping functions from c++ library for use in pyton
          + [224]julia and python
               o [225]defining a function in julia
               o [226]using it in python
               o [227]using python libraries in julia
          + [228]converting python code to c for speed
               o [229]example: fibonacci
               o [230]example: id127
               o [231]example: pairwise distance matrix
               o [232]profiling code
               o [233]numba
               o [234]cython
               o [235]comparison with optimized c from scipy
          + [236]optimization bake-off
               o [237]python version
               o [238]numpy version
               o [239]numexpr version
               o [240]numba version
               o [241]numbapro version
               o [242]parakeet version
               o [243]cython version
               o [244]c version
               o [245]c++ version
               o [246]fortran version
               o [247]bake-off
               o [248]summary
               o [249]recommendations for optimizing python code
          + [250]writing parallel code
               o [251]concepts
               o [252]embarassingly parallel programs
               o [253]using multiprocessing
               o [254]using ipython parallel for interactive parallel
                 computing
               o [255]other parallel programming approaches not covered
               o [256]references
          + [257]massively parallel programming with gpus
               o [258]programming gpus
               o [259]gpu architecture
               o [260]cuda python
               o [261]getting started with cuda
               o [262]vector addition - the    hello, world    of cuda
               o [263]performing a reduction on cuda
               o [264]recreational
               o [265]more examples
          + [266]writing cuda in c
               o [267]review of gpu architechture - a simplification
               o [268]cuda c program - an outline
          + [269]distributed computing for big data
               o [270]why and when does distributed computing matter?
               o [271]ingredients for effiicient distributed computing
               o [272]what is hadoop?
               o [273]review of functional programming
               o [274]the hadoop mapreduce workflow
               o [275]using hadoop mapreduce
               o [276]spark
          + [277]hadoop mapreduce on aws emr with mrjob
               o [278]mapreduce code
               o [279]configuration file
               o [280]launching job
          + [281]spark on a local mahcine using 4 nodes
               o [282]using spark in standalone prograsm
               o [283]introduction to spark concepts with a data
                 manipulation example
               o [284]using the mllib for regression
               o [285]references
          + [286]modules and packaging
               o [287]modules
               o [288]distributing your package
          + [289]tour of the jupyter (ipython3) notebook
               o [290]installing jupyter
               o [291]installing other kernels
               o [292]installing extensions
               o [293]installing python3 while keeping python2
               o [294]now, restart your notebook server
          + [295]polyglot programming
               o [296]python 2
               o [297]python 3
               o [298]bash
               o [299]r
               o [300]scala
               o [301]julia
               o [302]processing
          + [303]what you should know and learn more about
               o [304]statistical foundations
               o [305]computing foundations
               o [306]mathematical foundations
               o [307]statistical algorithms
               o [308]libraries worth knowing about after numpy, scipy and
                 matplotlib
          + [309]wrapping r libraries with rpy

     [310]page

     * [311]computational statistics in python
     * [312]indices and tables

     [313]introduction to ...   

   ____________________

   <

     * [314]introduction to python
          + [315]variables
          + [316]operators
          + [317]iterators
          + [318]conditional statements
          + [319]functions
          + [320]strings and string handling
          + [321]lists, tuples, dictionaries
          + [322]classes
          + [323]modules
          + [324]the standard library
          + [325]keeping the anaconda distribution up-to-date
          + [326]exercises
     * [327]getting started with python and the ipython notebook
          + [328]cells
          + [329]code cells
          + [330]magic commands
          + [331]python as glue
          + [332]python <-> r <-> matlab <-> octave
          + [333]more glue: julia and perl
     * [334]functions are first class objects
     * [335]function argumnents
          + [336]call by    object reference   
          + [337]binding of default arguments occurs at function
            definition
     * [338]higher-order functions
     * [339]anonymous functions
     * [340]pure functions
     * [341]recursion
     * [342]iterators
     * [343]generators
          + [344]generators and comprehensions
          + [345]utilites - enumerate, zip and the ternary if-else
            operator
     * [346]decorators
     * [347]the operator module
     * [348]the functools module
     * [349]the itertools module
     * [350]the toolz, fn and funcy modules
     * [351]exercises
     * [352]data science is osemn
          + [353]obtaining data
          + [354]scrubbing data
          + [355]exercises
     * [356]working with text
          + [357]string methods
          + [358]splitting and joining strings
          + [359]the string module
          + [360]id157
          + [361]the nltk toolkit
          + [362]exercises
     * [363]preprocessing text data
          + [364]example: counting words in a document
     * [365]working with structured data
          + [366]using sqlite3
          + [367]basic concepts of database id172
          + [368]using hdf5
          + [369]interfacing withpandas
     * [370]using numpy
          + [371]references
          + [372]example
          + [373]ndarray
          + [374]broadcasting, row, column and matrix operations
          + [375]universal functions (ufuncs)
          + [376]generalized ufucns
          + [377]random numbers
          + [378]id202
          + [379]exercises
     * [380]using pandas
          + [381]series
          + [382]dataframe
          + [383]panels
          + [384]split-apply-combine
          + [385]using statsmodels
     * [386]using r from ipython
          + [387]using rmagic
          + [388]using r from pandas
     * [389]computational problems in statistics
          + [390]textbook example - is coin fair?
          + [391]bayesian approach
          + [392]comment
     * [393]computer numbers and mathematics
          + [394]some examples of numbers behaving badly
          + [395]finite representation of numbers
          + [396]using arbitrary precision libraries
          + [397]from numbers to functions: stability and conditioning
          + [398]exercises
     * [399]algorithmic complexity
          + [400]profling and benchmarking
          + [401]measuring algorithmic complexity
          + [402]space complexity
     * [403]id202 and linear systems
          + [404]simultaneous equations
          + [405]linear independence
          + [406]norms and distance of vectors
          + [407]trace and determinant of matrices
          + [408]column space, row space, rank and kernel
          + [409]matrices as linear transformations
          + [410]matrix norms
          + [411]special matrices
          + [412]exercises
     * [413]id202 and matrix decompositions
          + [414]large linear systems
          + [415]example: netflix competition (circa 2006-2009)
          + [416]matrix decompositions
          + [417]matrix decompositions for pca and least squares
          + [418]singular value decomposition
          + [419]stabilty and condition number
          + [420]exercises
     * [421]change of basis
          + [422]variance and covariance
          + [423]eigendecomposition of the covariance matrix
          + [424]pca
          + [425]change of basis via pca
          + [426]graphical illustration of change of basis
          + [427]dimension reduction via pca
          + [428]using singular value decomposition (svd) for pca
     * [429]optimization and non-linear methods
          + [430]example: id113 (id113)
          + [431]bisection method
          + [432]secant method
          + [433]newton-rhapson method
          + [434]gauss-newton
          + [435]inverse quadratic interpolation
          + [436]brent   s method
     * [437]practical optimizatio routines
          + [438]finding roots
          + [439]optimization primer
          + [440]using scipy.optimize
          + [441]gradient deescent
          + [442]newton   s method and variants
          + [443]constrained optimization
          + [444]curve fitting
          + [445]finding paraemeters for ode models
          + [446]optimization of graph node placement
          + [447]optimization of standard statistical models
     * [448]fitting odes with the levenberg   marquardt algorithm
          + [449]1d example
          + [450]2d example
     * [451]algorithms for optimization and root finding for multivariate
       problems
          + [452]optimizers
          + [453]solvers
          + [454]glm estimation and irls
     * [455]expectation maximizatio (em) algorithm
          + [456]jensen   s inequality
          + [457]maximum likelihood with complete information
          + [458]incomplete information
          + [459]gaussian mixture models
          + [460]using em
          + [461]vectorized version
          + [462]vectorization with einstein summation notation
          + [463]comparison of em routines
     * [464]monte carlo methods
          + [465]pseudorandom number generators (prng)
          + [466]monte carlo swindles (variance reduction techniques)
          + [467]quasi-random numbers
     * [468]resampling methods
          + [469]resampling
          + [470]simulations
          + [471]setting the random seed
          + [472]sampling with and without replacement
          + [473]calculation of cook   s distance
          + [474]permutation resampling
          + [475]design of simulation experiments
          + [476]example: simulations to estimate power
          + [477]check with r
          + [478]estimating the cdf
          + [479]estimating the pdf
          + [480]kernel density estimation
          + [481]multivariate kerndel density estimation
     * [482]id115 (mcmc)
          + [483]bayesian data analysis
          + [484]metropolis-hastings sampler
          + [485]gibbs sampler
          + [486]slice sampler
          + [487]id187
     * [488]using pymc2
          + [489]coin toss
          + [490]estimating mean and standard deviation of normal
            distribution
          + [491]estimating parameters of a linear regreession model
          + [492]estimating parameters of a logistic model
          + [493]using a hierarchcical model
     * [494]using pymc3
          + [495]coin toss
          + [496]estimating mean and standard deviation of normal
            distribution
          + [497]estimating parameters of a linear regreession model
          + [498]estimating parameters of a logistic model
          + [499]using a hierarchcical model
     * [500]using pystan
          + [501]references
          + [502]simple logistic model
     * [503]animations of metropolis, gibbs and slice sampler dynamics
     * [504]c crash course
          + [505]hello world
          + [506]a tutorial example - coding a fibonacci function in c
          + [507]types in c
          + [508]operators
          + [509]control of program flow
          + [510]arrays and pointers
          + [511]functions
          + [512]function pointers
          + [513]using make to compile c programs
          + [514]exercise
     * [515]code optimization
          + [516]profiling
          + [517]using better algorihtms and data structures
          + [518]i/o bound problems
          + [519]problem set for optimization
     * [520]using c code in python
          + [521]example: the fibonacci sequence
          + [522]using clang and bitey
          + [523]using gcc and ctypes
          + [524]using cython
          + [525]benchmark
     * [526]using functions from various compiled languages in python
          + [527]c
          + [528]c++
          + [529]fortran
          + [530]benchmarking
          + [531]wrapping a function from a c library for use in python
          + [532]wrapping functions from c++ library for use in pyton
     * [533]julia and python
          + [534]defining a function in julia
          + [535]using it in python
          + [536]using python libraries in julia
     * [537]converting python code to c for speed
          + [538]example: fibonacci
          + [539]example: id127
          + [540]example: pairwise distance matrix
          + [541]profiling code
          + [542]numba
          + [543]cython
          + [544]comparison with optimized c from scipy
     * [545]optimization bake-off
          + [546]python version
          + [547]numpy version
          + [548]numexpr version
          + [549]numba version
          + [550]numbapro version
          + [551]parakeet version
          + [552]cython version
          + [553]c version
          + [554]c++ version
          + [555]fortran version
          + [556]bake-off
          + [557]summary
          + [558]recommendations for optimizing python code
     * [559]writing parallel code
          + [560]concepts
          + [561]embarassingly parallel programs
          + [562]using multiprocessing
          + [563]using ipython parallel for interactive parallel computing
          + [564]other parallel programming approaches not covered
          + [565]references
     * [566]massively parallel programming with gpus
          + [567]programming gpus
          + [568]gpu architecture
          + [569]cuda python
          + [570]getting started with cuda
          + [571]vector addition - the    hello, world    of cuda
          + [572]performing a reduction on cuda
          + [573]recreational
          + [574]more examples
     * [575]writing cuda in c
          + [576]review of gpu architechture - a simplification
          + [577]cuda c program - an outline
     * [578]distributed computing for big data
          + [579]why and when does distributed computing matter?
          + [580]ingredients for effiicient distributed computing
          + [581]what is hadoop?
          + [582]review of functional programming
          + [583]the hadoop mapreduce workflow
          + [584]using hadoop mapreduce
          + [585]spark
     * [586]hadoop mapreduce on aws emr with mrjob
          + [587]mapreduce code
          + [588]configuration file
          + [589]launching job
     * [590]spark on a local mahcine using 4 nodes
          + [591]using spark in standalone prograsm
          + [592]introduction to spark concepts with a data manipulation
            example
          + [593]using the mllib for regression
          + [594]references
     * [595]modules and packaging
          + [596]modules
          + [597]distributing your package
     * [598]tour of the jupyter (ipython3) notebook
          + [599]installing jupyter
          + [600]installing other kernels
          + [601]installing extensions
          + [602]installing python3 while keeping python2
          + [603]now, restart your notebook server
     * [604]polyglot programming
          + [605]python 2
          + [606]python 3
          + [607]bash
          + [608]r
          + [609]scala
          + [610]julia
          + [611]processing
     * [612]what you should know and learn more about
          + [613]statistical foundations
          + [614]computing foundations
          + [615]mathematical foundations
          + [616]statistical algorithms
          + [617]libraries worth knowing about after numpy, scipy and
            matplotlib
     * [618]wrapping r libraries with rpy

   ____________________

computational statistics in python[619]  

   contents:
   these pages are no longer maintained. lease use [620]current verison.
     * [621]introduction to python
          + [622]variables
          + [623]operators
          + [624]iterators
          + [625]conditional statements
          + [626]functions
          + [627]strings and string handling
          + [628]lists, tuples, dictionaries
          + [629]classes
          + [630]modules
          + [631]the standard library
          + [632]keeping the anaconda distribution up-to-date
          + [633]exercises
     * [634]getting started with python and the ipython notebook
          + [635]cells
          + [636]code cells
          + [637]magic commands
          + [638]python as glue
          + [639]python <-> r <-> matlab <-> octave
          + [640]more glue: julia and perl
     * [641]functions are first class objects
     * [642]function argumnents
          + [643]call by    object reference   
          + [644]binding of default arguments occurs at function
            definition
     * [645]higher-order functions
     * [646]anonymous functions
     * [647]pure functions
     * [648]recursion
     * [649]iterators
     * [650]generators
          + [651]generators and comprehensions
          + [652]utilites - enumerate, zip and the ternary if-else
            operator
     * [653]decorators
     * [654]the operator module
     * [655]the functools module
     * [656]the itertools module
     * [657]the toolz, fn and funcy modules
     * [658]exercises
     * [659]data science is osemn
          + [660]obtaining data
          + [661]scrubbing data
          + [662]exercises
     * [663]working with text
          + [664]string methods
          + [665]splitting and joining strings
          + [666]the string module
          + [667]id157
          + [668]the nltk toolkit
          + [669]exercises
     * [670]preprocessing text data
          + [671]example: counting words in a document
     * [672]working with structured data
          + [673]using sqlite3
          + [674]basic concepts of database id172
          + [675]using hdf5
          + [676]interfacing withpandas
     * [677]using numpy
          + [678]references
          + [679]example
          + [680]ndarray
          + [681]broadcasting, row, column and matrix operations
          + [682]universal functions (ufuncs)
          + [683]generalized ufucns
          + [684]random numbers
          + [685]id202
          + [686]exercises
     * [687]using pandas
          + [688]series
          + [689]dataframe
          + [690]panels
          + [691]split-apply-combine
          + [692]using statsmodels
     * [693]using r from ipython
          + [694]using rmagic
          + [695]using r from pandas
     * [696]computational problems in statistics
          + [697]textbook example - is coin fair?
          + [698]bayesian approach
          + [699]comment
     * [700]computer numbers and mathematics
          + [701]some examples of numbers behaving badly
          + [702]finite representation of numbers
          + [703]using arbitrary precision libraries
          + [704]from numbers to functions: stability and conditioning
          + [705]exercises
     * [706]algorithmic complexity
          + [707]profling and benchmarking
          + [708]measuring algorithmic complexity
          + [709]space complexity
     * [710]id202 and linear systems
          + [711]simultaneous equations
          + [712]linear independence
          + [713]norms and distance of vectors
          + [714]trace and determinant of matrices
          + [715]column space, row space, rank and kernel
          + [716]matrices as linear transformations
          + [717]matrix norms
          + [718]special matrices
          + [719]exercises
     * [720]id202 and matrix decompositions
          + [721]large linear systems
          + [722]example: netflix competition (circa 2006-2009)
          + [723]matrix decompositions
          + [724]matrix decompositions for pca and least squares
          + [725]singular value decomposition
          + [726]stabilty and condition number
          + [727]exercises
     * [728]change of basis
          + [729]variance and covariance
          + [730]eigendecomposition of the covariance matrix
          + [731]pca
          + [732]change of basis via pca
          + [733]graphical illustration of change of basis
          + [734]dimension reduction via pca
          + [735]using singular value decomposition (svd) for pca
     * [736]optimization and non-linear methods
          + [737]example: id113 (id113)
          + [738]bisection method
          + [739]secant method
          + [740]newton-rhapson method
          + [741]gauss-newton
          + [742]inverse quadratic interpolation
          + [743]brent   s method
     * [744]practical optimizatio routines
          + [745]finding roots
          + [746]optimization primer
          + [747]using scipy.optimize
          + [748]gradient deescent
          + [749]newton   s method and variants
          + [750]constrained optimization
          + [751]curve fitting
          + [752]finding paraemeters for ode models
          + [753]optimization of graph node placement
          + [754]optimization of standard statistical models
     * [755]fitting odes with the levenberg   marquardt algorithm
          + [756]1d example
          + [757]2d example
     * [758]algorithms for optimization and root finding for multivariate
       problems
          + [759]optimizers
          + [760]solvers
          + [761]glm estimation and irls
     * [762]expectation maximizatio (em) algorithm
          + [763]jensen   s inequality
          + [764]maximum likelihood with complete information
          + [765]incomplete information
          + [766]gaussian mixture models
          + [767]using em
          + [768]vectorized version
          + [769]vectorization with einstein summation notation
          + [770]comparison of em routines
     * [771]monte carlo methods
          + [772]pseudorandom number generators (prng)
          + [773]monte carlo swindles (variance reduction techniques)
          + [774]quasi-random numbers
     * [775]resampling methods
          + [776]resampling
          + [777]simulations
          + [778]setting the random seed
          + [779]sampling with and without replacement
          + [780]calculation of cook   s distance
          + [781]permutation resampling
          + [782]design of simulation experiments
          + [783]example: simulations to estimate power
          + [784]check with r
          + [785]estimating the cdf
          + [786]estimating the pdf
          + [787]kernel density estimation
          + [788]multivariate kerndel density estimation
     * [789]id115 (mcmc)
          + [790]bayesian data analysis
          + [791]metropolis-hastings sampler
          + [792]gibbs sampler
          + [793]slice sampler
          + [794]id187
     * [795]using pymc2
          + [796]coin toss
          + [797]estimating mean and standard deviation of normal
            distribution
          + [798]estimating parameters of a linear regreession model
          + [799]estimating parameters of a logistic model
          + [800]using a hierarchcical model
     * [801]using pymc3
          + [802]coin toss
          + [803]estimating mean and standard deviation of normal
            distribution
          + [804]estimating parameters of a linear regreession model
          + [805]estimating parameters of a logistic model
          + [806]using a hierarchcical model
     * [807]using pystan
          + [808]references
          + [809]simple logistic model
     * [810]animations of metropolis, gibbs and slice sampler dynamics
     * [811]c crash course
          + [812]hello world
          + [813]a tutorial example - coding a fibonacci function in c
          + [814]types in c
          + [815]operators
          + [816]control of program flow
          + [817]arrays and pointers
          + [818]functions
          + [819]function pointers
          + [820]using make to compile c programs
          + [821]exercise
     * [822]code optimization
          + [823]profiling
          + [824]using better algorihtms and data structures
          + [825]i/o bound problems
          + [826]problem set for optimization
     * [827]using c code in python
          + [828]example: the fibonacci sequence
          + [829]using clang and bitey
          + [830]using gcc and ctypes
          + [831]using cython
          + [832]benchmark
     * [833]using functions from various compiled languages in python
          + [834]c
          + [835]c++
          + [836]fortran
          + [837]benchmarking
          + [838]wrapping a function from a c library for use in python
          + [839]wrapping functions from c++ library for use in pyton
     * [840]julia and python
          + [841]defining a function in julia
          + [842]using it in python
          + [843]using python libraries in julia
     * [844]converting python code to c for speed
          + [845]example: fibonacci
          + [846]example: id127
          + [847]example: pairwise distance matrix
          + [848]profiling code
          + [849]numba
          + [850]cython
          + [851]comparison with optimized c from scipy
     * [852]optimization bake-off
          + [853]python version
          + [854]numpy version
          + [855]numexpr version
          + [856]numba version
          + [857]numbapro version
          + [858]parakeet version
          + [859]cython version
          + [860]c version
          + [861]c++ version
          + [862]fortran version
          + [863]bake-off
          + [864]summary
          + [865]recommendations for optimizing python code
     * [866]writing parallel code
          + [867]concepts
          + [868]embarassingly parallel programs
          + [869]using multiprocessing
          + [870]using ipython parallel for interactive parallel computing
          + [871]other parallel programming approaches not covered
          + [872]references
     * [873]massively parallel programming with gpus
          + [874]programming gpus
          + [875]gpu architecture
          + [876]cuda python
          + [877]getting started with cuda
          + [878]vector addition - the    hello, world    of cuda
          + [879]performing a reduction on cuda
          + [880]recreational
          + [881]more examples
     * [882]writing cuda in c
          + [883]review of gpu architechture - a simplification
          + [884]cuda c program - an outline
     * [885]distributed computing for big data
          + [886]why and when does distributed computing matter?
          + [887]ingredients for effiicient distributed computing
          + [888]what is hadoop?
          + [889]review of functional programming
          + [890]the hadoop mapreduce workflow
          + [891]using hadoop mapreduce
          + [892]spark
     * [893]hadoop mapreduce on aws emr with mrjob
          + [894]mapreduce code
          + [895]configuration file
          + [896]launching job
     * [897]spark on a local mahcine using 4 nodes
          + [898]using spark in standalone prograsm
          + [899]introduction to spark concepts with a data manipulation
            example
          + [900]using the mllib for regression
          + [901]references
     * [902]modules and packaging
          + [903]modules
          + [904]distributing your package
     * [905]tour of the jupyter (ipython3) notebook
          + [906]installing jupyter
          + [907]installing other kernels
          + [908]installing extensions
          + [909]installing python3 while keeping python2
          + [910]now, restart your notebook server
     * [911]polyglot programming
          + [912]python 2
          + [913]python 3
          + [914]bash
          + [915]r
          + [916]scala
          + [917]julia
          + [918]processing
     * [919]what you should know and learn more about
          + [920]statistical foundations
          + [921]computing foundations
          + [922]mathematical foundations
          + [923]statistical algorithms
          + [924]libraries worth knowing about after numpy, scipy and
            matplotlib
     * [925]wrapping r libraries with rpy

indices and tables[926]  

     * [927]index
     * [928]module index
     * [929]search page

   <

   [930]back to top

   created using [931]sphinx 1.3.1.

references

   1. https://people.duke.edu/~ccc14/sta-663/
   2. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html
   3. https://people.duke.edu/~ccc14/sta-663/
   4. https://people.duke.edu/~ccc14/sta-663/
   5. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html
   6. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#variables
   7. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#operators
   8. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#iterators
   9. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#conditional-statements
  10. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#functions
  11. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#strings-and-string-handling
  12. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#lists-tuples-dictionaries
  13. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#classes
  14. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#modules
  15. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#the-standard-library
  16. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#keeping-the-anaconda-distribution-up-to-date
  17. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#exercises
  18. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html
  19. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#cells
  20. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#code-cells
  21. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#magic-commands
  22. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#python-as-glue
  23. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#python-r-matlab-octave
  24. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#more-glue-julia-and-perl
  25. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html
  26. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#function-argumnents
  27. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#call-by-object-reference
  28. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#binding-of-default-arguments-occurs-at-function-definition
  29. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#higher-order-functions
  30. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#anonymous-functions
  31. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#pure-functions
  32. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#recursion
  33. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#iterators
  34. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#generators
  35. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#generators-and-comprehensions
  36. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#utilites-enumerate-zip-and-the-ternary-if-else-operator
  37. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#decorators
  38. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-operator-module
  39. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-functools-module
  40. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-itertools-module
  41. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-toolz-fn-and-funcy-modules
  42. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#exercises
  43. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html
  44. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#obtaining-data
  45. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#scrubbing-data
  46. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#exercises
  47. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html
  48. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#string-methods
  49. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#splitting-and-joining-strings
  50. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#the-string-module
  51. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#regular-expressions
  52. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#the-nltk-toolkit
  53. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#exercises
  54. https://people.duke.edu/~ccc14/sta-663/textprocessingextras.html
  55. https://people.duke.edu/~ccc14/sta-663/textprocessingextras.html#example-counting-words-in-a-document
  56. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html
  57. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#using-sqlite3
  58. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#basic-concepts-of-database-id172
  59. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#using-hdf5
  60. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#interfacing-withpandas
  61. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html
  62. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#references
  63. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#example
  64. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#ndarray
  65. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#broadcasting-row-column-and-matrix-operations
  66. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#universal-functions-ufuncs
  67. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#generalized-ufucns
  68. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#random-numbers
  69. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#linear-algebra
  70. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#exercises
  71. https://people.duke.edu/~ccc14/sta-663/usingpandas.html
  72. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#series
  73. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#dataframe
  74. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#panels
  75. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#split-apply-combine
  76. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-statsmodels
  77. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-r-from-ipython
  78. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-rmagic
  79. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-r-from-pandas
  80. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html
  81. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#textbook-example-is-coin-fair
  82. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#bayesian-approach
  83. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#comment
  84. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html
  85. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#some-examples-of-numbers-behaving-badly
  86. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#finite-representation-of-numbers
  87. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#using-arbitrary-precision-libraries
  88. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#from-numbers-to-functions-stability-and-conditioning
  89. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#exercises
  90. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html
  91. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#profling-and-benchmarking
  92. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#measuring-algorithmic-complexity
  93. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#space-complexity
  94. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html
  95. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#simultaneous-equations
  96. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#linear-independence
  97. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#norms-and-distance-of-vectors
  98. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#trace-and-determinant-of-matrices
  99. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#column-space-row-space-rank-and-kernel
 100. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#matrices-as-linear-transformations
 101. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#matrix-norms
 102. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#special-matrices
 103. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#exercises
 104. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html
 105. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#large-linear-systems
 106. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#example-netflix-competition-circa-2006-2009
 107. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#matrix-decompositions
 108. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#matrix-decompositions-for-pca-and-least-squares
 109. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#singular-value-decomposition
 110. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#stabilty-and-condition-number
 111. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#exercises
 112. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html
 113. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#variance-and-covariance
 114. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#eigendecomposition-of-the-covariance-matrix
 115. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#pca
 116. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#change-of-basis-via-pca
 117. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#graphical-illustration-of-change-of-basis
 118. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#dimension-reduction-via-pca
 119. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#using-singular-value-decomposition-svd-for-pca
 120. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html
 121. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#example-maximum-likelihood-estimation-id113
 122. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#bisection-method
 123. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#secant-method
 124. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#newton-rhapson-method
 125. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#gauss-newton
 126. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#inverse-quadratic-interpolation
 127. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#brent-s-method
 128. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html
 129. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#finding-roots
 130. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-primer
 131. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#using-scipy-optimize
 132. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#gradient-deescent
 133. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#newton-s-method-and-variants
 134. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#constrained-optimization
 135. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#curve-fitting
 136. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#finding-paraemeters-for-ode-models
 137. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-of-graph-node-placement
 138. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-of-standard-statistical-models
 139. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html
 140. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html#d-example
 141. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html#id1
 142. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html
 143. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#optimizers
 144. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#solvers
 145. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#glm-estimation-and-irls
 146. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html
 147. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#jensen-s-inequality
 148. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#maximum-likelihood-with-complete-information
 149. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#incomplete-information
 150. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#gaussian-mixture-models
 151. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#using-em
 152. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#vectorized-version
 153. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#vectorization-with-einstein-summation-notation
 154. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#comparison-of-em-routines
 155. https://people.duke.edu/~ccc14/sta-663/montecarlo.html
 156. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#pseudorandom-number-generators-prng
 157. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#monte-carlo-swindles-variance-reduction-techniques
 158. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#quasi-random-numbers
 159. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html
 160. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#resampling
 161. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#simulations
 162. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#setting-the-random-seed
 163. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#sampling-with-and-without-replacement
 164. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#calculation-of-cook-s-distance
 165. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#permutation-resampling
 166. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#design-of-simulation-experiments
 167. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#example-simulations-to-estimate-power
 168. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#check-with-r
 169. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#estimating-the-cdf
 170. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#estimating-the-pdf
 171. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#kernel-density-estimation
 172. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#multivariate-kerndel-density-estimation
 173. https://people.duke.edu/~ccc14/sta-663/mcmc.html
 174. https://people.duke.edu/~ccc14/sta-663/mcmc.html#bayesian-data-analysis
 175. https://people.duke.edu/~ccc14/sta-663/mcmc.html#metropolis-hastings-sampler
 176. https://people.duke.edu/~ccc14/sta-663/mcmc.html#gibbs-sampler
 177. https://people.duke.edu/~ccc14/sta-663/mcmc.html#slice-sampler
 178. https://people.duke.edu/~ccc14/sta-663/mcmc.html#hierarchical-models
 179. https://people.duke.edu/~ccc14/sta-663/pymc2.html
 180. https://people.duke.edu/~ccc14/sta-663/pymc2.html#coin-toss
 181. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-mean-and-standard-deviation-of-normal-distribution
 182. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-parameters-of-a-linear-regreession-model
 183. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-parameters-of-a-logistic-model
 184. https://people.duke.edu/~ccc14/sta-663/pymc2.html#using-a-hierarchcical-model
 185. https://people.duke.edu/~ccc14/sta-663/pymc3.html
 186. https://people.duke.edu/~ccc14/sta-663/pymc3.html#coin-toss
 187. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-mean-and-standard-deviation-of-normal-distribution
 188. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-parameters-of-a-linear-regreession-model
 189. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-parameters-of-a-logistic-model
 190. https://people.duke.edu/~ccc14/sta-663/pymc3.html#using-a-hierarchcical-model
 191. https://people.duke.edu/~ccc14/sta-663/pystan.html
 192. https://people.duke.edu/~ccc14/sta-663/pystan.html#references
 193. https://people.duke.edu/~ccc14/sta-663/pystan.html#simple-logistic-model
 194. https://people.duke.edu/~ccc14/sta-663/animation.html
 195. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html
 196. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#hello-world
 197. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#a-tutorial-example-coding-a-fibonacci-function-in-c
 198. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#types-in-c
 199. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#operators
 200. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#control-of-program-flow
 201. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#arrays-and-pointers
 202. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#functions
 203. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#function-pointers
 204. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#using-make-to-compile-c-programs
 205. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#exercise
 206. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html
 207. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#profiling
 208. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#using-better-algorihtms-and-data-structures
 209. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#i-o-bound-problems
 210. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#problem-set-for-optimization
 211. https://people.duke.edu/~ccc14/sta-663/fromctopython.html
 212. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#example-the-fibonacci-sequence
 213. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-clang-and-bitey
 214. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-gcc-and-ctypes
 215. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-cython
 216. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#benchmark
 217. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html
 218. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#c
 219. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#id1
 220. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#fortran
 221. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#benchmarking
 222. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#wrapping-a-function-from-a-c-library-for-use-in-python
 223. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#wrapping-functions-from-c-library-for-use-in-pyton
 224. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html
 225. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#defining-a-function-in-julia
 226. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#using-it-in-python
 227. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#using-python-libraries-in-julia
 228. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html
 229. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-fibonacci
 230. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-matrix-multiplication
 231. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-pairwise-distance-matrix
 232. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#profiling-code
 233. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#numba
 234. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#cython
 235. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#comparison-with-optimized-c-from-scipy
 236. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html
 237. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#python-version
 238. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numpy-version
 239. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numexpr-version
 240. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numba-version
 241. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numbapro-version
 242. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#parakeet-version
 243. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#cython-version
 244. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#c-version
 245. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#id1
 246. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#fortran-version
 247. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#bake-off
 248. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#summary
 249. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#recommendations-for-optimizing-python-code
 250. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html
 251. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#concepts
 252. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#embarassingly-parallel-programs
 253. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#using-multiprocessing
 254. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#using-ipython-parallel-for-interactive-parallel-computing
 255. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#other-parallel-programming-approaches-not-covered
 256. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#references
 257. https://people.duke.edu/~ccc14/sta-663/cudapython.html
 258. https://people.duke.edu/~ccc14/sta-663/cudapython.html#programming-gpus
 259. https://people.duke.edu/~ccc14/sta-663/cudapython.html#gpu-architecture
 260. https://people.duke.edu/~ccc14/sta-663/cudapython.html#cuda-python
 261. https://people.duke.edu/~ccc14/sta-663/cudapython.html#getting-started-with-cuda
 262. https://people.duke.edu/~ccc14/sta-663/cudapython.html#vector-addition-the-hello-world-of-cuda
 263. https://people.duke.edu/~ccc14/sta-663/cudapython.html#performing-a-reduction-on-cuda
 264. https://people.duke.edu/~ccc14/sta-663/cudapython.html#recreational
 265. https://people.duke.edu/~ccc14/sta-663/cudapython.html#more-examples
 266. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html
 267. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html#review-of-gpu-architechture-a-simplification
 268. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html#cuda-c-program-an-outline
 269. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html
 270. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#why-and-when-does-distributed-computing-matter
 271. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#ingredients-for-effiicient-distributed-computing
 272. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#what-is-hadoop
 273. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#review-of-functional-programming
 274. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#the-hadoop-mapreduce-workflow
 275. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#using-hadoop-mapreduce
 276. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#spark
 277. https://people.duke.edu/~ccc14/sta-663/mapreduce.html
 278. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#mapreduce-code
 279. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#configuration-file
 280. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#launching-job
 281. https://people.duke.edu/~ccc14/sta-663/spark.html
 282. https://people.duke.edu/~ccc14/sta-663/spark.html#using-spark-in-standalone-prograsm
 283. https://people.duke.edu/~ccc14/sta-663/spark.html#introduction-to-spark-concepts-with-a-data-manipulation-example
 284. https://people.duke.edu/~ccc14/sta-663/spark.html#using-the-mllib-for-regression
 285. https://people.duke.edu/~ccc14/sta-663/spark.html#references
 286. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html
 287. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html#modules
 288. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html#distributing-your-package
 289. https://people.duke.edu/~ccc14/sta-663/jupyter.html
 290. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-jupyter
 291. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-other-kernels
 292. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-extensions
 293. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-python3-while-keeping-python2
 294. https://people.duke.edu/~ccc14/sta-663/jupyter.html#now-restart-your-notebook-server
 295. https://people.duke.edu/~ccc14/sta-663/multikernel.html
 296. https://people.duke.edu/~ccc14/sta-663/multikernel.html#python-2
 297. https://people.duke.edu/~ccc14/sta-663/multikernel.html#python-3
 298. https://people.duke.edu/~ccc14/sta-663/multikernel.html#bash
 299. https://people.duke.edu/~ccc14/sta-663/multikernel.html#r
 300. https://people.duke.edu/~ccc14/sta-663/multikernel.html#scala
 301. https://people.duke.edu/~ccc14/sta-663/multikernel.html#julia
 302. https://people.duke.edu/~ccc14/sta-663/multikernel.html#processing
 303. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html
 304. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#statistical-foundations
 305. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#computing-foundations
 306. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#mathematical-foundations
 307. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#statistical-algorithms
 308. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#libraries-worth-knowing-about-after-numpy-scipy-and-matplotlib
 309. https://people.duke.edu/~ccc14/sta-663/wrappingrlibraries.html
 310. https://people.duke.edu/~ccc14/sta-663/
 311. https://people.duke.edu/~ccc14/sta-663/
 312. https://people.duke.edu/~ccc14/sta-663/#indices-and-tables
 313. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html
 314. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html
 315. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#variables
 316. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#operators
 317. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#iterators
 318. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#conditional-statements
 319. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#functions
 320. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#strings-and-string-handling
 321. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#lists-tuples-dictionaries
 322. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#classes
 323. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#modules
 324. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#the-standard-library
 325. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#keeping-the-anaconda-distribution-up-to-date
 326. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#exercises
 327. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html
 328. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#cells
 329. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#code-cells
 330. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#magic-commands
 331. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#python-as-glue
 332. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#python-r-matlab-octave
 333. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#more-glue-julia-and-perl
 334. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html
 335. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#function-argumnents
 336. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#call-by-object-reference
 337. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#binding-of-default-arguments-occurs-at-function-definition
 338. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#higher-order-functions
 339. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#anonymous-functions
 340. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#pure-functions
 341. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#recursion
 342. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#iterators
 343. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#generators
 344. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#generators-and-comprehensions
 345. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#utilites-enumerate-zip-and-the-ternary-if-else-operator
 346. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#decorators
 347. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-operator-module
 348. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-functools-module
 349. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-itertools-module
 350. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-toolz-fn-and-funcy-modules
 351. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#exercises
 352. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html
 353. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#obtaining-data
 354. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#scrubbing-data
 355. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#exercises
 356. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html
 357. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#string-methods
 358. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#splitting-and-joining-strings
 359. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#the-string-module
 360. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#regular-expressions
 361. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#the-nltk-toolkit
 362. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#exercises
 363. https://people.duke.edu/~ccc14/sta-663/textprocessingextras.html
 364. https://people.duke.edu/~ccc14/sta-663/textprocessingextras.html#example-counting-words-in-a-document
 365. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html
 366. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#using-sqlite3
 367. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#basic-concepts-of-database-id172
 368. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#using-hdf5
 369. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#interfacing-withpandas
 370. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html
 371. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#references
 372. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#example
 373. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#ndarray
 374. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#broadcasting-row-column-and-matrix-operations
 375. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#universal-functions-ufuncs
 376. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#generalized-ufucns
 377. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#random-numbers
 378. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#linear-algebra
 379. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#exercises
 380. https://people.duke.edu/~ccc14/sta-663/usingpandas.html
 381. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#series
 382. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#dataframe
 383. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#panels
 384. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#split-apply-combine
 385. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-statsmodels
 386. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-r-from-ipython
 387. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-rmagic
 388. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-r-from-pandas
 389. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html
 390. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#textbook-example-is-coin-fair
 391. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#bayesian-approach
 392. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#comment
 393. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html
 394. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#some-examples-of-numbers-behaving-badly
 395. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#finite-representation-of-numbers
 396. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#using-arbitrary-precision-libraries
 397. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#from-numbers-to-functions-stability-and-conditioning
 398. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#exercises
 399. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html
 400. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#profling-and-benchmarking
 401. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#measuring-algorithmic-complexity
 402. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#space-complexity
 403. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html
 404. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#simultaneous-equations
 405. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#linear-independence
 406. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#norms-and-distance-of-vectors
 407. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#trace-and-determinant-of-matrices
 408. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#column-space-row-space-rank-and-kernel
 409. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#matrices-as-linear-transformations
 410. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#matrix-norms
 411. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#special-matrices
 412. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#exercises
 413. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html
 414. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#large-linear-systems
 415. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#example-netflix-competition-circa-2006-2009
 416. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#matrix-decompositions
 417. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#matrix-decompositions-for-pca-and-least-squares
 418. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#singular-value-decomposition
 419. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#stabilty-and-condition-number
 420. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#exercises
 421. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html
 422. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#variance-and-covariance
 423. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#eigendecomposition-of-the-covariance-matrix
 424. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#pca
 425. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#change-of-basis-via-pca
 426. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#graphical-illustration-of-change-of-basis
 427. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#dimension-reduction-via-pca
 428. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#using-singular-value-decomposition-svd-for-pca
 429. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html
 430. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#example-maximum-likelihood-estimation-id113
 431. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#bisection-method
 432. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#secant-method
 433. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#newton-rhapson-method
 434. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#gauss-newton
 435. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#inverse-quadratic-interpolation
 436. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#brent-s-method
 437. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html
 438. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#finding-roots
 439. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-primer
 440. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#using-scipy-optimize
 441. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#gradient-deescent
 442. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#newton-s-method-and-variants
 443. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#constrained-optimization
 444. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#curve-fitting
 445. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#finding-paraemeters-for-ode-models
 446. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-of-graph-node-placement
 447. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-of-standard-statistical-models
 448. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html
 449. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html#d-example
 450. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html#id1
 451. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html
 452. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#optimizers
 453. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#solvers
 454. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#glm-estimation-and-irls
 455. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html
 456. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#jensen-s-inequality
 457. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#maximum-likelihood-with-complete-information
 458. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#incomplete-information
 459. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#gaussian-mixture-models
 460. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#using-em
 461. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#vectorized-version
 462. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#vectorization-with-einstein-summation-notation
 463. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#comparison-of-em-routines
 464. https://people.duke.edu/~ccc14/sta-663/montecarlo.html
 465. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#pseudorandom-number-generators-prng
 466. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#monte-carlo-swindles-variance-reduction-techniques
 467. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#quasi-random-numbers
 468. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html
 469. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#resampling
 470. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#simulations
 471. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#setting-the-random-seed
 472. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#sampling-with-and-without-replacement
 473. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#calculation-of-cook-s-distance
 474. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#permutation-resampling
 475. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#design-of-simulation-experiments
 476. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#example-simulations-to-estimate-power
 477. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#check-with-r
 478. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#estimating-the-cdf
 479. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#estimating-the-pdf
 480. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#kernel-density-estimation
 481. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#multivariate-kerndel-density-estimation
 482. https://people.duke.edu/~ccc14/sta-663/mcmc.html
 483. https://people.duke.edu/~ccc14/sta-663/mcmc.html#bayesian-data-analysis
 484. https://people.duke.edu/~ccc14/sta-663/mcmc.html#metropolis-hastings-sampler
 485. https://people.duke.edu/~ccc14/sta-663/mcmc.html#gibbs-sampler
 486. https://people.duke.edu/~ccc14/sta-663/mcmc.html#slice-sampler
 487. https://people.duke.edu/~ccc14/sta-663/mcmc.html#hierarchical-models
 488. https://people.duke.edu/~ccc14/sta-663/pymc2.html
 489. https://people.duke.edu/~ccc14/sta-663/pymc2.html#coin-toss
 490. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-mean-and-standard-deviation-of-normal-distribution
 491. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-parameters-of-a-linear-regreession-model
 492. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-parameters-of-a-logistic-model
 493. https://people.duke.edu/~ccc14/sta-663/pymc2.html#using-a-hierarchcical-model
 494. https://people.duke.edu/~ccc14/sta-663/pymc3.html
 495. https://people.duke.edu/~ccc14/sta-663/pymc3.html#coin-toss
 496. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-mean-and-standard-deviation-of-normal-distribution
 497. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-parameters-of-a-linear-regreession-model
 498. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-parameters-of-a-logistic-model
 499. https://people.duke.edu/~ccc14/sta-663/pymc3.html#using-a-hierarchcical-model
 500. https://people.duke.edu/~ccc14/sta-663/pystan.html
 501. https://people.duke.edu/~ccc14/sta-663/pystan.html#references
 502. https://people.duke.edu/~ccc14/sta-663/pystan.html#simple-logistic-model
 503. https://people.duke.edu/~ccc14/sta-663/animation.html
 504. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html
 505. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#hello-world
 506. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#a-tutorial-example-coding-a-fibonacci-function-in-c
 507. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#types-in-c
 508. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#operators
 509. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#control-of-program-flow
 510. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#arrays-and-pointers
 511. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#functions
 512. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#function-pointers
 513. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#using-make-to-compile-c-programs
 514. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#exercise
 515. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html
 516. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#profiling
 517. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#using-better-algorihtms-and-data-structures
 518. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#i-o-bound-problems
 519. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#problem-set-for-optimization
 520. https://people.duke.edu/~ccc14/sta-663/fromctopython.html
 521. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#example-the-fibonacci-sequence
 522. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-clang-and-bitey
 523. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-gcc-and-ctypes
 524. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-cython
 525. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#benchmark
 526. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html
 527. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#c
 528. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#id1
 529. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#fortran
 530. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#benchmarking
 531. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#wrapping-a-function-from-a-c-library-for-use-in-python
 532. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#wrapping-functions-from-c-library-for-use-in-pyton
 533. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html
 534. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#defining-a-function-in-julia
 535. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#using-it-in-python
 536. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#using-python-libraries-in-julia
 537. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html
 538. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-fibonacci
 539. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-matrix-multiplication
 540. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-pairwise-distance-matrix
 541. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#profiling-code
 542. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#numba
 543. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#cython
 544. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#comparison-with-optimized-c-from-scipy
 545. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html
 546. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#python-version
 547. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numpy-version
 548. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numexpr-version
 549. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numba-version
 550. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numbapro-version
 551. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#parakeet-version
 552. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#cython-version
 553. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#c-version
 554. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#id1
 555. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#fortran-version
 556. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#bake-off
 557. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#summary
 558. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#recommendations-for-optimizing-python-code
 559. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html
 560. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#concepts
 561. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#embarassingly-parallel-programs
 562. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#using-multiprocessing
 563. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#using-ipython-parallel-for-interactive-parallel-computing
 564. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#other-parallel-programming-approaches-not-covered
 565. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#references
 566. https://people.duke.edu/~ccc14/sta-663/cudapython.html
 567. https://people.duke.edu/~ccc14/sta-663/cudapython.html#programming-gpus
 568. https://people.duke.edu/~ccc14/sta-663/cudapython.html#gpu-architecture
 569. https://people.duke.edu/~ccc14/sta-663/cudapython.html#cuda-python
 570. https://people.duke.edu/~ccc14/sta-663/cudapython.html#getting-started-with-cuda
 571. https://people.duke.edu/~ccc14/sta-663/cudapython.html#vector-addition-the-hello-world-of-cuda
 572. https://people.duke.edu/~ccc14/sta-663/cudapython.html#performing-a-reduction-on-cuda
 573. https://people.duke.edu/~ccc14/sta-663/cudapython.html#recreational
 574. https://people.duke.edu/~ccc14/sta-663/cudapython.html#more-examples
 575. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html
 576. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html#review-of-gpu-architechture-a-simplification
 577. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html#cuda-c-program-an-outline
 578. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html
 579. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#why-and-when-does-distributed-computing-matter
 580. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#ingredients-for-effiicient-distributed-computing
 581. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#what-is-hadoop
 582. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#review-of-functional-programming
 583. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#the-hadoop-mapreduce-workflow
 584. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#using-hadoop-mapreduce
 585. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#spark
 586. https://people.duke.edu/~ccc14/sta-663/mapreduce.html
 587. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#mapreduce-code
 588. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#configuration-file
 589. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#launching-job
 590. https://people.duke.edu/~ccc14/sta-663/spark.html
 591. https://people.duke.edu/~ccc14/sta-663/spark.html#using-spark-in-standalone-prograsm
 592. https://people.duke.edu/~ccc14/sta-663/spark.html#introduction-to-spark-concepts-with-a-data-manipulation-example
 593. https://people.duke.edu/~ccc14/sta-663/spark.html#using-the-mllib-for-regression
 594. https://people.duke.edu/~ccc14/sta-663/spark.html#references
 595. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html
 596. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html#modules
 597. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html#distributing-your-package
 598. https://people.duke.edu/~ccc14/sta-663/jupyter.html
 599. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-jupyter
 600. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-other-kernels
 601. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-extensions
 602. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-python3-while-keeping-python2
 603. https://people.duke.edu/~ccc14/sta-663/jupyter.html#now-restart-your-notebook-server
 604. https://people.duke.edu/~ccc14/sta-663/multikernel.html
 605. https://people.duke.edu/~ccc14/sta-663/multikernel.html#python-2
 606. https://people.duke.edu/~ccc14/sta-663/multikernel.html#python-3
 607. https://people.duke.edu/~ccc14/sta-663/multikernel.html#bash
 608. https://people.duke.edu/~ccc14/sta-663/multikernel.html#r
 609. https://people.duke.edu/~ccc14/sta-663/multikernel.html#scala
 610. https://people.duke.edu/~ccc14/sta-663/multikernel.html#julia
 611. https://people.duke.edu/~ccc14/sta-663/multikernel.html#processing
 612. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html
 613. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#statistical-foundations
 614. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#computing-foundations
 615. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#mathematical-foundations
 616. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#statistical-algorithms
 617. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#libraries-worth-knowing-about-after-numpy-scipy-and-matplotlib
 618. https://people.duke.edu/~ccc14/sta-663/wrappingrlibraries.html
 619. https://people.duke.edu/~ccc14/sta-663/#computational-statistics-in-python
 620. http://people.duke.edu/~ccc14/sta-663-2017/
 621. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html
 622. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#variables
 623. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#operators
 624. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#iterators
 625. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#conditional-statements
 626. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#functions
 627. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#strings-and-string-handling
 628. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#lists-tuples-dictionaries
 629. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#classes
 630. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#modules
 631. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#the-standard-library
 632. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#keeping-the-anaconda-distribution-up-to-date
 633. https://people.duke.edu/~ccc14/sta-663/introductiontopythonsolutions.html#exercises
 634. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html
 635. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#cells
 636. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#code-cells
 637. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#magic-commands
 638. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#python-as-glue
 639. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#python-r-matlab-octave
 640. https://people.duke.edu/~ccc14/sta-663/ipythonnotebookintroduction.html#more-glue-julia-and-perl
 641. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html
 642. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#function-argumnents
 643. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#call-by-object-reference
 644. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#binding-of-default-arguments-occurs-at-function-definition
 645. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#higher-order-functions
 646. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#anonymous-functions
 647. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#pure-functions
 648. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#recursion
 649. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#iterators
 650. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#generators
 651. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#generators-and-comprehensions
 652. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#utilites-enumerate-zip-and-the-ternary-if-else-operator
 653. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#decorators
 654. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-operator-module
 655. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-functools-module
 656. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-itertools-module
 657. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#the-toolz-fn-and-funcy-modules
 658. https://people.duke.edu/~ccc14/sta-663/functionssolutions.html#exercises
 659. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html
 660. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#obtaining-data
 661. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#scrubbing-data
 662. https://people.duke.edu/~ccc14/sta-663/dataprocessingsolutions.html#exercises
 663. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html
 664. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#string-methods
 665. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#splitting-and-joining-strings
 666. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#the-string-module
 667. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#regular-expressions
 668. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#the-nltk-toolkit
 669. https://people.duke.edu/~ccc14/sta-663/textprocessingsolutions.html#exercises
 670. https://people.duke.edu/~ccc14/sta-663/textprocessingextras.html
 671. https://people.duke.edu/~ccc14/sta-663/textprocessingextras.html#example-counting-words-in-a-document
 672. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html
 673. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#using-sqlite3
 674. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#basic-concepts-of-database-id172
 675. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#using-hdf5
 676. https://people.duke.edu/~ccc14/sta-663/workingwithstructureddata.html#interfacing-withpandas
 677. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html
 678. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#references
 679. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#example
 680. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#ndarray
 681. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#broadcasting-row-column-and-matrix-operations
 682. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#universal-functions-ufuncs
 683. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#generalized-ufucns
 684. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#random-numbers
 685. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#linear-algebra
 686. https://people.duke.edu/~ccc14/sta-663/usingnumpysolutions.html#exercises
 687. https://people.duke.edu/~ccc14/sta-663/usingpandas.html
 688. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#series
 689. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#dataframe
 690. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#panels
 691. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#split-apply-combine
 692. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-statsmodels
 693. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-r-from-ipython
 694. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-rmagic
 695. https://people.duke.edu/~ccc14/sta-663/usingpandas.html#using-r-from-pandas
 696. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html
 697. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#textbook-example-is-coin-fair
 698. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#bayesian-approach
 699. https://people.duke.edu/~ccc14/sta-663/computationalstatisticsmotivation.html#comment
 700. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html
 701. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#some-examples-of-numbers-behaving-badly
 702. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#finite-representation-of-numbers
 703. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#using-arbitrary-precision-libraries
 704. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#from-numbers-to-functions-stability-and-conditioning
 705. https://people.duke.edu/~ccc14/sta-663/computerarithmetic.html#exercises
 706. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html
 707. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#profling-and-benchmarking
 708. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#measuring-algorithmic-complexity
 709. https://people.duke.edu/~ccc14/sta-663/algorithmiccomplexity.html#space-complexity
 710. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html
 711. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#simultaneous-equations
 712. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#linear-independence
 713. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#norms-and-distance-of-vectors
 714. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#trace-and-determinant-of-matrices
 715. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#column-space-row-space-rank-and-kernel
 716. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#matrices-as-linear-transformations
 717. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#matrix-norms
 718. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#special-matrices
 719. https://people.duke.edu/~ccc14/sta-663/linearalgebrareview.html#exercises
 720. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html
 721. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#large-linear-systems
 722. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#example-netflix-competition-circa-2006-2009
 723. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#matrix-decompositions
 724. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#matrix-decompositions-for-pca-and-least-squares
 725. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#singular-value-decomposition
 726. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#stabilty-and-condition-number
 727. https://people.duke.edu/~ccc14/sta-663/linearalgebramatrixdecompwithsolutions.html#exercises
 728. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html
 729. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#variance-and-covariance
 730. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#eigendecomposition-of-the-covariance-matrix
 731. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#pca
 732. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#change-of-basis-via-pca
 733. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#graphical-illustration-of-change-of-basis
 734. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#dimension-reduction-via-pca
 735. https://people.duke.edu/~ccc14/sta-663/pcasolutions.html#using-singular-value-decomposition-svd-for-pca
 736. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html
 737. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#example-maximum-likelihood-estimation-id113
 738. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#bisection-method
 739. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#secant-method
 740. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#newton-rhapson-method
 741. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#gauss-newton
 742. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#inverse-quadratic-interpolation
 743. https://people.duke.edu/~ccc14/sta-663/optimizationinonedimension.html#brent-s-method
 744. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html
 745. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#finding-roots
 746. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-primer
 747. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#using-scipy-optimize
 748. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#gradient-deescent
 749. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#newton-s-method-and-variants
 750. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#constrained-optimization
 751. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#curve-fitting
 752. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#finding-paraemeters-for-ode-models
 753. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-of-graph-node-placement
 754. https://people.duke.edu/~ccc14/sta-663/blackboxoptimization.html#optimization-of-standard-statistical-models
 755. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html
 756. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html#d-example
 757. https://people.duke.edu/~ccc14/sta-663/calibratingodes.html#id1
 758. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html
 759. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#optimizers
 760. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#solvers
 761. https://people.duke.edu/~ccc14/sta-663/multivariateoptimizationalgortihms.html#glm-estimation-and-irls
 762. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html
 763. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#jensen-s-inequality
 764. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#maximum-likelihood-with-complete-information
 765. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#incomplete-information
 766. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#gaussian-mixture-models
 767. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#using-em
 768. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#vectorized-version
 769. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#vectorization-with-einstein-summation-notation
 770. https://people.duke.edu/~ccc14/sta-663/emalgorithm.html#comparison-of-em-routines
 771. https://people.duke.edu/~ccc14/sta-663/montecarlo.html
 772. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#pseudorandom-number-generators-prng
 773. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#monte-carlo-swindles-variance-reduction-techniques
 774. https://people.duke.edu/~ccc14/sta-663/montecarlo.html#quasi-random-numbers
 775. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html
 776. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#resampling
 777. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#simulations
 778. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#setting-the-random-seed
 779. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#sampling-with-and-without-replacement
 780. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#calculation-of-cook-s-distance
 781. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#permutation-resampling
 782. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#design-of-simulation-experiments
 783. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#example-simulations-to-estimate-power
 784. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#check-with-r
 785. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#estimating-the-cdf
 786. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#estimating-the-pdf
 787. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#kernel-density-estimation
 788. https://people.duke.edu/~ccc14/sta-663/resamplingandmontecarlosimulations.html#multivariate-kerndel-density-estimation
 789. https://people.duke.edu/~ccc14/sta-663/mcmc.html
 790. https://people.duke.edu/~ccc14/sta-663/mcmc.html#bayesian-data-analysis
 791. https://people.duke.edu/~ccc14/sta-663/mcmc.html#metropolis-hastings-sampler
 792. https://people.duke.edu/~ccc14/sta-663/mcmc.html#gibbs-sampler
 793. https://people.duke.edu/~ccc14/sta-663/mcmc.html#slice-sampler
 794. https://people.duke.edu/~ccc14/sta-663/mcmc.html#hierarchical-models
 795. https://people.duke.edu/~ccc14/sta-663/pymc2.html
 796. https://people.duke.edu/~ccc14/sta-663/pymc2.html#coin-toss
 797. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-mean-and-standard-deviation-of-normal-distribution
 798. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-parameters-of-a-linear-regreession-model
 799. https://people.duke.edu/~ccc14/sta-663/pymc2.html#estimating-parameters-of-a-logistic-model
 800. https://people.duke.edu/~ccc14/sta-663/pymc2.html#using-a-hierarchcical-model
 801. https://people.duke.edu/~ccc14/sta-663/pymc3.html
 802. https://people.duke.edu/~ccc14/sta-663/pymc3.html#coin-toss
 803. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-mean-and-standard-deviation-of-normal-distribution
 804. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-parameters-of-a-linear-regreession-model
 805. https://people.duke.edu/~ccc14/sta-663/pymc3.html#estimating-parameters-of-a-logistic-model
 806. https://people.duke.edu/~ccc14/sta-663/pymc3.html#using-a-hierarchcical-model
 807. https://people.duke.edu/~ccc14/sta-663/pystan.html
 808. https://people.duke.edu/~ccc14/sta-663/pystan.html#references
 809. https://people.duke.edu/~ccc14/sta-663/pystan.html#simple-logistic-model
 810. https://people.duke.edu/~ccc14/sta-663/animation.html
 811. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html
 812. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#hello-world
 813. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#a-tutorial-example-coding-a-fibonacci-function-in-c
 814. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#types-in-c
 815. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#operators
 816. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#control-of-program-flow
 817. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#arrays-and-pointers
 818. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#functions
 819. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#function-pointers
 820. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#using-make-to-compile-c-programs
 821. https://people.duke.edu/~ccc14/sta-663/crashcourseinc.html#exercise
 822. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html
 823. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#profiling
 824. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#using-better-algorihtms-and-data-structures
 825. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#i-o-bound-problems
 826. https://people.duke.edu/~ccc14/sta-663/makingcodefast.html#problem-set-for-optimization
 827. https://people.duke.edu/~ccc14/sta-663/fromctopython.html
 828. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#example-the-fibonacci-sequence
 829. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-clang-and-bitey
 830. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-gcc-and-ctypes
 831. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#using-cython
 832. https://people.duke.edu/~ccc14/sta-663/fromctopython.html#benchmark
 833. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html
 834. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#c
 835. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#id1
 836. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#fortran
 837. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#benchmarking
 838. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#wrapping-a-function-from-a-c-library-for-use-in-python
 839. https://people.duke.edu/~ccc14/sta-663/fromcompiledtopython.html#wrapping-functions-from-c-library-for-use-in-pyton
 840. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html
 841. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#defining-a-function-in-julia
 842. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#using-it-in-python
 843. https://people.duke.edu/~ccc14/sta-663/fromjuliatopython.html#using-python-libraries-in-julia
 844. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html
 845. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-fibonacci
 846. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-matrix-multiplication
 847. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#example-pairwise-distance-matrix
 848. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#profiling-code
 849. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#numba
 850. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#cython
 851. https://people.duke.edu/~ccc14/sta-663/frompythontoc.html#comparison-with-optimized-c-from-scipy
 852. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html
 853. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#python-version
 854. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numpy-version
 855. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numexpr-version
 856. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numba-version
 857. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#numbapro-version
 858. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#parakeet-version
 859. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#cython-version
 860. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#c-version
 861. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#id1
 862. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#fortran-version
 863. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#bake-off
 864. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#summary
 865. https://people.duke.edu/~ccc14/sta-663/optimization_bakeoff.html#recommendations-for-optimizing-python-code
 866. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html
 867. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#concepts
 868. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#embarassingly-parallel-programs
 869. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#using-multiprocessing
 870. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#using-ipython-parallel-for-interactive-parallel-computing
 871. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#other-parallel-programming-approaches-not-covered
 872. https://people.duke.edu/~ccc14/sta-663/writingparallelcode.html#references
 873. https://people.duke.edu/~ccc14/sta-663/cudapython.html
 874. https://people.duke.edu/~ccc14/sta-663/cudapython.html#programming-gpus
 875. https://people.duke.edu/~ccc14/sta-663/cudapython.html#gpu-architecture
 876. https://people.duke.edu/~ccc14/sta-663/cudapython.html#cuda-python
 877. https://people.duke.edu/~ccc14/sta-663/cudapython.html#getting-started-with-cuda
 878. https://people.duke.edu/~ccc14/sta-663/cudapython.html#vector-addition-the-hello-world-of-cuda
 879. https://people.duke.edu/~ccc14/sta-663/cudapython.html#performing-a-reduction-on-cuda
 880. https://people.duke.edu/~ccc14/sta-663/cudapython.html#recreational
 881. https://people.duke.edu/~ccc14/sta-663/cudapython.html#more-examples
 882. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html
 883. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html#review-of-gpu-architechture-a-simplification
 884. https://people.duke.edu/~ccc14/sta-663/gpusandcudac.html#cuda-c-program-an-outline
 885. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html
 886. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#why-and-when-does-distributed-computing-matter
 887. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#ingredients-for-effiicient-distributed-computing
 888. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#what-is-hadoop
 889. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#review-of-functional-programming
 890. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#the-hadoop-mapreduce-workflow
 891. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#using-hadoop-mapreduce
 892. https://people.duke.edu/~ccc14/sta-663/distributedcomputing.html#spark
 893. https://people.duke.edu/~ccc14/sta-663/mapreduce.html
 894. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#mapreduce-code
 895. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#configuration-file
 896. https://people.duke.edu/~ccc14/sta-663/mapreduce.html#launching-job
 897. https://people.duke.edu/~ccc14/sta-663/spark.html
 898. https://people.duke.edu/~ccc14/sta-663/spark.html#using-spark-in-standalone-prograsm
 899. https://people.duke.edu/~ccc14/sta-663/spark.html#introduction-to-spark-concepts-with-a-data-manipulation-example
 900. https://people.duke.edu/~ccc14/sta-663/spark.html#using-the-mllib-for-regression
 901. https://people.duke.edu/~ccc14/sta-663/spark.html#references
 902. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html
 903. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html#modules
 904. https://people.duke.edu/~ccc14/sta-663/modulesandpackaging.html#distributing-your-package
 905. https://people.duke.edu/~ccc14/sta-663/jupyter.html
 906. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-jupyter
 907. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-other-kernels
 908. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-extensions
 909. https://people.duke.edu/~ccc14/sta-663/jupyter.html#installing-python3-while-keeping-python2
 910. https://people.duke.edu/~ccc14/sta-663/jupyter.html#now-restart-your-notebook-server
 911. https://people.duke.edu/~ccc14/sta-663/multikernel.html
 912. https://people.duke.edu/~ccc14/sta-663/multikernel.html#python-2
 913. https://people.duke.edu/~ccc14/sta-663/multikernel.html#python-3
 914. https://people.duke.edu/~ccc14/sta-663/multikernel.html#bash
 915. https://people.duke.edu/~ccc14/sta-663/multikernel.html#r
 916. https://people.duke.edu/~ccc14/sta-663/multikernel.html#scala
 917. https://people.duke.edu/~ccc14/sta-663/multikernel.html#julia
 918. https://people.duke.edu/~ccc14/sta-663/multikernel.html#processing
 919. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html
 920. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#statistical-foundations
 921. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#computing-foundations
 922. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#mathematical-foundations
 923. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#statistical-algorithms
 924. https://people.duke.edu/~ccc14/sta-663/reveiwandtrends.html#libraries-worth-knowing-about-after-numpy-scipy-and-matplotlib
 925. https://people.duke.edu/~ccc14/sta-663/wrappingrlibraries.html
 926. https://people.duke.edu/~ccc14/sta-663/#indices-and-tables
 927. https://people.duke.edu/~ccc14/sta-663/genindex.html
 928. https://people.duke.edu/~ccc14/sta-663/py-modindex.html
 929. https://people.duke.edu/~ccc14/sta-663/search.html
 930. https://people.duke.edu/~ccc14/sta-663/
 931. http://sphinx.pocoo.org/
