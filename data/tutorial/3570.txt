   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]a year of artificial intelligence
     * [9]algorithms
     * [10]today i learned
     * [11]case studies
     * [12]philosophical
     * [13]meta
     __________________________________________________________________

lenny #1: robots + id23

   [14]go to the profile of lenny khazan
   [15]lenny khazan (button) blockedunblock (button) followfollowing
   feb 16, 2016

   this is my first post for [16]a year of ai, a project that [17]rohan
   kapur and [18]i will be undertaking over the next year to learn more
   about the fields of machine learning and artificial intelligence. for
   the first few months i   ll be focusing on the field of [19]reinforcement
   learning, and i   ll be writing periodically about my progress and
   projects as i go. if you come across anything interesting
   (id23-related or otherwise), [20]send it my way and
   i   ll be happy to check it out.
     __________________________________________________________________

a quick id23 primer

   before we dive in, let   s get a brief overview of what reinforcement
   learning is all about. the fundamental goal of a id23
   algorithm is to train some agent (let   s take the example of an ai for
   some board game) to make the best possible long-term decisions; in this
   case, what moves do i make that will ultimately result in a victory,
   even if that means some short-term sacrifices. every time the agent
   takes some action, the environment takes it and gives back a new state.
   so after i make a move, the environment will tell me what the board
   looks like the next time it   s my turn. the agent then picks the next
   move, and the cycle repeats until the end of the episode (when one of
   the players wins). the policy that it follows determines what moves it
   will make in any given state.

   the ultimate goal is to learn an optimal policy capable of picking the
   move that is most likely to end in a victory for itself. there   s one
   more important concept that we left out, and that   s the idea of a
   reward. every time the agent takes some action and the environment
   generates a new state, it also has the option of giving the agent some
   positive or negative feedback         in this case, maybe a positive reward
   if i win and a negative one if i lose. with this, we can give a more
   formal definition for the objective of an rl algorithm: we want to
   train a policy such that it makes decisions that maximize the total
   expected reward. in other words, teach it to take the action that will
   eventually result in the greatest gain.

   i   ll also briefly mention the concept of a value function v(s). the
   value function answers this simple question:    given my current state,
   if i follow some given policy, how much reward am i expected to
   receive?    similarly, the action-value function q(s, a) answers the
   question    given my current state, if i take the given action and follow
   some given policy from then on, how much reward am i expected to
   receive?    if you   re looking for a more intuitive interpretation, you
   can think of these functions as merely a representation of how    good   
   it is to be in a particular state (or to take a particular action in a
   particular state). we won   t talk about how we actually get these
   functions just yet, but for now it   s okay to think about it as a black
   box function that magically gives you the right values.

   id23 has been around for a while, and is behind
   several of machine learning   s success stories over the years. back in
   1992, [21]td-gammon learned to play backgammon at nearly the level of
   top human players using rl techniques. more recently, the combination
   of [22]id169, [23]convolutional neural networks, and
   id23 achieved [24]unprecedented performance in the
   game of [25]go. the [26]same team also developed a single algorithm
   capable of [27]learning to play dozens of atari games, a major
   breakthrough in the development of    universal    algorithms that can be
   applied to a number of different challenges.
     __________________________________________________________________

the project

   i learn best with practical applications. so for the next few months,
   i   ll be working on [28]plato, a rl-based robot to compete in
   [29]robocode.

   i don   t really know what to expect going into this. i   ll do my best to
   try out different algorithms and ideas, and document my process right
   here as i go. as far as i can tell, nobody   s made a single-policy
   rl-based robocode robot, and there   s probably a pretty good reason for
   it, but i   ll take the naive approach and see what happens.

   one of the major obstacles to overcome is the constraints that robocode
   places on the robots themselves, which make in-process training
   practically impossible. to overcome this, all of the learning itself
   will take place out-of-process in a separate python server. data from
   the game will be sent out to perform all the training. every few games,
   the robot downloads the latest weights and keeps going. this has the
   added bonus that training doesn   t even need to take place on my
   computer         if i ever need to, i can set up a gpu machine on ec2 and
   train on there with no modification.

   there   s a lot to do and a lot to explore, so i   ll be posting periodic
   updates on medium as well as on [30]twitter if you want to keep up.
   i   ll also be publishing my code as i go, so look out for a link in the
   next post.
     __________________________________________________________________

other resources

   i wanted to wrap this up with a quick overview of some of the online
   classes that i   ve found to be very useful in getting started with
   id23 and machine learning in general.

   university college london   s [31]id23. this is the
   course that introduced me to id23, taught by david
   silver (who   s also at deepmind, working on [32]deep reinforcement
   learning and [33]alphago). it   s a great class that covers everything
   from the basics up, and you can work at your own pace. if you want
   something more than my hand-wavy explanation above, this is the place
   to start.

   princeton   s [34]algorithms i & [35]ii. my knowledge of cs topics is
   embarrassingly shallow, so this is my attempt to fix that. it   s a
   decent amount of work if you want to keep up with assignments and
   everything, but well worth it in my opinion.

   stanford   s [36]convolutional neural networks for visual recognition.
   great course on id98s taught by [37]andrej karpathy and [38]justin
   johnson         easy to understand, and you can follow at your own pace. if
   you have the opportunity, definitely give the assignments a shot         they
   provide much needed hands-on experience.

   stanford   s [39]machine learning. provides a decent survey of machine
   learning topics in general. workload is somewhat substantial, but you
   can work through it at your own pace.

     * [40]machine learning
     * [41]id23
     * [42]algorithms

   (button)
   (button)
   (button) 24 claps
   (button) (button) (button) (button)

     (button) blockedunblock (button) followfollowing
   [43]go to the profile of lenny khazan

[44]lenny khazan

   tinkering with machine learning. [45]http://getcontra.com/

     (button) follow
   [46]a year of artificial intelligence

[47]a year of artificial intelligence

   our ongoing effort to make the mathematics, science, linguistics, and
   philosophy of artificial intelligence fun and simple.

     * (button)
       (button) 24
     * (button)
     *
     *

   [48]a year of artificial intelligence
   never miss a story from a year of artificial intelligence, when you
   sign up for medium. [49]learn more
   never miss a story from a year of artificial intelligence
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://ayearofai.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/ae6e69ff4cf0
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://ayearofai.com/lenny-1-robots-reinforcement-learning-ae6e69ff4cf0&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://ayearofai.com/lenny-1-robots-reinforcement-learning-ae6e69ff4cf0&source=--------------------------nav_reg&operation=register
   8. https://ayearofai.com/?source=logo-lo_8etsvnv7knvy---bb87da25612c
   9. https://ayearofai.com/tagged/algorithms
  10. https://ayearofai.com/tagged/today-i-learned
  11. https://ayearofai.com/tagged/case-studies
  12. https://ayearofai.com/tagged/philosophical
  13. https://ayearofai.com/tagged/meta
  14. https://ayearofai.com/@lennykhazan?source=post_header_lockup
  15. https://ayearofai.com/@lennykhazan
  16. http://medium.com/a-year-of-artificial-intelligence
  17. https://medium.com/@mckapur
  18. https://medium.com/@lennykhazan
  19. https://en.wikipedia.org/wiki/reinforcement_learning
  20. mailto:lenny.khazan@gmail.com
  21. https://en.wikipedia.org/wiki/td-gammon
  22. https://en.wikipedia.org/wiki/monte_carlo_tree_search
  23. https://en.wikipedia.org/wiki/convolutional_neural_network
  24. https://en.wikipedia.org/wiki/alphago
  25. https://en.wikipedia.org/wiki/go_(game)
  26. http://deepmind.com/
  27. https://www.cs.toronto.edu/~vmnih/docs/id25.pdf
  28. https://github.com/lk/plato
  29. http://robocode.sourceforge.net/
  30. https://twitter.com/lennykhazan
  31. https://www.youtube.com/playlist?list=pl5x3mdkkajrl42i_jhe4n-p6e2ol62ofa
  32. http://deepmind.com/id25.html
  33. http://deepmind.com/alpha-go.html
  34. https://www.coursera.org/course/algs4parti
  35. https://www.coursera.org/course/algs4partii
  36. http://cs231n.stanford.edu/index.html
  37. http://cs.stanford.edu/people/karpathy/
  38. http://cs.stanford.edu/people/jcjohns/
  39. https://www.coursera.org/learn/machine-learning
  40. https://ayearofai.com/tagged/machine-learning?source=post
  41. https://ayearofai.com/tagged/reinforcement-learning?source=post
  42. https://ayearofai.com/tagged/algorithms?source=post
  43. https://ayearofai.com/@lennykhazan?source=footer_card
  44. https://ayearofai.com/@lennykhazan
  45. http://getcontra.com/
  46. https://ayearofai.com/?source=footer_card
  47. https://ayearofai.com/?source=footer_card
  48. https://ayearofai.com/
  49. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  51. https://medium.com/p/ae6e69ff4cf0/share/twitter
  52. https://medium.com/p/ae6e69ff4cf0/share/facebook
  53. https://medium.com/p/ae6e69ff4cf0/share/twitter
  54. https://medium.com/p/ae6e69ff4cf0/share/facebook
