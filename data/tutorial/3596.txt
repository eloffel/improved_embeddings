   #[1]github [2]recent commits to text-to-image:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]81
     * [35]star [36]1,823
     * [37]fork [38]324

[39]paarthneekhara/[40]text-to-image

   [41]code [42]issues 38 [43]pull requests 2 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   text to image synthesis using thought vectors
   [47]deep-learning [48]tensorflow [49]generative-adversarial-network
   [50]skip-thought-vectors
     * [51]41 commits
     * [52]1 branch
     * [53]0 releases
     * [54]fetching contributors
     * [55]mit

    1. [56]python 100.0%

   (button) python
   branch: master (button) new pull request
   [57]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/p
   [58]download zip

downloading...

   want to be notified of new releases in paarthneekhara/text-to-image?
   [59]sign in [60]sign up

launching github desktop...

   if nothing happens, [61]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [63]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [64]download the github extension for visual studio
   and try again.

   (button) go back
   [65]@paarthneekhara
   [66]paarthneekhara [67]merge pull request [68]#33 [69]from
   abhisheknarayanan/master (button)    
added codes in python 3

   latest commit [70]b5475c1 jan 30, 2018
   [71]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [72]data [73]included data dir aug 24, 2016
   [74]python 3 codes [75]added codes in python 3 oct 11, 2017
   [76]utils [77]image sampler, bug fixes aug 24, 2016
   [78].gitignore
   [79]license
   [80]readme.md
   [81]data_loader.py
   [82]download_datasets.py
   [83]generate_images.py
   [84]generate_thought_vectors.py [85]fixed file not found bug sep 6,
   2016
   [86]model.py
   [87]requirements.txt
   [88]skipthoughts.py
   [89]train.py

readme.md

text to image synthesis using thought vectors

   [90]join the chat at https://gitter.im/text-to-image/lobby

   this is an experimental tensorflow implementation of synthesizing
   images from captions using [91]skip thought vectors. the images are
   synthesized using the gan-cls algorithm from the paper [92]generative
   adversarial text-to-image synthesis. this implementation is built on
   top of the excellent [93]dcgan in tensorflow. the following is the
   model architecture. the blue bars represent the skip thought vectors
   for the captions.

   [94]model architecture

   image source : [95]generative adversarial text-to-image synthesis paper

requirements

     * python 2.7.6
     * [96]tensorflow
     * [97]h5py
     * [98]theano : for skip thought vectors
     * [99]scikit-learn : for skip thought vectors
     * [100]nltk : for skip thought vectors

datasets

     * all the steps below for downloading the datasets and models can be
       performed automatically by running python download_datasets.py.
       several gigabytes of files will be downloaded and extracted.
     * the model is currently trained on the [101]flowers dataset.
       download the images from [102]this link and save them in
       data/flowers/jpg. also download the captions from [103]this link.
       extract the archive, copy the text_c10 folder and paste it in
       data/flowers.
     * download the pretrained models and vocabulary for skip thought
       vectors as per the instructions given [104]here. save the
       downloaded files in data/skipthoughts.
     * make empty directories in data, data/samples, data/val_samples and
       data/models. they will be used for sampling the generated images
       and saving the trained models.

usage

     * data processing : extract the skip thought vectors for the flowers
       data set using :

python data_loader.py --data_set="flowers"

     * training
          + basic usage python train.py --data_set="flowers"
          + options
               o z_dim: noise dimension. default is 100.
               o t_dim: text feature dimension. default is 256.
               o batch_size: batch size. default is 64.
               o image_size: image dimension. default is 64.
               o gf_dim: number of conv in the first layer generator.
                 default is 64.
               o df_dim: number of conv in the first layer discriminator.
                 default is 64.
               o gfc_dim: dimension of gen untis for for fully connected
                 layer. default is 1024.
               o caption_vector_length: length of the caption vector.
                 default is 1024.
               o data_dir: data directory. default is data/.
               o learning_rate: learning rate. default is 0.0002.
               o beta1: momentum for adam update. default is 0.5.
               o epochs: max number of epochs. default is 600.
               o resume_model: resume training from a pretrained model
                 path.
               o data_set: data set to train on. default is flowers.
     * generating images from captions
          + write the captions in text file, and save it as
            data/sample_captions.txt. generate the skip thought vectors
            for these captions using:
python generate_thought_vectors.py --caption_file="data/sample_captions.txt"

          + generate the images for the thought vectors using:
python generate_images.py --model_path=<path to the trained model> --n_images=8

       n_images specifies the number of images to be generated per
       caption. the generated images will be saved in data/val_samples/.
       python generate_images.py --help for more options.

sample images generated

   following are the images generated by the generative model from the
   captions.
   caption generated images
   the flower shown has yellow anther red pistil and bright red petals
   this flower has petals that are yellow, white and purple and has dark
   lines
   the petals on this flower are white with a yellow center
   this flower has a lot of small round pink petals.
   this flower is orange in color, and has petals that are ruffled and
   rounded.
   the flower has yellow petals and the center of it is brown

implementation details

     * only the uni-skip vectors from the skip thought vectors are used. i
       have not tried training the model with combine-skip vectors.
     * the model was trained for around 200 epochs on a gpu. this took
       roughly 2-3 days.
     * the images generated are 64 x 64 in dimension.
     * while processing the batches before training, the images are
       flipped horizontally with a id203 of 0.5.
     * the train-val split is 0.75.

pre-trained models

     * download the pretrained model from [105]here and save it in
       data/models. use this path for generating the images.

todo

     * train the model on the ms-coco data set, and generate more generic
       images.
     * try different embedding options for captions(other than skip
       thought vectors). also try to train the caption embedding id56 along
       with the gan-cls model.

references

     * [106]generative adversarial text-to-image synthesis paper
     * [107]generative adversarial text-to-image synthesis code
     * [108]skip thought vectors paper
     * [109]skip thought vectors code
     * [110]dcgan in tensorflow
     * [111]dcgan in tensorlayer

alternate implementations

     * [112]text to image in torch by scot reed
     * [113]text to image in tensorlayer by dong hao

license

   mit

     *    2019 github, inc.
     * [114]terms
     * [115]privacy
     * [116]security
     * [117]status
     * [118]help

     * [119]contact github
     * [120]pricing
     * [121]api
     * [122]training
     * [123]blog
     * [124]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [125]reload to refresh your
   session. you signed out in another tab or window. [126]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/paarthneekhara/text-to-image/commits/master.atom
   3. https://github.com/paarthneekhara/text-to-image#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/paarthneekhara/text-to-image
  32. https://github.com/join
  33. https://github.com/login?return_to=/paarthneekhara/text-to-image
  34. https://github.com/paarthneekhara/text-to-image/watchers
  35. https://github.com/login?return_to=/paarthneekhara/text-to-image
  36. https://github.com/paarthneekhara/text-to-image/stargazers
  37. https://github.com/login?return_to=/paarthneekhara/text-to-image
  38. https://github.com/paarthneekhara/text-to-image/network/members
  39. https://github.com/paarthneekhara
  40. https://github.com/paarthneekhara/text-to-image
  41. https://github.com/paarthneekhara/text-to-image
  42. https://github.com/paarthneekhara/text-to-image/issues
  43. https://github.com/paarthneekhara/text-to-image/pulls
  44. https://github.com/paarthneekhara/text-to-image/projects
  45. https://github.com/paarthneekhara/text-to-image/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/deep-learning
  48. https://github.com/topics/tensorflow
  49. https://github.com/topics/generative-adversarial-network
  50. https://github.com/topics/skip-thought-vectors
  51. https://github.com/paarthneekhara/text-to-image/commits/master
  52. https://github.com/paarthneekhara/text-to-image/branches
  53. https://github.com/paarthneekhara/text-to-image/releases
  54. https://github.com/paarthneekhara/text-to-image/graphs/contributors
  55. https://github.com/paarthneekhara/text-to-image/blob/master/license
  56. https://github.com/paarthneekhara/text-to-image/search?l=python
  57. https://github.com/paarthneekhara/text-to-image/find/master
  58. https://github.com/paarthneekhara/text-to-image/archive/master.zip
  59. https://github.com/login?return_to=https://github.com/paarthneekhara/text-to-image
  60. https://github.com/join?return_to=/paarthneekhara/text-to-image
  61. https://desktop.github.com/
  62. https://desktop.github.com/
  63. https://developer.apple.com/xcode/
  64. https://visualstudio.github.com/
  65. https://github.com/paarthneekhara
  66. https://github.com/paarthneekhara/text-to-image/commits?author=paarthneekhara
  67. https://github.com/paarthneekhara/text-to-image/commit/b5475c140ecb254096c493850ae09c1bc9da8f7a
  68. https://github.com/paarthneekhara/text-to-image/pull/33
  69. https://github.com/paarthneekhara/text-to-image/commit/b5475c140ecb254096c493850ae09c1bc9da8f7a
  70. https://github.com/paarthneekhara/text-to-image/commit/b5475c140ecb254096c493850ae09c1bc9da8f7a
  71. https://github.com/paarthneekhara/text-to-image/tree/b5475c140ecb254096c493850ae09c1bc9da8f7a
  72. https://github.com/paarthneekhara/text-to-image/tree/master/data
  73. https://github.com/paarthneekhara/text-to-image/commit/afe8f9b7a1ddba1f525384c641169b09daa5ab2f
  74. https://github.com/paarthneekhara/text-to-image/tree/master/python 3 codes
  75. https://github.com/paarthneekhara/text-to-image/commit/6a76a3390634f23ba3d7672bb390d4e5bfc9750d
  76. https://github.com/paarthneekhara/text-to-image/tree/master/utils
  77. https://github.com/paarthneekhara/text-to-image/commit/50b9d6f4ca40c15a9e301507b56414094cd19ce8
  78. https://github.com/paarthneekhara/text-to-image/blob/master/.gitignore
  79. https://github.com/paarthneekhara/text-to-image/blob/master/license
  80. https://github.com/paarthneekhara/text-to-image/blob/master/readme.md
  81. https://github.com/paarthneekhara/text-to-image/blob/master/data_loader.py
  82. https://github.com/paarthneekhara/text-to-image/blob/master/download_datasets.py
  83. https://github.com/paarthneekhara/text-to-image/blob/master/generate_images.py
  84. https://github.com/paarthneekhara/text-to-image/blob/master/generate_thought_vectors.py
  85. https://github.com/paarthneekhara/text-to-image/commit/5d805d41fef2d30aa6075444ff4fd9c378cfbc7d
  86. https://github.com/paarthneekhara/text-to-image/blob/master/model.py
  87. https://github.com/paarthneekhara/text-to-image/blob/master/requirements.txt
  88. https://github.com/paarthneekhara/text-to-image/blob/master/skipthoughts.py
  89. https://github.com/paarthneekhara/text-to-image/blob/master/train.py
  90. https://gitter.im/text-to-image/lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
  91. http://arxiv.org/abs/1506.06726
  92. http://arxiv.org/abs/1605.05396
  93. https://github.com/carpedm20/dcgan-tensorflow
  94. https://camo.githubusercontent.com/1925e23b5b6e19efa60f45daa3787f1f4a098ef3/687474703a2f2f692e696d6775722e636f6d2f644e6c32486b5a2e6a7067
  95. http://arxiv.org/abs/1605.05396
  96. https://github.com/tensorflow/tensorflow
  97. http://www.h5py.org/
  98. https://github.com/theano/theano
  99. http://scikit-learn.org/stable/index.html
 100. http://www.nltk.org/
 101. http://www.robots.ox.ac.uk/~vgg/data/flowers/102/
 102. http://www.robots.ox.ac.uk/~vgg/data/flowers/102/
 103. https://drive.google.com/file/d/0b0ywwgffwnllcms2wwjqrfnswxm/view
 104. https://github.com/ryankiros/skip-thoughts#getting-started
 105. https://bitbucket.org/paarth_neekhara/texttomimagemodel/raw/74a4bbaeee26fe31e148a54c4f495694680e2c31/latest_model_flowers_temp.ckpt
 106. http://arxiv.org/abs/1605.05396
 107. https://github.com/reedscot/icml2016
 108. http://arxiv.org/abs/1506.06726
 109. https://github.com/ryankiros/skip-thoughts
 110. https://github.com/carpedm20/dcgan-tensorflow
 111. https://github.com/zsdonghao/dcgan
 112. https://github.com/reedscot/icml2016
 113. https://github.com/zsdonghao/text-to-image
 114. https://github.com/site/terms
 115. https://github.com/site/privacy
 116. https://github.com/security
 117. https://githubstatus.com/
 118. https://help.github.com/
 119. https://github.com/contact
 120. https://github.com/pricing
 121. https://developer.github.com/
 122. https://training.github.com/
 123. https://github.blog/
 124. https://github.com/about
 125. https://github.com/paarthneekhara/text-to-image
 126. https://github.com/paarthneekhara/text-to-image

   hidden links:
 128. https://github.com/
 129. https://github.com/paarthneekhara/text-to-image
 130. https://github.com/paarthneekhara/text-to-image
 131. https://github.com/paarthneekhara/text-to-image
 132. https://help.github.com/articles/which-remote-url-should-i-use
 133. https://github.com/paarthneekhara/text-to-image#text-to-image-synthesis-using-thought-vectors
 134. https://github.com/paarthneekhara/text-to-image#requirements
 135. https://github.com/paarthneekhara/text-to-image#datasets
 136. https://github.com/paarthneekhara/text-to-image#usage
 137. https://github.com/paarthneekhara/text-to-image#sample-images-generated
 138. https://camo.githubusercontent.com/2d43c560226c68fb60d7b984fcea69259e501fe0/687474703a2f2f692e696d6775722e636f6d2f536b6e5a3353672e6a7067
 139. https://camo.githubusercontent.com/9fc7c2888023567070488350469d8d46cc6c4959/687474703a2f2f692e696d6775722e636f6d2f387a7376394e632e6a7067
 140. https://camo.githubusercontent.com/25fc4ef59a109f17e974ef10e821a628b5cc48d2/687474703a2f2f692e696d6775722e636f6d2f76767a763163452e6a7067
 141. https://camo.githubusercontent.com/7886e6bc84024061c8ecb791d6b007554e17543a/687474703a2f2f692e696d6775722e636f6d2f77307a4b3144432e6a7067
 142. https://camo.githubusercontent.com/7cc158670c4dc21051442e2b88a4caebf9eae1ae/687474703a2f2f692e696d6775722e636f6d2f566642625250312e6a7067
 143. https://camo.githubusercontent.com/0649744229b94851f583e40878bb3c7a4aafaf67/687474703a2f2f692e696d6775722e636f6d2f4941754f475a592e6a7067
 144. https://github.com/paarthneekhara/text-to-image#implementation-details
 145. https://github.com/paarthneekhara/text-to-image#pre-trained-models
 146. https://github.com/paarthneekhara/text-to-image#todo
 147. https://github.com/paarthneekhara/text-to-image#references
 148. https://github.com/paarthneekhara/text-to-image#alternate-implementations
 149. https://github.com/paarthneekhara/text-to-image#license
 150. https://github.com/
