the soar cognitive architecture

   ijcai 2016
     __________________________________________________________________

monday july 11th @ 1:45-3:30, 4:00-5:45 (beekman)

   this tutorial provides a whirlwind tour of soar, including its
   historical background and context within the cognitive architecture
   research community. the focus will be on how and why soar works,
   including syntax/structure for agents and soar-enabled applications, as
   well as hands-on experience with the new components that have been
   developed over the past few years: id23,
   semantic/episodic long-term memory, and mental imagery.

   [1]john e. laird

john e. laird ([2]laird@umich.edu)

   john e. laird is the john l. tishman professor of engineering at the
   university of michigan, where he has been since 1986. he received his
   ph.d. in computer science from carnegie mellon university in 1983
   working with allen newell. from 1984 to 1986, he was a member of
   research staff at xerox palo alto research center. he is one of the
   original developers of the soar architecture and leads its continued
   evolution, including the recent development and integration of
   id23, episodic memory, semantic memory, visual and
   spatial mental imagery, and appraisal-based emotion. he was a founder
   of soar technology, inc. and he is a fellow of aaai, aaas, acm, and the
   cognitive science society.

   [3]nate derbinsky

nate derbinsky ([4]derbinskyn@wit.edu)

   nate derbinsky is an assistant professor in the computer science and
   networking department at the wentworth institute of technology, where
   he has been since 2014. he received his ph.d. in computer science and
   engineering from the university of michigan in 2012 working with john
   laird. in 2012 he worked as a visiting research associate at the
   university of hartfordshire, where he researched applications of
   cognitive architecture for scalable human-robotic interaction studies.
   from 2012-2014 he was a postdoctoral associate at disney research,
   where he developed and evaluated optimization and machine-learning
   algorithms for a variety of domains, including multi-robotic systems.
   he is an active member of the soar research community and has helped
   develop scalable algorithms for many of the recent mechanisms of soar,
   including id23, episodic memory, semantic memory, and
   working memory activation/forgetting.
     __________________________________________________________________

rough schedule & slides

     1:45-1:50

welcome

   introductions, download software [5]1:50-2:05

overview

   cognitive architecture as an area of research, soar in context
   [6]2:05-2:50

soar basics

   working memory, rules, decision cycle, operators, preferences
   [7]2:50-3:10

id23 (rl)

   architectural integration, example agents [8]3:10-3:30

impasses/substates

   types & uses, results/resolution, example agents

     3:30-4:00

    coffee break

   [9]4:00-4:20

    chunking

   deliberation to reaction via explanation-based-learning (ebl),
   integration with rl [10]4:20-4:40

    semantic memory (smem)

   architectural integration, example agents [11]4:40-4:50

    episodic memory (epmem)

   architectural integration, example agents [12]4:50-5:00

    spatial visual system (svs)

   capabilities, architectural integration [13]5:00-5:10

    soar markup language (sml)

   overview, example environment

     5:10-5:30

    summing up

   rosie, resources

     5:30-5:45

    q&a
     __________________________________________________________________

tutorial software

   click the button to download all the software you'll need for this
   tutorial. once downloaded, unzip - ideally the path does not contain
   spaces and is short (e.g. c:\temp\tutorial or /home/user/tutorial).

   the only software dependency is [14]oracle java 8. the software should
   "just work" on windows, mac os, and ubuntu (>= 14). some
   platform-specific notes:

windows

     * to run: double-click debugger.bat or eater.bat
     * depending on existing applications, you may need to download and
       install the [15]visual c++ redistributable for visual studio 2015
     * spaces or very long paths may cause the software not to run

mac os

     * to run: open the terminal application, run
       path/to/tutorial/eater.sh or debugger.sh (you can also right-click,
       open with, other, select terminal from applications/utilities)

ubuntu linux

     * to run: open the terminal application, run
       path/to/tutorial/eater.sh or debugger.sh
     * to install the oracle jdk, execute the following commands in the
       terminal:
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

     __________________________________________________________________

id138 for semantic memory

   right-click the button and choose "save as" to download a file that
   adds the contents of id138 to soar's semantic memory.

   note: the file is quite large (>80mb), so this process may take several
   minutes on a slow connection.
     __________________________________________________________________

useful links

   [16]

soar home

   a source for news, publications, and downloads.
   [17]

the mit press: the soar cognitive architecture

   the definitive presentation of soar from theoretical and practical
   perspectives, providing comprehensive descriptions of fundamental
   aspects and new components.

references

   visible links
   1. http://ai.eecs.umich.edu/people/laird
   2. mailto:laird@umich.edu
   3. http://derbinsky.info/
   4. mailto:derbinskyn@wit.edu
   5. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-intro.pdf
   6. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-basic.pdf
   7. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-rl.pdf
   8. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-substates.pdf
   9. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-chunking.pdf
  10. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-smem.pdf
  11. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-epmem.pdf
  12. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-svs.pdf
  13. http://web.eecs.umich.edu/~soar/ijcai16/tutorial-2016-sml.pdf
  14. http://www.oracle.com/technetwork/java/javase/downloads/index-jsp-138363.html
  15. https://www.microsoft.com/en-us/download/details.aspx?id=48145
  16. http://soar.eecs.umich.edu/
  17. https://mitpress.mit.edu/books/soar-cognitive-architecture

   hidden links:
  19. http://web.eecs.umich.edu/~soar/ijcai16/tutorial.zip
  20. http://web.eecs.umich.edu/~soar/ijcai16/wn.soar
