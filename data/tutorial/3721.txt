   #[1]python wiki: pythonforartificialintelligence [2]start [3]wiki
   markup [4]print view [5]search [6]index [7]glossary [8]help

   search: ____________________ titles text
   [9]python
     * [10]pythonforartificialintelligence

     * [11]pythonforar...ntelligence

     * [12]frontpage
     * [13]recentchanges
     * [14]findpage
     * [15]helpcontents
     * [16]pythonforar...ntelligence

page

     * immutable page
     * [17]comments
     * [18]info
     * [19]attachments
     * more actions: [raw text________________] do

user

     * [20]login

   this page attempts to collect information and links pertaining to the
   practice of ai and machine learning in python.

general ai

     * [21]aima - python implementation of algorithms from russell and
       norvig's 'artificial intelligence: a modern approach'
     * [22]pydatalog - logic programming engine in python
     * [23]simpleai - python implementation of many of the artificial
       intelligence algorithms described on the book "artificial
       intelligence, a modern approach". it focuses on providing an easy
       to use, well documented and tested library.
     * [24]easyai - simple python engine for two-players games with ai
       (negamax, transposition tables, game solving).

machine learning

     * [25]graphlab create - an end-to-end machine learning platform with
       a python front-end and c++ core. it allows you to do data
       engineering, build ml models, and deploy them. key design
       principles: out-of-core computation, fast and robust learning
       algorithms, easy-to-use python api, and fast deployment of
       arbitrary python objects.
     * [26]feature forge - a set of tools for creating and testing machine
       learning features, with a scikit-learn compatible api.
     * [27]orange - open source data visualization and analysis for novice
       and experts. data mining through visual programming or python
       scripting. components for machine learning. extensions for
       bioinformatics and id111. packed with features for data
       analytics.
     * [28]pybrain - [29]pybrain is a modular machine learning library for
       python. its goal is to offer flexible, easy-to-use yet still
       powerful algorithms for machine learning tasks and a variety of
       predefined environments to test and compare your algorithms.
     * [30]pyml - pyml is an interactive object oriented framework for
       machine learning written in python. pyml focuses on id166s and other
       kernel methods. it is supported on linux and mac os x.
     * [31]mlpy - mlpy makes extensive use of [32]numpy to provide fast
       n-dimensional array manipulation and easy integration of c code.
       the gnu scientific library ( gsl) is also required. it provides
       high level procedures that support, with few lines of code, the
       design of rich data analysis protocols (daps) for preprocessing,
       id91, predictive classification, regression and feature
       selection. methods are available for feature weighting and ranking,
       data resampling, error evaluation and experiment landscaping.
     * [33]milk - milk is a machine learning toolkit in python. its focus
       is on supervised classification with several classifiers available:
       id166s (based on libid166), id92, id79s, id90. it
       also performs feature selection. these classifiers can be combined
       in many ways to form different classification systems.
     * [34]scikit-learn - scikit-learn is a python module integrating
       classic machine learning algorithms in the tightly-knit world of
       scientific python packages (numpy, scipy, matplotlib). it aims to
       provide simple and efficient solutions to learning problems that
       are accessible to everybody and reusable in various contexts:
       machine-learning as a versatile tool for science and engineering.
     * [35]shogun - the machine learning toolbox's focus is on large scale
       kernel methods and especially on support vector machines (id166) . it
       provides a generic id166 object interfacing to several different id166
       implementations, among them the state of the art ocas, liblinear,
       libid166, id166light, id166lin and gpdt. each of the id166s can be combined
       with a variety of kernels. the toolbox not only provides efficient
       implementations of the most common kernels, like the linear,
       polynomial, gaussian and sigmoid kernel but also comes with a
       number of recent string kernels. shogun is implemented in c++ and
       interfaces to matlab(tm), r, octave and python and is proudly
       released as machine learning open source software
     * [36]mdp-toolkit - modular toolkit for data processing (mdp) is a
       python data processing framework. from the user   s perspective, mdp
       is a collection of supervised and unsupervised learning algorithms
       and other data processing units that can be combined into data
       processing sequences and more complex feed-forward network
       architectures. from the scientific developer   s perspective, mdp is
       a modular framework, which can easily be expanded. the
       implementation of new algorithms is easy and intuitive. the new
       implemented units are then automatically integrated with the rest
       of the library. the base of available algorithms is steadily
       increasing and includes signal processing methods (principal
       component analysis, independent component analysis, slow feature
       analysis), manifold learning methods ([hessian] locally linear
       embedding), several classifiers, probabilistic methods (factor
       analysis, rbm), data pre-processing methods, and many others.
     * [37]libid166 - libid166 is an integrated software for support vector
       classification, (c-svc, nu-svc), regression (epsilon-svr, nu-svr)
       and distribution estimation (one-class id166). it supports
       multi-class classification. a python interface is available by by
       default.
     * [38]weka - weka is a collection of machine learning algorithms for
       data mining tasks. the algorithms can either be applied directly to
       a dataset or called from your own java code. weka contains tools
       for data pre-processing, classification, regression, id91,
       association rules, and visualization. it is also well-suited for
       developing new machine learning schemes. see [39]here for a
       tutorial on using weka from jython.
     * [40]monte - monte (python) is a python framework for building
       gradient based learning machines, like neural networks, conditional
       random fields, id28, etc. monte contains modules
       (that hold parameters, a cost-function and a gradient-function) and
       trainers (that can adapt a module's parameters by minimizing its
       cost-function on training data).
     * [41]som - self-organizing maps is a form of machine learning
       technique which employs unsupervised learning. it means that you
       don't need to explicitly tell the som about what to learn in the
       input data. it automatically learns the patterns in input data and
       organizes the data into different groups.
     * [42]yalign - yalign is a friendly tool for extracting parallel
       sentences from comparable corpora..

natural language & text processing

     * [43]nltk - open source python modules, linguistic data and
       documentation for research and development in natural language
       processing and text analytics, with distributions for windows, mac
       osx and linux.
     * [44]gensim - gensim is a python framework designed to automatically
       extract semantic topics from documents, as naturally and painlessly
       as possible. gensim aims at processing raw, unstructured digital
       texts (   plain text   ). the unsupervised algorithms in gensim, such
       as latent semantic analysis, id44 or random
       projections, discover hidden (latent) semantic structure, based on
       word co-occurrence patterns within a corpus of training documents.
       once these statistical patterns are found, any plain text documents
       can be succinctly expressed in the new, semantic representation,
       and queried for topical similarity against other documents and so
       on.
     * [45]quepy - a python framework to transform natural language
       questions to queries in a database query language.

neural networks

     * [46]neurolab - neurolab is a simple and powerful neural network
       library for python. contains based neural networks, train
       algorithms and flexible framework to create and explore other
       networks. it has the following features: pure python + numpy; api
       like neural network toolbox (nnt) from matlab; interface to use
       train algorithms from scipy.optimize; flexible network
       configurations and learning algorithms; and a variety of supported
       types of id158 and learning algorithms.
     * [47]ffnet - ffnet is a fast and easy-to-use feed-forward neural
       network training solution for python. many nice features are
       implemented: arbitrary network connectivity, automatic data
       id172, very efficient (also parallel) training tools,
       network export to fortran code.
     * [48]fann - fast id158 library is a free open
       source neural network library, which implements multilayer
       id158s in c with support for both fully
       connected and sparsely connected networks. cross-platform execution
       in both fixed and floating point are supported. it includes a
       framework for easy handling of training data sets. it is easy to
       use, versatile, well documented, and fast. bindings to more than 15
       programming languages are available. an easy to read introduction
       article and a reference manual accompanies the library with
       examples and recommendations on how to use the library. several
       graphical user interfaces are also available for the library.
     * [49]bpnn.py - written by neil schemenauer, bpnn.py is used by an
       ibm [50]article entitled "an introduction to neural networks".
     * [51]pyann - a python framework to build id158s
     * [52]pyrenn - pyrenn is a recurrent neural network toolbox for
       python (and matlab). it is written in pure python and numpy and
       allows to create a wide range of (recurrent) neural network
       configurations for system identification. it is easy to use, well
       documented and comes with several examples.

   pythonforartificialintelligence (last edited 2016-01-21 16:58:05 by
   [53]dennisatabay)

     * [54]moinmoin powered
     * [55]python powered
     * [56]gpl licensed
     * [57]valid html 4.01

   [58]unable to edit the page? see the frontpage for instructions.

references

   visible links
   1. https://wiki.python.org/moin/pythonforartificialintelligence?diffs=1&show_att=1&action=rss_rc&unique=0&page=pythonforartificialintelligence&ddiffs=1
   2. https://wiki.python.org/moin/frontpage
   3. https://wiki.python.org/moin/pythonforartificialintelligence?action=raw
   4. https://wiki.python.org/moin/pythonforartificialintelligence?action=print
   5. https://wiki.python.org/moin/findpage
   6. https://wiki.python.org/moin/titleindex
   7. https://wiki.python.org/moin/wordindex
   8. https://wiki.python.org/moin/helponformatting
   9. http://www.python.org/
  10. https://wiki.python.org/moin/pythonforartificialintelligence
  11. https://wiki.python.org/moin/pythonforartificialintelligence
  12. https://wiki.python.org/moin/frontpage
  13. https://wiki.python.org/moin/recentchanges
  14. https://wiki.python.org/moin/findpage
  15. https://wiki.python.org/moin/helpcontents
  16. https://wiki.python.org/moin/pythonforartificialintelligence
  17. https://wiki.python.org/moin/pythonforartificialintelligence
  18. https://wiki.python.org/moin/pythonforartificialintelligence?action=info
  19. https://wiki.python.org/moin/pythonforartificialintelligence?action=attachfile
  20. https://wiki.python.org/moin/pythonforartificialintelligence?action=login
  21. http://code.google.com/p/aima-python/
  22. https://sites.google.com/site/pydatalog/
  23. http://github.com/simpleai-team/simpleai
  24. http://zulko.github.io/easyai
  25. https://dato.com/learn/userguide/
  26. https://github.com/machinalis/featureforge
  27. http://orange.biolab.si/
  28. http://pybrain.org/
  29. https://wiki.python.org/moin/pybrain
  30. http://pyml.sourceforge.net/
  31. https://mlpy.fbk.eu/
  32. https://wiki.python.org/moin/numpy
  33. http://packages.python.org/milk/
  34. http://scikit-learn.sourceforge.net/
  35. http://www.shogun-toolbox.org/
  36. http://mdp-toolkit.sourceforge.net/
  37. http://www.csie.ntu.edu.tw/~cjlin/libid166/
  38. http://www.cs.waikato.ac.nz/ml/weka/
  39. http://weka.wikispaces.com/using+weka+from+jython
  40. http://montepython.sourceforge.net/
  41. http://paraschopra.com/sourcecode/som/index.php
  42. https://github.com/machinalis/yalign
  43. http://www.nltk.org/
  44. http://radimrehurek.com/gensim
  45. https://github.com/machinalis/quepy
  46. http://code.google.com/p/neurolab/
  47. http://pypi.python.org/pypi/ffnet
  48. http://leenissen.dk/fann/wp/
  49. https://wiki.python.org/moin/arctrix.com/nas/python/bpnn.py
  50. http://www.ibm.com/developerworks/library/l-neural/
  51. http://pyann.sourceforge.net/
  52. https://github.com/yabata/pyrenn
  53. https://wiki.python.org/moin/dennisatabay
  54. http://moinmo.in/
  55. http://moinmo.in/python
  56. http://moinmo.in/gpl
  57. http://validator.w3.org/check?uri=referer
  58. https://wiki.python.org/moin/frontpage#use

   hidden links:
  60. https://wiki.python.org/moin/frontpage
