   #[1]github [2]recent commits to
   tensorflow-programs-and-tutorials:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]57
     * [35]star [36]903
     * [37]fork [38]284

[39]adeshpande3/[40]tensorflow-programs-and-tutorials

   [41]code [42]issues 1 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   implementations of id98s, id56s, gans, etc
   [47]tensorflow [48]deep-learning [49]machine-learning
     * [50]59 commits
     * [51]1 branch
     * [52]0 releases
     * [53]fetching contributors

    1. [54]jupyter notebook 100.0%

   (button) jupyter notebook
   branch: master (button) new pull request
   [55]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/a
   [56]download zip

downloading...

   want to be notified of new releases in
   adeshpande3/tensorflow-programs-and-tutorials?
   [57]sign in [58]sign up

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [60]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [61]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [62]download the github extension for visual studio
   and try again.

   (button) go back
   [63]@adeshpande3
   [64]adeshpande3 [65]better explanations for modeling polynomials
   latest commit [66]5d4a0f0 jun 12, 2018
   [67]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [68].ipynb_checkpoints
   [69]data
   [70].gitignore
   [71]id98s with noisy labels.ipynb
   [72]character level id56.ipynb
   [73]convolutional neural networks.ipynb
   [74]id3.ipynb
   [75]learning to model the xor function.ipynb
   [76]linear and id28.ipynb
   [77]math in tensorflow.ipynb
   [78]modeling polynomial functions with nns.ipynb
   [79]question pair classification with id56s.ipynb
   [80]readme.md
   [81]selu nonlinearity.ipynb
   [82]id31 with lstms.ipynb
   [83]simple neural networks.ipynb
   [84]universal approximation theorem.ipynb

readme.md

tensorflow programs and tutorials

   this repository will contain tensorflow tutorials on a lot of the most
   popular deep learning concepts. it'll also contain some experiments on
   cool papers that i read. hopefully, the notebooks will be helpful to
   anyone reading!
     * id98 with noisy labels - this notebook looks at a recent [85]paper
       that discusses how convolutional neural networks that are trained
       on random labels (with some id203) are still able to acheive
       good accuracy on mnist. i thought that the paper showed some
       eye-brow raising results, so i went ahead and tried it out for
       myself. it was pretty amazing to see that even when training a id98
       with random labels 50% of the time, and the correct labels the
       other 50% of the time, the network was still able to get a 90+%
       accuracy.
     * character level id56 (work in progress) - this notebook shows you
       how to train a character level id56 in tensorflow. the idea was
       inspired by andrej karpathy's famous [86]blog post and was based on
       this [87]keras implementation. in this notebook, you'll learn more
       about what the model is doing, and how you can input your own
       dataset, and train a model to generate similar looking text.
     * convolutional neural networks - this notebook goes through a simple
       convolutional neural network implementation in tensorflow. the
       model is very similar to the own described in the [88]tensorflow
       docs. hopefully this notebook can give you a better understanding
       of what is necessary to create and train your own id98s. for a more
       conceptual view of id98s, check out my introductory [89]blog post on
       them.
     * id3 - this notebook goes through the
       creation of a generative adversarial network. gans are one of the
       hottest topics in deep learning. from a high level, gans are
       composed of two components, a generator and a discriminator. the
       discriminator has the task of determining whether a given image
       looks natural (ie, is an image from the dataset) or looks like it
       has been artificially created. the task of the generator is to
       create natural looking images that are similar to the original data
       distribution, images that look natural enough to fool the
       discriminator network.for more of a conceptual view of gans, check
       out my [90]blog post.
     * linear and id28 - this notebook shows you how
       tensorflow is not just a deep learning library, but is a library
       centered on numerical computation, which allows you to create
       classic machine learning models relatively easily. linear
       regression and id28 are two of the most simple, yet
       useful models in all of machine learning.
     * simple neural networks - this notebook shows you how to create
       simple 1 and 2 layer neural networks. we'll then see how these
       networks perform on mnist, and look at the type of hyperparamters
       that affect a model's accuracy (network architecture, weight
       initialization, learning rate, etc)
     * math in tensorflow - this notebook introduces you to variables,
       constants, and placeholders in tensorflow. it'll go into describing
       sessions, and showinng you how to perform typical mathematical
       operations and deal with large matrices.
     * question pair classification with id56s (work in progress) - this
       notebook looks at the newly released question pair [91]dataset
       released by quora a little earlier this year. it looks at the ways
       in which you can build a machine learning model to predict whether
       two sentences are duplicates of one another. before running this
       notebook, it's very important to extract all the data. we'll run
       the following command to get our word vectors and training/testing
       matrices.
tar -xvzf data/quora/quoradata.tar.gz
     * selu nonlinearity - a recent [92]paper titled "self normalizing
       neural networks" started getting a lot of buzz starting in june
       2017. the main contribution of the paper was this new nonlinear
       activation function called a selu (scaled exponential linear unit).
       we'll be looking at how this function performs in practice with
       simple neural nets and id98s.
     * id31 with lstms - in this notebook, we'll be looking
       at how to apply deep learning techniques to the task of sentiment
       analysis. id31 can be thought of as the exercise of
       taking a sentence, paragraph, document, or any piece of natural
       language, and determining whether that text's emotional tone is
       positive, negative or neutral. we'll look at why id56s and lstms are
       the most popular choices for handling natural language processing
       tasks. be sure to run the following commands to get our word
       vectors and training data.
tar -xvzf data/sentiment/models.tar.gz
tar -xvzf data/sentiment/training_data.tar.gz
     * universal approximation theorem (work in progress) - the
       [93]universal approximation theorem states that any feed forward
       neural network with a single hidden layer can model any function.
       in this notebook, i'll go through a practical example of
       illustrating why this theorem works, and talk about what the
       implications are for when you're training your own neural networks.
       cough overfitting cough
     * learning to model the xor function (work in progress) - xor is one
       of the classic functions we see in machine learning theory
       textbooks. the significance is that we cannot fit a linear model to
       this function no matter how hard we try. in this notebook, you'll
       see proof of that, and you'll see how adding a simple hidden layer
       to the neural net can solve the problem.

     *    2019 github, inc.
     * [94]terms
     * [95]privacy
     * [96]security
     * [97]status
     * [98]help

     * [99]contact github
     * [100]pricing
     * [101]api
     * [102]training
     * [103]blog
     * [104]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [105]reload to refresh your
   session. you signed out in another tab or window. [106]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/commits/master.atom
   3. https://github.com/adeshpande3/tensorflow-programs-and-tutorials#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/adeshpande3/tensorflow-programs-and-tutorials
  32. https://github.com/join
  33. https://github.com/login?return_to=/adeshpande3/tensorflow-programs-and-tutorials
  34. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/watchers
  35. https://github.com/login?return_to=/adeshpande3/tensorflow-programs-and-tutorials
  36. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/stargazers
  37. https://github.com/login?return_to=/adeshpande3/tensorflow-programs-and-tutorials
  38. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/network/members
  39. https://github.com/adeshpande3
  40. https://github.com/adeshpande3/tensorflow-programs-and-tutorials
  41. https://github.com/adeshpande3/tensorflow-programs-and-tutorials
  42. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/issues
  43. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/pulls
  44. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/projects
  45. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/tensorflow
  48. https://github.com/topics/deep-learning
  49. https://github.com/topics/machine-learning
  50. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/commits/master
  51. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/branches
  52. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/releases
  53. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/graphs/contributors
  54. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/search?l=jupyter-notebook
  55. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/find/master
  56. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/archive/master.zip
  57. https://github.com/login?return_to=https://github.com/adeshpande3/tensorflow-programs-and-tutorials
  58. https://github.com/join?return_to=/adeshpande3/tensorflow-programs-and-tutorials
  59. https://desktop.github.com/
  60. https://desktop.github.com/
  61. https://developer.apple.com/xcode/
  62. https://visualstudio.github.com/
  63. https://github.com/adeshpande3
  64. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/commits?author=adeshpande3
  65. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/commit/5d4a0f0a6a7a0b76acf24483e3110f1e3b526ae7
  66. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/commit/5d4a0f0a6a7a0b76acf24483e3110f1e3b526ae7
  67. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/tree/5d4a0f0a6a7a0b76acf24483e3110f1e3b526ae7
  68. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/tree/master/.ipynb_checkpoints
  69. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/tree/master/data
  70. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/.gitignore
  71. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/id98s with noisy labels.ipynb
  72. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/character level id56.ipynb
  73. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/convolutional neural networks.ipynb
  74. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/id3.ipynb
  75. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/learning to model the xor function.ipynb
  76. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/linear and id28.ipynb
  77. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/math in tensorflow.ipynb
  78. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/modeling polynomial functions with nns.ipynb
  79. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/question pair classification with id56s.ipynb
  80. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/readme.md
  81. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/selu nonlinearity.ipynb
  82. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/id31 with lstms.ipynb
  83. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/simple neural networks.ipynb
  84. https://github.com/adeshpande3/tensorflow-programs-and-tutorials/blob/master/universal approximation theorem.ipynb
  85. https://arxiv.org/pdf/1703.08774.pdf
  86. http://karpathy.github.io/2015/05/21/id56-effectiveness/
  87. http://machinelearningmastery.com/text-generation-lstm-recurrent-neural-networks-python-keras/
  88. https://www.tensorflow.org/tutorials/deep_id98
  89. https://adeshpande3.github.io/adeshpande3.github.io/a-beginner's-guide-to-understanding-convolutional-neural-networks/
  90. https://adeshpande3.github.io/adeshpande3.github.io/deep-learning-research-review-week-1-generative-adversarial-nets
  91. https://data.quora.com/first-quora-dataset-release-question-pairs
  92. https://arxiv.org/pdf/1706.02515.pdf
  93. https://en.wikipedia.org/wiki/universal_approximation_theorem
  94. https://github.com/site/terms
  95. https://github.com/site/privacy
  96. https://github.com/security
  97. https://githubstatus.com/
  98. https://help.github.com/
  99. https://github.com/contact
 100. https://github.com/pricing
 101. https://developer.github.com/
 102. https://training.github.com/
 103. https://github.blog/
 104. https://github.com/about
 105. https://github.com/adeshpande3/tensorflow-programs-and-tutorials
 106. https://github.com/adeshpande3/tensorflow-programs-and-tutorials

   hidden links:
 108. https://github.com/
 109. https://github.com/adeshpande3/tensorflow-programs-and-tutorials
 110. https://github.com/adeshpande3/tensorflow-programs-and-tutorials
 111. https://github.com/adeshpande3/tensorflow-programs-and-tutorials
 112. https://help.github.com/articles/which-remote-url-should-i-use
 113. https://github.com/adeshpande3/tensorflow-programs-and-tutorials#tensorflow-programs-and-tutorials
 114. https://github.com/
