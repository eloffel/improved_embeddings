   #[1]github [2]recent commits to mindpark:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]14
     * [35]star [36]158
     * [37]fork [38]31

[39]danijar/[40]mindpark

   [41]code [42]issues 15 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   testbed for deep id23
   [47]reinforcement-learning [48]tensorflow [49]deep-learning
   [50]research [51]artificial-intelligence
     * [52]203 commits
     * [53]1 branch
     * [54]1 release
     * [55]fetching contributors
     * [56]gpl-3.0

    1. [57]python 100.0%

   (button) python
   branch: master (button) new pull request
   [58]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/d
   [59]download zip

downloading...

   want to be notified of new releases in danijar/mindpark?
   [60]sign in [61]sign up

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [64]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [65]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [66]permalink
   type      name      latest commit message commit time
        failed to load latest commit information.
        [67]definition
        [68]mindpark
        [69]test
        [70].gitignore
        [71]license.md
        [72]readme.md
        [73]setup.py

readme.md

mindpark

   testbed for deep id23 algorithms.

   [74]id25 playing breakout    [75]id25 playing doom health gathering
   [76]id25 trying to play doom deathmatch

introduction

   id23 is a fundamental problem in artificial
   intelligence. in this setting, an agent interacts with an environment
   in order to maximize a reward. for example, we show our bot pixel
   screens of a game and want it to choose actions that result in a high
   score.

   mindpark is an environment for prototyping, testing, and comparing
   algorithms that do id23. the library makes it easy to
   reuse part of behavior between algorithms, and monitor all kinds of
   metrics about your algorithms. it integrates well with tensorflow,
   theano, and other deep learning libraries, and with openai's gym
   environments.

   these are the algorithms that i implemented so far (feel free to
   contribute to this list):
   algorithm publication status
   deep q-network (id25) mnih et al. 2015 ([77]pdf) working consistently.
   double deep q-network (did25) hasselt, guez, silver. 2015 ([78]pdf)
   working consistently.
   asynchronous advantage actor-critic (a3c) mnih et al. 2016 ([79]pdf)
   partly working.
   reinforce williams 1992 ([80]pdf) currently being tested.

instructions

   to get started, clone the repository and install dependencies:
git clone git@github.com:danijar/mindpark.git && cd mindpark
sudo -h pip3 install .

   an experiment compares between algorithms, hyper parameters, and
   environments. to start an experiment, run (-o turns on python's
   optimizations):
python3 -o -m mindpark run definition/breakout.yaml

   videos and metrics are stored in a result directory, which is
   ~/experiment/mindpark/<timestamp>-breakout/ by default. you can plot
   statistics during or after the simulation by fuzzy matching an the
   folder name:
python3 -m mindpark stats breakout

statistics

   let's take a look at what the previous command creates.

   experiments consist of interleaved phases of training and evaluation.
   for example, an algorithm might use a lower exploration rate in favor
   of exploitation while being evaluated. therefore, we display the
   metrics in two rows:

   [81]id25 statistics on breakout

   this illustrates the metrics after a few episodes of training, as you
   can see on the horizontal axes. this small example is good for
   explanation. but if you want to take a look, here are the [82]metrics
   of a longer experiment.
   metric description
   score during the first 80 episodes of training (the time when i ran
   mindpark stats), the algorithm manages to get a score of 9, but usually
   get scores around 3 and 4. below is the score during evaluation. it's
   lower because the algorithm hasn't learned much yet and performs worse
   than the random exploration done during training.
   id25/cost the training cost of the neural network. it starts at episode
   10 which is when the training starts, before that, id25 builds up its
   replay memory. we don't train the neural network during evaluation, so
   that plot is empty.
   epsilion_greedy/values that's the q-values that the id25 behavior sends
   to epsilon_greedy to act greedily on. you can see that they evolve over
   time: action 4 seems to be quite good. but that's only for a short run,
   so we shouldn't conclude too much.
   epsilion_greedy/random a histogram whether the current action was
   chosen randomly or greedy wrt the predicted q-values. during training,
   epsilon is annealed, so you see a shift in the distribution. during
   testing, epsilon is always 0.05, so not many random actions there.

   the metric names are prefixed by the classes they come from. that's
   because algorithms are composed of reusable partial behaviors. see the
   [83]algorithms section for details.

definitions

   definitions are yaml files that contain all you need to run or
   reproduce an experiment:
epochs: 100
test_steps: 4e4
repeats: 5
envs:
  - pong-v0
  - breakout-v0
algorithms:
  -
    name: lstm-a3c (3 layers)
    type: a3c
    train_steps: 8e5
    config:
      network: lstm_three_layers
      initial_learning_rate: 2e-4
  -
    name: id25 (mnih et al. 2015)
    type: id25
    train_steps: 2e5
  -
    name: random
    type: random
    train_steps: 0

   each algorithm will be trained on each environment for the specified
   number of repeats. a simulation is divided into epochs that consist of
   a training and an evaluation phase.

algorithms

   to implement your own algorithm, subclass mindpark.core.algorithm.
   please refer to the existing algorithms for details, and ask if you
   have questions. algorithms are composed of partial behaviors that can
   do preprocessing, exploration, learning, and more. to create a reusable
   chunk of behavior, subclass mindpark.core.partial.

   there are quite a few existing behaviors that you can import from
   mindpark.step and reuse in your algorithms. for more details, please
   look at the according python files or open an issue. current behaviors
   include: actionmax, actionsample, clampreward, delta, epsilongreedy,
   experience, filter, grayscale, history, identity, maximum, normalize,
   random, randomstart, resize, score, skip, subsample.

dependencies

   mindpark is a python 3 package, and there are no plans to support
   python 2. please install gym_doom manually.
sudo apt-get install -y gtk2.0-dev libsdl2-dev libfluidsynth-dev libopenal-dev l
ibboost-all-dev
sudo -h python3 -c "import gym_pull; gym_pull.pull('github.com/ppaquette/gym-doo
m')"

   tensorflow is only needed for the existing algorithms. you are free to
   use your libraries of choice to implement your own algorithms.

contributions

   your pull request is very welcome. i will set up a contributors file in
   that case, and you can choose if and how you want to be listed.

   please follow the existing code style, and run unit tests and the
   integration test after changes:
python3 setup.py test
python3 -m mindpark run definition/test.yaml -x

contact

   feel free to reach out at [84]mail@danijar.com or open an issue here on
   github if you have any questions.

     *    2019 github, inc.
     * [85]terms
     * [86]privacy
     * [87]security
     * [88]status
     * [89]help

     * [90]contact github
     * [91]pricing
     * [92]api
     * [93]training
     * [94]blog
     * [95]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [96]reload to refresh your
   session. you signed out in another tab or window. [97]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/danijar/mindpark/commits/master.atom
   3. https://github.com/danijar/mindpark#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/danijar/mindpark
  32. https://github.com/join
  33. https://github.com/login?return_to=/danijar/mindpark
  34. https://github.com/danijar/mindpark/watchers
  35. https://github.com/login?return_to=/danijar/mindpark
  36. https://github.com/danijar/mindpark/stargazers
  37. https://github.com/login?return_to=/danijar/mindpark
  38. https://github.com/danijar/mindpark/network/members
  39. https://github.com/danijar
  40. https://github.com/danijar/mindpark
  41. https://github.com/danijar/mindpark
  42. https://github.com/danijar/mindpark/issues
  43. https://github.com/danijar/mindpark/pulls
  44. https://github.com/danijar/mindpark/projects
  45. https://github.com/danijar/mindpark/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/reinforcement-learning
  48. https://github.com/topics/tensorflow
  49. https://github.com/topics/deep-learning
  50. https://github.com/topics/research
  51. https://github.com/topics/artificial-intelligence
  52. https://github.com/danijar/mindpark/commits/master
  53. https://github.com/danijar/mindpark/branches
  54. https://github.com/danijar/mindpark/releases
  55. https://github.com/danijar/mindpark/graphs/contributors
  56. https://github.com/danijar/mindpark/blob/master/license.md
  57. https://github.com/danijar/mindpark/search?l=python
  58. https://github.com/danijar/mindpark/find/master
  59. https://github.com/danijar/mindpark/archive/master.zip
  60. https://github.com/login?return_to=https://github.com/danijar/mindpark
  61. https://github.com/join?return_to=/danijar/mindpark
  62. https://desktop.github.com/
  63. https://desktop.github.com/
  64. https://developer.apple.com/xcode/
  65. https://visualstudio.github.com/
  66. https://github.com/danijar/mindpark/tree/b6c793013c7ff20638e8301dd335d687ec383873
  67. https://github.com/danijar/mindpark/tree/master/definition
  68. https://github.com/danijar/mindpark/tree/master/mindpark
  69. https://github.com/danijar/mindpark/tree/master/test
  70. https://github.com/danijar/mindpark/blob/master/.gitignore
  71. https://github.com/danijar/mindpark/blob/master/license.md
  72. https://github.com/danijar/mindpark/blob/master/readme.md
  73. https://github.com/danijar/mindpark/blob/master/setup.py
  74. https://camo.githubusercontent.com/b65f34caf1287dda5ffde46b31121f8a7544f8ea/687474703a2f2f696d6775722e636f6d2f7a6d77547655782e676966
  75. https://camo.githubusercontent.com/38f84cf4a54c498d00c04ff60021c4ae39c54db3/687474703a2f2f696d6775722e636f6d2f4144736448554d2e676966
  76. https://camo.githubusercontent.com/8a87c14b257fbcfe135a79cfa0ddec9bd72396fd/687474703a2f2f696d6775722e636f6d2f574b44564774782e676966
  77. https://storage.googleapis.com/deepmind-data/assets/papers/deepmindnature14236paper.pdf
  78. https://arxiv.org/pdf/1509.06461v3.pdf
  79. https://arxiv.org/pdf/1602.01783v2.pdf
  80. http://www-anw.cs.umass.edu/~barto/courses/cs687/williams92simple.pdf
  81. https://camo.githubusercontent.com/0c38338ae22b21355270c25fb2f7d6ec7cddf2a3/687474703a2f2f692e696d6775722e636f6d2f6568314b305a6c2e706e67
  82. http://i.imgur.com/qzbr7nb.png
  83. https://github.com/danijar/mindpark#algorithms
  84. mailto:mail@danijar.com
  85. https://github.com/site/terms
  86. https://github.com/site/privacy
  87. https://github.com/security
  88. https://githubstatus.com/
  89. https://help.github.com/
  90. https://github.com/contact
  91. https://github.com/pricing
  92. https://developer.github.com/
  93. https://training.github.com/
  94. https://github.blog/
  95. https://github.com/about
  96. https://github.com/danijar/mindpark
  97. https://github.com/danijar/mindpark

   hidden links:
  99. https://github.com/
 100. https://github.com/danijar/mindpark
 101. https://github.com/danijar/mindpark
 102. https://github.com/danijar/mindpark
 103. https://help.github.com/articles/which-remote-url-should-i-use
 104. https://github.com/danijar/mindpark#mindpark
 105. https://github.com/danijar/mindpark#introduction
 106. https://github.com/danijar/mindpark#instructions
 107. https://github.com/danijar/mindpark#statistics
 108. https://github.com/danijar/mindpark#definitions
 109. https://github.com/danijar/mindpark#algorithms
 110. https://github.com/danijar/mindpark#dependencies
 111. https://github.com/danijar/mindpark#contributions
 112. https://github.com/danijar/mindpark#contact
 113. https://github.com/
