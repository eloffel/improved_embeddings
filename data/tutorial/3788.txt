   #[1]the keras blog atom feed

                               [2]the keras blog

   [3]keras is a deep learning library for python, that is simple,
   modular, and extensible.

     * [4]archives
     * [5]github
     * [6]documentation
     * [7]google group

                             [8]introducing keras 2

   tue 14 march 2017


    by [9]francois chollet

   in [10]news.
     __________________________________________________________________

   keras was released two years ago, in march 2015. it then proceeded to
   grow from one user to one hundred thousand.

   keras user growth

   hundreds of people have contributed to the keras codebase. many
   thousands have contributed to the community. keras has enabled new
   startups, made researchers more productive, simplified the workflows of
   engineers at large companies, and opened up deep learning to thousands
   of people with no prior machine learning experience. and we believe
   this is just the beginning.

   now we are releasing keras 2, with a new api (even easier to use!) that
   brings consistency with tensorflow. this is a major step in preparation
   for the integration of the keras api in core tensorflow.

   many things have changed. this is your quick summary.
     __________________________________________________________________

tensorflow integration

   although keras has supported tensorflow as a runtime backend since
   december 2015, the keras api had so far been kept separate from the
   tensorflow codebase. this is changing: the keras api will now become
   available directly as part of tensorflow, starting with tensorflow 1.2.
   this is a big step towards making tensorflow accessible to its next
   million users.

   keras is best understood as an api specification, not as a specific
   codebase. in fact, going fowards there will be two separate
   implementations of the keras spec: the internal tensorflow one,
   available as tf.keras, written in pure tensorflow and deeply compatible
   with all tensorflow functionality, and the external multi-backend one
   supporting both theano and tensorflow (and likely even more backends in
   the future).

   similarly, [11]skymind is implementing part of the keras spec in scala
   as [12]scalnet, and [13]keras.js is implementing part of the keras api
   in javascript, to be run in the browser. as such, the keras api is
   meant to become the lingua franca of deep learning practitioners, a
   common language shared across many different workflows, independent of
   the underlying platform. a unified api convention like keras helps with
   code sharing and research reproducibility, and it allows for larger
   support communities.
     __________________________________________________________________

api changes

   the new keras 2 api is our first long-term-support api: codebases
   written in keras 2 next month should still run many years from now, on
   up-to-date software. to make this possible, we have extensively
   redesigned the api with this release, preempting most future issues. in
   particular, our new api choices are fully compatible with tensorflow
   conventions.
     * the api of most layers has significantly changed, in particular
       dense, batchid172, and all convolutional layers. however,
       we have set up compatibility interfaces so that your keras 1 code
       will still run in keras 2 without issues (while printing warnings
       to help you convert your layer calls to the new api).
     * the api of generator training & evaluation methods has changed
       (i.e. fit_generator, predict_generator, and evaluate_generator).
       again, no worries: your keras 1 calls will still work in keras 2.
     * in fit, nb_epoch has been renamed epochs. this change is also
       handled by our api conversion interfaces.
     * the saved weights format for many layers has changed. however,
       weights files saved with keras 1 can still be loaded in keras 2
       models.
     * the objectives module has been renamed losses.
     __________________________________________________________________

breaking changes

   keeping in mind the large user base of keras, we have done our best to
   minimize the number of breaking changes. however, some breakages are
   inevitable, especially for more advanced users.
     * the legacy layers maxoutdense, timedistributeddense, and highway
       have been permanently removed.
     * a number of legacy metrics and id168s have been removed.
     * the batchid172 layer no longer supports the mode argument.
     * because keras internals have changed, custom layers have to be
       updated. relatively little has changed, so it should be quick and
       easy. see [14]this guide.
     * in general, any piece of code that used undocumented keras
       functionality could have broken, so advanced users may have some
       updating to do.
     __________________________________________________________________

get started

   you can:
     * install keras 2 from pypi: pip install keras --upgrade
     * check out [15]the code on github.
     * read through [16]the updated documentation.
     __________________________________________________________________

thanks to our contributors

   lots of people have committed code that has contributed specifically to
   the keras 2 release. many thanks to:
     * abhai kollara dilip
     * achal shah
     * alexandre kirszenberg
     * ariel rokem
     * arpit agarwal
     * bas veeling
     * daniel h  yer iversen
     * daniel seichter
     * davy song
     * fariz rahman
     * fred schroeder
     * fr  d  ric bastien
     * gijs van tulder
     * hannah vivian shaw
     * hiroya chiba
     * joseph jin-chuan tang
     * joshua chin
     * michael oliver
     * paul fitzpatrick
     * pokey rule
     * rizky luthfianto
     * vasilis vryniotis
     * @spotlight0xff
     * @jarfo
     * @jihobak
     __________________________________________________________________


    powered by [17]pelican, which takes great advantages of [18]python.

references

   1. https://blog.keras.io/
   2. https://blog.keras.io/index.html
   3. https://github.com/fchollet/keras
   4. https://blog.keras.io/
   5. https://github.com/fchollet/keras
   6. http://keras.io/
   7. https://groups.google.com/forum/#!forum/keras-users
   8. https://blog.keras.io/introducing-keras-2.html
   9. https://twitter.com/fchollet
  10. https://blog.keras.io/category/news.html
  11. https://skymind.ai/
  12. https://github.com/deeplearning4j/scalnet
  13. https://github.com/transcranial/keras-js
  14. https://keras.io/layers/writing-your-own-keras-layers/
  15. https://github.com/fchollet/keras
  16. https://keras.io/
  17. http://alexis.notmyidea.org/pelican/
  18. http://python.org/
