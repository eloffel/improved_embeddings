   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]become a member[7]sign in[8]get started
     __________________________________________________________________

introduction to tensorflow         cpu vs gpu

   [9]go to the profile of erik hallstr  m
   [10]erik hallstr  m (button) blockedunblock (button) followfollowing
   nov 11, 2016

   in this tutorial we will do simple simple id127 in
   [11]tensorflow and compare the speed of the gpu to the cpu, the basis
   for why deep learning has become state-of-the art in recent years.

what is tensorflow?

   it   s a framework to perform computation very efficiently, and it can
   tap into the gpu (graphics processor unit) in order too speed it up
   even further. this will make a huge effect as we shall see shortly.
   tensorflow can be controlled by a simple python api, which we will be
   using in this tutorial.

graphs and tensors

   when a native computation is done in many programming languages, it is
   usually executed directly. if you type a = 3*4 + 2 in a python console,
   you will immediately have the result. running a number of mathematical
   computations like this in an ide also allows you to set breakpoints,
   stop the execution and see intermediate results. this is not possible
   in tensorflow, what you actually do is specifying the computations that
   will be done. this is accomplished by creating a computational graph,
   which takes multidimensional matrices called    tensors    and does
   computations on them. each node in the graph denotes an operation. when
   creating the graph, you have the possibility to explicitly specify
   where the computations should be done, on the gpu or cpu. by default it
   will check if a gpu is available, and use that.

sessions

   the graph is run in a session, where you specify what operations to
   execute in the run-function. data from outside may also be supplied to
   placeholders in the graph, so you can run it multiple times with
   different input. furthermore, intermediate result (such as model
   weights) can be incrementally updated in variables, which will retain
   their values between runs.

example

   this code example creates pairs of random matrices, clocks the
   multiplication of them depending on size and device placement.

   iframe: [12]/media/289c7cb605848e2ff9d9b8d73e430468?postid=649b15aed18c

   you see that the gpu (a gtx 1080 in my case) is much faster than the
   cpu (intel i7). back-propagation is almost exclusively used today when
   training neural networks, and it can be stated as a number of matrix
   multiplications (backward and forward pass). that   s why using gpu:s are
   so important for quickly training deep-learning models.
   [1*d1capqf9fphscryasqq9og.png]
   cpu time in green and gpu time in blue. the initial gpu delay at the
   first iteration is perhaps due to tensorflow setting starting up stuff.

next step

   in [13]the next post we will use tensorflow to create a recurrent
   neural network.

     * [14]machine learning
     * [15]tensorflow
     * [16]matrix
     * [17]gpu
     * [18]deep learning

   (button)
   (button)
   (button) 457 claps
   (button) (button) (button) 11 (button) (button)

     (button) blockedunblock (button) followfollowing
   [19]go to the profile of erik hallstr  m

[20]erik hallstr  m

   studied engineering physics and in machine learning at royal institute
   of technology in stockholm. also been living in taiwan             . interested
   in deep learning.

     * (button)
       (button) 457
     * (button)
     *
     *

   [21]go to the profile of erik hallstr  m
   never miss a story from erik hallstr  m, when you sign up for medium.
   [22]learn more
   never miss a story from erik hallstr  m
   (button) blockedunblock (button) followget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/649b15aed18c
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/membership?source=upgrade_membership---nav_full
   7. https://medium.com/m/signin?redirect=https://medium.com/@erikhallstrm/hello-world-tensorflow-649b15aed18c&source=--------------------------nav_reg&operation=login
   8. https://medium.com/m/signin?redirect=https://medium.com/@erikhallstrm/hello-world-tensorflow-649b15aed18c&source=--------------------------nav_reg&operation=register
   9. https://medium.com/@erikhallstrm?source=post_header_lockup
  10. https://medium.com/@erikhallstrm
  11. https://www.tensorflow.org/
  12. https://medium.com/media/289c7cb605848e2ff9d9b8d73e430468?postid=649b15aed18c
  13. https://medium.com/@erikhallstrm/hello-world-id56-83cd7105b767#.dgbfbofeu
  14. https://medium.com/tag/machine-learning?source=post
  15. https://medium.com/tag/tensorflow?source=post
  16. https://medium.com/tag/matrix?source=post
  17. https://medium.com/tag/gpu?source=post
  18. https://medium.com/tag/deep-learning?source=post
  19. https://medium.com/@erikhallstrm?source=footer_card
  20. https://medium.com/@erikhallstrm
  21. https://medium.com/@erikhallstrm
  22. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  24. https://medium.com/p/649b15aed18c/share/twitter
  25. https://medium.com/p/649b15aed18c/share/facebook
  26. https://medium.com/p/649b15aed18c/share/twitter
  27. https://medium.com/p/649b15aed18c/share/facebook
