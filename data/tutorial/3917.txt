community detection 

in networks

jure leskovec (@jure)

jure leskovec, stanford

1

identifying modular structure

can	we	identify	
node	groups?
(communities,	
modules,	clusters)

jure leskovec, stanford

nodes:	football	teams
edges:	games	played

2

ncaa football network

ncaa	conferences

jure leskovec, stanford

nodes:	football	teams
edges:	games	played

3

facebook network

can	we	identify	

social	communities?

jure leskovec, stanford

nodes:	facebook	users
edges:	friendships

4

facebook network

social	communities

high school

stanford (squash)

summer
internship

stanford (basketball)

jure leskovec, stanford

nodes:	facebook	users
edges:	friendships

5

protein-protein interactions

can	we	identify	

functional	modules?

nodes:	proteins
edges:	physical	interactions

6

jure leskovec, stanford

protein-protein interactions

functional	modules

nodes:	proteins
edges:	physical	interactions

7

jure leskovec, stanford

community detection

   input: a network
   output: 

community memberships of nodes

a

b

c

f

g

d

e

h

cluster nodes based on network connectivity 
with the hope to identify sets of objects with 

common function, role or property.

jure leskovec, stanford

8

why is it important?

   community detection is a fundamental 
problem in network analysis allowing for:
   discovering unknown roles of proteins 

[krogan et al.    06]

   identifying module boundaries [ahn et al.    11]
   detecting missing links [kim, l.    12]
   observing political factions in the 
blogosphere [adamic, glance    05]

   identifying functional modules [palla et al.    05]

jure leskovec, stanford

9

why is it hard?

   modeling: communities form complex 

structures: non-overlapping, 
overlapping, hierarchically nested

   computation: many formulations lead 
to intractable problems
   for 100k node networks many methods 

take days to run

   evaluation: lack of ground-truth

   research relies on anecdotal manual 

inspection

jure leskovec, stanford

10

non-overlapping communities

jure leskovec, stanford

11

non-overlapping communities

nodes

s
e
d
o
n

network

adjacency	matrix

methods for non-overlapping communities   
   spectral id91 [shi&malik    00], modularity 
[newman    06], block models [holland    83],    
   define communities as well-separable 
clusters

jure leskovec, stanford

12

   define an objective function     (    )

communities

s

s

   good community s cuts few edges 
while keeping many inside the set s

jure leskovec, stanford

13

defining an objective function
conductance of a cluster s:

         =#(                    	            )
            (    )
                    	            :
            (    ) = #(edge end points in s)

lower conductance means a better cluster

jure leskovec, stanford

14

what if communities overlap?

jure leskovec, stanford

15

overlapping community detection

many methods for overlapping communities:

   mixed membership stochastic block models 

[airoldi, blei, feinberg, xing,    08]

   link id91 [ahn et al.    10] [evans et al.    09]
   clique percolation [palla et al.    05] 
   clique expansion [lee et al.    10]
   bayesian matrix fact. [psorakis et al.    11]
what	do	these	methods	assume	

about	community	overlaps?

jure leskovec, stanford

16

overlapping communities
   existing methods assume that edge 

id203 decreases with the 
number of shared communities

jure leskovec, stanford

17

overlapping communities
   existing methods assume that edge 

id203 decreases with the 
number of shared communities

nodes

s
e
d
o
n

network

adjacency	matrix

jure leskovec, stanford

18

community overlaps

in many real-world datasets we find:
   more communities u and v share 
the more likely they are linked
   community overlaps are denser

jure leskovec, stanford

19

community overlaps
   more communities u and v share 
the more likely they are linked
   community overlaps are denser

communities as    tiles   

jure leskovec, stanford

20

from networks to communities

what	we	have:

what	we	want:

network	with
communities

jure leskovec, stanford

21

detecting communities 

with overlaps

overlapping	community	detection	at	scale:	a	nonnegative	matrix	factorization	approach.	j.	yang,	j.	
leskovec. acm	international	conference	on	web	search	and	data	mining	(wsdm),	2013.
detecting	cohesive	and	2-mode	communities	in	directed	and	undirected	networks.	j.	yang,	j.	mcauley,	j.	
leskovec. acm	international	conference	on	web	search	and	data	mining	(wsdm),	2014.
overlapping	communities	explain	core   periphery	organization	of	networks.	j.	yang,	j.	leskovec.	proceedings	of	
the	ieee,	vol.	102,	no.	12,	pp.	1892-1902,	2014.

jure leskovec, stanford

22

community-affiliation graph

communities,	c

pa

pb

memberships,	m

model

nodes,	v

community affiliations

network
   generative model: how is a network 
generated from community affiliations?
   later, we detect communities by fitting the model

   model parameters b(v, c, m, {pc}) :

   nodes v, communities c, memberships m
   each community c has a single id203 pc

jure leskovec, stanford

23

agm: generative process

communities,	c

pa

pb

model

memberships,	m

nodes,	v

community affiliations

   agm generates the network:

   nodes in community      connect to each 
other with id203         :

network

vup
1),(
-=

  

1(
u mmc
    

v

-

cp

)

provably generates power-law degree distributions and other

real-world network patterns [lattanzi,	sivakumar,	   09]

jure leskovec, stanford

24

agm generates networks

[icdm   12]

  

1(
u mmc
    

v

-

cp

)

vup
1),(
-=

model

network

jure leskovec, stanford

25

agm: modeling flexibility

agm can express a 
variety of community 
structures: 
non-overlapping, 
overlapping, nested

jure leskovec, stanford

26

detecting communities
   detecting communities with agm:

a

b

c

d

e

f

g

   given a graph g, find the model b
by maximizing the model likelihood:
arg

bgp
(

ip
j
),(

max

-

=

)

;

h

  

1(
eji
),(
  

ip
j
,(
))
jip
1),(
-=

  

eji
),(
  

b

model	b	has	3	parts:
1) affiliation	graph	m
2) number	of	communities	c
3) parameters	pc

jure leskovec, stanford

27

  

1(
i mmc
    

j

-

cp

)

   relaxing    agm

[wsdm    13]

      relax    the agm: memberships have 

strengths

            

            

               : the membership strength of node     
to community      (            =    : no membership) 

jure leskovec, stanford

28

[wsdm    13]

bigclam model

the strengths of shared memberships:

   prob. of nodes linking is proportional to 

        ,     =1   exp	(       c       ef)
   now, given a network, we estimate     
   update fhi for node u while fixing the 
   updating takes linear time in the degree of u

   non-negative id105:

memberships of all other nodes 

jure leskovec, stanford

29

bigclam model

[wsdm    13]

   apply block coordinate gradient ascent 

   step size: backtracking line search

   project     c back to a non-negative vector
   by caching     e a gradient step takes linear time in the 
degree of     

   pure gradient ascent is slow! however:

jure leskovec, stanford

30

bigclam: scalability

   bigclam takes 5min for 300k node networks

   other methods take 10 days

   can process networks with 100m edges!

jure leskovec, stanford

31

results on a facebook network

ground-truth

link	id91

stochastic	block	model	(mmsb)

clique	percolation

jure leskovec, stanford

32

bigclam: does it work?

94%	accuracy

jure leskovec, stanford

33

detecting social circles

discovering social circles in ego networks. j. mcauley, j. leskovec.
acm transactions on knowledge discovery from data (tkdd), 2014.
community detection in networks with node attributes. j. yang, j. mcauley, j. leskovec.
ieee international conference on data mining (icdm), 2013.

jure leskovec, stanford

34

extension: organizing friends

[nips	   12]

discover circles and why they exist

jure leskovec, stanford

35

node features

jure leskovec, stanford

36

[tkdd	   14]

model of social circles
        ,        exp(        q       (    ,    )
)
   circles arise due to a specific reason
      (    ,    )     edge feature vector describing (    ,    )
   for a set of circles c model edge prob.: 
      q    circle specific weight vector
                            
        =    .        .                    .        .    
        ,     = 	

 q
works	at	msr
studied	at	cmu
from	uk
born	in	london
is	catholic
likes	scifi
studied	cs

   example:

jure leskovec, stanford

37

[tkdd	   14]

extensions: social circles
   how well do we recover human circles?
   social circles of a particular person:

e
c
n
a
t
r
o
p
m

i

e
c
n
a
t
r
o
p
m

i

e
c
n
a
t
r
o
p
m

i

user	feature

user	feature

jure leskovec, stanford

user	feature

38

motif-aware community 

detection

higher-order	organization	of	complex	networks.	a.	benson,	d.	gleich,	j.	leskovec. science,	vol.	
353,	no.	6295,	pp.	163-166,	2016.
local	higher-order	graph	id91.	h.	yin,	a.	benson,	d.	gleich,	j.	leskovec. acm	sigkdd	
international	conference	on	knowledge	discovery	and	data	mining	(kdd),	2017.

jure leskovec, stanford

39

higher-order structures
small subgraphs (motifs, graphlets) 

are building blocks of networks

a

b

jure leskovec, stanford

40

c

not all edges are equal

in social networks, triangles are more 
important than individual edges. the triangle 
motif represents stronger social ties.  

jure leskovec, stanford

41

not all edges are equal

cln1

cln2

swi4_swi6

ho

spt16

in transcription networks, the feedforward 
loop motif represents biological function. 

jure leskovec, stanford

42

modules of motifs

find modules based on motifs!
network:

motif:

jure leskovec, stanford

43

modules of motifs

different motifs reveal different 

modular structures!

jure leskovec, stanford

44

how do we find

modules of network 

motifs?

jure leskovec, stanford

45

background: partitioning

   old idea: find densely connected 
sets of nodes. minimize edges cut.

jure leskovec, stanford

46

background: communities

   define an objective function     (    )

s

s

   good community s cuts few edges 
while keeping many inside the set s

jure leskovec, stanford

47

defining an objective function
conductance of a cluster s:

         =#(                    	            )
            (    )
                    	            :
            (    ) = #(edge end points in s)

lower conductance means a better cluster

jure leskovec, stanford

48

how do we 

generalize conductance 

to network motifs?

jure leskovec, stanford

49

defining motif conductance
generalize cut and volume to motifs:

                    	            
            (    ) = #(edge 
         =#(                    	            )
            (    )

end-points in s)

                        	            
                (    ) = #(motif     
         =#(                        	            )
            x(    )

end-points in s)

[benson, gleich, leskovec, science, 2016]

jure leskovec, stanford

50

motif conductance: example
motif:

b
b
network:

 m(s) =

motifs cut

=

1
10

jure leskovec, stanford

motif volume
figure 1: higher-order network structures and the higher-order network id91

51

higher-order partitioning
how do we find clusters of motifs?

   given a motif m and a graph g
   find a set of nodes s that 

minimizes motif conductance

bad news: finding set s with the 
minimal motif conductance is 
computationally intractable (np-hard)!

[benson, gleich, leskovec, science, 2016]

jure leskovec, stanford

52

motif spectral id91
solution: motif spectral id91

   input: graph g and motif m
   using g form a new weighted graph w
   apply spectral id91 on w
   output the clusters

theorem: resulting clusters will obtain 
near optimal motif conductance

[benson, gleich, leskovec, science, 2016]

jure leskovec, stanford

53

motif spectral id91

1

1
1

1

3

1

1

1

1

1

1

1

1

2

1

graph g

weighted graph w(m)

wij

(m) = # of times edge (i,j) participates in motif m

jure leskovec, stanford

54

motif spectral id91

insight:
spectral id91 on 
weighted graph w(m)
finds clusters of low 
motif conductance:

1

1
1

1

3

1

1

1

1

1

1

1

1

2

1

 m(s) =

motifs cut

motif volume

=

1
10

weighted graph w(m)

wij

(m) = # of times edge (i,j) participates in motif m

jure leskovec, stanford

55

motif spectral id91: 1
c

step 1: form weighted graph w(m)

figure 1: higher-order network structures and the higher-order network id91
framework. a: higher-order structures are captured by network motifs. for example, all
13 connected three-node directed motifs are shown here. b: id91 of a network based on

jure leskovec, stanford

56

motif spectral id91: 2

d = diag(w (m)e)

l(m) = d 1/2(d   w (m))d 1/2
l(m)z =  2z
f(m) = d 1/2z

d = diag(w (m)e)
diagonal degree matrix

l(m) = d 1/2(d   w (m))d 1/2
l(m)z =  2z
step 2: compute fiedler vector f(m)
f(m) = d 1/2z

associated with   2 of the laplacian of w(m)

jure leskovec, stanford

57

motif spectral id91: 3

figure 1: higher-order network structures and the higher-order network id91
framework. a: higher-order structures are captured by network motifs. for example, all

jure leskovec, stanford

conductance of each sr

58

step 3: sort nodes by values in f(m): f1, f2,    fn
let sr = {f1,    , fr} and compute the motif 

motif cheeger inequality
theorem: the algorithm finds a set of 
nodes s for which

 m(s)     4q    m

 m(s)     4q    m

    motif conductance of s found by our algorithm
    motif conductance of optimal set s*

in other words: clusters s found by 
our method are provably near optimal

 m(s)     4q    m

[benson, gleich, leskovec, science, 2016]

jure leskovec, stanford

59

advantages

   we inherit 40+ years of research in 

spectral id207!

   easy to implement: 10 lines of matlab
   scalable to large networks

(1.4b edge graphs)

   general: can be applied to directed, 

signed, and weighted networks

jure leskovec, stanford

60

summary

   generalization of community 

a
detection to higher-order structures

b

   motif-conductance objective admits a 

motif cheeger inequality

   simple, fast, and scalable:

c

jure leskovec, stanford

61

applications: two examples
1) we don   t know a motif of interest

   food webs and new applications

2) we know the motif of interest 

   regulatory transcription networks, 

connectome, social networks

jure leskovec, stanford

62

application 1:
we do not know 
the motif of interest

jure leskovec, stanford

63

application 1: food webs
florida bay food web:
   nodes: species in 

the ecosystem

(who eats whom)

   edges: carbon exchange 
a
different motifs capture 
different energy flow patterns:

b

b

jure leskovec, stanford

64

florida bay food web

which motif organizes the food web?
approach:
   run motif spectral id91 

separately for each of the 13 motifs
   examine the sweep profile to see 

which motif gives best clusters

jure leskovec, stanford

65

florida bay food web

jure leskovec, stanford

66

a

b

a

food web: observations
observation:
network organizes
based on motif m6
a
(but not m5 or m8)
   there exist good 
cuts for m6 but not 
for m5 or m8

a

b

jure leskovec, stanford

67

food web: clusters
b

benthic fishes

pelagic fishes 
and benthic prey

d

micronutrient 
sources

benthic 
macroinvertibrates

m6 reveals known aquatic layers with 

figure 2: higher-order organization of the florida bay food web. a: motif conductance for
different motifs on the florida bay ecosystem food web (19). a priori it is not clear whether the

higher accuracy (84% vs. 65%)

jure leskovec, stanford

68

structure of aquatic layers
c

d

a

aquatic layers organize based on m6
d
   many instances of m6 inside
   few instances of m6 cross

figure 2: higher-order organization of the florida bay food web. a: motif conductance for
different motifs on the florida bay ecosystem food web (19). a priori it is not clear whether the

jure leskovec, stanford

69

application 2:
signed networks

jure leskovec, stanford

70

(2) gene regulatory networks
   nodes are groups of genes in mrna
   edges are directed transcriptional 
a

regulation relationships

c

a

   the    feedforward loop    motif represents 

biological function [alon    07]

b

b

jure leskovec, stanford

71

yeast regulatory network
a

c

b

c

c

c

d

97% detection accuracy (vs. 68-82%)

jure leskovec, stanford

d

72

structure of modules

   feed forward loops:
d

c

figure s8: higher-order organization of the s. cerevisiae transcriptional regulation network.

jure leskovec, stanford

73

d

some further 

questions

jure leskovec, stanford

74

further questions
   community detection in dynamic 

networks
   communities merge, split, are born, and die

   detecting communities of different 

structural types
   cohesive vs. bipartite communities

   robustness/significance of communities

   which communities in a network are 

   significant   ?

jure leskovec, stanford

75

further questions

   how do we study larger motifs? sampling? 

counting vs. enumeration? take advantage of 
structure?

   other adjacency matrix weighting 
techniques
   other types of higher-order structure:
spreading processes through certain 
types of motif?

jure leskovec, stanford

76

references

  

  

  

  

  

  

overlapping community detection at scale: a nonnegative id105 
approach. j. yang, j. leskovec. acm international conference on web search 
and data mining (wsdm), 2013.
detecting cohesive and 2-mode communities in directed and undirected 
networks. j. yang, j. mcauley, j. leskovec. acm international conference on 
web search and data mining (wsdm), 2014.
overlapping communities explain core   periphery organization of networks. j. 
yang, j. leskovec. proceedings of the ieee, vol. 102, no. 12, pp. 1892-1902, 
2014.

discovering social circles in ego networks. j. mcauley, j. leskovec. acm 
transactions on knowledge discovery from data (tkdd), 2014.
community detection in networks with node attributes. j. yang, j. mcauley, 
j. leskovec.
ieee international conference on data mining (icdm), 2013.

higher-order organization of complex networks. a. benson, d. gleich, j. 
leskovec. science, vol. 353, no. 6295, pp. 163-166, 2016.
local higher-order graph id91. h. yin, a. benson, d. gleich, j. 
leskovec. acm sigkdd international conference on knowledge discovery 
and data mining (kdd), 2017.

jure leskovec, stanford

77

