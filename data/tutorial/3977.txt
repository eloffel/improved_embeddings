tutorial on universal dependencies
adding a new language to ud

joakim nivre1 daniel zeman2

filip ginter3

francis m. tyers45

1department of linguistics and philology, uppsala university, sweden

2institute of formal and applied linguistics, charles university, prague, czechia

3department of information technology, university of turku, finland

4giela ja kultuvrra instituhtta, uit norgga   rktala   universitehta, troms  , norway

5arvutiteaduse instituut, tartu   likool, estonia

two scenarios

you want your language in ud

 (cid:0)

(cid:0)!

existing treebank
you have permission

no existing treebank
no permission/licence

#

#

treebank conversion building from scratch

1

common steps

first steps
    get an account in github

    all development goes on here

get in contact
    ask someone from the release team to set up

a module

    get in contact with any other teams working

on your language, or a related one

    register for the mailing list *

* http://stp.lingfil.uu.se/mailman/listinfo/ud

release team

2

linguistic discussion

linguistic discussion goes on under the docs module

3

linguistic discussion

annotation guidelines are discussed with examples

3

linguistic discussion

annotation guidelines are discussed with examples

3

write documentation

    documentation is written in markdown and converted to html
    not mandatory, but highly recommended
    document as you write conversion rules/the annotation scheme

4

language-family documentation

new! documentation by language family

5

treebank conversion

case study: turkish

5

original treebank

metu-sabanc   treebank
    started in 2003
    converted to conll format for the 2006 shared task

  t  -metu-sabanc   treebank
    2016 reannotation of the metu-sabanc   treebank
    morphology editted, dependencies from scratch
    60k tokens in 2 months with 5 annotators (sulubacak et al., 2016)

6

co-ordination

a loosely co-ordinated effort between:
      a  r       ltekin (u. t  bingen)
    a team from   t  

    umut sulubacak
    memduh g  k  rmak
    g  l  en eryi  it

    h  ner ka    kara (u. bo  azi  i)
    joakim nivre
    francis tyers
kickoff meeting in uppsala (november, 2015)

7

conversion process

method:
    go through reference grammar (g  ksel & kerslake, 2011)
    document phenomena
    convert treebank according to documentation

tools:
    6,000 lines of java

    morphological synthesis
    collapse derivations
    remove multiwords
    distinguish clause from non-clause

8

original treebank

deriv

deriv

modifier

possessor

deriv

_

yanl    
disputed

_
_

yanl    lanan

_

kuram  n
kuram
theory   s

_

do  urgan
fertility

do  urganl      

_

subject

locative

sentence

burada
bura
here

yatar
yat
lies

.
.
.

kuram  n

1 _
2 _
3 yanl    lanan
4
5 _
6
7
8
9

do  urganl       _
burada
yatar
.

adj
verb
_
noun _

yanl    
_
_
kuram
do  urgan _
_
noun _
verb
_
punc _

bura
yat
.

adj
noun

_
_
aprespart _

_
acquire|pos

2 deriv
3 deriv
4 modifier
6 possessor
6 deriv

a3sg|pnon|gen
_
ness|a3sg|p3sg|nom 8
8
a3sg|pnon|loc
9
pos|aor|a3sg
_
0 root

subject
locative
sentence

9

ud turkish

acl

nmod:poss

yanl    lanan
yanl    lan
disputed

kuram  n
kuram
theory   s

do  urganl      
do  urganl  k

fertility

obj

burada
bura
here

obl

punct

yatar
yat
lies

.
.
.

1 yanl    lanan
2
3
4
5
6

kuram  n
do  urganl      
burada
yatar
.

verb
yanl    lan
kuram
noun
do  urganl  k noun
noun
bura
verb
yat
.
punct _ _

_ tense=pres|verbform=part|    2
3
_ case=gen|   
_ case=nom|   
5
5
_ case=loc|   
0
_ tense=aor|verbform=fin|   
5

acl
nmod:poss
nsubj
obl
root
punct

10

from scratch
case study: kazakh

10

four questions

    which annotation scheme?
    where to get the data?
    how much data?
    how long will it take?

11

which annotation scheme?

    non-ud:

    perhaps there are existing treebanks for your language and you want

to retain compatibility

    ud:

    no need for any special conversion
       at least until v3.0 ;)

    mixed:

    follow ud guidelines
    add information where you think it is useful
       providing it is easily convertible

at the end of the day: do what is best for your language and your
application

12

where to get the data?

free text:
    plenty of options:

    wikimedia projects: wikipedia, wikinews,    
    public domain texts (varies by country)

    out of copyright (e.g. old literature, folktales)
    laws/state administrative texts

non-free text:
    contact copyright holders early on

13

how much data?

    no minimum size

    smallest treebank: 1k tokens
    biggest treebank: 1.3m tokens

    conll-2006, smallest treebank: 29k tokens

   you can actually train a parser and get over 50% accuracy for
many languages with just about 100 sentences.        dan zeman

14

how long will it take?

    how long is a piece of string ?
    some approximate numbers:

language annotators tokens months
1
kazakh
buryat
3
12
irish

4,500
10,000
23,600

2
1
1

in all the above cases, annotation guidelines were developed from scratch
by people with no prior exposure to ud.

15

how we made a kazakh treebank

two people:
    francis tyers: computational linguist, interests in turkic languages

and morphosyntax

    jonathan north washington: phonologist, interests in turkic

languages, fluent speaker of kazakh and kyrgyz

one month:
    summer holiday in bloomington, indiana
resources:
    morphological analyser and constraint grammar
the whole thing would have been impossible without the ud project.
    guidelines were straightforward to apply
    community was exceptionally helpful and welcoming

16

annotation process

17

summary

17

summary

what you need to do
    join the project
    start annotating or converting
    ask if you get stuck!

can   t wait to get started?
    come and talk to us!

18

questions?

18

