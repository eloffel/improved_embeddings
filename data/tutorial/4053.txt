[1]convnetjs demo: toy 2d classification with 2-layer neural network

   the simulation below shows a toy binary problem with a few data points
   of class 0 (red) and 1 (green). the network is set up as:

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   change network

   feel free to change this, the text area above gets eval()'d when you
   hit the button and the network gets reloaded. every 10th of a second,
   all points are fed to the network multiple times through the trainer
   class to train the network. the resulting predictions of the network
   are then "painted" under the data points to show you the
   generalization.

   on the right we visualize the transformed representation of all grid
   points in the original space and the data, for a given layer and only
   for 2 neurons at a time. the number in the bracket shows the total
   number of neurons at that level of representation. if the number is
   more than 2, you will only see the two visualized but you can cycle
   through all of them with the cycle button.
   browser not supported for canvas. get a real browser. simple data
   circle data spiral data
   random data

   controls:
   click: add red data point
   shift+click: add green data point
   ctrl+click: remove closest data point
   browser not supported for canvas. get a real browser.
   cycle through visualized neurons at selected layer (if more than 2)

   go [2]back to convnetjs

references

   1. http://cs.stanford.edu/people/karpathy/convnetjs
   2. http://cs.stanford.edu/people/karpathy/convnetjs/
