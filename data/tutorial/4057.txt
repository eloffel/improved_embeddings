[1]convnetjs demo: image "painting"

   this demo that treats the pixels of an image as a learning problem: it
   takes the (x,y) position on a grid and learns to predict the color at
   that point using regression to (r,g,b). it's a bit like compression,
   since the image information is encoded in the weights of the network,
   but almost certainly not of practical kind :)

   note that the entire convnetjs definition is shown in textbox below and
   it gets eval()'d to create the network, so feel free to fiddle with the
   parameters and hit "reload". i found that, empirically and
   interestingly, deeper networks tend to work much better on this task
   given a fixed parameter budget.

   report questions/bugs/suggestions to [2]@karpathy.

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   reload network
   choose your own image:                     
   original image
   neural network output
   learning rate:
   the learning rate should probably be decreased over time (slide left)
   to let the network better overfit the training data. it's nice to not
   have to worry about overfitting.
   you can upload your own image above (click choose file), or you can
   click on any of the images below to load them.
   [cat.jpg] [esher.png] [pencils.png] [usa.png] [fractal.jpg] [dora.jpg]
   [rubiks.jpg] [earth.jpg] [fox.png] [twitter.png] [reddit.jpg]
   [chip.jpg] [jitendra.jpg] [tesla.jpg] [rainforest.jpg] [chess.png]
   [gradient.png] [battery.jpg] [starry.jpg]

   go [3]back to convnetjs

references

   1. http://cs.stanford.edu/people/karpathy/convnetjs/
   2. https://twitter.com/karpathy
   3. http://cs.stanford.edu/people/karpathy/convnetjs/
