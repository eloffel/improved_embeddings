   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    tutorial on automated machine learning using
   mlbox comments feed [4]alternate [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]machine learning [94]tutorial on automated machine
   learning using mlbox

   [95]machine learning[96]python

tutorial on automated machine learning using mlbox

   [97]nss, july 6, 2017

introduction

   recently, one of my friends and i were solving a practice problem.
   after 8 hours of hard work & coding, my friend shubham got a score of
   1153 (position 219). here is his position on leaderboard:

   on the other hand, i was able to achieve this by writing only 8 lines
   of code:

   how did i get there?

   what if i tell you there exists a library called [98]mlbox , which does
   most of the heavy lifting in machine learning for you in minimal lines
   of code? from missing value imputation to feature engineering using
   state-of-the-art entity embeddings for categorical features, mlbox has
   it all.

   in these 8 lines of code using mlbox, i have also performed
   hyperparameter optimisation and tested around 50 models with blazing
   speed     isn   t that awesome? you will be able to use this library by end
   of this article.


table of contents

    1. what is mlbox?
    2. mlbox in comparison to other machine learning libraries.
    3. installing mlbox
    4. layout/pipeline of the mlbox
    5. building a machine learning regressor using mlbox
    6. basic understanding of drift
    7. basic understanding of entity embedding
    8. pros and cons of mlbox
    9. end notes


1. what is mlbox?

   according to the developer of mlbox,

      mlbox is a powerful automated machine learning python library. it
   provides the following features:
     * fast reading and distributed id174/cleaning/formatting
     * highly robust feature selection and leak detection
     * accurate hyper-parameter optimisation in high-dimensional space
     * state-of-the-art predictive models for classification and
       regression (deep learning, stacking, lightgbm,   )
     * prediction with models interpretation   


2. mlbox in comparison to the other machine learning libraries

   mlbox focuses on the below three points in particular in comparison to
   the other libraries:
    1. drift identification     a method to make the distribution of train
       data similar to the test data.
    2. entity embedding     a categorical features encoding technique
       inspired from id97.
    3.  hyperparameter optimization

   we will be studying about these below in some detail to have an idea
   about what they do.


3. installing mlbox

   mlbox is currently available for linux only. mlbox was primarily
   developed using python 2 and last night it was extended to python 3. we
   will be installing the latest 3.0 dev version of mlbox. follow the
   below steps to install mlbox into your linux system.
    1. create a new conda environment with python 3.x and anaconda using
       the command below.
       conda create -n python3 python=3 anaconda    #here python3 is the
       name of the #environment that we just created.
    2. activate the python3 environment using the command below.
       source activate python3
    3. download the mlbox tar file using-
       curl -ol https://github.com/axelderomblay/mlbox/tarball/3.0-dev
    4. extract the downloaded tar file using
       sudo tar -xzvf 3.0-dev
    5. go to the following directory
       cd axelderomblay-mlbox-2befaee
    6. install the mlbox package using the below commands
       cd python-package
       cd dist
       pip install *.whl
    7. install additional libraries using
       pip install lightgbm
       pip install xgboost
       pip install hyperopt
       pip install tensorflow
       pip install keras
       pip install matplotlib
       pip install ipyparallel
       pip install pandas
    8. check whether the mlbox has been properly installed by using the
       following commands
       python
       import mlbox
       if the mlbox library is loaded without any error, you have
       successfully installed the mlbox library. next, we will go ahead
       awnd install some additional libraries that mlbox uses under the
       hood.

   note     this library is currently under very active development and
   therefore there may be the cases that something that works now may
   break the next day. for example, this library worked pretty well till 2
   days ago for python 2.7 and didn   t work so good for python 3.6. but at
   the time of writing, i am experiencing some issues with the 2.7 version
   and the 3 version is working fine for now. also please feel free to
   open issues on the github repository and asking for help in the
   comments below.


4. layout / pipeline of mlbox

   the entire pipeline of mlbox looks like below-


   the entire pipeline of mlbox has been divided into 3
   sections/sub-packages.
    1. pre-processing
    2. optimisation
    3. prediction

   we will be studying about these 3 sub-packages in detail below.


pre-processing

   all the functionalities inside this sub-package can be used via the
   command-
   from mlbox.preprocessing import *

   this sub-package provides functionalities related to two major
   functions.
    1. reading and cleaning a file
       this package supports reading a wide variety of file formats like
       csv, excel, hdf5, json etc. but in this article, we will be
       primarily seeing the most common    .csv    file format. follow the
       below steps to read a csv file.
       step1: create an object of the reader class with the separator as a
       parameter.    ,    is the separator in the case of a csv file.
       s=","
       r=reader(s)   #initialising the object of reader class
       step2: make a list of the train and test file paths and also
       identify the target variable name.
       path=["path of the train csv file","path of the test csv file "]
       target_name="name of the target variable in the train file"
       step3: performing the cleaning operation and creating a cleaned
       train and test file.
       data=r.train_test_split(path,target_name)
       the cleaning steps performed in the above step are-
       -deleting unnamed columns
       -removing duplicates
       -extracting month, year and day of the week from a date column
    2. removing the drifting variables
       the drifting variables are explained in the later section. to
       remove the drifting variables, follow the below steps.
       step1: create an object of class drift_thresholder
       dft=drift_thresholder()
       step2: use the fit_transform method of the created object to remove
       the drift variables.
       data=dft.fit_transform(data)


optimisation

   all the functionalities inside this sub-package can be used via the
   command-
   from mlbox.optimisation import *

   this is the section where this library scores the maximum points. this
   hyper-parameter optimisation method in this library uses the hyperopt
   library which is very fast and you can almost optimise anything in this
   library from choosing the right missing value imputation method to the
   depth of an xgboost model. this library creates a high-dimensional
   space of the parameters to be optimised and chooses the best
   combination of the parameters that lowers the validation score.

   below is the table of the four broad optimisations that are done in the
   mlbox library with terms to the right of hyphen that can be optimised
   for different values.

   missing values encoder(ne)     numerical_strategy (when the column to be
   imputed is a continuous column eg- mean, median etc),
   categorical_strategy(when the column to be imputed is a categorical
   column e.g.- nan values etc)

   categorical values encoder(ce)    strategy (method of encoding
   categorical variables e.g.- label_encoding, dummification,
   random_projection, entity_embedding)

   feature selector(fs)    strategy (different methods for feature selection
   e.g. l1, variance, rf_feature_importance), threshold (the percentage of
   features to be discarded)

   estimator(est)   strategy (different algorithms that can be used as
   estimators eg- lightgbm, xgboost etc.), **params(parameters specific to
   the algorithm being used eg- max_depth, n_estimators etc.)

   let us take an example and create a hyperparameter space to be
   optimised. let us state all the parameters that i want to optimise:

   algorithm to be used- lightgbm
   lightgbm max_depth-[3,5,7,9]
   lightgbm n_estimators-[250,500,700,1000]
   feature selection-[variance, l1, id79 feature importance]
   missing values imputation     numerical(mean,median),categorical(nan
   values)
   categorical values encoder- label encoding, entity embedding and random
   projection

   let us now create our hyper-parameter space. before that, remember,
   hyper-parameter is a dictionary of key and value pairs where value is
   also a dictionary given by the syntax
   {   search   :strategy,   space   :list}, where strategy can be either    choice   
   or    uniform    and list is the list of values.

   space={'ne__numerical_strategy':{"search":"choice","space":['mean','med
   ian']},
   'ne__categorical_strategy':{"search":"choice","space":[np.nan]},
   'ce__strategy':{"search":"choice","space":['label_encoding','entity_emb
   edding','random_projection']},
   'fs__strategy':{"search":"choice","space":['l1','variance','rf_feature_
   importance']},
   'fs__threshold':{"search":"uniform","space":[0.01, 0.3]},
   'est__max_depth':{"search":"choice","space":[3,5,7,9]},
   'est__n_estimators':{"search":"choice","space":[250,500,700,1000]}}

   now we will see the steps to choose the best combination from the above
   space using the following steps:

   step1: create an object of class optimiser which has the parameters as
      scoring    and    n_folds   . scoring is the metric against which we want to
   optimise our hyper-parameter space and n_folds is the number of folds
   of cross-validation
   scoring values for
   classification- "accuracy", "roc_auc", "f1", "log_loss", "precision", "
   recall"
   scoring values for
   regression- "mean_absolute_error", "mean_squarred_error", "median_absol
   ute_error", "r2"
   opt=optimiser(scoring="accuracy",n_folds=5)

   step2: use the optimise function of the object created above which
   takes the hyper-parameter space, dictionary created by the
   train_test_split and number of iterations as the parameters. this
   function returns the best hyper-paramters from the hyper-parameter
   space.
   best=opt.optimise(space,data,40)


prediction

   all the functions in this sub-package can be installed using the
   command below.
   from mlbox.prediction import *

   this sub-package predicts on the test dataset using the best
   hyper-parameters calculated using the optimisation sub-package. to
   predict on the test dataset, go through the following steps.

   step1: create an object of class predictor
   pred=predictor()

   step2: use the fit_predict method of the object created above which
   takes a set of hyperparameters and dictionary created through
   train_test_split as the parameter.
   pred.fit_predict(best,data)

   the above method saves the feature importance, drift variables
   coefficients and the final predictions into a separate folder named
      save   .


5. building a machine learning regressor using mlbox

   we are now going to build a machine learning classifier in just 7 lines
   of code with hyperparameter optimisation. we are going to solve the
   [99]big marts sales problem. download the train and test file and keep
   them in a single folder. using the mlbox library, we are going to
   submit our first prediction without even having to look at the data.
   you can find the code below to make the prediction for the problem.

   # coding: utf-8

   # importing the required libraries
   from mlbox.preprocessing import *
   from mlbox.optimisation import *
   from mlbox.prediction import *

   # reading and cleaning the train and test files
   df=reader(sep=",").train_test_split(['/home/nss/downloads/mlbox_blog/tr
   ain.csv',

    '/home/nss/downloads/mlbox_blog/test.csv'],'item_outlet_sales')

   # removing the drift variables
   df=drift_thresholder().fit_transform(df)

   # setting the hyperparameter space
   space={'ne__numerical_strategy':{"search":"choice","space":['mean','med
   ian']},
   'ne__categorical_strategy':{"search":"choice","space":[np.nan]},
   'ce__strategy':{"search":"choice","space":['label_encoding','entity_emb
   edding','random_projection']},
   'fs__strategy':{"search":"choice","space":['l1','variance','rf_feature_
   importance']},
   'fs__threshold':{"search":"uniform","space":[0.01, 0.3]},
   'est__max_depth':{"search":"choice","space":[3,5,7,9]},
   'est__n_estimators':{"search":"choice","space":[250,500,700,1000]}}

   # calculating the best hyper-parameter
   best=optimiser(scoring="mean_squared_error",n_folds=5).optimise(space,d
   f,40)

   # predicting on the test dataset
   predictor().fit_predict(best,df)

   the above code ranked 108(top 1%) on the public leaderboard without
   having to even open the train and test file. i think this is pretty
   awesome.

   below is the image of feature importance as calculated by lightgbm.


6. basic understanding of drift

   drift is not a common topic but a very important one and it deserves an
   article of its own. but i will try to explain the functionality of
   drift_thresholder in brief.

   in general, we assume that train and test dataset are created through
   the same generative algorithm or process but this assumption is quite
   strong and we do not see this behaviour in the real world. in the real
   world, the data generator or the process may change. for example, in a
   sales prediction model, the customer behaviour changes over time and
   hence the data generated will be different than the data that was used
   to create the model. this is called drift.

   another point to note is that in a dataset, both the independent
   features and the dependent feature may drift. when the independent
   features changes, it is called the covariate shift and when the
   relationship between the independent and dependent features change, it
   is called the concept shift. mlbox deals with the covariate shift.


   the general algorithm for detection of drift is as follows-

7. basic understanding of entity embedding

   entity embeddings owe their existence to the id97 embeddings in the
   sense that they function the same way as word vectors do. for example,
   we know that in word vector representation, we can do things like
   below.


   in the similar sense, categorical variables could be encoded to create
   new informative features. their effect was evident to the world in
   kaggle   s rossmann sales problem where a team used entity embeddings
   along with neural network and came third without performing any
   significant feature engineering. the entire code and the research paper
   on entity embeddings that resulted from the competition could be found
   [100]here. the entity embeddings were able to capture the relationship
   between the german states as shown below.

   i don   t want to bog you down with the explanation of entity embeddings
   here. it deserves its own article. in mlbox, you can use entity
   embedding as a black box for encoding categorical variables.

8. pros and cons of mlbox

   this library has its own sets of pros and cons.

   the pros are    
    1. automatic task identification i.e classification or regression
    2. basic pre-processing while reading the data
    3. removal of drifting variables
    4. extremely fast and accurate hyperparameter optimisation.
    5. a wide variety of feature selection methods.
    6. minimal lines of code.
    7. feature engineering via entity embeddings

   the cons are-
    1. it is still under active development and things may break or make
       at any point in time.
    2. no support for unsupervised learning
    3. basic feature engineering. you still have to create your own
       features.
    4. purely mathematical based feature selection method. this method may
       remove variables which make sense from the business perspective.
    5. not truly an automated machine learning library.

   so, i suggest you weigh the pros and cons before making this your
   mainstream library for machine learning.

9. end notes

   i was really excited to try this library as soon as i read about its
   release on github. i spent the next couple of days studying the library
   and simplifying it for you to use it on the go. i must say that i am
   really impressed with the library and am going to explore even more.
   with just 8 lines of code, i was able to break into top 1% and without
   having to spend time explicitly on handling data and hyperparameter
   optimisation, i could dedicate more time to feature engineering and
   check them on the fly. please feel free to comment for any help or
   ideas below.
     * most of the images have been taken from the documentation of mlbox
       itself.

[101]learn, [102]engage, [103]compete & [104]get hired

   you can also read this article on analytics vidhya's android app
   [105]get it on google play

share this:

     * [106]click to share on linkedin (opens in new window)
     * [107]click to share on facebook (opens in new window)
     * [108]click to share on twitter (opens in new window)
     * [109]click to share on pocket (opens in new window)
     * [110]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [111]automated machine learning, [112]drifting, [113]machine
   learning in python, [114]mlbox, [115]python
   next article

covariate shift     unearthing hidden problems in real world data science

   previous article

30 questions to test a data scientist on natural language processing
[solution: skilltest     nlp]

[116]nss

   i am a perpetual, quick learner and keen to explore the realm of data
   analytics and science. i am deeply excited about the times we live in
   and the rate at which data is being generated and being transformed as
   an asset. i am well versed with a few tools for dealing with data and
   also in the process of learning some other tools and knowledge required
   to exploit data.
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [117]discussion portal to get your queries resolved

11 comments

     * [118]isaac says:
       [119]july 6, 2017 at 1:00 pm
       very interesting article. congrats
       do you know any similar attempt to automate ml but in r? not
       talking about caret stuff but more similar to this python library,
       trying to automate all the pipeline from cleaning to validation
       thanks
       [120]reply
          + bernardo lares says:
            [121]july 7, 2017 at 1:41 am
            same interest here! this would be awesome!!!!! would save us
            so much time..
            [122]reply
     * nitin says:
       [123]july 6, 2017 at 2:42 pm
       is there anything similar in r?
       [124]reply
          + nss says:
            [125]july 6, 2017 at 2:52 pm
            not as of now.
            [126]reply
               o john says:
                 [127]july 8, 2017 at 8:28 pm
                 thank you for the article. isn   t many of the things
                 discussed here can be done relatively easy with caret as
                 well? isn   t this not similar to what caret does?
                 [128]reply
     * [129]david axelrod says:
       [130]july 6, 2017 at 4:51 pm
       fantastic article! really is on the bleeding edge of ml. i   ll have
       to check it out.
       [131]reply
     * shrinivas says:
       [132]july 6, 2017 at 9:26 pm
       very well explained, great   . thank you
       [133]reply
     * anirban mukherjee says:
       [134]july 7, 2017 at 1:17 pm
       here is the brain behind mlbox:
       [135]https://www.linkedin.com/in/axel-de-romblay-6444a990/
       his github account: [136]https://github.com/axelderomblay/mlbox
       quite an insight, this article. thanks!
       [137]reply
     * ch g says:
       [138]july 9, 2017 at 12:24 am
       when i am executing i got error like dis ..can you please help me
       to fix
       dumping drift coefficients into directory : save
       traceback (most recent call last):
       file       , line 1, in
       file
          /usr/local/lib/python2.7/site-packages/mlbox/preprocessing/drift_t
       hresholder.py   , line 141, in fit_transform
       fichier = open(self.to_path +    /drifts.txt   ,    w   )
       ioerror: [errno 2] no such file or directory:    save/drifts.txt   
       [139]reply
     * sachin gupta says:
       [140]july 10, 2017 at 8:11 am
       awesome!!
       really good to see progress in ml & thank you so much for sharing.
       [141]reply
     * [142]aditi sinha says:
       [143]july 20, 2017 at 11:38 am
       great, article nss
       giving the information in this article is great and easy to
       understanding.
       thanks for sharing and keep posting
       [144]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-06] [145]srk       3924
   2    [2.jpg?date=2019-04-06] [146]mark12    3510
   3    [3.jpg?date=2019-04-06] [147]nilabha   3261
   4    [4.jpg?date=2019-04-06] [148]nitish007 3237
   5    [5.jpg?date=2019-04-06] [149]tezdhar   3082
   [150]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [151]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [152]understanding support vector machine algorithm from examples
       (along with code)
     * [153]essentials of machine learning algorithms (with python and r
       codes)
     * [154]a complete tutorial to learn data science with python from
       scratch
     * [155]7 types of regression techniques you should know!
     * [156]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [157]a simple introduction to anova (with applications in excel)
     * [158]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [159]top 5 machine learning github repositories and reddit discussions
   from march 2019

[160]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [161]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[162]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [163]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[164]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [165]16 opencv functions to start your id161 journey (with
   python code)

[166]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [167][ds-finhack.jpg]

   [168][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [169]about us
     * [170]our team
     * [171]career
     * [172]contact us
     * [173]write for us

   [174]about us
   [175]   
   [176]our team
   [177]   
   [178]careers
   [179]   
   [180]contact us

data scientists

     * [181]blog
     * [182]hackathon
     * [183]discussions
     * [184]apply jobs
     * [185]leaderboard

companies

     * [186]post jobs
     * [187]trainings
     * [188]hiring hackathons
     * [189]advertising
     * [190]reach us

   don't have an account? [191]sign up here.

join our community :

   [192]46336 [193]followers
   [194]20222 [195]followers
   [196]followers
   [197]7513 [198]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [199]privacy policy
     * [200]terms of use
     * [201]refund policy

   don't have an account? [202]sign up here

   iframe: [203]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [204](button) join now

   subscribe!

   iframe: [205]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [206](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/machine-learning/
  94. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/
  95. https://www.analyticsvidhya.com/blog/category/machine-learning/
  96. https://www.analyticsvidhya.com/blog/category/python-2/
  97. https://www.analyticsvidhya.com/blog/author/nss/
  98. https://github.com/axelderomblay/mlbox
  99. https://datahack.analyticsvidhya.com/contest/practice-problem-big-mart-sales-iii/
 100. https://www.kaggle.com/c/rossmann-store-sales/discussion/17974
 101. https://www.analyticsvidhya.com/blog/
 102. https://discuss.analyticsvidhya.com/
 103. https://datahack.analyticsvidhya.com/contest/all/
 104. http://analyticsvidhya.com/jobs
 105. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 106. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/?share=linkedin
 107. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/?share=facebook
 108. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/?share=twitter
 109. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/?share=pocket
 110. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/?share=reddit
 111. https://www.analyticsvidhya.com/blog/tag/automated-machine-learning/
 112. https://www.analyticsvidhya.com/blog/tag/drifting/
 113. https://www.analyticsvidhya.com/blog/tag/machine-learning-in-python/
 114. https://www.analyticsvidhya.com/blog/tag/mlbox/
 115. https://www.analyticsvidhya.com/blog/tag/python/
 116. https://www.analyticsvidhya.com/blog/author/nss/
 117. https://discuss.analyticsvidhya.com/
 118. http://www.isaacgonzalez.es/
 119. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131616
 120. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131616
 121. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131646
 122. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131646
 123. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131620
 124. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131620
 125. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131621
 126. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131621
 127. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131804
 128. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131804
 129. http://tibah.io/
 130. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131627
 131. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131627
 132. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131639
 133. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131639
 134. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131662
 135. https://www.linkedin.com/in/axel-de-romblay-6444a990/
 136. https://github.com/axelderomblay/mlbox
 137. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131662
 138. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131827
 139. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131827
 140. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131891
 141. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-131891
 142. http://www.nieceducation.com/udaipur/index.aspx
 143. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-132441
 144. https://www.analyticsvidhya.com/blog/2017/07/mlbox-library-automated-machine-learning/#comment-132441
 145. https://datahack.analyticsvidhya.com/user/profile/srk
 146. https://datahack.analyticsvidhya.com/user/profile/mark12
 147. https://datahack.analyticsvidhya.com/user/profile/nilabha
 148. https://datahack.analyticsvidhya.com/user/profile/nitish007
 149. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 150. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 151. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 152. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 153. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 154. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 155. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 156. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 157. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 158. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 159. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 160. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 161. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 162. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 163. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 164. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 165. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 166. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 167. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 168. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 169. http://www.analyticsvidhya.com/about-me/
 170. https://www.analyticsvidhya.com/about-me/team/
 171. https://www.analyticsvidhya.com/career-analytics-vidhya/
 172. https://www.analyticsvidhya.com/contact/
 173. https://www.analyticsvidhya.com/about-me/write/
 174. http://www.analyticsvidhya.com/about-me/
 175. https://www.analyticsvidhya.com/about-me/team/
 176. https://www.analyticsvidhya.com/about-me/team/
 177. https://www.analyticsvidhya.com/about-me/team/
 178. https://www.analyticsvidhya.com/career-analytics-vidhya/
 179. https://www.analyticsvidhya.com/about-me/team/
 180. https://www.analyticsvidhya.com/contact/
 181. https://www.analyticsvidhya.com/blog
 182. https://datahack.analyticsvidhya.com/
 183. https://discuss.analyticsvidhya.com/
 184. https://www.analyticsvidhya.com/jobs/
 185. https://datahack.analyticsvidhya.com/users/
 186. https://www.analyticsvidhya.com/corporate/
 187. https://trainings.analyticsvidhya.com/
 188. https://datahack.analyticsvidhya.com/
 189. https://www.analyticsvidhya.com/contact/
 190. https://www.analyticsvidhya.com/contact/
 191. https://datahack.analyticsvidhya.com/signup/
 192. https://www.facebook.com/analyticsvidhya/
 193. https://www.facebook.com/analyticsvidhya/
 194. https://twitter.com/analyticsvidhya
 195. https://twitter.com/analyticsvidhya
 196. https://plus.google.com/+analyticsvidhya
 197. https://in.linkedin.com/company/analytics-vidhya
 198. https://in.linkedin.com/company/analytics-vidhya
 199. https://www.analyticsvidhya.com/privacy-policy/
 200. https://www.analyticsvidhya.com/terms/
 201. https://www.analyticsvidhya.com/refund-policy/
 202. https://id.analyticsvidhya.com/accounts/signup/
 203. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 204. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 205. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 206. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 208. https://www.facebook.com/analyticsvidhya
 209. https://twitter.com/analyticsvidhya
 210. https://plus.google.com/+analyticsvidhya/posts
 211. https://in.linkedin.com/company/analytics-vidhya
 212. https://www.analyticsvidhya.com/blog/2017/07/covariate-shift-the-hidden-problem-of-real-world-data-science/
 213. https://www.analyticsvidhya.com/blog/2017/07/30-questions-test-data-scientist-natural-language-processing-solution-skilltest-nlp/
 214. https://www.analyticsvidhya.com/blog/author/nss/
 215. https://in.linkedin.com/in/neeraj-singh-sarwan-a84b6965
 216. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 217. https://www.facebook.com/analyticsvidhya/
 218. https://twitter.com/analyticsvidhya
 219. https://plus.google.com/+analyticsvidhya
 220. https://plus.google.com/+analyticsvidhya
 221. https://in.linkedin.com/company/analytics-vidhya
 222. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 223. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 224. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 225. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 226. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 227. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 228. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 229. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 230. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 231. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 232. javascript:void(0);
 233. javascript:void(0);
 234. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 235. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 236. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 237. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 238. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 239. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 240. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 241. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 242. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 243. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fmlbox-library-automated-machine-learning%2f&linkname=tutorial%20on%20automated%20machine%20learning%20using%20mlbox
 244. javascript:void(0);
 245. javascript:void(0);
