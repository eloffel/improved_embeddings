   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]google cloud platform - community
     * [9]this week in gcp
     * [10]containers
     * [11]virtualization
     * [12]platform as a service
     * [13]data
     * [14]machine learning
     * [15]iot
     * [16]more
     __________________________________________________________________

jupyter + tensorflow + nvidia gpu + docker + google compute engine

   [17]go to the profile of allen day
   [18]allen day (button) blockedunblock (button) followfollowing
   jun 6, 2017

   tl;dr: save time and headaches by following this recipe for working
   with tensorflow, jupyter, docker, and nvidia gpus on google cloud.
   [1*mx_ahbvwck-trngtnx4rba.png]

   motivation: businesses like fast, data-driven insights, and they employ
   data scientists to make them. practicing [19]data science is an
   exploratory, iterative process requiring lots of computing resources
   and lots of time. to better support exploratory iteration, data
   scientists often use notebooks like [20]jupyter, and to accelerate
   computation of [21]tensorflow jobs they   re increasingly using to
   [22]gpus. however, gpus are costly, and the resources need to be
   managed carefully because businesses also like efficient operations.

   there   s currently a trend in cloud computing to use [23]kubernetes and
   [24]docker to improve resource utilization. wouldn   t it be great if
   data science tools like jupyter and gpus could be managed with docker
   and kubernetes? it would enable saving time and money. it   s possible,
   and i ran into several version/dependency problems before i arrived at
   this working configuration. please reuse it!

create a gce instance

   first, create firewall rules to access jupyter (8888) and tensorboard
   (6006)
   [1*ddhasjbfbdl37skllufpga.png]

   then create a gce instance. for the instance:
     * use os ubuntu 16.04 lts
     * allocate a 50gb boot disk
     * specify that you want at least one k80 gpu
     * tag with    jupyter    and    tensorboard    to apply the firewall rules
       you created

   [1*qd0mjlbkha83neatpr-vhw.png]
   [1*0fv2qb-yc71d9ymwmubzhq.png]
   [1*ri8waclkn3iyhbtofcqzjg.png]

install and verify cuda can access the gpu

   use cuda library from nvidia to gain access to the gpu.

   next step is to ssh to the compute node you created, then use this
   script [[25]source] to install cuda:

   iframe: [26]/media/b174185d4b7037a95b957da9b148c973?postid=4a146f085f17

   you can use wget to pull the source gist and pipe into bash:
wget -o - -q '[27]https://gist.githubusercontent.com/allenday/f426e0f146d86bfc3d
ada06eda55e123/raw/41b6d3bc8ab2dfe1e1d09135851c8f11b8dc8db3/install-cuda.sh' | s
udo bash

   if cuda install is successful, running nvidia-smi will display a table
   describing an available tesla k80 gpu.
nvidia-smi

   iframe: [28]/media/9f7d60390ba1bb0f17b32665c6205fdb?postid=4a146f085f17

install docker(-engine) and nvidia-docker

   for docker, you need the docker-ce version from docker, not the package
   docker.io that ships with ubuntu. use this script derived from
   [[29]source].

   iframe: [30]/media/0c156046f40f60f457fcd8ad466813d2?postid=4a146f085f17

   or just use mine:
wget -o - -q '[31]https://gist.githubusercontent.com/allenday/c875eaf21a2b416f64
78c0a48e428f6a/raw/f7feca1acc1a992afa84f347394fd7e4bfac2599/install-docker-ce.sh
' | sudo bash

   then install nvidia-docker from a deb file [[32]source]:
wget [33]https://github.com/nvidia/nvidia-docker/releases/download/v1.0.1/nvidia
-docker_1.0.1-1_amd64.deb
sudo dpkg -i nvidia-docker*.deb

verify the gpu is visible from a docker container

   start nvidia-docker-plugin. must be run as root.
sudo nvidia-docker-plugin &

   iframe: [34]/media/41c5101e5d8dbf2a41d8b477d19ebfcd?postid=4a146f085f17

   now make sure the docker container can see the gpu:
sudo nvidia-docker run --rm nvidia/cuda nvidia-smi

   iframe: [35]/media/9f7d60390ba1bb0f17b32665c6205fdb?postid=4a146f085f17

   as shown above, you   ll get the same type of table you got when running
   nvidia-smi on the prompt without running inside a docker container.

[optional] create a snapshot volume

   if you followed along and ran the steps above, you may have noticed it
   took some time. when you   re running a gpu instance, it   s more costly.
   you can avoid having to repeat these steps and wasting time/money by
   snapshotting this working image and then booting up from it if you need
   a gpu enabled instance again later.

launch jupyter and tensorboard

sudo nvidia-docker run --rm --name tf1 -p 8888:8888 -p 6006:6006 gcr.io/tensorfl
ow/tensorflow:latest-gpu jupyter notebook --allow-root

   if the above command shows a line like:
http://localhost:8888/?token=c8caba947dfd4c97414447c074325faf399cf8a157d0ce2f

      you   re in business. find the external ip address of your gce instance
   and connect to it on port 8888, e.g. [36]http://external_ip:8888/, type
   in the (similar) token from your console, and you have a gpu enabled
   jupyter notebook running tensorflow.

see also

   [37]running tensorflow with docker and gpu
   medium.com
   [38]miniconda3, tensorflow, keras on google compute engine gpu
   instance: the step-by-step guide.
   after connecting to the instance with an ssh port redirect: ssh -l
   8889:localhost:8888 cpbotha@external_ip ...vxlabs.com

   [39]some rights reserved
     * [40]tensorflow
     * [41]data science
     * [42]artificial intelligence
     * [43]machine learning
     * [44]docker

   (button)
   (button)
   (button) 876 claps
   (button) (button) (button) 9 (button) (button)

     (button) blockedunblock (button) followfollowing
   [45]go to the profile of allen day

[46]allen day

     (button) follow
   [47]google cloud platform - community

[48]google cloud platform - community

   a collection of technical articles published or curated by google cloud
   platform developer advocates. the views expressed are those of the
   authors and don't necessarily reflect those of google.

     * (button)
       (button) 876
     * (button)
     *
     *

   [49]google cloud platform - community
   never miss a story from google cloud platform - community, when you
   sign up for medium. [50]learn more
   never miss a story from google cloud platform - community
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/4a146f085f17
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://medium.com/google-cloud/jupyter-tensorflow-nvidia-gpu-docker-google-compute-engine-4a146f085f17&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://medium.com/google-cloud/jupyter-tensorflow-nvidia-gpu-docker-google-compute-engine-4a146f085f17&source=--------------------------nav_reg&operation=register
   8. https://medium.com/google-cloud?source=logo-lo_6gaoeion4y0l---e52cf94d98af
   9. https://medium.com/google-cloud/weekly/home
  10. https://medium.com/google-cloud/tagged/kubernetes
  11. https://medium.com/google-cloud/tagged/google-compute-engine
  12. https://medium.com/google-cloud/tagged/google-app-engine
  13. https://medium.com/google-cloud/tagged/bigquery
  14. https://medium.com/google-cloud/tagged/machine-learning
  15. https://medium.com/google-cloud/tagged/iot
  16. https://cloud.google.com/blog/
  17. https://medium.com/@allenday?source=post_header_lockup
  18. https://medium.com/@allenday
  19. https://en.wikipedia.org/wiki/data_science
  20. http://jupyter.org/
  21. http://tensorflow.org/
  22. https://en.wikipedia.org/wiki/graphics_processing_unit
  23. https://cloud.google.com/container-engine/
  24. http://docker.com/
  25. https://cloud.google.com/compute/docs/gpus/add-gpus
  26. https://medium.com/media/b174185d4b7037a95b957da9b148c973?postid=4a146f085f17
  27. https://gist.githubusercontent.com/allenday/f426e0f146d86bfc3dada06eda55e123/raw/41b6d3bc8ab2dfe1e1d09135851c8f11b8dc8db3/install-cuda.sh
  28. https://medium.com/media/9f7d60390ba1bb0f17b32665c6205fdb?postid=4a146f085f17
  29. https://docs.docker.com/engine/installation/linux/ubuntu/
  30. https://medium.com/media/0c156046f40f60f457fcd8ad466813d2?postid=4a146f085f17
  31. https://gist.githubusercontent.com/allenday/c875eaf21a2b416f6478c0a48e428f6a/raw/f7feca1acc1a992afa84f347394fd7e4bfac2599/install-docker-ce.sh
  32. https://github.com/nvidia/nvidia-docker/releases/
  33. https://github.com/nvidia/nvidia-docker/releases/download/v1.0.1/nvidia-docker_1.0.1-1_amd64.deb
  34. https://medium.com/media/41c5101e5d8dbf2a41d8b477d19ebfcd?postid=4a146f085f17
  35. https://medium.com/media/9f7d60390ba1bb0f17b32665c6205fdb?postid=4a146f085f17
  36. http://external_ip:8888/,
  37. https://medium.com/@gooshan/for-those-who-had-trouble-in-past-months-of-getting-google-s-tensorflow-to-work-inside-a-docker-9ec7a4df945b
  38. https://vxlabs.com/2017/03/17/miniconda3-tensorflow-keras-on-google-compute-engine-gpu-instance-the-step-by-step-guide/
  39. https://creativecommons.org/licenses/by-sa/4.0/
  40. https://medium.com/tag/tensorflow?source=post
  41. https://medium.com/tag/data-science?source=post
  42. https://medium.com/tag/artificial-intelligence?source=post
  43. https://medium.com/tag/machine-learning?source=post
  44. https://medium.com/tag/docker?source=post
  45. https://medium.com/@allenday?source=footer_card
  46. https://medium.com/@allenday
  47. https://medium.com/google-cloud?source=footer_card
  48. https://medium.com/google-cloud?source=footer_card
  49. https://medium.com/google-cloud
  50. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  52. https://medium.com/@gooshan/for-those-who-had-trouble-in-past-months-of-getting-google-s-tensorflow-to-work-inside-a-docker-9ec7a4df945b
  53. https://vxlabs.com/2017/03/17/miniconda3-tensorflow-keras-on-google-compute-engine-gpu-instance-the-step-by-step-guide/
  54. https://medium.com/p/4a146f085f17/share/twitter
  55. https://medium.com/p/4a146f085f17/share/facebook
  56. https://medium.com/p/4a146f085f17/share/twitter
  57. https://medium.com/p/4a146f085f17/share/facebook
