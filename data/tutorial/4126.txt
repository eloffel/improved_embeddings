   [1]ideas [2]learning platform [3]conferences [4]shop
   search ____________________ submit
   [5]sign in

on our radar

   [6]ai
   [7]data
   [8]economy
   [9]operations
   [10]software architecture
   [11]software engineering
   [12]web programming
   [13]see all

   [14]ideas [15]learning platform [16]conferences [17]shop search
   ____________________ submit

on our radar

   [18]ai
   [19]data
   [20]economy
   [21]operations
   [22]software architecture
   [23]software engineering
   [24]web programming
   [25]see all

   [26]ai

                   how can i tokenize a sentence with python?

   learn how to tokenize, breaking a sentence down into its words and
   punctuation, using nltk and spacy.

   by [27]jonathan mugan

   april 18, 2017

   how can i tokenize a sentence with python? how can i tokenize a
   sentence with python? (source: [28]oreilly)

   learn more about common nlp tasks in the new video training course from
   jonathan mugan, [29]natural language text processing with python.

how do you tokenize a sentence?

id121 is breaking the sentence into words and punctuation, and it is
the first step to processing text. we will do id121 in both [30]nltk
and [31]spacy.

first, we will do id121 in the natural language toolkit (nltk).

the result of id121 is a list of tokens.

from nltk.tokenize import word_tokenize
text1 = "it's true that the chicken was the best bamboozler in the known multive
rse."
tokens = word_tokenize(text1)
print(tokens)

next, we will do id121 in spacy (spacy is a newish python nlp library
with great features).

from spacy.en import english
parser = english()
print(parser)

spacy keeps space tokens so you have to filter them out.

text1 = "i like statements that are both true and absurd."
tokens = parser(text1)
tokens = [token.orth_ for token in tokens if not token.orth_.isspace()]
print(tokens)

note for python 2: spacy requires unicode

   in python 2 you need to put u in front of strings, like this u"bob".

   or you need to convert my_string like this

   my_string_u = my_string.decode('utf-8',errors='ignore')

as an exercise, you can try to generate edge cases like the one below.

textu = "i'm mr. o'malley, and i love things, i.e., tacos etc."
tokens = parser(textu)
tokens = [token.orth_ for token in tokens if not token.orth_.isspace()]
print(tokens)

   article image: how can i tokenize a sentence with python? (source:
   [32]oreilly).
   tags: [33]questions

   share
    1. [34]tweet
    2.
    3.
     __________________________________________________________________

[35]jonathan mugan

   dr. mugan specializes in artificial intelligence and machine learning.
   his current research focuses in the area of deep learning, where he
   seeks to allow computers to acquire abstract representations that
   enable them to capture subtleties of meaning. dr. mugan received his
   ph.d. in computer science from the university of texas at austin. his
   thesis work was in the area of developmental robotics where he focused
   on the problem of how to build robots that can learn about the world in
   the same way that children do.
   [36]more
     __________________________________________________________________

   [37]bots landscape.

   [38]ai

[39]infographic: the bot platform ecosystem

   by [40]jon bruner

   a look at the artificial intelligence and messaging platforms behind
   the fast-growing chatbot community

   video
   [41]vertical forest, milan.

   [42]ai

[43]evolve ai

   by [44]naveen rao

   naveen rao explains how intel nervana is evolving the ai stack from
   silicon to the cloud.

   [45]welcome sign at o'reilly ai conference 2016

   [46]ai

[47]highlights from the o'reilly ai conference in new york 2016

   by [48]mac slocum

   watch highlights covering artificial intelligence, machine learning,
   intelligence engineering, and more. from the o'reilly ai conference in
   new york 2016.

   video
   [49]close up of uber's self driving car in pittsburgh.

   [50]ai

[51]how ai is propelling driverless cars, the future of surface transport

   by [52]shahin farshchi

   shahin farshchi examines role artificial intelligence will play in
   driverless cars.

about us

     * [53]our company
     * [54]teach/speak/write
     * [55]careers
     * [56]customer service
     * [57]contact us

site map

     * [58]ideas
     * [59]learning
     * [60]topics
     * [61]all

     *
     *
     *
     *
     *

      2019 o'reilly media, inc. all trademarks and registered trademarks
   appearing on oreilly.com are the property of their respective owners.
   [62]terms of service     [63]privacy policy     [64]editorial independence

   animal

   iframe: [65]https://www.googletagmanager.com/ns.html?id=gtm-5p4v6z

references

   visible links
   1. https://www.oreilly.com/ideas
   2. https://learning.oreilly.com/
   3. http://www.oreilly.com/conferences/
   4. http://shop.oreilly.com/
   5. https://www.oreilly.com/sign-in.html
   6. https://www.oreilly.com/topics/ai
   7. https://www.oreilly.com/topics/data
   8. https://www.oreilly.com/topics/economy
   9. https://www.oreilly.com/topics/operations
  10. https://www.oreilly.com/topics/software-architecture
  11. https://www.oreilly.com/topics/software-engineering
  12. https://www.oreilly.com/topics/web-programming
  13. https://www.oreilly.com/topics
  14. https://www.oreilly.com/ideas
  15. https://learning.oreilly.com/
  16. http://www.oreilly.com/conferences/
  17. http://shop.oreilly.com/
  18. https://www.oreilly.com/topics/ai
  19. https://www.oreilly.com/topics/data
  20. https://www.oreilly.com/topics/economy
  21. https://www.oreilly.com/topics/operations
  22. https://www.oreilly.com/topics/software-architecture
  23. https://www.oreilly.com/topics/software-engineering
  24. https://www.oreilly.com/topics/web-programming
  25. https://www.oreilly.com/topics
  26. https://www.oreilly.com/topics/ai
  27. https://www.oreilly.com/people/e95f6-jonathan-mugan
  28. https://www.oreilly.com/
  29. https://www.safaribooksonline.com/library/view/natural-language-text/9781491976487/
  30. http://www.nltk.org/
  31. https://spacy.io/
  32. https://www.oreilly.com/
  33. https://www.oreilly.com/tags/question-series
  34. https://twitter.com/share
  35. https://www.oreilly.com/people/e95f6-jonathan-mugan
  36. https://www.oreilly.com/people/e95f6-jonathan-mugan
  37. https://www.oreilly.com/ideas/infographic-the-bot-platform-ecosystem
  38. https://www.oreilly.com/topics/ai
  39. https://www.oreilly.com/ideas/infographic-the-bot-platform-ecosystem
  40. https://www.oreilly.com/people/b1d73-jon-bruner
  41. https://www.oreilly.com/ideas/evolve-ai
  42. https://www.oreilly.com/topics/ai
  43. https://www.oreilly.com/ideas/evolve-ai
  44. https://www.oreilly.com/people/14d38-naveen-rao
  45. https://www.oreilly.com/ideas/keynotes-from-ai-new-york-2016
  46. https://www.oreilly.com/topics/ai
  47. https://www.oreilly.com/ideas/keynotes-from-ai-new-york-2016
  48. https://www.oreilly.com/people/0d2c1-mac-slocum
  49. https://www.oreilly.com/ideas/how-ai-is-propelling-driverless-cars-the-future-of-surface-transport
  50. https://www.oreilly.com/topics/ai
  51. https://www.oreilly.com/ideas/how-ai-is-propelling-driverless-cars-the-future-of-surface-transport
  52. https://www.oreilly.com/people/c7521-shahin-farshchi
  53. http://oreilly.com/about/
  54. http://oreilly.com/work-with-us.html
  55. http://oreilly.com/careers/
  56. http://shop.oreilly.com/category/customer-service.do
  57. http://shop.oreilly.com/category/customer-service.do
  58. https://www.oreilly.com/ideas
  59. https://www.oreilly.com/topics/oreilly-learning
  60. https://www.oreilly.com/topics
  61. https://www.oreilly.com/all
  62. http://oreilly.com/terms/
  63. http://oreilly.com/privacy.html
  64. http://www.oreilly.com/about/editorial_independence.html
  65. https://www.googletagmanager.com/ns.html?id=gtm-5p4v6z

   hidden links:
  67. https://www.oreilly.com/
  68. https://www.facebook.com/oreilly/
  69. https://twitter.com/oreillymedia
  70. https://www.youtube.com/user/oreillymedia
  71. https://plus.google.com/+oreillymedia
  72. https://www.linkedin.com/company/oreilly-media
  73. https://www.oreilly.com/
