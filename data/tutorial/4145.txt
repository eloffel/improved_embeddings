   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    text classification & word representations using
   fasttext (an nlp library by facebook) comments feed [4]alternate
   [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]machine learning [94]text classification & word
   representations using fasttext (an nlp library by facebook)

   [95]machine learning[96]nlp

text classification & word representations using fasttext (an nlp library by
facebook)

   [97]nss, july 14, 2017

introduction

   if you put a status update on facebook about purchasing a car     don   t
   be surprised if facebook serves you a car ad on your screen. this is
   not black magic! this is facebook leveraging the text data to serve you
   better ads.

   the picture below takes a jibe at a challenge while dealing with text
   data.

   facebook ad serving using nlp

   well, it clearly failed in the above attempt to deliver the right ad.
   it is all the more important to capture the context in which the word
   has been used. this is a common problem in natural processing language
   (nlp) tasks.

   a single word with the same spelling and pronunciation (homonyms) can
   be used in multiple contexts and a potential solution to the above
   problem is computing word representations.

   now, imagine the challenge for facebook. facebook deals with enormous
   amount of text data on a daily basis in the form of status updates,
   comments etc. and it is all the more important for facebook to utilise
   this text data to serve its users better. and using this text data
   generated by billions of users to compute word representations was a
   very time expensive task until facebook developed their own library
   fasttext, for word representations and text classification.

   in this article, we will see how we can calculate word representations
   and perform text classification, all in a matter of seconds in
   comparison to the existing methods which took days to achieve the same
   performance.


table of contents

    1. what is fasttext?
    2. installation
    3. implementation
          + learning word representations
          + text classification
    4. pros and cons
    5. end notes


what is fasttext?

   fasttext is a library created by the facebook research team for
   efficient learning of word representations and sentence classification.

   uses of fasttext

   this library has gained a lot of traction in the nlp community and is a
   possible substitution to the gensim package which provides the
   functionality of word vectors etc. if you are new to the word vectors
   and word representations in general then, i suggest you read [98]this
   article first.

   but the question that we should be really asking is     how is fasttext
   different from gensim word vectors?

   fasttext differs in the sense that word vectors a.k.a id97 treats
   every single word as the smallest unit whose vector representation is
   to be found but fasttext assumes a word to be formed by a id165s of
   character, for example, sunny is composed of [sun,
   sunn,sunny],[sunny,unny,nny]  etc, where n could range from 1 to the
   length of the word. this new representation of word by fasttext
   provides the following benefits over id97 or glove.
    1. it is helpful to find the vector representation for rare words.
       since rare words could still be broken into character id165s, they
       could share these id165s with the common words. for example, for a
       model trained on a news dataset, the medical terms eg: diseases can
       be the rare words. common and rare words for a nlp task
    2. it can give the vector representations for the words not present in
       the dictionary (oov words) since these can also be broken down into
       character id165s. id97 and glove both fail to provide any
       vector representations for words not in the dictionary.
       for example, for a word like stupedofantabulouslyfantastic, which
       might never have been in any corpus, gensim might return any two of
       the following solutions     a) a zero vector    or      b) a random
       vector with low magnitude. but fasttext can produce vectors better
       than random by breaking the above word in chunks and using the
       vectors for those chunks to create a final vector for the word. in
       this particular case, the final vector might be closer to the
       vectors of fantastic and fantabulous.
    3. character id165s embeddings tend to perform superior to id97
       and glove on smaller datasets.

   we will now look at the steps to install the fasttext library below.


installation

   to make full use of the fasttext library, please make sure you have the
   following requirements satisfied:
    1. os     macos or linux
    2. c++ complier     gcc or clang
    3. python 2.6+, numpy and scipy.

   if you do not have the above pre-requisites, i urge you to go ahead and
   install the above dependencies first.

   to install fasttext, type the code below-
    1. git clone https://github.com/facebookresearch/fasttext.git
    2. cd fasttext
    3. make

   you can check whether fasttext has been properly installed by typing
   the below command inside the fasttext folder.
   ./fasttext

   if everything was installed correctly then, you should see the list of
   available commands for fasttext as the output.


implementation

   as stated earlier, fasttext was designed for two specific purposes-
   word representation learning and text classification. we will see each
   of these steps in detail. let us get started with learning word
   representations.


learning word representations

   words in their natural form cannot be used for any machine learning
   task in general. one way to use the words is to transform these words
   into some representations that capture some attributes of the word. it
   is analogous to describing a person as     [   height   :5.10 ,   weight   :75,
      colour   :   dusky   , etc.] where height, weight etc are the attributes of
   the person. similarly, word representations capture some abstract
   attributes of words in the manner that similar words tend to have
   similar word representations. there are primarily two methods used to
   develop word vectors     skipgram and cbow.

   we will see how we can implement both these methods to learn vector
   representations for a [99]sample text file using fasttext.

   learning word representations using skipgram and cbow models
    1.  skipgram
       ./fasttext skipgram -input file.txt -output model
    2. cbow
       ./fasttext cbow -input file.txt -output model

   let us see the parameters defined above in steps for easy
   understanding.

   ./fasttext     it is used to invoke the fasttext library.
   skipgram/cbow     it is where you specify whether skipgram or cbow is to
   be used to create the word representations.
   -input     this is the name of the parameter which specifies the
   following word to be used as the name of the file used for training.
   this argument should be used as is.
   data.txt     a sample text file over which we wish to train the skipgram
   or cbow model. change this name to the name of the text file you have.
   -output     this is the name of the parameter which specifies the
   following word to be used as the name of the model being created. this
   argument is to be used as is.
   model     this is the name of the model created.

   running the above command will create two files named model.bin and
   model.vec. model.bin contains the model parameters, dictionary and the
   hyperparameters and can be used to compute word vectors. model.vec is a
   text file that contains the word vectors for one word per line.

   now since we have created our own word vectors let   s see if we can do
   some common tasks like print word vectors for a word, find similar
   words, analogies etc. using these word vectors.


   print word vectors of a word

   in order to get the word vectors for a word or set of words, save them
   in a text file. for example, here is a sample [100]text file named
   queries.txt that contains some random words. we will get the vector
   representation of these words using the model we trained above.

   ./fasttext print-word-vectors model.bin < queries.txt

   to check word vectors for a single word without saving into a file, you
   can do

   echo "word" | ./fasttext print-word-vectors model.bin


   finding similar words

   you can also find the words most similar to a given word. this
   functionality is provided by the nn parameter. let   s see how we can
   find the most similar words to    happy   .

   ./fasttext nn model.bin

   after typing the above command, the terminal will ask you to input a
   query word.

   happy

   by 0.183204
   be 0.0822266
   training 0.0522333
   the 0.0404951
   similar 0.036328
   and 0.0248938
   the 0.0229364
   word 0.00767293
   that 0.00138793
   syntactic -0.00251774

   the above is the result returned for the most similar words to
   happy. interestingly, this feature could be used to correct spellings
   too. for example, when you enter a wrong spelling, it shows the correct
   spelling of the word if it occurred in the training file.

   wrd

   word 0.481091
   words. 0.389373
   words 0.370469
   id97 0.354458
   more 0.345805
   and 0.333076
   with 0.325603
   in 0.268813
   id97 0.26591
   or 0.263104


   analogies

   fasttext word vectors can also be used on analogies task of the kind,
   what is to c, what b is to a. here, a, b and c are the words.

   the analogies functionality is provided by the parameter analogies.
   let   s see this with the help of an example.

   ./fasttext analogies model.bin

   the above command will ask to input the words in the form a-b+c, but we
   just need to give three words separated by space.

   happy sad angry

   of 0.199229
   the 0.187058
   context 0.158968
   a 0.151884
   as 0.142561
   the 0.136407
   or 0.119725
   on 0.117082
   and 0.113304
   be 0.0996916

   training on a very large corpus will produce better results.


text classification

   as suggested by the name, text classification is tagging each document
   in the text with a particular class. id31 and email
   classification are classic examples of text classification. in this era
   of technology, millions of digital documents are being generated each
   day. it would cost a huge amount of time as well as human efforts to
   categorise them in reasonable categories like spam and non-spam,
   important and unimportant and so on. text classification techniques of
   nlp come here to our rescue. let   s see how by doing hands-on practice
   based on a id31 problem. i have taken the data for this
   analysis from [101]kaggle.

   before we jump upon the execution, there is a word of caution about the
   training file. the default format of text file on which we want to
   train our model should be    _ _ label _ _ <x>  <text>

   where _ _label_ _ is a prefix to the class and <x> is the class
   assigned to the document. also, there should not be quotes around the
   document and everything in one document should be on one line.

   sample fasttext file format
   in fact, the reason why i have selected this data for this article is
   that the data is already available exactly in the required default
   format.if you are completely new to fasttext and implementing text
   classification for very first time in fasttext, i would strongly
   recommend using the data mentioned above.

   in case your data has some other formats of the label, don   t be
   bothered. fasttext will take care of it once you pass a suitable
   argument. we will see how to do it in a moment. just stick to the
   article.

   after this briefing about text classification, let   s move ahead and
   land on the implementation part. we will be using the train.ft text
   file to train the model and test.ft file to predict.

   #training the classifier
   ./fasttext supervised -input train.ft.txt -output model_kaggle -label
   __label__

   here, the parameters are same as the one mentioned while creating word
   representations. the only additional parameter is -label. this argument
   takes care of the format of the label specified. the file that you
   downloaded contains labels with the prefix __label__.

   if you do not wish to use default parameters for training the model,
   then they can be specified during the training time. for example, if
   you explicitly want to specify the learning rate of the training
   process then you can use the argument -lr to specify the learning rate.

   ./fasttext supervised -input train.ft.txt -output model_kaggle -label
   __label__ -lr 0.5

   the other available parameters that can be tuned are    
     * -lr : learning rate [0.1]
     * -lrupdaterate : change the rate of updates for the learning rate
       [100]
     * -dim : size of word vectors [100]
     * -ws : size of the context window [5]
     * -epoch : number of epochs [5]
     * -neg : number of negatives sampled [5]
     * -loss : id168 {ns, hs, softmax} [ns]
     * -thread : number of threads [12]
     * -pretrainedvectors : pretrained word vectors for supervised
       learning []
     * -saveoutput : whether output params should be saved [0]

   the values in the square brackets [] represent the default values of
   the parameters passed.

   # testing the result
   ./fasttext test model_kaggle.bin test.ft.txt

   n 400000
   [102][email protected] 0.916
   [103][email protected] 0.916

   number of examples: 400000
   [104][email protected] is the precision
   [105][email protected] is the recall

   # predicting on the test dataset
   ./fasttext predict model_kaggle.bin test.ft.txt

   # predicting the top 3 labels
   ./fasttext predict model_kaggle.bin test.ft.txt 3


computing sentence vectors (supervised)

   this model can also be used for computing the sentence vectors. let us
   see how we can compute the sentence vectors by using the following
   commands.

   echo "this is a sample sentence" | ./fasttext print-sentence-vectors
   model_kaggle.bin
   0.008204 0.016523 -0.028591 -0.0019852 -0.0043028 0.044917 -0.055856
   -0.057333 0.16713 0.079895 0.0034849 0.052638 -0.073566 0.10069
   0.0098551 -0.016581 -0.023504 -0.027494 -0.070747 -0.028199 0.068043
   0.082783 -0.033781 0.051088 -0.024244 -0.031605 0.091783 -0.029228
   -0.017851 0.047316 0.013819 0.072576 -0.004047 -0.10553 -0.12998
   0.021245 0.0019761 -0.0068286 0.021346 0.012595 0.0016618 0.02793
   0.0088362 0.031308 0.035874 -0.0078695 0.019297 0.032703 0.015868
   0.025272 -0.035632 0.031488 -0.027837 0.020735 -0.01791 -0.021394
   0.0055139 0.009132 -0.0042779 0.008727 -0.034485 0.027236 0.091251
   0.018552 -0.019416 0.0094632 -0.0040765 0.012285 0.0039224 -0.0024119
   -0.0023406 0.0025112 -0.0022772 0.0010826 0.0006142 0.0009227 0.016582
   0.011488 0.019017 -0.0043627 0.00014679 -0.003167 0.0016855 -0.002838
   0.0050221 -0.00078066 0.0015846 -0.0018429 0.0016942 -0.04923 0.056873
   0.019886 0.043118 -0.002863 -0.0087295 -0.033149 -0.0030569 0.0063657
   0.0016887 -0.0022234


pros and cons of fasttext

   like every library in development, it has its pros and cons. let us
   state them explicitly.

pros

    1. the library is surprisingly very fast in comparison to other
       methods for achieving the same accuracy. here is the result
       published by the facebook research team in support of the argument.
       comparison of fasttext with other word representation models
    2. sentence vectors(supervised) can be easily computed.
    3. fasttext works better on small datasets in comparison to gensim.
    4. fasttext performs superior to gensim in terms of syntactic
       performance and fairs equally well in case of semantic performance.

cons

    1. this is not a standalone library for nlp since it will require
       another library for the pre-processing steps.
    2. though, this library has a python implementation. it is not
       officially supported.


projects

   now, its time to take the plunge and actually play with some other real
   datasets. so are you ready to take on the challenge? accelerate your
   nlp journey with the following practice problems:
   [106]practice problem: identify the sentiments identify the sentiment
   of tweets
   [107]practice problem : twitter id31 to detect hate
   speech in tweets


end notes

   this article was aimed at making you aware of the fasttext library as
   an alternative to the id97 model and also letting you make your
   first vector representation and text classification model.

   for people who want to go in greater depth of the difference in
   performance of fasttext and gensim, you can visit [108]this link, where
   a researcher has carried out the comparison using a jupyter notebook
   and some standard text datasets.

   please feel free to try out this library and share your experiences in
   the comment below.

[109]learn, [110]engage, [111]compete & [112]get hired

   you can also read this article on analytics vidhya's android app
   [113]get it on google play

share this:

     * [114]click to share on linkedin (opens in new window)
     * [115]click to share on facebook (opens in new window)
     * [116]click to share on twitter (opens in new window)
     * [117]click to share on pocket (opens in new window)
     * [118]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [119]facebook, [120]fasttext, [121]natural language processing,
   [122]nlp, [123]id27, [124]id97, [125]wordvectors
   next article

debugging & visualising training of neural network with tensorboard

   previous article

chief risk officer- mumbai (5-7 years of experience)

[126]nss

   i am a perpetual, quick learner and keen to explore the realm of data
   analytics and science. i am deeply excited about the times we live in
   and the rate at which data is being generated and being transformed as
   an asset. i am well versed with a few tools for dealing with data and
   also in the process of learning some other tools and knowledge required
   to exploit data.
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [127]discussion portal to get your queries resolved

3 comments

     * sujatha sivaraman says:
       [128]july 14, 2017 at 2:14 pm
       very good article which gives you a good insight on fasttext
       [129]reply
     * sushant kulkarni says:
       [130]july 14, 2017 at 3:23 pm
          ./fasttext print-word-vectors model.bin > queries.txt    should have
       been    ./fasttext print-word-vectors model.bin < queries.txt".
       source     [131]https://github.com/facebookresearch/fasttext
       [132]reply
          + nss says:
            [133]july 14, 2017 at 3:26 pm
            yes, thanks for bringing it to the notice. corrected.
            [134]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-05] [135]srk       3924
   2    [2.jpg?date=2019-04-05] [136]mark12    3510
   3    [3.jpg?date=2019-04-05] [137]nilabha   3261
   4    [4.jpg?date=2019-04-05] [138]nitish007 3237
   5    [5.jpg?date=2019-04-05] [139]tezdhar   3082
   [140]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [141]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [142]understanding support vector machine algorithm from examples
       (along with code)
     * [143]essentials of machine learning algorithms (with python and r
       codes)
     * [144]a complete tutorial to learn data science with python from
       scratch
     * [145]7 types of regression techniques you should know!
     * [146]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [147]a simple introduction to anova (with applications in excel)
     * [148]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [149]top 5 machine learning github repositories and reddit discussions
   from march 2019

[150]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [151]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[152]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [153]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[154]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [155]16 opencv functions to start your id161 journey (with
   python code)

[156]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [157][ds-finhack.jpg]

   [158][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [159]about us
     * [160]our team
     * [161]career
     * [162]contact us
     * [163]write for us

   [164]about us
   [165]   
   [166]our team
   [167]   
   [168]careers
   [169]   
   [170]contact us

data scientists

     * [171]blog
     * [172]hackathon
     * [173]discussions
     * [174]apply jobs
     * [175]leaderboard

companies

     * [176]post jobs
     * [177]trainings
     * [178]hiring hackathons
     * [179]advertising
     * [180]reach us

   don't have an account? [181]sign up here.

join our community :

   [182]46336 [183]followers
   [184]20224 [185]followers
   [186]followers
   [187]7513 [188]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [189]privacy policy
     * [190]terms of use
     * [191]refund policy

   don't have an account? [192]sign up here

   iframe: [193]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [194](button) join now

   subscribe!

   iframe: [195]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [196](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/machine-learning/
  94. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
  95. https://www.analyticsvidhya.com/blog/category/machine-learning/
  96. https://www.analyticsvidhya.com/blog/category/nlp/
  97. https://www.analyticsvidhya.com/blog/author/nss/
  98. https://www.analyticsvidhya.com/blog/2017/06/word-embeddings-count-word2veec/
  99. https://drive.google.com/file/d/0b8kcsmd4qar7sc1wv3n2c1n3tke/view?usp=sharing
 100. https://docs.google.com/document/d/1_0uouon8f-omp7vwsbqrwvei4kbp1uizui6xapqhgee/edit?usp=sharing
 101. https://www.kaggle.com/bittlingmayer/amazonreviews
 102. https://www.analyticsvidhya.com/cdn-cgi/l/email-protection
 103. https://www.analyticsvidhya.com/cdn-cgi/l/email-protection
 104. https://www.analyticsvidhya.com/cdn-cgi/l/email-protection
 105. https://www.analyticsvidhya.com/cdn-cgi/l/email-protection
 106. https://datahack.analyticsvidhya.com/contest/linguipedia-codefest-natural-language-processing-1/?utm_source=word-representations-text-classification-using-fasttext-nlp-facebook&utm_medium=blog
 107. https://datahack.analyticsvidhya.com/contest/practice-problem-twitter-sentiment-analysis/?utm_source=word-representations-text-classification-using-fasttext-nlp-facebook&utm_medium=blog
 108. https://rare-technologies.com/fasttext-and-gensim-word-embeddings/
 109. https://www.analyticsvidhya.com/blog/
 110. https://discuss.analyticsvidhya.com/
 111. https://datahack.analyticsvidhya.com/contest/all/
 112. http://analyticsvidhya.com/jobs
 113. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 114. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/?share=linkedin
 115. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/?share=facebook
 116. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/?share=twitter
 117. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/?share=pocket
 118. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/?share=reddit
 119. https://www.analyticsvidhya.com/blog/tag/facebook/
 120. https://www.analyticsvidhya.com/blog/tag/fasttext/
 121. https://www.analyticsvidhya.com/blog/tag/natural-language-processing/
 122. https://www.analyticsvidhya.com/blog/tag/nlp/
 123. https://www.analyticsvidhya.com/blog/tag/word-embedding/
 124. https://www.analyticsvidhya.com/blog/tag/id97/
 125. https://www.analyticsvidhya.com/blog/tag/wordvectors/
 126. https://www.analyticsvidhya.com/blog/author/nss/
 127. https://discuss.analyticsvidhya.com/
 128. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/#comment-132114
 129. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/#comment-132114
 130. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/#comment-132116
 131. https://github.com/facebookresearch/fasttext
 132. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/#comment-132116
 133. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/#comment-132117
 134. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/#comment-132117
 135. https://datahack.analyticsvidhya.com/user/profile/srk
 136. https://datahack.analyticsvidhya.com/user/profile/mark12
 137. https://datahack.analyticsvidhya.com/user/profile/nilabha
 138. https://datahack.analyticsvidhya.com/user/profile/nitish007
 139. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 140. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 141. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 142. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 143. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 144. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 145. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 146. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 147. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 148. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 149. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 150. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 151. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 152. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 153. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 154. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 155. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 156. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 157. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 158. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 159. http://www.analyticsvidhya.com/about-me/
 160. https://www.analyticsvidhya.com/about-me/team/
 161. https://www.analyticsvidhya.com/career-analytics-vidhya/
 162. https://www.analyticsvidhya.com/contact/
 163. https://www.analyticsvidhya.com/about-me/write/
 164. http://www.analyticsvidhya.com/about-me/
 165. https://www.analyticsvidhya.com/about-me/team/
 166. https://www.analyticsvidhya.com/about-me/team/
 167. https://www.analyticsvidhya.com/about-me/team/
 168. https://www.analyticsvidhya.com/career-analytics-vidhya/
 169. https://www.analyticsvidhya.com/about-me/team/
 170. https://www.analyticsvidhya.com/contact/
 171. https://www.analyticsvidhya.com/blog
 172. https://datahack.analyticsvidhya.com/
 173. https://discuss.analyticsvidhya.com/
 174. https://www.analyticsvidhya.com/jobs/
 175. https://datahack.analyticsvidhya.com/users/
 176. https://www.analyticsvidhya.com/corporate/
 177. https://trainings.analyticsvidhya.com/
 178. https://datahack.analyticsvidhya.com/
 179. https://www.analyticsvidhya.com/contact/
 180. https://www.analyticsvidhya.com/contact/
 181. https://datahack.analyticsvidhya.com/signup/
 182. https://www.facebook.com/analyticsvidhya/
 183. https://www.facebook.com/analyticsvidhya/
 184. https://twitter.com/analyticsvidhya
 185. https://twitter.com/analyticsvidhya
 186. https://plus.google.com/+analyticsvidhya
 187. https://in.linkedin.com/company/analytics-vidhya
 188. https://in.linkedin.com/company/analytics-vidhya
 189. https://www.analyticsvidhya.com/privacy-policy/
 190. https://www.analyticsvidhya.com/terms/
 191. https://www.analyticsvidhya.com/refund-policy/
 192. https://id.analyticsvidhya.com/accounts/signup/
 193. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 194. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 195. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 196. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 198. https://www.facebook.com/analyticsvidhya
 199. https://twitter.com/analyticsvidhya
 200. https://plus.google.com/+analyticsvidhya/posts
 201. https://in.linkedin.com/company/analytics-vidhya
 202. https://datahack.analyticsvidhya.com/contest/linguipedia-codefest-natural-language-processing-1/?utm_source=word-representations-text-classification-using-fasttext-nlp-facebook&utm_medium=blog
 203. https://datahack.analyticsvidhya.com/contest/practice-problem-twitter-sentiment-analysis/?utm_source=word-representations-text-classification-using-fasttext-nlp-facebook&utm_medium=blog
 204. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
 205. https://www.analyticsvidhya.com/blog/2017/07/chief-risk-officer-mumbai-5-7-years-of-experience/
 206. https://www.analyticsvidhya.com/blog/author/nss/
 207. https://in.linkedin.com/in/neeraj-singh-sarwan-a84b6965
 208. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 209. https://www.facebook.com/analyticsvidhya/
 210. https://twitter.com/analyticsvidhya
 211. https://plus.google.com/+analyticsvidhya
 212. https://plus.google.com/+analyticsvidhya
 213. https://in.linkedin.com/company/analytics-vidhya
 214. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 215. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 216. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 217. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 218. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 219. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 220. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 221. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 222. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 223. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 224. javascript:void(0);
 225. javascript:void(0);
 226. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 227. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 228. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 229. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 230. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 231. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 232. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 233. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 234. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 235. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fword-representations-text-classification-using-fasttext-nlp-facebook%2f&linkname=word%20representations%20%26amp%3b%20text%20classification%20using%20fasttext%20%28facebook%20lib%29
 236. javascript:void(0);
 237. javascript:void(0);
