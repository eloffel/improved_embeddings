   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    debugging & visualising training of neural
   network with tensorboard comments feed [4]alternate [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]deep learning [94]debugging & visualising training of
   neural network with tensorboard

   [95]deep learning[96]python

debugging & visualising training of neural network with tensorboard

   [97]faizan shaikh, july 17, 2017

introduction

   i started my deep learning journey a few years back. i have learnt a
   lot in this period. but, even after all these efforts, every neural
   network i train provides me with a new experience.

   if you have tried to train a neural network, you must know my plight!

   but, through all this time, i have now made a workflow, which i will
   share with you today.

   i am sharing my learning / experience about building neural network
   with all of you.

   i cannot guarantee it will work all the time, but at least it may guide
   you as to how would you approach to solve the problem.  i will also
   share with you a tool which i find is a useful addition to the deep
   learning toolbox     tensorboard.


   p.s.: this article assumes that you know the basics of building a
   neural network and have a fair degree of knowledge about keras. if not,
   i would recommend going through these articles first and then come back
   to this article.
     * [98]fundamentals of deep learning     starting with artificial neural
       network
     * [99]tutorial: optimizing neural networks using keras (with image
       recognition case study)
     * [100]understanding and coding neural networks from scratch in
       python and r


table of contents

     * training a neural network : a boon or a curse?
     * solving age detection problem with neural networks
     * intermission: an overview of tensorboard
     * back to solving the problem
     * conclusion
     * useful resources


training a neural network: a boon or a curse?

   training a neural network is usually a high risk     high reward
   strategy. if you have tuned it right, you could potentially have a
   state-of-the-art working model for the task.

   just to give an example, image generation is a recent breakthrough of
   neural networks. with just a few strokes of artificial brush, you can
   create an authentic looking image of natural scenes.

   [101]source

   but on the other hand, it is extremely difficult to train a generative
   neural network. you would have to go through a rigorous trial and error
   phase to get things right.

   i had to go through a similar experience of training a neural network
   few days back when trying to build a working model for [102]age
   detection problem. when i made my first model for the problem, it
   absolutely refused to train.  in this article, i will share my approach
   of how i debugged the neural network. stay tuned, because there   s a
   happy ending!


solving age detection problem with neural networks

   before jumping on to solve the problem, let me give an overview of what
   the problem was.

   [103]age detection of indian actors is a recently released practice
   problem which deals with extracting facial features for age analysis.
   as this is a image processing problem, i naturally jumped on to picking
   up neural networks to solve the problem. but as i said earlier, the
   network would not train. there was no change in the accuracy rates
   whatsoever, even when i let it train for more than an hour for 200
   iterations. here   s a proof!

   clearly this was not working!

   now, my years of experience came in handy!      the steps which i mention
   below are those which i usually follow when i   m stuck with this kind of
   problem. if you carefully consider, there may be two major reasons by
   which your neural network may not work correctly    
    1. your neural network architecture is incorrect
    2. there   s something wrong with the data you are giving to the network

   let   s go through these reasons one by one and eliminate the improbable.


testing the neural network architecture

step 1: check the architecture

   the first thing you should check when building a neural network is
   whether you have defined the architecture properly. here we have a
   three class problem with varying sizes of images in the dataset. to
   simplify things, i converted all the images to size 32  32.
temp = []
for img_name in train.id:
    img_path = os.path.join(data_dir, 'train', img_name)
    img = imread(img_path)
    img = imresize(img, (32, 32))
    temp.append(img.astype('float32'))

train_x = np.stack(temp)

   so according to this, i had defined the architecture as follows
# define vars
input_num_units = 32 * 32 * 3 # image is 3d (rgb) that is why multiply by 3
hidden_num_units = 500
output_num_units = 3

epochs = 50
batch_size = 128
model = sequential([
    inputlayer(input_shape=(input_num_units,)),

    dense(units=hidden_num_units, activation='relu'),

    dense(units=output_num_units, activation='softmax'),
])

   i don   t see any issue in the architecture of neural network.


step 2: check the hyper-parameters of neural network

   according to me, this is the most important step when dealing with
   neural network. its because there are so many parameters to tune that
   it may sometimes be frustrating to try them all. (p.s.: i did a survey
   of hyper-parameters  and how to tune them in [104]this article)

   fortunately, i had used a very simple neural network with only one
   hidden layer trained with classical id119 algorithm (sgd).
model.compile(optimizer='sgd', loss='categorical_crossid178', metrics=['accura
cy'])

   here is a thing to look out for; it is said that when you train a
   neural network with sgd, it may train slowly. to overcome this, we can
   use adaptive id119 to train the network faster.
model.compile(optimizer='adam', loss='categorical_crossid178', metrics=['accur
acy'])

   but the thing was, even on changing the training algorithm from sgd to
   adam (aka adaptive id119), the network did not train. this
   simply meant that something was fundamentally wrong with the network. i
   had to pull thor   s hammer to break through this problem!


intermission: an overview of tensorboard

   throughout my journey of understanding the neural network, i have gone
   through a number of tools for building and visualizing a neural
   network. of all of them, i have found tensorboard to be an important
   asset. it can give you useful insight when training a neural network.

   along with this, it gives a nice dashboard like view of the findings,
   which is very important when explaining your findings to the
   stakeholders      the image you saw above of a proof was a dashboard of
   tensorboard itself.

   i will mention the steps for how to install tensorboard in your system.
   i suggest you to try it out for yourself.

   you can install tensorboard using pip the python package manager
pip install tensorboard

   after installation you can open tensorboard by going to the terminal
   and typing
tensorboard --logdir=logs/

   here   s a view of how it would look on the browser


   the    logs/    folder mentioned above should have the history of how the
   neural network was trained. you can simply get this by including a
   tensorboard callback in keras
model.fit(train_x, train_y, batch_size=batch_size,epochs=epochs,verbose=1, valid
ation_split=0.2, callbacks=[keras.callbacks.tensorboard(log_dir="logs/final/{}".
format(time()), histogram_freq=1, write_graph=true, write_images=true)])

   in this example, i have passed all the arguments so that everything
   gets saved. the meaning of the arguments are as follows:
     * write_graph: print the graph of neural network as defined
       internally.
     * write_images: create an image by combining the weight of neural
       network
     * histogram_freq: plot the distributions of weights and biases in the
       neural network


back to solving the problem

step 3: check the complexity of network

   coming back from our short excursion, the next thing i tried was to
   check if the network i had built was enough to learn the distributions
   of the problem or not. for this, instead of a simple neural network i
   changed the architecture to a convolutional neural network. the effect
   was that the accuracy increased drastically from the beginning (from
   33% to 54%). but still it remained constant even after training.

   it seemed that our little experiment failed     


testing the data

step 4: check the structure of input data

   after thoroughly checking the network architecture, it was time to
   check if we have the proper dataset itself.

   a few things to check are:
     * if all the records are of same size?

   as discussed in step 1, we have already ensured that the images are of
   same size before sending it to the network, so that   s out of question.
     * if the problem is imbalanced or not?

   the dataset is not that imbalanced, as we still have ample amount of
   images per class
middle    0.542751
young     0.336883
old       0.120366
     * if proper preprocessing is done or not?

   here we should check if we have a properly processed input. for example
   in an image processing problem, if we processed the image and the
   resultant input has irregular aspect ratios, the neural network would
   obviously be flummoxed by it.

   here as it was a simple network, we haven   t really done any
   preprocessing steps. so that   s out of question too.


step 5: check the distribution of data

   having exhausted most of the problems that we might encounter, i was
   getting a bit frustrated as to what might be the real problem. luckily
   my journey came to an end, as i found a weird bug which i should have
   caught on much earlier.

   the problem was that the input data i was sending to the network had a
   range of 0 to 255. ideally this range should be between 0 and 1. the
   distribution of input data looked as below:

   let me explain to you why normalizing (setting the range from 0 to 1)
   is important (as i have personally gone through the trouble of finding
   what is it so      )

   [prepro1.jpeg]

   [105]source

   you can see that if your data is does not have a simple distribution,
   the neural network might find it hard to learn this distribution. it
   will surely try to converge, but it won   t guarantee complete
   convergence. an extended version of this concept is batch
   id172, which ensures the data is normalized after a layer of
   neural network. [106]this paper covers in-depth analysis of how batch
   id172 helps train a neural network better.

   here   s the code i used to read images and normalize them.
temp = []
for img_name in train.id:
    img_path = os.path.join(data_dir, 'train', img_name)
    img = imread(img_path)
    img = imresize(img, (32, 32))
    temp.append(img.astype('float32'))

train_x = np.stack(temp)

train_x = train_x / 255. # id172 step

   voila! after i added a simple step of id172, i saw that the
   neural network started to train. i was so happy!!


conclusion

   just to summarize, these are the steps you should look at when
   debugging a neural network.

   step 1: check the architecture
   step 2: check the hyper-parameters of neural network
   step 3: check the complexity of network
   step 4: check the structure of input data
   step 5: check the distribution of data


useful resources

   here are some resources that i would recommend you to go through when
   you are stuck like me
     * [107]practical guide to deep learning hyperparameter tuning by
       yoshua bengio
     * [108]a great tool in visualizing the inner working of neural
       network (specifically convolutional networks)     deepviz
     * tensorboard [109]official documentation
     * [110]nuts and bolts of applying deep learning by andrew ng


end notes

   in this article, i have given my personal experience of debugging a
   neural network and a brief overview of visualization and debugging tool
   called tensorboard. i hope this will guide you solve the problems you
   would face in your own incursions. please feel free to try out
   tensorboard and share your experiences in the comment below.

[111]learn, [112]engage, [113]compete & [114]get hired

   you can also read this article on analytics vidhya's android app
   [115]get it on google play

share this:

     * [116]click to share on linkedin (opens in new window)
     * [117]click to share on facebook (opens in new window)
     * [118]click to share on twitter (opens in new window)
     * [119]click to share on pocket (opens in new window)
     * [120]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [121]age detection, [122]debugging neural network, [123]deep
   learning, [124]practical guide to deep learning
   next article

beginner   s guide to build data visualisations on the web with d3.js

   previous article

text classification & word representations using fasttext (an nlp library by
facebook)

[125]faizan shaikh

   faizan is a data science enthusiast and a deep learning rookie. a
   recent comp. sc. undergrad, he aims to utilize his skills to push the
   boundaries of ai research.
     *
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [126]discussion portal to get your queries resolved

9 comments

     * vinit says:
       [127]july 17, 2017 at 5:36 pm
       very nicely explained.
       thanks faizan
       [128]reply
          + faizan shaikh says:
            [129]july 17, 2017 at 6:48 pm
            thanks vinit!
            [130]reply
     * david axelrod says:
       [131]july 17, 2017 at 7:44 pm
       just to clarify, the data you were sending the model was 1 to 255
       because of the pixel coloring and you normalized it with
       np.stack()? if not how did you normalize the image np arrays?
       thanks and great article!
       [132]reply
          + faizan shaikh says:
            [133]july 17, 2017 at 8:43 pm
            thanks david!
            you are right that the range of data was from 0-255 because of
            rgb coloring. to solve this get this in 0-1 range, i just
            divided the data by 255. i have updated the article to include
            this.
            ps: the purpose of np.stack() function is to merge all the
            individual images to a single numpy array. you can refer the
            docs
            [134]https://docs.scipy.org/doc/numpy/reference/generated/nump
            y.stack.html
            [135]reply
               o david axelrod says:
                 [136]july 17, 2017 at 9:32 pm
                 thanks for the clarity faizan!
                 [137]reply
     * vivek says:
       [138]july 18, 2017 at 1:41 pm
       this is nice faizen:)
       [139]reply
          + faizan shaikh says:
            [140]july 18, 2017 at 3:36 pm
            you are welcome vivek!
            [141]reply
     * pmitra says:
       [142]august 18, 2017 at 4:18 pm
       hi,
       am getting this error when using callback function. i am trying to
       run it in ubuntu.
       typeerror traceback (most recent call last)
       in ()
          -> 1 tbcallback =
       keras.callbacks.tensorboard(log_dir=   logs/final/{}   .format(time()),
       histogram_freq=0, write_graph=true, write_images=true)
       typeerror:    module    object is not callable
       [143]reply
          + faizan shaikh says:
            [144]august 21, 2017 at 7:02 pm
            hi pmitra,
            it may be so that your keras version is not up to date. you
            should update it to the latest version. along with this, make
            sure you have an updated version of tensorboard too
            [145]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-06] [146]srk       3924
   2    [2.jpg?date=2019-04-06] [147]mark12    3510
   3    [3.jpg?date=2019-04-06] [148]nilabha   3261
   4    [4.jpg?date=2019-04-06] [149]nitish007 3237
   5    [5.jpg?date=2019-04-06] [150]tezdhar   3082
   [151]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [152]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [153]understanding support vector machine algorithm from examples
       (along with code)
     * [154]essentials of machine learning algorithms (with python and r
       codes)
     * [155]a complete tutorial to learn data science with python from
       scratch
     * [156]7 types of regression techniques you should know!
     * [157]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [158]a simple introduction to anova (with applications in excel)
     * [159]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [160]top 5 machine learning github repositories and reddit discussions
   from march 2019

[161]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [162]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[163]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [164]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[165]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [166]16 opencv functions to start your id161 journey (with
   python code)

[167]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [168][ds-finhack.jpg]

   [169][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [170]about us
     * [171]our team
     * [172]career
     * [173]contact us
     * [174]write for us

   [175]about us
   [176]   
   [177]our team
   [178]   
   [179]careers
   [180]   
   [181]contact us

data scientists

     * [182]blog
     * [183]hackathon
     * [184]discussions
     * [185]apply jobs
     * [186]leaderboard

companies

     * [187]post jobs
     * [188]trainings
     * [189]hiring hackathons
     * [190]advertising
     * [191]reach us

   don't have an account? [192]sign up here.

join our community :

   [193]46336 [194]followers
   [195]20221 [196]followers
   [197]followers
   [198]7513 [199]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [200]privacy policy
     * [201]terms of use
     * [202]refund policy

   don't have an account? [203]sign up here

   iframe: [204]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [205](button) join now

   subscribe!

   iframe: [206]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [207](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/deep-learning/
  94. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/
  95. https://www.analyticsvidhya.com/blog/category/deep-learning/
  96. https://www.analyticsvidhya.com/blog/category/python-2/
  97. https://www.analyticsvidhya.com/blog/author/jalfaizy/
  98. https://www.analyticsvidhya.com/blog/2016/03/introduction-deep-learning-fundamentals-neural-networks/
  99. https://www.analyticsvidhya.com/blog/2016/10/tutorial-optimizing-neural-networks-using-keras-with-image-recognition-case-study/
 100. https://www.analyticsvidhya.com/blog/2017/05/neural-network-from-scratch-in-python-and-r/
 101. https://github.com/junyanz/igan
 102. https://datahack.analyticsvidhya.com/contest/practice-problem-age-detection/
 103. https://datahack.analyticsvidhya.com/contest/practice-problem-age-detection/
 104. https://www.analyticsvidhya.com/blog/2016/10/tutorial-optimizing-neural-networks-using-keras-with-image-recognition-case-study/#six
 105. http://cs231n.github.io/neural-networks-2/#datapre
 106. https://arxiv.org/pdf/1502.03167.pdf
 107. https://arxiv.org/pdf/1206.5533.pdf
 108. https://github.com/yosinski/deep-visualization-toolbox
 109. https://www.tensorflow.org/get_started/summaries_and_tensorboard
 110. https://youtu.be/f1ka6a13s9i
 111. https://www.analyticsvidhya.com/blog/
 112. https://discuss.analyticsvidhya.com/
 113. https://datahack.analyticsvidhya.com/contest/all/
 114. http://analyticsvidhya.com/jobs
 115. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 116. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/?share=linkedin
 117. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/?share=facebook
 118. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/?share=twitter
 119. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/?share=pocket
 120. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/?share=reddit
 121. https://www.analyticsvidhya.com/blog/tag/age-detection/
 122. https://www.analyticsvidhya.com/blog/tag/debugging-neural-network/
 123. https://www.analyticsvidhya.com/blog/tag/deep-learning/
 124. https://www.analyticsvidhya.com/blog/tag/practical-guide-to-deep-learning/
 125. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 126. https://discuss.analyticsvidhya.com/
 127. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132267
 128. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132267
 129. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132271
 130. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132271
 131. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132272
 132. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132272
 133. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132278
 134. https://docs.scipy.org/doc/numpy/reference/generated/numpy.stack.html
 135. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132278
 136. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132280
 137. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132280
 138. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132319
 139. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132319
 140. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132328
 141. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-132328
 142. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-134627
 143. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-134627
 144. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-134822
 145. https://www.analyticsvidhya.com/blog/2017/07/debugging-neural-network-with-tensorboard/#comment-134822
 146. https://datahack.analyticsvidhya.com/user/profile/srk
 147. https://datahack.analyticsvidhya.com/user/profile/mark12
 148. https://datahack.analyticsvidhya.com/user/profile/nilabha
 149. https://datahack.analyticsvidhya.com/user/profile/nitish007
 150. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 151. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 152. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 153. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 154. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 155. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 156. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 157. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 158. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 159. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 160. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 161. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 162. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 163. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 164. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 165. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 166. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 167. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 168. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 169. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 170. http://www.analyticsvidhya.com/about-me/
 171. https://www.analyticsvidhya.com/about-me/team/
 172. https://www.analyticsvidhya.com/career-analytics-vidhya/
 173. https://www.analyticsvidhya.com/contact/
 174. https://www.analyticsvidhya.com/about-me/write/
 175. http://www.analyticsvidhya.com/about-me/
 176. https://www.analyticsvidhya.com/about-me/team/
 177. https://www.analyticsvidhya.com/about-me/team/
 178. https://www.analyticsvidhya.com/about-me/team/
 179. https://www.analyticsvidhya.com/career-analytics-vidhya/
 180. https://www.analyticsvidhya.com/about-me/team/
 181. https://www.analyticsvidhya.com/contact/
 182. https://www.analyticsvidhya.com/blog
 183. https://datahack.analyticsvidhya.com/
 184. https://discuss.analyticsvidhya.com/
 185. https://www.analyticsvidhya.com/jobs/
 186. https://datahack.analyticsvidhya.com/users/
 187. https://www.analyticsvidhya.com/corporate/
 188. https://trainings.analyticsvidhya.com/
 189. https://datahack.analyticsvidhya.com/
 190. https://www.analyticsvidhya.com/contact/
 191. https://www.analyticsvidhya.com/contact/
 192. https://datahack.analyticsvidhya.com/signup/
 193. https://www.facebook.com/analyticsvidhya/
 194. https://www.facebook.com/analyticsvidhya/
 195. https://twitter.com/analyticsvidhya
 196. https://twitter.com/analyticsvidhya
 197. https://plus.google.com/+analyticsvidhya
 198. https://in.linkedin.com/company/analytics-vidhya
 199. https://in.linkedin.com/company/analytics-vidhya
 200. https://www.analyticsvidhya.com/privacy-policy/
 201. https://www.analyticsvidhya.com/terms/
 202. https://www.analyticsvidhya.com/refund-policy/
 203. https://id.analyticsvidhya.com/accounts/signup/
 204. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 205. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 206. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 207. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 209. https://www.facebook.com/analyticsvidhya
 210. https://twitter.com/analyticsvidhya
 211. https://plus.google.com/+analyticsvidhya/posts
 212. https://in.linkedin.com/company/analytics-vidhya
 213. https://www.analyticsvidhya.com/blog/2017/07/beginner-guide-build-data-visualisations-web-d3-js/
 214. https://www.analyticsvidhya.com/blog/2017/07/word-representations-text-classification-using-fasttext-nlp-facebook/
 215. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 216. https://www.linkedin.com/in/faizankshaikh
 217. http://github.com/faizankshaikh
 218. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 219. https://www.facebook.com/analyticsvidhya/
 220. https://twitter.com/analyticsvidhya
 221. https://plus.google.com/+analyticsvidhya
 222. https://plus.google.com/+analyticsvidhya
 223. https://in.linkedin.com/company/analytics-vidhya
 224. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 225. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 226. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 227. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 228. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 229. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 230. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 231. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 232. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 233. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 234. javascript:void(0);
 235. javascript:void(0);
 236. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 237. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 238. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 239. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 240. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 241. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 242. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 243. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 244. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 245. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f07%2fdebugging-neural-network-with-tensorboard%2f&linkname=debugging%20%26amp%3b%20visualising%20training%20of%20neural%20network%20with%20tensorboard
 246. javascript:void(0);
 247. javascript:void(0);
