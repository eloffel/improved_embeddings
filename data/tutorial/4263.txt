   [[_text]]

   [[_charcounterstr]]



   [[label]] ____________________ [[errormessage]] {{text}}




   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   [[label]] [[errormessage]]

   bookmarks ([[savedstates.length]]) open this drawer to save a set of
   views of the projection, including selected points. a file containing
   the bookmarks can then be saved and later loaded to view them.

   no bookmarks yet, upload a bookmarks file or add a new bookmark by
   clicking the "+" below.
                       

   [[item.label]]
   [[item.count]]

   [[renderinfo.thresholds.0.value]]
   [[_getlastthreshold(renderinfo.thresholds)]]

   data

   [[item]] [[item.name]] [[item.shape.0]]x[[item.shape.1]] [[item]]
   [[item.name]] [[item.desc]]
   use categorical coloring for metadata fields that have many unique
   values we use a gradient color map by default. this checkbox allows you
   to force categorical coloring by a given metadata field.
   sphereize data the data is normalized by shifting each point by the
   centroid and making it unit norm.

   load data from your computer load data publish your embedding
   visualization and data publish

load data from your computer

   step 1: load a tsv file of vectors.
   example of 3 vectors with dimension 4:
   0.1\t0.2\t0.5\t0.9
   0.2\t0.1\t5.0\t0.2
   0.4\t0.1\t7.0\t0.8
   choose file                     
   step 2 (optional): load a tsv file of metadata.
   example of 3 data points and 2 columns.
   note: if there is more than one column, the first row will be parsed as
   column labels.
   pok  mon\tspecies
   wartortle\tturtle
   venusaur\tseed
   charmeleon\tflame
   choose file                     
   click outside to dismiss.

publish your embedding visualization and data

   if you'd like to share your visualization with the world, follow these
   simple steps. see [1]this tutorial for more.

step 1: make data public

   host tensors, metadata, sprite image, and bookmarks tsv files publicly
   on the web.

   one option is using a [2]github gist. if you choose this approach, make
   sure to link directly to the raw file.

step 2: projector config

   optional:
   metadata
   sprite
   bookmarks

step 3: host projector config

   after you have hosted the projector config json file you built above,
   paste the url to the config below.
   test your shareable url
   click outside to dismiss.
   checkpoint:
   metadata:

   /

   /

   .*

   enable/disable regex mode. [[message]]

   (button) show all data (button) isolate selection (button) clear
   selection
   [[item]]

   neighbors the number of neighbors (in the original space) to show when
   clicking on a point.
   distance
   [3]cosine [4]euclidean

   nearest points in the original space:
   showing only the first 100 results...

   [[label]]
   [[item.key]]
   [[item.value]]

   id167
   t-distributed stochastic neighbor embedding
   pca
   principal component analysis
   custom
   search for two vectors upon which to project all points.
   dimension
   2d 3d
   perplexity the most appropriate perplexity value depends on the density
   of the data. loosely speaking, a larger / denser dataset requires a
   larger perplexity. typical values for perplexity range between 5 and
   50.
   learning rate the ideal learning rate often depends on the size of the
   data, with smaller datasets requiring smaller learning rates.

   (button) re-run (button) stop

   iteration: 0

   for fast results, the data will be sampled down to
   [[gettsnesamplesizetext()]] points.

   [5]how to use id167 effectively.
   #
   variance (%)
   [[item.componentnumber]]
   [[item.percvariance]]
   #
   variance (%)
   [[item.componentnumber]]
   [[item.percvariance]]
   #
   variance (%)
   [[item.componentnumber]]
   [[item.percvariance]]

   pca is approximate.
   total variance
   for fast results, the data was sampled to [[getpcasamplesizetext()]]
   points and randomly projected down to [[getpcasampleddimtext()]]
   dimensions.
   [[item]]

   close

   bounding box selection enable/disable night mode enable/disable 3d
   labels mode
   points: loading...
   dimension: loading...
   reset zoom to fit all points
   help with interaction controls.

3d controls

   rotate mouse left click.
   pan mouse right click.
   zoom mouse wheel.
   holding ctrl reverses the mouse clicks.

2d controls

   pan mouse left click.
   zoom mouse wheel.
   click anywhere to dismiss.

   embedding projector
   [6]open documentation [7]report a bug

references

   1. https://www.tensorflow.org/get_started/embedding_viz
   2. https://gist.github.com/
   3. javascript:void(0);
   4. javascript:void(0);
   5. http://distill.pub/2016/misread-tsne/
   6. http://projector.tensorflow.org/[[documentationlink]]
   7. http://projector.tensorflow.org/[[bugreportlink]]
