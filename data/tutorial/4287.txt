   #[1]github [2]recent commits to baselines:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]464
     * [35]star [36]7,304
     * [37]fork [38]2,219

[39]openai/[40]baselines

   [41]code [42]issues 239 [43]pull requests 46 [44]projects 0
   [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   openai baselines: high-quality implementations of reinforcement
   learning algorithms
     * [47]312 commits
     * [48]29 branches
     * [49]0 releases
     * [50]97 contributors
     * [51]mit

    1. [52]python 51.2%
    2. [53]html 48.8%

   (button) python html
   branch: master (button) new pull request
   [54]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/o
   [55]download zip

downloading...

   want to be notified of new releases in openai/baselines?
   [56]sign in [57]sign up

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [60]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [61]download the github extension for visual studio
   and try again.

   (button) go back
   [62]@sritee [63]@pzhokhov
   [64]sritee and [65]pzhokhov [66]interface for u.make_session changed
   ([67]#865[68])
   latest commit [69]6d1c6c7 apr 2, 2019
   [70]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [71]baselines [72]interface for u.make_session changed ([73]#865[74])
   apr 1, 2019
   [75]data
   [76]docs/viz [77]update viz.ipynb nov 8, 2018
   [78].benchmark_pattern
   [79].gitignore [80]refactor a2c, acer, acktr, ppo2, deepq, and trpo_mpi
   ([81]#490[82]) aug 13, 2018
   [83].travis.yml
   [84]dockerfile
   [85]license
   [86]readme.md
   [87]benchmarks_atari10m.htm
   [88]benchmarks_mujoco1m.htm
   [89]setup.id18
   [90]setup.py

readme.md

   status: active (under active development, breaking changes may occur)

   [91][logo.jpg] [92]build status

baselines

   openai baselines is a set of high-quality implementations of
   id23 algorithms.

   these algorithms will make it easier for the research community to
   replicate, refine, and identify new ideas, and will create good
   baselines to build research on top of. our id25 implementation and its
   variants are roughly on par with the scores in published papers. we
   expect they will be used as a base around which new ideas can be added,
   and as a tool for comparing a new approach against existing ones.

prerequisites

   baselines requires python3 (>=3.5) with the development headers. you'll
   also need system packages cmake, openmpi and zlib. those can be
   installed as follows

ubuntu

sudo apt-get update && sudo apt-get install cmake libopenmpi-dev python3-dev zli
b1g-dev

mac os x

   installation of system packages on mac requires [93]homebrew. with
   homebrew installed, run the following:
brew install cmake openmpi

virtual environment

   from the general python package sanity perspective, it is a good idea
   to use virtual environments (virtualenvs) to make sure packages from
   different projects do not interfere with each other. you can install
   virtualenv (which is itself a pip package) via
pip install virtualenv

   virtualenvs are essentially folders that have copies of python
   executable and all python packages. to create a virtualenv called venv
   with python3, one runs
virtualenv /path/to/venv --python=python3

   to activate a virtualenv:
. /path/to/venv/bin/activate

   more thorough tutorial on virtualenvs and options can be found [94]here

installation

     * clone the repo and cd into it:
git clone https://github.com/openai/baselines.git
cd baselines
     * if you don't have tensorflow installed already, install your
       favourite flavor of tensorflow. in most cases,
pip install tensorflow-gpu # if you have a cuda-compatible gpu and proper driver
s
       or
pip install tensorflow
       should be sufficient. refer to [95]tensorflow installation guide
       for more details.
     * install baselines package
pip install -e .

mujoco

   some of the baselines examples use [96]mujoco (multi-joint dynamics in
   contact) physics simulator, which is proprietary and requires binaries
   and a license (temporary 30-day license can be obtained from
   [97]www.mujoco.org). instructions on setting up mujoco can be found
   [98]here

testing the installation

   all unit tests in baselines can be run using pytest runner:
pip install pytest
pytest

training models

   most of the algorithms in baselines repo are used as follows:
python -m baselines.run --alg=<name of the algorithm> --env=<environment_id> [ad
ditional arguments]

example 1. ppo with mujoco humanoid

   for instance, to train a fully-connected network controlling mujoco
   humanoid using ppo2 for 20m timesteps
python -m baselines.run --alg=ppo2 --env=humanoid-v2 --network=mlp --num_timeste
ps=2e7

   note that for mujoco environments fully-connected network is default,
   so we can omit --network=mlp the hyperparameters for both network and
   the learning algorithm can be controlled via the command line, for
   instance:
python -m baselines.run --alg=ppo2 --env=humanoid-v2 --network=mlp --num_timeste
ps=2e7 --ent_coef=0.1 --num_hidden=32 --num_layers=3 --value_network=copy

   will set id178 coefficient to 0.1, and construct fully connected
   network with 3 layers with 32 hidden units in each, and create a
   separate network for value function estimation (so that its parameters
   are not shared with the policy network, but the structure is the same)

   see docstrings in [99]common/models.py for description of network
   parameters for each type of model, and docstring for
   [100]baselines/ppo2/ppo2.py/learn() for the description of the ppo2
   hyperparameters.

example 2. id25 on atari

   id25 with atari is at this point a classics of benchmarks. to run the
   baselines implementation of id25 on atari pong:
python -m baselines.run --alg=deepq --env=pongnoframeskip-v4 --num_timesteps=1e6

saving, loading and visualizing models

   the algorithms serialization api is not properly unified yet; however,
   there is a simple method to save / restore trained models. --save_path
   and --load_path command-line option loads the tensorflow state from a
   given path before training, and saves it after the training,
   respectively. let's imagine you'd like to train ppo2 on atari pong,
   save the model and then later visualize what has it learnt.
python -m baselines.run --alg=ppo2 --env=pongnoframeskip-v4 --num_timesteps=2e7
--save_path=~/models/pong_20m_ppo2

   this should get to the mean reward per episode about 20. to load and
   visualize the model, we'll do the following - load the model, train it
   for 0 steps, and then visualize:
python -m baselines.run --alg=ppo2 --env=pongnoframeskip-v4 --num_timesteps=0 --
load_path=~/models/pong_20m_ppo2 --play

   note: at the moment mujoco training uses vecnormalize wrapper for the
   environment which is not being saved correctly; so loading the models
   trained on mujoco will not work well if the environment is recreated.
   if necessary, you can work around that by replacing runningmeanstd by
   tfrunningmeanstd in [101]baselines/common/vec_env/vec_normalize.py.
   this way, mean and std of environment normalizing wrapper will be saved
   in tensorflow variables and included in the model file; however,
   training is slower that way - hence not including it by default

loading and vizualizing learning curves and other training metrics

   see [102]here for instructions on how to load and display the training
   data.

subpackages

     * [103]a2c
     * [104]acer
     * [105]acktr
     * [106]ddpg
     * [107]id25
     * [108]gail
     * [109]her
     * [110]ppo1 (obsolete version, left here temporarily)
     * [111]ppo2
     * [112]trpo

benchmarks

   results of benchmarks on mujoco (1m timesteps) and atari (10m
   timesteps) are available [113]here for mujoco and [114]here for atari
   respectively. note that these results may be not on the latest version
   of the code, particular commit hash with which results were obtained is
   specified on the benchmarks page.

   to cite this repository in publications:
@misc{baselines,
  author = {dhariwal, prafulla and hesse, christopher and klimov, oleg and nicho
l, alex and plappert, matthias and radford, alec and schulman, john and sidor, s
zymon and wu, yuhuai and zhokhov, peter},
  title = {openai baselines},
  year = {2017},
  publisher = {github},
  journal = {github repository},
  howpublished = {\url{https://github.com/openai/baselines}},
}

     *    2019 github, inc.
     * [115]terms
     * [116]privacy
     * [117]security
     * [118]status
     * [119]help

     * [120]contact github
     * [121]pricing
     * [122]api
     * [123]training
     * [124]blog
     * [125]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [126]reload to refresh your
   session. you signed out in another tab or window. [127]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/openai/baselines/commits/master.atom
   3. https://github.com/openai/baselines#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/openai/baselines
  32. https://github.com/join
  33. https://github.com/login?return_to=/openai/baselines
  34. https://github.com/openai/baselines/watchers
  35. https://github.com/login?return_to=/openai/baselines
  36. https://github.com/openai/baselines/stargazers
  37. https://github.com/login?return_to=/openai/baselines
  38. https://github.com/openai/baselines/network/members
  39. https://github.com/openai
  40. https://github.com/openai/baselines
  41. https://github.com/openai/baselines
  42. https://github.com/openai/baselines/issues
  43. https://github.com/openai/baselines/pulls
  44. https://github.com/openai/baselines/projects
  45. https://github.com/openai/baselines/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/openai/baselines/commits/master
  48. https://github.com/openai/baselines/branches
  49. https://github.com/openai/baselines/releases
  50. https://github.com/openai/baselines/graphs/contributors
  51. https://github.com/openai/baselines/blob/master/license
  52. https://github.com/openai/baselines/search?l=python
  53. https://github.com/openai/baselines/search?l=html
  54. https://github.com/openai/baselines/find/master
  55. https://github.com/openai/baselines/archive/master.zip
  56. https://github.com/login?return_to=https://github.com/openai/baselines
  57. https://github.com/join?return_to=/openai/baselines
  58. https://desktop.github.com/
  59. https://desktop.github.com/
  60. https://developer.apple.com/xcode/
  61. https://visualstudio.github.com/
  62. https://github.com/sritee
  63. https://github.com/pzhokhov
  64. https://github.com/openai/baselines/commits?author=sritee
  65. https://github.com/openai/baselines/commits?author=pzhokhov
  66. https://github.com/openai/baselines/commit/6d1c6c78d38dd25799145026a590cc584ea22c88
  67. https://github.com/openai/baselines/pull/865
  68. https://github.com/openai/baselines/commit/6d1c6c78d38dd25799145026a590cc584ea22c88
  69. https://github.com/openai/baselines/commit/6d1c6c78d38dd25799145026a590cc584ea22c88
  70. https://github.com/openai/baselines/tree/6d1c6c78d38dd25799145026a590cc584ea22c88
  71. https://github.com/openai/baselines/tree/master/baselines
  72. https://github.com/openai/baselines/commit/6d1c6c78d38dd25799145026a590cc584ea22c88
  73. https://github.com/openai/baselines/pull/865
  74. https://github.com/openai/baselines/commit/6d1c6c78d38dd25799145026a590cc584ea22c88
  75. https://github.com/openai/baselines/tree/master/data
  76. https://github.com/openai/baselines/tree/master/docs/viz
  77. https://github.com/openai/baselines/commit/cc88804042cd1c58d1368f672f083f405dd73d63
  78. https://github.com/openai/baselines/blob/master/.benchmark_pattern
  79. https://github.com/openai/baselines/blob/master/.gitignore
  80. https://github.com/openai/baselines/commit/8c2aea2addc9f3ba36d4a0c937e6a2d09830afc7
  81. https://github.com/openai/baselines/pull/490
  82. https://github.com/openai/baselines/commit/8c2aea2addc9f3ba36d4a0c937e6a2d09830afc7
  83. https://github.com/openai/baselines/blob/master/.travis.yml
  84. https://github.com/openai/baselines/blob/master/dockerfile
  85. https://github.com/openai/baselines/blob/master/license
  86. https://github.com/openai/baselines/blob/master/readme.md
  87. https://github.com/openai/baselines/blob/master/benchmarks_atari10m.htm
  88. https://github.com/openai/baselines/blob/master/benchmarks_mujoco1m.htm
  89. https://github.com/openai/baselines/blob/master/setup.id18
  90. https://github.com/openai/baselines/blob/master/setup.py
  91. https://github.com/openai/baselines/blob/master/data/logo.jpg
  92. https://travis-ci.org/openai/baselines
  93. https://brew.sh/
  94. https://virtualenv.pypa.io/en/stable/
  95. https://www.tensorflow.org/install/
  96. http://www.mujoco.org/
  97. http://www.mujoco.org/
  98. https://github.com/openai/mujoco-py
  99. https://github.com/openai/baselines/blob/master/baselines/common/models.py
 100. https://github.com/openai/baselines/blob/master/baselines/ppo2/ppo2.py#l152
 101. https://github.com/openai/baselines/blob/master/baselines/common/vec_env/vec_normalize.py#l12
 102. https://github.com/openai/baselines/blob/master/docs/viz/viz.ipynb
 103. https://github.com/openai/baselines/blob/master/baselines/a2c
 104. https://github.com/openai/baselines/blob/master/baselines/acer
 105. https://github.com/openai/baselines/blob/master/baselines/acktr
 106. https://github.com/openai/baselines/blob/master/baselines/ddpg
 107. https://github.com/openai/baselines/blob/master/baselines/deepq
 108. https://github.com/openai/baselines/blob/master/baselines/gail
 109. https://github.com/openai/baselines/blob/master/baselines/her
 110. https://github.com/openai/baselines/blob/master/baselines/ppo1
 111. https://github.com/openai/baselines/blob/master/baselines/ppo2
 112. https://github.com/openai/baselines/blob/master/baselines/trpo_mpi
 113. https://htmlpreview.github.com/?https://github.com/openai/baselines/blob/master/benchmarks_mujoco1m.htm
 114. https://htmlpreview.github.com/?https://github.com/openai/baselines/blob/master/benchmarks_atari10m.htm
 115. https://github.com/site/terms
 116. https://github.com/site/privacy
 117. https://github.com/security
 118. https://githubstatus.com/
 119. https://help.github.com/
 120. https://github.com/contact
 121. https://github.com/pricing
 122. https://developer.github.com/
 123. https://training.github.com/
 124. https://github.blog/
 125. https://github.com/about
 126. https://github.com/openai/baselines
 127. https://github.com/openai/baselines

   hidden links:
 129. https://github.com/
 130. https://github.com/openai/baselines
 131. https://github.com/openai/baselines
 132. https://github.com/openai/baselines
 133. https://help.github.com/articles/which-remote-url-should-i-use
 134. https://github.com/openai/baselines#baselines
 135. https://github.com/openai/baselines#prerequisites
 136. https://github.com/openai/baselines#ubuntu
 137. https://github.com/openai/baselines#mac-os-x
 138. https://github.com/openai/baselines#virtual-environment
 139. https://github.com/openai/baselines#installation
 140. https://github.com/openai/baselines#mujoco
 141. https://github.com/openai/baselines#testing-the-installation
 142. https://github.com/openai/baselines#training-models
 143. https://github.com/openai/baselines#example-1-ppo-with-mujoco-humanoid
 144. https://github.com/openai/baselines#example-2-id25-on-atari
 145. https://github.com/openai/baselines#saving-loading-and-visualizing-models
 146. https://github.com/openai/baselines#loading-and-vizualizing-learning-curves-and-other-training-metrics
 147. https://github.com/openai/baselines#subpackages
 148. https://github.com/openai/baselines#benchmarks
 149. https://github.com/
