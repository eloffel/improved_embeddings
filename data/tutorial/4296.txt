introduction to statistical thought

michael lavine

february 21, 2013

copyright c(cid:13) 2005 by michael lavine

i

contents

list of figures

list of tables

preface

1 id203

.

1.1 basic id203 .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.2 id203 densities . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . .
1.3 parametric families of distributions
1.3.1 the binomial distribution . . . . . . . . . . . . . . . . . . . . .
1.3.2 the poisson distribution
. . . . . . . . . . . . . . . . . . . . .
1.3.3 the exponential distribution . . . . . . . . . . . . . . . . . . .
1.3.4 the normal distribution . . . . . . . . . . . . . . . . . . . . .
1.4 centers, spreads, means, and moments . . . . . . . . . . . . . . . . . .
1.5
joint, marginal and id155 . . . . . . . . . . . . . . .
1.6 association, dependence, independence
. . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.7 simulation .
1.7.1 calculating probabilities . . . . . . . . . . . . . . . . . . . . .
1.7.2 evaluating statistical procedures . . . . . . . . . . . . . . . . .
1.8
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
r .
1.9 some results for large samples . . . . . . . . . . . . . . . . . . . . . .
1.10 exercises
. . . . . . . . . . . . . . . . . . . . . . . . . . . .

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

2 modes of id136
.

2.1 data .
.
2.2 data description .

.

.

.

.

.

. . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
summary statistics . . . . . . . . . . . . . . . . . . . . . . . . .

.
.

2.2.1

v

x

xi

1
1
6
14
14
17
20
22
29
41
50
56
57
61
72
76
80

94
94
95
95

ii

contents

iii

.

.

.

.

.

2.3 likelihood

2.4 estimation .

2.2.2 displaying distributions . . . . . . . . . . . . . . . . . . . . . . 101
2.2.3 exploring relationships . . . . . . . . . . . . . . . . . . . . . . 114
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 133
2.3.1 the likelihood function . . . . . . . . . . . . . . . . . . . . . . 133
2.3.2 likelihoods from the central limit theorem . . . . . . . . . . 140
2.3.3 likelihoods for several parameters . . . . . . . . . . . . . . . . 145
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 154
2.4.1 the maximum likelihood estimate . . . . . . . . . . . . . . . . 154
2.4.2 accuracy of estimation . . . . . . . . . . . . . . . . . . . . . . 156
2.4.3 the sampling distribution of an estimator . . . . . . . . . . . . . 159
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 164
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 174
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 178
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 192

2.5 bayesian id136 .
2.6 prediction .
.
2.7 hypothesis testing .
.
2.8 exercises

.

.

.

.

.

.

.

.

.

.

.

.

.

.

3 regression

.

.

.

3.2.1
3.2.2

introduction .

202
3.1
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 202
3.2 normal linear models . . . . . . . . . . . . . . . . . . . . . . . . . . . 210
introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . 210
id136 for linear models
. . . . . . . . . . . . . . . . . . . 222
. . . . . . . . . . . . . . . . . . . . . . . . 235
3.3.1 id28 . . . . . . . . . . . . . . . . . . . . . . . . 235
3.3.2
poisson regression . . . . . . . . . . . . . . . . . . . . . . . . . 244
3.4 predictions from regression . . . . . . . . . . . . . . . . . . . . . . . . 248
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 252
3.5 exercises

3.3 generalized linear models

.

.

.

.

.

.

4 more id203

.

263
4.1 more id203 density . . . . . . . . . . . . . . . . . . . . . . . . . 263
4.2 random vectors
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 264
4.2.1 densities of random vectors . . . . . . . . . . . . . . . . . . . 264
4.2.2 moments of random vectors . . . . . . . . . . . . . . . . . . . 266
functions of random vectors . . . . . . . . . . . . . . . . . . . 266
4.2.3
4.3 representing distributions . . . . . . . . . . . . . . . . . . . . . . . . . 270
4.4 exercises
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 275

.

.

.

.

.

.

.

5 special distributions

279
5.1 binomial and negative binomial . . . . . . . . . . . . . . . . . . . . . . 279
5.2 multinomial .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 289
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 291
.
5.3 poisson .

.
.

.
.

.
.

.
.

.

contents

iv

.

.

.

.

.

.

.

.
.

.
.

.
.

.
.

.
.

.
.

5.4 uniform .
5.5 gamma, exponential, chi square
5.6 beta .
.
5.7 normal .

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 304
. . . . . . . . . . . . . . . . . . . . . 305
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 312
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 315
5.7.1 the univariate normal distribution . . . . . . . . . . . . . . . 315
5.7.2 the multivariate normal distribution . . . . . . . . . . . . . . 320
5.7.3 marginal, conditional, and related distributions . . . . . . . . 327
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 330
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 335

5.8 the t distribution .
5.9 exercises
.

.

.

.

.

.

6 bayesian statistics

346
6.1 multidimensional bayesian analysis . . . . . . . . . . . . . . . . . . . . 346
6.2 metropolis, metropolis-hastings, and gibbs . . . . . . . . . . . . . . . 358
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 377
6.3 exercises

.

.

.

.

.

.

7 more models

382
7.1 random effects .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 382
7.2 time series and markov chains . . . . . . . . . . . . . . . . . . . . . . 396
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 409
7.3 survival analysis .
7.4 exercises
.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 416

.
.

.

.

.

.

.

.

8 mathematical statistics

sufficiency .

420
8.1 properties of statistics . . . . . . . . . . . . . . . . . . . . . . . . . . . 420
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 420
8.1.1
8.1.2 consistency, bias, and mean-squared error . . . . . . . . . . . 423
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 428
information .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 431
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 433
8.4.1 modes of convergence . . . . . . . . . . . . . . . . . . . . . . . 439
8.4.2 the   -method . . . . . . . . . . . . . . . . . . . . . . . . . . . . 443
8.4.3 the asymptotic behavior of estimators
. . . . . . . . . . . . . 446
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 451

8.2
.
8.3 exponential families
.
8.4 asymptotics .

8.5 exercises

.

.

.

.

.

.

.

.

.

.

.

.

bibliography

456

list of figures

.

1.1
pdf for time on hold at help line
. . . . . . . . . . . . . . . . . . . . .
py for the outcome of a spinner . . . . . . . . . . . . . . . . . . . . . .
1.2
(a): ocean temperatures; (b): important discoveries
1.3
. . . . . . . . . . .
1.4 change of variables
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.5 binomial probabilities
. . . . . . . . . . . . . . . . . . . . . . . . . . .
1.6 p[x = 3|   ] as a function of    . . . . . . . . . . . . . . . . . . . . . . .
1.7 exponential densities . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.8 normal densities .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.9 ocean temperatures at 45   n, 30   w, 1000m depth . . . . . . . . . . . . .
1.10 normal samples and normal densities . . . . . . . . . . . . . . . . . . .
1.11 hydrographic stations off the coast of europe and africa . . . . . . . .
1.12 water temperatures
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.13 water temperatures with standard deviations . . . . . . . . . . . . . . .
1.14 two pdf   s with   1 and   2 sd   s. . . . . . . . . . . . . . . . . . . . . . .
1.15 permissible values of n and x . . . . . . . . . . . . . . . . . . . . . . .
1.16 features of the joint distribution of (x, y)
. . . . . . . . . . . . . . . .
1.17 lengths and widths of sepals and petals of 150 iris plants . . . . . . . .
1.18 correlations
. . . . . . . . . . . . . . . . . . . . . . . . . . . .
1.19 1000 simulations of      for n.sim = 50, 200, 1000 . . . . . . . . . . . . .
1.20 1000 simulations of      under three procedures . . . . . . . . . . . . . . .
1.21 monthly concentrations of co2 at mauna loa . . . . . . . . . . . . . .
1.22 1000 simulations of a face experiment . . . . . . . . . . . . . . . . . .
1.23 histograms of craps simulations . . . . . . . . . . . . . . . . . . . . . .

.

.

.

.

7
9
11
13
16
19
21
24
25
27
31
32
36
38
44
48
52
55
60
64
65
69
81

.

quantiles

2.1
98
2.2 histograms of tooth growth . . . . . . . . . . . . . . . . . . . . . . . . 102
2.3 histograms of tooth growth . . . . . . . . . . . . . . . . . . . . . . . . 103

. . . . . . . . . . . . . . . . . . . . . . . . . . . .

.

.

.

.

.

v

list of figures

vi

.

2.19 (cid:96)(  ) after(cid:80) yi = 40 in 60 quadrats.

2.4 histograms of tooth growth . . . . . . . . . . . . . . . . . . . . . . . . 104
2.5
calorie contents of beef hot dogs . . . . . . . . . . . . . . . . . . . . . 108
2.6 strip chart of tooth growth . . . . . . . . . . . . . . . . . . . . . . . . 111
2.7 quiz scores from statistics 103 . . . . . . . . . . . . . . . . . . . . . . 113
2.8 qq plots of water temperatures (   c) at 1000m depth . . . . . . . . . . . 115
2.9 mosaic plot of ucbadmissions . . . . . . . . . . . . . . . . . . . . . . 119
2.10 mosaic plot of ucbadmissions . . . . . . . . . . . . . . . . . . . . . . 120
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 123
2.11 old faithful data.
2.12 waiting time versus duration in the old faithful dataset
. . . . . . . . 124
2.13 time series of duration and waiting time at old faithful . . . . . . . . . 125
2.14 time series of duration and waiting time at old faithful . . . . . . . . . 126
2.15 temperature versus latitude for different values of longitude . . . . . 129
2.16 temperature versus longitude for different values of latitude . . . . . 130
2.17 spike train from a neuron during a taste experiment. the dots show the
times at which the neuron fired. the solid lines show times at which the
rat received a drop of a .3 m solution of nacl. . . . . . . . . . . . . . . 131
2.18 likelihood function for the proportion of red cars . . . . . . . . . . . . 135
. . . . . . . . . . . . . . . . . . . . 137
2.20 likelihood for slater school . . . . . . . . . . . . . . . . . . . . . . . 139
2.21 marginal and exact likelihoods for slater school . . . . . . . . . . . . 142
2.22 marginal likelihood for mean ceo salary . . . . . . . . . . . . . . . . 144
2.23 face experiment: data and likelihood . . . . . . . . . . . . . . . . . . 147
2.24 likelihood function for quiz scores
. . . . . . . . . . . . . . . . . . . 149
2.25 log of the likelihood function for (  ,    f ) in example 2.13 . . . . . . . . 153
2.26 likelihood function for the id203 of winning craps
. . . . . . . . 158
2.27 sampling distribution of the sample mean and median . . . . . . . . . . . 160
2.28 histograms of the sample mean for samples from bin(n, .1) . . . . . . . . 162
2.29 prior, likelihood and posterior in the seedlings example . . . . . . . . . 169
2.30 prior, likelihood and posterior densities for    with n = 1, 4, 16 . . . . . 171
2.31 prior, likelihood and posterior densities for    with n = 60 . . . . . . . 172
2.32 prior, likelihood and posterior density for slater school . . . . . . . . 173
2.33 plug-in predictive distribution for seedlings
. . . . . . . . . . . . . . . 175
2.34 predictive distributions for seedlings after n = 0, 1, 60 . . . . . . . . . 179
2.35 pdf of the bin(100, .5) distribution . . . . . . . . . . . . . . . . . . . . . 183
2.36 pdfs of the bin(100, .5) (dots) and n(50, 5) (line) distributions . . . . . . 184
2.37 approximate density of summary statistic w . . . . . . . . . . . . . . . . 186
2.38 number of times baboon father helps own child . . . . . . . . . . . . . . 190
2.39 histogram of simulated values of w.tot . . . . . . . . . . . . . . . . . . 191

list of figures

vii

. . . . . . . . . . . . . . . . . . . . . . . . . 203
3.1 four regression examples
3.2
1970 draft lottery. draft number vs. day of year . . . . . . . . . . . . 206
3.3 draft number vs. day of year with smoothers . . . . . . . . . . . . . . . 207
3.4 total number of new seedlings 1993     1997, by quadrat. . . . . . . . . . 209
3.5 calorie content of hot dogs . . . . . . . . . . . . . . . . . . . . . . . . 211
3.6 density estimates of calorie contents of hot dogs
. . . . . . . . . . . . 213
3.7 the plantgrowth data . . . . . . . . . . . . . . . . . . . . . . . . . . . 215
ice cream consumption versus mean temperature . . . . . . . . . . . . . 221
3.8
3.9 likelihood functions for (  ,   m,   p) in the hot dog example.
. . . . . . 227
3.10 pairs plot of the mtcars data . . . . . . . . . . . . . . . . . . . . . . . 230
3.11 mtcars     various plots . . . . . . . . . . . . . . . . . . . . . . . . . . 232
3.12 likelihood functions for   1,   1,   1 and   2 in the mtcars example.
. . . . 234
3.13 pine cones and o-rings . . . . . . . . . . . . . . . . . . . . . . . . . . . 238
3.14 pine cones and o-rings with regression curves . . . . . . . . . . . . . . 239
3.15 likelihood function for the pine cone data . . . . . . . . . . . . . . . . 242
3.16 actual vs. fitted and residuals vs. fitted for the seedling data . . . . . 247
3.17 diagnostic plots for the seedling data . . . . . . . . . . . . . . . . . . . 249
3.18 actual mpg and fitted values from three models . . . . . . . . . . . . . 251
3.19 happiness quotient of bankers and poets . . . . . . . . . . . . . . . . . 255

4.1 the (x1, x2) plane and the (y1, y2) plane . . . . . . . . . . . . . . . . . . 269
4.2
pmf   s, pdf   s, and cdf   s . . . . . . . . . . . . . . . . . . . . . . . . . . . . 272

.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 285
5.1 the binomial pmf .
5.2 the negative binomial pmf . . . . . . . . . . . . . . . . . . . . . . . . . 288
5.3 poisson pmf for    = 1, 4, 16, 64 . . . . . . . . . . . . . . . . . . . . . . . 294
5.4 rutherford and geiger   s figure 1 . . . . . . . . . . . . . . . . . . . . . 299
5.5 numbers of firings of a neuron in 150 msec after five different tastants.
tastants: 1=msg .1m; 2=msg .3m; 3=nacl .1m; 4=nacl .3m; 5=wa-
ter. panels: a: a stripchart. each circle represents one delivery of a
tastant. b: a mosaic plot. c: each line represents one tastant. d: like-
lihood functions. each line represents one tastant.

. . . . . . . . . . . 301

5.6 the line shows poisson probabilities for    = 0.2; the circles show the
fraction of times the neuron responded with 0, 1, . . . , 5 spikes for each
of the five tastants.
.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 303
5.7 gamma densities .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 306
5.8 exponential densities . . . . . . . . . . . . . . . . . . . . . . . . . . . . 310
5.9 beta densities .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 314
5.10 water temperatures (   c) at 1000m depth . . . . . . . . . . . . . . . . . 316

.

.

.

.

list of figures

viii

5.11 bivariate normal density . . . . . . . . . . . . . . . . . . . . . . . . . 323
5.12 bivariate normal density . . . . . . . . . . . . . . . . . . . . . . . . . 325
5.13 t densities for four degrees of freedom and the n(0, 1) density . . . . . 334

6.1 posterior densities of   0 and   1 in the ice cream example using the prior

6.6

.

from equation 6.4.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 350
6.2 numbers of pine cones in 1998 as a function of dbh . . . . . . . . . . . . 354
6.3 numbers of pine cones in 1999 as a function of dbh . . . . . . . . . . . . 355
6.4 numbers of pine cones in 2000 as a function of dbh . . . . . . . . . . . . 356
6.5

.

.

.

.

10,000 mcmc samples of the be(5, 2) density. top panel: histogram of
samples from the metropolis-hastings algorithm and the be(5, 2) den-
sity. middle panel:   i plotted against i. bottom panel: p(  i) plotted
against i.
10,000 mcmc samples of the be(5, 2) density. left column: (      |   ) =
u(       100,    + 100); right column: (      |   ) = u(       .00001,    + .00001).
top: histogram of samples from the metropolis-hastings algorithm and
the be(5, 2) density. middle:   i plotted against i. bottom: p(  i) plotted
against i.

.

.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 361

.

6.7 trace plots of mcmc output from the pine cone code on page 365.
6.8 trace plots of mcmc output from the pine cone code with a smaller

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 363
. . . 367

.

.

.

.

.

proposal radius. .

.

.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 368

6.9 trace plots of mcmc output from the pine cone code with a smaller
proposal radius and 100,000 iterations. the plots show every 10   th it-
eration.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 370

.

.

.

.

.

.

.

.

6.10 trace plots of mcmc output from the pine cone code with proposal
function g.one and 100,000 iterations. the plots show every 10   th it-
eration.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 371
6.11 pairs plots of mcmc output from the pine cones example. . . . . . . . . 373
6.12 trace plots of mcmc output from the pine cone code with proposal
function g.group and 100,000 iterations. the plots show every 10   th
iteration.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 375

.

.

.

.

.

.

.

.

.

.

6.13 pairs plots of mcmc output from the pine cones example with proposal

g.group.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 376
6.14 posterior density of   2 and   2 from example 6.3. . . . . . . . . . . . . . 377

.

.

.

.

.

.

7.1 plots of the orthodont data: distance as a function of age, grouped by

subject, separated by sex.

. . . . . . . . . . . . . . . . . . . . . . . . . 384

7.2 plots of the orthodont data: distance as a function of age, separated by

subject.

.

.

.

.

.

.

.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 387

list of figures

ix

7.3 percent body fat of major (blue) and minor (purple) pheidole morrisi

ants at three sites in two seasons. . . . . . . . . . . . . . . . . . . . . . 391

7.4 residuals from model 7.4. each point represents one colony. there is

.

.

an upward trend, indicating the possible presence of colony effects. . . . 393
7.5 some time series .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 398
7.6 yt+1 vs. yt for the beaver and presidents data sets . . . . . . . . . . . . 399
7.7 yt+k vs. yt for the beaver data set and lags 0   5 . . . . . . . . . . . . . . 400
7.8
. . . . . . . . . . . . . 402
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 405
7.9 fit of co2 data .
.
7.10 dax closing prices .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 407
7.11 dax returns .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 408
.
7.12 survival curve for bladder cancer. solid line for placebo; dashed line

coplot of yt+1     yt   1 | yt for the beaver data set

.

.

.

for thiotepa.

.

.

.

.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 412

7.13 cumulative hazard and log(hazard) curves for bladder cancer. solid

line for thiotepa; dashed line for placebo.

. . . . . . . . . . . . . . . . 415

8.1 mean squared error for estimating binomial   . sample size = 5, 20,
100, 1000.    =    = 0: solid line.    =    = 0.5: dashed line.    =    = 1:
dotted line.    =    = 4: dash   dotted line.

. . . . . . . . . . . . . . . . . 427
8.2 the be(.39, .01) density . . . . . . . . . . . . . . . . . . . . . . . . . . . 437
8.3 densities of   yin
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 438
8.4 densities of zin
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 440
8.5 the   -method .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 444
8.6 top panel: asymptotic standard deviations of   n and   (cid:48)

n for pr[x     a].
the solid line shows the actual relationship. the dotted line is the line
of equality. bottom panel: the ratio of asymptotic standard deviations. . 448

.
.
.

.
.
.

.
.
.

list of tables

1.1 party affiliation and referendum support . . . . . . . . . . . . . . . .
1.2 steroid use and test results
. . . . . . . . . . . . . . . . . . . . . . .

42
43

2.1 new and old seedlings in quadrat 6 in 1992 and 1993 . . . . . . . . . . 151

3.1 correspondence between models 3.3 and 3.4 . . . . . . . . . . . . . . . 214
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 237
3.2

     s for figure 3.14 .

5.1 rutherford and geiger   s data . . . . . . . . . . . . . . . . . . . . . . . 297

6.1 the numbers of pine cones on trees in the face experiment, 1998   2000.

352

7.1 fat as a percentage of body weight in ant colonies. three sites, two

seasons, two castes.

. . . . . . . . . . . . . . . . . . . . . . . . . . . . 395

x

preface

this book is intended as an upper level undergraduate or introductory graduate textbook
in statistical thinking with a likelihood emphasis for students with a good knowledge of
calculus and the ability to think abstractly. by    statistical thinking    is meant a focus
on ideas that statisticians care about as opposed to technical details of how to put those
ideas into practice. by    likelihood emphasis    is meant that the likelihood function and
likelihood principle are unifying ideas throughout the text. another unusual aspect is the
use of statistical software as a pedagogical tool. that is, instead of viewing the computer
merely as a convenient and accurate calculating device, we use computer calculation and
simulation as another way of explaining and helping readers understand the underlying
concepts.

our software of choice is r (r development core team [2006]). r and accompanying
manuals are available for free download from http://www.r-project.org. you may
wish to download an introduction to r to keep as a reference. it is highly recommended
that you try all the examples in r. they will help you understand concepts, give you a little
programming experience, and give you facility with a very    exible statistical software
package. and don   t just try the examples as written. vary them a little; play around with
them; experiment. you won   t hurt anything and you   ll learn a lot.

xi

chapter 1

id203

1.1 basic id203
let x be a set and f a collection of subsets of x. a id203 measure, or just a
id203, on (x,f ) is a function    : f     [0, 1]. in other words, to every set in f ,   
assigns a id203 between 0 and 1. we call    a set function because its domain is a
collection of sets. but not just any set function will do. to be a id203    must satisfy

1.   (   ) = 0 (    is the empty set.),
2.   (x) = 1, and
3. if a1 and a2 are disjoint then   (a1     a2) =   (a1) +   (a2).

one can show that property 3 holds for any    nite collection of disjoint sets, not just two;
see exercise 1. it is common practice, which we adopt in this text, to assume more     that
property 3 also holds for any countable collection of disjoint sets.
when x is a    nite or countably in   nite set (usually integers) then    is said to be a
discrete id203. when x is an interval, either    nite or in   nite, then    is said to be
a continuous id203. in the discrete case, f usually contains all possible subsets of
x. but in the continuous case, technical complications prohibit f from containing all
possible subsets of x. see casella and berger [2002] or schervish [1995] for details. in
this text we deemphasize the role of f and speak of id203 measures on x without
mentioning f .
in practical examples x is the set of outcomes of an    experiment    and    is determined
by experience, logic or judgement. for example, consider rolling a six-sided die. the set
of outcomes is {1, 2, 3, 4, 5, 6} so we would assign x     {1, 2, 3, 4, 5, 6}. if we believe the

1

1.1. basic id203
2
die to be fair then we would also assign   ({1}) =   ({2}) =        =   ({6}) = 1/6. the laws of
id203 then imply various other values such as

  ({1, 2}) = 1/3
  ({2, 4, 6}) = 1/2

etc.

often we omit the braces and write   (2),   (5), etc. setting   (i) = 1/6 is not automatic
simply because a die has six faces. we set   (i) = 1/6 because we believe the die to be fair.
we usually use the word    id203    or the symbol p in place of   . for example, we

would use the following phrases interchangeably:

    the id203 that the die lands 1
    p(1)
    p[the die lands 1]
      ({1})

we also use the word distribution in place of id203 measure.

the next example illustrates how probabilities of complicated events can be calculated

from probabilities of simple events.

example 1.1 (the game of craps)
craps is a gambling game played with two dice. here are the rules, as explained on
the website www.online-craps-gambling.com/craps-rules.html.

for the dice thrower (shooter) the object of the game is to throw a 7 or
an 11 on the    rst roll (a win) and avoid throwing a 2, 3 or 12 (a loss).
if
none of these numbers (2, 3, 7, 11 or 12) is thrown on the    rst throw (the
come-out roll) then a point is established (the point is the number rolled)
against which the shooter plays. the shooter continues to throw until one
of two numbers is thrown, the point number or a seven. if the shooter rolls
the point before rolling a seven he/she wins, however if the shooter throws
a seven before rolling the point he/she loses.

ultimately we would like to calculate p(shooter wins). but for now, let   s just calculate

p(shooter wins on come-out roll) = p(7 or 11) = p(7) + p(11).

1.1. basic id203
3
using the language of page 1, what is x in this case? let d1 denote the number
showing on the    rst die and d2 denote the number showing on the second die. d1 and
d2 are integers from 1 to 6. so x is the set of ordered pairs (d1, d2) or

(6, 6)
(5, 6)
(4, 6)
(3, 6)
(2, 6)
(1, 6)

(6, 5)
(5, 5)
(4, 5)
(3, 5)
(2, 5)
(1, 5)

(6, 4)
(5, 4)
(4, 4)
(3, 4)
(2, 4)
(1, 4)

(6, 3)
(5, 3)
(4, 3)
(3, 3)
(2, 3)
(1, 3)

(6, 2)
(5, 2)
(4, 2)
(3, 2)
(2, 2)
(1, 2)

(6, 1)
(5, 1)
(4, 1)
(3, 1)
(2, 1)
(1, 1)

if the dice are fair, then the pairs are all equally likely. since there are 36 of them, we
assign p(d1, d2) = 1/36 for any combination (d1, d2). finally, we can calculate

p(7 or 11) = p(6, 5) + p(5, 6) + p(6, 1) + p(5, 2)
+ p(4, 3) + p(3, 4) + p(2, 5) + p(1, 6) = 8/36 = 2/9.

the previous calculation uses desideratum 3 for id203 measures. the different
pairs (6, 5), (5, 6), . . . , (1, 6) are disjoint, so the id203 of their union is the sum of
their probabilities.

example 1.1 illustrates a common situation. we know the probabilities of some simple
events like the rolls of individual dice, and want to calculate the probabilities of more
complicated events like the success of a come-out roll. sometimes those probabilities
can be calculated mathematically as in the example. other times it is more convenient to
calculate them by computer simulation. we frequently use r to calculate probabilities. to
illustrate, example 1.2 uses r to calculate by simulation the same id203 we found
directly in example 1.1.
example 1.2 (craps, continued)
to simulate the game of craps, we will have to simulate rolling dice. that   s like ran-
domly sampling an integer from 1 to 6. the sample() command in r can do that. for
example, the following snippet of code generates one roll from a fair, six-sided die and
shows r   s response:

> sample(1:6,1)
[1] 1
>

when you start r on your computer, you see >, r   s prompt. then you can type a
command such as sample(1:6,1) which means    take a sample of size 1 from the

1.1. basic id203

4

numbers 1 through 6   . (it could have been abbreviated sample(6,1).) r responds
with [1] 1. the [1] says how many calculations r has done; you can ignore it. the 1
is r   s answer to the sample command; it selected the number    1   . then it gave another
>, showing that it   s ready for another command. try this several times; you shouldn   t
get    1    every time.

here   s a longer snippet that does something more useful.

> x <- sample ( 6, 10, replace=t ) # take a sample of

# size 10 and call it x

> x # print the ten values
[1] 6 4 2 3 4 4 3 6 6 2

> sum ( x == 3 ) # how many are equal to 3?
[1] 2
>

note

    # is the comment character. on each line, r ignores all text after #.
    we have to tell r to take its sample with replacement. otherwise, when r selects
in

   6    the    rst time,    6    is no longer available to be sampled a second time.
replace=t, the t stands for true.

    <- does assignment. i.e., the result of sample ( 6, 10, replace=t ) is as-
signed to a variable called x. the assignment symbol is two characters: < fol-
lowed by -.

    a variable such as x can hold many values simultaneously. when it does, it   s
called a vector. you can refer to individual elements of a vector. for example,
x[1] is the    rst element of x. x[1] turned out to be 6; x[2] turned out to be 4;
and so on.

    == does comparison. in the snippet above, (x==3) checks, for each element of
x, whether that element is equal to 3. if you just type x == 3 you will see a string
of t   s and f   s (true and false), one for each element of x. try it.

    the sum command treats t as 1 and f as 0.
    r is almost always tolerant of spaces. you can often leave them out or add extras

where you like.

1.1. basic id203

5

on average, we expect 1/6 of the draws to equal 1, another 1/6 to equal 2, and so
on. the following snippet is a quick demonstration. we simulate 6000 rolls of a die
and expect about 1000 1   s, 1000 2   s, etc. we count how many we actually get. this
snippet also introduces the for loop, which you should try to understand now because
it will be extremely useful in the future.

> x <- sample(6,6000,replace=t)

> for ( i in 1:6 ) print ( sum ( x==i ))
[1] 995
[1] 1047
[1] 986
[1] 1033
[1] 975
[1] 964
>

each number from 1 through 6 was chosen about 1000 times, plus or minus a little bit
due to chance variation.

now let   s get back to craps. we want to simulate a large number of games, say
1000. for each game, we record either 1 or 0, according to whether the shooter wins
on the come-out roll, or not. we should print out the number of wins at the end. so
we start with a code snippet like this:

# make a vector of length 1000, filled with 0   s

wins <- rep ( 0, 1000 )
for ( i in 1:1000 ) {
simulate a come-out roll

if shooter wins on come-out, wins[i] <- 1

}

sum ( wins ) # print the number of wins

now we have to    gure out how to simulate the come-out roll and decide whether the
shooter wins. clearly, we begin by simulating the roll of two dice. so our snippet
expands to

1.2. id203 densities

6

# make a vector of length 1000, filled with 0   s

wins <- rep ( 0, 1000 )

for ( i in 1:1000 ) {

d <- sample ( 1:6, 2, replace=t )

if ( sum(d) == 7 || sum(d) == 11 ) wins[i] <- 1

}
sum ( wins ) # print the number of wins

the    ||    stands for    or   . so that line of code sets wins[i] <- 1 if the sum of the rolls
is either 7 or 11. when i ran this simulation r printed out 219. the calculation in ex-
ample 1.1 says we should expect around (2/9)   1000     222 wins. our calculation and
simulation agree about as well as can be expected from a simulation. try it yourself a
few times. you shouldn   t always get 219. but you should get around 222 plus or minus
a little bit due to the randomness of the simulation.

try out these r commands in the version of r installed on your computer. make
sure you understand them. if you don   t, print out the results. try variations. try any
tricks you can think of to help you learn r.

1.2 id203 densities

so far we have dealt with discrete probabilities, or the probabilities of at most a countably
in   nite number of outcomes. for discrete probabilities, x is usually a set of integers, either
   nite or in   nite. section 1.2 deals with the case where x is an interval, either of    nite or
in   nite length. some examples are

medical trials the time until a patient experiences a relapse

sports the length of a javelin throw

ecology the lifetime of a tree

manufacturing the diameter of a ball bearing

computing the amount of time a help line customer spends on hold

physics the time until a uranium atom decays

oceanography the temperature of ocean water at a speci   ed latitude, longitude and depth

1.2. id203 densities

7

probabilities for such outcomes are called continuous. for example, let y be the time a
help line caller spends on hold. the random variable y is often modelled with a density
similar to that in figure 1.1.

figure 1.1: pdf for time on hold at help line

the curve in the    gure is a id203 density function or pdf. the pdf is large near
y = 0 and monotonically decreasing, expressing the idea that smaller values of y are
more likely than larger values. (reasonable people may disagree about whether this pdf
accurately represents callers    experience.) we typically use the symbols p,    or f for pdf   s.
we would write p(50),   (50) or f (50) to denote the height of the curve at y = 50. for a
pdf, id203 is the same as area under the curve. for example, the id203 that a
caller waits less than 60 minutes is

(cid:90) 60

p[y < 60] =

p(t) dt.

0

every pdf must satisfy two properties.
(cid:82)    
1. p(y)     0 for all y.

2.

       p(y) dy = 1.

yp(y)1.2. id203 densities
8
(cid:82) b
the    rst property holds because, if p(y) < 0 on the interval (a, b) then p[y     (a, b)] =
because p[y     (      ,   )] =(cid:82)    
a p(y) dy < 0; and we can   t have probabilities less than 0. the second property holds

       p(y) dy = 1.

one peculiar fact about any continuous random variable y is that p[y = a] = 0, for

every a     r. that   s because

p[y = a] = lim
    0

p[y     [a, a +  ]] = lim
    0

py(y) dy = 0.

(cid:90) a+ 

a

consequently, for any numbers a < b,

p[y     (a, b)] = p[y     [a, b)] = p[y     (a, b]] = p[y     [a, b]].

the use of    density    in statistics is entirely analagous to its use in physics. in both

   elds

density =

mass
volume

(1.1)

in statistics, we interpret density as id203 density, mass as id203 mass and
volume as length of interval. in both    elds, if the density varies from place to place (in
physics it would vary within an object; in statistics it would vary along the real line.) then
the density at a particular location is the limit of equation 1.1 as volume     0.

id203 density functions are derivatives of probabilities. for any    xed number a

fx(x) dx = fx(b).

(1.2)

similarly, d/da p[x     (a, b]] =     fx(a).

sometimes we can specify pdf   s for continuous random variables based on the logic
of the situation, just as we could specify discrete probabilities based on the logic of dice
rolls. for example, let y be the outcome of a spinner that is marked from 0 to 1. then y
will be somewhere in the unit interval, and all parts of the interval are equally likely. so
the pdf py must look like figure 1.2.

(cid:90) b

a

d
db

p[x     (a, b]] =

d
db

figure 1.2 was produced by the following snippet.

plot ( c(0,1), c(1,1), xlab="y", ylab="p(y)",

ylim=c(0,1.1), type="l" )

note:

1.2. id203 densities

9

figure 1.2: py for the outcome of a spinner

    c(0,1) collects 0 and 1 and puts them into the vector (0,1). likewise, c(1,1)

creates the vector (1,1).

    plot(x,y,...) produces a plot. the plot(c(0,1), c(1,1), ...) command

above plots the points (x[1],y[1]) = (0,1) and (x[2],y[2]) = (1,1).

    type="l" says to plot a line instead of individual points.
    xlab and ylab say how the axes are labelled.
    ylim=c(0,1.1) sets the limits of the y-axis on the plot. if ylim is not speci   ed
then r sets the limits automatically. limits on the x-axis can be speci   ed with xlim.

at other times we use id203 densities and distributions as models for data, and
estimate the densities and distributions directly from the data. figure 1.3 shows how that
works. the upper panel of the    gure is a histogram of 112 measurements of ocean tem-
perature at a depth of 1000 meters in the north atlantic near 45    north latitude and 20   
degrees west longitude. example 1.5 will say more about the data. superimposed on the
histogram is a pdf f . we think of f as underlying the data. the idea is that measuring a

0.00.20.40.60.81.00.00.40.8yp(y)1.2. id203 densities

10

temperature at that location is like randomly drawing a value from f . the 112 measure-
ments, which are spread out over about a century of time, are like 112 independent draws
from f . having the 112 measurements allows us to make a good estimate of f . if oceanog-
raphers return to that location to make additional measurements, it would be like making
additional draws from f . because we can estimate f reasonably well, we can predict with
some degree of assurance what the future draws will be like.

the bottom panel of figure 1.3 is a histogram of the discoveries data set that comes
with r and which is, as r explains,    the numbers of    great    inventions and scienti   c dis-
coveries in each year from 1860 to 1959.    it is overlaid with a line showing the poi(3.1)
distribution. (named distributions will be introduced in section 1.3.) it seems that the
number of great discoveries each year follows the poi(3.1) distribution, at least approxi-
mately. if we think the future will be like the past then we should expect future years to
follow a similar pattern. again, we think of a distribution underlying the data. the number
of discoveries in a single year is like a draw from the underlying distribution. the    gure
shows 100 years, which allow us to estimate the underlying distribution reasonably well.

figure 1.3 was produced by the following snippet.

par ( mfrow=c(2,1) )

good <- abs ( med.1000$lon + 20 ) < 1 &

abs ( med.1000$lat - 45 ) < 1

hist ( med.1000$temp[good], xlab="temperature", ylab="",

main="", prob=t, xlim=c(5,11) )

m <- mean ( med.1000$temp[good] )
s <- sqrt ( var ( med.1000$temp[good] ) )
x <- seq ( 5, 11, length=40 )
lines ( density(med.1000$temp[good]) )

hist ( discoveries, xlab="discoveries", ylab="", main="",

prob=t, breaks=seq(-.5,12.5,by=1) )
lines ( 0:12, dpois(0:12, 3.1), type="b" )

note:

    par sets r   s graphical parameters. mfrow=c(2,1) tells r to make an array of

multiple figures in a 2 by 1 layout.

1.2. id203 densities

11

figure 1.3: (a): ocean temperatures at 1000m depth near 45   n latitude, -20    longitude;
(b) numbers of important discoveries each year 1860   1959

temperature5678910110.00.20.4discoveries0246810120.000.100.201.2. id203 densities

12

    med.1000 is a data set of north atlantic ocean temperatures at a depth of 1000
meters. med.1000$lon and med.1000$lat are the longitude and latitude of the
measurements. med.1000$temp are the actual temperatures.

    abs stands for absolute value.
    good <- ... calls those points good whose longitude is between -19 and -21 and

whose latitude is between 44 and 46.

    hist() makes a histogram. prob=t turns the y-axis into a id203 scale (area

under the histogram is 1) instead of counts.

    mean() calculates the mean. var() calculates the variance. section 1.4 de   nes the
mean and variance of distributions. section 2.2.1 de   nes the mean and variance of
data sets.

    lines() adds lines to an existing plot.
    density() estimates a density from a data set.

it is often necessary to transform one variable into another as, for example, z = g(x)
for some speci   ed function g. we might know px (the subscript indicates which random
variable we   re talking about.) and want to calculate pz. here we consider only monotonic
functions g, so there is an inverse x = h(z).

theorem 1.1. let x be a random variable with pdf px. let g be a di   erentiable, mono-
tonic, invertible function and de   ne z = g(x). then the pdf of z is

proof. if g is an increasing function then

pz(b) =

p[z     (a, b]] =

d
db

d
db

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

pz(t) = px(g   1(t))

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)d g   1(t)
(cid:90) g   1(b)
p[x     (g   1(a), g   1(b)]]

d t

=

d
db

g   1(a)

px(x) dx =

the proof when g is decreasing is left as an exercise.

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)b

d g   1(t)

d t

   px(g   1(b))

(cid:3)

1.2. id203 densities

13

to illustrate, suppose that x is a random variable with pdf px(x) = 2x on the unit
its

interval. let z = 1/x. what is pz(z)? the inverse transformation is x = 1/z.
derivative is dx/dz =    z   2. therefore,

and the possible values of z are from 1 to    . so pz(z) = 2/z3 on the interval (1,   ). as a
partial check, we can verify that the integral is 1.

pz(z) = px(g   1(z))

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)    1

z2

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) =

2
z

2
z3

d z

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)d g   1(z)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) =
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)   

1

2

z3 dz =     1

z2

= 1.

(cid:90)    

1

theorem 1.1 can be explained by figure 1.4. the    gure shows an x, a z, and the
function z = g(x). a little interval is shown around x; call it ix. it gets mapped by g into a
little interval around z; call it iz. the density is
p[x     ix]
length(ix)

pz(z)     p[z     iz]

    px(x)|h(cid:48)(z)|

length(ix)
length(iz)

length(iz)

(1.3)

=

the approximations in equation 1.3 are exact as the lengths of ix and iz decrease to 0.

if g is not one-to-one, then it is often possible to    nd subsets of r on which g is one-

to-one, and work separately on each subset.

figure 1.4: change of variables

xzz=g(x)1.3. parametric families of distributions

14

1.3 parametric families of distributions

probabilities often depend on one or more unknown numerical constants. suppose, for
example, that we have a biased coin. let    be the chance that it lands h. then p(h) =   ;
but we might not know   ; it is an unknown numerical constant. in this case we have a
family of id203 measures, one for each value of   , and we don   t know which one is
right. when we need to be explicit that probabilities depend on   , we use the notation, for
example, p(h|   ) or p(h|    = 1/3). the vertical bar is read    given    or    given that   . so
p(h|    = 1/3) is read    the id203 of heads given that    equals 1/3    and p(h|   ) is read
   the id203 of heads given   .    this notation means
p(h|    = 1/3) = 1/3,
p(t|    = 1/3) = 2/3,
p(t|    = 1/5) = 4/5

and so on. instead of    given    we also use the word    conditional   . so we would say    the
id203 of heads conditional on      , etc.

the unknown constant    is called a parameter. the set of possible values for    is
denoted    (upper case   ). for each    there is a id203 measure     . the set of all
possible id203 measures (for the problem at hand),

{     :          },

is called a parametric family of id203 measures. the rest of this chapter introduces
four of the most useful parametric families of id203 measures.

1.3.1 the binomial distribution
statisticians often have to consider observations of the following type.

    a repeatable event results in either a success or a failure.
    many repetitions are observed.
    successes and failures are counted.
    the number of successes helps us learn about the id203 of success.

such observations are called binomial. some examples are

medical trials a new treatment is given to many patients. each is either cured or not.

1.3. parametric families of distributions

15

toxicity tests many laboratory animals are exposed to a potential carcinogen. each either

develops cancer or not.

ecology many seeds are planted. each either germinates or not.

quality control many supposedly identical items are subjected to a test. each either

passes or not.

because binomial experiments are so prevalent there is specialized language to describe
them. each repetition is called a trial; the number of trials is usually denoted n; the
unknown id203 of success is usually denoted either p or   ; the number of successes
is usually denoted x. we write x     bin(n, p). the symbol           is read is distributed as; we
would say    x is distributed as binomial n p    or    x has the binomial n, p distribution   .
some important assumptions about binomial experiments are that n is    xed in advance,
   is the same for every trial, and the outcome of any trial does not in   uence the outcome
of any other trial. when n = 1 we say x has a bernoulli(  ) distribution and write x    
bern(  ); the individual trials in a binomial experiment are called bernoulli trials.
when a binomial experiment is performed, x will turn out to be one of the integers
from 0 to n. we need to know the associated probabilities; i.e. p[x = k |   ] for each value
of k from 0 to n. these probabilities are given by equation 1.4 whose derivation is given
in section 5.1.

p[x = k |   ] =

  k(1       )n   k

(cid:33)

(cid:32)n

k

(cid:16)n

(cid:17)

(1.4)

n!

k

is called a binomial coe   cient and is read    n choose k   .

k!(n   k)! and
the term
is equal to the number of subsets of size k that can be formed from a group of n distinct
items. in case k = 0 or k = n, 0! is de   ned to be 1. figure 1.5 shows binomial probabilities
for n     {3, 30, 300} and p     {.1, .5, .9}.
example 1.3 (craps, continued)
this example continues the game of craps. see examples 1.1 and 1.2.

=

k

what is the id203 that at least one of the next four players wins on his come-

out roll?

this is a binomial experiment because

1. we are looking at repeated trials. each come-out roll is a trial. it results in either

success, or not.

2. the outcome of one trial does not affect the other trials.

3. we are counting the number of successes.

(cid:16)n

(cid:17)

1.3. parametric families of distributions

16

figure 1.5: binomial probabilities

0.00.6n = 3  p = 0.1xid20301230.150.35n = 3  p = 0.5xid20301230.00.6n = 3  p = 0.9xid20301230.000.20n = 30  p = 0.1xid203010300.000.15n = 30  p = 0.5xid203010300.000.20n = 30  p = 0.9xid203010300.000.06n = 300  p = 0.1xid20302000.000.04n = 300  p = 0.5xid20302000.000.06n = 300  p = 0.9xid20302001.3. parametric families of distributions

17

let x be the number of successes. there are four trials, so n = 4. we calculated the
id203 of success in example 1.1; it   s p = 2/9. so x     bin(4, 2/9). the id203
of success in at least one come-out roll is

4(cid:88)
p[success in at least one come-out roll] = p[x     1]

4(cid:88)

=

p[x = i] =

a convenient way to re-express equation 1.5 is

i=1

i=1

(cid:33)
(cid:32)4

i

(2/9)i(7/9)4   i     0.634 (1.5)

p[x     1] = 1     p[x = 0],

which can be quickly calculated in r. the dbinom() command computes binomial prob-
abilities. to compute equation 1.5 we would write

1 - dbinom(0,4,2/9)

the 0 says what value of x we want. the 4 and the 2/9 are the number of trials and the
id203 of success. try it. learn it.

1.3.2 the poisson distribution
another common type of observation occurs in the following situation.

    there is a domain of study, usually a block of space or time.
    events arise seemingly at random in the domain.
    there is an underlying rate at which events arise.

such observations are called poisson after the 19th century french mathematician sim  on-
denis poisson. the number of events in the domain of study helps us learn about the rate.
some examples are

ecology tree seedlings emerge from the forest    oor.

computer programming bugs occur in computer code.

quality control defects occur along a strand of yarn.

genetics mutations occur in a genome.

1.3. parametric families of distributions

18

tra   c    ow cars arrive at an intersection.

customer service customers arrive at a service counter.

neurobiology neurons    re.

the rate at which events occur is often called   ; the number of events that occur in the
domain of study is often called x; we write x     poi(  ). important assumptions about
poisson observations are that two events cannot occur at exactly the same location in space
or time, that the occurence of an event at location (cid:96)1 does not in   uence whether an event
occurs at any other location (cid:96)2, and the rate at which events arise does not vary over the
domain of study.

when a poisson experiment is observed, x will turn out to be a nonnegative integer.

the associated probabilities are given by equation 1.6.
  ke     
k!

p[x = k |   ] =

.

(1.6)

one of the main themes of statistics is the quantitative way in which data help us learn
about the phenomenon we are studying. example 1.4 shows how this works when we want
to learn about the rate    of a poisson distribution.

example 1.4 (seedlings in a forest)
tree populations move by dispersing their seeds. seeds become seedlings, seedlings
become saplings, and saplings become adults which eventually produce more seeds.
over time, whole populations may migrate in response to climate change. one in-
stance occurred at the end of the ice age when species that had been sequestered
in the south were free to move north. another instance may be occurring today in
response to global warming. one critical feature of the migration is its speed. some of
the factors determining the speed are the typical distances of long range seed disper-
sal, the proportion of seeds that germinate and emerge from the forest    oor to become
seedlings, and the proportion of seedlings that survive each year.

to learn about emergence and survival, ecologists return annually to forest quadrats
(square meter sites) to count seedlings that have emerged since the previous year.
one such study was reported in lavine et al. [2002]. a fundamental quantity of interest
is the rate    at which seedlings emerge. suppose that, in one quadrat, three new
seedlings are observed. what does that say about   ?
different values of    yield different values of p[x = 3|   ]. to compare different
values of    we see how well each one explains the data x = 3; i.e., we compare

1.3. parametric families of distributions
p[x = 3|   ] for different values of   . for example,

19

p[x = 3|    = 1] =
p[x = 3|    = 2] =
p[x = 3|    = 3] =
p[x = 3|    = 4] =

13e   1
3!
23e   2
3!
33e   3
3!
43e   4
3!

    0.06
    0.18
    0.22
    0.20

in other words, the value    = 3 explains the data almost four times as well as the
value    = 1 and just a little bit better than the values    = 2 and    = 4. figure 1.6
shows p[x = 3|   ] plotted as a function of   . the    gure suggests that p[x = 3|   ] is
maximized by    = 3. the suggestion can be veri   ed by differentiating equation 1.6
with respect to lambda, equating to 0, and solving. the    gure also shows that any
value of    from about 0.5 to about 9 explains the data not too much worse than    = 3.

figure 1.6: p[x = 3|   ] as a function of   

02468100.000.100.20lambdap[x=3]1.3. parametric families of distributions

20

figure 1.6 was produced by the following snippet.

lam <- seq ( 0, 10, length=50 )
y <- dpois ( 3, lam )
plot ( lam, y, xlab="lambda", ylab="p[x=3]", type="l" )

note:

    seq stands for    sequence   . seq(0,10,length=50) produces a sequence of 50

numbers evenly spaced from 0 to 10.

    dpois calculates probabilities for poisson distributions the way dbinom does for

binomial distributions.

    plot produces a plot. in the plot(...) command above, lam goes on the x-axis,
y goes on the y-axis, xlab and ylab say how the axes are labelled, and type="l"
says to plot a line instead of indvidual points.

making and interpreting plots is a big part of statistics. figure 1.6 is a good example.
just by looking at the    gure we were able to tell which values of    are plausible and which
are not. most of the    gures in this book were produced in r.

1.3.3 the exponential distribution
it is often necessary to model a continuous random variable x whose density decreases
away from 0. some examples are

customer service time on hold at a help line

neurobiology time until the next neuron    res

seismology time until the next earthquake

medicine remaining years of life for a cancer patient

ecology dispersal distance of a seed

in these examples it is expected that most calls, times or distances will be short and a
few will be long. so the density should be large near x = 0 and decreasing as x increases.

1.3. parametric families of distributions

21

a useful pdf for such situations is the exponential density

(1.7)
we say x has an exponential distribution with parameter    and write x     exp(  ). fig-
ure 1.7 shows exponential densities for several di   erent values of   .

for x > 0.

p(x) =

  

e    x

1
  

figure 1.7: exponential densities

figure 1.7 was produced by the following snippet.

x <- seq ( 0, 2, length=40 ) # 40 values from 0 to 2
lam <- c ( 2, 1, .2, .1 )
y <- matrix ( na, 40, 4 )

# 4 different values of lambda
# y values for plotting

0.00.51.01.52.00246810xp(x)lambda = 2lambda = 1lambda = 0.2lambda = 0.11.3. parametric families of distributions

22

for ( i in 1:4 )

y[,i] <- dexp ( x, 1/lam[i] ) # exponential pdf

matplot ( x, y, type="l", xlab="x", ylab="p(x)", col=1 )
legend ( 1.2, 10, paste ( "lambda =", lam ),

lty=1:4, cex=.75 )

    we want to plot the exponential density for several di   erent values of    so we choose

40 values of x between 0 and 2 at which to do the plotting.

    next we choose 4 values of   .
    then we need to calculate and save p(x) for each combination of x and   . we   ll
save them in a matrix called y. matrix(na,40,4) creates the matrix. the size of
the matrix is 40 by 4. it is    lled with na, or not available.

    dexp calculates the exponential pdf. the argument x tells r the x values at which to
calculate the pdf. x can be a vector. the argument 1/lam[i] tells r the value of the
parameter. r uses a di   erent notation than this book. where this book says exp(2),
r says exp(.5). that   s the reason for the 1/lam[i].

    matplot plots one matrix versus another. the    rst matrix is x and the second is y.
matplot plots each column of y against each column of x. in our case x is vector,
so matplot plots each column of y, in turn, against x. type="l" says to plot lines
instead of points. col=1 says to use the    rst color in r   s library of colors.

    legend (...) puts a legend on the plot. the 1.2 and 10 are the x and y coordi-
nates of the upper left corner of the legend box. lty=1:4 says to use line types 1
through 4. cex=.75 sets the character expansion factor to .75. in other words, it
sets the font size.

    paste(..) creates the words that go into the legend. it pastes together "lambda ="

with the four values of lam.

1.3.4 the normal distribution
it is often necessary to model a continuous random variable y whose density is mound-
shaped. some examples are

1.3. parametric families of distributions

23

biological anthropology heights of people

oceanography ocean temperatures at a particular location

quality control diameters of ball bearings

education sat scores

in each case the random variable is expected to have a central value around which most of
the observations cluster. fewer and fewer observations are farther and farther away from
the center. so the pdf should be unimodal     large in the center and decreasing in both
directions away from the center. a useful pdf for such situations is the normal density

p(y) =

1   
2    

2( y     
   )2

e    1

.

(1.8)

we say y has a normal distribution with mean    and standard deviation    and write
y     n(  ,   ). figure 1.8 shows normal densities for several di   erent values of (  ,   ). as
illustrated by the    gure,    controls the center of the density; each pdf is centered over its
own value of   . on the other hand,    controls the spread. pdf   s with larger values of    are
more spread out; pdf   s with smaller    are tighter.

figure 1.8 was produced by the following snippet.

x <- seq ( -6, 6, len=100 )
y <- cbind ( dnorm ( x, -2, 1 ),

dnorm ( x, 0, 2 ),
dnorm ( x, 0, .5 ),
dnorm ( x, 2, .3 ),
dnorm ( x, -.5, 3 )

)

matplot ( x, y, type="l", col=1 )
legend ( -6, 1.3, paste( "mu =", c(-2,0,0,2,-.5),

lty=1:5, col=1, cex=.75 )

"; sigma =", c(1,2,.5,.3,3) ),

    dnorm(...) computes the normal pdf. the    rst argument is the set of x values;

the second argument is the mean; the third argument is the standard deviation.

1.3. parametric families of distributions

24

figure 1.8: normal densities

!6!4!202460.00.20.40.60.81.01.2xymu = !2 ; sigma = 1mu = 0 ; sigma = 2mu = 0 ; sigma = 0.5mu = 2 ; sigma = 0.3mu = !0.5 ; sigma = 31.3. parametric families of distributions

25

as a further illustration, figure 1.9 shows a histogram of 105 ocean temperatures (   c)
recorded in the atlantic ocean from about 1938 to 1997 at a depth of 1000 meters, near
45 degrees north latitude and 30 degrees west longitude. the n(5.87, .72) density is
superimposed on the histogram. the normal density represents the data moderately well.
we will study ocean temperatures in much more detail in a series of examples beginning
with example 1.5.

figure 1.9: ocean temperatures at 45   n, 30   w, 1000m depth. the n(5.87, .72) density.

figure 1.9 was produced by

hist ( y, prob=t, xlab="temperature", ylab="density",

ylim=c(0,.6), main="" )
t <- seq ( 4, 7.5, length=40 )

temperaturedensity4.04.55.05.56.06.57.07.50.00.20.40.61.3. parametric families of distributions

26

lines ( t, dnorm ( t, mean(y), sd(y) ) )

    the 105 temperatures are in a vector y.
    hist produces a histogram. the argument prob=t causes the vertical scale to be

id203 density instead of counts.

    the line t <- ... sets 40 values of t in the interval [4, 7.5] at which to evaluate

the normal density for plotting purposes.

    lines displays the normal density.

as usual, you should try to understand the r commands.

the function rnorm(n,mu,sig) generates a random sample from a normal distribu-
tion. n is the sample size; mu is the mean; and sig is the standard deviation. to demon-
strate, we   ll generate a sample of size 100 from the n(5.87, .72) density, the density in
figure 1.9, and compare the sample histogram to the theoretical density. figure 1.10(a)
shows the comparison. it shows about how good a    t can be expected between a histogram
and the normal density, for a sample of size around 100 in the most ideal case when the
sample was actually generated from the normal distribution. it is interesting to consider
whether the    t in figure 1.9 is much worse.

figure 1.10(a) was produced by

samp <- rnorm ( 100, 5.87, .72 )
y.vals <- seq ( 4, 7.5, length=40 )
hist ( samp, prob=t, main="(a)",

xlim=c(4,7.5), xlab="degrees c",
ylim=c(0,.6), ylab="density" )

lines ( y.vals, dnorm(y.vals,5.87,.72) )

when working with normal distributions it is extremely useful to think in terms of units
of standard deviation, or simply standard units. one standard unit equals one standard
in figure 1.10(a) the number 6.6 is about 1 standard unit above the mean,
deviation.

1.3. parametric families of distributions

27

figure 1.10: (a): a sample of size 100 from n(5.87, .72) and the n(5.87, .72) density.
(b): a sample of size 100 from n(42.566, 1.296) and the n(42.566, 1.296) density. (c): a
sample of size 100 from n(0, 1) and the n(0, 1) density.

(a)degrees cdensity4.04.55.05.56.06.57.07.50.00.20.40.6(b)degrees fdensity394041424344450.000.150.30(c)standard unitsdensity!2!10120.00.40.81.3. parametric families of distributions

28

while the number 4.5 is about 2 standard units below the mean. to see why that   s a
useful way to think, figure 1.10(b) takes the sample from figure 1.10(a), multiplies by
9/5 and adds 32, to simulate temperatures measured in    f instead of    c. the histograms in
panels (a) and (b) are slightly di   erent because r has chosen the bin boundaries di   erently;
but the two normal curves have identical shapes. now consider some temperatures, say
6.5   c = 43.7   f and 4.5   c = 40.1   f. corresponding temperatures occupy corresponding
points on the plots. a vertical line at 6.5 in panel (a) divides the density into two sections
exactly congruent to the two sections created by a vertical line at 43.7 in panel (b). a
similar statement holds for 4.5 and 40.1. the point is that the two density curves have
exactly the same shape. they are identical except for the scale on the horizontal axis, and
that scale is determined by the standard deviation. standard units are a scale-free way of
thinking about the picture.

to continue, we converted the temperatures in panels (a) and (b) to standard units,
and plotted them in panel (c). once again, r made a slightly di   erent choice for the bin
boundaries, but the normal curves all have the same shape.

panels (b) and (c) of figure 1.10 were produced by

y2samp <- samp * 9/5 + 32
y2.vals <- y.vals * 9/5 + 32
hist ( y2samp, prob=t, main="(b)",

xlim=c(39.2,45.5), xlab="degrees f",
ylim=c(0,1/3), ylab="density" )

lines ( y2.vals, dnorm(y2.vals,42.566,1.296) )

zsamp <- (samp-5.87) / .72
z.vals <- (y.vals-5.87) / .72
hist ( zsamp, prob=t, main="(c)",

xlim=c(-2.6,2.26), xlab="standard units",
ylim=c(0,.833), ylab="density" )

lines ( z.vals, dnorm(z.vals,0,1) )

let y     n(  ,   ) and de   ne a new random variable z = (y     )/  . z is in standard units.
it tells how many standard units y is above or below its mean   . what is the distribution
of z? the easiest way to    nd out is to calculate pz, the density of z, and see whether we

1.4. centers, spreads, means, and moments

29

recognize it. from theorem 1.1,

pz(z) = py(  z +   )   =

e    1
2 z2

1   
2  

which we recognize as the n(0, 1) density. i.e., z     n(0, 1). the n(0, 1) distribution is
called the standard normal distribution.

1.4 centers, spreads, means, and moments

recall figure 1.3 (pg. 11). in each panel there is a histogram of a data set along with an
estimate of the underlying pdf or pmf p. in each case we have found a distribution that
matches the data reasonably well, but the distributions we have drawn are not the only
ones that match well. we could make modest changes to either distribution and still have a
reasonably good match. but whatever pdf we propose for the top panel should be roughly
mound shaped with a center around 8    and a spread that ranges from about 6    to about
10   . and in the bottom panel we would want a distribution with a peak around 2 or 3 and
a longish right hand tail.

in either case, the details of the distribution matter less than these central features. so
statisticians often need to refer to the center, or location, of a sample or a distribution and
also to its spread. section 1.4 gives some of the theoretical underpinnings for talking about
centers and spreads of distributions.
example 1.5
physical oceanographers study physical properties such as temperature, salinity, pres-
sure, oxygen concentration, and potential vorticity of the world   s oceans. data about
the oceans    surface can be collected by satellites    bouncing signals off the surface. but
satellites cannot collect data about deep ocean water. until as recently as the 1970s,
the main source of data about deep water came from ships that lower instruments to
various depths to record properties of ocean water such as temperature, pressure,
salinity, etc. (since about the 1970s oceanographers have begun to employ neutrally
buoyant    oats. a brief description and history of the    oats can be found on the web at
www.soc.soton.ac.uk/jrd/hydro/shb/float.history.html.) figure 1.11 shows
locations, called hydrographic stations, off the coast of europe and africa where ship-
based measurements were taken between about 1910 and 1990. the outline of the
continents is apparent on the right-hand side of the    gure due to the lack of measure-
ments over land.

deep ocean currents cannot be seen but can be inferred from physical properties.
figure 1.12 shows temperatures recorded over time at a depth of 1000 meters at nine

1.4. centers, spreads, means, and moments

30

different locations. the upper right panel in figure 1.12 is the same as the top panel of
figure 1.3. each histogram in figure 1.12 has a black circle indicating the    center    or
   location    of the points that make up the histogram. these centers are good estimates
of the centers of the underlying pdf   s. the centers range from a low of about 5    at
latitude 45 and longitude -40 to a high of about 9    at latitude 35 and longitude -20. (by
convention, longitudes to the west of greenwich, england are negative; longitudes to
the east of greenwich are positive.) it   s apparent from the centers that for each latitude,
temperatures tend to get colder as we move from east to west. for each longitude,
temperatures are warmest at the middle latitude and colder to the north and south.
data like these allow oceanographers to deduce the presence of a large outpouring
of relatively warm water called the mediterranean tongue from the mediterranean sea
into the atlantic ocean. the mediterranean tongue is centered at about 1000 meters
depth and 35   n latitude,    ows from east to west, and is warmer than the surrounding
atlantic waters into which it    ows.

(cid:88)

1
n

there are many ways of describing the center of a data sample. but by far the most
common is the mean. the mean of a sample, or of any list of numbers, is just the average.
de   nition 1.1 (mean of a sample). the mean of a sample, or any list of numbers, x1, . . . , xn
is

mean of x1, . . . , xn =

(1.9)
the black circles in figure 1.12 are means. the mean of x1, . . . , xn is often denoted
  x. means are often a good    rst step in describing data that are unimodal and roughly
symmetric.

xi.

similarly, means are often useful in describing distributions. for example, the mean
of the pdf in the upper panel of figure 1.3 is about 8.1, the same as the mean of the data
in same panel. similarly, in the bottom panel, the mean of the poi(3.1) distribution is 3.1,
the same as the mean of the discoveries data. of course we chose the distributions to
have means that matched the means of the data.

for some other examples, consider the bin(n, p) distributions shown in figure 1.5. the
center of the bin(30, .5) distribution appears to be around 15, the center of the bin(300, .9)
distribution appears to be around 270, and so on. the mean of a distribution, or of a
random variable, is also called the expected value or expectation and is written e(x).
de   nition 1.2 (mean of a random variable). let x be a random variable with cdf fx and
pdf px. then the mean of x (equivalently, the mean of fx) is
if x is discrete
if x is continuous

i i p[x = i]
x px(x) dx

                     
(cid:80)
(cid:82)

e(x) =

(1.10)

1.4. centers, spreads, means, and moments

31

figure 1.11: hydrographic stations o    the coast of europe and africa

!40!30!20!1002030405060longitudelatitude1.4. centers, spreads, means, and moments

32

figure 1.12: water temperatures (   c) at 1000m depth, latitude 25, 35, 45 degrees north
longitude 20, 30, 40 degrees west

latitude = 45  longitude = !40n = 213temperature4680204060latitude = 45  longitude = !30n = 105temperature468051020latitude = 45  longitude = !20n = 112temperature468051020latitude = 35  longitude = !40n = 37temperature46805101520latitude = 35  longitude = !30n = 24temperature4680246812latitude = 35  longitude = !20n = 44temperature468051015latitude = 25  longitude = !40n = 47temperature468051020latitude = 25  longitude = !30n = 35temperature468051015latitude = 25  longitude = !20n = 27temperature4680510151.4. centers, spreads, means, and moments

33

the logic of the de   nition is that e(x) is a weighted average of the possible values of
x. each value is weighted by its importance, or id203. in addition to e(x), another
common notation for the mean of a random variable x is   x.

let   s look at some of the families of id203 distributions that we have already

studied and calculate their expectations.
binomial if x     bin(n, p) then

e(x) =

=

=

(cid:33)
(cid:33)

i

i

i=0

n(cid:88)
(cid:32)n
n(cid:88)
(cid:32)n
n(cid:88)
n(cid:88)
n   1(cid:88)

i=1

i=1

i=0

i

i

j=0

= np

= np

i p[x = i]

pi(1     p)n   i

pi(1     p)n   i
(n     1)!

(i     1)!(n     i)!

(1.11)

pi   1(1     p)n   i

(n     1)!

j!(n     1     j)!

p j(1     p)n   1    j

= np

(cid:80)n   1
the    rst    ve equalities are just algebra. the sixth is worth remembering. the sum
j=0        is the sum of the probabilities of the bin(n     1, p) distribution. therefore
the sum is equal to 1. you may wish to compare e(x) to figure 1.5.

poisson if x     poi(  ) then

e(x) =   .

the derivation is left as exercise 19.

(cid:90)    
exponential if x     exp(  ) then

e(x) =

0

use integration by parts.

(cid:90)    

0

xe   x/   dx =   .

x p(x) dx =   

   1

normal if x     n(  ,   ) then e(x) =   . the derivation is left as exercise 19.

1.4. centers, spreads, means, and moments

34

statisticians also need to measure and describe the spread of distributions, random
variables and samples.
in figure 1.12, the spread would measure how much variation
there is in ocean temperatures at a single location, which in turn would tell us something
about how heat moves from place to place in the ocean. spread could also describe the
variation in the annual numbers of    great    discoveries, the range of typical outcomes for
a gambler playing a game repeatedly at a casino or an investor in the stock market, or the
uncertain e   ect of a change in the federal reserve bank   s monetary policy, or even why
di   erent patches of the same forest have di   erent plants on them.

by far the most common measures of spread are the variance and its square root, the

standard deviation.

de   nition 1.3 (variance). the variance of a sample y1, . . . , yn is

var(y1, . . . , yn) = n   1(cid:88)

(yi       y)2.

the variance of a random variable y is

de   nition 1.4 (standard deviation). the standard deviation of a sample y1, . . . , yn is

sd(y1, . . . , yn) =

(yi       y))2.

var(y) = e((y       y)2)
(cid:113)
(cid:88)
(cid:112)e((y       y)2).

n   1

sd(y) =

the standard deviation of a random variable y is

the variance (standard deviation) of y is often denoted   2

common distributions will be derived later in the book.

sample as var(y1, . . . , yn) = (n    1)   1(cid:80)(yi       y)2. for large n there is no practical di   erence

caution: for reasons which we don   t go into here, many books de   ne the variance of a

y (  y). the variances of

between the two de   nitions. and the de   nition of variance of a random variable remains
unchanged.

while the de   nition of the variance of a random variable highlights its interpretation
as deviations away from the mean, there is an equivalent formula that is sometimes easier
to compute.
theorem 1.2. if y is a random variable, then var(y) = e(y2)     (ey)2.

1.4. centers, spreads, means, and moments

proof.

var(y) = e((y     ey)2)

= e(y2     2yey + (ey)2)
= e(y2)     2(ey)2 + (ey)2
= e(y2)     (ey)2

35

(cid:3)

to develop a feel for what the standard deviation measures, figure 1.13 repeats fig-
ure 1.12 and adds arrows showing    1 standard deviation away from the mean. standard
deviations have the same units as the original random variable; variances have squared
units. e.g., if y is measured in degrees, then sd(y) is in degrees but var(y) is in degrees2.
because of this, sd is easier to interpret graphically. that   s why we were able to depict
sd   s in figure 1.13.

most    mound-shaped    samples, that is, samples that are unimodal and roughly sym-

metric, follow this rule of thumb:

    about 2/3 of the sample falls within about 1 standard deviation of the mean;

    about 95% of the sample falls within about 2 standard deviations of the mean.

if x1, . . . , xn are a sample
the rule of thumb has implications for predictive accuracy.
from a mound-shaped distribution, then one would predict that future observations will
be around   x with, again, about 2/3 of them within about one sd and about 95% of them
within about two sd   s.

to illustrate further, we   ll calculate the sd of a few mound-shaped random variables

and compare the sd   s to the pdf   s.

1.4. centers, spreads, means, and moments

36

figure 1.13: water temperatures (   c) at 1000m depth, latitude 25, 35, 45 degrees north,
longitude 20, 30, 40 degrees west, with standard deviations

latitude = 45  longitude = !40n = 213temperature4680204060latitude = 45  longitude = !30n = 105temperature468051020latitude = 45  longitude = !20n = 112temperature468051020latitude = 35  longitude = !40n = 37temperature46805101520latitude = 35  longitude = !30n = 24temperature4680246812latitude = 35  longitude = !20n = 44temperature468051015latitude = 25  longitude = !40n = 47temperature468051020latitude = 25  longitude = !30n = 35temperature468051015latitude = 25  longitude = !20n = 27temperature468051015y

=

y=0

y2

.530     152

(cid:33)
(cid:32)30
var(y) = e(y2)     (ey)2

1.4. centers, spreads, means, and moments
binomial let y     bin(30, .5).
30(cid:88)
30(cid:88)
(y     1)!(30     y)! .530     152
29(cid:88)
v!(29     v)! .529     152
                      29(cid:88)
29(cid:88)
(cid:33)
(cid:32)29
v!(29     v)! .529 +
+ 1     15

(v + 1)

= 15

= 15

= 15

30!

29!

29!

v=0

v=0

v=0

y=1

=

y

v

2

29!

v!(29     v)! .529

37

(1.12)

                          152

=

15
2

and therefore sd(y) =

normal let y     n(0, 1).

   

15/2     2.7. (see exercises 20 and 21.)

var(y) = e(y2)

e    y2

2 dy

      

(cid:90)    
(cid:90)    
y2   
2  
(cid:90)    
y2   
2  
1   
2  

0

0

=

= 2

= 2

e    y2

2 dy

e    y2

2 dy

(1.13)

and therefore sd(y) = 1. (see exercises 20 and 21.)

= 1

figure 1.14 shows the comparison. the top panel shows the pdf of the bin(30, .5) distri-
bution; the bottom panel shows the n(0, 1) distribution.

1.4. centers, spreads, means, and moments

38

figure 1.14: two pdf   s with   1 and   2 sd   s. top panel: bin(30, .5); bottom panel: n(0, 1).

0510152025300.000.050.100.15yp(y)+/    2 sd   s+/    1 sd   3   2   101230.00.10.20.30.4yp(y)+/    2 sd   s+/    1 sd1.4. centers, spreads, means, and moments

39

figure 1.14 was produced by the following r code.

par ( mfrow=c(2,1) )

y <- 0:30
sd <- sqrt ( 15 / 2 )
plot ( y, dbinom(y,30,.5), ylab="p(y)" )
arrows ( 15-2*sd, 0, 15+2*sd, 0, angle=60, length=.1,

code=3, lwd=2 )

text ( 15, .008, "+/- 2 sd   s" )
arrows ( 15-sd, .03, 15+sd, .03, angle=60, length=.1,

code=3, lwd=2 )

text ( 15, .04, "+/- 1 sd" )

y <- seq(-3,3,length=60)
plot ( y, dnorm(y,0,1), ylab="p(y)", type="l" )
arrows ( -2, .02, 2, .02, angle=60, length=.1, code=3, lwd=2 )
text ( 0, .04, "+/- 2 sd   s" )
arrows ( -1, .15, 1, .15, angle=60, length=.1, code=3, lwd=2 )
text ( 0, .17, "+/- 1 sd" )

    arrows(x0, y0, x1, y1, length, angle, code, ...) adds arrows to a

plot. see the documentation for the meaning of the arguments.

    text adds text to a plot. see the documentation for the meaning of the arguments.

de   nition 1.5 (moment). the r   th moment of a sample y1, . . . , yn or random variable y is
de   ned as

e((y       y)r)

(yi       y)r

(for samples)
(for random variables)

n   1(cid:88)

variances are second moments. moments above the second have little applicability.
r has built-in functions to compute means and variances and can compute other mo-

ments easily. note that r uses the divisor n     1 in its de   nition of variance.

# use r to calculate moments of the bin(100,.5) distribution

1.4. centers, spreads, means, and moments

40

# the third moment

# our standard deviation

# the mean
# the variance
# the sd

x <- rbinom ( 5000, 100, .5 )
m <- mean ( x )
v <- var
( x )
s <- sqrt ( v )
mean ( (x-m)^3 )
our.v <- mean ( (x-m)^2 ) # our variance
our.s <- sqrt ( our.v )
print ( c ( v, our.v ) )
print ( c ( s, our.s ) )
    rbinom(...) generates random draws from the binomial distribution. the 5000
says how many draws to generate. the 100 and .5 say that the draws are to be from
the bin(100, .5) distribution.

h(y)p(y) dy ((cid:80) h(y)p(y) in the discrete case) is

let h be a function. then e[h(y)] =(cid:82)
   nd px, and then evaluate e[x] =(cid:82)
the expected value of h(y) and is called a generalized moment. there are sometimes two
ways to evaluate e[h(y)]. one is to evaluate the integral. the other is to let x = h(y),
xpx(x) dx. for example, let y have pdf fy(y) = 1 for
(cid:90) 1
y     (0, 1), and let x = h(y) = exp(y).
method 1

# not quite equal
# not quite equal

e[h(y)] =

exp(y) dy = exp(y)

(cid:12)(cid:12)(cid:12)1

0

= e     1.

method 2

px(x) = py(log(x)) dy/dx = 1/x

e[x] =

xpx(x) dx =

1 dx = e     1

0

(cid:90) e

1

(cid:90)

(cid:90)

(cid:90) e

1

(cid:90)

if h is a linear function then e[h(y)] has a particularly appealing form.

theorem 1.3. if x = a + by then e[x] = a + be[y].

proof. we prove the continuous case; the discrete case is left as an exercise.

ex =

(a + by) fy(y) dy

= a

fy(y) dy + b

y fy(y) dy

= a + bey

(cid:3)

1.5. joint, marginal and id155

41

there is a corresponding theorem for variance.

theorem 1.4. if x = a + by then var(x) = b2 var(y).

proof. we prove the continuous case; the discrete case is left as an exercise. let    = e[y].

var(x) = e[(a + by     (a + b  ))2]

= e[b2(y       )2]
= b2 var(y)

(cid:3)

1.5

joint, marginal and id155

statisticians often have to deal simultaneously with the probabilities of several events,
quantities, or random variables. for example, we may classify voters in a city according
to political party a   liation and support for a school bond referendum. let a and s be a
voter   s a   liation and support, respectively.

                     d if democrat

r if republican

a =

                     y

and

s =

if in favor
n if opposed.

suppose a polling organization    nds that 80% of democrats and 35% of republicans favor
the bond referendum. the 80% and 35% are called conditional probabilities because they
are conditional on party a   liation. the notation for conditional probabilities is ps | a. as
usual, the subscript indicates which random variables we   re talking about. speci   cally,

ps | a(y | d) = 0.80;
ps | a(y | r) = 0.35;

ps | a(n | d) = 0.20;
ps | a(n | r) = 0.65.

we say    the id155 that s = n given a = d is 0.20   , etc.

suppose further that 60% of voters in the city are democrats. then 80% of 60% = 48%
of the voters are democrats who favor the referendum. the 48% is called a joint probabil-
ity because it is the id203 of (a = d, s = y) jointly. the notation is pa,s (d, y) = .48.
likewise, pa,s (d, n) = .12; pa,s (r, y) = .14; and pa,s (r, n) = 0.26. table 1.1 summa-
rizes the calculations. the quantities .60, .40, .62, and .38 are called marginal probabili-
ties. the name derives from historical reasons, because they were written in the margins
of the table. marginal probabilities are probabilities for one variable alone, the ordinary
probabilities that we   ve been talking about all along.

1.5. joint, marginal and id155

42

democrat
republican

for against
48% 12%
14% 26%
62% 38%

60%
40%

table 1.1: party a   liation and referendum support

the event a = d can be partitioned into the two smaller events (a = d, s = y) and

(a = d, s = n). so

pa(d) = .60 = .48 + .12 = pa,s (d, y) + pa,s (d, n).

the event a = r can be partitioned similarly. too, the event s = y can be partitioned into
(a = d, s = y) and (a = r, s = y). so

ps (y) = .62 = .48 + .14 = pa,s (d, y) + pa,s (r, y).

these calculations illustrate a general principle: to get a marginal id203 for
one variable, add the joint probabilities for all values of the other variable. the general
formulae for working simultaneously with two discrete random variables x and y are

(cid:88)

fx,y(x, y) = fx(x)    fy | x(y| x) = fy(y)    fx | y(x| y)
fx,y(x, y)
fx(x) =

fx,y(x, y)

fy(y) =

(cid:88)

(1.14)

y

x

sometimes we know joint probabilities and need to    nd marginals and conditionals; some-
times it   s the other way around. and sometimes we know fx and fy | x and need to    nd fy
or fx | y. the following story is an example of the latter. it is a common problem in drug
testing, disease screening, polygraph testing, and many other    elds.

the participants in an athletic competition are to be randomly tested for steroid use.
the test is 90% accurate in the following sense: for athletes who use steroids, the test has
a 90% chance of returning a positive result; for non-users, the test has a 10% chance of
returning a positive result. suppose that only 30% of athletes use steroids. an athlete is
randomly selected. her test returns a positive result. what is the id203 that she is a
steroid user?

this is a problem of two random variables, u, the steroid use of the athlete and t, the
test result of the athlete. let u = 1 if the athlete uses steroids; u = 0 if not. let t = 1 if
the test result is positive; t = 0 if not. we want fu | t(1| 1). we can calculate fu | t if we
know fu,t; and we can calculate fu,t because we know fu and ft | u. pictorially,

fu, ft | u        fu,t        fu | t

1.5. joint, marginal and id155

43

u = 0
u = 1

t = 0 t = 1
.07
.63
.03
.27
.34
.66

.70
.30

table 1.2: steroid use and test results

the calculations are

fu,t(0, 0) = (.7)(.9) = .63
fu,t(1, 0) = (.3)(.1) = .03

fu,t(0, 1) = (.7)(.1) = .07
fu,t(1, 1) = (.3)(.9) = .27

so

and    nally

ft(0) = .63 + .03 = .66

ft(1) = .07 + .27 = .34

fu | t(1| 1) = fu,t(1, 1)/ ft(1) = .27/.34     .80.

in other words, even though the test is 90% accurate, the athlete has only an 80% chance
of using steroids. if that doesn   t seem intuitively reasonable, think of a large number of
athletes, say 100. about 30 will be steroid users of whom about 27 will test positive.
about 70 will be non-users of whom about 7 will test positive. so there will be about 34
athletes who test positive, of whom about 27, or 80% will be users.

table 1.2 is another representation of the same problem. it is important to become fa-
miliar with the concepts and notation in terms of marginal, conditional and joint distribu-
tions, and not to rely too heavily on the tabular representation because in more complicated
problems there is no convenient tabular representation.

example 1.6 is a further illustration of joint, conditional, and marginal distributions.

example 1.6 (seedlings)
example 1.4 introduced an observational experiment to learn about the rate of seedling
production and survival at the coweeta long term ecological research station in
western north carolina. for a particular quadrat in a particular year, let n be the
number of new seedlings that emerge. suppose that n     poi(  ) for some    > 0.
each seedling either dies over the winter or survives to become an old seedling the
next year. let    be the id203 of survival and x be the number of seedlings that

1.5. joint, marginal and id155

44

survive. suppose that the survival of any one seedling is not affected by the survival
of any other seedling. then x     bin(n,   ). figure 1.15 shows the possible values
of the pair (n, x). the probabilities associated with each of the points in figure 1.15
are denoted fn,x where, as usual, the subscript indicates which variables we   re talking
about. for example, fn,x(3, 2) is the id203 that n = 3 and x = 2.

figure 1.15: permissible values of n and x, the number of new seedlings and the number
that survive.

the next step is to    gure out what the joint probabilities are. consider, for example,
the event n = 3. that event can be partitioned into the four smaller events (n = 3, x =
0), (n = 3, x = 1), (n = 3, x = 2), and (n = 3, x = 3). so

fn(3) = fn,x(3, 0) + fn,x(3, 1) + fn,x(3, 2) + fn,x(3, 3)

the poisson model for n says fn(3) = p[n = 3] = e       3/6. but how is the total e       3/6
divided into the four parts? that   s where the binomial model for x comes in. the
division is made according to the binomial probabilities

(cid:32)3

(cid:33)
(1       )3

0

(cid:33)

(cid:32)3

1

(cid:32)3
(cid:33)

2

  (1       )2

  2(1       )

(cid:32)3
(cid:33)

3

  3

the e       3/6 is a marginal id203 like the 60% in the af   liation/support problem.
the binomial probabilities above are conditional probabilities like the 80% and 20%;

012345670246nx......1.5. joint, marginal and id155
45
they are conditional on n = 3. the notation is fx|n(2| 3) or p[x = 2| n = 3]. the joint
probabilities are

fn,x(3, 0) =

fn,x(3, 2) =

(1       )3

e       3
6
e       3
6

3  2(1       )

fn,x(3, 1) =

e       3
6
fn,x(3, 3) =

3  (1       )2
e       3
6   3

(cid:33)
(cid:32)n

x

in general,

fn,x(n, x) = fn(n) fx | n(x| n) =

e       n
n!

  x(1       )n   x

an ecologist might be interested in fx, the pdf for the number of seedlings that will
be recruited into the population in a particular year. for a particular number x, fx(x)
is like looking in figure 1.15 along the horizontal line corresponding to x = x. to get
(cid:33)
fx(x)     p[x = x], we must add up all the probabilities on that line.
  x(1       )n   x

(cid:32)n

fx(x) =

(cid:88)
   (cid:88)

n

   (cid:88)
e       n
fn,x(n, x) =
n!
e     (1     )(  (1       ))n   x

n=x

x

e       (    )x

=

=

n=x

e       (    )x

x!

e       (    )x

   (cid:88)
(n     x)!

x!
e     (1     )(  (1       ))z

z=0

z!

=

the last equality follows since(cid:80)

x!
z        = 1 because it is the sum of probabilities from the
poi(  (1      )) distribution. the    nal result is recognized as a id203 from the poi(     )
distribution where       =     . so x     poi(     ).
in the derivation we used the substitution z = n    x. the trick is worth remembering.
for continuous random variables, conditional and joint densities are written px | y(x| y)

and px,y(x, y) respectively and, analogously to equation 1.14 we have
(cid:90)    
px,y(x, y) = px(x)py | x(y| x) = py(y)px | y(x| y)

(cid:90)    

px(x) =

px,y(x, y) dy

py(y) =

px,y(x, y) dx

      

      

(1.15)

the logic is the same as for discrete random variables. in order for (x = x, y = y) to occur
we need either of the following.

1.5. joint, marginal and id155

46

1. first x = x occurs then y = y occurs. the    id203    of that happening is just
px(x)    py | x(y| x), the    id203    that x = x occurs times the    id203    that
y = y occurs under the condition that x = x has already occured.    id203   
is in quotes because, for continuous random variables, the id203 is 0. but
   id203    is a useful way to think intuitively.

2. first y = y occurs then x = x occurs. the reasoning is similar to that in item 1.

just as for single random variables, probabilities are integrals of the density. if a is a
a . . . indicates a double

a p(x, y) dx dy, where

integral over the region a.
just as for discrete random variables, the unconditional density of a random variable is
called its marginal density; px and py are marginal densities. let b     r be a set. since
a density is    the function that must be integrated to calculate a id203   , on one hand,

region in the (x, y) plane, p[(x, y)     a] =(cid:82)
p[x     b] =(cid:82)
which implies px(x) =(cid:82)

b px(x) dx. on the other hand,

r px,y(x, y) dy.

p[x     b] = p[(x, y)     b    r] =

px,y(x, y) dy

dx

(cid:82)

(cid:33)

(cid:90)

(cid:32)(cid:90)

b

r

an example will help illustrate. a customer calls the computer help line. let x be
the amount of time he spends on hold and y be the total duration of the call. the amount
of time a consultant spends with him after his call is answered is w = y     x. suppose the
joint density is px,y(x, y) = e   y in the region 0 < x < y <    .

1. what is the marginal density of x?

p(x) =

p(x, y) dy =

(cid:90)

(cid:90)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)   

x

= e   x

(cid:90)    

x

e   y dy =    e   y
(cid:90) y

p(y) =

p(x, y) dx =

e   y dx = ye   y

2. what is the marginal density of y?

3. what is the conditional density of x given y?

0

p(x| y) =

p(x, y)
p(y)

= y   1

1.5. joint, marginal and id155

47

4. what is the conditional density of y given x?
p(x, y)
p(x)

p(y| x) =

5. what is the marginal density of w?

= ex   y

(cid:90)    

(cid:90) x+w

0

x

e   y dydx

p(w) =

=

=

d
dw
d
dw
d
dw

d
dw

(cid:19)

(cid:18)   e   y

(cid:90)    
p[w     w] =
(cid:90)    

(cid:12)(cid:12)(cid:12)(cid:12)x+w

0

x

dx

e   x(1     e   w) dx = e   w

0

figure 1.16 illustrates the help line calculations. for questions 1 and 2, the answer
comes from using equations 1.15. the only part deserving comment is the limits of in-
tegration. in question 1, for example, for any particular value x = x, y ranges from x to
   , as can be seen from panel (a) of the    gure. that   s where the limits of integration come
from. in question 2, for any particular y, x     (0, y), which are the limits of integration.
panel (d) shows the conditional density of x given y for three di   erent values of y. we
see that the density of x is uniform on the interval (0, y). see section 5.4 for discussion of
this density. panel (e) shows the conditional density of y given x for three di   erent values
of x. it shows,    rst, that y > x and second, that the density of y decays exponentially.
see section 1.3.3 for discussion of this density. panel (f) shows the region of integration
for question 5. take the time to understand the method being used to answer question 5.

when dealing with a random variable x, sometimes its pdf is given to us and we can

calculate its expectation:

(the integral is replaced by a sum if x is discrete.) other times x arises more naturally as
part of a pair (x, y) and its expectation is

e(x) =

xp(x, y) dxdy.

the two formulae are, of course, equivalent. but when x does arise as part of a pair, there
is still another way to view p(x) and e(x):

(cid:90) (cid:0)px | y(x| y)(cid:1) py(y) dy = e(cid:0)px | y(x| y)(cid:1)
(cid:90) (cid:32)(cid:90)

(cid:33)

xpx | y(x| y) dx

py(y) dy = e (e(x | y)) .

px(x) =

e(x) =

(1.16)

(1.17)

e(x) =

xp(x) dx.

(cid:90)
(cid:34)

1.5. joint, marginal and id155

48

figure 1.16: (a): the region of r2 where (x, y) live; (b): the marginal density of x; (c):
the marginal density of y; (d): the conditional density of x given y for three values of y;
(e): the conditional density of y given x for three values of x; (f): the region w     w

0123401234(a)xy02468100.00.40.8(b)xp(x)02468100.00.2(c)yp(y)0.01.02.03.00.01.02.0(d)xp(x|y)y = 1y = 2y = 302468100.00.40.8(e)yp(y|x)x =x =x =012340246(f)xyy!x=wy!x=01.5. joint, marginal and id155
49
the notation deserves some explanation. for any number x, px | y(x| y) is a function of y,
g(y)p(y)dy, which equals e(g(y)), which
say g(y). the middle term in equation 1.16 is
is the right hand term. similarly, e(x | y) is a function of y, say h(y). the middle term in
equation 1.17 is

h(y)p(y)dy, which equals e(h(y)), which is the right hand term.

(cid:82)

(cid:82)

example 1.7 (seedlings, continued)
examples 1.4 and 1.6 discussed (n, x), the number of new seedlings in a forest
quadrat and the number of those that survived over the winter. example 1.6 suggested
the statistical model

n     poi(  )

and

x | n     bin(n,   ).

equation 1.17 shows that e(x) can be computed as

e(x) = e (e(x | n)) = e(n  ) =   e(n) =     .

example 1.8 (craps, continued)
examples 1.1, 1.2 and 1.3 introduced the game of craps. example 1.8 calculates the
chance of winning.

                     0 if shooter loses

1 if shooter wins

let x =

x has a bernoulli distribution. we are trying to    nd

p[shooter wins] = px(1) = e(x).

(make sure you see why px(1) = e(x).) let y be the outcome of the come-out roll.

1.6. association, dependence, independence

50

equation 1.17 says

e(x) = e (e(x | y))

=

=

e(x | y = 2) p[y = 2] + e(x | y = 3) p[y = 3]
+ e(x | y = 4) p[y = 4] + e(x | y = 5) p[y = 5]
+ e(x | y = 6) p[y = 6] + e(x | y = 7) p[y = 7]
+ e(x | y = 8) p[y = 8] + e(x | y = 9) p[y = 9]
+ e(x | y = 10) p[y = 10] + e(x | y = 11) p[y = 11]
+ e(x | y = 12) p[y = 12]
0    1
36
+ e(x | y = 5)
+ 1    6
36
+ e(x | y = 10)

+ 0    2
3
+ e(x | y = 4)
36
36
4
5
+ e(x | y = 6)
36
36

+ e(x | y = 9)
+ 0    1
36 .

5
36
+ 1    2
36

+ e(x | y = 8)

4
36

3
36

so it only remains to    nd e(x | y = y) for y = 4, 5, 6, 8, 9, 10. the calculations are all
similar. we will do one of them to illustrate. let w = e(x | y = 5) and let z denote the
next roll of the dice. once 5 has been established as the point, then a roll of the dice
has three possible outcomes: win (if z = 5), lose (if z = 7), or roll again (if z is anything
else). therefore

w = 1    4/36 + 0    6/36 + w    26/36

(10/36)w = 4/36

w = 4/10.

after similar calculations for the other possible points we    nd

e(x) =

3
9

3
36

+

4
10

4
36

+

5
11

5
36

+

6
36

+

5
11

5
36

+

4
10

4
36

+

3
9

3
36

+

2
36

    .493.

craps is a very fair game; the house has only a slight edge.

1.6 association, dependence, independence

it is often useful to describe or measure the degree of association between two random
variables x and y. the r dataset iris provides a good example. it contains the lengths
and widths of sepals and petals of 150 iris plants. the    rst several lines of iris are

1.6. association, dependence, independence

51

sepal.length sepal.width petal.length petal.width species
setosa
setosa
setosa

5.1
4.9
4.7

1.4
1.4
1.3

0.2
0.2
0.2

3.5
3.0
3.2

1
2
3

figure 1.17 shows each variable plotted against every other variable. it is evident from the
plot that petal length and petal width are very closely associated with each other, while
the relationship between sepal length and sepal width is much weaker. statisticians need
a way to quantify the strength of such relationships.

figure 1.17 was produced by the following line of r code.

pairs ( iris[,1:4] )

    pairs() produces a pairs plot, a matrix of scatterplots of each pair of variables. the
names of the variables are shown along the main diagonal of the matrix. the (i, j)th
plot in the matrix is a plot of variable i versus variable j. for example, the upper
right plot has sepal length on the vertical axis and petal width on the horizontal axis.

by far the most common measures of association are covariance and correlation.

de   nition 1.6. the covariance of x and y is

cov(x, y)     e((x       x)(y       y))

in r, cov measures the covariance in a sample. thus, cov(iris[,1:4]) produces the

matrix

sepal.length
sepal.width
petal.length
petal.width

sepal.length sepal.width petal.length petal.width
0.5162707
-0.1216394
1.2956094
0.5810063

0.68569351 -0.04243400
-0.04243400 0.18997942
1.27431544 -0.32965638
0.51627069 -0.12163937

1.2743154
-0.3296564
3.1162779
1.2956094

in which the diagonal entries are variances and the o   -diagonal entries are covariances.

the measurements in iris are in centimeters. to change to millimeters we would

multiply each measurement by 10. here   s how that a   ects the covariances.

1.6. association, dependence, independence

52

figure 1.17: lengths and widths of sepals and petals of 150 iris plants

sepal.length2.03.04.00.51.52.54.55.56.57.52.02.53.03.54.0sepal.widthpetal.length12345674.56.07.50.51.01.52.02.51357petal.width1.6. association, dependence, independence

53

> cov ( 10*iris[,1:4] )

sepal.length
sepal.width
petal.length
petal.width

68.569351
-4.243400

sepal.length sepal.width petal.length petal.width
51.62707
-12.16394
129.56094
58.10063

-4.243400
18.997942
127.431544 -32.965638
-12.163937

127.43154
-32.96564
311.62779
129.56094

51.627069

each covariance has been multiplied by 100 because each variable has been multiplied by
10. in fact, this rescaling is a special case of the following theorem.

theorem 1.5. let x and y be random variables. then cov(ax +b, cy +d) = ac cov(x, y).

proof.

cov(ax + b, cy + d) = e ((ax + b     (a  x + b))(cy + d     (c  y + d)))

= e(ac(x       x)(y       y)) = ac cov(x, y)

(cid:3)

theorem 1.5 shows that cov(x, y) depends on the scales in which x and y are mea-
sured. a scale-free measure of association would also be useful. correlation is the most
common such measure.

de   nition 1.7. the correlation between x and y is

cor(x, y)     cov(x, y)
sd(x) sd(y)

cor measures correlation. the correlations in iris are

> cor(iris[,1:4])

sepal.length
sepal.width
petal.length
petal.width

sepal.length sepal.width petal.length petal.width
0.8179411
-0.3661259
0.9628654
1.0000000

1.0000000 -0.1175698
1.0000000
0.8717538 -0.4284401
0.8179411
-0.3661259

0.8717538
-0.4284401
1.0000000
0.9628654

-0.1175698

which con   rms the visual impression that sepal length, petal length, and petal width are
highly associated with each other, but are only loosely associated with sepal width.

theorem 1.6 tells us that correlation is una   ected by linear changes in measurement

scale.

1.6. association, dependence, independence

54

theorem 1.6. let x and y be random variables. then cor(ax + b, cy + d) = cor(x, y).
(cid:3)
proof. see exercise 47.

correlation doesn   t measure all types of association; it only measures id91 around
a straight line. the    rst two columns of figure 1.18 show data sets that cluster around a
line, but with some scatter above and below the line. these data sets are all well described
by their correlations, which measure the extent of the id91; the higher the correla-
tion, the tighter the points cluster around the line and the less they scatter. negative values
of the correlation correspond to lines with negative slopes. the last column of the    gure
shows some other situations. the    rst panel of the last column is best described as having
two isolated clusters of points. despite the correlation of .96, the panel does not look at all
like the last panel of the second column. the second and third panels of the last column
show data sets that follow some nonlinear pattern of association. again, their correlations
are misleading. finally, the last panel of the last column shows a data set in which most
of the points are tightly clustered around a line but in which there are two outliers. the
last column demonstrates that correlations are not good descriptors of nonlinear data sets
or data sets with outliers.

correlation measures linear association between random variables. but sometimes we

want to say whether two random variables have any association at all, not just linear.
de   nition 1.8. two random variables, x and y, are said to be independent if p(x | y) =
p(x), for all values of y. if x and y are not independent then they are said to be dependent.
if x and y are independent then it is also true that p(y | x) = p(y). the interpretation
is that knowing one of the random variables does not change the id203 distribution
of the other. if x and y are independent (dependent) we write x     y (x (cid:54)    y). if x and
y are independent then cov(x, y) = cor(x, y) = 0. the converse is not true. also, if
x     y then p(x, y) = p(x)p(y). this last equality is usually taken to be the de   nition of
independence.
do not confuse independent with mutually exclusive. let x denote the outcome of a
die roll and let a = 1 if x     {1, 2, 3} and a = 0 if x     {4, 5, 6}. a is called an indicator
variable because it indicates the occurence of a particular event. there is a special notation
for indicator variables:

a = 1{1,2,3}(x).

1{1,2,3} is an indicator function. 1{1,2,3}(x) is either 1 or 0 according to whether x is in the
subscript. let b = 1{4,5,6}(x), c = 1{1,3,5}(x), d = 1{2,4,6}(x) and e = 1{1,2,3,4}(x). a and
b are dependent because p[a] = .5 but p[a| b] = 0. d and e are independent because
p[d] = p[d| e] = .5. you can also check that p[e] = p[e | d] = 2/3. do not confuse
dependence with causality. a and b are dependent, but neither causes the other.

1.6. association, dependence, independence

55

figure 1.18: correlations

cor = !0.9cor = !0.5cor = !0.2cor = 0cor = 0.3cor = 0.5cor = 0.8cor = 0.95cor = 0.96cor = 0.67cor = !0.37cor = 0.621.7. simulation

56

for an example, recall the help line story on page 46. x and y were the amount of
time on hold and the total length of the call, respectively. the di   erence was w = y     x.
we found p(x| y) = y   1. because p(x| y) depends on y, x (cid:54)    y. similarly, p(y| x) depends
on x. does that make sense? would knowing something about x tell us anything about y?

what about x and w? are they independent?
d
dw

p[w     w| x = x] =

p(w| x) =

d
dw

p[y     w + x| x = x] = e   w

which does not depend on x. therefore x     w. does that make sense? would knowing
something about x tell us anything about w?
example 1.9 (seedlings, continued)
examples 1.4, 1.6, and 1.7 were about new seedlings in forest quadrats. suppose that
ecologists observe the number of new seedlings in a quadrat for k successive years;
call the observations n1, . . . , nk.
if the seedling arrival rate is the same every year,
then we could adopt the model ni     poi(  ). i.e.,    is the same for every year. if    is
known, or if we condition on   , then the number of new seedlings in one year tells us
nothing about the number of new seedlings in another year, we would model the ni   s
as being independent, and their joint density, conditional on   , would be

k(cid:89)

k(cid:89)

e   k    

(cid:80) ni(cid:81) ni!

e       ni
ni!

=

p(n1, . . . , nk |   ) =

p(ni |   ) =

i=1

i=1

but if    is unknown then we might treat it like a random variable. it would be a random
variable if, for instance, different years had different      s, we chose a year at random or
if we thought of nature as randomly choosing    for our particular year. in that case the
data from early years, n1, . . . , nm, say, yield information about    and therefore about
likely values of nm+1, . . . , nk, so the ni   s are dependent. in fact,

p(n1, . . . , nk) =

p(n1, . . . , nk |   )p(  ) d   =

p(  ) d  

(cid:90)

(cid:90) e   k    
(cid:80) ni(cid:81) ni!

so, whether the ni   s are independent is not a question with a single right answer.
instead, it depends on our perspective. but in either case, we would say the ni   s are
conditionally independent given   .

1.7 simulation

we have already seen, in example 1.2, an example of computer simulation to estimate a
id203. more broadly, simulation can be helpful in several types of problems: cal-

1.7. simulation

57

culating probabilities, assessing statistical procedures, and evaluating integrals. these are
explained and exempli   ed in the next several subsections.

1.7.1 calculating probabilities
probabilities can often be estimated by computer simulation. simulations are especially
useful for events so complicated that their probabilities cannot be easily calculated by
hand, but composed of smaller events that are easily mimicked on computer. for instance,
in example 1.2 we wanted to know the id203 that the shooter in a craps game rolls
either 7 or 11 on the come out roll. although it   s easy enough to calculate this id203
exactly, we did it by simulation in the example.
expected values can also be estimated by simulations. let y be a random variable and
suppose we want to estimate the expected value of some function   g     e(g(y)). we can
write a computer program to simulate y many times. to keep track of the simulations we
use the notation y( j) for the j   th simulated value of y. let n be the number of simulations.
then

is a sensible estimate of   g. in fact, the law of large numbers tells us that

    g = n   1(cid:88)
n       n   1(cid:88)

lim

g(y(i))

g(y(i)) =   g.

so as we do a larger and larger simulation we get a more and more accurate estimate of
  g.
probabilities can be computed as special cases of expectations. suppose we want to
calculate p[y     s ] for some set s . de   ne x     1s (y). then p[y     s ] = e(x) and is
sensibly estimated by

number of occurences of s

number of trials

= n   1(cid:88)

x(i).

example 1.10 illustrates with the game of craps.
example 1.10 (craps, continued)
example 1.8 calculated the chance of winning the game of craps. here is the r code
to calculate the same id203 by simulation.

makepoint <- function ( point ) {
made <- na
while ( is.na(made) ) { # roll until outcome is determined

1.7. simulation

58

roll <- sum ( sample ( 6, 2, replace=t ) )
if ( roll == point ) {

made <- true

} else if ( roll == 7 ) {

made <- false

}

} # end while
return ( made )
} # end makepoint

sim.craps <- function () {

roll <- sum ( sample ( 6, 2, replace=t ) )
if ( roll==7 || roll==11 )

win <- t

else if ( roll==2 || roll==3 || roll==12 )

win <- f

else

win <- makepoint ( roll )

return ( win )

}

n.sim <- 1000
wins <- 0
for ( i in 1:n.sim )

wins <- wins + sim.craps()

print ( wins/n.sim )

       !    is r   s symbol for not. if determined is t then !determined is f.
    while(!determined) begins a loop. the loop will repeat as many times as neces-

sary as long as !determined is t.

try the example code a few times. see whether you get about 49% as example 1.8 sug-
gests.
along with the estimate itself, it is useful to estimate the accuracy of     g as an estimate
of   g. if the simulations are independent then var(    g) = n   1 var(g(y)); if there are many

of them then var(g(y)) can be well estimated by n   1(cid:80)((g(y)         g)2) and sd(g(y)) can be

59

1.7. simulation

n   1/2(cid:112)(cid:80)((g(y)         g)2). because sd   s decrease in proportion to n   1/2 (see the central

well estimated by

limit theorem.), it takes a 100 fold increase in n to get, for example, a 10 fold increase in
accuracy.

similar reasoning applies to probabilities, but when we are simulating the occurence
or nonoccurence of an event, then the simulations are bernoulli trials, so we have a more
explicit formula for the variance and sd.
example 1.11 (craps, continued)
how accurate is the simulation in example 1.10?
the simulation keeps track of x, the number of successes in n.sim trials. let   
be the true id203 of success. (example 1.8 found        .49, but in most practical
applications we won   t know   .)

x     bin(n.sim,   )

var(x) = n.sim(  )(1       )

(cid:112)
(  )(1       )/n.sim

sd(x/n.sim) =

and, by the central limit theorem if n.sim is large,

     = x/n.sim     n(  , (  (1       )/n.sim)1/2)

what does this mean in practical terms? how accurate is the simulation when n.sim =
50, or 200, or 1000, say? to illustrate we did 1000 simulations with n.sim = 50, then
another 1000 with n.sim = 200, and then another 1000 with n.sim = 1000.

the results are shown as a boxplot in figure 1.19. in figure 1.19 there are three
boxes, each with whiskers extending vertically. the box for n.sim = 50 shows that the
median of the 1000        s was just about .50 (the horizontal line through the box), that
50% of the        s fell between about .45 and .55 (the upper and lower ends of the box),
and that almost all of the        s fell between about .30 and .68 (the extent of the whiskers).
in comparison, the 1000        s for n.sim = 200 are spread out about half as much, and
the 1000        s for n.sim = 1000 are spread out about half as much again. the factor of
about a half comes from the n.sim.5 in the formula for sd(    ). when n.sim increases
by a factor of about 4, the sd decreases by a factor of about 2. see the notes for
figure 1.19 for a further description of boxplots.

here is the r code for the simulations and figure 1.19.

1.7. simulation

60

figure 1.19: 1000 simulations of      for n.sim = 50, 200, 1000

n <- 1000

n.sim <- c(50, 200, 1000)
theta.hat <- matrix ( na, n, length(n.sim) )

for ( i in seq(along=n.sim) ) {

for ( j in 1:n ) {

wins <- 0
for ( k in 1:n.sim[i] )
wins <- wins + sim.craps()
theta.hat[j,i] <- wins / n.sim[i]

}

}

boxplot ( theta.hat ~ col(theta.hat), names=n.sim,

xlab="n.sim" )

    matrix forms a matrix. the form is matrix(x,nrows,ncols) where x are the

5020010000.30.50.7n.sim1.7. simulation

61

entries in the matrix and nrows and ncols are the numbers of rows and columns.
    seq(along=n.sim) is the same as 1:length(n.sim) except that it behaves more

sensibly in case length(n.sim) is 0.

    a boxplot is one way to display a data set. it produces a rectangle, or box, with
a line through the middle. the rectangle contains the central 50% of the data. the
line indicates the median of the data. extending vertically above and below the box
are dashed lines called whiskers. the whiskers contain most of the outer 50% of the
data. a few extreme data points are plotted singly. see example 2.3 for another use
of boxplots and a fuller explanation.

1.7.2 evaluating statistical procedures
simulation can sometimes be useful in deciding whether a particular experiment is worth-
while or in choosing among several possible experiments or statistical procedures. for
a    ctitious example, consider abc college, where, of the 10,000 students, 30% of the
students are members of a sorority or fraternity (greeks) and 70% are independents. there
is an upcoming election for head of the student governance organization. two candidates
are running, d and e. let

  g = proportion of greeks supporting d
  i = proportion of independents supporting d
   = proportion of all students supporting d

a poll is commisioned to estimate    and it is agreed that the pollster will sample 100
students. three di   erent procedures are proposed.

1. randomly sample 100 students. estimate

    1 = proportion of polled students who favor d

2. randomly sample 100 students. estimate

    g = proportion of polled greeks supporting d
    i = proportion of polled independents supporting d
    2 = .3    g + .7    i

1.7. simulation

62

3. randomly sample 30 greeks and 70 independents. estimate

    g = proportion of polled greeks supporting d
    i = proportion of polled independents supporting d
    3 = .3    g + .7    i

which procedure is best? one way to answer the question is by exact calculation, but
another way is by simulation. in the simulation we try each procedure many times to see
how accurate it is, on average. we must choose some    true    values of   g,   i and    under
which to do the simulation. here is some r code for the simulation.

# choose "true" theta.g and theta.i
theta.g <- .8
theta.i <- .4
<- .3
prop.g
prop.i
<- 1 - prop.g
<- prop.g * theta.g + prop.i * theta.i
theta

sampsize <- 100

n.times <- 1000 # should be enough
theta.hat <- matrix ( na, n.times, 3 )
for ( i in 1:n.times ) {

theta.hat[i,1] <- sim.1()
theta.hat[i,2] <- sim.2()
theta.hat[i,3] <- sim.3()

}

print ( apply(theta.hat,2,mean) )
boxplot ( theta.hat ~ col(theta.hat) )

sim.1 <- function() {

x <- rbinom(1,sampsize,theta)
return ( x / sampsize )

}

sim.2 <- function() {

n.g <- rbinom ( 1, sampsize, prop.g )

1.7. simulation

63

n.i <- sampsize - n.g
x.g <- rbinom ( 1, n.g, theta.g )
x.i <- rbinom ( 1, n.i, theta.i )
t.hat.g <- x.g / n.g
t.hat.i <- x.i / n.i
return ( prop.g * t.hat.g + (1-prop.g) * t.hat.i )

}

sim.3 <- function() {

n.g <- sampsize * prop.g
n.i <- sampsize * prop.i
x.g <- rbinom ( 1, n.g, theta.g )
x.i <- rbinom ( 1, n.i, theta.i )
t.hat.g <- x.g / n.g
t.hat.i <- x.i / n.i
return ( prop.g * t.hat.g + (1-prop.g) * t.hat.i )

}

    apply applies a function to a matrix. in the code above, apply(...) applies the
function mean to dimension 2 of the matrix theta.hat. that is, it returns the mean
of of each column of theta.hat

the boxplot, shown in figure 1.20 shows little practical di   erence between the three

procedures.

the next example shows how simulation was used to evaluate whether an experiment

was worth carrying out.
example 1.12 (face)
the amount of carbon dioxide, or co2, in the earth   s atmosphere has been steadily
increasing over the last century or so. you can see the increase yourself in the co2
data set that comes with r. typing ts.plot(co2) makes a time series plot, repro-
duced here as figure 1.21. typing help(co2) gives a brief explanation. the data
are the concentrations of co2 in the atmosphere measured at mauna loa each month
from 1959 to 1997. the plot shows a steadily increasing trend imposed on a regular
annual cycle. the primary reason for the increase is burning of fossil fuels. co2 is
a greenhouse gas that traps heat in the atmosphere instead of letting it radiate out,
so an increase in atmospheric co2 will eventually result in an increase in the earth   s
temperature. but what is harder to predict is the effect on the earth   s plants. carbon

1.7. simulation

64

figure 1.20: 1000 simulations of      under three possible procedures for conducting a poll

is a nutrient needed by plants.
increase in plant growth which in turn will partly absorb some of the extra carbon.

it is possible that an increase in co2 will cause an

to learn about plant growth under elevated co2, ecologists began by conducting
experiments in greenhouses. in a greenhouse, two sets of plants could be grown un-
der conditions that are identical except for the amount of co2 in the atmosphere. but
the controlled environment of a greenhouse is quite unlike the uncontrolled natural en-
vironment, so, to gain verisimilitude, experiments soon moved to open-top chambers.
an open-top chamber is a space, typically a few meters in diameter, enclosed by a
solid, usually plastic, wall and open at the top. co2 can be added to the air inside
the chamber. because the chamber is mostly enclosed, not much co2 will escape,
and more can be added as needed. some plants can be grown in chambers with
excess co2 others in chambers without and their growth compared. but as with
greenhouses, open-top chambers are not completely satisfactory. ecologists wanted
to conduct experiments under even more natural conditions.

to that end, in the late 1980   s the of   ce of biological and environmental research
in the u.s. department of energy (doe) began supporting research using a technol-
ogy called face, or free air co2 enrichment developed at the brookhaven national
laboratory. as the lab   s webpage http://www.bnl.gov/face/ explains

   face provides a technology by which the microclimate around grow-

1230.350.500.651.7. simulation

65

figure 1.21: monthly concentrations of co2 at mauna loa

(a)timeco219601980320340360(b)timeresids19601980!4!2024246812!3!2!10123(c)indexcycle(d)timeco2196019803203403601.7. simulation

66

ing plants may be modi   ed to simulate climate change conditions. typically
co2-enriched air is released from a circle of vertical pipes into plots up to
30m in diameter, and as tall as 20 m.

   fast feedback control and pre-dilution of co2 provide stable, elevated

[co2] simulating climate change conditions.

   no containment is required with face equipment and there is no sig-
ni   cant change in natural air-   ow. large face plots reduce effects of plot
edge and capture fully-functioning, integrated ecosystem-scale processes.
face field data represent plant and ecosystems responses to concentra-
tions of atmospheric co2 expected in the mid-twenty-   rst century.   

see the website for pictures and more information.
in a face experiment, co2 is
released into some treatment plots. the level of co2 inside the plot is continually
monitored. more co2 is released as needed to keep the amount of co2 in the atmo-
sphere at some prespeci   ed level, typically the level that is expected in the mid-21st
century. other plots are reserved as control plots. plant growth in the treatment plots
is compared to that in the control plots.

because a face site is not enclosed, co2 continually drifts out of the site and
needs to be replenished. keeping enough co2 in the air is very costly and is, in fact,
the major expense in conducting face experiments.

the    rst several face sites were in arizona (sorghum, wheat, cotton), switzerland
(rye grass, clover) and california (native chaparral). all of these contained low-growing
plants. by the early 1990   s, ecologists wanted to conduct a face experiment in a for-
est, and such an experiment was proposed by investigators at duke university, to take
place in duke forest. but before the experiment could be funded the investigators had
to convince the department of energy (doe) that it would be worthwhile.
in partic-
ular, they wanted to demonstrate that the experiment would have a good chance of
uncovering whatever growth differences would exist between treatment and control.
the demonstration was carried out by computer simulation. the code for that demon-
stration, slightly edited for clarity, is given at the end of this example and explained
below.

1. the experiment would consist of 6 sites, divided into 3 pairs. one site in each
pair would receive the co2 treatment; the other would be a control. the exper-
iment was planned to run for 10 years. investigators had identi   ed 16 potential
sites in duke forest. the above ground biomass of those sites, measured before
the experiment began, is given in the line b.mass <- c ( ...

).

2. the code simulates 1000 repetitions of the experiment. that   s the meaning of

nreps <- 1000.

1.7. simulation

67

3. the above ground biomass of each site is stored in m.actual.control and
m.actual.treatment. there must be room to store the biomass of each site for
every combination of (pair,year,repetition). the array(...) command creates
a multidimensional matrix, or array,    lled with na   s. the dimensions are given by
c(npairs,nyears+1,nreps).

4. a site   s actual biomass is not known exactly but is measured with error. the

simulated measurements are stored in m.observed.control and
m.observed.treatment.

5. each repetition begins by choosing 6 sites from among the 16 available. their

observed biomass goes into temp. the    rst three values are assigned to m.observed.control
and the last three to m.observed.treatment. all this happens in a loop for(i in
1:nreps).

6. investigators expected that control plots would grow at an average rate of 2%
per year and treatment plots at an average of something else. those values are
called betac and betat. the simulation was run with betat = 1.04, 1.06, 1.08
(shown below) and 1.10. each site would have its own growth rate which would
be slightly different from betac or betat. for control sites, those rates are drawn
from the n(betac, 0.1     (betac     1)) distribution and stored in beta.control,
and similarly for the treatment sites.

7. measurement errors of biomass were expected to have an sd around 5%. that   s
sigmae. but at each site in each year the measurement error would be slightly
different. the measurement errors are drawn from the n(1, sigmae) distribution
and stored in errors.control and errors.treatment.

8. next we simulate the actual biomass of the sites. for the    rst year where we

already have measurements that   s

m.actual.control [ , 1, ] <- ...
m.actual.treatment [ , 1, ] <- ...

for subsequent years the biomass in year i is the biomass in year i-1 multiplied
by the growth factor beta.control or beta.treatment. biomass is simulated
in the loop for(i in 2:(nyears+1)).

9. measured biomass is the actual biomass multiplied by measurement error. it is

simulated by

1.7. simulation

68

m.observed.control
<-
m.observed.treatment <-

...
...

10. the simulations for each year were analyzed each year by a two-sample t-test

which looks at the ratio

biomass in year i
biomass in year 1

to see whether it is signi   cantly larger for treatment sites than for control sites.
for our purposes here, we have replaced the t-test with a plot, figure 1.22,
which shows a clear separation between treatment and control sites after about
5 years.

the doe did decide to fund the proposal for a face experiment in duke forest,
at least partly because of the demonstration that such an experiment would have a
reasonably large chance of success.

########################################################
# a power analysis of the face experiment
#

# initial measured biomass of potential face sites in g/m2:
b.mass <- c ( 17299.1, 17793.1, 23211.7, 23351.8, 24278,

25335.9, 27001.5, 27113.6, 30184.3, 30625.5,
33496.2, 33733.76, 35974.3, 38490.8, 40319.6,
44903 )

npairs <- 3
nyears <- 10
nreps

<- 1000

<- array ( na, c(npairs,nyears+1,nreps) )
m.observed.control
m.actual.control
<- array ( na, c(npairs,nyears+1,nreps) )
m.observed.treatment <- array ( na, c(npairs,nyears+1,nreps) )
<- array ( na, c(npairs,nyears+1,nreps) )
m.actual.treatment

# specify the initial levels of biomass
for ( i in 1:nreps ) {

temp <- sample ( b.mass, size=2*npairs )

1.7. simulation

69

figure 1.22: 1000 simulations of a face experiment. the x-axis is years. the y-axis
shows the mean growth rate (biomass in year i / biomass in year 1) of control plants (lower
solid line) and treatment plants (upper solid line). standard deviations are shown as dashed
lines.

2468101.01.52.0yeargrowth rate1.7. simulation

70

m.observed.control
m.observed.treatment [,1,i] <- temp [(npairs+1):(2*npairs)]

[,1,i] <- temp [1:npairs]

}

# specify the betas

betac <- 1.02
betat <- 1.08

beta.control

<- matrix ( rnorm ( npairs*nreps, betac,

0.1*(betac-1) ),

npairs, nreps )

beta.treatment <- matrix ( rnorm ( npairs*nreps, betat,

0.1*(betat-1) ),

npairs, nreps )

#############################################################
# measurement errors in biomass
sigmae <- 0.05

errors.control

<- array ( rnorm ( npairs*(nyears+1)*nreps,

errors.treatment <- array ( rnorm ( npairs*(nyears+1)*nreps,

1, sigmae ),

c(npairs,nyears+1,nreps) )

1, sigmae ),

c(npairs,nyears+1,nreps) )

##############################################################
##############################################################
# generate 10 years of data.
# m.actual[i,j,] : above ground biomass in ring i, year j
# m.actual[i,j+1,] = beta[i] * m.actual[i,j,]

the model for generation is:

# we actually observe m.observed[i,j] = m.actual[i,j] * error
# start with m.observed[i,1] and generate m.actual[i,1]

m.actual.control [ , 1, ] <-

m.observed.control [ , 1, ] / errors.control[ , 1, ]

1.7. simulation

71

m.actual.treatment [ , 1, ] <-

m.observed.treatment [ , 1, ] / errors.treatment[ , 1, ]

# now, for the rest of the years, generate m.actual
for ( i in 2:(nyears+1) ) {

m.actual.control [ , i, ] <-

m.actual.control [ , i-1, ] * beta.control

m.actual.treatment [ , i, ] <-

m.actual.treatment [ , i-1, ] * beta.treatment

}

# the initial observed data, corresponding to the [,1,],
# doesn   t need to be recomputed.
# statements are cleaner without subscripts.
m.observed.control
<-
m.actual.control
m.observed.treatment <-
m.actual.treatment * errors.treatment
##############################################################

but the following two

* errors.control

##############################################################
# two-sample t-test on (m.observed[j]/m.observed[1]) removed
# plot added

ratio.control
<- matrix ( na, nyears, npairs*nreps )
ratio.treatment <- matrix ( na, nyears, npairs*nreps )

for ( i in 2:(nyears+1) ) {

ratio.control [ i-1, ]

<-

as.vector (

m.observed.control[,i,]

/ m.observed.control[,1,] )

ratio.treatment [ i-1, ] <-

as.vector (

m.observed.treatment[,i,]

/ m.observed.treatment[,1,] )

}

mean.control
1, mean )
mean.treatment <- apply ( ratio.treatment, 1, mean )
sd.control

<- sqrt ( apply ( ratio.control,

<- apply ( ratio.control,

1, var ) )

1.8. r

72

sd.treatment

<- sqrt ( apply ( ratio.treatment, 1, var ) )

plot ( 2:11, mean.control, type="l", ylim=c(.9,2.4),

xlab="year", ylab="growth rate" )

lines ( 2:11, mean.treatment )
lines ( 2:11, mean.control - sd.control, lty=2 )
lines ( 2:11, mean.control + sd.control, lty=2 )
lines ( 2:11, mean.treatment - sd.treatment, lty=2 )
lines ( 2:11, mean.treatment + sd.treatment, lty=2 )

1.8 r

this section introduces a few more of the r commands we will need to work    uently
with the software. they are introduced in the context of studying a dataset on the percent
bodyfat of 252 men. you should download the data onto your own computer and try out the
analysis in r to develop your familiarity with what will prove to be a very useful tool. the
data can be found at statlib, an on-line repository of statistical data and software. the
data were originally contributed by roger johnson of the department of mathematics and
computer science at the south dakota school of mines and technology. the statlib
website is lib.stat.cmu.edu. if you go to statlib and follow the links to datasets
and then bodyfat you will    nd a    le containing both the data and an explanation. copy
just the data to a text    le named bodyfat.dat on your own computer. the    le should
contain just the data; the    rst few lines should look like this:

1.0708
1.0853
1.0414

12.3
6.1
25.3

23 ...
22 ...
22 ...

the following snippet shows how to read the data into r and save it into bodyfat.

bodyfat <- read.table ( "bodyfat.dat",

col.names = c ( "density", "percent.fat", "age", "weight",

"height", "neck.circum", "chest.circum", "abdomen.circum",
"hip.circum", "thigh.circum", "knee.circum", "ankle.circum",
"bicep.circum", "forearm.circum", "wrist.circum" ) )

dim
( bodyfat )
names ( bodyfat )

# how many rows and columns in the dataset?
# names of the columns

1.8. r

73
    read.table(...) reads data from a text    le into a dataframe. a dataframe is
a    exible way to represent data because it can be treated as either a matrix or a list.
type help(read.table) to learn more. the    rst argument, "bodyfat.dat", tells
r what    le to read. the second argument, col.names = c ( "density", ...
), tells r the names of the columns.

    dim gives the dimension of a matrix, a dataframe, or anything else that has a dimen-

sion. for a matrix or dataframe, dim tells how many rows and columns.

    names gives the names of things. names(bodyfat) should tell us the names density,
percent.fat, . . . . it   s used here to check that the data were read the way we in-
tended.

individual elements of matrices can be accessed by two-dimensional subscripts such
as bodyfat[1,1] or bodyfat[3,7] in which the subscripts refer to the row and column
of the matrix. (try this out to make sure you know how two dimensional subscripts work.)
if the columns of the matrix have names, then the second subscript can be a name, as in
bodyfat[1,"density"] or bodyfat[3,"chest.circum"]. often we need to refer to
an entire column at once, which can be done by omitting the    rst subscript. for example,
bodyfat[,2] refers to the entire set of 252 measurements of percent body fat.

a dataframe is a list of columns. because bodyfat has 15 columns, its length,
length(bodyfat), is 15. members of a list can be accessed by subscripts with double
brackets, as in bodyfat[[1]]. each member of bodyfat is a vector of length 252.
individual measurements can be accessed as in bodyfat[[1]][1] or bodyfat[[3]][7].
if the list members have names, then they can be accessed as in bodyfat$percent.fat.
note the quotation marks used when treating bodyfat as a matrix and the lack of quotation
marks when treating bodyfat as a list. the name following the "$" can be abbreviated, as
long as the abbreviation is unambiguous. thus bodyfat$ab works, but bodyfat$a fails
to distinguish between age and abdomen.circum.

begin by displaying the data.

par ( mfrow=c(5,3) )

# establish a 5 by 3 array of plots

for ( i in 1:15 ) {

hist ( bodyfat[[i]], xlab="", main=names(bodyfat)[i] )

}

although it   s not our immediate purpose, it   s interesting to see what the relationships are
among the variables. try pairs(bodyfat).

1.8. r

74

to illustrate some of r   s capabilities and to explore the concepts of marginal, joint and
conditional densities, we   ll look more closely at percent fat and its relation to abdomen
circumference. begin with a histogram of percent fat.

# need just one plot now, not 15

# give these two variables short names
# so we can refer to them easily

fat <- bodyfat$per
abd <- bodyfat$abd
par ( mfrow=c(1,1) )
hist ( fat )
we   d like to rescale the vertical axis to make the area under the histogram equal to 1, as
for a density. r will do that by drawing the histogram on a    density    scale instead of a
   frequency    scale. while we   re at it, we   ll also make the labels prettier. we also want to
draw a normal curve approximation to the histogram, so we   ll need the mean and standard
deviation.

# standard deviation

hist ( fat, xlab="", main="percent fat", freq=f )
mu <- mean ( fat )
sigma <- sqrt ( var ( fat ))
lo <- mu - 3*sigma
hi <- mu + 3*sigma
x <- seq ( lo, hi, length=50 )
lines ( x, dnorm ( x, mu, sigma ) )
that looks better, but we can do better still by slightly enlarging the axes. redraw the
picture, but use

hist ( fat, xlab="", main="percent fat", freq=f,

xlim=c(-10, 60), ylim=c(0,.06) )

the normal curve    ts the data reasonably well. a good summary of the data is that it is
distributed approximately n(19.15, 8.37).

now examine the relationship between abdomen circumference and percent body fat.

try the following command.

plot ( abd, fat, xlab="abdomen circumference",

ylab="percent body fat" )

the scatter diagram shows a clear relationship between abdomen circumference and body
fat in this group of men. one man doesn   t    t the general pattern; he has a circumference
around 148 but a body fat only around 35%, relatively low for such a large circumference.
to quantify the relationship between the variables, let   s divide the men into groups accord-
ing to circumference and estimate the conditional distribution of fat given circumference.
if we divide the men into twelfths we   ll have 21 men per group.

1.8. r

75

cut.pts <- quantile ( abd, (0:12)/12 )
groups <- cut ( abd, cut.pts, include.lowest=t, labels=1:12 )
boxplot ( fat ~ groups,

xlab="quantiles of abdomen circumference",
ylab="percent body fat" )

note:

    a quantile is a generalization of median. for example, the 1/12-th quantile of abd
is the number q such that 1/12 of all the abd measurements are less than q and 11/12
are greater than q. (a more careful de   nition would say what to do in case of ties.)
the median is the .5 quantile. we have cut our data according to the 1/12, 2/12, . . . ,
12/12 quantiles of abd.

    if you don   t see what the cut(abd,...) command does, print out cut.pts and

groups, then look at them until you    gure it out.

    boxplots are a convenient way to compare di   erent groups of data.

in this case
there are 12 groups. each group is represented on the plot by a box with whiskers.
the box spans the    rst and third quartiles (.25 and .75 quantiles) of fat for that
group. the line through the middle of the box is the median fat for that group. the
whiskers extend to cover most of the rest of the data. a few outlying fat values fall
outside the whiskers; they are indicated as individual points.

    "fat    groups" is r   s notation for a formula. it means to treat fat as a function

of groups. formulas are extremely useful and will arise repeatedly.

the medians increase in not quite a regular pattern. the irregularities are probably due
to the vagaries of sampling. we can    nd the mean, median and variance of fat for each
group with

mu.fat <- tapply ( fat, groups, mean )
me.fat <- tapply ( fat, groups, median )
sd.fat <- sqrt ( tapply ( fat, groups, var ) )
cbind ( mu.fat, me.fat, sd.fat )

    tapply means "apply to every element of a table." in this case, the table is fat,

grouped according to groups.

    cbind means "bind together in columns". there is an analgous command rbind.
finally, let   s make a    gure similar to figure 1.12.

1.9. some results for large samples

76

x <- seq ( 0, 50, by=1 )
par ( mfrow=c(4,3) )
for ( i in 1:12 ) {

good <- groups == i
hist ( fat[good], xlim=c(0,50), ylim=c(0,.1),

breaks=seq(0,50,by=5), freq=f,
xlab="percent fat", main="" )

y <- dnorm ( x, mu.fat[i], sd.fat[i] )
lines ( x, y )

}

the normal curves seem to    t well. we saw earlier that the marginal (marginal means
unconditional.) distribution of percent body fat is well approximated by n(19.15, 8.37).
here we see that the conditional distribution of percent body fat, given that abdomen cir-
cumference is in between the (i    1)/12 and i/12 quantiles is n(mu.fat[i], sd.fat[i]).
if we know a man   s abdomen circumference even approximately then (1) we can estimate
his percent body fat more accurately and (2) the typical estimation error is smaller.

1.9 some results for large samples

it is intuitively obvious that large samples are better than small, that more data is better
than less, and, less obviously, that with enough data one is eventually led to the right
answer. these intuitive observations have precise mathematical statements in the form
of theorems 1.12, 1.13 and 1.14. we state those theorems here so we can use them
throughout the rest of the book. they are examined in more detail in section 8.4.
de   nition 1.9 (random sample). a collection y1, . . . , yn of random variables is said to be
a random sample of size n from pdf or pmf f if and only if

1. yi     f for each i = 1, 2, . . . , n and

2. the yi   s are mutually independent, i.e. f (y1, . . . , yn) =(cid:81)n

i=1 f (yi).

the collection (y1, . . . , yn) is called a data set. we write

y1, . . . , yn     i.i.d. f

where i.i.d. stands for independent and identically distributed.

many introductory statistics texts describe how to collect random samples, many pit-
falls that await, and many pratfalls taken in the attempt. we omit that discussion here

1.9. some results for large samples

77

suppose y1, y2, . . . ,    i.i.d. f . let    = (cid:82)

and refer the interested reader to our favorite introductory text on the subject, freedman
et al. [1998] which has an excellent description of random sampling in general as well as
detailed discussion of the us census and the current population survey.
(y       )2 f (y) dy be the
mean and variance of f . typically    and    are unknown and we take the sample in order
to learn about them. we will often use   yn     (y1 +        + yn)/n, the mean of the    rst n
observations, to estimate   . some questions to consider are

y f (y) dy and   2 = (cid:82)

    for a sample of size n, how accurate is   yn as an estimate of   ?
    does   yn get closer to    as n increases?
    how large must n be in order to achieve a desired level of accuracy?

theorems 1.12 and 1.14 provide answers to these questions. before stating them we need
some preliminary results about the mean and variance of   yn.
theorem 1.7. let x1, . . . , xn be random variables with means   1, . . . ,   n. then e[x1 +       +
xn] =   1 +        +   n.
proof. it su   ces to prove the case n = 2.

(cid:34)
(cid:34)

e[x1 + x2] =

(x1 + x2) f (x1, x2) dx1dx2

(cid:34)

=

x1 f (x1, x2) dx1dx2 +

x2 f (x1, x2) dx1dx2

=   1 +   2

corollary 1.8. let y1, . . . , yn be a random sample from f with mean   . then e[  yn] =   .
proof. the corollary follows from theorems 1.3 and 1.7.
theorem 1.9. let x1, . . . , xn be independent random variables with means
  1, . . . ,   n and sds   1, . . . ,   n. then var[x1 +        + xn] =   2
proof. it su   ces to prove the case n = 2. using theorem 1.2,

+        +   2
n.

1

(cid:3)

(cid:3)

var(x1 + x2) = e((x1 + x2)2)     (  1 +   2)2
1) + 2e(x1x2) + e(x2
2)       2
1)       2
+   2
2

(cid:17)
(cid:17)
2)       2
+ 2 (e(x1x2)       1  2) .

= e(x2
=
=   2
1

(cid:16)e(x2

(cid:16)e(x2

+

1

2

1     2  1  2       2
+ 2 (e(x1x2)       1  2)

2

78

(cid:3)

1.9. some results for large samples
but if x1     x2 then

(cid:34)
(cid:90)
(cid:90)

(cid:90)

e(x1x2) =

=

x1x2 f (x1, x2) dx1dx2

x1

x2 f (x2) dx2 f (x1) dx1

=   2

so var(x1 + x2) =   2
1

+   2
2.

x1 f (x1) dx1 =   1  2.

note that theorem 1.9 requires independence while theorem 1.7 does not.

corollary 1.10. let y1, . . . , yn be a random sample from f with variance   2. then var(  yn) =
  2/n.
proof. the corollary follows from theorems 1.4 and 1.9.
theorem 1.11 (chebychev   s inequality). let x be a random variable with mean    and
sd   . then for any   > 0,

(cid:3)

p[|x       |      ]       2/ 2.

proof.

  2 =

=

(cid:90)
(cid:90)       
(cid:90)   + 
(x       )2 f (x) dx
(cid:90)       
(cid:90)    
(x       )2 f (x) dx +
(cid:90)       
(cid:90)    
(x       )2 f (x) dx +

      

      

  + 

      
     2
=  2 p[|x       |      ].

      

f (x) dx +  2

   

  + 

(x       )2 f (x) dx +
(x       )2 f (x) dx

f (x) dx

(cid:90)    

  + 

(x       )2 f (x) dx

theorems 1.12 and 1.14 are the two main limit theorems of statistics. they provide

answers, at least probabilistically, to the questions on page 77.
theorem 1.12 (weak law of large numbers). let y1, . . . , yn be a random sample from a
distribution with mean    and variance   2. then for any   > 0,

n       p[|  yn       | <  ] = 1.
lim

(1.18)

(cid:3)

1.9. some results for large samples

proof. apply chebychev   s inequality (theorem 1.11) to   yn.
n       1     p[|  yn       |      ]     lim

n       p[|  yn       | <  ] = lim
lim

n       1       2/n 2 = 1.

79

(cid:3)

another version of theorem 1.12 is called the strong law of large numbers.

theorem 1.13 (strong law of large numbers). let y1, . . . , yn be a random sample from
a distribution with mean    and variance   2. then for any   > 0,

i.e.,

n      |   yn       | <  ] = 1;
p[lim

p[lim
n      

  yn =   ] = 1.

it is beyond the scope of this section to explain the di   erence between the wlln and

the slln. see section 8.4.
theorem 1.14 (central limit theorem). let y1, . . . , yn be a random sample from f with
(cid:90) b
mean    and variance   2. let zn = (  yn       )/(  /
n       p[zn     [a, b]] =
lim
i.e. the limiting distribution of zn is n(0, 1).

   
n). then, for any numbers a < b,
1   
2  

e   w2/2 dw.

a

the law of large numbers is what makes simulations work and why large samples
are better than small. it says that as the number of simulation grows or as the sample
size grows, (n        ), the average of the simulations or the average of the sample gets
closer and closer to the true value (   xn       ). for instance, in example 1.11, where we
used simulation to estimate p[shooter wins] in craps, the estimate became more and more
accurate as the number of simulations increased from 50, to 200, and then to 1000. the
central limit theorem helps us look at those simulations more closely.

colloquially, the central limit theorem says that

n       pzn
lim
its practical application is that, for large n,

= n(0, 1).

pzn     n(0, 1),

1.10. exercises

which in turn means

p  yn     n(  ,   /

   
n).

80

in example 1.11 we simulated the game of craps for n.sim = 50, 200, and 1000.
those simulations are depicted in figure 1.23. the upper panel shows a histogram of
1000 simulations, all using n.sim = 50. for a single simulation with n.sim = 50 let
x1, . . . , x50 be the outcomes of those simulations. each xi     bern(.493), so    = .493
.493     .507     .5. therefore, according to the central limit theorem, when
and    =
n.sim = 50

   

  xn     n(  ,   /

   
n)     n(.493, .071)

this is the normal density plotted in the upper panel of figure 1.23. we see that the
n(.493, .071) is a good approximation to the histogram. and that   s because      =   x50    
n(.493, .071), approximately. the central limit theorem says that the approximation
will be good for    large    n. in this case n = 50 is large enough.

similarly,

  xn     n(.493, .035)
  xn     n(.493, .016)

when n.sim = 200
when n.sim = 1000.

these densities are plotted in the middle and lower panels of figure 1.23.

the central limit theorem makes three statements about the distribution of   yn (zn) in

large samples:

1. e[  yn] =    (e[zn] = 0),

2. sd(  yn) =   /

   
n (sd(zn) = 1), and

3.   yn (zn) has, approximately, a normal distribution.

the    rst two of these are already known from theorems 1.7 and 1.9. it   s the third point
that is key to the central limit theorem. another surprising implication from the central
limit theorem is that the distributions of   yn and zn in large samples are determined solely
by    and   ; no other features of f matter.

1.10 exercises

1. show: if    is a id203 measure then for any integer n     2, and disjoint sets

a1, . . . , an

  (

n(cid:91)

n(cid:88)

ai) =

  (ai).

i=1

i=1

1.10. exercises

81

figure 1.23: histograms of craps simulations. solid curves are normal approximations
according to the central limit theorem.

n.sim = 50theta hatdensity0.30.40.50.60.70123456n.sim = 200theta hatdensity0.30.40.50.60.70246810n.sim = 1000theta hatdensity0.30.40.50.60.70510201.10. exercises

2. simulating dice rolls

82

(a) simulate 6000 dice rolls. count the number of 1   s, 2   s, . . . , 6   s.
(b) you expect about 1000 of each number. how close was your result to what

you expected?

(c) about how often would you expect to get more than 1030 1   s? run an r

simulation to estimate the answer.

3. the game of risk in the board game risk players place their armies in di   erent
countries and try eventually to control the whole world by capturing countries one
at a time from other players. to capture a country, a player must attack it from an
adjacent country. if player a has a     2 armies in country a, she may attack adjacent
country d. attacks are made with from 1 to 3 armies. since at least 1 army must
be left behind in the attacking country, a may choose to attack with a minimum of
1 and a maximum of min(3, a     1) armies. if player d has d     1 armies in country
d, he may defend himself against attack using a minimum of 1 and a maximum of
min(2, d) armies. it is almost always best to attack and defend with the maximum
permissible number of armies.
when player a attacks with a armies she rolls a dice. when player d defends with
d armies he rolls d dice. a   s highest die is compared to d   s highest. if both players
use at least two dice, then a   s second highest is also compared to d   s second highest.
for each comparison, if a   s die is higher than d   s then a wins and d removes one
army from the board; otherwise d wins and a removes one army from the board.
when there are two comparisons, a total of two armies are removed from the board.
    if a attacks with one army (she has two armies in country a, so may only attack
with one) and d defends with one army (he has only one army in country d)
what is the id203 that a will win?
    suppose that player 1 has two armies each in countries c1, c2, c3 and c4, that
player 2 has one army each in countries b1, b2, b3 and b4, and that country
ci attacks country bi. what is the chance that player 1 will be successful in at
least one of the four attacks?

4.

(a) justify the last step of equation 1.2.
(b) justify the last step of the proof of theorem 1.1.
(c) prove theorem 1.1 when g is a decreasing function.

5. y is a random variable. y     (   1, 1). the pdf is p(y) = ky2 for some constant, k.

1.10. exercises

83

(a) find k.
(b) use r to plot the pdf.
(c) let z =    y. find the pdf of z. plot it.

6. u is a random variable on the interval [0, 1]; p(u) = 1.

(a) v = u2. on what interval does v live? plot v as a function of u. find the pdf

of v. plot pv(v) as a function of v.

(b) w = 2u. on what interval does w live? plot w as a function of u. find the
(c) x =     log(u). on what interval does x live? plot x as a function of u. find

pdf of w. plot pw(w) as a function of w.

the pdf of x. plot px(x) as a function of x.

7. let x     exp(  ) and let y = cx for some constant c.

(a) write down the density of x.
(b) find the density of y.
(c) name the distribution of y.

8. consider a random variable y with id203 density function (pdf) given by

f (y) = ce   y2/2,         < y <    

(a) find c.
(b) find the expected value and variance of y.
(c) what is the pdf of y2?

9. a teacher randomly selects a student from a sta 103 class. let x be the number of
math courses the student has completed. let y = 1 if the student is female and y = 0
if the student is male. fifty percent of the class is female. among the women, thirty
percent have completed one math class, forty percent have completed two math
classes and thirty percent have completed three. among the men, thirty percent
have completed one math class,    fty percent have completed two math classes and
twenty percent have completed three.

(a) true or false: x and y are independent.
(b) find e[x|y = 1].

10. sue is studying the bin(25,.4) distribution. in r she types

1.10. exercises

84

y <- rbinom(50, 25, .4)
m1 <- mean(y)
m2 <- sum(y) / 25
m3 <- sum ( (y-m1)^2 ) / 50

(a) is y a number, a vector or a matrix?
(b) what is the approximate value of m1?
(c) what is the approximate value of m2?
(d) what was sue trying to estimate with m3?

11. the random variables x and y have joint pdf fx,y(x, y) = 1 in the triangle of the
xy-plane determined by the points (-1,0), (1,0), and (0,1). hint: draw a picture.

(a) find fx(.5).
(b) find fy(y).
(c) find fy | x(y| x = .5).
(d) find e[y | x = .5].
(e) find fy(.5).
(f) find fx(x).
(g) find fx | y(x| y = .5).
(h) find e[x | y = .5].

12. x and y are uniformly distributed in the unit disk. i.e., the joint density p(x, y) is

constant on the region of r2 such that x2 + y2     1.
(a) find p(x, y).
(b) are x and y independent?
(c) find the marginal densities p(x) and p(y).
(d) find the conditional densities p(x| y) and p(y| x).
(e) find e[x], e[x | y = .5], and e[x | y =    .5].

13. verify the claim in example 1.4 that argmax   p[x = 3|   ] = 3. hint: di   erentiate

equation 1.6.

14.

(a) p is the pdf of a continuous random variable w. find

r p(s) ds.

(cid:82)

1.10. exercises

(cid:82)

(b) find

r p(s) ds for the pdf in equation 1.7.

85

15. page 7 says    every pdf must satisfy two properties . . .     and that one of them is

16.

   p(y)     0 for all y.    explain why that   s not quite right.
(cid:82) 0

is the pdf of a continuous random variable y. find

1   
2  

e    1
2 y2

p(y) =

       p(s) ds.

17. when spun, an unbiased spinner points to some number y     (0, 1]. what is p(y)?
18. some exercises on the densities of tranformed variables. one of them should illus-

19.

20.

21.

the mean of the binomial distribution.

trate the need for the absolute value of the jacobian.
(a) prove: if x     poi(  ) then e(x) =   . hint: use the same trick we used to derive
(b) prove: if x     n(  ,   ) then e(x) =   . hint: change variables in the integral.
(a) prove: if x     bin(n, p) then var(x) = np(1     p). hint: use theorem 1.9.
(b) prove: if x     poi(  ) then var(x) =   . hint: use the same trick we used to
(c) if x     exp(  ),    nd var(x). hint: use theorem 1.2.
(d) if x     n(  ,   ),    nd var(x). hint: use theorem 1.2.
(a) justify each step of equation 1.12.
(b) justify each step of equation 1.13. (hint: integrate by parts.)

derive the mean of the binomial distribution and theorem 1.2.

22. let x1     bin(50, .1), x2     bin(50, .9) and x1     x2. de   ne y = x1 + x2. does y

have the bin(100, .5) distribution? why or why not?

23. let x1     bin(50, .5), x2     bin(50, .5) and x1     x2. de   ne y1 = x1 + x2 and
y2 = 2x1. which has the bigger mean: y1 or y2? which has the bigger variance: y1
or y2? justify your answer.

24. consider customers arriving at a service counter.

interarrival times often have a
distribution that is approximately exponential with a parameter    that depends on
conditions speci   c to the particular counter. i.e., p(t) =   e     t. assume that succes-
sive interarrival times are independent of each other. let t1 be the arrival time of the
next customer and t2 be the additional time until the arrival of the second customer.

1.10. exercises

86

(a) what is the joint density of (t1, t2)?
(b) let s = t1 +t2, the time until the next two customers arrive. what is p[s     5];
i.e. the id203 that at least 2 customers arrive within the next 5 minutes?

(c) what is e(s )?

25. a gambler plays at a roulette table for two hours betting on red at each spin of the

wheel. there are 60 spins during the two hour period. what is the distribution of

(a) z, the number of times the gambler wins,
(b) y, the number of times the gambler loses,
(c) x, the number of times the gambler is jostled by the person standing behind,
(d) w, the gambler   s net gain?

26. if human dna contains xxx bases, and if each base mutates with id203 p over
the course of a lifetime, what is the average number of mutations per person? what
is the variance of the number of mutations per person?

27. isaac is in 5th grade. each sentence he writes for homework has a 90% chance of
being grammatically correct. the correctness of one sentence does not a   ect the
correctness of any other sentence. he recently wrote a 10 sentence paragraph for a
writing assignment. write a formula for the chance that no more than two sentences
are grammatically incorrect.

28. teams a and b play each other in the world series of baseball. team a has a 60%
chance of winning each game. what is the chance that b wins the series? (the
winner of the series is the    rst team to win 4 games.)

29. a basketball player shoots ten free throws in a game. she has a 70% chance of
making each shot. if she misses the shot, her team has a 30% chance of getting the
rebound.

(a) let m be the number of shots she makes. what is the distribution of m? what
are its expected value and variance? what is the chance that she makes some-
where between 5 and 9 shots, inclusive?

(b) let r be the number of rebounds her team gets from her free throws. what is
the distribution of r? what are its expected value and variance? what is the
chance that r     1?

1.10. exercises

(cid:33)

87

30. let (x, y) have joint density function fx,y. there are two ways to    nd ey. one way
y fx,y(x, y) dxdy. the other is to start with the joint density fx,y,    nd
y fy(y) dy. show that these two methods give

is to evaluate
the marginal density fy, then evaluate
the same answer.

(cid:82)

31. prove theorem 1.3 (pg. 40) in the discrete case.

32. prove theorem 1.7 (pg. 77) in the continuous case.

33. a researcher randomly selects mother-daughter pairs. let xi and yi be the heights of

the i   th mother and daughter, respectively. true or false:

(a) xi and x j are independent
(b) xi and y j are independent
(c) yi and y j are independent
(d) xi and yi are independent

34. as part of his math homework isaac had to roll two dice and record the results. let
x1 be the result of the    rst die and x2 be the result of the second. what is the
id203 that x1=1 given that x1 + x2 = 5?

35. a blood test is 99 percent e   ective in detecting a certain disease when the disease
is present. however, the test also yields a false-positive result for 2 percent of the
healthy patients tested, who have no such disease. suppose 0.5 percent of the popu-
lation has the disease. find the id155 that a randomly tested indi-
vidual actually has the disease given that her test result is positive.

36. a doctor suspects a patient has the rare medical condition ds, or disstaticularia,
the inability to learn statistics. ds occurs in .01% of the population, or one person
in 10,000. the doctor orders a diagnostic test. the test is quite accurate. among
people who have ds the test yields a positive result 99% of the time. among people
who do not have ds the test yields a positive result only 5% of the time.
for the patient in question, the test result is positive. calculate the id203 that
the patient has ds.

37. ecologists are studying salamanders in a forest. there are two types of forest. type
a is conducive to salamanders while type b is not. they are studying one forest but
don   t know which type it is. types a and b are equally likely.

1.10. exercises

88

during the study, they randomly sample quadrats.
(a quadrat is a square-meter
plot.) in each quadrat they count the number of salamanders. some quadrats have
poor salamander habitat. in those quadrats the number of salamanders is 0. other
quadrats have good salamander habitat. in those quadrats the number of salamanders
is either 0, 1, 2, or 3, with probabilities 0.1, 0.3, 0.4, and 0.2, respectively. (yes,
there might be no salamanders in a quadrat with good habitat.) in a type a forest,
the id203 that a quadrat is good is 0.8 and the id203 that it is poor is 0.2.
in a type b forest the id203 that a quadrat is good is 0.3 and the id203 that
it is poor is 0.7.

(a) on average, what is the id203 that a quadrat is good?
(b) on average, what is the id203 that a quadrat has 0 salamanders, 1 sala-

mander, 2 salamanders, 3 salamanders?
(c) the ecologists sample the    rst quadrat.

id203 that the quadrat is good?

it has 0 salamanders. what is the

(d) given that the quadrat had 0 salamanders, what is the id203 that the forest

is type a?

(e) now the ecologists prepare to sample the second quadrat. given the results
from the    rst quadrat, what is the id203 that the second quadrat is good?
(f) given the results from the    rst quadrat, what is the id203 that they    nd

no salamanders in the second quadrat?

38. let        bern(1/4),        bern(1/3), and          . de   ne    =    +   . let y1 and y2 be

conditionally independent given (  ,   ), each with distribution poi(  ).

(a) find p(  ,   , y1).
(b) find p(y1).
(c) does y1 have a poisson distribution?
(d) find p(y1, y2).
(e) are y1 and y2 independent?
(f) find p(y1, y2 |   ).
(g) are y1 and y2 independent given   ?
(h) find p(y1, y2 |   ).
(i) are y1 and y2 independent given   ?

1.10. exercises

89

now we observe y1 = 0.
(j) find p(  ,   | y1 = 0).
(k) are    and    independent, given y1 = 0?

39. let x and y be distributed in the triangle with corners (0, 0), (1, 0), and (1, 1). let

their joint density be p(x, y) = k(x + y) for some constant k.

(a) find k.
(b) find p(x) and p(y).
(c) are x and y independent? if so, prove.

p(x, y) (cid:44) p(x)p(y).

if not,    nd a pair (x, y) such that

(d) find p(x| y) and p(y| x).
(e) find e[x] and e[y].
(f) find e[x | y = y] and e[y | x = x].
(g) plot e[x | y = y] as a function of y and e[y | x = x] as a function of x.

40. let a     n(0, 1). given a = a, let b and c be independent, each with distribution
n(a, 1). given a = a, b = b, and c = c, let d     n(b, 1), e     n(c, 1) and d and e
be independent. prove: d and e are conditionally independent given a = a.

41. let        exp(1). given   , let x and y be independent, each with distribution

exp(1/  ).

(a) find p(  , x, y), p(x, y), and p(x).
(b) prove:

p(y| x) =

(cid:90)    

0

p(y|   )p(  | x) d  

42. for various reasons, researchers often want to know the number of people who have
participated in embarassing activities such as illegal drug use, cheating on tests,
robbing banks, etc. an opinion poll which asks these questions directly is likely to
elicit many untruthful answers. to get around the problem, researchers have devised
the method of randomized response. the following scenario illustrates the method.
a pollster identi   es a respondent and gives the following instructions.    toss a coin,
but don   t show it to me. if it lands heads, answer question (a). if it lands tails,
answer question (b). just answer    yes    or    no   . do not tell me which question you
are answering.

1.10. exercises

90

question (a): does your telephone number end in an even digit?
question (b): have you ever used cocaine?   
because the respondent can answer truthfully without revealing his or her cocaine
use, the incentive to lie is removed. researchers hope respondents will tell the truth.
you may assume that respondents are truthful and that telephone numbers are equally
likely to be odd or even. let p be the id203 that a randomly selected person
has used cocaine.

(a) what is the id203 that a randomly selected person answers "yes"?
(b) suppose we survey 100 people. let x be the number who answer "yes". what

is the distribution of x?

43. in a 1991 article (see utts [1991] and discussants.) jessica utts reviews some of
the history of id203 and statistics in esp research. this question concerns a
particular series of autoganzfeld experiments in which a sender looking at a picture
tries to convey that picture telepathically to a receiver. utts explains:

   . . .    autoganzfeld    experiments require four participants. the    rst is the
receiver (r), who attempts to identify the target material being observed
by the sender (s). the experimenter (e) prepares r for the task, elicits
the response from r and supervises r   s judging of the response against
the four potential targets.
(judging is double blind; e does not know
which is the correct target.) the fourth participant is the lab assistant
(la) whose only task is to instruct the computer to randomly select the
target. no one involved in the experiment knows the identity of the target.
   both r and s are sequestered in sound-isolated, electrically sheilded
rooms. r is prepared as in earlier ganzfeld studies, with white noise and
a    eld of red light. in a nonadjacent room, s watches the target material
on a television and can hear r   s target description (   mentation   ) as it is
being given. the mentation is also tape recorded.

   the judging process takes place immediately after the 30-minute
sending period. on a tv monitor in the isolated room, r views the four
choices from the target pack that contains the actual target. r is asked to
rate each one according to how closely it matches the ganzfeld mentation.
the ratings are converted to ranks and, if the correct target is ranked    rst,
a direct hit is scored. the entire process is automatically recorded by
the computer. the computer then displays the correct choice to r as
feedback.   

1.10. exercises

91

in the series of autoganzfeld experiments analyzed by utts, there were a total of 355
trials. let x be the number of direct hits.

(a) what are the possible values of x?
(b) assuming there is no esp, and no cheating, what is the distribution of x?
(c) plot the pmf of the distribution in part (b).
(d) find e[x] and sd(x).
(e) add a normal approximation to the plot in part (c).
(f) judging from the plot in part (c), approximately what values of x are consistent

with the    no esp, no cheating    hypothesis?

(g) in fact, the total number of hits was x = 122. what do you conclude?

44. this exercise is based on a computer lab that another professor uses to teach the
central limit theorem. it was originally written in matlab but here it   s translated
into r.
enter the following r commands:

u <- matrix ( runif(250000), 1000, 250 )
y <- apply ( u, 2, mean )

these create a 1000x250 (a thousand rows and two hundred    fty columns) matrix of
random draws, called u and a 250-dimensional vector y which contains the means
of each column of u.
now enter the command hist(u[,1]). this command takes the    rst column of u
(a column vector with 1000 entries) and makes a histogram. print out this histogram
and describe what it looks like. what distribution is the runif command drawing
from?
now enter the command hist(y). this command makes a histogram from the
vector y. print out this histogram. describe what it looks like and how it di   ers from
the one above. based on the histogram, what distribution do you think y follows?
you generated y and u with the same random draws, so how can they have di   erent
distributions? what   s going on here?

45. suppose that extensive testing has revealed that people in group a have iq   s that
are well described by a n(100, 10) distribution while the iq   s of people in group

1.10. exercises

92

b have a n(105, 10) distribution. what is the id203 that a randomly chosen
individual from group a has a higher iq than a randomly chosen individual from
group b?

(a) write a formula to answer the question. you don   t need to evaluate the formula.
(b) write some r code to answer the question.

46. the so-called monty hall or let   s make a deal problem has caused much conster-
nation over the years. it is named for an old television program. a contestant is
presented with three doors. behind one door is a fabulous prize; behind the other
two doors are virtually worthless prizes. the contestant chooses a door. the host
of the show, monty hall, then opens one of the remaining two doors, revealing one
of the worthless prizes. because monty is the host, he knows which doors conceal
the worthless prizes and always chooses one of them to reveal, but never the door
chosen by the contestant. then the contestant is o   ered the choice of keeping what
is behind her original door or trading for what is behind the remaining unopened
door. what should she do?
there are two popular answers.

    there are two unopened doors, they are equally likely to conceal the fabulous

prize, so it doesn   t matter which one she chooses.

    she had a 1/3 id203 of choosing the right door initially, a 2/3 chance of

getting the prize if she trades, so she should trade.

(a) create a simulation in r to discover which answer is correct.
(b) show using formal arguments of id155 which answer is cor-

rect.

make sure your answers to (a) and (b) agree!

47. prove theorem 1.6 (pg. 54).

48. theorem 1.11, chebychev   s inequality, gives an upper bound for how far a random
variable can vary from its mean. speci   cally, the theorem states that for any random
variable x, with mean    and sd    and for any   > 0, p[|x       |      ]       2/ 2. this
exercise investigates the conditions under which the upper bound is tight, i.e., the
conditions under which p[|x       |      ] =   2/ 2.

1.10. exercises

93

(a) let    = 0 and    = 1. consider the value   = 1. are there any random variables
x with mean 0 and sd 1 such that p[|x|     1] = 1? if not, explain why. if so,
construct such a distribution.

(b) now consider values of   other than 1. are there any random variables x with

mean 0 and sd 1, and values of   (cid:44) 1 such that p[|x       |      ] =   2/ 2?

(c) now let    and    be arbitrary and let   =   . are there any continuous random
variables x with mean    and sd    such that p[|x       |      ] =   2/ 2? if not,
explain. if so, show how to construct one.

(d) are there any discrete random variables x with mean    and sd    such that

p[|x       |      ] =   2/ 2? if not, explain. if so, show how to construct one.

(e) let    and    be arbitrary and let   (cid:44)   . are there any random variables x with
mean    and sd    such that p[|x       |      ] =   2/ 2? if not, explain. if so, show
how to construct one.

49.

(a) state carefully the central limit theorem for a sequence of i.i.d.random vari-
(b) suppose x1, . . . , x100     iid u(0, 1). what is the standard deviation of   x, the

ables.

mean of x1, . . . , x100?

(c) use the central limit theorem to    nd approximately the id203 that the

average of the 100 numbers chosen exceeds 0.56.

chapter 2

modes of id136

2.1 data

this chapter takes up the heart of statistics: making id136s, quantitatively, from data.
the data, y1, . . . , yn are assumed to be a random sample from a population.

in chapter 1 we reasoned from f to y. that is, we made statements like    if the ex-
periment is like . . . , then f will be . . . , and (y1, . . . , yn) will look like . . .     or    e(y) must
be . . .    , etc. in chapter 2 we reason from y to f . that is, we make statements such as
   since (y1, . . . , yn) turned out to be . . . it seems that f is likely to be . . .    , or    
y f (y) dy
is likely to be around . . .    , etc. this is a basis for knowledge: learning about the world
by observing it. its importance cannot be overstated. the    eld of statistics illuminates
the type of thinking that allows us to learn from data and contains the tools for learning
quantitatively.

(cid:82)

reasoning from y to f works because samples are usually like the populations from
which they come. for example, if f has a mean around 6 then most reasonably large
samples from f also have a mean around 6, and if our sample has a mean around 6 then
we infer that f likely has a mean around 6. if our sample has an sd around 10 then we
infer that f likely has an sd around 10, and so on. so much is obvious. but can we be
more precise? if our sample has a mean around 6, then can we infer that f likely has a
mean somewhere between, say, 5.5 and 6.5, or can we only infer that f likely has a mean
between 4 and 8, or even worse, between about -100 and 100? when can we say anything
quantitative at all about the mean of f ? the answer is not obvious, and that   s where
statistics comes in. statistics provides the quantitative tools for answering such questions.

this chapter presents several generic modes of statistical analysis.

data description data description can be visual, through graphs, charts, etc., or numeri-
cal, through calculating sample means, sd   s, etc. displaying a few simple features

94

2.2. data description

95

of the data y1, . . . , yn can allow us to visualize those same features of f . data de-
scription requires few a priori assumptions about f .

likelihood in likelihood id136 we assume that f is a member of a parametric family
of distributions { f   :          }. then id136 about f is the same as id136 about
the parameter   , and di   erent values of    are compared according to how well f  
explains the data.

estimation the goal of estimation is to estimate various aspects of f , such as its mean,
median, sd, etc. along with the estimate, statisticians try to give quantitative mea-
sures of how accurate the estimates are.

bayesian id136 bayesian id136 is a way to account not just for the data y1, . . . , yn,

but also for other information we may have about f .

prediction sometimes the goal of statistical analysis is not to learn about f per se, but
to make predictions about y   s that we will see in the future. in addition to the usual
problem of not knowing f , we have the additional problem that even if we knew f ,
we still wouldn   t be able to predict future y   s exactly.

hypothesis testing sometimes we want to test hypotheses like head start is good for
kids or lower taxes are good for the economy or the new treatment is better than the
old.

decision making often, decisions have to be made on the basis of what we have learned
about f . in addition, making good decisions requires accounting for the potential
gains and losses of each decision.

2.2 data description

there are many ways, both graphical and numerical, to describe data sets. sometimes
we   re interested in means, sometimes variations, sometimes trends through time, and there
are good ways to describe and display all these aspects and many more. simple data de-
scription is often enough to shed light on an underlying scienti   c problem. the subsections
of section 2.2 show some basic ways to describe various types of data.

2.2.1 summary statistics
one of the simplest ways to describe a data set is by a low dimensional summary. for
instance, in example 1.5 on ocean temperatures there were multiple measurements of

2.2. data description

marized by the sample mean   y = n   1(cid:80) yi; comparisons of the 9 sample means helped

temperatures from each of 9 locations. the measurements from each location were sum-

oceanographers deduce the presence of the mediterranean tongue. similarly, the essen-
tial features of many data sets can be captured in a one-dimensional or low-dimensional
summary. such a summary is called a statistic. the examples below refer to a data set
y1, . . . , yn of size n.

96

de   nition 2.1 (statistic). a statistic is any function, possibly vector valued, of the data.

the most important statistics are measures of location and dispersion. important ex-

amples of location statistics include

mean the mean of the data is   y     n   1(cid:80) yi. r can compute means:

y <- 1:10
mean(y)

median a median of the data is any number m such that at least half of the yi   s are less
than or equal to m and at least half of the yi   s are greater than or equal to m. we
say    a    median instead of    the    median because a data set with an even number of
observations has an interval of medians. for example, if y <- 1:10, then every
m     [5, 6] is a median. when r computes a median it computes a single number by
taking the midpoint of the interval of medians. so median(y) yields 5.5.

quantiles for any p     [0, 1], the p-th quantile of the data should be, roughly speaking,
the number q such that pn of the data points are less than q and (1     p)n of the data
points are greater than q.
figure 2.1 illustrates the idea. panel a shows a sample of 100 points plotted as
a stripchart (page 109). the black circles on the abcissa are the .05, .5, and .9
quantiles; so 5 points (open circles) are to the left of the    rst vertical line, 50 points
are on either side of the middle vertical line, and 10 points are to the right of the
third vertical line. panel b shows the empirical cdf of the sample. the values .05, .5,
and .9 are shown as squares on the vertical axis; the quantiles are found by following
the horizontal lines from the vertical axis to the cdf, then the vertical lines from the
cdf to the horizontal axis. panels c and d are similar, but show the distribution from
which the sample was drawn instead of showing the sample itself. in panel c, 5%
of the mass is to the left of the    rst black circle; 50% is on either side of the middle
black circle; and 10% is to the right of the third black dot. in panel d, the open

2.2. data description

97

squares are at .05, .5, and .9 on the vertical axis; the quantiles are the circles on the
horizontal axis.
denote the p-th quantile as qp(y1, . . . , yn), or simply as qp if the data set is clear from
the context. with only a    nite sized sample qp(y1, . . . , yn) cannot be found exactly.
so the algorithm for    nding quantiles works as follows.

1. sort the yi   s in ascending order. label them y(1), . . . , y(n) so that

y(1)                y(n).

2. set q0     y(1) and q1     y(n).
3. y(2) through y(n   1) determine n   1 subintervals in [y(1), y(n)]. so, for i = 1, . . . , n   

n   1) let qp be any number in the interval (q i
n   1

    y(i+1).
2, set q i
n   1
4. for p     ( i
n   1 , i+1
if p is a    nice    number then qp is often given a special name. for example, q.5 is
the median; (q.25, q.5, q.75), the    rst, second and third quartiles, is a vector-valued
statistic of dimension 3; q.1, q.2, . . . are the deciles; q.78 is the 78   th percentile.
r can compute quantiles. when faced with p     ( i
e.g. quantile(y,c(.25,.75)) yields (3.25, 7.75).
the vector (y(1), . . . , y(n)) de   ned in step 1 of the algorithm for quantiles is an n-
dimensional statistic called the order statistic. y(i) by itself is called the i   th order
statistic.

n   1) r does linear interpolation.

n   1 , i+1

, q i+1
n   1

).

figure 2.1 was created with the following r code.

par ( mfrow=c(2,2) )
quant <- c ( .05, .5, .9 )
nquant <- length(quant)

y <- rgamma ( 100, 3 )
stripchart( y, method="jitter", pch=1, xlim=c(0,10),

xlab="y", main="a")

abline ( v=quantile(y,quant) )
points ( x=quantile(y,quant), y=rep(.5,nquant), pch=19 )

2.2. data description

98

figure 2.1: quantiles. the black circles are the .05, .5, and .9 quantiles. the open squares
are the numbers .05, .5, and .9 on the vertical axis. panels a and b are for a sample; panels c
and d are for a distribution.

02468ay024680.00.40.8byf(y)024680.000.15cyp(y)024680.00.40.8dyf(y)2.2. data description

99

plot.ecdf(y, xlab="y", ylab="f(y)", xlim=c(0,10),

main="b" )

for ( q in quant )

segments ( c(0,quantile(y,q)), c(q,0),

rep(quantile(y,q),2), rep(q,2) )

points ( x=quantile(y,quant), y=rep(0,nquant), pch=19 )
points ( x=rep(0,nquant), y=quant, pch=22 )

y <- seq(0,10,length=100)
plot ( y, dgamma(y,3), type="l", xlim=c(0,10), ylab="p(y)",

main="c" )

points ( x=qgamma(quant,3), y=rep(0,nquant), pch=19 )

plot ( y, pgamma(y,3), type="l", ylab="f(y)", main="d" )
for ( q in quant )

segments ( c(0,qgamma(q,3)), c(q,0), rep(qgamma(q,3),2),

rep(q,2) )

points ( x=qgamma(quant,3), y=rep(0,nquant), pch=19 )
points ( x=rep(0,nquant), y=quant, pch=22 )

    plot.ecdf plots the empirical cumulative distribution function. here the
word    empirical    means that the cdf comes from a sample, as opposed to the-
oretical id203 calculations.

dispersion statistics measure how spread out the data are. since there are many ways
to measure dispersion there are many dispersion statistics. important dispersion statistics
include
standard deviation the sample standard deviation or sd of a data set is

note: some statisticians prefer

s    

s    

(cid:114)(cid:80)(yi       y)2
(cid:114)(cid:80)(yi       y)2

n

n     1

2.2. data description

100

for reasons which do not concern us here.
between the two versions of s.

if n is large there is little di   erence

variance the sample variance is

note: some statisticians prefer

s2    

s2    

(cid:80)(yi       y)2
(cid:80)(yi       y)2

n

n     1

for reasons which do not concern us here.
between the two versions of s2.

if n is large there is little di   erence

interquartile range the interquartile range is q.75     q.25

presenting a low dimensional statistic is useful if we believe that the statistic is repre-
sentative of the whole population. for instance, in example 1.5, oceanographers believe
the data they have collected is representative of the long term state of the ocean. therefore
the sample means at the nine locations in figure 1.12 are representative of the long term
state of the ocean at those locations. more formally, for each location we can imagine
a population of temperatures, one temperature for each moment in time. that popula-
tion has an unknown pdf f . even though are data are not really a random sample from
f (the sampling times were not chosen randomly, among other problems.) we can think
of them that way without making too serious an error. the histograms in figure 1.12 are
estimates of the f    s for the nine locations. the mean of each f is what oceanographers
call a climatological mean, or an average which, because it is taken over a long period of
time, represents the climate. the nine sample means are estimates of the nine climato-
logical mean temperatures at those nine locations. simply presenting the sample means
reveals some interesting structure in the data, and hence an interesting facet of physical
oceanography.

often, more than a simple data description or display is necessary; the statistician has
to do a bit of exploring the data set. this activity is called exploratory data analysis or
simply eda. it is hard to give general rules for eda, although displaying the data in many
di   erent ways is often a good idea. the statistician must decide what displays and eda
are appropriate for each data set and each question that might be answered by the data set.
that is one thing that makes statistics interesting. it cannot be reduced to a set of rules
and procedures. a good statistician must be attuned to the potentially unique aspects of
each analysis. we now present several examples to show just a few of the possible ways to
explore data sets by displaying them graphically. the examples reveal some of the power
of graphical display in illuminating data and teasing out what it has to say.

2.2. data description

101

2.2.2 displaying distributions
instead of reducing a data set to just a few summary statistics, it is often helpful to display
the full data set. but reading a long list of numbers is usually not helpful; humans are
not good at assimilating data in that form. we can learn a lot more from a graphical
representation of the data.

histograms the next examples use histograms to display the full distribution of some
data sets. visual comparison of the histograms reveals structure in the data.
example 2.1 (tooth growth)
the r statistical language comes with many data sets. type data() to see what they
are. this example uses the data set toothgrowth on the effect of vitamin c on tooth
growth in guinea pigs. you can get a description by typing help(toothgrowth). you
can load the data set into your r session by typing data(toothgrowth). toothgrowth
is a dataframe of three columns. the    rst few rows look like this:

len supp dose
0.5
0.5
0.5

vc
vc
vc

1 4.2
2 11.5
3 7.3

column 1, or len, records the amount of tooth growth. column 2, supp, records
whether the guinea pig was given vitamin c in ascorbic acid or orange juice. column 3,
dose, records the dose, either 0.5, 1.0 or 2.0 mg. thus there are six groups of guinea
pigs in a two by three layout. each group has ten guinea pigs, for a total of sixty
observations. figure 2.2 shows histograms of growth for each of the six groups. from
figure 2.2 it is clear that dose affects tooth growth.

figure 2.2 was produced by the following r code.

supp <- unique ( toothgrowth$supp )
dose <- unique ( toothgrowth$dose )
par ( mfcol=c(3,2) )
for ( i in 1:2 )
for ( j in 1:3 ) {
good <- (

toothgrowth$supp == supp[i]

& toothgrowth$dose == dose[j] )

2.2. data description

102

figure 2.2: histograms of tooth growth by delivery method (vc or oj) and dose (0.5, 1.0
or 2.0).

vc, 0.5051020300.01.02.03.0vc, 10510203001234vc, 2051020300.00.51.01.52.0oj, 0.505102030012345oj, 1051020300.00.51.01.52.0oj, 2051020300.01.02.03.02.2. data description

103

figure 2.3: histograms of tooth growth by delivery method (vc or oj) and dose (0.5, 1.0
or 2.0).

vc, 0.5010250.00.51.01.52.02.53.0vc, 10102501234vc, 2010250.00.51.01.52.0oj, 0.501025012345oj, 1010250.00.51.01.52.0oj, 2010250.00.51.01.52.02.53.02.2. data description

104

figure 2.4: histograms of tooth growth by delivery method (vc or oj) and dose (0.5, 1.0
or 2.0).

vc, 0.5010250.01.53.0vc, 10102501234vc, 2010250.01.02.0oj, 0.501025024oj, 1010250.01.02.0oj, 2010250.01.53.02.2. data description

105

hist ( toothgrowth$len[good], breaks=seq(0,34,by=2),

xlab="", ylab="",
main=paste(supp[i], ", ", dose[j], sep="") )

}

    unique(x) returns the unique values in x. for example, if x <- c(1,1,2) then

unique(x) would be 1 2.

figure 2.3 is similar to figure 2.2 but laid out in the other direction. (notice that it   s
easier to compare histograms when they are arranged vertically rather than horizon-
tally.) the    gures suggest that delivery method does have an effect, but not as strong
as the dose effect. notice also that figure 2.3 is more dif   cult to read than figure 2.2
because the histograms are too tall and narrow. figure 2.4 repeats figure 2.3 but us-
ing less vertical distance; it is therefore easier to read. part of good statistical practice
is displaying    gures in a way that makes them easiest to read and interpret.

the    gures alone have suggested that dose is the most important effect, and de-
livery method less so. a further analysis could try to be more quantitative: what is
the typical size of each effect, how sure can we be of the typical size, and how much
does the effect vary from animal to animal. the    gures already suggest answers, but
a more formal analysis is deferred to section 2.7.

figures 1.12, 2.2, and 2.3 are histograms. the abscissa has the same scale as the data.
the data are divided into bins. the ordinate shows the number of data points in each bin.
(hist(...,prob=t) plots the ordinate as id203 rather than counts.) histograms are
a powerful way to display data because they give a strong visual impression of the main
features of a data set. however, details of the histogram can depend on both the number
of bins and on the cut points between bins. for that reason it is sometimes better to use
a display that does not depend on those features, or at least not so strongly. example 2.2
illustrates.

density estimation

example 2.2 (hot dogs)
in june of 1986, consumer reports published a study of hot dogs. the data are
available at dasl, the data and story library, a collection of data sets for free use by
statistics students. dasl says the data are

2.2. data description

106

   results of a laboratory analysis of calories and sodium content of major
hot dog brands. researchers for consumer reports analyzed three types
of hot dog: beef, poultry, and meat (mostly pork and beef, but up to 15%
poultry meat).   

you can download the data from http://lib.stat.cmu.edu/dasl/datafiles/hotdogs.
html. the    rst few lines look like this:

type
beef
beef

calories
186
181

sodium
495
477

this example looks at the calorie content of beef hot dogs. (later examples will com-
pare the calorie contents of different types of hot dogs.)

figure 2.5(a) is a histogram of the calorie contents of beef hot dogs in the study.
from the histogram one might form the impression that there are two major varieties of
beef hot dogs, one with about 130   160 calories or so, another with about 180 calories
or so, and a rare outlier with fewer calories. figure 2.5(b) is another histogram of the
same data but with a different bin width.
it gives a different impression, that calorie
content is evenly distributed, approximately, from about 130 to about 190 with a small
number of lower calorie hot dogs. figure 2.5(c) gives much the same impression as
2.5(b). it was made with the same bin width as 2.5(a), but with cut points starting at 105
instead of 110. these histograms illustrate that one   s impression can be in   uenced by
both bin width and cut points.

density estimation is a method of reducing dependence on cut points. let x1, . . . ,
x20 be the calorie contents of beef hot dogs in the study. we think of x1, . . . , x20 as a
random sample from a density f representing the population of all beef hot dogs. our
goal is to estimate f . for any    xed number x, how shall we estimate f (x)? the idea
is to use information local to x to estimate f (x). we    rst describe a basic version, then
add two re   nements to get kernel density estimation and the density() function in r.
let n be the sample size (20 for the hot dog data). begin by choosing a number

h > 0. for any number x the estimate   fbasic(x) is de   ned to be

  fbasic(x)     1
2nh

1(x   h,x+h)(xi) =

fraction of sample points within h of x

2h

  fbasic has at least two apparently undesirable features.

n(cid:88)

i=1

2.2. data description

107
  fbasic(x) gives equal weight to all data points in the interval (x     h, x + h) and has
abrupt cutoffs at the ends of the interval.
it would be better to give the most
weight to data points closest to x and have the weights decrease gradually for
points increasingly further away from x.
  fbasic(x) depends critically on the choice of h.

1.

2.

we deal with these problems by introducing a weight function that depends on distance
from x. let g0 be a id203 density function. usually g0 is chosen to be symmetric
and unimodal, centered at 0. de   ne

(cid:88)
  f (x)     1
g0(x     xi)
n
(cid:90)    
(cid:88)

(cid:90)    

      

choosing g0 to be a id203 density ensures that
because

  f is also a id203 density

  f (x) dx =

1
n

      

i

g0(x     xi) dx = 1

(2.1)

when g0 is chosen to be a continuous function it deals nicely with problem 1 above. in
fact,   fbasic comes from taking g0 to be the uniform density on (   h, h).
to deal with problem 2 we rescale g0. choose a number h > 0 and de   ne a new
density g(x) = h   1g0(x/h). a little thought shows that g differs from g0 by a rescaling
of the horizontal axis; the factor h   1 compensates to make
g = 1. now de   ne the
density estimate to be

(cid:82)

(cid:88)

(cid:88)

  fh(x)     1
n

g(x     xi) =

1
nh

g0((x     xi)/h)

h is called the bandwidth. of course   fh still depends on h. it turns out that dependence
on bandwidth is not really a problem. it is useful to view density estimates for several
different bandwidths. each reveals features of f at different scales. figures 2.5(d), (e),
and (f) are examples. panel (d) was produced by the default bandwidth; panels (e)
and (f) were produced with 1/4 and 1/2 the default bandwidth. larger bandwidth
makes a smoother estimate of f ; smaller bandwidth makes it rougher. none is exactly
right. it is useful to look at several.

figure 2.5 was produced with

hotdogs <- read.table ( "data/hotdogs/data", header=t )

2.2. data description

108

figure 2.5: (a), (b), (c): histograms of calorie contents of beef hot dogs; (d), (e), (f):
density estimates of calorie contents of beef hot dogs.

(a)calories120140160180012345(b)calories12014016018002468(c)calories1201401601800123451001502000.0000.010(d)caloriesdensity1001401800.0000.0150.030(e)caloriesdensity1001401800.0000.0100.020(f)caloriesdensity2.2. data description

109

cal.beef <- hotdogs$calories [ hotdogs$type == "beef" ]
par ( mfrow=c(3,2) )
hist ( cal.beef, main="(a)", xlab="calories", ylab="" )
hist ( cal.beef, breaks=seq(110,190,by=20), main="(b)",

xlab="calories", ylab="" )

hist ( cal.beef, breaks=seq(105,195,by=10), main="(c)",

xlab="calories", ylab="" )

plot ( density ( cal.beef ), main="(d)", xlab="calories",

ylab="density" )

plot ( density ( cal.beef, adjust=1/4 ), main="(e)",

xlab="calories", ylab="density" )

plot ( density ( cal.beef, adjust=1/2 ), main="(f)",

xlab="calories", ylab="density" )

    in panel (a) r used its default method for choosing histogram bins.
    in panels (b) and (c) the histogram bins were set by

hist ( ..., breaks=seq(...)

).

    density() produces a kernel density estimate.
    r uses a gaussian kernel by default which means that g0 above is the n(0, 1)

density.

    in panel (d) r used its default method for choosing bandwidth.
    in panels (e) and (f) the bandwidth was set to 1/4 and 1/2 the default by

density(..., adjust=...).

stripcharts and dotplots figure 2.6 uses the toothgrowth data to illustrate stripcharts,
also called dotplots, an alternative to histograms. panel (a) has three rows of points corre-
sponding to the three doses of ascorbic acid. each point is for one animal. the abscissa
shows the amount of tooth growth; the ordinate shows the dose. the panel is slightly
misleading because points with identical coordinates are plotted directly on top of each
other. in such situations statisticians often add a small amount of jitter to the data, to avoid

2.2. data description

110

overplotting. the middle panel is a repeat of the top, but with jitter added. the bottom
panel shows tooth growth by delivery method. compare figure 2.6 to figures 2.2 and 2.3.
which is a better display for this particular data set?

figure 2.6 was produced with the following r code.

par ( mfrow=c(3,1) )
stripchart ( toothgrowth$len ~ toothgrowth$dose, pch=1,

main="(a)", xlab="growth", ylab="dose" )

stripchart ( toothgrowth$len ~ toothgrowth$dose,

method="jitter", main="(b)", xlab="growth",
ylab="dose", pch=1 )

stripchart ( toothgrowth$len ~ toothgrowth$supp,

method="jitter", main="(c)", xlab="growth",
ylab="method", pch=1 )

boxplots an alternative, useful for comparing many distributions simultaneously, is the
boxplot. example 2.3 uses boxplots to compare scores on 24 quizzes in a statistics course.

example 2.3 (quiz scores)
in the spring semester of 2003, 58 students completed statistics 103 at duke univer-
sity. figure 2.7 displays their grades.

there were 24 quizzes during the semester. each was worth 10 points. the upper
panel of the    gure shows the distribution of scores on each quiz. the abscissa is
labelled 1 through 24, indicating the quiz number. for each quiz, the    gure shows a
boxplot. for each quiz there is a box. the horizontal line through the center of the
box is the median grade for that quiz. we can see that the median score on quiz 2
is around 7, while the median score on quiz 3 is around 4. the upper end of the
box is the 75th percentile (3rd quartile) of scores; the lower end of the box is the 25th
percentile (1st quartile). we can see that about half the students scored between
about 5 and 8 on quiz 2, while about half the students scored between about 2 and 6
on quiz 3. quiz 3 was tough.

each box may have whiskers, or dashed lines which extend above and below the
box. the exact de   nition of the whiskers is not important, but they are meant to include
most of the data points that don   t fall inside the box. (in r, by default, the whiskers
extend to the most extreme data point which is no more that 1.5 times the interquartile

2.2. data description

111

figure 2.6: (a) tooth growth by dose, no jittering; (b) tooth growth by dose with jittering;
(c) tooth growth by delivery method with jittering

51015202530350.512(a)growthdose51015202530350.512(b)growthdose5101520253035ojvc(c)growthmethod2.2. data description

112

range away from the median.) finally, there may be some individual points plotted
above or below each boxplot. these indicate outliers, or scores that are extremely
high or low relative to other scores on that quiz. many quizzes had low outliers; only
quiz 5 had a high outlier.

box plots are extremely useful for comparing many sets of data. we can easily
see, for example, that quiz 5 was the most dif   cult (75% of the class scored 3 or less.)
while quiz 1 was the easiest (over 75% of the class scored 10.)

there were no exams or graded homeworks. students    grades were determined
by their best 20 quizzes. to compute grades, each student   s scores were sorted, the
   rst 4 were dropped, then the others were averaged. those averages are displayed
in a stripchart in the bottom panel of the    gure. it   s easy to see that most of the class
had quiz averages between about 5 and 9 but that 4 averages were much lower.

figure 2.7 was produced by the following r code.

... # read in the data
colnames(scores) <- paste("q",1:24,sep="")
# define column names
boxplot ( data.frame(scores), main="individual quizzes" )

scores[is.na(scores)] <- 0 # replace missing scores

# with 0   s

temp <- apply ( scores, 1, sort ) # sort
temp <- temp[5:24,]
scores.ave <- apply ( temp, 2, mean ) # find the average

# drop the 4 lowest

stripchart ( scores.ave, "jitter", pch=1, xlab="score",

xlim=c(0,10), main="student averages" )

qq plots sometimes we want to assess whether a data set is well modelled by a normal
distribution and, if not, how it di   ers from normal. one obvious way to assess normality
is by looking at histograms or density estimates. but the answer is often not obvious from
the    gure. a better way to assess normality is with qq plots. figure 2.8 illustrates for the
nine histograms of ocean temperatures in figure 1.12.

each panel in figure 2.8 was created with the ocean temperatures near a particular
(latitude, longitude) combination. consider, for example, the upper left panel which was

2.2. data description

113

figure 2.7: quiz scores from statistics 103

q1q4q7q11q15q19q230246810individual quizzes0246810student averagesscore2.2. data description

114

constructed from the n = 213 points x1, . . . , x213 taken near (45, -40). those points are
sorted, from smallest to largest, to create the order statistic (x(1), . . . , x(213)). then they are
plotted against e[(z(1), . . . , z(213))], the expected order statistic from a normal distribution.
if the xis are approximately normal then the qq plot will look approximately linear. the
slope of the line indicates the standard deviation.

in figure 2.8 most of the panels do look approximately linear, indicating that a normal
model is reasonable. but some of the panels show departures from normality. in the upper
left and lower left panels, for example, the plots looks roughly linear except for the upper
right corners which show some data points much warmer than expected if they followed
a normal distribution. in contrast, the coolest temperatures in the lower middle panel are
not quite as cool as expected from a normal distribution.

figure 2.8 was produced with

lats <- c ( 45, 35, 25 )
lons <- c ( -40, -30, -20 )
par ( mfrow=c(3,3) )
for ( i in 1:3 )
for ( j in 1:3 ) {

good <- abs ( med.1000$lon - lons[j] ) < 1 &

abs ( med.1000$lat - lats[i] ) < 1
qqnorm ( med.1000$temp[good], xlab="", ylab="",

sub=paste("n = ", sum(good), sep=""),
main = paste ( "latitude =", lats[i], "\n longitude =",

}

lons[j] ))

2.2.3 exploring relationships
sometimes it is the relationships between several random variables that are of interest. for
example, in discrimination cases the focus is on the relationship between race or gender
on one hand and employment or salary on the other hand. subsection 2.2.3 shows several
graphical ways to display relationships.

we begin with example 2.4, an analysis of potential discrimination in admission to

uc berkeley graduate school.

2.2. data description

115

figure 2.8: qq plots of water temperatures (   c) at 1000m depth

!3!113456789latitude = 45  longitude = !40n = 213!2024.55.56.5latitude = 45  longitude = !30n = 105!202678910latitude = 45  longitude = !20n = 112!2025.56.57.5latitude = 35  longitude = !40n = 37!20128.08.59.09.5latitude = 35  longitude = !30n = 24!2028.59.510.5latitude = 35  longitude = !20n = 44!2026.57.58.5latitude = 25  longitude = !40n = 47!2026.57.07.58.0latitude = 25  longitude = !30n = 35!2026.87.27.6latitude = 25  longitude = !20n = 272.2. data description

116

example 2.4
in 1973 uc berkeley investigated its graduate admissions rates for potential sex bias.
apparently women were more likely to be rejected than men. the data set ucbadmissions
gives the acceptance and rejection data from the six largest graduate departments on
which the study was based. typing help(ucbadmissions) tells more about the data.
it tells us, among other things:

...
format:

a 3-dimensional array resulting from cross-tabulating 4526
observations on 3 variables.
are as follows:

the variables and their levels

no
1
2
3

name
admit
gender
dept

levels
admitted, rejected
male, female
a, b, c, d, e, f

...

the major question at issue is whether there is sex bias in admissions. to investigate
we ask whether men and women are admitted at roughly equal rates.

typing ucbadmissions gives the following numerical summary of the data.

, , dept = a

gender

admit

admitted
rejected

male female
89
19

512
313

, , dept = b

gender

admit

admitted
rejected

male female
17
8

353
207

, , dept = c

2.2. data description

117

gender

admit

admitted
rejected

male female
202
391

120
205

, , dept = d

gender

admit

admitted
rejected

male female
131
244

138
279

, , dept = e

gender

admit

admitted
rejected

male female
94
299

53
138

, , dept = f

gender

admit

admitted
rejected

male female
24
317

22
351

for each department, the twoway table of admission status versus sex is displayed.
such a display, called a crosstabulation, simply tabulates the number of entries in each
cell of a multiway table. it   s hard to tell from the crosstabulation whether there is a sex
bias and, if so, whether it is systemic or con   ned to just a few departments. let   s
continue by    nding the marginal (aggregated by department as opposed to conditional
given deparment) admissions rates for men and women.

> apply(ucbadmissions, c(1, 2), sum)

gender

admit

admitted 1198
rejected 1493

male female
557
1278

2.2. data description

118

the admission rate for men is 1198/(1198 + 1493) = 44.5% while the admission rate
for women is 557/(557 + 1493) = 30.4%, much lower. a mosaic plot, created with

mosaicplot(apply(ucbadmissions, c(1, 2), sum),

main = "student admissions at uc berkeley")

is a graphical way to display the discrepancy. (a beautiful example of a mosaic plot is
on the cover of chance magazine in spring, 2007.) the left column is for admitted
students; the heights of the rectangles show how many admitted students were male
and how many were female. the right column is for rejected students; the heights of
the rectangles show how many were male and female.
if sex and admission status
were independent, i.e., if there were no sex bias, then the proportion of men among
admitted students would equal the proportion of men among rejected students and
the heights of the left rectangles would equal the heights of the right rectangles. the
apparent difference in heights is a visual representation of the discrepancy in sex ratios
among admitted and rejected students. the same data can be viewed as discrepant
admission rates for men and women by transposing the matrix:

mosaicplot(t(apply(ucbadmissions, c(1, 2), sum)),

main = "student admissions at uc berkeley")

the existence of discrepant sex ratios for admitted and rejected students is equiv-
alent to the existence of discrepant admission rates for males and females and to
dependence of sex and admission rates. the lack of discrepant ratios is equivalent to
independence of sex and admission rates.

evidently uc berkeley admitted men and women at different rates. but graduate
admission decisions are not made by a central admissions of   ce; they are made by
the individual departments to which students apply. so our next step is to look at
admission rates for each department separately. we can look at the crosstabulation
on page 116 or make mosaic plots for each department separately (not shown here)
with

## mosaic plots for individual departments

for(i in 1:6)

mosaicplot(ucbadmissions[,,i],

xlab = "admit", ylab = "sex",
main = paste("department", letters[i]))

the plots show that in each department men and women are admitted at roughly
equal rates. the following snippet calculates and prints the rates. it con   rms the rough
equality except for department a which admitted women at a higher rate than men.

2.2. data description

119

figure 2.9: mosaic plot of ucbadmissions

student admissions at uc berkeleyadmitgenderadmittedrejectedmalefemale2.2. data description

120

figure 2.10: mosaic plot of ucbadmissions

student admissions at uc berkeleygenderadmitmalefemaleadmittedrejected2.2. data description

for ( i in 1:6 ) {

temp <- ucbadmissions[,,i]
m <- temp[1,1] / (temp[1,1]+temp[2,1]) # men   s admission rate
w <- temp[1,2] / (temp[1,2]+temp[2,2]) # women   s admission rate
print ( c ( m, w ) )

# print them

# for each department
# that department   s data

121

}
note that departments a and b which had high admission rates also had large num-
bers of male applicants while departments c, d, e and f which had low admission
rates had large numbers of female applicants. the generally accepted explanation
for the discrepant marginal admission rates is that men tended to apply to depart-
ments that were easy to get into while women tended to apply to departments that
were harder to get into. a more sinister explanation is that the university gave more
resources to departments with many male applicants, allowing them to admit a greater
proportion of their applicants. the data we   ve analyzed are consistent with both expla-
nations; the choice between them must be made on other grounds.

one lesson here for statisticians is the power of simple data displays and sum-
maries. another is the need to consider the unique aspects of each data set. the
explanation of different admissions rates for men and women could only be discov-
ered by someone familiar with how universities and graduate schools work, not by
following some general rules about how to do statistical analyses.

the next example is about the duration of eruptions and interval to the next eruption of
the old faithful geyser. it explores two kinds of relationships     the relationship between
duration and eruption and also the relationship of each variable with time.
example 2.5 (old faithful)
old faithful is a geyser in yellowstone national park and a great tourist attraction. as
denby and pregibon [1987] explain,    from august 1 to august 8, 1978, rangers and
naturalists at yellowstone national park recorded the duration of eruption and interval
to the next eruption (both in minutes) for eruptions of old faithful between 6 a.m.
and midnight. the intent of the study was to predict the time of the next eruption, to
be posted at the visitor   s center so that visitors to yellowstone can usefully budget
their time.    the r dataset faithful contains the data. in addition to the references
listed there, the data and analyses can also be found in weisberg [1985] and denby and
pregibon [1987]. the latter analysis emphasizes graphics, and we shall follow some of
their suggestions here.

we begin exploring the data with stripcharts and density estimates of durations
and intervals. these are shown in figure 2.11. the    gure suggests bimodal distri-
butions. for duration there seems to be one bunch of data around two minutes and

2.2. data description

122

another around four or    ve minutes. for interval, the modes are around 50 minutes
and 80 minutes. a plot of interval versus duration, figure 2.12, suggests that the bi-
modality is present in the joint distribution of the two variables. because the data were
collected over time, it might be useful to plot the data in the order of collection. that   s
figure 2.13. the horizontal scale in figure 2.13 is so compressed that it   s hard to see
what   s going on. figure 2.14 repeats figure 2.13 but divides the time interval into two
subintervals to make the plots easier to read. the subintervals overlap slightly. the
persistent up-and-down character of figure 2.14 shows that, for the most part, long
and short durations are interwoven, as are long and short intervals. (figure 2.14 is po-
tentially misleading. the data were collected over an eight day period. there are eight
separate sequences of eruptions with gaps in between. the faithful data set does
not tell us where the gaps are. denby and pregibon [1987] tell us where the gaps are
and use the eight separate days to    nd errors in data transcription.) just this simple
analysis, a collection of four    gures, has given us insight into the data that will be very
useful in predicting the time of the next eruption.

figures 2.11, 2.12, 2.13, and 2.14 were produced with the following r code.

data(faithful)
attach(faithful)

par ( mfcol=c(2,2) )
stripchart ( eruptions, method="jitter", pch=1, xlim=c(1,6),

xlab="duration (min)", main="(a)" )

plot ( density ( eruptions ), type="l", xlim=c(1,6),

xlab="duration (min)", main="(b)" )

stripchart ( waiting, method="jitter", pch=1, xlim=c(40,100),

xlab="waiting (min)", main="(c)" )

plot ( density ( waiting ), type="l", xlim=c(40,100),

xlab="waiting (min)", main="(d)" )

par ( mfrow=c(1,1) )
plot ( eruptions, waiting, xlab="duration of eruption",

ylab="time to next eruption" )

par ( mfrow=c(2,1) )
plot.ts ( eruptions, xlab="data number", ylab="duration",

main="a" )

2.2. data description

123

figure 2.11: old faithful data: duration of eruptions and waiting time between eruptions.
stripcharts: (a) and (c). density estimates: (b) and (d).

123456(a)duration (min)1234560.00.10.20.30.40.5(b)duration (min)density406080100(c)waiting (min)4060801000.000.010.020.03(d)waiting (min)density2.2. data description

124

figure 2.12: waiting time versus duration in the old faithful dataset

1.52.02.53.03.54.04.55.05060708090duration of eruptiontime to next eruption2.2. data description

125

figure 2.13: (a): duration and (b): waiting time plotted against data number in the old
faithful dataset

adata numberduration0501001502002501.52.53.54.5bdata numberwaiting time0501001502002505070902.2. data description

126

figure 2.14: (a1), (a2): duration and (b1), (b2): waiting time plotted against data number
in the old faithful dataset

a1data numberduration0501001501.53.5a2data numberduration0204060801001201402.04.0b1data numberwaiting time0501001505080b2data numberwaiting time02040608010012014050802.2. data description

127

plot.ts ( waiting, xlab="data number", ylab="waiting time",

main="b" )

par ( mfrow=c(4,1) )
plot.ts ( eruptions[1:150], xlab="data number",

ylab="duration", main="a1" )

plot.ts ( eruptions[130:272], xlab="data number",

ylab="duration", main="a2" )

plot.ts ( waiting[1:150], xlab="data number",

ylab="waiting time", main="b1")

plot.ts ( waiting[130:272], xlab="data number",

ylab="waiting time", main="b2")

figures 2.15 and 2.16 introduce coplots, a tool for visualizing the relationship among
three variables. they represent the ocean temperature data from example 1.5. in fig-
ure 2.15 there are six panels in which temperature is plotted against latitude. each panel is
made from the points in a restricted range of longitude. the upper panel, the one spanning
the top of the figure, shows the six di   erent ranges of longitude. for example, the    rst
longitude range runs from about -10 to about -17. points whose longitude is in the interval
(   17,   10) go into the upper right panel of scatterplots. these are the points very close
to the mouth of the mediterranean sea. looking at that panel we see that temperature
increases very steeply from south to north, until about 35   , at which point they start to
decrease steeply as we go further north. that   s because we   re crossing the mediterranean
tongue at a point very close to its source.
the other longitude ranges are about (   20,   13), (   25,   16), (   30,   20), (   34,   25)
and (   40,   28). they are used to create the scatterplot panels in the upper center, upper
left, lower right, lower center, and lower left, respectively. the general impression is

    temperatures decrease slightly as we move east to west,
    the angle in the scatterplot becomes slightly shallower as we move east to west, and
    there are some points that don   t    t the general pattern.

notice that the longitude ranges are overlapping and not of equal width. the ranges are
chosen by r to have a little bit of overlap and to put roughly equal numbers of points into
each range.

2.2. data description

128

figure 2.16 reverses the roles of latitude and longitude. the impression is that temper-
ature increases gradually from west to east. these two    gures give a fairly clear picture
of the mediterranean tongue.

figures 2.15 and 2.16 were produced by

coplot ( temp ~ lat | lon )
coplot ( temp ~ lon | lat )

example 2.6 shows one way to display the relationship between two sequences of

events.

example 2.6 (neurobiology)
to learn how the brain works, neurobiologists implant electrodes into animal brains.
these electrodes are    ne enough to record the    ring times of individual neurons. a
sequence of    ring times of a neuron is called a spike train. figure 2.17 shows the spike
train from one neuron in the gustatory cortex of a rat while the rat was in an experiment
on taste. this particular rat was in the experiment for a little over 80 minutes. those
minutes are marked on the y-axis. the x-axis is marked in seconds. each dot on the
plot shows a time at which the neuron    red. we can see, for example, that this neuron
   red about nine times in the    rst    ve seconds, then was silent for about the next ten
seconds. we can also see, for example, that this neuron undergoes some episodes of
very rapid    ring lasting up to about 10 seconds.

since this neuron is in the gustatory cortex     the part of the brain responsible for
taste     it is of interest to see how the neuron responds to various tastes. during the
experiment the rat was licking a tube that sometimes delivered a drop of water and
sometimes delivered a drop of water in which a chemical, or tastant, was dissolved.
the 55 short vertical lines on the plot show the times at which the rat received a drop
of 300 millimolar (.3 m) solution of nacl. we can examine the plot for relationships
between deliveries of nacl and activity of the neuron.

figure 2.17 was produced by

datadir <- "~/research/neuro/data/stapleton/"
spikes <- list (

2.2. data description

129

figure 2.15: temperature versus latitude for di   erent values of longitude

5101520304050203040502030405051015lattemp!40!35!30!25!20!15!10given : lon2.2. data description

130

figure 2.16: temperature versus longitude for di   erent values of latitude

51015!40!30!20!10!40!30!20!10!40!30!20!1051015lontemp20253035404550given : lat2.2. data description

131

figure 2.17: spike train from a neuron during a taste experiment. the dots show the times
at which the neuron    red. the solid lines show times at which the rat received a drop of a
.3 m solution of nacl.

01020304050600481318242934394450556065707681a spike trainsecondsminutes|||||||||||||||||||||||||||||||||||||||||||||||||||||||2.2. data description

132

sig002a = scan ( paste ( datadir, "sig002a.txt", sep="" ) ),
sig002b = scan ( paste ( datadir, "sig002b.txt", sep="" ) ),
sig002c = scan ( paste ( datadir, "sig002c.txt", sep="" ) ),
sig003a = scan ( paste ( datadir, "sig003a.txt", sep="" ) ),
sig003b = scan ( paste ( datadir, "sig003b.txt", sep="" ) ),
sig004a = scan ( paste ( datadir, "sig004a.txt", sep="" ) ),
sig008a = scan ( paste ( datadir, "sig008a.txt", sep="" ) ),
sig014a = scan ( paste ( datadir, "sig014a.txt", sep="" ) ),
sig014b = scan ( paste ( datadir, "sig014b.txt", sep="" ) ),
sig017a = scan ( paste ( datadir, "sig017a.txt", sep="" ) )

tastants <- list (

)

= scan ( paste ( datadir, "msg100.txt",
= scan ( paste ( datadir, "msg300.txt",

sep="" ) ),
msg100
msg300
sep="" ) ),
nacl100 = scan ( paste ( datadir, "nacl100.txt", sep="" ) ),
nacl300 = scan ( paste ( datadir, "nacl300.txt", sep="" ) ),
water

= scan ( paste ( datadir, "water.txt",

sep="" ) )

)

stripchart ( spikes[[8]] %% 60 ~ spikes[[8]] %/% 60, pch=".",

main="a spike train", xlab="seconds", ylab="minutes" )

points ( tastants$nacl300 %% 60, tastants$nacl300 %/% 60 + 1,

pch="|" )

    the line datadir <- ... stores the name of the directory in which i keep the

neuro data. when used in paste it identi   es individual    les.

    the command list() creates a list. the elements of a list can be anything. in this
case the list named spikes has ten elements whose names are sig002a, sig002b,
. . . , and sig017a. the list named tastants has    ve elements whose names are
msg100, msg300, nacl100, nacl300, and water. lists are useful for keeping
related objects together, esepecially when those objects aren   t all of the same type.
    each element of the list is the result of a scan(). scan() reads a    le and stores the
result in a vector. so spikes is a list of ten vectors. each vector contains the    ring
times, or a spike train, of one neuron. tastants is a list of    ve vectors. each vector
contains the times at which a particular tastant was delivered.

2.3. likelihood

133

    there are two ways to refer an element of a list. for example, spikes[[8]] refers
to the eighth element of spikes while tastants$nacl300 refers to the element
named nacl300.

    lists are useful for keeping related objects together, especially when those objects
are not the same type. in this example spikes$sig002a is a vector whose length is
the number of times neuron 002a    red, while the length of spikes$sig002b is the
number of times neuron 002b    red. since those lengths are not the same, the data
don   t    t neatly into a matrix, so we use a list instead.

2.3 likelihood

2.3.1 the likelihood function

it often happens that we observe data from a distribution that is not known precisely but
whose general form is known. for example, we may know that the data come from a
poisson distribution, x     poi(  ), but we don   t know the value of   . we may know that
x     bin(n,   ) but not know   . or we may know that the values of x are densely clustered
around some central value and sparser on both sides, so we decide to model x     n(  ,   ),
but we don   t know the values of    and   . in these cases there is a whole family of prob-
ability distributions indexed by either   ,   , or (  ,   ). we call   ,   , or (  ,   ) the unknown
parameter; the family of distributions is called a parametric family. often, the goal of
the statistical analysis is to learn about the value of the unknown parameter. of course,
learning which value of the parameter is the true one, or which values of the parameter are
plausible in light of the data, is the same as learning which member of the family is the
true one, or which members of the family are plausible in light of the data.

the di   erent values of the parameter, or the di   erent members of the family, represent
di   erent theories or hypotheses about nature. a sensible way to discriminate among the
theories is according to how well they explain the data. recall the seedlings data (exam-
ples 1.4, 1.6, 1.7 and 1.9) in which x was the number of new seedlings in a forest quadrat,
x     poi(  ), and di   erent values of    represent di   erent theories or hypotheses about the
arrival rate of new seedlings. when x turned out to be 3, how well a value of    explains
the data is measured by pr[x = 3|   ]. this id203, as a function of   , is called the
likelihood function and denoted (cid:96)(  ). it says how well each value of    explains the datum
x = 3. figure 1.6 (pg. 19) is a plot of the likelihood function.

2.3. likelihood

134

(cid:89)

in a typical problem we know the data come from a parametric family indexed by a
parameter   , i.e. x1, . . . , xn     i.i.d. f (x|   ), but we don   t know   . the joint density of all
the data is

f (x1, . . . , xn |   ) =

f (xi |   ).

(2.2)
equation 2.2, as a function of   , is the likelihood function. we sometimes write f (data|   )
instead of indicating each individual datum. to emphasize that we are thinking of a func-
tion of    we may also write the likelihood function as (cid:96)(  ) or (cid:96)(  | data).

the interpretation of the likelihood function is always in terms of ratios. if, for exam-
ple, (cid:96)(  1)/(cid:96)(  2) > 1, then   1 explains the data better than   2. if (cid:96)(  1)/(cid:96)(  2) = k, then   1
explains the data k times better than   2. to illustrate, suppose students in a statistics class
conduct a study to estimate the fraction of cars on campus drive that are red. student
a decides to observe the    rst 10 cars and record x, the number that are red. student a
observes

nr, r, nr, nr, nr, r, nr, nr, nr, r

(cid:16)10
(cid:17)
and records x = 3. she did a binomial experiment; her statistical model is x     bin(10,   );
  3(1       )7. it is plotted in figure 2.18. because only
her likelihood function is (cid:96)a(  ) =
ratios matter, the likelihood function can be rescaled by any arbitrary positive constant. in
figure 2.18 it has been rescaled so the maximum is 1. the interpretation of figure 2.18
is that values of    around        0.3 explain the data best, but that any value of    in the
interval from about 0.1 to about 0.6 explains the data not too much worse than the best.
i.e.,        0.3 explains the data only about 10 times better than        0.1 or        0.6, and a
factor of 10 is not really very much. on the other hand, values of    less than about 0.05 or
greater than about 0.7 explain the data much worse than        0.3.

3

figure 2.18 was produced by the following snippet.

theta <- seq ( 0, 1, by=.01 )
y <- dbinom ( 3, 10, theta )
y <- y / max(y)
plot ( theta, y, type="l", xlab=expression(theta),

# some values of theta
# calculate l(theta)
# rescale

ylab="likelihood function" )

    expression is r   s way of getting mathematical symbols and formulae into plot

labels. for more information, type help(plotmath).

2.3. likelihood

135

figure 2.18: likelihood function (cid:96)(  ) for the proportion    of red cars on campus drive

0.00.20.40.60.81.00.00.20.40.60.81.0!likelihood function2.3. likelihood

136

to continue the example, student b decides to observe cars until the third red one
drives by and record y, the total number of cars that drive by until the third red one.
students a and b went to campus drive at the same time and observed the same cars. b
records y = 10. for b the likelihood function is

(cid:96)b(  ) = p[y = 10|   ]

(cid:33)
(cid:32)9
= p[2 reds among    rst 9 cars]    p[10   th car is red]
(cid:33)
(cid:32)9

  2(1       )7      
  3(1       )7

2

=

=

2

(cid:16)9
(cid:17)

(cid:16)10
(cid:17)

(cid:96)b di   ers from (cid:96)a by the multiplicative constant
. but since multiplicative constants
don   t matter, a and b really have the same likelihood function and hence exactly the same
information about   . student b would also use figure 2.18 as the plot of her likelihood
function.

/

2

3

student c decides to observe every car for a period of 10 minutes and record z1, . . . ,
zk where k is the number of cars that drive by in 10 minutes and each zi is either 1 or 0
according to whether the i   th car is red. when c went to campus drive with a and b,
only 10 cars drove by in the    rst 10 minutes. therefore c recorded exactly the same data
as a and b. her likelihood function is

(cid:96)c(  ) = (1       )  (1       )(1       )(1       )  (1       )(1       )(1       )   =   3(1       )7

(cid:96)c is proportional to (cid:96)a and (cid:96)b and hence contains exactly the same information and looks
exactly like figure 2.18. so even though the students planned di   erent experiments they
ended up with the same data, and hence the same information about   .

the next example follows the seedling story and shows what happens to the likelihood

function as data accumulates.

example 2.7 (seedlings, cont.)
examples 1.4, 1.6, 1.7, and 1.9 reported data from a single quadrat on the number
of new seedlings to emerge in a given year.
in fact, ecologists collected data from
multiple quadrats over multiple years. in the    rst year there were 60 quadrats and a

2.3. likelihood

137

total of 40 seedlings so the likelihood function was
(cid:96)(  )     p(data|   )

=

60(cid:89)
= p(y1, . . . , y60 |   )
p(yi |   )
60(cid:89)
e       yi
yi!
    e   60    40

=

1

1

note that(cid:81) yi! is a multiplicative factor that does not depend on    and so is irrelevant
to (cid:96)(  ). note also that (cid:96)(  ) depends only on(cid:80) yi, not on the individual yi   s.
only need to know(cid:80) yi = 40; we don   t need to know the individual yi   s. (cid:96)(  ) is plotted

i.e., we

in figure 2.19. compare to figure 1.6 (pg. 19). figure 2.19 is much more peaked.
that   s because it re   ects much more information, 60 quadrats instead of 1. the extra
information pins down the value of    much more accurately.

figure 2.19: (cid:96)(  ) after(cid:80) yi = 40 in 60 quadrats.

0.00.51.01.52.00.00.40.8!likelihood2.3. likelihood

138

figure 2.19 was created with

lam <- seq ( 0, 2, length=50 )
lik <- dpois ( 40, 60*lam )
lik <- lik / max(lik)
plot ( lam, lik, xlab=expression(lambda),

ylab="likelihood", type="l" )

the next example is about a possible cancer cluster in california.

example 2.8 (slater school)
this example was reported in brodeur [1992]. see lavine [1999] for further analysis.

the slater school is an elementary school in fresno, california where teachers and
staff were    concerned about the presence of two high-voltage transmission lines that
ran past the school . . . .    their concern centered on the    high incidence of cancer at
slater. . . .    to address their concern, dr. raymond neutra of the california department
of health services    special epidemiological studies program conducted a statistical
analysis on the

   eight cases of invasive cancer, . . . , the total years of employment of
the hundred and forty-   ve teachers, teachers    aides, and staff members,
. . . , [and] the number of person-years in terms of national cancer institute
statistics showing the annual rate of invasive cancer in american women
between the ages of forty and forty-four     the age group encompassing
the average age of the teachers and staff at slater     [which] enabled him
to calculate that 4.2 cases of cancer could have been expected to occur
among the slater teachers and staff members . . . .   

for our purposes we can assume that x, the number of invasive cancer cases at
the slater school has the binomial distribution x     bin(145,   ). we observe x = 8.
the likelihood function

(cid:96)(  )       8(1       )137

(2.3)

is pictured in figure 2.20. from the figure it appears that values of    around .05 or .06,
explain the data better than values less than .05 or greater than .06, but that values of
   anywhere from about .02 or .025 up to about .11 explain the data reasonably well.

2.3. likelihood

139

figure 2.20: likelihood for slater school

figure 2.20 was produced by the following r code.

theta <- seq ( 0, .2, length=100 )
lik <- dbinom ( 8, 145, theta )
lik <- lik / max(lik)
plot ( theta, lik, xlab=expression(theta),

ylab="likelihood", type="l", yaxt="n" )

the    rst line of code creates a sequence of 100 values of    at which to compute
(cid:96)(  ), the second line does the computation, the third line rescales so the maximum
likelihood is 1, and the fourth line makes the plot.

examples 2.7 and 2.8 show how likelihood functions are used. they reveal which val-
ues of a parameter the data support (equivalently, which values of a parameter explain the
data well) and values they don   t support (which values explain the data poorly). there is
no hard line between support and non-support. rather, the plot of the likelihood functions
shows the smoothly varying levels of support for di   erent values of the parameter.

because likelihood ratios measure the strength of evidence for or against one hypoth-

0.000.050.100.150.20!likelihood2.3. likelihood

140

esis as opposed to another, it is important to ask how large a likelihood ratio needs to be
before it can be considered strong evidence. or, to put it another way, how strong is the
evidence in a likelihood ratio of 10, or 100, or 1000, or more? one way to answer the
question is to construct a reference experiment, one in which we have an intuitive under-
standing of the strength of evidence and can calculate the likelihood; then we can compare
the calculated likelihood to the known strength of evidence.

for our reference experiment imagine we have two coins. one is a fair coin, the
other is two-headed. we randomly choose a coin. then we conduct a sequence of coin
tosses to learn which coin was selected. suppose the tosses yield n consecutive heads.
p[n heads| fair] = 2   n; p[n heads| two-headed] = 1. so the likelihood ratio is 2n. that   s
our reference experiment. a likelihood ratio around 8 is like tossing three consecutive
heads; a likelihood ratio around 1000 is like tossing ten consecutive heads.
in example 2.8 argmax (cid:96)(  )     .055 and (cid:96)(.025)/(cid:96)(.055)     .13     1/8, so the evidence
against    = .025 as opposed to    = .055 is about as strong as the evidence against the
fair coin when three consecutive heads are tossed. the same can be said for the evidence
against    = .1. similarly, (cid:96)(.011)/(cid:96)(.055)     (cid:96)(.15)/(cid:96)(.055)     .001, so the evidence against
   = .011 or    = .15 is about as strong as 10 consecutive heads. a fair statement of the
evidence is that      s in the interval from about    = .025 to about    = .1 explain the data not
much worse than the maximum of        .055. but      s below about .01 or larger than about
.15 explain the data not nearly as well as      s around .055.

2.3.2 likelihoods from the central limit theorem
sometimes it is not possible to compute the likelihood function exactly, either because
it is too di   cult or because we don   t know what it is. but we can often compute an
approximate likelihood function using the central limit theorem. the following example
is the simplest case, but typi   es the more exotic cases we will see later on.

suppose we sample x1, x2, . . . , xn from a id203 density f . we don   t know what
f is; we don   t even know what parametric family it belongs to. assume that f has a mean
   and an sd    (i.e, assume that the mean and variance are    nite.) and that we would like
to learn about   . if (  ,   ) are the only unknown parameters then the likelihood function is

(cid:96)(  ,   ) = f (data|   ,   ) =(cid:81) f (xi |   ,   ). but we don   t know f and can   t calculate (cid:96)(  ,   ).

however, we can reason as follows.
1. most of the information in the data for learning about    is containined in   x. that is,
  x tells us a lot about    and the deviations   i     xi       x, i = 1, . . . , n tell us very little.

2. if n is large then the central limit theorem tells us

  x     n(  ,   /

   
n),

approximately

2.3. likelihood

3. we can estimate   2 from the data by

4. and therefore the function

(cid:96)m(  )     exp

    2 = s2 =

141

(2.4)

  2
i /n

(cid:33)2                     

         x
   
n
    /

(cid:88)
                        1
(cid:32)

2

is a good approximation to the likelihood function.

in the preceding reasoning we separated the data into two parts       x and {  i}; used {  i} to
estimate   ; and used   x to    nd a likelihood function for   . we cannot, in general, justify
such a separation mathematically. we justi   ed it if and when our main interest is in    and
we believe {  i} tell us little about   .

function 2.4 is called a marginal likelihood function. tsou and royall [1995] show
that marginal likelihoods are good approximations to true likelihoods and can be used to
make accurate id136s, at least in cases where the central limit theorem applies. we
shall use marginal likelihoods throughout this book.
example 2.9 (slater school, continued)
we redo the slater school example (example 2.8) to illustrate the marginal likelihood
and see how it compares to the exact likelihood. in that example the xi   s were 1   s and
0   s indicating which teachers got cancer. there were 8 1   s out of 145 teachers, so
  x = 8/145     .055. also,     2 = (8(137/145)2 + 137(8/145)2))/145     .052, so          .23.
we get

(cid:32)

                     1

2

       .055
145
.23/

   

(cid:33)2                  

(cid:96)m(  )     exp

(2.5)

figure 2.21 shows the marginal and exact likelihood functions. the marginal likelihood
is a reasonably good approximation to the exact likelihood.

figure 2.21 was produced by the following snippet.

theta <- seq ( 0, .2, length=100 )
lik <- dbeta ( theta, 9, 138 )
lik.mar <- dnorm ( theta, 8/145,

sqrt((8*(137/145)^2 + 137*(8/145)^2)/145)/sqrt(145) )

lik <- lik/max(lik)

2.3. likelihood

142

figure 2.21: marginal and exact likelihoods for slater school

lik.mar <- lik.mar/max(lik.mar)
matplot ( theta, cbind(lik,lik.mar), xlab=expression(mu),

ylab="likelihood", type="l", lty=c(2,1), col=1 )

legend ( .1, 1, c("marginal", "exact"), lty=c(1,2) )

example 2.10 (ceo salary)
how much are corporate ceo   s paid? forbes magazine collected data in 1993 that
can begin to answer this question. the data are available on-line at dasl, the data
and story library, a collection of data sets for free use by statistics students. dasl
says

   forbes magazine published data on the best small    rms in 1993. these
were    rms with annual sales of more than    ve and less than $350 million.
firms were ranked by    ve-year average return on investment. the data
extracted are the age and annual salary of the chief executive of   cer for
the    rst 60 ranked    rms.
in question are the distribution patterns for the
ages and the salaries.   

0.000.050.100.150.200.00.40.8  likelihoodmarginalexact2.3. likelihood

143

you can download the data from
http://lib.stat.cmu.edu/dasl/datafiles/ceodat.html. the    rst few lines look
like this:

age sal

53
43
33

145
621
262

in this example we treat the forbes data as a random sample of size n = 60 of ceo
salaries for small    rms. we   re interested in the average salary   . our approach is to
calculate the marginal likelihood function (cid:96)m(  ).

figure 2.22(a) shows a stripchart of the data. evidently, most salaries are in the
range of $200 to $400 thousand dollars, but with a long right-hand tail. because the
right-hand tail is so much larger than the left, the data are not even approximately
normally distributed. but the central limit theorem tells us that   x is approximately
normally distributed, so the method of marginal likelihood applies. figure 2.22(b)
displays the marginal likelihood function (cid:96)m(  ).

figure 2.22 was produced by the following snippet.

ceo <- read.table ("data/ceo_salaries/data",header=t)

par ( mfrow=c(2,1) )
stripchart ( ceo$sal, "jitter", pch=1, main="(a)",

xlab="salary (thousands of dollars)" )

m <- mean ( ceo$sal, na.rm=t )
s <- sqrt ( var(ceo$sal,na.rm=t) / (length(ceo$sal)-1) )
x <- seq ( 340, 470, length=40 )
y <- dnorm ( x, m, s )
y <- y / max(y)
plot ( x, y, type="l", xlab="mean salary",

ylab="likelihood", main="(b)" )

    in s <- sqrt ... the (length(ceo$sal)-1) is there to account for one miss-

ing data point.

2.3. likelihood

144

figure 2.22: marginal likelihood for mean ceo salary

02004006008001000(a)salary (thousands of dollars)3403603804004204404600.20.61.0(b)mean salarylikelihood2.3. likelihood

145

    y <- y / max(y) doesn   t accomplish much and could be omitted.
    the data strongly support the conclusion that the mean salary is between about
$350 and $450 thousand dollars. that   s much smaller than the range of salaries
on display in figure 2.22(a). why?

    is id136 about the mean salary useful in this data set? if not, what would be

better?

2.3.3 likelihoods for several parameters
what if there are two unknown parameters? then the likelihood is a function of two
variables. for example, if the xi   s are a sample from n(  ,   ) then the likelihood is a
function of (  ,   ). the next example illustrates the point.

example 2.11 (face, continued)
this example continues example 1.12 about a face experiment in duke forest.
there were six rings; three were treated with excess co2. the dominant canopy
tree in the face experiment is pinus taeda, or loblolly pine. figure 2.23a is a his-
togram of the    nal basal area of each loblolly pine in 1998 divided by its initial basal
area in 1996. it shows that the trees in ring 1 grew an average of about 30% but with
variability that ranged from close to 0% on the low end to around 50% or 60% on the
high end. because the data are clustered around a central value and fall off roughly
equally on both sides they can be well approximated by a normal distribution. but with
what mean and sd? what values of (  ,   ) might reasonably produce the histogram in
figure 2.23a?

the likelihood function is

(cid:96)(  ,   ) =

f (xi |   ,   )

n(cid:89)
n(cid:89)
      

=

1

1

2  2 (xi     )2

1   
2    
   ne    1

e    1
(cid:80)n
1(xi     )2

2  2

figure 2.23b is a contour plot of the likelihood function. the dot in the center, where
(  ,   )     (1.27, .098), is where the likelihood function is highest. that is the value of

2.3. likelihood

146

(  ,   ) that best explains the data. the next contour line is drawn where the likelihood
is about 1/4 of its maximum; then the next is at 1/16 the maximum, the next at 1/64,
and the last at 1/256 of the maximum. they show values of (  ,   ) that explain the data
less and less well.

ecologists are primarily interested in    because they want to compare the      s from
different rings to see whether the excess co2 has affected the average growth rate.
(they   re also interested in the      s, but that   s a secondary concern.) but (cid:96) is a function
of both    and   , so it   s not immediately obvious that the data tell us anything about
   by itself. to investigate further, figure 2.23c shows slices through the likelihood
function at    = .09, .10, and.11, the locations of the dashed lines in figure 2.23b. the
three curves are almost identical. therefore, the relative support for different values
of    does not depend very much on the value of   , and therefore we are justi   ed in
interpreting any of the curves in figure 2.23c as a    likelihood function    for    alone,
showing how well different values of    explain the data. in this case, it looks as though
values of    in the interval (1.25, 1.28) explain the data much better than values outside
that interval.

figure 2.23 was produced with

par ( mfrow=c(2,2) )
x <- ba98$ba.final / ba96$ba.init
x <- x[!is.na(x)]
hist ( x, prob=t, xlab="basal area ratio",

# a 2 by 2 array of plots

ylab="", main="(a)" )

mu <- seq ( 1.2, 1.35, length=50 )
sd <- seq ( .08, .12, length=50 )
lik <- matrix ( na, 50, 50 )
for ( i in 1:50 )
for ( j in 1:50 )

lik[i,j] = prod ( dnorm ( x, mu[i], sd[j] ) )

lik <- lik / max(lik)
contour ( mu, sd, lik, levels=4^(-4:0), drawlabels=f,

xlab=expression(mu), ylab=expression(sigma),
main="(b)" )

abline ( h = c (.09, .1, .11 ), lty=2 )
lik.09 <- lik[,13] / max(lik[,13])
lik.10 <- lik[,26] / max(lik[,26])
lik.11 <- lik[,38] / max(lik[,38])

2.3. likelihood

147

face experiment, ring 1.

figure 2.23:
(1996 initial basal area); (b): contours of the likelihood function.
likelihood function.

(a):

(1998    nal basal area)   
(c): slices of the

(a)basal area ratio1.01.21.41.6012345(b)  !1.201.300.080.090.100.110.121.201.300.00.20.40.60.81.0(c)  likelihood2.3. likelihood

148

matplot ( mu, cbind ( lik.09, lik.10, lik.11 ), type="l",

col=1, main="(c)",
xlab=expression(mu), ylab="likelihood" )

    the line x <- x[!is.na(x)] is there because some data is missing. this line
selects only those data that are not missing and keeps them in x. when x is a
vector, is.na(x) is another vector, the same length as x, with true or false,
indicating where x is missing. the ! is    not   , or negation, so x[!is.na(x)]
selects only those values that are not missing.

    the lines mu <- ... and sd <- ... create a grid of    and    values at which

to evaluate the likelihood.

    the line lik <- matrix ( na, 50, 50 ) creates a matrix for storing the val-
ues of (cid:96)(  ,   ) on the grid. the next three lines are a loop to calculate the values
and put them in the matrix.

    the line lik <- lik / max(lik) rescales all the values in the matrix so the
maximum value is 1. rescaling makes it easier to set the levels in the next
line.

    contour produces a contour plot. contour(mu,sd,lik,...) speci   es the
values on the x-axis, the values on the y-axis, and a matrix of values on the
grid. the levels argument says at what levels to draw the contour lines, while
drawlabels=f says not to print numbers on those lines. (make your own con-
tour plot without using drawlabels to see what happens.)

    abline is used for adding lines to plots. you can say either abline(h=...) or

abline(v=...) to get horizontal and vertical lines, or
abline(intercept,slope) to get arbitrary lines.

    lik.09, lik.10, and lik.11 pick out three columns from the lik matrix. they
are the three columns for the values of    closest to    = .09, .10, .11. each
column is rescaled so its maximum is 1.

example 2.12 (quiz scores, continued)
this example continues example 2.3 about scores in statistics 103. figure 2.7 shows

2.3. likelihood

149

that most students scored between about 5 and 10, while 4 students were well below
the rest of the class.
in fact, those students did not show up for every quiz so their
averages were quite low. but the remaining students    scores were clustered together
in a way that can be adequately described by a normal distribution. what do the data
say about (  ,   )?

figure 2.24 shows the likelihood function. the data support values of    from about
7.0 to about 7.6 and values of    from about 0.8 to about 1.2. a good description of the
data is that most of it follows a normal distribution with (  ,   ) in the indicated intervals,
except for 4 students who had low scores not    tting the general pattern. do you think
the instructor should use this analysis to assign letter grades and, if so, how?

figure 2.24: likelihood function for quiz scores

  !6.87.07.27.47.60.70.80.91.01.11.21.32.3. likelihood

150

figure 2.24 was produced by

x <- sort(scores.ave)[5:58]
mu <- seq ( 6.8, 7.7, length=60 )
sig <- seq ( .7, 1.3, length=60 )
lik <- matrix ( na, 60, 60 )
for ( i in 1:60 )
for ( j in 1:60 )

lik[i,j] <- prod ( dnorm ( x, mu[i], sig[j] ) )

lik <- lik/max(lik)
contour ( mu, sig, lik, xlab=expression(mu),

ylab=expression(sigma) )

examples 2.11 and 2.12 have likelihood contours that are roughly circular, indicating
that the likelihood function for one parameter does not depend very strongly on the value
of the other parameter, and so we can get a fairly clear picture of what the data say about
one parameter in isolation. but in other data sets two parameters may be inextricably
entwined. example 2.13 illustrates the problem.

example 2.13 (seedlings, continued)
examples 1.4, 1.6, and 1.7 introduced an observational study by ecologists to learn
about tree seedling emergence and survival. some species, red maple or acer
rubrum for example, get a mark called a bud scale scar when they lose their leaves
over winter. by looking for bud scale scars ecologists can usually tell whether an acer
rubrum seedling is new (in its    rst summer), or old (already survived through at least
one winter). when they make their annual observations they record the numbers of
new and old acer rubrum seedlings in each quadrat. every old seedling in year t
must have been either a new or an old seedling in year t     1.

table 2.1 shows the 1992   1993 data for quadrat 6. clearly the data are incon-
sistent; where did the old seedling come from in 1993? when confronted with this
paradox the ecologists explained that some new seedlings emerge from the ground
after the date of the fall census but before the winter. thus they are not counted in the
census their    rst year, but develop a bud scale scar and are counted as old seedlings
in their second year. one such seedling must have emerged in 1992, accounting for
the old seedling in 1993.

how shall we model the data? let nt

i be the true number of new seedlings in

2.3. likelihood

151

year no. of new seedlings no. of old seedlings
1992
1993

0
0

0
1

table 2.1: numbers of new and old seedlings in quadrat 6 in 1992 and 1993.

year i, i.e., including those that emerge after the census; and let no
i be the observed
number of seedlings in year i, i.e., those that are counted in the census. as in exam-
i     poi(  ). furthermore, each seedling has some chance    f of
ple 1.4 we model nt
being found in the census. (nominally    f
is the proportion of seedlings that emerge
before the census, but in fact it may also include a component accounting for the fail-
ure of ecologists to    nd seedlings that have already emerged.) treating the seedlings
i ,    f ). the
as independent and all having the same    f
data are the no
i    s are not observed. what do the data tell us about the two
parameters (  ,    f )?

leads to the model no

i     bin(nt

i    s; the nt

ignore the old seedlings for now and just look at 1992 data no

= 0. dropping

1992

the subscript 1992, the likelihood function is
(cid:96)(  ,    f ) = p[no = 0|   ,    f ]

n=0

   (cid:88)
   (cid:88)
   (cid:88)
   (cid:88)

n=0

n=0

=

=

=

=

n=0

= e        f

p[no = 0, nt = n|   ,    f ]

p[nt = n|   ] p[no = 0| nt = n,    f ]
e       n
n!

(1        f )n

e     (1      f )(cid:16)

(cid:17)n
  (1        f )
e     f n!

(2.6)

figure 2.25a plots log10 (cid:96)(  ,    f ). (we plotted log10 (cid:96) instead of (cid:96) for variety.) the
contour lines are not circular. to see what that means, focus on the curve log10 (cid:96)(  ,    f ) =
   1 which runs from about (  ,    f ) = (2.5, 1) to about (  ,    f ) = (6, .4). points (  ,    f ) along
that curve explain the datum no = 0 about 1/10 as well as the m.l.e.(the m.l.e. is any
pair where either    = 0 or    f = 0.) points below and to the left of that curve explain the
datum better than 1/10 of the maximum.

2.3. likelihood

152

the main parameter of ecological interest is   , the rate at which new seedlings
tend to arrive. the    gure shows that values of    as large as 6 can have reasonably
large likelihoods and hence explain the data reasonably well, at least if we believe
that    f might be as small as .4. to investigate further, figure 2.25b is similar to 2.25a
but includes values of    as large as 1000.
it shows that even values of    as large
as 1000 can have reasonably large likelihoods if they   re accompanied by suf   ciently
small values of    f . in fact, arbitrarily large values of    coupled with suf   ciently small
values of    f can have arbitrarily large likelihoods. so from the data alone, there is no
way to rule out extremely large values of   . of course extremely large values of    don   t
make ecological sense, both in their own right and because extremely small values of
   f are also not sensible. scienti   c background information of this type is incorporated
into statistical analysis often through bayesian id136 (section 2.5). but the point
here is that    and    f are linked, and the data alone does not tell us much about either
parameter individually.

figure 2.25(a) was produced with the following snippet.

lam <- seq ( 0, 6, by=.1 )
th <- seq ( 0, 1, by=.02 )
lik <- matrix ( na, length(lam), length(th) )
for ( i in seq(along=lam) )
for ( j in seq(along=th) )

lik[i,j] <- exp ( -lam[i]*th[j] )

contour ( lam, th, log10(lik),

levels=c(0,-.2,-.6,-1,-1.5,-2),
xlab=expression(lambda),
ylab=expression(theta[f]), main="(a)" )

    log10 computes the base 10 logarithm.

figure 2.25(b) was produced with the following snippet.

lam2 <- seq ( 0, 1000, by=1 )
lik2 <- matrix ( na, length(lam2), length(th) )
for ( i in seq(along=lam2) )
for ( j in seq(along=th) )

lik2[i,j] <- exp ( -lam2[i]*th[j] )

2.3. likelihood

153

figure 2.25: log of the likelihood function for (  ,    f ) in example 2.13

(a)!"f01234560.00.40.8(b)!"f020040060080010000.00.40.82.4. estimation

154

contour ( lam2, th, log10(lik2), levels=c(0,-1,-2,-3),

xlab=expression(lambda),
ylab=expression(theta[f]), main="(b)" )

we have now seen two examples (2.11 and 2.12) in which likelihood contours are
roughly circular and one (2.13) in which they   re not. by far the most common and impor-
tant case is similar to example 2.11 because it applies when the central limit theorem
applies. that is, there are many instances in which we are trying to make an id136
about a parameter    and can invoke the central limit theorem saying that for some statis-
tic t, t     n(  ,   t) approximately and where we can estimate   t. in these cases we can,
if necessary, ignore any other parameters in the problem and make an id136 about   
based on (cid:96)m(  ).

2.4 estimation

sometimes the purpose of a statistical analysis is to compute a single best guess at a
parameter   . an informed guess at the value of    is called an estimate and denoted     .
one way to estimate    is to    nd          argmax (cid:96)(  ), the value of    for which (cid:96)(  ) is largest
and hence the value of    that best explains the data. that   s the subject of section 2.4.1.

2.4.1 the maximum likelihood estimate
in many statistics problems there is a unique value of    that maximizes (cid:96)(  ). this value is
called the maximum likelihood estimate, or m.l.e. of    and denoted     .

         argmax   p(y|   ) = argmax   (cid:96)(  ).

for instance, in example 2.8 and figure 2.20    was the rate of cancer occurence and
we calculated (cid:96)(  ) based on y = 8 cancers in 145 people. figure 2.20 suggests that the
m.l.e. is about          .05.
zero. in example 2.8 the likelihood was (cid:96)(  )       8(1       )137. the derivative is

when (cid:96)(  ) is di   erentiable, the m.l.e. can be found by di   erentiating and equating to

d(cid:96)(  )
d  

    8  7(1       )137     137  8(1       )136
=   7(1       )136 [8(1       )     137  ]

(2.7)

2.4. estimation

equating to 0 yields

0 = 8(1       )     137  

145   = 8

   = 8/145     .055

155

so          .055 is the m.l.e. of course if the mode is    at, there are multiple modes, the
maximum occurs at an endpoint, or (cid:96) is not di   erentiable, then more care is needed.
equation 2.7 shows more generally the m.l.e. for binomial data. simply replace 137
with n     y and 8 with y to get      = y/n. in the exercises you will be asked to    nd the m.l.e.
for data from other types of distributions.

there is a trick that is often useful for    nding m.l.e.   s. because log is a monotone func-
tion, argmax (cid:96)(  ) = argmax log((cid:96)(  )), so the m.l.e. can be found by maximizing log (cid:96). for

i.i.d. data, (cid:96)(  ) =(cid:81) p(yi |   ), log (cid:96)(  ) =(cid:80) log p(xi |   ), and it is often easier to di   erentiate

the sum than the product. for the slater example the math would look like this:

log (cid:96)(  ) = 8 log    + 137 log(1       )

d log (cid:96)(  )

d  

=

8
  

    137
1       
8
137
1       
  
137   = 8     8  

=

equation 2.7 shows that if y1, . . . , yn     bern(  ) then the m.l.e. of    is

8
145 .

yi = sample mean

   =

     = n   1(cid:88)
     = n   1(cid:88)
     = n   1(cid:88)
     = n   1(cid:88)

the exercises ask you to show the following.

1. if y1, . . . , yn     n(  ,   ) then the m.l.e. of    is

2. if y1, . . . , yn     poi(  ) then the m.l.e. of    is

3. if y1, . . . , yn     exp(  ) then the m.l.e. of    is

yi = sample mean

yi = sample mean

yi = sample mean

2.4. estimation

156

2.4.2 accuracy of estimation
finding the m.l.e. is not enough. statisticians want to quantify the accuracy of      as an
estimate of   . in other words, we want to know what other values of   , in addition to     ,
have reasonably high likelihood (provide a reasonably good explanation of the data). and
what does    reasonable    mean? section 2.4.2 addresses this question.

as we saw from the reference experiment in section 2.3, the evidence is not very strong
against any value of    such that (cid:96)(  ) > (cid:96)(    )/10. so when considering estimation accuracy
it is useful to think about sets such as

ls stands for likelihood set. more generally, for any        (0, 1) we de   ne the likelihood
set of level    to be

(cid:40)
   : (cid:96)(  )
(cid:96)(    )
(cid:40)

   : (cid:96)(  )
(cid:96)(    )

(cid:41)
    .1
(cid:41)
      

ls.1    

ls      

ls   is the set of      s that explain the data reasonbly well, and therefore the set of      s best
supported by the data, where the quanti   cation of    reasonable    and    best    are determined
by   . the notion is only approximate and meant as a heuristic reference; in reality there
is no strict cuto    between reasonable and unreasonable values of   . also, there is no
uniquely best value of   . we frequently use        .1 for convenience and custom.
in many problems the likelihood function (cid:96)(  ) is continuous and unimodal, i.e. strictly
decreasing away from     , and goes to 0 as             , as in figures 2.19 and 2.20. in these
cases,                 (cid:96)(  )     (cid:96)(    ). so values of    close to      explain the data almost as well as and
are about as plausible as      and ls   is an interval

ls   = [  l,   u]

where   l and   u are the lower and upper endpoints, respectively, of the interval.

in example 2.9 (slater school)      = 8/145, so we can    nd (cid:96)(    ) on a calculator, or by

using r   s built-in function

dbinom ( 8, 145, 8/145 )

which yields about .144. then   l and   u can be found by trial and error. since dbinom(8,145,.023)    
.013 and dbinom(8,145,.105)     .015, we conclude that ls.1     [.023, .105] is a rough
likelihood interval for   . review figure 2.20 to see whether this interval makes sense.

the data in example 2.9 could pin down    to an interval of width about .08. in general,
an experiment will pin down    to an extent determined by the amount of information in the

2.4. estimation

157

data. as data accumulates so does information and the ability to determine   . typically the
likelihood function becomes increasingly more peaked as n        , leading to increasingly
accurate id136 for   . we saw that in figures 1.6 and 2.19. example 2.14 illustrates the
point further.
example 2.14 (craps, continued)
example 1.10 introduced a computer simulation to learn the id203    of winning
the game of craps.
in this example we use that simulation to illustrate the effect of
gathering ever increasing amounts of data. we   ll start by running the simulation just a
few times, and examining the likelihood function (cid:96)(  ). then we   ll add more and more
simulations and see what happens to (cid:96)(  ).

the result is in figure 2.26. the    attest curve is for 3 simulations, and the curves
become increasingly peaked for 9, 27, and 81 simulations. after only 3 simulations
ls.1     [.15, .95] is quite wide, re   ecting the small amount of information. but after
9 simulations (cid:96)(  ) has sharpened so that ls.1     [.05, .55] is much smaller. after 27
simulations ls.1 has shrunk further to about [.25, .7], and after 81 it has shrunk even
further to about [.38, .61].

figure 2.26 was produced with the following snippet.

n.sim <- c ( 3, 9, 27, 81 )
th <- seq ( 0, 1, length=200 )
lik <- matrix ( na, 200, length(n.sim) )

for ( i in seq(along=n.sim) ) {

wins <- 0
for ( j in 1:n.sim[i] )

wins <- wins + sim.craps()

lik[,i] <- dbinom ( wins, n.sim[i], th )
lik[,i] <- lik[,i] / max(lik[,i])

}

matplot ( th, lik, type="l", col=1, lty=1:4,

xlab=expression(theta), ylab="likelihood" )

in figure 2.26 the likelihood function looks increasingly like a normal density as the
number of simulations increases. that is no accident; it is the typical behavior in many

2.4. estimation

158

figure 2.26: likelihood function for the id203    of winning a game of craps. the
four curves are for 3, 9, 27, and 81 simulations.

0.00.20.40.60.81.00.00.20.40.60.81.0!likelihood2.4. estimation

159

statistics problems. section 2.4.3 explains the reason.

2.4.3 the sampling distribution of an estimator
the estimator      is a function of the data y1, . . . , yn. if we repeat the experiment and get
new data we also get a new     . so      is a random variable and has a distribution called
the sampling distribution of      and denoted f     . we studied f      in example 1.11 where we
used simulation to estimate the id203    of winning a game of craps. for each sample
size of n = 50, 200, 1000 we did 1000 simulations. each simulation yielded a di   erent     .
those 1000        s are a random sample of size 1000 from f     . figure 1.19 showed boxplots
of the simulations.

now we examine the sampling distribution of      in more detail. there are at least two
reasons for doing so. first, f      is another way, in addition to likelihood sets, of assessing
the accuracy of      as an estimator of   . if f      is tightly concentrated around    then      is
highly accurate. conversely, if f      is highly dispersed, or not centered around   , then      is
an inaccurate estimator. second, we may want to compare two possible estimators. i.e.,
if there are two potential estimators     1 and     2, we can compare f     1 and f     2 and use the
estimator whose sampling distribution is most tightly concentrated around   .

mate        e[y]. we consider two potential estimators, the sample mean     1 = (1/n)(cid:80) yi and

to illustrate, let   s suppose we sample y1, . . . , yn from distribution fy, and want to esti-

the sample median     2. to see which estimator is better we do a simulation, as shown in the
following snippet. the simulation is done at four di   erent sample sizes, n = 4, 16, 64, 256,
to see whether sample size matters. here we   ll let fy be n(0, 1). but the choice between
    1 and     2 might depend on what fy is, so a more thorough investigation would consider
other choices of fy.

we do 1000 simulations at each sample size. figure 2.27 shows the result. the    gure
suggests that the sampling distributions of both     1 and     2 are centered at the true value of
  . the distribution of     1 is slightly less variable than that of     2, but not enough to make
much practical di   erence.

figure 2.27 was produced by the following snippet.

sampsize <- c ( 4, 16, 64, 256 )
n.sim <- 1000

par ( mfrow=c(2,2) )
for ( i in seq(along=sampsize) ) {

y <- matrix ( rnorm ( n.sim*sampsize[i], 0, 1 ),

2.4. estimation

160

figure 2.27: sampling distribution of     1, the sample mean and     2, the sample median.
four di   erent sample sizes. (a): n=4; (b): n=16; (c): n=64; (d): n=256

meanmedian!2!101(a)meanmedian!1.00.00.5(b)meanmedian!0.40.00.4(c)meanmedian!0.20.00.2(d)2.4. estimation

161

nrow=sampsize[i], ncol=n.sim )

that.1 <- apply ( y, 2, mean )
that.2 <- apply ( y, 2, median )
boxplot ( that.1, that.2, names=c("mean","median"),

main=paste("(",letters[i],")",sep="") )

abline ( h=0, lty=2 )

}

for us, comparing     1 to     2 is only a secondary point of the simulation. the main point

is four-fold.

1. an estimator      is a random variable and has a distribution.

2. f      is a guide to estimation accuracy.

3. statisticians study conditions under which one estimator is better than another.

4. simulation is useful.

when the m.l.e. is the sample mean, as it is when fy is a bernoulli, normal, poisson
or exponential distribution, the central limit theorem tells us that in large samples,      is
approximately normally distributed. therefore, in these cases, its distribution can be well
described by its mean and sd. approximately,

where

         n(      ,       ).

      

      

=   y
  y   
n

=

(2.8)

both of which can be easily estimated from the sample. so we can use the sample to
compute a good approximation to the sampling distribution of the m.l.e.

to see that more clearly, let   s make 1000 simulations of the m.l.e. in n = 5, 10, 25, 100
bernoulli trials with p = .1. we   ll make histograms of those simulations and overlay
them with kernel density estimates and normal densities. the parameters of the normal
densities will be estimated from the simulations. results are shown in figure 2.28.

2.4. estimation

162

figure 2.28: histograms of     , the sample mean, for samples from bin(n, .1). dashed line:
kernel density estimate. dotted line: normal approximation. (a): n=5; (b): n=10; (c):
n=25; (d): n=100

(a)!^density0.00.20.40.60246812(b)!^density0.00.20.40.60246812(c)!^density0.00.20.40.60246812(d)!^density0.00.20.40.602468122.4. estimation

163

figure 2.28 was produced by the following snippet.

sampsize <- c ( 5, 10, 25, 100 )
n.sim <- 1000
p.true <- .1
par(mfrow=c(2,2))
for ( i in seq(along=sampsize) ) {

# n.sim bernoulli samples of sampsize[i]
y <- matrix ( rbinom ( n.sim*sampsize[i], 1, p.true ),

nrow=n.sim, ncol=sampsize[i] )

# for each sample, compute the mean
t.hat <- apply ( y, 1, mean )

# histogram of theta hat
hist ( t.hat, prob=t,

xlim=c(0,.6),
ylim=c(0,14), ylab="density",
main=paste ( "(", letters[i], ")", sep="" )

xlab=expression(hat(theta)),

)

# kernel density estimate of theta hat
lines ( density ( t.hat ), lty=2 )

# normal approximation to density of theta hat,
# calculated from the first sample
m <- mean(y[1,])
sd <- sd(y[1,])/sqrt(sampsize[i])
t <- seq ( min(t.hat), max(t.hat), length=40 )
lines ( t, dnorm ( t, m, sd ), lty=3 )

}

notice that the normal approximation is not very good for small n. that   s because the
underlying distribution fy is highly skewed, nothing at all like a normal distribution. in
fact, r was unable to compute the normal approximation for n = 5. but for large n, the
normal approximation is quite good. that   s the central limit theorem kicking in. for

2.5. bayesian id136

164

any n, we can use the sample to estimate the parameters in equation 2.8. for small n, those
parameters don   t help us much. but for n = 256, they tell us a lot about the accuracy of
    , and the normal approximation computed from the    rst sample is a good match to the
sampling distribution of     .
the sd of an estimator is given a special name. it   s called the standard error or se
of the estimator because it measures the typical size of estimation errors |           |. when
         n(      ,       ), approximately, then        is the se. for any normal distribution, about 95%
of the mass is within   2 standard deviations of the mean. therefore,

pr[|           |     2      ]     .95

in other words, estimates are accurate to within about two standard errors about 95% of
the time, at least when normal theory applies.

we have now seen two ways of assessing estimation accuracy     through (cid:96)(  ) and
through f     . often these two apparently di   erent approaches almost coincide. that hap-
pens under the following conditions.
1. when          n(  ,       ), and              /

   
n, an approximation often justi   ed by the central
limit theorem, then we can estimate    to within about   2    , around 95% of the
time. so the interval (         2      ,      + 2      ) is a reasonable estimation interval.

2. when most of the information in the data come from the sample mean, and in other

(cid:17)2(cid:19)
(cid:16)         y
cases when a marginal likelihood argument applies, then (cid:96)(  )     exp
(equation 2.4) and ls.1     (         2      ,      + 2      ). so the two intervals are about the
same.

(cid:18)    1

    /

   

2

n

2.5 bayesian id136

the essence of bayesian id136 is using id203 distributions to describe our state
of knowledge of some parameter of interest,   . we construct p(  ), either a pmf or pdf, to
re   ect our knowledge by making p(  ) large for those values of    that seem most likely, and
p(  ) small for those values of    that seem least likely, according to our state of knowledge.
although p(  ) is a id203 distribution, it doesn   t necessarily mean that    is a random
variable. rather, p(  ) encodes our state of knowledge. and di   erent people can have dif-
ferent states of knowledge, hence di   erent id203 distributions. for example, suppose
you toss a fair coin, look at it, but don   t show it to me. the outcome is not random; it has
already occured and you know what it is. but for me, each outcome is equally likely. i
would encode my state of knowledge by assigning p(h) = p(t) = 1/2. you would encode

2.5. bayesian id136

165

your state of knowledge by assigning either p(h) = 1 or p(t) = 1 according to whether
the coin was heads or tails. after i see the coin i would update my probabilities to be the
same as yours.

for another common example, consider horse racing. when a bettor places a bet at 10
to 1, she is paying $1 for a ticket that will pay $10 if the horse wins. her expected payo   
for that bet is    $1 + p[horse wins]    $10. for that to be a good deal she must think that
p[horse wins]     .1. of course other bettors may disagree.

here are some other examples in which id203 distributions must be assessed.
    in deciding whether to fund head start, legislators must assess whether the program

is likely to be bene   cial and, if so, the degree of bene   t.

    when investing in the stock market, investors must assess the future id203

distributions of stocks they may buy.

    when making business decisions,    rms must assess the future id203 distribu-

tions of outcomes.

    weather forecasters assess the id203 of rain.
    public policy makers must assess whether the observed increase in average global

temperature is anthropogenic and, if so, to what extent.

    doctors and patients must assess and compare the distribution of outcomes under

several alternative treatments.

    at the slater school, example 2.8, teachers and administrators must assess their
id203 distribution for   , the chance that a randomly selected teacher develops
invasive cancer.

information of many types goes into assessing id203 distributions. but it is often
useful to divide the information into two types: general background knowledge and infor-
mation speci   c to the situation at hand. how do those two types of information combine to
form an overall distribution for   ? often we begin by summarizing just the background in-
formation as p(  ), the marginal distribution of   . the speci   c information at hand is data
which we can model as p(y1, . . . , yn |   ), the conditional distribution of y1, . . . , yn given
  . next, the marginal and conditional densities are combined to give the joint distribu-
tion p(y1, . . . , yn,   ). finally, the joint distribution yields p(  | y1, . . . , yn) the conditional
distribution of    given y1, . . . , yn. and p(  | y1, . . . , yn) represents our state of knowledge
accounting for both the background information and the data speci   c to the problem at
hand. p(  ) is called the prior distribution and p(  | y1, . . . , yn) is the posterior distribution.

2.5. bayesian id136

166

a common application is in medical screening exams. consider a patient being screened
for a rare disease, one that a   ects 1 in 1000 people, say. the disease rate in the population
is background information; the patient   s response on the screening exam is data speci   c
to this particular patient. de   ne an indicator variable d by d = 1 if the patient has the
disease and d = 0 if not. de   ne a second random variable t by t = 1 if the test result
is positive and t = 0 if the test result is negative. and suppose the test that is 95% ac-
curate in the sense that p[t = 1| d = 1] = p[t = 0| d = 0] = .95. finally, what is the
chance that the patient has the disease given that the test is positve? in other words, what
is p[d = 1| t = 1]?

we have the marginal distribution of d and the conditional distribution of t given d.
the procedure is to    nd the joint distribution of (d, t), then the conditional distribution of
d given t. the math is

p[d = 1| t = 1] =

=

=

=

=

p[d = 1 and t = 1]

p[t = 1]

p[d = 1 and t = 1]

p[t = 1 and d = 1] + p[t = 1 and d = 0]
p[d = 1] p[t = 1| d = 1]
p[d = 1] p[t = 1| d = 1] + p[d = 0] p[t = 1| d = 0]

(.001)(.95)

(2.9)

(.001)(.95) + (.999)(.05)
    .019.

.00095

.00095 + .04995

that is, a patient who tests positive has only about a 2% chance of having the disease, even
though the test is 95% accurate.

many people    nd this a surprising result and suspect a mathematical trick. but a quick
heuristic check says that out of 1000 people we expect 1 to have the disease, and that
person to test positive; we expect 999 people not to have the disease and 5% of those, or
about 50, to test positive; so among the 51 people who test postive, only 1, or a little less
than 2%, has the disease. the math is correct. this is an example where most people   s
intuition is at fault and careful attention to mathematics is required in order not to be led
astray.

what is the likelihood function in this example? there are two possible values of the
parameter, hence only two points in the domain of the likelihood function, d = 0 and
d = 1. so the likelihood function is

(cid:96)(0) = .05;

(cid:96)(1) = .95

2.5. bayesian id136

167

here   s another way to look at the medical screening problem, one that highlights the mul-
tiplicative nature of likelihood.

p[d = 1| t = 1]
p[d = 0| t = 1]

=

=

=

p[d = 1 and t = 1]
p[d = 0 and t = 1]
p[d = 1] p[t = 1| d = 1]
p[d = 0] p[t = 1| d = 0]

(cid:33)(cid:32)p[t = 1| d = 1]
(cid:33)

p[t = 1| d = 0]

(cid:32)p[d = 1]
(cid:32) 1
(cid:33)(cid:32)

p[d = 0]
.95
.05

(cid:33)

=

999
    .019

the lhs of this equation is the posterior odds of having the disease. the penultimate
line shows that the posterior odds is the product of the prior odds and the likelihood ratio.
speci   cally, to calculate the posterior, we need only the likelihood ratio, not the absolute
value of the likelihood function. and likelihood ratios are the means by which prior odds
get transformed into posterior odds.

let   s look more carefully at the mathematics in the case where the distributions have

densities. let y denote the data, even though in practice it might be y1, . . . , yn.

p(  | y) =

=

=

p(  , y)
p(y)
p(  , y)
p(  , y) d  
p(  )p(y|   )
p(  )p(y|   ) d  

(cid:82)
(cid:82)

(2.10)

equation 2.10 is the same as equation 2.9, only in more general terms. since we are
treating the data as given and p(  | y) as a function of   , we are justi   ed in writing

(cid:82)

p(  | y) =

p(  )(cid:96)(  )
p(  )(cid:96)(  ) d  

or

where c =(cid:82)

p(  | y) =

p(  )(cid:96)(  )

c

p(  )(cid:96)(  ) d   is a constant that does not depend on   . (an integral with respect
to    does not depend on   ; after integration it does not contain   .) the e   ect of the constant

2.5. bayesian id136

168
p(  | y) d   = 1.
c is to rescale the function in the numerator so that it integrates to 1. i.e.,
and since c plays this role, the likelihood function can absorb an arbitrary constant which
will ultimately be compensated for by c. one often sees the expression

(cid:82)

p(  | y)     p(  )(cid:96)(  )

(2.11)

(cid:82)

where the unmentioned constant of proportionality is c. we can    nd c through equa-
tion 2.10. but it is usually much easier to    nd c by using equation 2.11, then setting
p(  )(cid:96)(  ) d  ]   1 and that   s the approach we will adopt throughout most of this book.
c = [

the next two examples show bayesian statistics with real data.

example 2.15 (seedlings, continued)
recall the seedlings examples (1.4, 1.6, 1.7, 1.9, 2.7, and 2.13) which modelled the
number of new seedling arrivals as poi(  ). prior to the experiment ecologists knew
quite a bit about regeneration rates of acer rubrum in the vicinity of the experimental
quadrats. they estimated that new seedlings would arise at a rate most likely around
.5 to 2 seedlings per quadrat per year and less likely either more or less than that.
their knowledge could be encoded in the prior density displayed in figure 2.29 which
is p(  ) = 4  2e   2  . (this is the gam(3, 1/2) density; see section 5.5.) figure 2.29 also
displays the likelihood function p(y|   )       3e      found in example 1.4 and figure 1.6.
therefore, according to equation 2.11, the posterior density is p(  | y)       5e   3  .
in
section 5.5 we will see that this is the gam(6, 1/3) density, up to a constant of propor-
tionality. therefore c in this example must be the constant that appears in the gamma
density: c = 1/[5!    (1/3)6].

in figure 2.29 the posterior density is more similar to the prior density than to the
likelihood function. but the analysis deals with only a single data point. let   s see what
happens as data accumulates. if we have observations y1, . . . , yn, the likelihood function
becomes

(cid:89)

(cid:96)(  ) =

p(yi |   ) =

(cid:89) e       yi

yi!

(cid:80) yi
    e   n    

to see what this means in practical terms, figure 2.30 shows (a): the same prior we used
in example 2.15, (b): (cid:96)(  ) for n = 1, 4, 16, and (c): the posterior for n = 1, 4, 16, always
with   y = 3.

1. as n increases the likelihood function becomes increasingly peaked. that   s because
as n increases, the amount of information about    increases, and we know    with
increasing accurracy. the likelihood function becomes increasingly peaked around
the true value of    and interval estimates become increasingly narrow.

2.5. bayesian id136

169

figure 2.29: prior, likelihood and posterior densities for    in the seedlings example after
the single observation y = 3

0123450.00.10.20.30.40.5!priorlikelihoodposterior2.5. bayesian id136

170

2. as n increases the posterior density becomes increasingly peaked and becomes in-
creasingly like (cid:96)(  ). that   s because as n increases, the amount of information in
the data increases and the likelihood function becomes increasingly peaked. mean-
while, the prior density remains as it was. eventually the data contains much more
information than the prior, so the likelihood function becomes much more peaked
than the prior and the likelihood dominates. so the posterior, the product of prior
(cid:80)n
and likelihood, looks increasingly like the likelihood.
another way to look at it is through the loglikelihood log (cid:96)(  ) = c + log p(  ) +
1 log p(yi |   ). as n         there is an increasing number of terms in the sum, so the
sum eventually becomes much larger and much more important than log p(  ).

in practice, of course,   y usually doesn   t remain constant as n increases. we saw in
example 1.6 that there were 40 new seedlings in 60 quadrats. with this data the posterior
density is

p(  | y1, . . . , y60)       42e   62  

(2.12)

which is the gam(43, 1/62) density. it is pictured in figure 2.31. compare to figure 2.29.

example 2.16 shows bayesian statistics at work for the slater school. see lavine

[1999] for further analysis.

example 2.16 (slater school, cont.)
at the time of the analysis reported in brodeur [1992] there were two other lines of ev-
idence regarding the effect of power lines on cancer. first, there were some epidemi-
ological studies showing that people who live near power lines or who work as power
line repairmen develop cancer at higher rates than the population at large, though only
slightly higher. and second, chemists and physicists who calculate the size of mag-
netic    elds induced by power lines (the supposed mechanism for inducing cancer) said
that the small amount of energy in the magnetic    elds is insuf   cient to have any ap-
preciable affect on the large biological molecules that are involved in cancer genesis.
these two lines of evidence are contradictory. how shall we assess a distribution for
  , the id203 that a teacher hired at slater school develops cancer?

recall from page 138 that neutra, the state epidemiologist, calculated    4.2 cases
of cancer could have been expected to occur    if the cancer rate at slater were equal to
the national average. therefore, the national average cancer rate for women of the age
typical of slater teachers is 4.2/145     .03. considering the view of the physicists, our
prior distribution should have a fair bit of mass on values of        .03. and considering
the epidemiological studies and the likelihood that effects would have been detected
before 1992 if they were strong, our prior distribution should put most of its mass

2.5. bayesian id136

171

figure 2.30: a:prior, b:likelihood and c:posterior densities for    with n = 1, 4, 16

0123450.00.10.20.30.40.5a!prior0123450.00.20.40.60.8b!likelihood0123450.00.20.40.60.81.0c!posteriorn = 1n = 4n = 162.5. bayesian id136

172

figure 2.31: prior, likelihood and posterior densities for    with n = 60,(cid:80) yi = 40.

0.00.51.01.52.00123!densitypriorlikelihoodposterior2.5. bayesian id136
173
below        .06. for the sake of argument let   s adopt the prior depicted in figure 2.32.
its formula is

p(  ) =

  (20)  (400)

  (420)

  19(1       )399

(2.13)

which we will see in section 5.6 is the be(20, 400) density. the likelihood function is
(cid:96)(  )       8(1      )137 (equation 2.3, figure 2.20). therefore the posterior density p(  | y)    
  27(1       )536 which we will see in section 5.6 is the be(28, 537) density. therefore we
can easily write down the constant and get the posterior density

p(  | y) =

  (28)  (537)

  (565)

  27(1       )536

which is also pictured in figure 2.32.

figure 2.32: prior, likelihood and posterior density for slater school

examples 2.15 and 2.16 have the convenient feature that the prior density had the same
form       ae   b   in one case and   a(1       )b in the other     as the likelihood function, which
made the posterior density and the constant c particularly easy to calculate. this was not

0.000.050.100.150.20010203040!priorlikelihooposterio2.6. prediction

174

a coincidence. the investigators knew the form of the likelihood function and looked for
a convenient prior of the same form that approximately represented their prior beliefs.
this convenience, and whether choosing a prior density for this property is legitimate, are
topics which deserve serious thought but which we shall not take up at this point.

2.6 prediction

sometimes the goal of statistical analysis is to make predictions for future observations.
let y1, . . . , yn, y f be a sample from p(  |   ). we observe y1, . . . , yn but not y f , and want a
prediction for y f . there are three common forms that predictions take.
point predictions a point prediction is a single guess for y f . it might be a predictive
mean, predictive median, predictive mode, or any other type of point prediction that
seems sensible.

interval predictions an interval prediction or predictive interval, is an interval of plau-
sible values for y f . a predictive interval is accompanied by a id203. for ex-
ample, we might say that    the interval (0, 5) is a 90% predictive interval for y f    
which would mean pr[y f     (0, 5)] = .90. in a given problem there are, for two rea-
sons, many predictive intervals. first, there are 90% intervals, 95% intervals, 50%
intervals, and so on. and second, there are many predictive intervals with the same
id203. for instance, if (0, 5) is a 90% predictive interval, then it   s possible that
(   1, 4.5) is also a 90% predictive interval.

predictive distributions a predictive distribution is a id203 distribution for y f . from
a predictive distribution, di   erent people could compute point predictions or interval
predictions, each according to their needs.

in the real world, we don   t know   . after all, that   s why we collected data y1, . . . , yn. but
for now, to clarify the types of predictions listed above, let   s pretend that we do know   .
speci   cally, let   s pretend that we know y1, . . . , yn, y f     i.i.d. n(   2, 1).

the main thing to note, since we know    (in this case, the mean and sd of the normal
distribution), is that y1, . . . , yn don   t help us at all. that is, they contain no information
about y f that is not already contained in the knowledge of   . in other words, y1, . . . , yn and
y f are conditionally independent given   . in symbols:

p(y f |   , y1, . . . , yn) = p(y f |   ).

therefore, our prediction should be based on the knowledge of    alone, not on any aspect
of y1, . . . , yn.

2.6. prediction

175
a sensible point prediction for y f is   y f =    2, because -2 is the mean, median, and mode
of the n(   2, 1) distribution. some sensible 90% prediction intervals are (      ,   0.72),
(   3.65,   0.36) and (   3.28,   ). we would choose one or the other depending on whether
we wanted to describe the lowest values that y f might take, a middle set of values, or the
highest values. and, of course, the predictive distribution of y f is n(   2, 1). it completely
describes the extent of our knowledge and ability to predict y f .

in real problems, though, we don   t know   . the simplest way to make a prediction
consists of two steps. first use y1, . . . , yn to estimate   , then make predictions based on
p(y f |     ). predictions made by this method are called plug-in predictions. in the example
of the previous paragraph, if y1, . . . , yn yielded      =    2 and      = 1, then predictions would
be exactly as described above.

for an example with discrete data, refer to examples 1.4 and 1.6 in which    is the
arrival rate of new seedlings. we found      = 2/3. the entire plug-in predictive distribution
is displayed in figure 2.33.   y f = 0 is a sensible point prediction. the set {0, 1, 2} is a
97% plug-in prediction interval or prediction set (because ppois(2,2/3)     .97); the set
{0, 1, 2, 3} is a 99.5% interval.

figure 2.33: plug-in predictive distribution y f     poi(   = 2/3) for the seedlings example

there are two sources of uncertainty in making predictions. first, because y f is ran-
dom, we couldn   t predict it perfectly even if we knew   . and second, we don   t know   .
in any given problem, either one of the two might be the more important source of uncer-

02468100.00.20.4id2032.6. prediction

176

tainty. the    rst type of uncertainty can   t be eliminated. but in theory, the second type can
be reduced by collecting an increasingly large sample y1, . . . , yn so that we know    with
ever more accuracy. eventually, when we know    accurately enough, the second type of
uncertainty becomes negligible compared to the    rst. in that situation, plug-in predictions
do capture almost the full extent of predictive uncertainty.

but in many practical problems the second type of uncertainty is too large to be ig-
nored. plug-in predictive intervals and predictive distributions are too optimistic because
they don   t account for the uncertainty involved in estimating   . a bayesian approach to
prediction can account for this uncertainty. the prior distribution of    and the conditional
distribution of y1, . . . , yn, y f given    provide the full joint distribution of y1, . . . , yn, y f ,   ,
which in turn provides the conditional distribution of y f given y1, . . . , yn. speci   cally,

(cid:90)
(cid:90)
(cid:90)

p(y f | y1, . . . , yn) =

=

=

p(y f ,   | y1, . . . , yn) d  
p(  | y1, . . . , yn)p(y f |   , y1, . . . , yn) d  
p(  | y1, . . . , yn)p(y f |   ) d  

(2.14)

equation 2.14 is just the y f marginal density derived from the joint density of (  , y f ),
all densities being conditional on the data observed so far. to say it another way, the
p(  )p(y f |   ) d  , but where p(  ) is really the
predictive density p(y f ) is
posterior p(  | y1, . . . , yn). the role of y1, . . . , yn is to give us the posterior density of   
instead of the prior.

p(  , y f ) d   = (cid:82)

(cid:82)

the predictive distribution in equation 2.14 will be somewhat more dispersed than
the plug-in predictive distribution.
if we don   t know much about    then the posterior
will be widely dispersed and equation 2.14 will be much more dispersed than the plug-in
predictive distribution. on the other hand, if we know a lot about    then the posterior
distribution will be tight and equation 2.14 will be only slightly more dispersed than the
plug-in predictive distribution.

example 2.17 (seedlings, cont.)
refer to examples 1.4 and 2.15 about y, the number of new seedlings emerging
each year in a forest quadrat. our model is y     poi(  ). the prior (page 168) was
p(  ) = 4  2e   2  . before collecting any data our predictive distribution would be based

2.6. prediction

on that prior. for any number y we could calculate

(cid:90)

=

y!

py f |   (y|   )p  (  ) d  

(cid:90)   ye     
py f (y)     p[y f = y] =
(cid:90)
23
  (3)   2e   2   d  
(cid:90)
  y+2e   3   d  
(cid:33)(cid:32)2
(cid:33)3(cid:32)1
(cid:33)y
3y+3
  (y + 3)   y+2e   3   d  

y!  (3)
23  (y + 3)
y!  (3)3y+3

(cid:32)y + 2

23

=

=

=

y

3

3

,

177

(2.15)

(we will see in chapter 5 that this is a negative binomial distribution.) thus for exam-
ple, according to our prior,

(cid:32)2
(cid:32)2

3

(cid:33)3
(cid:33)3 1

3

3

=

8
27

=

8
27

pr[y f = 0] =

pr[y f = 1] = 3

etc.

figure 2.34 displays these probabilities.

in the    rst quadrat we found y1 = 3 and the posterior distribution (example 2.15,

pg. 168)

p(  | y1 = 3) =

36
5!   5e   3  .

so, by calculations similar to equation 2.15, the predictive distribution after observing
y1 = 3 is

py f | y1(y| y1 = 3) =

=

(cid:90)
(cid:32)y + 5

(cid:33)(cid:32)3

(cid:33)6(cid:32)1

(cid:33)y

y

4

4

py f |   (y|   )p  | y1(  | y1 = 3) d  

(2.16)

2.7. hypothesis testing

so, for example,

pr[y f = 0| y1 = 3] =

pr[y f = 1| y1 = 3] = 6

etc.

(cid:32)3
(cid:33)6
(cid:33)6 1
(cid:32)3

4

4

4

figure 2.34 displays these probabilities.

finally, when we collected data from 60 quadrats, we found

therefore , by calculations similar to equation 2.15, the predictive distribution is

p(  | y1, . . . , y60) =

pr[y f = y| y1, . . . , y60] =

6243
42!   42e   62  
(cid:33)43(cid:32) 1
(cid:32)y + 42
(cid:33)(cid:32)62

(cid:33)y

y

63

63

178

(2.17)

(2.18)

figure 2.34 displays these probabilities.

a priori, and after only n = 1 observation,    is not know very precisely; both types of
uncertainty are important; and the bayesian predictive distribution is noticably different
from the plug-in predictive distribution. but after n = 60 observations    is known
fairly well; the second type of uncertainty is negligible; and the bayesian predictive
distribution is very similar to the plug-in predictive distribution.

2.7 hypothesis testing

scienti   c inquiry often takes the form of hypothesis testing. in each instance there are two
hypotheses     the null hypothesis h0 and the alternative hypothesis ha.

medicine

    h0: the new drug and the old drug are equally e   ective.
    ha: the new drug is better than the old.

public health

    h0 exposure to high voltage electric lines is benign.

2.7. hypothesis testing

179

figure 2.34: predictive distributions of y f in the seedlings example after samples of size
n = 0, 1, 60, and the plug-in predictive

02468100.00.10.20.30.40.5yn=0n=1n=60plug!in2.7. hypothesis testing

180

    ha exposure to high voltage electric lines promotes cancer.

public policy

    h0: head start has no e   ect.
    ha: head start is bene   cial.

astronomy

    h0: the sun revolves around the earth.
    ha: the earth revolves around the sun.

physics

    h0: newtonian mechanics holds.
    ha: relativity holds.

public trust

    h0: winning lottery numbers are random.
    ha: winning lottery numbers have patterns.

esp

ecology

    h0: there is no esp.
    ha: there is esp.

    h0: forest    res are irrelevant to forest diversity.
    ha: forest    res enhance forest diversity.

by tradition h0 is the hypothesis that says nothing interesting is going on or the current
theory is correct, while ha says that something unexpected is happening or our current
theories need updating. often the investigator is hoping to disprove the null hypothesis
and to suggest the alternative hypothesis in its place.

it is worth noting that while the two hypotheses are logically exclusive, they are not
logically exhaustive. for instance, it   s logically possible that forest    res decrease diver-
sity even though that possibility is not included in either hypothesis. so one could write
ha: forest    res decrease forest diversity, or even ha: forest    res change forest diversity.

2.7. hypothesis testing

181

which alternative hypothesis is chosen makes little di   erence for the theory of hypothesis
testing, though it might make a large di   erence to ecologists.

statisticians have developed several methods called hypothesis tests. we focus on just
one for the moment, useful when h0 is speci   c. the fundamental idea is to see whether
the data are    compatible    with the speci   c h0. if so, then there is no reason to doubt h0; if
not, then there is reason to doubt h0 and possibly to consider ha in its stead. the meaning
of    compatible    can change from problem to problem but typically there is a four step
process.

1. formulate a scienti   c null hypothesis and translate it into statistical terms.

2. choose a low dimensional statistic, say w = w(y1, . . . , yn) such that the distribution

of w is speci   ed under h0 and likely to be di   erent under ha.

3. calculate, or at least approximate, the distribution of w under h0.

4. check whether the observed value of w, calculated from y1, . . . , yn, is compatible

with its distribution under h0.

how would this work in the examples listed at the beginning of the chapter? what
follows is a very brief description of how hypothesis tests might be carried out in some
of those examples. to focus on the key elements of hypothesis testing, the descriptions
have been kept overly simplistic. in practice, we would have to worry about confounding
factors, the di   culties of random sampling, and many other issues.
public health sample a large number of people with high exposure to power lines. for
each person, record xi, a bernoulli random variable indicating whether that person
has cancer. model x1, . . . , xn     i.i.d. bern(  1). repeat for a sample of people
with low exposure; getting y1, . . . , yn     i.i.d. bern(  2). estimate   1 and   2. let
w =     1         2. h0 says e[w] = 0. either the binomial distribution or the central limit
theorem tells us the sd   s of     1 and     2, and hence the sd of w. ask how many sd   s
is w away from its expected value of 0. if it   s o    by many sd   s, more than about 2
or 3, that   s evidence against h0.

public policy test a sample children who have been through head start. model their
test scores as x1, . . . , xn     i.i.d. n(  1,   1). do the same for children who have not
been through head start, getting y1, . . . , yn     i.i.d. n(  2,   2). h0 says   1 =   2.
let w =     1         2. the parameters   1,   2,   1,   2 can all be estimated from the data;
therefore w can be calculated and its sd estimated. ask how many sd   s is w away
from its expected value of 0. if it   s o    by many sd   s, more than about 2 or 3, that   s
evidence against h0.

2.7. hypothesis testing

182

ecology we could either do an observational study, beginning with one sample of plots
that had had frequent forest    res in the past and another sample that had had few
   res. or we could do an experimental study, beginning with a large collection of
plots and subjecting half to a regime of regular burning and the other half to a regime
of no burning. in either case we would measure and compare species diversity in
both sets of plots. if diversity is similar in both groups, there is no reason to doubt
h0. but if diversity is su   ciently di   erent (su   cient means large compared to what
is expected by chance under h0.) that would be evidence against h0.

to illustrate in more detail, let   s consider testing a new blood pressure medication. the
scienti   c null hypothesis is that the new medication is not any more e   ective than the old.
we   ll consider two ways a study might be conducted and see how to test the hypothesis
both ways.

method 1 a large number of patients are enrolled in a study and their blood pressures
are measured. half are randomly chosen to receive the new medication (treatment); half
receive the old (control). after a prespeci   ed amount of time, their blood pressure is
remeasured. let yc,i be the change in blood pressure from the beginning to the end of the
experiment for the i   th control patient and yt,i be the change in blood pressure from the
beginning to the end of the experiment for the i   th treatment patient. the model is

yc,1, . . . yc,n     i.i.d. fc;
yt,1, . . . yt,n     i.i.d. ft;

e[yc,i] =   c;
e[yt,i] =   t;

var(yc,i) =   2
c
var(yt,i) =   2
t

for some unknown means   c and   t and variances   c and   t. the translation of the
hypotheses into statistical terms is

h0 :   t =   c
ha :   t (cid:44)   c

+   2

because we   re testing a di   erence in means, let w =   yt       yc. if the sample size n is
reasonably large, then the central limit theorem says approximately w     n(0,   2
w) under
h0 with   2
w comes from
adding variances of independent random variables.   2
w can be
estimated from the data. so we can calculate w from the data and see whether it is within
about 2 or 3 sd   s of where h0 says it should be. if it isn   t, that   s evidence against h0.

c)/n. the mean of 0 comes from h0. the variance   2

c and therefore   2

t and   2

w = (  2
t

method 2 a large number of patients are enrolled in a study and their blood pressure
is measured. they are matched together in pairs according to relevant medical character-
istics. the two patients in a pair are chosen to be as similar to each other as possible. in
each pair, one patient is randomly chosen to receive the new medication (treatment); the

2.7. hypothesis testing

183

other receives the old (control). after a prespeci   ed amount of time their blood pressures
are measured again. let yt,i and yc,i be the change in blood pressure for the i   th treatment
and i   th control patients. the researcher records

                     1

0

xi =

if yt,i > yc,i
otherwise

the model is

x1, . . . , xn     i.i.d. bern(p)

for some unknown id203 p. the translation of the hypotheses into statistical terms is

h0 : p = .5
ha : p (cid:44) .5

let w =(cid:80) xi. under h0, w     bin(n, .5). to test h0 we plot the bin(n, .5) distribution and

see where w falls on the plot . figure 2.35 shows the plot for n = 100. if w turned out
to be between about 40 and 60, then there would be little reason to doubt h0. but on the
other hand, if w turned out to be less than 40 or greater than 60, then we would begin to
doubt. the larger |w     50|, the greater the cause for doubt.

figure 2.35: pdf of the bin(100, .5) distribution

30405060700.000.040.08w2.7. hypothesis testing

184

this blood pressure example exhibits a feature common to many hypothesis tests.
first, we   re testing a di   erence in means. i.e., h0 and ha disagree about a mean, in this
case the mean change in blood pressure from the beginning to the end of the experiment.
so we take w to be the di   erence in sample means. second, since the experiment is run
on a large number of people, the central limit theorem says that w will be approximately
normally distributed. third, we can calculate or estimate the mean   0 and sd   0 under
h0. so fourth, we can compare the value of w from the data to what h0 says its distribution
should be.

in method 1 above, that   s just what we did. in method 2 above, we didn   t use the
normal approximation; we used the binomial distribution. but we could have used the
   
approximation. from facts about the binomial distribution we know   0 = n/2 and   0 =
n/2 under h0. for n = 100, figure 2.36 compares the exact binomial distribution to the
normal approximation.

in general, when the normal approximation is valid, we compare w to the n(  0,   0)
density, where   0 is calculated according to h0 and   0 is either calculated according to h0
or estimated from the data. if t     |w       0|/  0 is bigger than about 2 or 3, that   s evidence
against h0.

figure 2.36: pdfs of the bin(100, .5) (dots) and n(50, 5) (line) distributions

the following example shows hypothesis testing at work.

30405060700.000.040.08w2.7. hypothesis testing

185

example 2.18 (tooth growth, continued)
this continues example 2.1 (pg. 101). let   s concentrate on a particular dosage, say
dose = 0.5, and test the null hypothesis that, on average, the delivery method (supp)
makes no difference to tooth growth, as opposed to the alternative that it does make
a difference. those are the scienti   c hypotheses. the data for testing the hypothesis
are x1, . . . , x10, the 10 recordings of growth when supp = vc and y1, . . . , y10, the 10
recordings of growth when supp = oj. the xi   s are 10 independent draws from one
distribution; the yi   s are 10 independent draws from another:

x1, . . . , x10     i.i.d. fvc
y1, . . . , y10     i.i.d. foj

de   ne the two means to be   vc     e[xi] and   oj     e[yi]. the scienti   c hypothesis and
its alternative, translated into statistical terms become

h0 :   vc =   oj
ha :   vc (cid:44)   oj

those are the hypotheses in statistical terms.
because we   re testing a difference in means, we choose our one dimensional sum-
mary statistic to be w = |   x       y|. small values of w support h0; large values support ha.
but how small is small; how large is large? the central limit theorem says

(cid:32)
(cid:32)

  x     n
  y     n

  vc,

  oj,

  vc   
n
  oj   
n

(cid:33)
(cid:33)

approximately, so that under h0,

w     n

(cid:115)

                              0,

  2
vc

+   2
oj
n

                               ,

approximately. the statistic w can be calculated, its sd estimated, and its approximate
density plotted as in figure 2.37. we can see from the figure, or from the fact that
w/  w     3.2 that the observed value of w is moderately far from its expected value
under h0. the data provide moderately strong evidence against h0.

2.7. hypothesis testing

186

figure 2.37: approximate density of summary statistic w. the black dot is the value of w
observed in the data.

figure 2.37 was produced with the following r code.

x <- toothgrowth$len[

toothgrowth$supp=="vc"

& toothgrowth$dose==0.5

y <- toothgrowth$len[

toothgrowth$supp=="oj"

& toothgrowth$dose==0.5

]

]

t <- abs ( mean(x) - mean(y) )
sd <- sqrt ( ( var(x) + var(y) )/length(x) )
tvals <- seq ( -4*sd, 4*sd, len=80 )
plot ( tvals, dnorm(tvals,0,sd), type="l",

xlab="", ylab="", main="" )

points ( t, 0, pch=16, cex=1.5 )

the points(...) adds the observed value of t to the plot.

in the next example it is di   cult to estimate the distribution of w under h0; so we use

simulation to work it out.

!6!4!202460.000.152.7. hypothesis testing

187

example 2.19 (baboons)
because baboons are promiscuous, when a baby is born it is not obvious, at least
to humans, who the father is. but do the baboons themselves know who the father
is? buchan et al. [2003] report a study of baboon behavior that attempts to answer
that question. for more information see http://www.princeton.edu/~baboon. ba-
boons live in social groups comprised of several adult males, several adult females,
and juveniles. researchers followed several groups of baboons periodically over a pe-
riod of several years to learn about baboon behavior. the particular aspect of behavior
that concerns us here is that adult males sometimes come to the aid of juveniles. if
adult males know which juveniles are their own children, then it   s at least possible that
they tend to aid their own children more than other juveniles. the data set baboons
(available on the web site)1 contains data on all the recorded instances of adult males
helping juveniles. the    rst four lines of the    le look like this.

recip father maleally dadpresent group
abb
abb
abb
abb

edw
edw
edw
pow

edw
edw
edw
edw

omo
omo
omo
omo

y
y
y
y

1. recip identi   es the juvenile who received help. in the four lines shown here, it

is always abb.

2. father identifes the father of the juvenile. researchers know the father through

dna testing of fecal samples. in the four lines shown here, it is always edw.

3. maleally identi   es the adult male who helped the juvenile. in the fourth line we

see that pow aided abb who is not his own child.

4. dadpresent tells whether the father was present in the group when the juvenile

was aided. in this data set it is always y.

5. group identi   es the social group in which the incident occured. in the four lines

shown here, it is always omo.

let w be the number of cases in which a father helps his own child. the snippet

1we have slightly modi   ed the data to avoid some irrelevant complications.

2.7. hypothesis testing

188

dim ( baboons )
sum ( baboons$father == baboons$maleally )

reveals that there are n = 147 cases in the data set, and that w = 87 are cases in
which a father helps his own child. the next step is to work out the distribution of w
under h0: adult male baboons do not know which juveniles are their children.

let   s examine one group more closely, say the omo group. typing

baboons[baboons$group == "omo",]

displays the relevant records. there are 13 of them. edw was the father in 9, pow
was the father in 4. edw provided the help in 9, pow in 4. the father was the ally
in 9 cases; in 4 he was not. h0 implies that edw and pow would distribute their
help randomly among the 13 cases. if h0 is true, i.e., if edw distributes his 9 helps
and pow distributes his 4 helps randomly among the 13 cases, what would be the
distribution of w, the number of times a father helps his own child? we can answer
that question by a simulation in r. (we could also answer it by doing some math or by
knowing the hypergeometric distribution, but that   s not covered in this text.)

dads <- baboons$father [ baboons$group == "omo" ]
ally <- baboons$maleally [ baboons$group == "omo" ]
n.sim <- 1000
w <- rep ( na, n.sim )
for ( i in 1:n.sim ) {

perm <- sample ( dads )
w[i] <- sum ( perm == ally )

}
hist(w)
table(w)

try out the simulation for yourself.
w = 9, is not so unusual under h0.

it shows that the observed number in the data,

what about the other social groups? if we    nd out how many there are, we can do

a similar simulation for each. let   s write an r function to help.

g.sim <- function (group, n.sim) {

dads <- baboons$father [ baboons$group == group ]

2.7. hypothesis testing

189

ally <- baboons$maleally [ baboons$group == group ]
w <- rep ( na, n.sim )
for ( i in 1:n.sim ) {

perm <- sample ( dads )
w[i] <- sum ( perm == ally )

}
return(w)

}

figure 2.38 shows histograms of g.sim for each group, along with a dot showing the
observed value of w in the data set. for some of the groups the observed value of
w, though a bit on the high side, might be considered consistent with h0. for others,
the observed value of w falls outside the range of what might be reasonably expected
by chance.
in a case like this, where some of the evidence is strongly against h0
and some is only weakly against h0, an inexperienced statistician might believe the
overall case against h0 is not very strong. but that   s not true.
in fact, every one of
the groups contributes a little evidence against h0, and the total evidence against h0
is very strong. to see this, we can combine the separate simulations into one. the
following snippet of code does this. each male   s help is randomly reassigned to a
juvenile within his group. the number of times when a father helps his own child is
summed over the different groups. simulated numbers are shown in the histogram in
figure 2.39. the dot in the    gure is at 84, the actual number of instances in the full
data set. figure 2.39 suggests that it is almost impossible that the 84 instances arose
by chance, as h0 would suggest. we should reject h0 and reach the conclusion that
(a) adult male baboons do know who their own children are, and (b) they give help
preferentially to their own children.

figure 2.38 was produced with the following snippet.

groups <- unique ( baboons$group )
n.groups <- length(groups)
par ( mfrow=c(3,2) )
for ( i in 1:n.groups ) {

good <- baboons$group == groups[i]
w.obs <- sum (

baboons$father[good]

w.sim <- g.sim ( groups[i], n.sim )

== baboons$maleally[good] )

2.7. hypothesis testing

190

figure 2.38: number of times baboon father helps own child in example 2.19. histograms
are simulated according to h0. dots are observed data.

omow5678910110200400vivw8101214160200400nyaw0123450100200300weaw152025300100200300linw81014180501001502.7. hypothesis testing

191

hist ( w.sim, xlab="w", ylab="", main=groups[i],

xlim=range(c(w.obs,w.sim)) )

points ( w.obs, 0, pch=16, cex=1.5 )
print ( w.obs )

}

figure 2.39: histogram of simulated values of w.tot. the dot is the value observed in the
baboon data set.

figure 2.39 was produced with the following snippet.

w.obs <- rep ( na, n.groups )
w.sim <- matrix ( na, n.groups, n.sim )
for ( i in 1:n.groups ) {

good <- baboons$group == groups[i]
w.obs[i] <- sum (

baboons$father[good]

== baboons$maleally[good] )

w.tot5060708001002002.8. exercises

192

w.sim[i,] <- g.sim ( groups[i], n.sim )

}
w.obs.tot <- sum ( w.obs )
w.sim.tot <- apply ( w.sim, 2, sum )
hist ( w.sim.tot, xlab="w.tot", ylab="",

xlim=range(c(w.obs.tot,w.sim.tot)) )

points ( w.obs.tot, 0, pch=16, cex=1.5 )
print ( w.obs.tot )

2.8 exercises

1.

(a) justify equation 2.1 on page 107.
(b) show that the function g(x) de   ned just after equation 2.1 is a id203

density. i.e., show that it integrates to 1.

2. this exercise uses the toothgrowth data from examples 2.1 and 2.18.

(a) estimate the e   ect of delivery mode for doses 1.0 and 2.0. does it seem that

delivery mode has a di   erent e   ect at di   erent doses?

(b) does it seem as though delivery mode changes the e   ect of dose?
(c) for each delivery mode, make a set of three boxplots to compare the three

doses.

3. this exercise uses data from 272 eruptions of the old faithful geyser in yellowstone
national park. see example 2.5. the data are in the r dataset faithful. one
column contains the duration of each eruption; the other contains the waiting time
to the next eruption. figure 2.12 suggests that the duration of an eruption is a useful
predictor of the waiting time until the next eruption. figure 2.14 suggests that the
previous waiting time is another potentially useful predictor of the next waiting time.
this exercise explores what can be gained by using the pair (duration, previous
waiting time) to predict the next waiting time.

(a) from figure 2.11, estimate, visually, how accurately one could predict waiting
time if one knew nothing about the previous duration or the previous waiting
time.

2.8. exercises

193

(b) from figure 2.12, estimate, visually, how accurately one could predict waiting

time if one knew the duration of the previous eruption.

(c) plot waiting time as a function of the previous waiting time. you can use a
command such as plot(waiting[-1]  waiting[-272]). describe the re-
sult. estimate, visually, how accurately one could predict waiting time if one
knew the the previous waiting time. is the previous waiting time a useful pre-
dictor of the next waiting time?

(d) make a coplot of waiting time as a function of duration, given the previous
waiting time. does the relationship between waiting time and duration depend
on the length of the previous waiting time? what does that say about the joint
distribution of (waitingi   1, waitingi, durationi)?

(e) make a coplot of the next waiting time as a function of the previous waiting
time, given duration. given duration, are the previous waiting time and the next
waiting time strongly related? what does that say about the joint distribution
of (waitingi   1, waitingi, durationi)?

(f) if we   re already using duration to predict the next waiting time, will there be
much bene   t also to use the previous waiting time to improve the prediction?

4. this exercise relies on data from the neurobiology experiment described in exam-

ple 2.6.

(a) download the data from the book   s website.
(b) reproduce figure 2.17.
(c) make a plot similar to figure 2.17 but for a di   erent neuron and di   erent

tastant.

(d) write an r function that accepts a neuron and tastant as input and produces a

plot like figure 2.17.

(e) use the function from the previous part to look for neurons that respond to

particular tastants. describe your results.

5. this exercise relies on example 2.8 about the slater school. there were 8 cancers
among 145 teachers. figure 2.20 shows the likelihood function. suppose the same
incidence rate had been found among more teachers. how would that a   ect (cid:96)(  )?
make a plot similar to figure 2.20, but pretending that there had been 80 cancers
among 1450 teachers. compare to figure 2.20. what is the result? does it make
sense? try other numbers if it helps you see what is going on.

2.8. exercises

194

6. this exercise continues exercise 42 in chapter 1. let p be the fraction of the popu-

lation that uses illegal drugs.
(a) suppose researchers know that p     .1. jane and john are given the randomized
response question. jane answers    yes   ; john answers    no   . find the posterior
id203 that jane uses cocaine;    nd the posterior id203 that john uses
cocaine.

(b) now suppose that p is not known and the researchers give the randomized
response question to 100 people. let x be the number who answer    yes   .
what is the likelihood function?

(c) what is the id113 of p if x=50, if x=60, if x=70, if x=80, if x=90?

7. this exercise deals with the likelihood function for poisson distributions.

(a) let x1, . . . , xn     i.i.d. poi(  ). find (cid:96)(  ) in terms of x1, . . . , xn.

(b) show that (cid:96)(  ) depends only on (cid:80) xi and not on the speci   c values of the

individual xi   s.

(c) let y1, . . . , yn be a sample from poi(  ). show that      =   y is the m.l.e.
(d) find the m.l.e. in example 1.4.

8. the book data andrews and herzberg [1985] contains lots of data sets that have
been used for various purposes in statistics. one famous data set records the annual
number of deaths by horsekicks in the prussian army from 1875-1894 for each
of 14 corps. download the data from statlib at http://lib.stat.cmu.edu/
datasets/andrews/t04.1. (it is table 4.1 in the book.) let yi j be the number of
deaths in year i, corps j, for i = 1875, . . . , 1894 and j = 1, . . . , 14. the yi js are in
columns 5   18 of the table.

(a) what are the    rst four columns of the table?
(b) what is the last column of the table?
(c) what is a good model for the data?
(d) suppose you model the data as i.i.d. poi(  ). (yes, that   s a good answer to the

previous question.)

i. plot the likelihood function for   .
ii. find     .
iii. what can you say about the rate of death by horsekick in the prussian

calvary at the end of the 19th century?

2.8. exercises

195

(e) is there any evidence that di   erent corps had di   erent death rates? how would

you investigate that possibility?

9. use the data from example 2.8. find the m.l.e. for   .

10. john is a runner and frequently runs from his home to his o   ce. he wants to measure
the distance, so once a week he drives to work and measures the distance on his car   s
odometer. unfortunately, the odometer records distance only to the nearest mile.
(john   s odometer changes abruptly from one digit to the next. when the odometer
displays a digit d, it is not possible to infer how close it is to becoming d + 1.) john
drives the route ten times and records the following data from the odometer: 3, 3, 3,
4, 3, 4, 3, 3, 4, 3. find the m.l.e. of the exact distance. you may make reasonable
assumptions as needed.

11. x1, . . . , xn     normal(  , 1). multiple choice: the m.l.e.      is found from the equation

d

d

(c)

(a)

(b)

d
d  
d

dx f (x1, . . . , xn|  ) = 0
d   f (x1, . . . , xn|  ) = 0
dx f (x1, . . . , xn|  ) = 0
(b) show that (cid:96)(  ) depends only on (cid:80) yi and not on the speci   c values of the

(a) let y1, . . . , yn     i.i.d. n(  , 1). find (cid:96)(  ) in terms of y1, . . . , yn.

12. this exercise deals with the likelihood function for normal distributions.

individual yi   s.

(c) let n = 10 and choose a value for   . use r to generate a sample of size 10
from n(  , 1). plot the likelihood function. how accurately can you estimate   
from a sample of size 10?

(d) let y1, . . . , y10     i.i.d. n(  ,   ) where    is known but not necessarily equal to
(e) let y1, . . . , y10     i.i.d. n(  ,   ) where    is known but    is unknown. find (cid:96)(  )

1. find (cid:96)(  ) in terms of y1, . . . , y10 and   .

in terms of y1, . . . , y10 and   .

13. let y1, . . . , yn be a sample from n(  , 1). show that      =   y is the m.l.e.

14. let y1, . . . , yn be a sample from n(  ,   ) where    is known. show that     2 = n   1(cid:80)(yi   

  )2 is the m.l.e.

2.8. exercises

196

15. recall the discoveries data from page 10 on the number of great discoveries each
year. let yi be the number of great discoveries in year i and suppose yi     poi(  ).
plot the likelihood function (cid:96)(  ). figure 1.3 suggested that        3.1 explained the
data reasonably well. how sure can we be about the 3.1?

16. justify each step of equation 2.6.

17. page 159 discusses a simulation experiment comparing the sample mean and sample
median as estimators of a population mean. figure 2.27 shows the results of the
simulation experiment. notice that the vertical scale decreases from panel (a) to
(b), to (c), to (d). why? give a precise mathematical formula for the amount by
which the vertical scale should decrease. does the actual decrease agree with your
formula?

18. in the medical screening example on page 166,    nd the id203 that the patient

has the disease given that the test is negative.

19. country a suspects country b of having hidden chemical weapons. based on secret

information from their intelligence agency they calculate
p[b has weapons] = .8. but then country b agrees to inspections, so a sends in-
spectors. if there are no weapons then of course the inspectors won   t    nd any. but
if there are weapons then they will be well hidden, with only a 20% chance of being
found. i.e.,

p[   nding weapons|weapons exist] = .2.

(2.19)

no weapons are found. find the id203 that b has weapons. i.e.,    nd

pr[b has weapons|no weapons are found].

20. let t be the amount of time a customer spends on hold when calling the computer
help line. assume that t     exp(  ) where    is unknown. a sample of n calls is
randomly selected. let t1, . . . , tn be the times spent on hold.

(a) choose a value of    for doing simulations.
(b) use r to simulate a sample of size n = 10.
(c) plot (cid:96)(  ) and    nd     .
(d) about how accurately can you determine   ?

(e) show that (cid:96)(  ) depends only on(cid:80) ti and not on the values of the individual ti   s.

2.8. exercises

197

21. there are two coins. one is fair; the other is two-headed. you randomly choose a

coin and toss it.

(a) what is the id203 the coin lands heads?
(b) what is the id203 the coin is two-headed given that it landed heads?
(c) what is the id203 the coin is two-headed given that it landed tails? give

a formal proof, not intuition.

(d) you are about to toss the coin a second time. what is the id203 that the

second toss lands heads given that the    rst toss landed heads?

22. there are two coins. for coin a, p[h] = 1/4; for coin b, p[h] = 2/3. you randomly

choose a coin and toss it.

(a) what is the id203 the coin lands heads?
(b) what is the id203 the coin is a given that it landed heads? what is the

id203 the coin is a given that it landed tails?

(c) you are about to toss the coin a second time. what is the id203 the second

toss lands heads given that the    rst toss landed heads?

23. at dupont college (apologies to tom wolfe) math sat scores among math majors
are distributed n(700, 50) while math sat scores among non-math majors are dis-
tributed n(600, 50). 5% of the students are math majors. a randomly chosen student
has a math sat score of 720. find the id203 that the student is a math major.

24. the great randi is a professed psychic and claims to know the outcome of coin
   ips. this problem concerns a sequence of 20 coin    ips that randi will try to guess
(or not guess, if his claim is correct).

(a) take the prior p[randi is psychic] = .01.

i. before any guesses have been observed,    nd

p[   rst guess is correct] and p[   rst guess is incorrect].

ii. after observing 10 consecutive correct guesses,    nd the updated

p[randi is psychic].

iii. after observing 10 consecutive correct guesses,    nd

p[next guess is correct] and p[next guess is incorrect].

iv. after observing 20 consecutive correct guesses,    nd

p[next guess is correct] and p[next guess is incorrect].

2.8. exercises

198

(b) two statistics students, a skeptic and a believer discuss randi after class.

believer: i believe her, i think she   s psychic.
skeptic: i doubt it. i think she   s a hoax.
believer: how could you be convinced? what if randi guessed 10 in a row?
what would you say then?
skeptic: i would put that down to luck. but if she guessed 20 in a row then i
would say p[randi can guess coin    ips]     .5.
find the skeptic   s prior id203 that randi can guess coin    ips.

(c) suppose that randi doesn   t claim to guess coin tosses perfectly, only that she
can guess them at better than 50%. 100 trials are conducted. randi gets 60
correct. write down h0 and ha appropriate for testing randi   s claim. do the
data support the claim? what if 70 were correct? would that support the
claim?

(d) the great sandi, a statistician, writes the following r code to calculate a prob-

ability for randi.

y <- rbinom ( 500, 100, .5)
sum ( y == 60 ) / 500

what is sandi trying to calculate? write a formula (don   t evaluate it.) for the
quantity sandi is trying to calculate.

25. let w be the fraction of free throws that shaquille o   neal (or any other player of
your choosing) makes during the next nba season. find a density that approxi-
mately represents your prior opinion for w.

26. let t be the amount of time between the moment when the sun    rst touches the hori-
zon in the afternoon and the moment when it sinks completely below the horizon.
without making any observations, assess your distribution for t.

27. assess your prior distribution for b, the proportion of m&m   s that are brown. buy as
many m&m   s as you like and count the number of browns. calculate your posterior
distribution. give the m&m   s to your professor, so he or she can check your work.
(a) let y     n(  , 1) and let the prior distribution for    be        n(0, 1).
i. when y has been observed, what is the posterior density of   ?
ii. show that the density in part i. is a normal density.
iii. find its mean and sd.

28.

2.8. exercises

199
(b) let y     n(  ,   y) and let the prior distribution for    be        n(m,   ). suppose

that   y, m, and    are known constants.

(c) let y1, . . . , yn be a sample of size n from n(  ,   y) and let the prior distribution

i. when y has been observed, what is the posterior density of   ?
ii. show that the density in part i. is a normal density.
iii. find its mean and sd.
for    be        n(m,   ). suppose that   y, m, and    are known constants.
i. when y1, . . . , yn have been observed, what is the posterior density of   ?
ii. show that the density in part i. is a normal density.
iii. find its mean and sd.

29. verify equations 2.16, 2.17, and 2.18.

30. refer to the discussion of predictive intervals on page 175. justify the claim that
(      ,   .72), (   3.65,   0.36), and (   3.28,   ) are 90% prediction intervals. find the
corresponding 80% prediction intervals.
(a) following example 2.17 (pg. 176),    nd pr[y f = k | y1, . . . yn] for k = 1, 2, 3, 4.
(b) using the results from part (a), make a plot analagous to figure 2.33 (pg. 175).

31.

32. suppose you want to test whether the random number generator in r generates each
of the digits 0, 1, . . . , 9 with id203 0.1. how could you do it? you may con-
sider    rst testing whether r generates 0 with the right frequency, then repeating the
analysis for each digit.

33.

(a) repeat the analysis of example 2.18 (pg. 184), but for dose = 1 and dose = 2.
(b) test the hypothesis that increasing the dose from 1 to 2 makes no di   erence in

tooth growth.

(c) test the hypothesis that the e   ect of increasing the dose from 1 to 2 is the same

for supp = vc as it is for supp = oj.

(d) do the answers to parts (a), (b) and (c) agree with your subjective assessment

of figures 2.2, 2.3, and 2.6?

34. continue exercise 43 from chapter 1. the autoganzfeld trials resulted in x = 122.

(a) what is the parameter in this problem?
(b) plot the likelihood function.

2.8. exercises

200

(c) test the    no esp, no cheating    hypothesis.
(d) adopt and plot a reasonable and mathematically tractable prior distribution for

the parameter. compute and plot the posterior distribution.

(e) find the id203 of a match on the next trial given x = 122.
(f) what do you conclude?

35. three biologists named asiago, brie, and cheshire are studying a mutation in morn-
ing glories, a species of    owering plant. the mutation causes the    owers to be
white rather than colored. but it is not known whether the mutation has any e   ect
on the plants       tness. to study the question, each biologist takes a random sample
of morning glories having the mutation, counts the seeds that each plant produces,
and calculates a likelihood set for the average number of seeds produced by mutated
morning glories.
asiago takes a sample of size na = 100 and calculates a ls.1 set. brie takes a sample
of size nb = 400 and calculates a ls.1 set. cheshire takes a sample of size nc = 100
and calculates a ls.2 set.
(a) who will get the longer interval, asiago or brie? about how much longer will

it be? explain.

(b) who will get the longer interval, asiago or cheshire? about how much longer

will it be? explain.

36. in the 1990   s, a committee at mit wrote a study on the status of women faculty
in science at mit. in 1994 there were 15 women among the 209 tenured faculty in
the six departments of the school of science. they found, among other things, that
the amount of resources (money, lab space, etc.) given to women was, on average,
less than the amount given to men. the report goes on to pose the question: given
the tiny number of women faculty in any department one might ask if it is possible
to obtain signi   cant data to support a claim of gender di   erences . . . .
what does statistics say about it? focus on a single resource, say laboratory space.
the distribution of lab space is likely to be skewed. i.e., there will be a few people
with lots more space than most others. so let   s model the distribution of lab space
with an exponential distribution. let x1, . . . , x15 be the amounts of space given to
tenured women, so xi     exp(  w) for some unknown parameter   w. let m be the
average lab space given to tenured men. assume that m is known to be 100, from
the large number of tenured men. if there is no discrimination, then   w = 100. (  w
is e(xi).)
chris stats writes the following r code.

2.8. exercises

201

y <- rexp(15,.01)
m <- mean(y)
s <- sqrt( var(y ) / 15)
lo <- m - 2*s
hi <- m + 2*s

what is y supposed to represent? what is (lo,hi) supposed to represent?
now chris puts the code in a loop.

n <- 0
for ( i in 1:1000 ) {

y <- rexp(15,.01)
m <- mean(y)
s <- sqrt ( var(y ))
lo <- m - 2*s
hi <- m + 2*s
if ( lo < 100 & hi > 100 ) n <- n+1

}
print (n/1000)

what is n/1000 supposed to represent? if a sample size of 15 is su   ciently large
for the central limit theorem to apply, then what, approximately, is the value of
n/1000?

37. refer to the r code in example 2.1 (pg. 101). why was it necessary to have a brace

(   {   ) after the line
for ( j in 1:3 )
but not after the line
for ( i in 1:2 )?

chapter 3

regression

3.1

introduction

regression is the study of how the distribution of one variable, y, changes according to the
value of another variable, x. r comes with many data sets that o   er regression examples.
four are shown in figure 3.1.

1. the data set attenu contains data on several variables from 182 earthquakes, in-
cluding hypocenter-to-station distance and peak acceleration. figure 3.1 (a) shows
acceleration plotted against distance. there is a clear relationship between x =
distance and the distribution of y = acceleration. when x is small, the distribution
of y has a long right-hand tail. but when x is large, y is always small.

2. the data set airquality contains data about air quality in new york city. ozone
levels y are plotted against temperature x in figure 3.1 (b). when x is small then
the distribution of y is concentrated on values below about 50 or so. but when x is
large, y can range up to about 150 or so.

3. figure 3.1 (c) shows data from mtcars. weight is on the abcissa and the type of
transmission (manual=1, automatic=0) is on the ordinate. the distribution of weight
is clearly di   erent for cars with automatic transmissions than for cars with manual
transmissions.

4. the data set faithful contains data about eruptions of the old faithful geyser in
yellowstone national park. figure 3.1 (d) shows y = time to next eruption plotted
against x = duration of current eruption. small values of x tend to indicate small
values of y.

202

3.1. introduction

203

figure 3.1: four regression examples

01003000.00.20.40.60.8(a)distanceacceleration60708090050100150(b)temperatureozone234501(c)weightmanual transmission1.52.53.54.55060708090(d)eruptionswaiting3.1. introduction

204

figure 3.1 was produced by the following r snippet.

par ( mfrow=c(2,2) )

data ( attenu )
plot ( attenu$dist, attenu$accel, xlab="distance",

ylab="acceleration", main="(a)", pch="." )

data ( airquality )
plot ( airquality$temp, airquality$ozone, xlab="temperature",

ylab="ozone", main="(b)", pch="." )

data ( mtcars )
stripchart ( mtcars$wt ~ mtcars$am, pch=1, xlab="weight",
method="jitter", ylab="manual transmission",
main="(c)" )

data ( faithful )
plot ( faithful, pch=".", main="(d)" )

both continuous and discrete variables can turn up in regression problems.

in the
attenu, airquality and faithful datasets, both x and y are continuous. in mtcars, it
seems natural to think of how the distribution of y = weight varies with x = transmission,
in which case x is discrete and y is continuous. but we could also consider how the
fraction of cars y with automatic transmissions varies as a function of x = weight, in
which case y is discrete and x is continuous.

in many regression problems we just want to display the relationship between x and
y. often a scatterplot or stripchart will su   ce, as in figure 3.1. other times, we will use
a statistical model to describe the relationship. the statistical model may have unknown
parameters which we may wish to estimate or otherwise make id136 for. examples of
parametric models will come later. our study of regression begins with data display.

in many instances a simple plot is enough to show the relationship between x and y.
but sometimes the relationship is obscured by the scatter of points. then it helps to draw
a smooth curve through the data. examples 3.1 and 3.2 illustrate.

example 3.1 (1970 draft lottery)

3.1. introduction

205

the result of the 1970 draft lottery is available at dasl . the website explains:

   in 1970, congress instituted a random selection process for the mili-
tary draft. all 366 possible birth dates were placed in plastic capsules in
a rotating drum and were selected one by one. the    rst date drawn from
the drum received draft number one and eligible men born on that date
were drafted    rst. in a truly random lottery there should be no relationship
between the date and the draft number.   

figure 3.2 shows the data, with x = day of year and y = draft number. there is no

apparent relationship between x and y.

figure 3.2 was produced with the following snippet.

plot ( draft$day.of.year, draft$draft.no,

xlab="day of year", ylab="draft number" )

more formally, a relationship between x and y usually means that the expected
value of y is different for different values of x.
(we don   t consider changes in sd
or other aspects of the distribution here.) typically, when x is a continuous variable,
changes in y are smooth, so we would adopt the model

e[y | x] = g(x)

(3.1)

for some unknown smooth function g.

r has a variety of built-in functions to estimate g. these functions are called scat-
terplot smoothers, for obvious reasons. figure 3.3 shows the draft lottery data with two
scatterplot smoother estimates of g. both estimates show a clear trend, that birthdays
later in the year were more likely to have low draft numbers. following discovery of
this trend, the procedure for drawing draft numbers was changed in subsequent years.

figure 3.3 was produced with the following snippet.

x <- draft$day.of.year
y <- draft$draft.no
plot ( x, y, xlab="day of year", ylab="draft number" )
lines ( lowess ( x, y ) )

3.1. introduction

206

figure 3.2: 1970 draft lottery. draft number vs. day of year

01002003000100200300day of yeardraft number3.1. introduction

207

figure 3.3: 1970 draft lottery. draft number vs. day of year. solid curve    t by lowess;
dashed curve    t by supsmu.

01002003000100200300day of yeardraft number3.1. introduction

208

lines ( supsmu ( x, y ), lty=2 )

    lowess (locally weighted scatterplot smoother) and supsmu (super smoother)
are two of r   s scatterplot smoothers.
in the    gure, the lowess curve is less
wiggly than the supsmu curve. each smoother has a tuning parameter that can
make the curve more or less wiggly. figure 3.3 was made with the default values
for both smoothers.

example 3.2 (seedlings, continued)
as mentioned in example 1.6, the seedlings study was carried out at the coweeta
long term ecological research station in western north carolina. there were    ve
plots at different elevations on a hillside. within each plot there was a 60m  1m strip
running along the hillside divided into 60 1m  1m quadrats.
it is possible that the
arrival rate of new seedlings and the survival rates of both old and new seedlings are
different in different plots and different quadrats. figure 3.4 shows the total number
of new seedlings in each of the quadrats in one of the    ve plots. the lowess curve
brings out the spatial trend: low numbers to the left, a peak around quadrat 40, and a
slight falling off by quadrat 60.

figure 3.4 was produced by

plot ( total.new, xlab="quadrat index",

ylab="total new seedlings" )

lines ( lowess ( total.new ) )

in a regression problem the data are pairs (xi, yi) for i = 1, . . . , n. for each i, yi is a

random variable whose distribution depends on xi. we write

yi = g(xi) +  i.

(3.2)

equation 3.2 expresses yi as a systematic or explainable part g(xi) and an unexplained part
 i. g is called the regression function. often the statistician   s goal is to estimate g. as
usual, the most important tool is a simple plot, similar to those in figures 3.1 through 3.4.
once we have an estimate,   g, for the regression function g (either by a scatterplot
smoother or by some other technique) we can calculate ri     yi      g(xi). the ri   s are estimates

3.1. introduction

209

figure 3.4: total number of new seedlings 1993     1997, by quadrat.

01020304050600510152025quadrat indextotal new seedlings3.2. normal linear models

210

of the  i   s and are called residuals. the  i   s themselves are called errors. because the ri   s
are estimates they are sometimes written with the    hat    notation:

   i = ri = estimate of  i

residuals are used to evaluate and assess the    t of models for g, a topic which is beyond
the scope of this book.

in regression we use one variable to explain or predict the other. it is customary in
statistics to plot the predictor variable on the x-axis and the predicted variable on the y-
axis. the predictor is also called the independent variable, the explanatory variable, the
covariate, or simply x. the predicted variable is called the dependent variable, or simply
y. (in economics x and y are sometimes called the exogenous and endogenous variables,
respectively.) predicting or explaining y from x is not perfect; knowing x does not tell
us y exactly. but knowing x does tell us something about y and allows us to make more
accurate predictions than if we didn   t know x.

regression models are agnostic about causality. in fact, instead of using x to predict y,
we could use y to predict x. so for each pair of variables there are two possible regressions:
using x to predict y and using y to predict x. sometimes neither variable causes the other.
for example, consider a sample of cities and let x be the number of churches and y be the
number of bars. a scatterplot of x and y will show a strong relationship between them. but
the relationship is caused by the population of the cities. large cities have large numbers
of bars and churches and appear near the upper right of the scatterplot. small cities have
small numbers of bars and churches and appear near the lower left.

scatterplot smoothers are a relatively unstructured way to estimate g. their output
follows the data points more or less closely as the tuning parameter allows   g to be more or
less wiggly. sometimes an unstructured approach is appropriate, but not always. the rest
of chapter 3 presents more structured ways to estimate g.

3.2 normal linear models

3.2.1 introduction
in section 1.3.4 we studied the normal distribution, useful for continuous populations
having a central tendency with roughly equally sized tails. in section 3.2 we generalize to
the case where there are many normal distributions with di   erent means which depend in
a systematic way on another variable. we begin our study with an example in which there
are three distinct distributions.

3.2. normal linear models

211

example 3.3 (hot dogs, continued)
figure 3.5 displays calorie data for three types of hot dogs. it appears that poultry hot
dogs have, on average, slightly fewer calories than beef or meat hot dogs. how should
we model these data?

figure 3.5: calorie content of hot dogs

figure 3.5 was produced with

stripchart ( hotdogs$calories ~ hotdogs$type, pch=1,

xlab="calories" )

there are 20 beef, 17 meat and 17 poultry hot dogs in the sample. we think of
them as samples from much larger populations. figure 3.6 shows density estimates
of calorie content for the three types. for each type of hot dog, the calorie contents
cluster around a central value and fall off to either side without a particularly long left or

100120140160180beefmeatpoultrycalories3.2. normal linear models

212

right tail. so it is reasonable, at least as a    rst attempt, to model the three distributions
as normal. since the three distributions have about the same amount of spread we
model them as all having the same sd. we adopt the model

b1, . . . , b20     i.i.d. n(  b,   )
m1, . . . , m17     i.i.d. n(  m,   )
p1, . . . , p17     i.i.d. n(  p,   ),

(3.3)

(3.4)

where the bi   s, mi   s and pi   s are the calorie contents of the beef, meat and poultry hot
dogs respectively. figure 3.6 suggests

  b     150;
an equivalent formulation is

  m     160;

  p     120;        30.

b1, . . . , b20     i.i.d. n(  ,   )

m1, . . . , m17     i.i.d. n(   +   m,   )
p1, . . . , p17     i.i.d. n(   +   p,   )

models 3.3 and 3.4 are mathematically equivalent. each has three parameters
for the population means and one for the sd. they describe exactly the same set of
distributions and the parameters of either model can be written in terms of the other.
the equivalence is shown in table ??. for the purpose of further exposition we adopt
model 3.4.

we will see later how to carry out id136s regarding the parameters. for now

we stop with the model.

figure 3.6 was produced with the following snippet.

par ( mfrow=c(3,1))
plot ( density ( hotdogs$c[hotdogs$t=="beef"], bw=20 ),

xlim=c(50,250), yaxt="n", ylab="", xlab="calories",
main="beef" )

plot ( density ( hotdogs$c[hotdogs$t=="meat"], bw=20 ),

xlim=c(50,250), yaxt="n", ylab="", xlab="calories",
main="meat" )

plot ( density ( hotdogs$c[hotdogs$t=="poultry"], bw=20 ),
xlim=c(50,250), yaxt="n", ylab="", xlab="calories",
main="poultry" )

3.2. normal linear models

213

figure 3.6: density estimates of calorie contents of hot dogs

50100150200250beefcalories50100150200250meatcalories50100150200250poultrycalories3.2. normal linear models

214

    hotdogs$c and hotdogs$t illustrate a convenient feature of r, that components
of a structure can be abbreviated.
instead of typing hotdogs$calories and
hotdogs$type we can use the abbreviations. the same thing applies to argu-
ments of functions.

    density ( ..., bw=20 ) speci   es the bandwidth of the density estimate.
larger bandwidth gives a smoother estimate; smaller bandwidth gives a more
wiggly estimate. try different bandwidths to see what they do.

model 3.3 model 3.4

  b

  m

  p

  m       b

  p       b

  

  

   +   m

   +   p

  m

  p

  

interpretation
mean calorie content of
beef hot dogs
mean calorie content of
meat hot dogs
mean calorie content of
poultry hot dogs
mean calorie di   erence
between beef and meat
hotdogs
mean calorie di   erence
between beef and poul-
try hotdogs
sd of calorie content
within a single type of
hot dog

approximate value

150

160

120

10

-30

30

table 3.1: correspondence between models 3.3 and 3.4

the plantgrowth data set in r provides another example. as r explains, the data

previously appeared in dobson [1983] and are

   results from an experiment to compare yields (as measured by dried weight
of plants) obtained under a control and two di   erent treatment conditions.   

the    rst several lines are

3.2. normal linear models

215

weight group
ctrl
ctrl
ctrl

4.17
5.58
5.18

1
2
3

figure 3.7 shows the whole data set.

it appears that plants grown under di   erent treatments tend to have di   erent weights.
in particular, plants grown under treatment 1 appear to be smaller on average than plants
grown under either the control or treatment 2. what statistical model should we adopt?

figure 3.7: the plantgrowth data

figure 3.7 was produced with the following snippet.

stripchart ( plantgrowth$weight ~ plantgrowth$group, pch=1,

xlab="weight" )

first, we think of the 10 plants grown under each condition as a sample from a much
larger population of plants that could have been grown. second, a look at the data sug-
gests that the weights in each group are clustered around a central value, approximately

3.54.04.55.05.56.0ctrltrt1trt2weight3.2. normal linear models

216

symmetrically without an especially long tail in either direction. so we model the weights
as having normal distributions.

but we should allow for the possibility that the three populations have di   erent means.
(we do not address the possibility of di   erent sd   s here.) let    be the population mean of
plants grown under the control condition,   1 and   2 be the extra weight due to treatment 1
and treatment 2 respectively, and    be the sd. we adopt the model

wc,1, . . . , wc,10     i.i.d. n(  ,   )

wt1,1, . . . , wt1,10     i.i.d. n(   +   1,   )
wt2,1, . . . , wt2,10     i.i.d. n(   +   2,   ).

(3.5)

there is a mathematical structure shared by 3.4, 3.5 and many other statistical models,
and some common statistical notation to describe it. we   ll use the hot dog data to illustrate.

example 3.4 (hot dogs, continued)
example 3.4 continues example 2.2. first, there is the main variable of interest, often
called the response variable and denoted y. for the hot dog data y is calorie content.
(another analysis could be made in which y is sodium content.)

the distribution of y is different under different circumstances. in this example, y
has a normal distribution whose mean depends on the type of hot dog. in general, the
distribution of y will depend on some quantity of interest, called a covariate, regressor,
or explanatory variable. covariates are often called x.

the data consists of multiple data points, or cases. we write yi and xi for the i   th
case. it is usual to represent the data as a matrix with one row for each case. one
column is for y; the other columns are for explanatory variables. for the hot dog data
the matrix is

type
beef
beef
...
meat
meat
poultry
poultry
...

calories
186
181

140
138
129
132

sodium
495
477

428
339
430
375

(for analysis of calories, the third column is irrelevant.)

3.2. normal linear models

217

rewriting the data matrix in a slightly different form reveals some mathematical
structure common to many models. there are 54 cases in the hotdog study. let
(y1, . . . , y54) be their calorie contents. for each i from 1 to 54, de   ne two new variables
x1,i and x2,i by

and

x1,i =

x2,i =

0 otherwise

                     1 if the i   th hot dog is meat,
                     1 if the i   th hot dog is poultry,

0 otherwise.

x1,i and x2,i are indicator variables. two indicator variables suf   ce because, for the i   th
hot dog, if we know x1,i and x2,i, then we know what type it is. (more generally, if there
are k populations, then k     1 indicator variables suf   ce.) with these new variables,
model 3.4 can be rewritten as

for i = 1, . . . , 54, where

yi =    +   mx1,i +   px2,i +  i
 1, . . . ,  54     i.i.d. n(0,   ).

(3.6)

equation 3.6 is actually 54 separate equations, one for each case. we can write

them succinctly using vector and matrix notation. let
y = (y1, . . . , y54)t,
b = (  ,   m,   p)t,
e = ( 1, . . . ,  54)t,

(the transpose is there because, by convention, vectors are column vectors.) and

                                                                                                                                                            

                                                                                                                                                            

...

1 0 0
1 0 0
...
...
1 0 0
1 1 0
...
...
1 1 0
1 0 1
...
...
1 0 1

...

...

x =

3.2. normal linear models
218
x is a 54    3 matrix. the    rst 20 lines are for the beef hot dogs; the next 17 are for
the meat hot dogs; and the    nal 17 are for the poultry hot dogs. equation 3.6 can be
written

y = xb + e

(3.7)

equations similar to 3.6 and 3.7 are common to many statistical models. for the

plantgrowth data (page 214) let

                     1
                     1

0

0

x1,i =

x2,i =

yi = weight of i   th plant,

if i   th plant received treatment 1
otherwise
if i   th plant received treatment 2
otherwise

y = (y1, . . . , y30)t
b = (  ,   1,   2)t
e = ( 1, . . . ,  30)t

and

x =

                                                                                                                                                            

                                                                                                                                                            

...

1 0 0
1 0 0
...
...
1 0 0
1 1 0
...
...
1 1 0
1 0 1
...
...
1 0 1

...

...

then analogously to 3.6 and 3.7 we can write

and

yi =    +   1x1,i +   2x2,i +  i

y = xb + e.

(3.8)

(3.9)

3.2. normal linear models

219

notice that equation 3.6 is nearly identical to equation 3.8 and equation 3.7 is identical
to equation 3.9. their structure is common to many statistical models. each yi is written
as the sum of two parts. the    rst part, xb, (   +   mx1,i +   px2,i for the hot dogs;    +   1x1,i +
  2x2,i for plantgrowth) is called systematic, deterministic, or signal and represents the
explainable di   erences between populations. the second part, e, or  i, is random, or noise,
and represents the di   erences between hot dogs or plants within a single population. the
 i   s are called errors. in statistics, the word    error    does not indicate a mistake; it simply
means the noise part of a model, or the part left unexplained by covariates. modelling a
response variable as

response = signal + noise
is a useful way to think and will recur throughout this book.

in 3.6 the signal    +   mx1,i +   px2,i is a linear function of (  ,   m,   p). in 3.8 the signal
   +   1x1,i +   2x2,i is a linear function of (  ,   1,   2). models in which the signal is a linear
function of the parameters are called linear models.

in our examples so far, x has been an indicator. for each of a    nite number of x   s
there has been a corresponding population of y   s. as the next example illustrates, linear
models can also arise when x is a continuous variable.
example 3.5 (ice cream consumption)
this example comes from dasl, which says

   ice cream consumption was measured over 30 four-week periods from
march 18, 1951 to july 11, 1953. the purpose of the study was to deter-
mine if ice cream consumption depends on the variables price, income, or
temperature. the variables lag-temp and year have been added to the
original data.   

you can download the data from

http://lib.stat.cmu.edu/dasl/datafiles/icecream.html.

the    rst few lines look like this:

date

1
2
3

ic
.386
.374
.393

price
.270
.282
.277

income

temp

lag-temp

year

78
79
81

41
56
63

56
63
68

0
0
0

the variables are

3.2. normal linear models

220

date time period (1-30) of the study (from 3/18/51 to 7/11/53)

ic ice cream consumption in pints per capita

price price of ice cream per pint in dollars

income weekly family income in dollars

temp mean temperature in degrees f

lag-temp temp variable lagged by one time period

year year within the study (0 = 1951, 1 = 1952, 2 = 1953)

figure 3.8 is a plot of consumption versus temperature. it looks as though an equation
of the form

consumption =   0 +   1temperature + error

(3.10)
would describe the data reasonably well. this is a linear model, not because consump-
tion is a linear function of temperature, but because it is a linear function of (  0,   1). to
write it in matrix form, let

y = (ic1, . . . , ic30)t
b = (  0,   1)t
e = ( 1, . . . ,  30)t

and

the model is

                                                   

temp1
temp2

1
1
...
1 temp30

...

                                                   

x =

y = xb + e.

(3.11)

equation 3.11 is a linear model, identical to equations 3.7 and 3.9.

equation 3.7 (equivalently, 3.9 or 3.11) is the basic form of all linear models. linear
models are extremely useful because they can be applied to so many kinds of data sets.
section 3.2.2 investigates some of their theoretical properties and r   s functions for    tting
them to data.

3.2. normal linear models

221

figure 3.8: ice cream consumption (pints per capita) versus mean temperature (   f)

30405060700.250.300.350.400.450.500.55temperatureconsumption3.2. normal linear models

222

3.2.2 id136 for linear models

section 3.2.1 showed some graphical displays of data that were eventually described by
linear models. section 3.2.2 treats more formal id136 for linear models. we begin by
deriving the likelihood function.

linear models are described by equation 3.7 (equivalently, 3.9 or 3.11) which we

repeat here for convenience:

y = xb + e.

(3.12)

in general there is an arbitrary number of cases, say n, and an arbitrary number of covari-
ates, say p. equation 3.12 is shorthand for the collection of univariate equations

yi =   0 +   1x1,i +        +   pxp,i +  i

(3.13)

or equivalently,

for i = 1, . . . , n where   i =   0 +(cid:80)

parameters: (  0, . . . ,   p,   ). the likelihood function is

j    jx j,i and the  i   s are i.i.d. n(0,   ). there are p + 2

yi     n(  i,   )

i=1

n(cid:89)
n(cid:89)
n(cid:89)
(cid:16)
2    2(cid:17)    n

1   
2    
1   
2    
2 e    1

    1
e

e    1

i=1

i=1

2  2

p(yi |   0, . . . ,   p,   )

(cid:19)2

2( yi     i
   )2
(cid:18) yi   (  0+(cid:80)    jx j,i)
i(yi   (  0+(cid:80)    jx j,i))2
(cid:80)

  

2

(cid:96)(  0, . . . ,   p,   ) =

=

=

=

(3.14)

likelihood 3.14 is a function of the p + 2 parameters. to    nd the m.l.e.   s we could
di   erentiate 3.14 with respect to each parameter in turn, set the derivatives equal to 0, and
solve. but it is easier to take the log of 3.14    rst, then di   erentiate and solve.

log (cid:96)(  0, . . . ,   p,   ) = c     n log        1
2  2

                        yi     (  0 +

(cid:88)

i

(cid:88)

j

                        2

   jxi, j)

3.2. normal linear models

223

for some irrelevant constant c, so we get the system of equations

j

i

1
    2

(cid:88)
(cid:88)
(cid:0)yi     (    0 +
     jxi, j)(cid:1) = 0
(cid:88)
(cid:88)
(cid:0)yi     (    0 +
     jxi, j)(cid:1)xi,1 = 0
(cid:88)
(cid:88)
(cid:0)yi     (    0 +
     jxi, j)(cid:1)xi,p = 0
(cid:88)
(cid:88)
     jxi, j)(cid:1)2 = 0
(cid:0)yi     (    0 +

...

i

j

i

j

i

j

1
    2

1
    2

+

    n
    

1
    3

(3.15)

note the hat notation to indicate estimates. the m.l.e.   s (    0, . . . ,     p,     ) are the values of
the parameters that make the derivatives equal to 0 and therefore satisfy equations 3.15.
the    rst p + 1 of these equations can be multiplied by   2, yielding p + 1 linear equations
in the p + 1 unknown      s. because they   re linear, they can be solved by id202. the
solution is

  b = (xtx)   1xty,

using the notation of equation 3.12.

for each i     {1, . . . , n}, let

  yi =     0 + x1i     1 +        + xpi     p.

the   yi   s are called    tted values. the residuals are

and are estimates of the errors  i. finally, referring to the last line of equation 3.15, the
m.l.e.      is found from

ri = yi       yi
= yi         0 + x1i     1 +        + xpi     p
(cid:88)

(cid:0)yi     (  0 +

+

   jxi, j)(cid:1)2

(cid:88)
(cid:88)

i

i

0 =     n
    
=     n
    

1
    3
1
    3

+

j

r2
i

3.2. normal linear models

224

so

and

    2 =

     =

1
n

(cid:88)
(cid:32)(cid:80) r2

i

n

r2
i

(cid:33) 1

2

(3.16)

in addition to the m.l.e.   s we often want to look at the likelihood function to judge,
for example, how accurately each    can be estimated. the likelihood function for a sin-
gle   i comes from the central limit theorem. we will not work out the math here but,
fortunately, r will do all the calculations for us. we illustrate with the hot dog data.
example 3.6 (hot dogs, continued)
estimating the parameters of a model is called    tting a model to data. r has built-in
commands for    tting models. the following snippet    ts model 3.7 to the hot dog data.
the syntax is similar for many model    tting commands in r, so it is worth spending
some time to understand it.

hotdogs.fit <- lm ( hotdogs$calories ~ hotdogs$type )

    lm stands for linear model.
       stands for    is a function of   . it is used in many of r   s modelling commands. y
   x is called a formula and means that y is modelled as a function of x. in the
case at hand, calories is modelled as a function of type.

    lm speci   es the type of model.
    r automatically creates the x matrix in equation 3.12 and estimates the param-

eters.

    the result of    tting the model is stored in a new object called hotdogs.fit. of

course we could have called it anything we like.

    lm can have an argument data, which speci   es a dataframe. so instead of

hotdogs.fit <- lm ( hotdogs$calories ~ hotdogs$type )

3.2. normal linear models

225

we could have written

hotdogs.fit <- lm ( calories ~ type, data=hotdogs )

you may want to try this to see how it works.

to see hotdogs.fit, use r   s summary function. it   s use and the resulting output are
shown in the following snippet.

> summary(hotdogs.fit)

call:
lm(formula = hotdogs$calories ~ hotdogs$type)

residuals:

min

1q
-51.706 -18.492

median
-5.278

3q
22.500

max
36.294

coefficients:

(intercept)
hotdogs$typemeat
hotdogs$typepoultry
---
signif. codes:

estimate std. error t value pr(>|t|)

156.850
1.856
-38.085

5.246
7.739
7.739

29.901
0.240
-4.921

< 2e-16 ***

0.811

9.4e-06 ***

0    ***    0.001    **    0.01    *    0.05    .    0.1         1

residual standard error: 23.46 on 51 degrees of freedom
multiple r-squared: 0.3866,
f-statistic: 16.07 on 2 and 51 df,

p-value: 3.862e-06

adjusted r-squared: 0.3626

the most important part of the output is the table labelled coefficients:. there is
one row of the table for each coef   cient. their names are on the left. in this table the
names are intercept, hotdogs$typemeat, and hotdogs$typepoultry. the    rst
column is labelled estimate. those are the m.l.e.   s. r has    t the model

yi =   0 +   1x1,i +   2x2,i +  i

3.2. normal linear models

226

where x1 and x2 are indicator variables for the type of hot dog. the model implies

yi =   0 +  i
yi =   0 +   1 +  i
yi =   0 +   2 +  i

for beef hotdogs
for meat hotdogs
for poultry hotdogs

therefore the names mean

  0 = intercept
  1 = hotdogs$typemeat
  2 = hotdogs$typepoultry = mean difference between

= mean calorie content of beef hot dogs
= mean difference between beef and meat hot dogs

beef and poultry hot dogs

from the coefficients table the estimates are

    0 = 156.850
    1 = 1.856
    2 =    38.085

the next column of the table is labelled std. error.
it contains the sd   s of the
estimates. in this case,     0 has an sd of about 5.2;     1 has an sd of about 7.7, and     2
also has an sd of about 7.7. the central limit theorem says that approximately, in
large samples

    0     n(  0,     0)
    1     n(  1,     1)
    2     n(  2,     2)

the sd   s in the table are estimates of the sd   s in the central limit theorem.

figure 3.9 plots the likelihood functions. the interpretation is that   0 is likely some-
where around 157, plus or minus about 10 or so;   1 is somewhere around 2, plus or
minus about 15 or so; and   2 is somewhere around -38, plus or minus about 15 or so.
(compare to table ??.) in particular, there is no strong evidence that meat hot dogs
have, on average, more or fewer calories than beef hot dogs; but there is quite strong
evidence that poultry hot dogs have considerably fewer.

3.2. normal linear models

227

figure 3.9: likelihood functions for (  ,   m,   p) in the hot dog example.

140150160170  likelihood!20010!mlikelihood!60!40!20!plikelihood3.2. normal linear models

228

figure 3.9 was produced with the following snippet.

m <- c ( 156.85, 1.856, -38.085 )
s <- c ( 5.246, 7.739, 7.739 )

par ( mfrow=c(2,2) )

x <- seq ( m[1]-3*s[1], m[1]+3*s[1], length=40 )
plot ( x, dnorm(x,m[1],s[1]), type="l",

xlab=expression(mu), ylab="likelihood", yaxt="n" )

x <- seq ( m[2]-3*s[2], m[2]+3*s[2], length=40 )
plot ( x, dnorm(x,m[2],s[2]), type="l",

xlab=expression(delta[m]),
ylab="likelihood", yaxt="n" )

x <- seq ( m[3]-3*s[3], m[3]+3*s[3], length=40 )
plot ( x, dnorm(x,m[3],s[3]), type="l",

xlab=expression(delta[p]),
ylab="likelihood", yaxt="n" )

the summary also gives an estimate of   . the estimate is labelled residual
standard error. in this case,          23.46.1 so our model says that for each type of
hot dog, the calorie contents have approximately a normal distribution with sd about
23 or so. compare to figure 3.5 to see whether the 23.46 makes sense.

regression is sometimes used in an exploratory setting, when scientists want to    nd
out which variables are related to which other variables. often there is a response variable
y, (imagine, for example, performance in school) and they want to know which other
variables a   ect y (imagine, for example, poverty, amount of television watching, computer
in the home, parental involvment, etc.) example 3.7 illustrates the process.
example 3.7 (mtcars)
this example uses id75 to explore the r data set mtcars (see figure 3.1,
i /(n     p     1))1/2.
compare to equation 3.16 for the m.l.e. in which the denominator is n. the situation is similar to the sample
sd on page 99. when n (cid:29) p there is little di   erence between the two estimates.

1r, like most statistical software, does not report the m.l.e. but reports instead          ((cid:80) r2

3.2. normal linear models

229

panel (c)) more thoroughly with the goal of modelling mpg (miles per gallon) as a
function of the other variables. as usual, type data(mtcars) to load the data into r
and help(mtcars) for an explanation. as r explains:

   the data was extracted from the 1974 motor trend us magazine, and
comprises fuel consumption and 10 aspects of automobile design and per-
formance for 32 automobiles (1973-74 models).   

in an exploratory exercise such as this, it often helps to begin by looking at the data.
accordingly, figure 3.10 is a pairs plot of the data, using just the continuous variables.

figure 3.10 was produced by

pairs ( mtcars[,c(1,3:7)] )

clearly, mpg is related to several of the other variables. weight is an obvious and

intuitive example. the    gure suggests that the linear model

mpg =   0 +   1wt +  

(3.17)

is a good start to modelling the data. figure 3.11(a) is a plot of mpg vs. weight plus
the    tted line. the estimated coef   cients turn out to be     0     37.3 and     1        5.34. the
interpretation is that mpg decreases by about 5.34 for every 1000 pounds of weight.
note: this does not mean that if you put a 1000 pound weight in your car your mpg
will decrease by 5.34. it means that if car a weighs about 1000 pounds less than car
b, then we expect car a to get an extra 5.34 miles per gallon. but there are likely
many differences between a and b besides weight. the 5.34 accounts for all of those
differences, on average.

we could just as easily have begun by    tting mpg as a function of horsepower with

the model

mpg =   0 +   1hp +  

(3.18)
we use      s to distinguish the coef   cients in equation 3.18 from those in equation 3.17.
the m.l.e.   s turn out to be     0     30.1 and     1        0.069. figure 3.11(b) shows the
corresponding scatterplot and    tted line. which model do we prefer? choosing among
different possible models is a major area of statistical practice with a large literature
that can be highly technical. in this book we show just a few considerations.

one way to judge models is through residual plots, which are plots of residuals
versus either x variables or    tted values. if models are adequate, then residual plots

3.2. normal linear models

230

figure 3.10: pairs plot of the mtcars data. type help(mtcars) in r for an explanation.

mpg1004003.04.516221025100400disphp502503.04.5dratwt24102516225025024qsec3.2. normal linear models

231

should show no obvious patterns. patterns in residual plots are clues to model in-
adequacy and ways to improve models. figure 3.11(c) and (d) are residual plots for
mpg.fit1 (mpg vs. wt) and mpg.fit2 (mpg vs. hp). there are no obvious patterns in
panel (c).
in panel (d) there is a suggestion of curvature. for    tted values between
about 15 and 23, residuals tend to be low but for    tted values less than about 15 or
greater than about 23, residuals tend to be high (the same pattern might have been
noted in panel (b).) suggesting that mpg might be better    t as a nonlinear function of
hp. we do not pursue that suggestion further at the moment, merely noting that there
may be a minor    aw in mpg.fit2 and we therefore slightly prefer mpg.fit1.

another thing to note from panels (c) and (d) is the overall size of the residuals.
in (c), they run from about -4 to about +6, while in (d) they run from about -6 to about
+6. that is, the residuals from mpg.fit2 tend to be slightly larger in absolute value
than the residuals from mpg.fit1, suggesting that wt predicts mpg slightly better than
does hp. that impression can be con   rmed by getting the summary of both    ts and
checking     . from mpg.fit1          3.046 while from mpg.fit2          3.863. i.e., from wt
we can predict mpg to within about 6 or so (two sd   s) while from hp we can predict
mpg only to within about 7.7 or so. for this reason too, we slightly prefer mpg.fit1 to
mpg.fit2.

what about the possibility of using both weight and horsepower to predict mpg?

consider

mpg.fit3 <- lm ( mpg ~ wt + hp, data=mtcars )

    the formula y    x1 + x2 means    t y as a function of both x1 and x2. in our

example that means

mpg =   0 +   1wt1 +   2hp2 +  

(3.19)
a residual plot from model 3.19 is shown in figure 3.11 (e). the m.l.e.   s are     0     37.2,
    1        3.88,     2        0.03, and          2.6. since the residual plot looks curved, model 3.17
has residuals about as small as model 3.19, and model 3.17 is more parsimonious
than model 3.19 we slightly prefer model 3.17.

figure 3.11 (a) was produced with

plot ( mtcars$wt, mtcars$mpg, xlab="weight", ylab="mpg" )
mpg.fit1 <- lm ( mpg ~ wt, data=mtcars )
abline ( coef(mpg.fit1) )

3.2. normal linear models

232

figure 3.11: mtcars     (a): mpg vs. wt; (b): mpg vs. hp; (c): residual plot from mpg  
wt; (d): residual plot from mpg   hp; (e): residual plot from mpg   wt+hp

2345102030(a)weightmpg50150250102030(b)horsepowermpg1015202530!40246(c)fitted values from fit1res 152025!6!226(d)fitted values from fit2res 15202530!40246(e)fitted values from fit3resid3.2. normal linear models

233

figure 3.11, panels (c) and (d) were produced with

# panel c
plot ( fitted(mpg.fit1), resid(mpg.fit1), main="(c)",

xlab="fitted values from fit1", ylab="resid" )

# panel d
plot ( fitted(mpg.fit2), resid(mpg.fit2),

xlab="fitted values from fit2", ylab="resid",
main="(d)" )

in example 3.7 we    t three models for mpg, repeated here with their original equation

numbers.

mpg =   0 +   1wt +  
mpg =   0 +   1hp +  
mpg =   0 +   1wt1 +   2hp +  

(3.17)
(3.18)
(3.19)

what is the connection between, say,   1 and   1, or between   1 and   2?   1 is the average
mpg di   erence between two cars whose weights di   er by 1000 pounds. since heavier
cars tend to be di   erent than lighter cars in many ways, not just in weight,   1 captures
the net e   ect on mpg of all those di   erences. on the other hand,   1 is the average mpg
di   erence between two cars of identical horsepower but whose weights di   er by 1000
pounds. figure 3.12 shows the likelihood functions of these four parameters. the evidence
suggests that   1 is probably in the range of about -7 to about -4, while   1 is in the range of
about -6 to -2. it   s possible that   1       1. on the other hand,   1 is probably in the interval
(   .1,   .04) while   2 is probably in the interval (   .05, 0). it   s quite likely that   1 (cid:48)   2.
scientists sometimes ask the question    what is the e   ect of variable x on variable y?   
that question does not have an unambiguous answer; the answer depends on which other
variables are accounted for and which are not.

figure 3.12 was produced with

par ( mfrow=c(2,2) )
x <- seq ( -8, -1.5, len=60 )

3.2. normal linear models

234

figure 3.12: likelihood functions for   1,   1,   1 and   2 in the mtcars example.

!8!6!4!2!1!0.10!0.040.00"1!8!6!4!2#1!0.10!0.040.00#23.3. generalized linear models

235

plot ( x, dnorm(x,-5.3445,.5591), type="l",

xlab=expression(beta[1]), ylab="", yaxt="n" )

x <- seq ( -.1, 0, len=60 )
plot ( x, dnorm(x,-.06823,.01012), type="l",

xlab=expression(gamma[1]), ylab="", yaxt="n" )

x <- seq ( -8, -1.5, len=60 )
plot ( x, dnorm(x,-3.87783,.63273), type="l",

xlab=expression(delta[1]), ylab="", yaxt="n" )

x <- seq ( -.1, 0, len=60 )
plot ( x, dnorm(x,-.03177,.00903), type="l",

xlab=expression(delta[2]), ylab="", yaxt="n" )

3.3 generalized linear models

3.3.1 id28
look again at panel (c) in figure 3.1 on page 203. the dependent variable is binary, as
opposed to the continuous dependent variables in panels (a), (b) and (d). in (a), (b) and (d)
we modelled y | x as having a normal distribution; regression was a model for e[y | x], the
mean of that normal distribution as a function of x. in (c) y | x has a binomial distribution.
we still use the term    regression    for a model of e[y | x]. when y is binary, regression is
a model for the id203 of success    as a function of x.

figure 3.13 shows two more scatterplots where y is a binary variable. the data are

described in the next two examples.

example 3.8 (face, continued)
refer to examples 1.12 and 2.11 about the face experiment to assess the effects
of excess co2 on the growth of the forest. to describe the size of trees, ecologists
sometimes use diameter at breast height, or dbh. dbh was recorded every year for
each loblolly pine tree in the face experiment. one potential effect of elevated co2
is for the trees to reach sexual maturity and hence be able to reproduce earlier than
otherwise. if they do mature earlier, ecologists would like to know whether that   s due
only to their increased size, or whether trees will reach maturity not just at younger
ages, but also at smaller sizes. sexually mature trees can produce pine cones but
immature trees cannot. so to investigate sexual maturity, a graduate student counted

3.3. generalized linear models

236

the number of pine cones on each tree. for each tree let x be its dbh and y be either
1 or 0 according to whether the tree has pine cones.

figure 3.13(a) is a plot of y versus x for all the trees in ring 1. it does appear that

larger trees are more likely to have pine cones.

example 3.9 (o-rings)
   on january 28, 1986 america was shocked by the destruction of the space shuttle
challenger, and the death of its seven crew members.    so begins the website http://
www.fas.org/spp/51l.html of the federation of american scientist   s space policy
project.

up until 1986 the space shuttle orbiter was lifted into space by a pair of booster
rockets, one on each side of the shuttle, that were comprised of four sections stacked
vertically on top of each other. the joints between the sections were sealed by o-
rings. on january 28, 1986 the temperature at launch time was so cold that the o-
rings became brittle and failed to seal the joints, allowing hot exhaust gas to come into
contact with unburned fuel. the result was the challenger disaster. an investigation
ensued. the website http://science.ksc.nasa.gov/shuttle/missions/51-l/
docs contains links to

1. a description of the event,

2. a report (kerwin) on the initial attempt to determine the cause,

3. a report (rogers-commission) of the presidential investigative commission that

   nally did determine the cause, and

4. a transcript of the operational recorder voice tape.

one of the issues was whether nasa could or should have forseen that cold weather
might diminish performance of the o-rings.

after launch the booster rockets detach from the orbiter and fall into the ocean
where they are recovered by nasa, taken apart and analyzed. as part of the analysis
nasa records whether any of the o-rings were damaged by contact with hot exhaust
gas.
if the id203 of damage is greater in cold weather then, in principle, nasa
might have forseen the possibility of the accident which occurred during a launch much
colder than any previous launch.

figure 3.13(b) plots y = presence of damage against x = temperature for the
launches prior to the challenger accident. the    gure does suggest that colder launches
are more likely to have damaged o-rings. what is wanted is a model for id203
of damage as a function of temperature, and a prediction for id203 of damage at
37   f, the temperature of the challenger launch.

3.3. generalized linear models

237

fitting straight lines to figure 3.13 doesn   t make sense. in panel (a) what we need is a

curve such that

1. e[y | x] = p[y = 1| x] is close to 0 when x is smaller than about 10 or 12 cm., and
2. e[y | x] = p[y = 1| x] is close to 1 when x is larger than about 25 or 30 cm.

in panel (b) we need a curve that goes in the opposite direction.

the most commonly adopted model in such situations is

e[y | x] = p[y = 1| x] =

e  0+  1x

1 + e  0+  1x

(3.20)

figure 3.14 shows the same data as figure 3.13 with some curves added according to
equation 3.20. the values of   0 and   1 are in table ??.

(a)

(b)

solid
dashed
dotted
solid
dashed
dotted

  0
-8
-7.5
-5
20
15
18

  1
.45
.36
.45
-.3
-.23
-.3

table 3.2:      s for figure 3.14

figure 3.14 was produced by the following snippet.

par ( mfrow=c(2,1) )
plot ( cones$dbh[ring1], mature[ring1], xlab="dbh",

ylab="pine cones present", main="(a)" )

x <- seq ( 4, 25, length=40 )
b0 <- c(-8, -7.5, -5)
b1 <- c ( .45, .36, .45 )
for ( i in 1:3 )

lines ( x, exp(b0[i] + b1[i]*x)/(1 + exp(b0[i] + b1[i]*x) ),

lty=i )

3.3. generalized linear models

238

figure 3.13: (a): pine cone presence/absence vs. dbh. (b): o-ring damage vs. launch
temperature

5101520250.00.40.8(a)dbhpine cones present5560657075800.00.40.8(b)temperaturedamage present3.3. generalized linear models

239

figure 3.14: (a): pine cone presence/absence vs. dbh. (b): o-ring damage vs. launch
temperature, with some id28 curves

5101520250.00.40.8(a)dbhpine cones present5560657075800.00.40.8(b)temperaturedamage present3.3. generalized linear models

240

plot ( orings$temp, orings$damage>0, xlab="temperature",

ylab="damage present", main="(b)" )

x <- seq ( 50, 82, length=40 )
b0 <- c(20, 15, 18)
b1 <- c ( -.3, -.23, -.3 )
for ( i in 1:3 )

lines ( x, exp(b0[i] + b1[i]*x)/(1 + exp(b0[i] + b1[i]*x) ),

lty=i )

model 3.20 is known as id28. let the i   th observation have covariate xi

and id203 of success   i = e[yi | xi]. de   ne
(cid:32)

(cid:33)

  i     log

  i
1       i

.

  i is called the logit of   i. the inverse transformation is

the id28 model is

  i =

e  i

1 + e  i

.

  i =   0 +   1xi.

this is called a generalized linear model or glm because it is a linear model for   , a
transformation of e(y | x) rather than for e(y | x) directly. the quantity   0 +   1x is called
the linear predictor. if   1 > 0, then as x     +   ,        1 and as x           ,        0. if
  1 < 0 the situation is reversed.   0 is like an intercept; it controls how far to the left or
right the curve is.   1 is like a slope; it controls how quickly the curve moves between its
two asymptotes.
id28 and, indeed, all generalized linear models di   er from linear regres-
sion in two ways: the regression function is nonlinear and the distribution of y | x is not
normal. these di   erences imply that the methods we used to analyze linear models are
not correct for generalized linear models. we need to derive the likelihood function and
   nd new calculational algorithms.

3.3. generalized linear models

the likelihood function is derived from    rst principles.

p(y1, . . . , yn | x1, . . . , xn,   0,   1) =

i

(cid:89)
(cid:89)
(cid:89)
(cid:89)

i

i:yi=1

=

=

=

p(yi | xi,   0,   1)
(cid:89)
i (1       i)1   yi
  yi
(1       i)
(cid:89)

i:yi=0
e  0+  1xi

  i

241

1

1 + e  0+  1xi

i:yi=1

i:yi=0

1 + e  0+  1xi

this is a rather complicated function of the two variables (  0,   1). however, a central
limit theorem applies to give a likelihood function for   0 and   1 that is accurate when
n is reasonable large. the theory is beyond the scope of this book, but r will do the
calculations for us. we illustrate with the pine cone data from example 3.8. figure 3.15
shows the likelihood function.

figure 3.15 was produced by the following snippet.

mature <- cones$x2000[ring1] > 0
b0 <- seq ( -11, -4, length=60 )
b1 <- seq ( .15, .5, length=60 )
lik <- matrix ( na, 60, 60 )
for ( i in 1:60 )
for ( j in 1:60 ) {

linpred <- b0[i] + b1[j]*cones$dbh[ring1]
theta
lik[i,j] <- prod ( theta^mature * (1-theta)^(1-mature) )

<- exp(linpred) / (1+exp(linpred))

}
lik <- lik/max(lik)
contour ( b0, b1, lik, xlab=expression(beta[0]),

ylab=expression(beta[1]) )

    mature is an indicator variable for whether a tree has at least one pine cone.
    the lines b0 <- ... and b1 <- ... set some values of (  0,   1) at which to eval-
uate the likelihood. they were chosen after looking at the output from    tting the
id28 model.

3.3. generalized linear models

242

figure 3.15: likelihood function for the pine cone data

!0!1!11!10!9!8!7!6!5!40.150.200.250.300.350.400.450.503.3. generalized linear models

243

    lik <- ... creates a matrix to hold values of the likelihood function.
    linpred is the linear predictor. because cones$dbh[ring1] is a vector, linpred
is also a vector. therefore theta is also a vector, as is theta  mature *
(1-theta)  (1-mature). it will help your understanding of r to understand what
these vectors are.

one notable feature of figure 3.15 is the diagonal slope of the contour ellipses. the
meaning is that we do not have independent information about   0 and   1. for example if
we thought, for some reason, that   0        9, then we could be fairly con   dent that   1 is
in the neighborhood of about .4 to about .45. but if we thought   0        6, then we would
believe that   1 is in the neighborhood of about .25 to about .3. more generally, if we knew
  0, then we could estimate   1 to within a range of about .05. but since we don   t know   0,
we can only say that   1 is likely to be somewhere between about .2 and .6. the dependent
information for (  0,   1) means that our marginal information for   1 is much less precise
than our conditional information for   1 given   0. that imprecise marginal information is
re   ected in the output from r, shown in the following snippet which    ts the model and
summarizes the result.

cones <- read.table ( "data/pinecones.dat", header=t )
ring1 <- cones$ring == 1
mature <- cones$x2000[ring1] > 0

fit <- glm ( mature ~ cones$dbh[ring1], family=binomial )
summary ( fit )
...

coefficients:

estimate std. error z value pr(>|z|)
-7.46684
0.36151

(intercept)
cones$dbh[ring1]
...
    cones ... reads in the data. there is one line for each tree. the    rst few lines

-4.242 2.21e-05 ***
3.874 0.000107 ***

1.76004
0.09331

look like this.

ring
1

id xcoor ycoor spec

dbh x1998 x1999 x2000

1 11003

0.71

0.53 pita 19.4

0

0

0

3.3. generalized linear models

244

2
3

1 11004
1 11011

1.26
1.44

2.36 pita 14.1
6.16 pita 19.4

0
0

0
6

4
0

id is a unique identifying number for each tree; xcoor and ycoor are coordinates in
the plane; spec is the species; pita stands for pinus taeda or loblolly pine, x1998,
x1999 and x2000 are the numbers of pine cones each year.

    ring1 ... is an indicator variable for trees in ring 1.
    mature ... indicates whether the tree had any cones at all in 2000. it is not a

precise indicator of maturity.

    fit ...    ts the id28. glm    ts a generalized linear model. the argu-
ment family=binomial tells r what kind of data we have. in this case it   s binomial
because y is either a success or failure.

    summary(fit) shows that (    0,     1)     (   7.5, 0.36). the sd   s are about 1.8 and .1.
these values guided the choice of b0 and b1 in creating figure 3.15. it   s the sd
of about .1 that says we can estimate   1 to within an interval of about .4, or about
  2sd   s.

3.3.2 poisson regression
section 3.3.1 dealt with the case where the response variable y was bernoulli. another
common situation is where the response y is a count. in that case it is natural to adopt,
at least provisionally, a model in which y has a poisson distribution: y     poi(  ). when
there are covariates x, then    may depend on x. it is common to adopt the regression

log    =   0 +   1x

(3.21)

model 3.21 is another example of a generalized linear model. example 3.10 illustrates its
use.
example 3.10 (seedlings, continued)
several earlier examples have discussed data from the coweeta lter on the emer-
gence and survival of red maple (acer rubrum) seedlings. example 3.2 showed that
the arrival rate of seedlings seemed to vary by quadrat. refer especially to figure 3.4.
example 3.10 follows up that observation more quantitatively.

roughly speaking, new seedlings arise in a two-step process. first, a seed falls
out of the sky, then it germinates and emerges from the ground. we may reasonably

3.3. generalized linear models

245

assume that the emergence of one seedling does not affect the emergence of another
(they   re too small to interfere with each other.) and hence that the number of new
seedlings has a poi(  ) distribution. let yi j be the number of new seedlings observed
in quadrat i and year j. here are two    ts in r, one in which    varies by quadrat and
one in which it doesn   t.

new <- data.frame ( count=count,

quadrat=as.factor(quadrat),
year=as.factor(year)

)

fit0 <- glm ( count ~ 1, family=poisson, data=new )
fit1 <- glm ( count ~ quadrat, family=poisson, data=new )

    the command data.frame creates a dataframe. r describes dataframes as

   tightly coupled collections of variables which share many of the
properties of matrices and of lists, used as the fundamental data struc-
ture by most of r   s modeling software.   

we created a dataframe called new, having three columns called count, quadrat,
and year. each row of new contains a count (of new seedlings), a quadrat num-
ber and a year. there are as many rows as there are observations.

    the command as.factor turns its argument into a factor. that is, instead of
treating quadrat and year as numerical variables, we treat them as indicator
variables. that   s because we don   t want a quadrat variable running from 1 to
60 implying that the 60th quadrat has 60 times as much of something as the 1st
quadrat. we want the quadrat numbers to act as labels, not as numbers.

    glm stands for generalized linear model. the family=poisson argument says
what kind of data we   re modelling. data=new says the data are to be found in a
dataframe called new.

    the formula count    1 says to    t a model with only an intercept, no covariates.
    the formula count    quadrat says to    t a model in which quadrat is a covari-
ate. of course that   s really 59 new covariates, indicator variables for 59 of the 60
quadrats.

3.3. generalized linear models

246

to examine the two    ts and see which we prefer, we plotted actual versus    tted
values and residuals versus    tted values in figure 3.16. panels (a) and (b) are from
fit0. because there may be overplotting, we jittered the points and replotted them
in panels (c) and (d). panels (e) and (f) are jittered values from fit1. comparison
of panels (c) to (e) and (d) to (f) shows that fit1 predicts more accurately and has
smaller residuals than fit0. that   s consistent with our reading of figure 3.4. so we
prefer fit1.

figure 3.17 continues the story. panel (a) shows residuals from fit1 plotted
against year. there is a clear difference between years. years 1, 3, and 5 are high
while years 2 and 4 are low. so perhaps we should use year as a predictor. that   s
done by

fit2 <- glm ( count ~ quadrat+year, family=poisson,

data=new )

panels (b) and (c) show diagnostic plots for fit2. compare to similar panels in fig-
ure 3.16 to see whether using year makes an appreciable difference to the    t.

figure 3.16 was created with the following snippet.

par ( mfrow=c(3,2) )
plot ( fitted(fit0), new$count, xlab="fitted values",

ylab="actual values", main="(a)" )

abline ( 0, 1 )
plot ( fitted(fit0), residuals(fit0), xlab="fitted values",

ylab="residuals", main="(b)" )

plot ( jitter(fitted(fit0)), jitter(new$count),

xlab="fitted values", ylab="actual values",
main="(c)" )

abline ( 0, 1 )
plot ( jitter(fitted(fit0)), jitter(residuals(fit0)),

xlab="fitted values", ylab="residuals", main="(d)" )

plot ( jitter(fitted(fit1)), jitter(new$count),

xlab="fitted values", ylab="actual values",
main="(e)" )

abline ( 0, 1 )
plot ( jitter(fitted(fit1)), jitter(residuals(fit1)),

3.3. generalized linear models

247

figure 3.16: actual vs.    tted and residuals vs.    tted for the new seedling data. (a) and
(b): fit0. (c) and (d): jittered values from fit0. (e) and (f): jittered values from fit1.

0.60.81.01.2051015(a)fitted valuesactual values0.60.81.01.202468(b)fitted valuesresiduals0.8650.8750.8850.895051015(c)fitted valuesactual values0.8650.8750.8850.89502468(d)fitted valuesresiduals012345051015(e)fitted valuesactual values012345!3!113(f)fitted valuesresiduals3.4. predictions from regression

248

xlab="fitted values", ylab="residuals", main="(f)" )

the following snippet shows how figure 3.17 was made in r.

par ( mfrow=c(2,2) )
plot ( new$year, residuals(fit1),

xlab="year", ylab="residuals", main="(a)" )

plot ( jitter(fitted(fit2)), jitter(new$count),

xlab="fitted values", ylab="actual values",
main="(b)" )

abline ( 0, 1 )
plot ( jitter(fitted(fit2)), jitter(residuals(fit2)),

xlab="fitted values", ylab="residuals", main="(c)" )

3.4 predictions from regression

from a regression equation, if we have estimates of the      s we can
1. plug in the values of the x   s we have to get    tted values, and

2. plug in the values of x for new or future cases to get predicted values.

we illustrate with the mtcars data.
example 3.11 (mtcars, continued)
example 3.7 concluded with a comparison of three models for mpg. here we continue
that comparison by seeing whether the models make substantially different predictions
for any of the cars in the data set. for each car we know its weight and horsepower
and we have estimates of all the parameters in equations 3.17, 3.18, and 3.19, so we
can compute its    tted values from all three models. in symbols,

  yi =     0 +     1wti
  yi =     0 +     1hpi
  yi =     0 +     1wti +     2hpi

(from 3.17)
(from 3.18)
(from 3.19)

3.4. predictions from regression

249

figure 3.17: new seedling data. (a): residuals from fit1 vs. year. (b): actual vs.    tted
from fit2. (c): residuals vs.    tted from fit2.

12345!3!101234(a)yearresiduals02468051015(b)fitted valuesactual values02468!3!2!10123(c)fitted valuesresiduals3.4. predictions from regression

250

we plot the    tted values against each other to see whether there are any noticable
differences. figure 3.18 displays the result. figure 3.18 shows that the mpg.fit1 and
mpg.fit3 produce    tted values substantially similar to each other and agreeing fairly
well with actual values, while mpg.fit2 produces    tted values that differ somewhat
from the others and from the actual values, at least for a few cars. this is another
reason to prefer mpg.fit1 and mpg.fit3 to mpg.fit2. in example 3.7 this lack of    t
showed up as a higher      for mpg.fit2 than for mpg.fit1.

figure 3.18 was made with the following snippet.

fitted.mpg <- cbind ( fitted(mpg.fit1), fitted(mpg.fit2),

fitted(mpg.fit3), mtcars$mpg )

pairs ( fitted.mpg, labels = c ( "fitted from wt",

"fitted from hp", "fitted from both", "actual mpg" ) )

    fitted(xyz) extracts    tted values. xyz can be any model previously    tted by

lm, glm, or other r functions to    t models.

in example 3.5 we posited model 3.10:

y =   0 +   1x +  

(3.22)

where x was mean temperature during the week and y was ice cream consumption during
the week. now we want to    t the model to the data and use the    t to predict consumption.
in addition, we want to say how accurate the predictions are. let x f be the predicted mean
temperature for some future week and y f be consumption. x f is known; y f is not. our
model says

where

y f     n(   f ,   )

   f =   0 +   1x f

   f is unknown because   0 and   1 are unknown. but (  0,   1) can be estimated from the
data, so we can form an estimate

     f =     0 +     1x f

3.4. predictions from regression

251

figure 3.18: actual mpg and    tted values from three models

fitted from wt1020102030101520253010152025fitted from hpfitted from both10152025301020301015202530102030actual mpg3.5. exercises

252

how accurate is      f as an estimate of    f ? the answer depends on how accurate (    0,     1) are
as estimates of (  0,   1). advanced theory about normal distributions, beyond the scope of
this book, tells us

     f     n(   f ,      t)

for some      t which may depend on x f ; we have omitted the dependency from the notation.
   f is the average ice cream consumption in all weeks whose mean temperature is x f .
so      f is also an estimator of y f . but in any particular week the actual consumption won   t
exactly equal    f . our model says
where       n(0,   ). so in any given week y f will di   er from    f by an amount up to about
  2   or so.

y f =    f +  

thus the uncertainty      t in estimating y f has two components: (1) the uncertainty
of    f which comes because we don   t know (  0,   1) and (2) the variability    due to  .
we can   t say in advance which component will dominate. sometimes it will be the    rst,
sometimes the second. what we can say is that as we collect more and more data, we
learn (  0,   1) more accurately, so the    rst component becomes negligible and the second
component dominates. when that happens, we won   t go far wrong by simply ignoring the
   rst component.

3.5 exercises

1.

(a) use the attenu , airquality and faithful datasets to reproduce figures 3.1 (a),

(b) and (d).

(b) add lowess and supsmu    ts.
(c) figure out how to use the tuning parameters and try out several di   erent values.

(use the help or help.start functions.)

2. with the mtcars dataset, use a scatterplot smoother to plot the relationship between
weight and displacement. does it matter which we think of as x and which as y? is
one way more natural than the other?

3. download the 1970 draft data from dasl and reproduce figure 3.3. use the tun-
ing parameters (f for lowess; span for supsmu) to draw smoother and wigglier
scatterplot smoothers.

4. how could you test whether the draft numbers in example 3.1 were generated uni-
formly? what would h0 be? what would be a good test statistic w? how would
estimate the distribution of w under h0?

3.5. exercises

253

5. using the information in example 3.6 estimate the mean calorie content of meat and

poultry hot dogs.

6. refer to examples 2.2, 3.4, and 3.6.

(a) formulate statistical hypotheses for testing whether the mean calorie content

of poultry hot dogs is equal to the mean calorie content of beef hot dogs.

(b) what statistic will you use?
(c) what should that statistic be if h0 is true?
(d) how many sd   s is it o   ?
(e) what do you conclude?
(f) what about meat hot dogs?

7. refer to examples 2.2, 3.4, and 3.6. figure 3.5 shows plenty of overlap in the calorie
contents of beef and poultry hot dogs. i.e., there are many poultry hot dogs with
more calories than many beef hot dogs. but figure 3.9 shows very little support for
values of   p near 0. can that be right? explain?

8. examples 2.2, 3.4, and 3.6 analyze the calorie content of beef, meat, and poultry
hot dogs. create a similar analysis, but for sodium content. your analysis should
cover at least the following steps.

(a) a stripchart similar to figure 3.5 and density estimates similar to figure 3.6.
(b) a model similar to model 3.4, including de   nitions of the parameters.
(c) indicator variables analogous to those in equation 3.6.
(d) a model similar to model 3.7, including de   nitions of all the terms.
(e) a    t in r, similar to that in example 3.6.
(f) parameter estimates and sd   s.
(g) plots of likelihood functions, analagous to figure 3.9.
(h) interpretation.

9. analyze the plantgrowth data from page 214. state your conclusion about whether

the treatments are e   ective. support you conclusion with analysis.

10. analyze the ice cream data from example 3.5. write a model similar to model 3.7,
including de   nitions of all the terms. use r to    t the model. estimate the coe   cients
and say how accurate your estimates are. if temperature increases by about 5    f,

3.5. exercises

254

about how much would you expect ice cream consumption to increase? make a
plot similar to figure 3.8, but add on the line implied by equation 3.10 and your
estimates of   0 and   1.

11. verify the claim that for equation 3.18     0     30,     1        .07 and          3.9.
12. does a football    lled with helium travel further than one    lled with air? dasl has
a data set that attempts to answer the question. go to dasl, http://lib.stat.
cmu.edu/dasl, download the data set helium football and read the story. use
what you know about linear models to analyze the data and reach a conclusion. you
must decide whether to include data from the    rst several kicks and from kicks that
appear to be    ubbed. does your decision a   ect your conclusion?

13. use the plantgrowth data from r. refer to page 214 and equation 3.5.

(a) estimate   c,   t1,   t2 and   .
(b) test the hypothesis   t1 =   c.
(c) test the hypothesis   t1 =   t2.

14. jack and jill, two duke university sophomores, have to choose their majors. they
both love poetry so they might choose to be english majors. then their futures
would be full of black clothes, black co   ee, low paying jobs, and occasional vol-
umes of poetry published by independent, non-commercial presses. on the other
hand, they both see the value of money, so they could choose to be economics ma-
jors. then their futures would be full of power suits, double cappucinos, investment
banking and, at least for jack, membership in the augusta national golf club. but
which would make them more happy?
to investigate, they conduct a survey. not wanting to embarass their friends and
themselves, jack and jill leave duke   s campus and go up chapel hill to interview
poets and investment bankers at unc-ch. in all of chapel hill there are 90 po-
ets but only 10 investment bankers. j&j interview them all. from the interviews
j&j compute the happiness quotient or hq of each subject. the hq   s are in fig-
ure 3.19. j&j also record two indicator variables for each person: pi = 1 or 0 (for
poets and bankers); bi = 1 or 0 (for bankers and poets).
jill and jack each write a statistical model:

jill: hqi =   0 +   1pi +  i

jack: hqi =   1pi +   2bi +  i

(a) say in words what are   0,   1,   1 and   2.

3.5. exercises

255

figure 3.19: happiness quotient of bankers and poets

39404142434445bphq3.5. exercises

256

(b) express   1 and   2 in terms of   0 and   1.
(c) in their data set j&j    nd hq = 43 among poets, hq = 44 among bankers and
    2 = 1. (subjects report disappointment with their favorite basketball team as
the primary reason for low hq.) find sensible numerical estimates of   0,   1,
  1 and   2.

15. is poverty related to academic performance in school? the    le

schools_poverty

at this text   s website contains relevant data from the durham, nc school system in
2001. the    rst few lines are

pfl eog type
e
m
e

66
32
65

65
73
65

1
2
3

each school in the durham public school system is represented by one line in the
   le. the variable pfl stands for percent free lunch. it records the percentage of the
school   s student population that quali   es for a free lunch program. it is an indicator
of poverty. the variable eog stands for end of grade. it is the school   s average score
on end of grade tests and is an indicator of academic success. finally, type indicates
the type of school     e, m, or h for elementary, middle or high school, respectively.
you are to investigate whether pfl is predictive of eog.

(a) read the data into r and plot it in a sensible way. use di   erent plot symbols

for the three types of schools.

(b) does there appear to be a relationship between pfl and eog? is the relation-
ship the same for the three types of schools? decide whether the rest of your
analysis should include all types of schools, or only one or two.

(c) using the types of schools you think best, remake the plot and add a regression

line. say in words what the regression line means.

(d) during the 2000-2001 school year duke university, in durham, nc, sponsored
a tutoring program in one of the elementary schools. many duke students
served as tutors. from looking at the plot, and assuming the program was
successful, can you    gure out which school it was?

3.5. exercises

257

16. load mtcars into an r session. use r to    nd the m.l.e.   s (    0,     1). con   rm that they
agree with the line drawn in figure 3.11(a). starting from equation 3.17, derive the
m.l.e.   s for   0 and   1.

17. get more current data similar to mtcars. carry out a regression analysis similar to
example 3.7. have relationships among the variables changed over time? what are
now the most important predictors of mpg?

18. repeat the id28 of am on wt, but use hp instead of wt.

19. a researcher randomly selects cities in the us. for each city she records the number
of bars yi and the number of churches zi. in the regression equation zi =   0 +   1yi do
you expect   1 to be positive, negative, or around 0?

20.

(a) jane writes the following r code:

x <- runif ( 60, -1, 1 )

describe x. is it a number, a vector, or a matrix? what is in it?

(b) now she writes

y <- x + rnorm ( 60 )
myfit <- lm ( y ~ x )

make an intelligent guess of what she found for     0 and     1.

(c) using advanced statistical theory she calculates

sd(    0) = .13
sd(    1) = .22

finally she writes

in0 <- 0
in1 <- 0
for ( i in 1:100 ) {

x <- runif ( 60, -1, 1 )
y <- x + rnorm ( 60 )
fit <- lm ( y ~ x )
if ( abs(fit$coef[1]) <= .26 ) in0 <- in0 + 1

3.5. exercises

}

if ( abs(fit$coef[2]-1) <= .44 ) in1 <- in1 + 1

258

make an intelligent guess of in0 and in1 after jane ran this code.

21. the army is testing a new mortar. they    re a shell up at an angle of 60    and
track its progress with a laser. let t1, t2, . . . , t100 be equally spaced times from
t1 = (time of    ring) to t100 = (time when it lands). let y1, . . . , y100 be the shell   s
heights and z1, . . . , z100 be the shell   s distance from the howitzer (measured horizon-
tally along the ground) at times t1, t2, . . . , t100. the yi   s and zi   s are measured by the
laser. the measurements are not perfect; there is some measurement error. in an-
swering the following questions you may assume that the shell   s horizontal speed
remains constant until it falls to ground.

(a) true or false: the equation

should    t the data well.

(b) true or false: the equation

yi =   0 +   1ti +  i

yi =   0 +   1ti +   2t2

i +  i

should    t the data well.

(c) true or false: the equation

should    t the data well.

(d) true or false: the equation

zi =   0 +   1ti +  i

zi =   0 +   1ti +   2t2

i +  i

should    t the data well.

(e) true or false: the equation

yi =   0 +   1zi +  i

should    t the data well.

(3.23)

(3.24)

(3.25)

(3.26)

3.5. exercises

(f) true or false: the equation

yi =   0 +   1zi +   2z2

i +  i

should    t the data well.

(g) approximately what value did the army    nd for     0 in part (b)?
(h) approximately what value did the army    nd for     2 in part (d)?

259

(3.27)

22. some nonstatisticians (not readers of this book, we hope) do statistical analyses
based almost solely on numerical calculations and don   t use plots. r comes with the
data set anscombe which demonstrates the value of plots. type data(anscombe)
to load the data into your r session. it is an 11 by 8 dataframe. the variable names
are x1, x2, x3, x4, y1, y2, y3, and y4.

(a) start with x1 and y1. use lm to model y1 as a function of x1. print a summary

of the regression so you can see     0,     1, and     .

(b) do the same for the other pairs: x2 and y2, x3 and y3, x4 and y4.
(c) what do you conclude so far?
(d) plot y1 versus x1. repeat for each pair. you may want to put all four plots
on the same page. (it   s not necessary, but you should know how to draw the
regression line on each plot. do you?)

(e) what do you conclude?
(f) are any of these pairs well described by id75? how would you
describe the others? if the others were not arti   cially constructed data, but
were real, how would you analyze them?

23. here   s some r code:

x <- rnorm ( 1, 2, 3 )
y <- -2*x + 1 + rnorm ( 1, 0, 1 )

(a) what is the marginal distribution of x?
(b) write down the marginal density of x.
(c) what is the conditional distribution of y given x?
(d) write down the conditional density of y given x.

3.5. exercises

260

(e) write down the joint density of (x,y).

here   s more r code:

n.sim <- 1000
w <- rep ( na, n.sim )
for ( i in 1:n.sim ) {

x <- rnorm ( 50, 2, 3 )
y <- -2*x + 1 + rnorm ( 50, 0, 1 )
fit <- lm ( y ~ x )
w[i] <- fit$coef[2]

}
z1 <- mean ( w )
z2 <- sqrt ( var ( w + 2 ) )

what does z1 estimate? what does z2 estimate? why did the code writer write
sqrt ( var ( w + 2 ) ) instead of sqrt ( var ( w ) )? does it matter?

24. a statistician thinks the regression equation yi =   0 +   1xi +  i    ts her data well. she
would like to learn   1. she is able to measure the yi   s accurately but can measure the
xi   s only approximately. in fact, she can measure wi = xi +   i where   i     n(0, .1).
so she can    t the regression equation yi =      
1) might
be di   erent than (  0,   1) because they   re for the wi   s, not the xi   s. so the statistician
writes the following r code.

i . note that (     

1wi +     

0,      

+      

0

n.sim <- 1000
b.0 <- -10:10
b.1 <- -10:10
n <- 50
for ( i in 1:21 )
for ( j in 1:21 ) {

val <- rep ( na, n.sim )
for ( k in 1:n.sim ) {

x <- rnorm ( n )
w <- x + rnorm ( n, 0, sqrt(.1) )
y <- b.0[i] + x * b.1[j] + rnorm ( n, 0, 3 )
fit <- lm ( y ~ w )
val[k] <- fit$coef[2]

3.5. exercises

261

}
m <- mean ( val )
sd <- sqrt ( var ( val ) )
print ( c ( m, sd ) )

}

what is she trying to do? the last time through the loop, the print statement yields
[1] 9.0805986 0.5857724. what does this show?

25. the purpose of this exercise is to familiarize yourself with plotting logistic regres-

sion curves and getting a feel for the meaning of   0 and   1.

(a) choose some values of x. you will want between about 20 and 100 evenly

spaced values. these will become the abscissa of your plot.

(b) choose some values of   0 and   1. you are trying to see how di   erent values
of the      s a   ect the curve. so you might begin with a single value of   1 and
several values of   0, or vice versa.

(c) for each choice of (  0,   1) calculate the set of   i = e  0+  1xi/(1 + e  0+  1xi) and
plot   i versus xi. you should get sigmoidal shaped curves. these are logistic
regression curves.

(d) you may    nd that the particular x   s and      s you chose do not yield a visually
pleasing result. perhaps all your      s are too close to 0 or too close to 1. in that
case, go back and choose di   erent values. you will have to play around until
you    nd x   s and      s compatible with each other.

26. carry out a id28 analysis of the o-ring data. what does your analysis
say about the id203 of o-ring damage at 36   f, the temperature of the chal-
lenger launch. how relevant should such an analysis have been to the decision of
whether to postpone the launch?

27. this exercise refers to example 3.10.

(a) why are the points lined up vertically in figure 3.16, panels (a) and (b)?
(b) why do panels (c) and (d) appear to have more points than panels (a) and (b)?
(c) if there were no jittering, how many distinct values would there be on the

abscissa of panels (c) and (d)?

3.5. exercises

262

(d) download the seedling data. fit a model in which year is a predictor but
quadrat is not. compare to fit1. which do you prefer? which variable is
more important: quadrat or year? or are they both important?

chapter 4

more id203

4.1 more id203 density

section 1.2 on page 6 introduced id203 densities. section 4.1 discusses them further
and gives a formal de   nition.

(cid:12)(cid:12)(cid:12)b=x and therefore that we can de   ne the pdf by fx(x)     f(cid:48)

let x be a continuous random variable with cdf fx. equation 1.2 on page 8 implies
x(x) =

(cid:12)(cid:12)(cid:12)b=x. in fact, this de   nition is a little too restrictive. the key property of pdf   s is

that fx(x) = d
d
db fx(b)
that the id203 of a set a is given by the integral of the pdf. i.e.,

db fx(b)

p[x     a] =

fx(x) dx

(cid:82)

a f     =(cid:82)

but if f     is a function that di   ers from fx at only countably many points then, for any set
a,

a fx, so we could just as well have de   ned

p[x     a] =

f    (x) dx

there are in   nitely many functions having the same integrals as fx and f    . these functions
di   er from each other on    sets of measure zero   , terminology beyond our scope but de   ned
in books on measure theory. for our purposes we can think of sets of measure zero as sets
containing at most countably many points. in e   ect, the pdf of x can be arbitrarily changed
on sets of measure zero. it does not matter which of the many equivalent functions we use
as the id203 density of x. thus, we de   ne
de   nition 4.1. any function f such that, for all intervals a,

p[x     a] =

f (x) dx

a

(cid:90)

(cid:90)

a

a

(cid:90)

263

a px(x) dx. let z = g(x) and change

4.2. random vectors

264

is called a id203 density function, or pdf, for the random variable x. any such func-
tion may be denoted fx.

de   nition 4.1 can be used in an alternate proof of theorem 1.1 on page 12. the central
step in the proof is just a change-of-variable in an integral, showing that theorem 1.1 is,
in essence, just a change of variables. for convenience we restate the theorem before
reproving it.

theorem 1.1 let x be a random variable with pdf px. let g be a di   erentiable,

monotonic, invertible function and de   ne z = g(x). then the pdf of z is

pz(t) = px(g   1(t))

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)d g   1(t)
proof. for any set a, p[z     g(a)] = p[x     a] = (cid:82)
(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)dx

variables in the integral to get

p[z     g(a)] =

px(g   1(z))

(cid:90)

d t

dz

g(a)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) dz

i.e., p[z     g(a)] = (cid:82)

pz(z) = px(g   1(z))|dx/dz|.

g(a) something dz. therefore something must be pz(z). hence,
(cid:3)

4.2 random vectors

it is often useful, even essential, to talk about several random variables simultaneously.
we have seen many examples throughout the text beginning with section 1.5 on joint,
marginal, and conditional probabilities. section 4.2 reviews the basics and sets out new
id203 theory for multiple random variables.

let x1, . . . , xn be a set of n random variables. the n-dimensional vector (cid:126)x = (x1, . . . , xn)
is called a multivariate random variable or random vector. as explained below, (cid:126)x has a
pdf or pmf, a cdf, an expected value, and a covariance matrix, all analogous to univariate
random variables.

4.2.1 densities of random vectors

when x1, . . . , xn are continuous then (cid:126)x has a pdf, written

p (cid:126)x(x1, . . . , xn).

4.2. random vectors

265

as in the univariate case, the pdf is any function whose integral yields probabilities. that
is, if a is a region in rn then

p[ (cid:126)x     a] =

p (cid:126)x(x1,       , xn) dx1 . . . dxn

(cid:40)

a

for example, let x1     exp(1); x2     exp(1/2); x1     x2; and (cid:126)x = (x1, x2) and suppose
we want to    nd p[|x1     x2|     1]. our plan for solving this problem is to    nd the joint
density p (cid:126)x, then integrate p (cid:126)x over the region a where |x1     x2|     1. because x1     x2, the
joint density is

to    nd the region a over which to integrate, it helps to plot the x1-x2 plane. making the
plot is left as an exercise.

e   x2/2

p (cid:126)x(x1, x2) = px1(x1)px2(x2) = e   x1    1
2
(cid:34)
(cid:90) x1+1

p (cid:126)x(x1, x2) dx1 dx2

(cid:90) x1+1

(cid:90)    

a

e   x1e   x2/2 dx2 dx1 +

1
2

1

x1   1

p[|x1     x2|     1] =
(cid:90) 1

=

1
2

0

0

e   x1e   x2/2 dx2 dx1

    0.47 (4.1)

the random variables (x1, . . . , xn) are said to be mutually independent or jointly inde-

pendent if

p (cid:126)x(x1, . . . , xn) = px1(x1)              pxn(xn)

for all vectors (x1, . . . , xn).

mutual independence implies pairwise independence. i.e., if (x1, . . . , xn) are mutually
independent, then any pair (xi, x j) are also independent. the proof is left as an exercise.
it is curious but true that pairwise independence does not imply joint independence. for
an example, consider the discrete three-dimensional distribution on (cid:126)x = (x1, x2, x3) with

p[(x1, x2, x3) = (0, 0, 0)]
= p[(x1, x2, x3) = (1, 0, 1)]
= p[(x1, x2, x3) = (0, 1, 1)]
= p[(x1, x2, x3) = (1, 1, 0)] = 1/4

(4.2)

it is easily veri   ed that x1     x2, x1     x3, and x2     x3 but that x1, x2, and x3 are not
mutually independent. see exercise 6.

4.2. random vectors

266

4.2.2 moments of random vectors

when (cid:126)x is a random vector, its expected value is also a vector.

e[ (cid:126)x]     (e[x1], . . . , e[xn])

when (cid:126)x     (x1, . . . , xn) is a random vector, instead of a variance it has a covariance matrix.
the i j   th entry of the covariance matrix is cov(xi, x j). the notation is

                                                   

  2
1   12
  12   2
2
...
...
  1n   2n

         1n
         2n
...
. . .
         2

n

                                                   

cov( (cid:126)x)        (cid:126)x

=

where   i j = cov(xi, x j) and   2
i

= var(xi). sometimes   2

i is also denoted   ii.

4.2.3 functions of random vectors
section 4.2.3 considers functions of random vectors. if g is an arbitrary function that maps
(cid:126)x to r then

(cid:40)

e[g( (cid:126)x)] =

g(x1, . . . , xn)p (cid:126)x(x1, . . . , xn) dx1        dxn

but it   s hard to say much in general about the variance of g( (cid:126)x). when g is a linear function
we can go farther, but    rst we need a lemma.

lemma 4.1. let x1 and x2 be random variables and y = x1 + x2. then

1. e[y] = e[x1] + e[x2]

2. var(y) = var(x1) + var(x2) + 2 cov(x1, x2)

proof. left as exercise.

(cid:3)

now we can deal with linear combinations of random vectors.

theorem 4.2. let (cid:126)a = (a1, . . . , an) be an n-dimensional vector and de   ne y = (cid:126)at (cid:126)x =

(cid:80) aixi. then,
1. e[y] = e[(cid:80) aixi] =(cid:80) aie[xi]
i var(xi) + 2(cid:80)n   1
2. var(y) =(cid:80) a2

i=1

(cid:80)n

j=i+1 aia j cov(xi, x j) = (cid:126)at   (cid:126)x(cid:126)a

4.2. random vectors

proof. use lemma 4.1 and theorems 1.3 (pg. 40) and 1.4 (pg. 41). see exercise 8.

267

(cid:3)

the next step is to consider several linear combinations simultaneously. for some

k     n, and for each i = 1, . . . , k, let

yi = ai1x1 +        ainxn =

ai jx j = (cid:126)at

i (cid:126)x

(cid:88)

j

where the ai j   s are arbitrary constants and (cid:126)ai = (ai1, . . . , ain). let (cid:126)y = (y1, . . . , yk). in
matrix notation,
where a is the k    n matrix of elements ai j. covariances of the yi   s are given by

(cid:126)y = a (cid:126)x

cov(yi, y j) = cov((cid:126)at

i (cid:126)x, (cid:126)at

j (cid:126)x)

n(cid:88)

n(cid:88)
n(cid:88)

k=1

=

=

cov(aikxk, a j(cid:96)x j)

n   1(cid:88)

n(cid:88)

(cid:96)=1

aika jk  2
k

+

(aika j(cid:96) + a jkai(cid:96))  k(cid:96)

k=1
= (cid:126)at
i   (cid:126)x(cid:126)a j

k=1

(cid:96)=k+1

combining the previous result with theorem 4.2 yields theorem 4.3.
theorem 4.3. let (cid:126)x be a random vector of dimension n with mean e[ (cid:126)x] =    and covari-
ance matrix cov( (cid:126)x) =   ; let a be a k    n matrix of rank k; and let (cid:126)y = a (cid:126)x. then

1. e[(cid:126)y] = a  , and
2. cov((cid:126)y) = a  a(cid:48)
finally, we take up the question of multivariate transformations, extending the univari-
ate version, theorem 1.1 (pg. 12). let (cid:126)x = (x1, . . . , xn) be an n-dimensional continuous
random vector with pdf f (cid:126)x. de   ne a new n-dimensional random vector (cid:126)y = (y1, . . . , yn) =
(g1( (cid:126)x), . . . , gn( (cid:126)x)) where the gi   s are di   erentiable functions and where the the transfor-
mation g : (cid:126)x (cid:55)    (cid:126)y is invertible. what is f(cid:126)y, the pdf of (cid:126)y?

let j be the so-called jacobian matrix of partial derivatives.

                                                      

   y1
   x1
   y2
   x1
...
   yn
   x1

                                                      

   y1
   xn
   y2
   xn
...
   yn
   xn

      
      
...
      

j =

and |j| be the absolute value of the determinant of j.

(cid:39)

4.2. random vectors

theorem 4.4.

268

f(cid:126)y((cid:126)y) = f (cid:126)x(g   1((cid:126)y))|j|   1

proof. the proof follows the alternate proof of theorem 1.1 on page 264. for any set a,
a p (cid:126)x((cid:126)x) dx1        dxn. let (cid:126)y = g((cid:126)x) and change variables in
p[(cid:126)y     g(a)] = p[ (cid:126)x     a] =
(cid:40)
the integral to get

p[(cid:126)y     g(a)] =

(cid:39)

p (cid:126)x(g   1((cid:126)y))|j|   1 dy1        dyn

g(a)

i.e., p[(cid:126)y     g(a)] =
hence, p(cid:126)y((cid:126)y) = p (cid:126)x(g   1((cid:126)y))|j|   1.

g(a) something dy1        dyn. therefore something must be p(cid:126)y((cid:126)y).
(cid:3)

to illustrate the use of theorem 4.4 we solve again an example previously given on
page 265, which we restate here. let x1     exp(1); x2     exp(2); x1     x2; and (cid:126)x =
(x1, x2) and suppose we want to    nd p[|x1     x2|     1]. we solved this problem previously
by    nding the joint density of (cid:126)x = (x1, x2), then integrating over the region where |x1    
x2|     1. our strategy this time is to de   ne new variables y1 = x1     x2 and y2, which is
essentially arbitrary,    nd the joint density of (cid:126)y = (y1, y2), then integrate over the region
where |y1|     1. we de   ne y1 = x1     x2 because that   s the variable we   re interested in. we
need a y2 because theorem 4.4 is for full rank transformations from rn to rn. the precise
de   nition of y2 is unimportant, as long as the transformation from (cid:126)x to (cid:126)y is di   erentiable
and invertible. for convenience, we de   ne y2 = x2. with these de   nitions,

j =

and

                      y1

   x1
   y2
   x1

                   =

(cid:32)1    1

(cid:33)

0

1

   y1
   x2
   y2
   x2

|j| = 1

x1 = y1 + y2

x2 = y2

from the solution on page 265 we know p (cid:126)x(x1, x2) = e   x1    1

2e   x2/2, so p(cid:126)y(y1, y2) =

269

4.2. random vectors
e   (y1+y2)    1

(cid:34)

2e   y2/2 = 1
2e   y1e   3y2/2. figure 4.1 shows the region over which to integrate.
(cid:90) 0
(cid:90) 0

e   3y2/2 dy2 dy1 +

e   3y2/2 dy2 dy1

p(cid:126)y(y1, y2) dy1 dy2

e   y1

1
2

   y1

=

a

0

e   y1

   1
1
3

p[|x1     x2|     1] = p[|y1|     1] =
(cid:90)    
1
e   y1(cid:104)   e   3y2/2(cid:105)   
2
(cid:90) 0
1
3
1
ey1/2(cid:12)(cid:12)(cid:12)0
ey1/2 dy1 +
3
(cid:104)
1     e   1/2(cid:105)
   1     1
2
3
3
1
3

dy1 +

2
3

1
3

   y1

   1

   1

=

+

=

=

=

0

(cid:90) 1
(cid:90)    
(cid:90) 1
e   y1(cid:104)   e   3y2/2(cid:105)   
(cid:90) 1
e   y1(cid:12)(cid:12)(cid:12)1
(cid:104)
1     e   1(cid:105)

e   y1 dy1

0

0

0

0

dy1

    0.47 (4.3)

figure 4.1: the (x1, x2) plane and the (y1, y2) plane. the light gray regions are where (cid:126)x
and (cid:126)y live. the dark gray regions are where |x1     x2|     1.

x1x2y1y24.3. representing distributions

270

figure 4.1 was produced by the following snippet.

par ( mar=c(0,0,0,0) )
plot ( c(0,6), c(0,2), type="n", xlab="", ylab="", xaxt="n",

yaxt="n", bty="n" )

polygon ( c(1,1.9,1.9,1), c(1,1,1.9,1.9), col=gray(.8),

border=na )

polygon ( c(1,1.2,1.9,1.9,1.7,1), c(1,1,1.7,1.9,1.9,1.2),

col=gray(.5), border=na )

segments ( 0, 1, 1.9, 1, lwd=3 )
segments ( 1, 0, 1, 1.9, lwd=3 )
text ( c(2,1), c(1,2), c(expression(bold(x[1])),

# x1 axis
# x2 axis

polygon ( c(5,5.9,5.9,4), c(1,1,1.9,1.9), col=gray(.8),

expression(bold(x[2]))) )

border=na )

polygon ( c(5,5.2,5.2,4.8,4.8), c(1,1,1.9,1.9,1.2),

col=gray(.5), border=na )

segments ( 4, 1, 5.9, 1, lwd=3 )
segments ( 5, 0, 5, 1.9, lwd=3 )
text ( c(6,5), c(1,2), c(expression(bold(y[1])),

# y1 axis
# y2 axis

expression(bold(y[2]))) )

arrows ( 2.5, 1, 3.5, 1, length=.2, lwd=2 )

the point of the example, of course, is the method, not the answer. functions of
random variables and random vectors are common in statistics and id203. there are
many methods to deal with them. the method of transforming the pdf is one that is often
useful.

4.3 representing distributions

we usually describe a random variable y through py     its pmf if y is discrete or its pdf if
y is continuous. but there are at least two alternatives. first, any random variable y can

271

(4.4)

4.3. representing distributions

                     
(cid:80)c
(cid:82) c

be described by its cumulative distribution function, or cdf, fy which is de   ned by

fy(c)     p[y     c] =

y=       p[y = y]
       p(y) dy

if y is discrete
if y is continuous.

equation 4.4 de   nes the cdf in terms of the pmf or pdf. it is also possible to go the

(cid:90) b
other way. if y is continuous, then for any number b     r

p(y     b) = f(b) =

p(y) dy

      

which shows by the fundamental theorem of calculus that p(y) = f(cid:48)(y). on the other
hand, if y is discrete, then p[y = y] = p[y     y]    p[y < y] = fy(y)    fy(y   ). (we use the
notation fy(y   ) to mean the limit of fy(z) as z approaches y from below. it is also written
lim    0 fy(y      )). thus the reverse of equation 4.4 is

                     fy(y)     fy(y   )

f(cid:48)
y(y)

py(y) =

if y is discrete
if y is continuous

(4.5)

equation 4.5 is correct except in one case which seldom arises in practice. it is possible
that fy(y) is a continuous but nondi   erentiable function, in which case y is a continuous
random variable, but y does not have a density. in this case there is a cdf fy without a
corresponding pmf or pdf.

figure 4.2 shows the pmf and cdf of the bin(10, .7) distribution and the pdf and cdf of

the exp(1) distribution.

figure 4.2 was produced by the following snippet.

par ( mfrow=c(2,2) )
y <- seq ( -1, 11, by=1 )
plot ( y, dbinom ( y, 10, .7 ), type="p", ylab="pmf",

main="bin (10, .7)" )

plot ( y, pbinom ( y, 10, .7 ), type="p", pch=16,

ylab="cdf", main="bin (10, .7)" )

segments ( -1:10, pbinom ( -1:10, 10, .7 ),

0:11, pbinom ( -1:10, 10, .7 ) )

y <- seq ( 0, 5, len=50 )
plot ( y, dexp ( y, 1 ), type="l", ylab="pdf", main="exp(1)" )
plot ( y, pexp ( y, 1 ), type="l", ylab="cdf", main="exp(1)" )

4.3. representing distributions

272

figure 4.2: pmf   s, pdf   s, and cdf   s

0480.000.100.20bin (10, .7)ypmf0480.00.40.8bin (10, .7)ycdf0123450.00.40.8exp(1)ypdf0123450.00.40.8exp(1)ycdf4.3. representing distributions

273

    segments ( x0, y0, x1, y1) draws line segments. the line segments run from

(x0,y0) to (x1,y1). the arguments may be vectors.

                     
(cid:80)
(cid:82)

the other alternative representation for y is its moment generating function or mgf my.

the moment generating function is de   ned as

my(t) = e[ety] =

y etypy(y)
etypy(y)

if y is discrete
if y is continuous

(4.6)

my is also known as the laplace transform of py.

because we de   ne the mgf as a sum or integral there is the question of whether the
sum or integral is    nite and hence whether the mgf is well de   ned. in equation 4.6, the
mgf is always de   ned at t = 0. (see exercise 12.) but even if my(t) is not well de   ned
(the integral or sum is not absolutely convergent) for large t, what matters for statistical
practice is whether my(t) is well de   ned in a neighborhood of 0, i.e. whether there exists a
   > 0 such that my(t) exists for t     (     ,   ). the moment generating function gets its name
from the following theorem.

theorem 4.5. if y has mgf my de   ned in a neighborhood of 0, then

proof. we provide the proof for the case n = 1. the proof for larger values of n is similar.

e[yn] = m(n)

dtn my(t)

(cid:12)(cid:12)(cid:12)(cid:12)0

d
dt

my(t)

(cid:12)(cid:12)(cid:12)(cid:12)0
(cid:12)(cid:12)(cid:12)(cid:12)0

y (0)     dn
(cid:90)
(cid:90) d
(cid:90)
(cid:90)

dt
yety

(cid:12)(cid:12)(cid:12)(cid:12)0

(cid:12)(cid:12)(cid:12)(cid:12)0

d
dt

ety

=

=

=

=

ypy(y) dy

etypy(y) dy

py(y) dy

py(y) dy

= e[y]

(cid:3)

4.3. representing distributions

274

the second line of the proof has the form

(cid:90)

d
dt

(cid:90) d

dt

f (t, y) dy,

f (t, y) dy =

an equality which is not necessarily true. it is true for    nice    functions f ; but establishing
exactly what    nice    means requires measure theory and is beyond the scope of this book.
we will continue to use the equality without thorough justi   cation.

one could, if one wished, calculate and plot my(t), though there is usually little point
in doing so. the main purpose of moment generating functions is in proving theorems and
not, as their name might suggest, in deriving moments. and mgf   s are useful in proving
theorems mostly because of the following two results.

theorem 4.6. let x and y be two random variables with moment generating functions
(assumed to exist) mx and my. if mx(t) = my(t) for all t in some neighborhood of 0, then
fx = fy; i.e., x and y have the same distribution.
theorem 4.7. let y1, . . . be a sequence of random variables with moment generating
functions (assumed to exist) my1, . . . . de   ne m(t) = limn       myn(t). if the limit exists for
all t in a neighborhood of 0, and if m(t) is a moment generating function, then there is a
unique cdf f such that

1.

f(y) = lim

n       fyn(y)

for all y where f is continuous and

2. m is the mgf of f.

theorems 4.6 and 4.7 both assume that the necessary mgf   s exist. it is inconvenient
that not all distributions have mgf   s. one can avoid the problem by using characteristic
functions (also known as fourier transforms) instead of moment generating functions. the
characteristic function is de   ned as

cy(t) = e[eity]

      1. all distributions have characteristic functions, and the characteristic

where i =
function completely characterizes the distribution, so characteristic functions are ideal for
our purpose. however, dealing with complex numbers presents its own inconveniences.
we shall not pursue this topic further. proofs of theorems 4.6 and 4.7 and similar results
for characteristic functions are omitted but may be found in more advanced books.

two more useful results are theorems 4.8 and 4.9.

4.4. exercises

275

theorem 4.8. let x be a random variable, a, b be constants, and de   ne y = ax + b. then
my(t) = ebtmx(at).

proof.

my(t) = e(cid:104)
e(ax+b)t(cid:105)
eatx(cid:105)
= ebte(cid:104)

= ebtmx(at)

theorem 4.9. let x and y be independent random variables. de   ne z = x + y. then

proof.

mz(t) = e(cid:104)

e(x+y)t(cid:105)

mz(t) = mx(t)my(t)

= e[exteyt] = e[ext]e[eyt] = mx(t)my(t)

(cid:3)

(cid:3)

corollary 4.10. let y1, . . . , yn be a collection of i.i.d. random variables each with mgf
my. de   ne x = y1 +        + yn. then

mx(t) = [my(t)]n

4.4 exercises

1. refer to equation 4.1 on page 265.

(a) to help visualize the joint density p (cid:126)x, make a contour plot. you will have to
choose some values of x1, some values of x2, and then evaluate p (cid:126)x(x1, x2) on
all pairs (x1, x2) and save the values in a matrix. finally, pass the values to the
contour function. choose values of x1 and x2 that help you visualize p (cid:126)x. you
may have to choose values by trial and error.

(b) draw a diagram that illustrates how to    nd the region a and the limits of inte-

gration in equation 4.1.

(c) supply the missing steps in equation 4.1. make sure you understand them.

verify the answer.

(d) use r to verify the answer to equation 4.1 by simulation.

4.4. exercises

276

2. refer to example 1.6 on page 43 on tree seedlings where n is the number of new
seedlings that emerge in a given year and x is the number that survive to the next
year. find p[x     1].

3. (x1, x2) have a joint distribution that is uniform on the unit disk. find p(x1,x2).
4. the random vector (x, y) has pdf p(x,y)(x, y)     ky for some k > 0 and (x, y) in the

triangular region bounded by the points (0, 0), (   1, 1), and (1, 1).
(a) find k.
(b) find p[y     1/2].
(c) find p[x     0].
(d) find p[|x     y|     1/2].

5. prove the assertion on page 265 that mutual independence implies pairwise inde-

pendence.

(a) begin with the case of three random variables (cid:126)x = (x1, x2, x3). prove that if

x1, x2, x3 are mutually independent, then any two of them are independent.

(b) generalize to the case (cid:126)x = (x1, . . . , xn).

6. refer to equation 4.2 on page 265. verify that x1     x2, x1     x3, and x2     x3 but

that x1, x2, and x3 are not mutually independent.

7. prove lemma 4.1

8. fill in the proof of theorem 4.2 on page 266.

9. x and y are uniformly distributed in the rectangle whose corners are (1, 0), (0, 1),

(   1, 0), and (0,   1).
(a)

i. find p(x, y).
ii. are x and y independent?
iii. find the marginal densities p(x) and p(y).
iv. find the conditional densities p(x| y) and p(y| x).
v. find e[x], e[x | y = .5], and e[x | y =    .5].

(b) let u = x + y and v = x     y.

i. find the region where u and v live.
ii. find the joint density p(u, v).

4.4. exercises

277

iii. are u and v independent?
iv. find the marginal densities p(u) and p(v).
v. find the conditional densities p(u| v) and p(v| u).
vi. find e[u], e[u | v = .5], and e[u | v =    .5].

10. let the random vector (u, v) be distributed uniformly on the unit square. let x =

uv and y = u/v.

(a) draw the region of the x   y plane where the random vector (x, y) lives.
(b) find the joint density of (x, y).
(c) find the marginal density of x.
(d) find the marginal density of y.
(e) find p[y > 1].
(f) find p[x > 1].
(g) find p[y > 1/2].
(h) find p[x > 1/2].
(i) find p[xy > 1].
(j) find p[xy > 1/2].

(cid:113)

11.

(a) let (x1, x2) be distributed uniformly on the disk where x2
1

+ x2

2     1. let

r =

x2
1

+ x2

2 and    = arctan(x1/x2). hint: it may help to draw a picture.

i. what is the joint density p(x1, x2)?
ii. are x1 and x2 independent? explain.
iii. find the joint density p(r,   ).
iv. are r and    independent? explain.

(cid:113)

(b) let (x1, x2) be i.i.d. n(0,1). let r =

x2
1

+ x2

2 and    = arctan(x1/x2).

i. what is the joint density p(x1, x2)?
ii. find the joint density p(r,   ).
iii. are r and    independent? explain.
iv. find the marginal density p(r).
v. let v = r2. find the density p(v).

(cid:113)

(c) let (x1, x2) be distributed uniformly on the square whose corners are (1, 1),

(   1, 1), (   1,   1), and (1,   1). let r =

x2
1

+ x2

2 and    = arctan(x1/x2).

4.4. exercises

278

i. what is the joint density p(x1, x2)?
ii. are x1 and x2 independent? explain.
iii. are r and    independent? explain.

12. just below equation 4.6 is the statement    the mgf is always de   ned at t = 0.    for

any random variable y,    nd my(0).

13. provide the proof of theorem 4.5 for the case n = 2.
14. refer to theorem 4.9. where in the proof is the assumption x     y used?

chapter 5

special distributions

statisticians often make use of standard parametric families of id203 distributions. a
parametric family is a collection of id203 distributions distinguished by, or indexed
by, a parameter. an example is the binomial distribution introduced in section 1.3.1.
there were n trials. each had a id203    of success. usually    is unknown and could
be any number in (0, 1). there is one bin(n,   ) distribution for each value of   ;    is a
parameter; the set of id203 distributions

{bin(n,   ) :        (0, 1)}

is a parametric family of distributions.

we have already seen four parametric families     the

binomial (section 1.3.1), poisson (section 1.3.2), exponential (section 1.3.3), and nor-
mal (section 1.3.4) distributions. chapter 5 examines these in more detail and introduces
several others.

5.1 the binomial and negative binomial distributions

the binomial distribution statisticians often deal with situations in which there is a
collection of trials performed under identical circumstances; each trial results in either
success or failure. typical examples are coin    ips (heads or tails), medical trials (cure
or not), voter polls (democrat or republican), basketball free throws (make or miss).
conditions for the binomial distribution are

1. the number of trials n is    xed in advance,

2. the id203 of success    is the same for each trial, and

279

5.1. binomial and negative binomial

280

3. trials are conditionally independent of each other, given   .

let the random variable x be the number of successes in such a collection of trials. then
x is said to have the binomial distribution with parameters (n,   ), written x     bin(n,   ).
the possible values of x are the integers 0, 1, . . . , n. figure 1.5 shows examples of
binomial pmf   s for several combinations of n and   . usually    is unknown and the trials
are performed in order to learn about   .

obviously, large values of x are evidence that    is large and small values of x are
evidence that    is small. but to evaluate the evidence quantitatively we must be able to say
more. in particular, once a particular value x = x has been observed we want to quantify
how well it is explained by di   erent possible values of   . that is, we want to know p(x|   ).
theorem 5.1. if x     bin(n,   ) then

px(x) =

for x = 0, 1, . . . , n.

(cid:32)n
(cid:33)

x

  x(1       )n   x

proof. when the n trials of a binomial experiment are carried out there will be a sequence
of successes (1   s) and failures (0   s) such as 1000110       100. let s = {0, 1}n be the set
of such sequences and, for each x     {0, 1, . . . , n}, let sx be the subset of s consisting of
sequences with x 1   s and n     x 0   s. if s     sx then pr(s) =   x(1       )n   x. in particular, all s   s
in sx have the same id203. therefore,

= (size of sx)   (cid:0)  x(1       )n   x(cid:1)

px(x) = p(x = x) = p(sx)

(cid:32)n
(cid:33)

x

=

  x(1       )n   x

(cid:3)

the special case n = 1 is important enough to have its own name. when n = 1 then
x is said to have a bernoulli distribution with parameter   . we write x     bern(  ). if
x     bern(  ) then px(x) =   x(1       )1   x for x     {0, 1}. experiments that have two possible
outcomes are called bernoulli trials.
suppose x1     bin(n1,   ), x2     bin(n2,   ) and x1     x2. let x3 = x1 + x2. what is
the distribution of x3? logic suggests the answer is x3     bin(n1 + n2,   ) because (1) there
are n1 + n2 trials, (2) the trials all have the same id203 of success   , (3) the trials are
independent of each other (the reason for the x1     x2 assumption) and (4) x3 is the total
number of successes. theorem 5.3 shows a formal proof of this proposition. but    rst we
need to know the moment generating function.

5.1. binomial and negative binomial
theorem 5.2. let x     bin(n,   ). then

mx(t) =(cid:2)  et + (1       )(cid:3)n

proof. let y     bern(  ). then

281

now let x =(cid:80)n

my(t) = e[ety] =   et + (1       ).

i=1 yi where the yi   s are i.i.d. bern(  ) and apply corollary 4.10.

(cid:3)
theorem 5.3. suppose x1     bin(n1,   ); x2     bin(n1,   ); and x1     x2. let x3 = x1 + x2.
then x3     bin(n1 + n2,   ).
proof.

mx3(t) = mx1(t)mx2(t)

=(cid:2)  et + (1       )(cid:3)n1(cid:2)  et + (1       )(cid:3)n2
=(cid:2)  et + (1       )(cid:3)n1+n2

the    rst equality is by theorem 4.9; the second is by theorem 5.2. we recognize the
last expression as the mgf of the bin(n1 + n2,   ) distribution. so the result follows by
(cid:3)
theorem 4.6.

the mean of the binomial distribution was calculated in equation 1.11. theorem 5.4

restates that result and gives the variance and standard deviation.
theorem 5.4. let x     bin(n,   ). then

1. e[x] = n  .
2. var(x) = n  (1       ).
   
n  (1       ).

3. sd(x) =

proof. the proof for e[x] was given earlier. if x     bin(n,   ), then x = (cid:80)n

i=1 xi where
xi     bern(  ) and the xi   s are mutually independent. therefore, by theorem 1.9, var(x) =
n var(xi). but

i )     e(xi)2 =          2 =   (1       ).
so var(x) = n  (1       ). the result for sd(x) follows immediately.

var(xi) = e(x2

exercise 1 asks you to prove theorem 5.4 by moment generating functions.

(cid:3)

5.1. binomial and negative binomial

282

r comes with built-in functions for working with binomial distributions. you can get
the following information by typing help(dbinom), help(pbinom), help(qbinom), or
help(rbinom). there are similar functions for working with other distributions, but we
won   t repeat their help pages here.

usage:

dbinom(x, size, prob, log = false)
pbinom(q, size, prob, lower.tail = true, log.p = false)
qbinom(p, size, prob, lower.tail = true, log.p = false)
rbinom(n, size, prob)

arguments:

x, q: vector of quantiles.

p: vector of probabilities.

n: number of observations. if    length(n) > 1   , the length is

taken to be the number required.

size: number of trials.

prob: id203 of success on each trial.

log, log.p: logical; if true, probabilities p are given as log(p).

lower.tail: logical; if true (default), probabilities are p[x <= x],

otherwise, p[x > x].

details:

the binomial distribution with    size    = n and    prob    = p has
density

p(x) = choose(n,x) p^x (1-p)^(n-x)

for x = 0, ..., n.

5.1. binomial and negative binomial

283

if an element of    x    is not integer, the result of    dbinom    is
zero, with a warning. p(x) is computed using loader   s algorithm,
see the reference below.

the quantile is defined as the smallest value x such that
f(x) >= p, where f is the distribution function.

value:

   dbinom    gives the density,    pbinom    gives the distribution
function,    qbinom    gives the quantile function and    rbinom   
generates random deviates.

if    size    is not an integer,    nan    is returned.

references:

catherine loader (2000). fast and accurate computation of
binomial probabilities; manuscript available from <url:
http://cm.bell-labs.com/cm/ms/departments/sia/catherine/dbinom>

see also:

   dnbinom    for the negative binomial, and    dpois    for the poisson
distribution.

examples:

# compute p(45 < x < 55) for x binomial(100,0.5)
sum(dbinom(46:54, 100, 0.5))

## using "log = true" for an extended range :
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log=true), type=   l   , ylab="log density",

main = "dbinom(*, log=true) is better than

log(dbinom(*))")

lines(k, log(dbinom(k, n, pi/10)), col=   red   , lwd=2)
## extreme points are omitted since dbinom gives 0.

5.1. binomial and negative binomial

284

mtext("dbinom(k, log=true)", adj=0)
mtext("extended range", adj=0, line = -1, font=4)
mtext("log(dbinom(k))", col="red", adj=1)

the distribution of(cid:80) yi and the central limit theorem tells us that(cid:80) yi looks increasingly

figure 5.1 shows the binomial pmf for several values of x, n, and p. note that for a
   xed p, as n gets larger the pmf looks increasingly like a normal pdf. that   s the central
limit theorem. let y1, . . . , yn     i.i.d. bern(p). then the distribution of x is the same as
normal as n        .

also, for a    xed n, the pmf looks more normal when p = .5 than when p = .05. and
that   s because convergence under the central limit theorem is faster when the distribution
of each yi is more symmetric.

figure 5.1 was produced by

par ( mfrow=c(3,2) )
n <- 5
p <- .05
x <- 0:5
plot ( x, dbinom(x,n,p), ylab="p(x)", main="n=5, p=.05" )
...

the negative binomial distribution rather than    x in advance the number of trials,
experimenters will sometimes continue the sequence of trials until a prespeci   ed number
of successes r has been achieved. in this case the total number of failures n is the ran-
dom variable and is said to have the negative binomial distribution with parameters (r,   ),
written n     negbin(r,   ). (warning: some authors say that the total number of trials,
n + r, has the negative binomial distribution.) one example is a gambler who decides to
play the daily lottery until she wins. the prespeci   ed number of successes is r = 1. the
number of failures n until she wins is random. in this case, and whenever r = 1, n is
said to have a geometric distribution with parameter   ; we write n     geo(  ). often,    is
unknown. large values of n are evidence that    is small; small values of n are evidence

5.1. binomial and negative binomial

285

figure 5.1: the binomial pmf

0123450.00.20.40.60.8n=5, p=.05xp(x)0123450.050.150.25n=5, p=.5xp(x)0123450.00.10.20.3n=20, p=.05xp(x)681012140.050.100.15n=20, p=.5xp(x)024680.050.15n=80, p=.05xp(x)30354045500.020.06n=80, p=.5xp(x)5.1. binomial and negative binomial

286

that    is large. the id203 function is

pn(k) = p(n = k)

= p(r     1 successes in the    rst k + r     1 trials

and k + r   th trial is a success)

(cid:33)
(cid:32)k + r     1

r     1

=

  r(1       )k

for k = 0, 1, . . . .

let n1     negbin(r1,   ), . . . , nt     negbin(rt,   ), and n1, . . . , nt be independent of each
n1 is the number of failures before the r1   th success; . . . ; n1 +        + nt is the number of

other. then one can imagine a sequence of trials of length(cid:80)(ni +ri) having(cid:80) ri successes.
failures before the r1 +        + rt   th success. it is evident that n     (cid:80) ni is the number of
failures before the r    (cid:80) ri   th success occurs and therefore that n     negbin(r,   ).

theorem 5.5. if y     negbin(r,   ) then e[y] = r(1       )/   and var(y) = r(1       )/  2.
proof. it su   ces to prove the result for r = 1. then the result for r > 1 will follow by the
foregoing argument and theorems 1.7 and 1.9. for r = 1,

   (cid:88)
   (cid:88)

n=0

n=1

e[n] =

=

n p[n = n]

=   (1       )

n=1

n(1       )n  
   (cid:88)
n(1       )n   1
   (cid:88)
   (cid:88)
1       
  

d
d  
(1       )n

(1       )n

n=1

=      (1       )

=      (1       )

=      (1       )
=      (1       )

1       
  

=

n=1
d
d  
d
d  
   1
  2

5.1. binomial and negative binomial

287

the trick of writing each term as a derivative, then switching the order of summation and
derivative is occasionally useful. here it is again.

(n(n     1) + n) (1       )n   1
   (cid:88)

n(1       )n   1 +   (1       )2

n=1

n(n     1)(1       )n   2

e(n2) =

n2 p[n = n]

   (cid:88)

   (cid:88)
   (cid:88)

n=1

n=0

=   (1       )

=   (1       )

n=1

d2

   (cid:88)
  2 (1       )n
   (cid:88)
(1       )n
1       
  

n=1

+   (1       )2

n=1

1       
  
1       
  
1       
  
1       
  
2     3   +   2

+   (1       )2 d2
  2
+   (1       )2 d2
  2
+ 2   (1       )2

  3

=

=

=

=

=

therefore,

  2

var(n) = e[n2]     (e[n])2 =

1       
  2

.

(cid:3)

the r functions for working with the negative binomial distribution are dnbinom,
pnbinom, qnbinom, and rnbinom. figure 5.2 displays the negative binomial pdf and
illustrates the use of qnbinom.

figure 5.2 was produced with the following snippet.

r <- c ( 1, 5, 30 )
p <- c ( .1, .5, .8 )
par ( mfrow=c(3,3) )
for ( i in seq(along=r) )
for ( j in seq(along=p) ) {

5.1. binomial and negative binomial

288

figure 5.2: the negative binomial pmf

020400.000.040.08r=1, !=0.1nid20302460.00.20.4r=1, !=0.5nid2030.01.02.00.20.40.60.8r=1, !=0.8nid20320601000.0000.0100.020r=5, !=0.1nid203048140.020.060.100.14r=5, !=0.5nid2030240.050.150.25r=5, !=0.8nid2032003500.0020.006r=30, !=0.1nid2031530450.010.030.05r=30, !=0.5nid20326120.020.060.10r=30, !=0.8nid2035.2. multinomial

289

lo <- qnbinom(.01,r[i],p[j])
hi <- qnbinom(.99,r[i],p[j])
x <- lo:hi
plot ( x, dnbinom(x,r[i],p[j]), ylab="id203", xlab="n",

main = substitute (

list ( r == a, theta == b),
list(a=i,b=j) ) )

}

    lo and hi are the limits on the x-axis of each plot. the use of qbinom ensures that

each plot shows at least 98% of its distribution.

5.2 the multinomial distribution

the multinomial distribution generalizes the binomial distribution in the following way.
the binomial distribution applies when the outcome of a trial has two possible values; the
multinomial distribution applies when the outcome of a trial has more than two possible
outcomes. some examples are

clinical trials in clinical trials, each patient is administered a treatment, usually an ex-
perimental treatment or a standard, control treatment. later, each patient may be
scored as either success, failure, or censored. censoring occurs because patients
don   t show up for their appointments, move away, or can   t be found for some other
reason.

craps after the come-out roll, each successive roll is either a win, loss, or neither.

genetics each gene comes in several variants. every person has two copies of the gene,
one maternal and one paternal. so the person   s status can be described by a pair
like {a, c} meaning that she has one copy of type a and one copy of type c. the pair
is called the person   s genotype. each person in a sample can be considered a trial.
geneticists may count how many people have each genotype.

political science in an election, each person prefers either the republican candidate, the

democrat, the green, or is undecided.

5.2. multinomial

290

in this case we count the number of outcomes of each type. if there are k possible outcomes
then the result is a vector y1, . . . , yk where yi is the number of times that outcome i occured
and y1 +        + yk = n is the number of trials.
let p     (p1, . . . , pk) be the probabilities of the k categories and n be the number of
trials. we write y     mult(n, p). in particular, y     (y1, . . . , yk) is a vector of length k.
because y is a vector, so is its expectation

e[y] =    = (  1, . . . ,   k)     (e[y1], . . . , e[yk]) = (np1, . . . , npk).

the i   th coordinate, yi, is a random variable in its own right. because yi counts the

number of times outcome i occurred in n trials, its distribution is

yi     bin(n, pi).

(see exercise 20.)

(5.1)

although the yi   s are all binomial, they are not independent. after all, if y1 = n, then
y2 =        = yk = 0, so the yi   s must be dependent. what is their joint pmf? what is the
conditional distribution of, say, y2, . . . , yk given y1? the next two theorems provide the
answers.
theorem 5.6. if y     mult(n, p) then

fy(y1, . . . , yk) =

1        pyk
py1

k

(cid:17)

(cid:16) n

y1      yk

where

is the multinomial coe   cient

(cid:32)
y1        yk

n

(cid:32)

(cid:33)

n

y1        yk
(cid:33)

=

n!(cid:81) yi!

proof. when the n trials of a multinomial experiment are carried out, there will be a
sequence of outcomes such as abkdbg       f , where the letters indicate the outcomes of
individual trials. one such sequence is
(cid:124)(cid:123)(cid:122)(cid:125)
a       a

(cid:124)(cid:123)(cid:122)(cid:125)
b       b
the id203 of this particular sequence is(cid:81) pyi

(cid:124)(cid:123)(cid:122)(cid:125)
       k        k
fy(y1, . . . , yk) = (number of such sequences)   (cid:89)

has the same id203. so

i . every sequence with y1 a   s, . . . , yk k   s

(cid:33)(cid:89)

y1times

y2times

yktimes

(cid:32)

pyi
i

=

n

y1        yk

pyi
i .

(cid:3)

5.3. poisson
theorem 5.7. if y     mult(n, p) then

(y2, . . . , yk | y1 = y1)     mult(n     y1, (p   

2, . . . , p   
k))

where p   

i

= pi/(1     p1) for i = 2, . . . , k.

proof. see exercise 19.

291

(cid:3)

r   s functions for the multinomial distribution are rmultinom and dmultinom. rmultinom(m,n,p)

draws a sample of size m. p is a vector of probabilities. the result is a k    m matrix. each
column is one draw, so each column sums to n. the user does not specify k; it is deter-
mined by k = length(p).

5.3 the poisson distribution

the poisson distribution is used to model counts in the following situation.

    there is a domain of study, usually a block of space or time.
    events arise at seemingly random locations in the domain.
    there is an underlying rate at which events arise.
    the rate does not vary over the domain.
    the occurence of an event at any location (cid:96)1 is independent of the occurence of an

event at any other location (cid:96)2.

let y be the total number of events that arise in the domain. y has a poisson distribution
with rate parameter   , written y     poi(  ). the pmf is

py(y) =

e       y
y!

for y = 0, 1, . . .

the mean was derived in chapter 1, exercise 19a. it is

theorem 5.8. let y     poi(  ). then

e[y] =   .

my(t) = e  (et   1)

5.3. poisson

proof.

   (cid:88)

my(t) = e[ety] =

etypy(y) =

   (cid:88)

=

y=0

= e  (et   1)

y=0

e     (  et)y

y!

e     
e     et

=

   (cid:88)
   (cid:88)

y=0

ety e       y
y!
e     et(  et)y

y!

y=0

292

(cid:3)

theorem 5.9. let y     poi(  ). then

var(y) =   

proof. just for fun (!) we will prove the theorem two ways        rst directly and then with
moment generating functions.

proof 1.

e[y2] =

=

=

=

y=0

   (cid:88)
   (cid:88)
   (cid:88)
   (cid:88)

y=0

y=2

y2 e       y
y!
y(y     1)

y(y     1)

e       z+2

z!

   (cid:88)

y=0

+

+   

e       y
y!

y

e       y
y!
e       y
y!

+   

z=0

=   2 +   

so var(y) = e[y2]     (e[y])2 =   .

293

5.3. poisson

proof 2.

e[y2] =

=

=

(cid:12)(cid:12)(cid:12)(cid:12)t=0
(cid:12)(cid:12)(cid:12)(cid:12)t=0
(cid:12)(cid:12)(cid:12)(cid:12)t=0

d2
dt2 my(t)
d2
dt2 e  (et   1)
(cid:104)
  ete  (et   1) +   2e2te  (et   1)(cid:105)
dt   ete  (et   1)

d

t=0

=
=    +   2

so var(y) = e[y2]     (e[y])2 =   .
(cid:3)
theorem 5.10. let yi     poi(  i) for i = 1, . . . , n and let the yis be mutually independent.

let y =(cid:80)n

1 yi and    =(cid:80)n

1   i. then y     poi(  ).
(cid:89)
proof. using theorems 4.9 and 5.8 we have

(cid:89)

my(t) =

myi(t) =

e  i(et   1) = e  (et   1)

which is the mgf of the poi(  ) distribution.

poi(  i). suppose the di   s are disjoint and the yi   s are independent. let y = (cid:80) yi be the
where    = (cid:80)   i. theorem 5.10 assures us that everything works correctly; that y does

(cid:3)
suppose, for i = 1, . . . , n, yi is the number of events occurring on a domain di; yi    
number of events arising on d =    di. the logic of the situation suggests that y     poi(  )
indeed have the poi(  ) distribution. another way to put it: if y     poi(  ), and if the
individual events that y counts are randomly divided into two types y1 and y2 according
to a binomial distributuion with parameter   , then (1) y1     poi(    ) and y2     poi(  (1       ))
and (2) y1     y2.

rem. when y     poi(  ) theorem 5.10 tells us we can think of y as y =(cid:80)  

figure 5.3 shows the poisson pmf for    = 1, 4, 16, 64. as    increases the pmf looks
increasingly normal. that   s a consequence of theorem 5.10 and the central limit theo-
i=1 yi where each
yi     poi(1). (   must be an integer for this to be precise.) then the central limit theorem
tells us that y will be approximately normal when    is large.

figure 5.3 was produced with the following snippet.

5.3. poisson

294

figure 5.3: poisson pmf for    = 1, 4, 16, 64

02460.00.10.20.3!=1ypy(y)024680.000.050.100.150.20!=4ypy(y)101520250.000.040.08!=16ypy(y)506070800.000.020.04!=64ypy(y)5.3. poisson

295

y <- 0:7
plot ( y, dpois(y,1), xlab="y", ylab=expression(p[y](y)),

main=expression(lambda==1) )

y <- 0:10
plot ( y, dpois(y,4), xlab="y", ylab=expression(p[y](y)),

main=expression(lambda==4) )

y <- 6:26
plot ( y, dpois(y,16), xlab="y", ylab=expression(p[y](y)),

main=expression(lambda==16) )

y <- 44:84
plot ( y, dpois(y,64), xlab="y", ylab=expression(p[y](y)),

main=expression(lambda==64) )

one of the early uses of the poisson distribution was in the id203 variations in
the distribution of    particles by rutherford and geiger 1910. (an    particle is a helium
nucleus, or two protons and two neutrons.)
example 5.1 (rutherford and geiger)
the phenomenon of radioactivity was beginning to be understood in the early 20th
century. in their 1910 article, rutherford and geiger write

   in counting the    particles emitted from radioactive substances . . . [it] is of
importance to settle whether . . . variations in distribution are in agreement
with the laws of id203, i.e. whether the distribution of    particles on an
average is that to be anticipated if the    particles are expelled at random
both in regard to space and time.
it might be conceived, for example,
that the emission of an    particle might precipitate the disintegration of
neighbouring atoms, and so lead to a distribution of    particles at variance
with the simple id203 law.   

so rutherford and geiger are going to do three things in their article. they   re going
to count    particle emissions from some radioactive substance; they   re going to de-
rive the distribution of    particle emissions according to theory; and they   re going to
compare the actual and theoretical distributions.
here they describe their experimental setup.

   the source of radiation was a small disk coated with polonium, which was
placed inside an exhausted tube, closed at one end by a zinc sulphide

5.3. poisson

296

screen. the scintillations were counted in the usual way . . . the number of
scintillations . . . corresponding to 1/8 minute intervals were counted . . . .
   the following example is an illustration of the result obtained. the num-
bers, given in the horizontal lines, correspond to the number of scintilla-
tions for successive intervals of 7.5 seconds.

2 0 . . . .
1st minute : 3 7 4 4 2 3
4 2 . . . .
5 2 5 4 3 5
2nd    
5 2 . . . .
3rd    
5 4 1 3 3 1
8 2 2 2 3 4
4th    
2 6 . . . .
7 4 2 6 4 5 10 4 . . . .
5th    

total per minute.
25
30
24
31
42

average for 5 minutes . . .
true average . . . . . . . . . . .

30.4
31.0

and here they describe their theoretical result.

   the distribution of    particles according to the law of id203 was kindly
worked out for us by mr. bateman. the mathematical theory is appended
as a note to this paper. mr. bateman has shown that if x be the true
average number of particles for any given interval falling on the screen
from a constant source, the id203 that n    particles are observed
n! e   x. n is here a whole number, which
in the same interval is given by xn
may have all positive values from 0 to    . the value of x is determined
by counting a large number of scintillations and dividing by the number of
intervals involved. the id203 for n    particles in the given interval can
then at once be calculated from the theory.   

refer to bateman [1910] for his derivation. table 5.1 shows their data. as rutherford
and geiger explain:

   for convenience the tape was measured up in four parts, the results of
which are given separately in horizontal columns i. to iv.
   for example (see column i.), out of 792 intervals of 1/8 minute, in which
3179    particles were counted, the number of intervals 3    particles was
152. combining the four columns, it is seen that out of 2608 intervals
containing 10,097 particles, the number of times that 3    particles were
observed was 525. the number calculated from the equation was the
same, viz. 525.   

5.3. poisson

297

e
g
a
r
e
v
a

r
e
b
m
u
n

1
0
4

.

2
9
3

.

5
7
3

.

6
7
3

.

7
8
3

.

-
r
e
t
n
i

f
o

  

s
l
a
v

2
9
7

6
9
5

2
3
6

8
8
5

s
e
l
c
i
t
r
a
p

f
o

9
7
1
3

4
3
3
2

3
7
3
2

1
1
2
2

8
0
6
2

7
9
0
0
1

0

0

0

1

1

1

1

0

0

0

1

4

0

0

0

0

0

1

0

1

1

2

4

4

3

4

3

0

9

3

3

0
1

1
1

7
2

9
2

4

6

8
1

5
4

8
6

2
1

7
1

0
5

7
3

6
2

6
2

8
8

3
6

0
6

2
6

8
9

6
9

2
9

2
2
1

9
3
1

0
4
1

3
7
2

4
5
2

8
0
4

4
9
3

0
7
1

0
2
1

8
1
1

4
2
1

2
3
5

8
0
5

2
5
1

6
1
1

9
3
1

8
1
1

5
2
5

5
2
5

8
8

7
9

2
9

6
0
1

6
5

9
3

6
5

2
5

3
8
3

7
0
4

3
0
2

0
1
2

5
1

7
1

5
1

0
1

7
5

  

f
o

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

.

i

i
i

i
i
i

v

i

m
u
s

s
e
l
c
i
t
r
a
p

4
5
l
a
c
i
t
e
r
o
e
h
t

s
e
u
l
a
v

r
e
b
m
u
n

r
e
b
m
u
n

4
1

3
1

2
1

1
1

0
1

9

8

7

6

5

4

3

2

1

0

r
e
b
m
u
n

table 5.1: rutherford and geiger   s data

5.3. poisson

298

finally, how did rutherford and geiger compare their actual and theoretical distribu-
tions? they did it with a plot, which we reproduce as figure 5.4. their conclusion:

   it will be seen that, on the whole, theory and experiment are in excellent
accord. . . . we may consequently conclude that the distribution of    par-
ticles in time is in agreement with the laws of id203 and that the   
particles are emitted at random. . . . apart from their bearing on radioactive
problems, these results are of interest as an example of a method of test-
ing the laws of id203 by observing the variations in quantities involved
in a spontaneous material process.   

example 5.2 (neurobiology)
this example continues example 2.6. we would like to know whether this neuron
responds differently to different tastants and, if so, how. to that end, we   ll see how often
the neuron    res in a short period of time after receiving a tastant and we   ll compare
the results for different tastants. speci   cally, we   ll count the number of spikes in the
150 milliseconds (150 msec = .15 s) immediately following the delivery of each tastant.
(150 msec is about the rate at which rats can lick and is thought by neurobiologists to
be about the right interval of time.) let yi j be the number of spikes in the 150 msec
following the j   th delivery of tastant i. because we   re counting the number of events in
a    xed period of time we   ll adopt a poisson model:
yi j     poi(  i)

where   i is the average    ring rate of this neuron to tastant i.

we begin by making a list to hold the data. there should be one element for each
tastant. that element should be a vector whose length is the number of times that
tastant was delivered. here is the r code to do it. (refer to example 2.6 for reading in
the data.)

nspikes <- list(

= rep ( na, length(tastants$msg100) ),
= rep ( na, length(tastants$msg300) ),

msg100
msg300
nacl100 = rep ( na, length(tastants$nacl100) ),
nacl300 = rep ( na, length(tastants$nacl300) ),
water

= rep ( na, length(tastants$water) )

)

now we    ll in each element by counting the number of neuron    rings in the time

interval.

5.3. poisson

299

figure 5.4: rutherford and geiger   s figure 1 comparing theoretical (solid line) to actual
(open circles) distribution of    particle counts.

0246810120100200300400500number of particles in intervalnumber of groups5.3. poisson

300

for ( i in seq(along=nspikes) )
for ( j in seq(along=nspikes[[i]]) )

nspikes[[i]][j] <- sum (

spikes[[8]] > tastants[[i]][j]

& spikes[[8]] <= tastants[[i]][j] + .15

)

now we can see how many times the neuron    red after each delivery of, say, msg100
by typing nspikes$msg100.

figure 5.5 compares the    ve tastants graphically. panel a is a stripchart.

it has
   ve tick marks on the x-axis for the    ve tastants. above each tick mark is a collection
of circles. each circle represents one delivery of the tastant and shows how many
times the neuron    red in the 150 msec following that delivery. panel b shows much
the same information in a mosaic plot. the heights of the boxes show how often that
tastant produced 0, 1, . . . , 5 spikes. the width of each column shows how often that
tastant was delivered. panel c shows much the same information in yet a different
way. it has one line for each tastant; that line shows how often the neuron responded
with 0, 1, . . . , 5 spikes. panel d compares likelihood functions. the    ve curves are the
likelihood functions for   1, . . . ,   5.

there does not seem to be much difference in the response of this neuron to

different tastants. although we can compute the m.l.e.     i   s with

lapply ( nspikes, mean )

and    nd that they range from a low of     3     0.08 for .1 m nacl to a high of     1     0.4 for
.1m msg, panel d suggests the plausibility of   1 =        =   5     .2.

figure 5.5 was produced with the following snippet.

spiketable <- matrix ( na, length(nspikes), 6,

dimnames = list ( tastant = 1:5,

counts

= 0:5 )

for ( i in seq(along=nspikes) )

)

spiketable[i,] <- hist ( nspikes[[i]], seq(-.5,5.5,by=1),

plot=f )$counts

freqtable <-

apply ( spiketable, 1, function(x)x/sum(x) )

5.3. poisson

301

figure 5.5: numbers of    rings of a neuron in 150 msec after    ve di   erent tastants. tas-
tants: 1=msg .1m; 2=msg .3m; 3=nacl .1m; 4=nacl .3m; 5=water. panels: a: a
stripchart. each circle represents one delivery of a tastant. b: a mosaic plot. c: each line
represents one tastant. d: likelihood functions. each line represents one tastant.

12345012345atastantnumber of firingsbtastantcounts123450123450123450.00.40.8cnumber of firingsfraction0.00.20.40.60.81.00.00.40.8dlambdalikelihooda neuron   s responses to 5 tastants5.3. poisson

302

    the line spiketable <- ... creates a matrix to hold the data and illustrates
the use of dimnames to name the dimensions. some plotting commands use
those names for labelling axes.

    the line spiketable[i,] <- ... shows an interesting use of the hist com-

mand. instead of plotting a histogram it can simply return the counts.

    the line freqtable <- ... divides each row of the matrix by its sum, turning

counts into proportions.

but let   s investigate a little further. do the data really follow a poisson distribution?
figure 5.6 shows the poi(.2) distribution while the circles show the actual fractions of
   rings. there is apparently good agreement. but numbers close to zero can be de-
ceiving. the r command dpois ( 0:5, .2 ) reveals that the id203 of getting
5 spikes is less than 0.00001, assuming        0.2. so either the   i   s are not all ap-
proximately .2, neuron spiking does not really follow a poisson distribution, or we have
witnessed a very unusual event.

figure 5.6 was produced with the following snippet.

matplot ( 0:5, freqtable, pch=1, col=1,

xlab="number of firings", ylab="fraction" )

lines ( 0:5, dpois ( 0:5, 0.2 ) )

let us examine one aspect of example 5.1 more closely. rutherford and geiger are
counting    particle emissions from a polonium source and    nd that the number of emis-
sions in a    xed interval of time has a poisson distribution. but they could have reasoned
as follows: at the beginning of the experiment there is a    xed number of polonium atoms;
each atom either decays or not; atoms decay independently of each other; therefore the
number of decays, and hence the number of    particles, has a binomial distribution where
n is the number of atoms and p is the id203 that a given atom decays within the time
interval.

why did rutherford and geiger end up with the poisson distribution and not the bino-
mial; are rutherford and geiger wrong? the answer is that a binomial distribution with
large n and small p is extremely well approximated by a poisson distribution with    = np,

5.3. poisson

303

figure 5.6: the line shows poisson probabilities for    = 0.2; the circles show the fraction
of times the neuron responded with 0, 1, . . . , 5 spikes for each of the    ve tastants.

0123450.00.20.40.60.8number of firingsfraction5.4. uniform

304

so rutherford and geiger are correct, to a very high degree of accuracy. for a precise
statement of this result we consider a sequence of random variables x1     bin(n1, p1), x2    
bin(n2, p2), . . . such that limi       ni =     and limi       pi = 0. but if the sequence were some-
thing like x1     bin(100, .01), x2     bin(1000, .005), x3     bin(10000, .0025), . . . then the
xi   s would have expected values e[x1] = 1, e[x2] = 5, e[x3] = 25, . . . and their distribu-
tions would not converge. to get convergence we need, at a minimum, for the expected
values to converge. so let m be a    xed number and consider the sequence of random
variables x1     bin(n1, p1), x2     bin(n2, p2), . . . where pi = m/ni. that way, e[xi] = m,
for all i.
theorem 5.11. let x1, x2, . . . be a sequence of random variables such that xi     bin(ni, pi)
where for some constant m, pi = m/ni. then for any integer k     0

i       p[xi = k] =
lim

exp   m mk

k!

.

i.e., the limit of the distributions of the xi   s is the poi(m) distribution.

proof. see exercise 22.

(cid:3)

5.4 the uniform distribution

the discrete uniform distribution the discrete uniform distribution is the distribution
that gives equal weight to each integer 1, . . . , n. we write y     u(1, n). the pmf is

p(y) = 1/n

(5.2)

for y = 1, . . . , n. the discrete uniform distribution is used to model, for example, dice
rolls, or any other experiment in which the outcomes are deemed equally likely. the only
parameter is n. it is not an especially useful distribution in practical work but can be used
to illustrate concepts in a simple setting. for an applied example see exercise 23.

the continuous uniform distribution the continuous uniform distribution is the dis-
tribution whose pdf is    at over the interval [a, b]. we write y     u(a, b). although the
notation might be confused with the discrete uniform, the context will indicate which is
meant. the pdf is

p(y) = 1/(b     a)

for y     [a, b]. the mean, variance, and moment generating function are left as exercise 24.

5.5. gamma, exponential, chi square

305

suppose we observe a random sample y1, . . . , yn from u(a, b). what is the m.l.e.(  a,   b)?

the joint density is

(cid:17)n

                     

(cid:16) 1

b   a
0

p(y1, . . . , yn) =

if a     y(1) and b     y(n)
otherwise

which is maximized, as a function of (a, b), if b    a is as small as possible without making
the joint density 0. thus,   a = y(1) and   b = y(n).

5.5 the gamma, exponential, and chi square distribu-

tions

         is the upper case greek letter gamma. the gamma function is a special mathematical
function de   ned on r+ as

(cid:90)    

  (  ) =

t     1e   t dt

information about the gamma function can be found in mathematics texts and reference
books. for our purposes, the key facts are:

0

  (   + 1) =     (  )

for    > 0

  (n) = (n     1)!

for positive integers n

   
  

  (1/2) =

for any positive numbers    and   , the gamma(  ,   ) distribution has pdf

p(y) =

1

  (  )    

y     1e   y/  

for y     0

(5.3)

we write y     gam(  ,   ).

figure 5.7 shows gamma densities for four values of    and four values of   .
    in each panel of figure 5.7 the curves for di   erent      s have di   erent shapes. some-

times    is called the shape parameter of the gamma distribution.

    the four panels look identical except for the axes. i.e., the four curves with    = .5,
one from each panel, have the same shape but di   erent scales. the di   erent scales
correspond to di   erent values of   . for this reason    is called a scale parameter.
one can see directly from equation 5.3 that    is a scale parameter because p(y)
depends on y only through the ratio y/  . the idea of scale parameter is embodied in
theorem 5.12.

5.5. gamma, exponential, chi square

306

figure 5.7: gamma densities for various values of    and   .

0123450.01.02.03.0!=0.5yp(y)"=0.5"=1"=2"=4024680.00.51.01.5!=1yp(y)"=0.5"=1"=2"=4051015200.00.20.40.60.8!=2yp(y)"=0.5"=1"=2"=40102030400.00.10.20.30.4!=4yp(y)"=0.5"=1"=2"=45.5. gamma, exponential, chi square

307

figure 5.7 was produced by the following snippet.

par ( mfrow=c(2,2) )

shape <- c ( .5, 1, 2, 4 )
scale <- c ( .5, 1, 2, 4 )
leg

<- expression ( alpha == .5, alpha == 1,
alpha == 2, alpha == 4 )

for ( i in seq(along=scale) ) {

ymax <- scale[i]*max(shape) + 3*sqrt(max(shape))*scale[i]
y <- seq ( 0, ymax, length=100 )
den <- null
for ( sh in shape )

den <- cbind ( den, dgamma(y,shape=sh,scale=scale[i]) )

matplot ( y, den, type="l", main=letters[i], ylab="p(y)" )
legend ( ymax*.1, max(den[den!=inf]), legend = leg )

}

theorem 5.12. let x     gam(  ,   ) and let y = cx. then y     gam(  , c  ).

proof. use theorem 1.1.

px(x) =

1

  (  )    

x     1e   x/  ,

since y = cx, x = y/c and dx/dy = 1/c, so

py(y) =

=

1

c  (  )     (y/c)     1e   y/c  
  (  )(c  )   (y)     1e   y/c  

1

which is the gam(  , c  ) density. also see exercise 10.

(cid:3)

the mean, mgf, and variance are recorded in the next several theorems.

theorem 5.13. let y     gam(  ,   ) then e[y] =     .

5.5. gamma, exponential, chi square

308

proof.

e[y] =

=

(cid:90)    

y

1

(cid:90)    

  (  )    

0
  (   + 1)  

  (  )

0

y     1e   y/   dy
1
  (   + 1)    +1 y  e   y/   dy

=     .

the last equality follows because (1)   (   + 1) =     (  ), and (2) the integrand is a gamma
(cid:3)
density so the integral is 1. also see exercise 10.

the last trick in the proof     recognizing an integrand as a density and concluding that

the integral is 1     is very useful. here it is again.
theorem 5.14. let y     gam(  ,   ). then the moment generating function is my(t) =
(1     t  )      for t < 1/  .
proof.

my(t) =

y     1e   y/   dy

(cid:90)    

  (  )    

1

ety

(cid:90)    
= (1     t  )     

0
(   
1   t  )  
    

=

0

1
1   t  )  

  (  )(   

y     1e   y 1   t  

   dy

theorem 5.15. let y     gam(  ,   ). then

and

proof. see exercise 11.

var(y) =     2

   

    .

sd(y) =

the exponential distribution we often have to deal with situations such as

    the lifetime of an item
    the time until a speci   ed event happens

(cid:3)

(cid:3)

5.5. gamma, exponential, chi square

309

the most fundamental id203 distribution for such situations is the exponential
distribution. let y be the time until the item dies or the event occurs. if y has an exponen-
tial distribution then for some    > 0 the pdf of y is

py(y) =   

   1e   y/  

for y     0.

and we write y     exp(  ). this density is pictured in figure 5.8 (a repeat of figure 1.7) for
four values of   . the exponential distribution is the special case of the gamma distribution
when    = 1. the mean, sd, and mgf are given by theorems 5.13     5.15.
each exponential density has its maximum at y = 0 and decreases monotonically. the
value of    determines the value py(0|   ) and the rate of decrease. usually    is unknown.
small values of y are evidence for small values of   ; large values of y are evidence for
large values of   .

example 5.3 (radioactive decay)
it is well known that some chemical elements are radioactive. every atom of a ra-
dioactive element will eventually decay into smaller components. e.g., uranium-238
(by far the most abundant uranium isotope, 238u) decays into thorium-234 and an   
particle while plutonium-239 (the isotope used in nuclear weapons, 239pu) decays into
uranium-235 (235u) and an    particle.
(see http://www.epa.gov/radiation/radionuclides for more information.)

the time y at which a particular atom decays is a random variable that has an
exponential distribution. each radioactive isotope has its own distinctive value of   . a
radioactive isotope is usually characterized by its median lifetime, or half-life, instead
of   . the half-life is the value m which satis   es p[y     m] = p[y     m] = 0.5. the
half-life m can be found by solving(cid:90) m

   1 e   y/   dy = 0.5.
  

0

the answer is m =    log 2. you will be asked to verify this claim in exercise 31.

uranium-238 has a half-life of 4.47 billion years. thus its    is about 6.45 billion.

plutonium-239 has a half-life of 24,100 years. thus its    is about 35,000.

exponential distributions have an interesting and unique memoryless property. to
demonstrate, we examine the exp(  ) distribution as a model for t, the amount of time a
computer help line caller spends on hold. suppose the caller has already spent t minutes
on hold; i.e., t     t. let s be the remaining time on hold; i.e., s = t     t. what is the

5.5. gamma, exponential, chi square

310

figure 5.8: exponential densities

0.00.51.01.52.00246810xp(x)lambda = 2lambda = 1lambda = 0.2lambda = 0.15.5. gamma, exponential, chi square

311

distribution of s given t > t? for any number r > 0,
p[s > r | t     t] = p[t     t + r | t     t] =
e   (t+r)/  
e   t/  

p[t     t + r]
p[t     t]

=

=

p[t     t + r, t     t]

p[t     t]

= e   r/  .

in other words, s has an exp(  ) distribution (why?) that does not depend on the currently
elapsed time t (why?). this is a unique property of the exponential distribution; no other
continuous distribution has it. whether it makes sense for the amount of time on hold is a
question that could be veri   ed by looking at data. if it   s not sensible, then exp(  ) is not
an accurate model for t.

the poisson process there is a close relationship between exponential, gamma, and
poisson distributions. for illustration consider a company   s customer call center. suppose
that calls arrive according to a rate    such that

1. in a time interval of length t, the number of calls is a random variable with distri-

bution poi(  t) and

2. if i1 and i2 are disjoint time intervals then the number of calls in i1 is independent

of the number of calls in i2.

when calls arrive in this way we say the calls follow a poisson process.
suppose we start monitoring calls at time t0. let t1 be the time of the    rst call after t0
and y1 = t1     t0, the time until the    rst call. t1 and y1 are random variables. what is the
distribution of y1? for any positive number y,

pr[y1 > y] = pr[no calls in [t0, t0 + y]] = e     y
where the second equality follows by the poisson assumption. but

pr[y1 > y] = e     y     pr[y     y] = 1     e     y     py(y) =   e     y     y1     exp(1/  )

what about the time to the second call? let t2 be the time of the second call after t0 and
y2 = t2     t0. what is the distribution of y2? for any y > 0,

pr[y2 > y] = pr[fewer than 2 calls in [t0, y]]

= pr[0 calls in [t0, y]] + pr[1 call in [t0, y]]
= e     y + y  e     y

5.6. beta

and therefore

so y2     gam(2, 1/  ).

312

py2(y) =   e     y       e     y + y  2e     y =

  2
  (2)

ye     y

in general, the time yn until the n   th call has the gam(n, 1/  ) distribution. this fact is

an example of the following theorem.
theorem 5.16. let y1, . . . , yn be mutually independent and let yi     gam(  i,   ). then

y    (cid:88)

yi     gam(  ,   )

where       (cid:80)   i.

proof. see exercise 32.

(cid:3)

in theorem 5.16 note that the yi   s must all have the same    even though they may have

di   erent   i   s.

the chi-squared distribution the gamma distribution with    = 2 and    = p/2 where
p is a positive integer is called the chi-squared distribution with p degrees of freedom. we
write y       2
p.

theorem 5.17. let y1, . . . , yn     i.i.d. n(0, 1). de   ne x =(cid:80) y2

i . then x       2
n.

proof. this theorem will be proved in section 5.7.

(cid:3)

5.6 the beta distribution

for positive numbers    and   , the beta(  ,   ) distribution is a distribution for a random
variable y on the unit interval. the density is

py(y) =

  (   +   )
  (  )  (  )

y     1(1     y)     1

for y     [0, 1]

the parameters are (  ,   ). we write y     be(  ,   ). the mean and variance are given by
theorem 5.18.
theorem 5.18. let y     be(  ,   ). then
e[y] =

  

   +   

var(y) =

    

(   +   )2(   +    + 1)

5.6. beta

proof. see exercise 28.

313

(cid:3)

figure 5.9 shows some beta densities. each panel shows four densities having the
same mean. it is evident from the figure and the de   nition that the parameter    (  ) controls
whether the density rises or falls at the left (right). if both    > 1 and    > 1 then p(y) is
unimodal. the be(1, 1) is the same as the u(0, 1) distribution.
the beta distribution arises as the distribution of order statistics from the u(0, 1) dis-
tribution. let x1, . . . , xn     i.i.d. u(0, 1). what is the distribution of x(1), the    rst order
statistic? our strategy is    rst to    nd the cdf of x(1), then di   erentiate to get the pdf.

fx(1)(x) = p[x(1)     x]
= 1     p[all xi   s are greater than x]
= 1     (1     x)n

therefore,

px(1)(x) =

fx(1)(x) = n(1     x)n   1 =

d
dx

  (n + 1)
  (1)  (n)

(1     x)n   1

which is the be(1, n) density. for the distribution of the largest order statistic see exer-
cise 29.

figure 5.9 was produced by the following r snippet.

par ( mfrow=c(3,1) )
y <- seq ( 0, 1, length=100 )
mean <- c ( .2, .5, .9 )
alpha <- c ( .3, 1, 3, 10 )
for ( i in 1:3 ) {

beta <- (alpha - mean[i]*alpha) / mean[i]
den <- null
for ( j in 1:length(beta) )

den <- cbind ( den, dbeta(y,alpha[j],beta[j]) )

matplot ( y, den, type="l", main=letters[i], ylab="p(y)" )
if ( i == 1 )

legend ( .6, 8, paste ( "(a,b) = (", round(alpha,2), ",",

round(beta,2), ")", sep="" ), lty=1:4 )

else if ( i == 2 )

legend ( .1, 4,

paste ( "(a,b) = (", round(alpha,2), ",",

round(beta,2), ")", sep="" ), lty=1:4 )

5.6. beta

314

figure 5.9: beta densities     a: beta densities with mean .2; b: beta densities with mean
.5; c: beta densities with mean .9;

0.00.20.40.60.81.002468ayp(y)(a,b) = (0.3,1.2)(a,b) = (1,4)(a,b) = (3,12)(a,b) = (10,40)0.00.20.40.60.81.001234byp(y)(a,b) = (0.3,0.3)(a,b) = (1,1)(a,b) = (3,3)(a,b) = (10,10)0.00.20.40.60.81.00246810cyp(y)(a,b) = (0.3,0.03)(a,b) = (1,0.11)(a,b) = (3,0.33)(a,b) = (10,1.11)5.7. normal

315

else if ( i == 3 )

legend ( .1, 10, paste ( "(a,b) = (", round(alpha,2), ",",

round(beta,2), ")", sep="" ), lty=1:4 )

the beta density is closely related to the gamma density by the following theorem.

theorem 5.19. let x1     gam(  1,   ); x2     gam(  2,   ); and x1     x2. then

y    

x1

x1 + x2

    be(  1,   2)

proof. see exercise 33.

(cid:3)

note that theorem 5.19 requires x1 and x2 both to have the same value of   , but the

result doesn   t depend on what that value is.

5.7 the normal and related distributions

5.7.1 the univariate normal distribution
the histograms in figure 1.12 on page 32

    are approximately unimodal,
    are approximately symmetric,
    have di   erent means, and
    have di   erent standard deviations.

data with these properties is ubiquitous in nature. statisticians and other scientists often
have to model similar looking data. one common id203 density for modelling such
data is the normal density, also known as the gaussian density. the normal density is
also important because of the central limit theorem.

for some constants        r and    > 0, the normal density is

p(x|   ,   ) =

1   
2    

2( x     
   )2

e    1

.

(5.4)

5.7. normal

316

example 5.4 (ocean temperatures, continued)
to see a normal density in more detail, figure 5.10 reproduces the top right histogram
from figure 1.12 redrawn with the normal density overlaid, for the values        8.08 and
       0.94. the vertical axis is drawn on the density scale. there are 112 temperature
measurements that go into this histogram; they were recorded between 1949 and
1997; their latitudes are all between 44    and 46   ; their longitudes are all between    21   
and    19   .

figure 5.10: water temperatures (   c) at 1000m depth, 44     46   n latitude and 19     21   w
longitude. the dashed curve is the n(8.08,0.94) density.

figure 5.10 was produced by the following r snippet.

good <- abs ( med.1000$lon - lons[3] ) < 1 &

abs ( med.1000$lat - lats[1] ) < 1

temps <- med.1000$temp[good]
hist ( temps, xlim=c(4,12), breaks=seq(4,12,by=.5),

freq=f, xlab="temperature", ylab="density", main = "")

mu <- mean ( temps )
sig <- sqrt ( var ( temps ) )
x

<- seq ( 4, 12, length=60 )

temperaturedensity46810120.00.20.45.7. normal

317

lines ( x, dnorm(x,mu,sig), lty=2 )

visually, the normal density appears to    t the data well. randomly choosing one
of the 112 historical temperature measurements, or making a new measurement near
45   n and 20   w at a randomly chosen time are like drawing a random variable t from
the n(8.08,0.94) distribution.
look at temperatures between 8.5    and 9.0   c. the n(8.08, 0.94) density says the
id203 that a randomly drawn temperature t is between 8.5    and 9.0   c is

p [t     (8.5, 9.0]] =

1   
2   0.94

e    1

2( t   8.08
0.94 )2

dt     0.16.

(5.5)

the integral in equation 5.5 is best done on a computer, not by hand. in r it can
be done with pnorm(9.0,8.08,.94 ) - pnorm(8.5,8.08,.94 ). a fancier way to
do it is diff(pnorm(c(8.5,9),8.08,.94)).

    when x is a vector, pnorm(x,mean,sd) returns a vector of pnorm   s.
    when x is a vector, diff(x) returns the vector of differences x[2]-x[1],

x[3]-x[2], ..., x[n]-x[n-1].

in fact, 19 of the 112 temperatures fell into that bin, and 19/112     0.17, so the

n(8.08, 0.94) density seems to    t very well.
7.5    and 8.0   c.

however, the n(8.08, 0.94) density doesn   t    t as well for temperatures between

p [t     (7.5, 8.0]] =

1   
2   0.94

e    1

2( t   8.08
0.94 )2

dt     0.20.

in fact, 15 of the 112 temperatures fell into that bin; and 15/112     0.13. even so, the
n(8.08,0.94) density    ts the data set very well.
theorem 5.20. let y     n(  ,   ). then

my(t) = e   2t2

2

+  t.

(cid:90) 9.0

8.5

(cid:90) 8.0

7.5

5.7. normal

proof.

(cid:90)
(cid:90)

my(t) =

=

2  2 (y     )2 dy

e    1
2  2 (y2   (2     2  2t)y+  2) dy

e    1

2  2 (y   (  +  2t))2+ (  +  2t)2

2  2 dy

1   
ety
2    
(cid:90)
1   
e    1
2    
1   
2    

= e      2

2  2

2    2t+  4t2

2  2

= e
= e   2t2

2

+  t.

318

(cid:3)

the technique used in the proof of theorem 5.20 is worth remembering, so let   s look
at it more abstractly. apart from multiplicative constants, the    rst integral in the proof is

(cid:90)

(cid:90)

etye    1

2  2 (y     )2 dy =

e    1

2  2 (y     )2+ty dy

the exponent is quadratic in y and therefore, for some values of a, b, c, d, e, and f can be
written

2  2 (y       )2 + ty = ay2 + by + c =    1
    1

2

(cid:32)y     d

(cid:33)2

e

+ f

this last expression has the form of a normal distribution with mean d and sd e. so the
integral can be evaluated by putting it in this form and manipulating the constants so it
becomes the integral of a pdf and therefore equal to 1. it   s a technique that is often useful
when working with integrals arising from normal distributions.
theorem 5.21. let y     n(  ,   ). then

e[y] =   

and

var(y) =   2.

proof. for the mean,

for the variance,

e[y] = m(cid:48)

y(0) = (t  2 +   )e   2t2

2

+  t

e[y2] = m(cid:48)(cid:48)

y (0) =   2e   2t2

2

+  t + (t  2 +   )2e   2t2

2

+  t

so,

var(y) = e[y2]     e[y]2 =   2.

(cid:12)(cid:12)(cid:12)(cid:12)t=0

=   .

(cid:12)(cid:12)(cid:12)(cid:12)t=0

=   2 +   2.

(cid:3)

5.7. normal

319

the n(0, 1) distribution is called the standard normal distribution. as theorem 5.22
shows, all normal distributions are just shifted, rescaled versions of the standard nor-
mal distribution. the mean is a location parameter and the standard deviation is a scale
parameter, as shown by theorem 5.22.
theorem 5.22.

1. if x     n(0, 1) and y =   x +    then y     n(  ,   ).
2. if y     n(  ,   ) and x = (y       )/   then x     n(0, 1).

proof.

1. let x     n(0, 1) and y =   x +   . by theorem 4.8
my(t) = e  tmx(  t) = e  te   2t2

2

2. let y     n(  ,   ) and x = (y       )/  . then

mx(t) = e     t/  my(t/  ) = e     t/  e   2(t/  )2

2

+  t/   = e t2

2

(cid:3)

section 5.5 introduced the   2 distribution, noting that it is a special case of the gamma
distribution. the   2 distribution arises in practice as a sum of squares of standard normals.
here we restate theorem 5.17, then prove it.

theorem 5.23. let y1, . . . , yn     i.i.d. n(0, 1). de   ne x =(cid:80) y2

i . then x       2
n.

proof. start with the case n = 1.

(cid:90)

(cid:90)

mx(t) = e[ety2
1 ] =
1   
2  

=

e    1

= (1     2t)   1/2
= (1     2t)   1/2

e    y2

2 dy

ety2 1   
2  
(cid:90)    
2 (1   2t)y2 dy
1     2t   

2  

e    1

2 (1   2t)y2 dy

so x     gam(1/2, 2) =   2
1.

if n > 1 then by corollary 4.10

mx(t) = my2

1

n (t) = (1     2t)   n/2

+      +y2

so x     gam(n/2, 2) =   2
n.

(cid:3)

5.7. normal

320

5.7.2 the multivariate normal distribution

let (cid:126)x be an n-dimensional random vector with mean    (cid:126)x and covariance matrix    (cid:126)x. we
say that (cid:126)x has a multivariate normal distribution if its joint density is

p (cid:126)x((cid:126)x) =

1

(2  )n/2|  | 1

2

e    1

2 ((cid:126)x      (cid:126)x)t     1((cid:126)x      (cid:126)x)

(5.6)

where |  | refers to the determinant of the matrix   . we write (cid:126)x     n(  ,   ). comparison
of equations 5.4 (page 315) and 5.6 shows that the latter is a generalization of the former.
the multivariate version has the covariance matrix    in place of the scalar variance   2.

to become more familiar with the multivariate normal distribution, we begin with the

case where the covariance matrix is diagonal:

   =

  2
0
1
0   2
2
0
0
...
...

                                                      
(cid:32) 1   
(cid:33)n
n(cid:89)
(2  )n/2|  | 1
(cid:32)
n(cid:89)

2  
1   
2    i

i=1

1

i=1

2

                                                      

      
0
      
0
...
. . .
         2

n

2 ((cid:126)x      (cid:126)x)t     1((cid:126)x      (cid:126)x)

e    1

(cid:32) 1

  i
    1
e

2

(cid:33)
(cid:18) xi     i

  i

    1
e

2

(cid:80)n
(cid:19)2(cid:33)

,

(xi     i)2

  2
i

i=1

in this case the joint density is

p (cid:126)x((cid:126)x) =

=

=

the product of n separate one dimensional normal densities, one for each dimension.
therefore the xi   s are independent and normally distributed, with xi     n(  i,   i). also
see exercise 34.
when   1 =        =   n = 1, then    is the n-dimensional identity matrix in. when,
in addition,   1 =        =   n = 0, then (cid:126)x     n(0, in) and (cid:126)x is said to have the standard
n-dimensional normal distribution.
note: for two arbitrary random variables x1 and x2, x1     x2 implies cov(x1, x2) = 0;
but cov(x1, x2) = 0 does not imply x1     x2. however, if x1 and x2 are jointly normally
distributed then the implication is true. i.e. if (x1, x2)     n(  ,   ) and cov(x1, x2) = 0, then
x1     x2. in fact, something stronger is true, as recorded in the next theorem.

5.7. normal
321
theorem 5.24. let (cid:126)x = (x1, . . . , xn)     n(  ,   ) where    has the so-called block-diagonal
form

                                                   

   =

      
      
. . .

01m
  11 012
02m
021   22
...
...
...
       0mm   1   mm
0m1

                                                   

where   ii is an ni    ni matrix, 0i j is an ni    n j matrix of 0   s and(cid:80)m

1 ni = n. partition
(cid:126)x to conform with    and de   ne (cid:126)yi   s: (cid:126)y1 = (x1, . . . , xn1), (cid:126)y2 = (xn1+1, . . . , xn1+n2), . . . ,
(cid:126)ym = (xn1+      +nm   1+1, . . . , xnm) and   i   s:   1 = (  1, . . . ,   n1),   2 = (  n1+1, . . . ,   n1+n2), . . . ,
  m = (  n1+      +nm   1+1, . . . ,   nm). then

1. the (cid:126)yi   s are independent of each other, and
2. (cid:126)yi     n(  i,   ii)

proof. the transformation (cid:126)x     ((cid:126)y1, . . . , (cid:126)ym) is just the identity transformation, so

p(cid:126)y1,...,(cid:126)ym((cid:126)y1, . . . , (cid:126)ym)

= p (cid:126)x((cid:126)y1, . . . , (cid:126)ym) =

(2  )n/2(cid:81)m

1

=

i=1 |  ii| 1

2

1

e    1

2 ((cid:126)y     )t     1((cid:126)y     )

(2  )n/2|  | 1
(cid:80)m
i=1((cid:126)yi     i)t     1

2

e    1

2

ii ((cid:126)yi     i)

m(cid:89)

i=1

=

1

(2  )ni/2|  ii| 1

2

e    1

2 ((cid:126)yi     i)t     1

ii ((cid:126)yi     i)

(cid:3)

is constant. but when    is diagonal, ((cid:126)x       )t     1((cid:126)x       ) =(cid:80)n

to learn more about the multivariate normal density, look at the curves on which p (cid:126)x
is constant; i.e., {(cid:126)x : p (cid:126)x((cid:126)x) = c} for some constant c. the density depends on the xi   s
through the quadratic form ((cid:126)x       )t     1((cid:126)x       ), so p (cid:126)x is constant where this quadratic form
i so p (cid:126)x((cid:126)x) = c is
the equation of an ellipsoid centered at    and with eccentricities determined by the ratios
  i/   j.

1(xi       i)2/  2

what does this density look like? it is easiest to answer that question in two dimen-
sions. figure 5.11 shows three bivariate normal densities. the left-hand column shows
contour plots of the bivariate densities; the right-hand column shows samples from the
joint distributions. in all cases, e[x1] = e[x2] = 0. in the top row,   x1
= 1; in
= 2. the standard
the second row,   x1

= 2; in the third row,   x1

= 1/2;   x2

= 1;   x2

=   x2

5.7. normal

322

deviation is a scale parameter, so changing the sd just changes the scale of the random
variable. that   s what gives the second and third rows more vertical spread than the    rst,
and makes the third row more horizontally squashed than the    rst and second.

figure 5.11 was produced with the following r code.

par ( mfrow=c(3,2) ) # a 3 by 2 array of plots

x1 <- seq(-5,5,length=60)
x2 <- seq(-5,5,length=60)
den.1 <- dnorm ( x1, 0, 1 )
den.2 <- dnorm ( x2, 0, 1 )
den.jt <- den.1 %o% den.2
contour ( x1, x2, den.jt, xlim=c(-5,5), ylim=c(-5,5), main="(a)",

xlab=expression(x[1]), ylab=expression(x[2]) )

samp.1 <- rnorm ( 300, 0, 1 )
samp.2 <- rnorm ( 300, 0, 1 )
plot ( samp.1, samp.2, xlim=c(-5,5), ylim=c(-5,5), main="(b)",
xlab=expression(x[1]), ylab=expression(x[2]), pch="." )

den.2 <- dnorm ( x2, 0, 2 )
den.jt <- den.1 %o% den.2
contour ( x1, x2, den.jt, xlim=c(-5,5), ylim=c(-5,5), main="(c)",

xlab=expression(x[1]), ylab=expression(x[2]), )

samp.2 <- rnorm ( 300, 0, 2 )
plot ( samp.1, samp.2, xlim=c(-5,5), ylim=c(-5,5), main="(d)",

xlab=expression(x[1]), ylab=expression(x[2]), pch="." )

den.1 <- dnorm ( x1, 0, .5 )
den.jt <- den.1 %o% den.2
contour ( x1, x2, den.jt, xlim=c(-5,5), ylim=c(-5,5), main="(e)",

xlab=expression(x[1]), ylab=expression(x[2]) )

samp.1 <- rnorm ( 300, 0, .5 )
plot ( samp.1, samp.2, xlim=c(-5,5), ylim=c(-5,5), main="(f)",

xlab=expression(x[1]), ylab=expression(x[2]), pch="." )

5.7. normal

323

= 1.

figure 5.11: bivariate normal density. e[x1] = e[x2] = 0.
(a), (b):   x1
(c), (d):   x1
(e), (f):   x1
(a), (c), (e): contours of the joint density.
(b), (d), (f): samples from the joint density.

=   x2
= 1;   x2
= 1/2;   x2

= 2.

= 2.

(a)x1x2!4!2024!4024!4!2024!4024(b)x1x2(c)x1x2!4!2024!4024!4!2024!4024(d)x1x2(e)x1x2!4!2024!4024!4!2024!4024(f)x1x25.7. normal

324

    the code makes heavy use of the fact that x1 and x2 are independent for (a) calcu-

lating the joint density and (b) drawing random samples.

    den.1 %o% den.2 yields the outer product of den.1 and den.2. it is a matrix

whose i j   th entry is den.1[i] * den.2[j].

now let   s see what happens when    is not diagonal. let y     n(  (cid:126)y,   (cid:126)y), so

p(cid:126)y((cid:126)y) =

1

(2  )n/2|  (cid:126)y| 1

2

    1
2 ((cid:126)y     (cid:126)y)t     1
e

(cid:126)y

((cid:126)y     (cid:126)y),

and let (cid:126)x     n(0, in). (cid:126)x is just a collection of independent n(0, 1) random variables.
its curves of constant density are just (n     1)-dimensional spheres centered at the origin.
de   ne (cid:126)z =   1/2 (cid:126)x +   . we will show that p(cid:126)z
= p(cid:126)y, therefore that (cid:126)z and (cid:126)y have the
same distribution, and therefore that any multivariate normal random vector has the same
distribution as a linear transformation of a standard multivariate normal random vector.
to show p(cid:126)z
= p(cid:126)y we apply theorem 4.4. the jacobian of the transformation from (cid:126)x to (cid:126)z
is |  |1/2, the square root of the determinant of   . therefore,

(cid:17)|  |   1/2

(cid:16)
     1/2((cid:126)y       )
p(cid:126)z((cid:126)y) = p (cid:126)x
1   
e   1/2(     1/2((cid:126)y     ))t(     1/2((cid:126)y     ))|  |   1/2
2  n
1
(2  )n/2|  |1/2 e    1
= p(cid:126)y((cid:126)y)

2 ((cid:126)y     )t     1((cid:126)y     )

=

=

the preceding result says that any multivariate normal random variable, (cid:126)y in our notation
above, has the same distribution as a linear transformation of a standard normal random
variable.

to see what multivariate normal densities look like it is easiest to look at 2 dimen-
sions. figure 5.12 shows three bivariate normal densities. the left-hand column shows
contour plots of the bivariate densities; the right-hand column shows samples from the
joint distributions. in all cases, e[x1] = e[x2] = 0 and   1 =   2 = 1. in the top row,
  1,2 = 0; in the second row,   1,2 = .5; in the third row,   1,2 =    .8.

5.7. normal

325

figure 5.12: bivariate normal density. e[x1] = e[x2] = 0;   1 =   2 = 1.
(a), (b):   1,2 = 0.
(c), (d):   1,2 = .5.
(e), (f):   1,2 =    .8.
(a), (c), (e): contours of the joint density.
(b), (d), (f): samples from the joint density.

ax1x2!4!2024!4024!4!2024!4024bx1x2cx1x2!4!2024!4024!4!2024!4024dx1x2ex1x2!4!2024!4024!4!2024!4024fx1x25.7. normal

326

figure 5.12 was produced with the following r code.

par ( mfrow=c(3,2) ) # a 3 by 2 array of plots
npts <- 60
sampsize <- 300

x1 <- seq(-5,5,length=npts)
x2 <- seq(-5,5,length=npts)

sigma <- array ( na, c(3,2,2) )
sigma[1,,] <- c(1,0,0,1)
sigma[2,,] <- c(1,.5,.5,1)
sigma[3,,] <- c(1,-.8,-.8,1)

den.jt <- matrix ( na, npts, npts )

for ( i in 1:3 )

sig <- sigma[i,,]
siginv <- solve(sig) # matrix inverse
for ( j in 1:npts )
for ( k in 1:npts )

x <- c ( x1[j], x2[k] )
den.jt[j,k] <- ( 1 / sqrt(2*pi*det(sig)) ) *

exp ( -.5 * t(x) %*% siginv %*% x )

contour ( x1, x2, den.jt, xlim=c(-5,5), ylim=c(-5,5),

drawlabels=f,
xlab=expression(x[1]),
ylab=expression(x[2]), main=letters[2*i-1] )

samp <- matrix ( rnorm ( 2*sampsize ), 2, sampsize )
samp <- sig %*% samp
plot ( samp[1,], samp[2,], pch=".",

xlim=c(-5,5), ylim=c(-5,5),
xlab=expression(x[1]),
ylab=expression(x[2]), main=letters[2*i] )

5.7. normal

327

5.7.3 marginal, conditional, and related distributions
we conclude this section with some theorems about normal random variables that will
prove useful later.
theorem 5.25. let (cid:126)x     n(  ,   ) be an n-dimensional normal random variable; let a be a
full rank n by n matrix; and let y = ax. then y     n(a  , a  at).
proof. by theorem 4.4 (pg. 268),

2

=

=

1

1

p(cid:126)y((cid:126)y) = p (cid:126)x(a   1(cid:126)y)|a   1|
(2  )n/2|a||  | 1
(2  )n/2|a||  | 1
(2  )n/2|a||  | 1
(2  )n/2|a  at| 1

1

1

=

=

2

2

2

e    1

e    1

e    1

2 (a   1(cid:126)y      (cid:126)x)t     1(a   1(cid:126)y      (cid:126)x)

2 (a   1((cid:126)y   a   (cid:126)x))t     1(a   1((cid:126)y   a   (cid:126)x))

2 ((cid:126)y   a   (cid:126)x)t(a   1)t     1a   1((cid:126)y   a   (cid:126)x)

e    1

2 ((cid:126)y   a   (cid:126)x)t(a  at)   1((cid:126)y   a   (cid:126)x)

(cid:3)
which we recognize as the n(a  , a  at) density.
corollary 5.26. let (cid:126)x     n(  ,   ) be an n-dimensional normal random variable; let a
be a full rank n by n matrix; let b be a vector of length n; and let y = ax + b. then
y     n(a   + b, a  at).
proof. see exercise 35.

(cid:3)

let (cid:126)x     n(  ,   ). divide (cid:126)x into two parts: (cid:126)x =

where (cid:126)x1 consists of the    rst

several components of (cid:126)x and (cid:126)x2 consists of the last several components. then the mean
where
and covariance matrix can be divided conformably:    =

;    =

  2,1 =   t
1,2. we often need to know the marginal distribution of (cid:126)x1 or the conditional
distribution of (cid:126)x2 given (cid:126)x1. those are given by theorems 5.27 and 5.28. our proofs
follow anderson [1984].

(cid:32)

(cid:33)

  1
  2

(cid:32)  1,1   1,2

(cid:33)

  2,1   2,2

(cid:33)

(cid:32) (cid:126)x1

(cid:126)x2

328

  1,2),
(cid:3)

5.7. normal
theorem 5.27. (cid:126)x1     n(  1,   1,1).
proof. let b =      2,1     1

theorem 5.25 says (cid:126)y has a normal distribution. the mean is

1,1 and de   ne
(cid:126)y    

(cid:33)

.

=

(cid:126)y2

(cid:126)x2

b i

(cid:32)(cid:126)y1
(cid:33)
(cid:32) i 0
(cid:33)(cid:32)
(cid:33)(cid:32)  1,1   1,2

(cid:33)(cid:32) (cid:126)x1
(cid:32) i 0
(cid:33)
(cid:32)
(cid:33)(cid:32) i 0

b i

  1
  2

=

  2,1   2,2

b i
  1,2

(cid:33)

.

  1

b  1 +   2

(cid:33)t
(cid:33)(cid:32)i bt

(cid:33)

  1,1bt +   1,2

(cid:33)

0

  2,2       2,1     1

1,1

.

  1,2

e((cid:126)y) =

b i

(cid:32) i 0
(cid:32)
(cid:32)
(cid:32)  1,1

0

  1,1

  1,1

b  1,1 +   2,1 b  1,2 +   2,2

0

i

b  11 +   2,1 b  1,1bt +   2,1bt + b  1,2 +   2,2

(cid:33)

the covariance matrix is

cov((cid:126)y) =

=

=

=

then theorem 5.24 says (cid:126)y1     n(  1,   1,1). it also says (cid:126)y2     n(b  1 +   2,   2,2       2,1     1
a fact we shall use in the proof of theorem 5.28
theorem 5.28. (cid:126)x2 | (cid:126)x1     n
proof. let b =      2,1     1

  2 +   2,1     1

  1,2

(cid:16)

(cid:17)

1,1

.

1,1

1,1 and de   ne
(cid:126)y    

(cid:33)

(cid:33)(cid:32) (cid:126)x1

(cid:32) i 0

1,1( (cid:126)x1       1),   2,2       2,1     1
(cid:33)
(cid:33)

b i

(cid:126)x2

=

.

(cid:32)(cid:126)y1
(cid:32) (cid:126)x1

(cid:126)y2

the distribution of (cid:126)y was worked out in the proof of theorem 5.27. here we work back-

(cid:33)

, then divide by the marginal density of (cid:126)x1 to get
wards and derive the joint density of
the density of (cid:126)x2 | (cid:126)x1. this may seem strange, because we already know the joint density
of

. however, in this proof we shall write the joint density in a di   erent way.

(cid:32) (cid:126)x1

(cid:126)x2

(cid:126)x2

5.7. normal

329

because the jacobian of the transformation is 1, the joint density p (cid:126)x1, (cid:126)x2((cid:126)x1, (cid:126)x2) is found
by writing the joint density p(cid:126)y1,(cid:126)y2((cid:126)y1, (cid:126)y2) = p(cid:126)y1((cid:126)y1)  p(cid:126)y2 | (cid:126)y1((cid:126)y2 | (cid:126)y1) = p(cid:126)y1((cid:126)y1)  p(cid:126)y2((cid:126)y2) (because
(cid:126)y1     (cid:126)y2), then substituting (cid:126)x1 for (cid:126)y1 and b(cid:126)x1 + (cid:126)x2 for (cid:126)y2. let n2 be the length of (cid:126)x2 and
  2,2| 1 =   2,2       2,1     1

  1,2. then,

1,1

p (cid:126)x2 | (cid:126)x1((cid:126)x2 | (cid:126)x1) =

=

p (cid:126)x1, (cid:126)x2((cid:126)x1, (cid:126)x2)

p (cid:126)x1((cid:126)x1)

p(cid:126)y1,(cid:126)y2((cid:126)x1, b(cid:126)x1 + (cid:126)x2)

p(cid:126)y1((cid:126)x1)

p(cid:126)y1((cid:126)x1)p(cid:126)y2(b(cid:126)x1 + (cid:126)x2)

=

p(cid:126)y1((cid:126)x1)
= p(cid:126)y2(b(cid:126)x1 + (cid:126)x2)
1
=
2 |  2,2| 1| 1
1
2 |  2,2| 1| 1

(2  ) n2

(2  ) n2

=

2

2

(cid:104)
(b(cid:126)x1+(cid:126)x2   (b  1+  2))t     1
(cid:104)
((cid:126)x2   (  2   b((cid:126)x1     1)))t     1

(cid:105)
2,2| 1(b(cid:126)x1+(cid:126)x2   (b  1+  2))

(cid:105)
2,2| 1((cid:126)x2   (  2   b((cid:126)x1     1)))

,

e    1

2

e    1

2

which is the normal density with mean e[ (cid:126)x2 | (cid:126)x1] =   2    b((cid:126)x1      1) =   2 +   2,1     1
and covariance matrix cov( (cid:126)x2 | (cid:126)x1) =   2,2| 1 =   2,2       2,1     1

theorem 5.29. let x1, . . . , xn     i.i.d. n(  ,   ). de   ne s 2    (cid:80)n

1,1((cid:126)x1      1)
(cid:3)
  1,2.
i=1(xi       x)2. then   x     s 2.

1,1

proof. de   ne the random vector (cid:126)y = (y1, . . . , yn)t by

y1 = x1       x
y2 = x2       x
...

yn   1 = xn   1       x
yn =   x

the proof follows these steps.

1. s 2 is a function only of (y1, . . . , yn   1)t; i.e. not a function of yn.
2. (y1, . . . , yn   1)t     yn.
3. therefore s 2     yn.

                     2

yi

i=1

y2
i +

                      n   1(cid:88)
                                                                   (cid:126)x     a (cid:126)x

5.8. the t distribution

1. (cid:80)n
i=1(xi       x) = 0. therefore, (xn       x) =    (cid:80)n   1
                     2

                      n   1(cid:88)

(xi       x)2 +

(xi       x)

n   1(cid:88)

s 2 =

i=1

i=1

n   1(cid:88)

i=1

=

i=1 (xi       x). and therefore

330

is a function of (y1, . . . , yn   1)t.

2.

(cid:126)y =

                                                                  

n

1     1
    1
...
    1

n

n
1
n

n

    1
1     1
...
    1

n

n

n

    1
      
n     1
      
...
...
       1     1
      

    1
    1
...
n     1

n

n
1
n

n
1
n

1
n

where the matrix a is de   ned by the preceding equation, so
(cid:126)y     n(a  ,   2aat). the    rst n     1 rows of a are each orthogonal to the last row.
therefore

                    11

(cid:126)0t

                  

(cid:126)0
1/n

aat =

where   11 has dimension (n     1)    (n     1) and (cid:126)0 is the (n     1)-dimensional vector of
0   s. thus, by theorem 5.24, (y1, . . . , yn   1)t     yn.

3. follows immediately from 1 and 2.

(cid:3)

5.8 the t distribution

the t distribution arises when making id136 about the mean of a normal distribution.
let x1, . . . , xn     i.i.d. n(  ,   ) where both    and    are unknown, and suppose our goal
   
is to estimate   .      =   x is a sensible estimator. its sampling distribution is   x     n(  ,   /
n)
or, equivalently,

  x       
   
n
  /

    n(0, 1)

we would like to use this equation to tell us how accurately we can estimate   . apparently
we can estimate    to within about   2  /
n most of the time. but that   s not an immediately

   

5.8. the t distribution

331

(cid:16)
n   1(cid:80)(xi       x)2(cid:17)1/2

useful statement because we don   t know   . so we estimate    by      =
and say

  x       
   
n
    /

    n(0, 1),

   
approximately. this section derives the exact distribution of (   x       )/(     /
n) and assesses
how good the normal approximation is. we already know from corollary 5.29 that   x         .

theorem 5.31 gives the distribution of s 2 = n     2 =(cid:80)(xi       x)2. first we need a lemma.

lemma 5.30. let v = v1 + v2 and w = w1 + w2 where v1     v2 and w1     w2. if v and
w have the same distribution, and if v1 and w1 have the same distribution, then v2 and
w2 have the same distribution.

proof. using moment generating functions,

mv2(t) = mv(t)/mv1(t)
= mw(t)/mw1(t)
= mw2(t)

theorem 5.31. let x1, . . . , xn     i.i.d. n(  ,   ). de   ne s 2 =(cid:80)n

i=1(xi       x)2. then

(cid:3)

(cid:19)2

.

  

i=1

s 2

n   1.

v =

  2       2
(cid:18) xi       
n(cid:88)
(cid:32)(xi       x) + (   x       )
(cid:33)2
(cid:33)2
(cid:32)   x       
(cid:32) xi       x
(cid:33)2
(cid:32)   x       
(cid:32) xi       x

(cid:33)2
(cid:33)2

+ n

  

  

  
   
n

+

  /

  

+ v2

n(cid:88)
(xi       x)

i=1

+ 2(   x       )

proof. let

then v       2

n and

v =

=

=

n(cid:88)
n(cid:88)
n(cid:88)

i=1

i=1

i=1

    s 2
  2

332

(cid:19)2     w1 + w2

5.8. the t distribution
where s 2/  2     v2 and v2       2
n   1(cid:88)

where w1     w2, w1       2

de   ne

(cid:18) xn       

  

v =

+

  

i=1

(cid:19)2

1. but also,

(cid:18) xi       
n   1 and w2       2
(cid:32)   x       

(cid:114)

t    

n     1
n

   
n

    /

(cid:33)

(cid:112)
   
n(   x       )/  
s 2/(n     1)  2

.

=

1. now the conclusion follows by lemma 5.30. (cid:3)

   
v/(n     1) where u     n(0, 1), v       2

then by corollary 5.29 and theorem 5.31, t has the distribution of
n   1, and u     v. this distribution is called the t
u/
distribution with n     1 degrees of freedom. we write t     tn   1. theorem 5.32 derives its
density.
theorem 5.32. let u     n(0, 1), v       2
(cid:16)

(cid:112)
p, and u     v. then t     u/
(cid:33)    p+1
(cid:17)    p+1

v/p has density

(cid:32)

2

pt(t) =

2

2 )p p
  ( p+1
   
  ( p
2 )
  

t2 + p

2 =

  ( p+1
2 )
   
  ( p
p  
2 )

1 +

t2
p

.

proof. de   ne

t =

u(cid:112)

v/p

and

y = v

we make the transformation (u, v)     (t, y),    nd the joint density of (t, y), and then the
marginal density of t. the inverse transformation is

u =

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) du

dt
dv
dt

the jacobian is

the joint density of (u, v) is

ty 1
2   
p

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) =

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) y

1

2   
p
0

du
dy
dv
dy

and

v = y

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) =

ty    1
   
2
p
2
1

y 1
2   
p

pu,v(u, v) =

e    u2

2

1   
2  

1
2 )2 p
  ( p

2

2   1e    v
v p
2 .

5.8. the t distribution

333

therefore the joint density of (t, y) is
1   
2  

pt,y(t, y) =

and the marginal density of t is

e    t2y

2p

1
2 )2 p
  ( p

2

2   1e    y
y p

2

y 1
2   
p

pt(t) =

(cid:90)

=

=

   

   

pt,y(t, y) dy
   

2

1
2 )2 p
2    ( p
1
2 )2 p+1
  

    ( p

2

   

(cid:90)    
(cid:16)

0

2    1e    y
2 ( t2
y p+1

p

(cid:32) 2p
(cid:17) p+1

2

t2 + p

(cid:90)    

0

p

p

  (

  ( p+1
2 )

t2+p

)

p + 1

2
1

(cid:16) 2p
(cid:17)    p+1
(cid:33)    p+1

2

2

=

=

(cid:32)

   

  ( p+1
2 )pp/2
  ( p
2 )
  
  ( p+1
2 )
   
  ( p
p  
2 )

t2 + p

1 +

t2
p

+1) dy

(cid:33) p+1

2

   
2    1e
y p+1

y

2p/(t2+p) dy

.

(cid:3)

we formalize theorem 5.32 with a de   nition. a random variable t with density

(cid:16)

(cid:17)    p+1

t2 + p

2 =

(cid:32)

(cid:33)    p+1

2

.

  ( p+1
2 )
   
  ( p
p  
2 )

1 +

t2
p

pt(t) =

2

2 )p p
  ( p+1
   
  ( p
2 )
  

is said to have a t distribution, or a student   s t distribution, with p degrees of freedom. the
distribution is named for william sealy gosset who used the pseudonym student when he
wrote about the t distribution in 1908.

figure ?? shows the t density for 1, 4, 16, and 64 degrees of freedom, and the n(0, 1)

density. the two points to note are

1. the t densities are unimodal and symmetric about 0, but have less mass in the middle

and more mass in the tails than the n(0, 1) density.

2. in the limit, as p        , the tp density appears to approach the n(0, 1) density. (the

appearance is correct. see exercise 36.)

5.8. the t distribution

334

figure 5.13: t densities for four degrees of freedom and the n(0, 1) density

!4!20240.00.10.20.30.4tdensitydf =  1df =  4df =  16df =  64normal5.9. exercises

335

figure ?? was produced with the following snippet.

x <- seq ( -5, 5, length=100 )
dens <- cbind ( dt(x,1), dt(x,4), dt(x,16), dt(x,64),

dnorm(x) )

matplot ( x, dens, type="l", ylab="density", xlab="t",

lty=c(2:5,1), col=1 )

legend ( x=-5, y=.4, lty=c(2:5,1),

legend=c ( paste("df = ", c(1,4,16,64)),

"normal" ) )

   
n(   x       )/      had a n(0, 1)
at the beginning of section 5.8 we said the quantity
   
distribution, approximately. theorem 5.32 derives the density of the related quantity
n     1(   x       )/      which has a tn   1 distribution, exactly. figure ?? shows how similar
those distributions are. the t distribution has slightly more spread than the n(0, 1) distri-
bution, re   ecting the fact that    has to be estimated. but when n is large, i.e. when    is
well estimated, then the two distributions are nearly identical.

if t     tp, then

t

dt

      

1 +

e[t] =

(5.7)
in the limit as t        , the integrand behaves like t   p; hence 5.7 is integrable if and only
if p > 1. thus the t1 distribution, also known as the cauchy distribution, has no mean.
when p > 1, e[t] = 0, by symmetry. by a similar argument, the tp distribution has a
variance if and only if p > 2. when p > 2, then var(t) = p/(p     2). in general, t has a
k-th moment (e[t k] <    ) if and only if p > k. because the t distribution does not have
moments of all order, it does not have a moment generating function.

(cid:90)    

(cid:32)

(cid:33)    p+1

2

t2
p

  ( p+1
2 )
   
  ( p
p  
2 )

5.9 exercises

1. prove theorem 5.4 by moment generating functions.

2. refer to theorem 5.8.

(a) what was the point of the next to last step?
(b) justify the last step.

5.9. exercises

336

3. assume that all players on a basketball team are 70% free throw shooters and that

free throws are independent of each other.

(a) the team takes 40 free throws in a game. write down a formula for the prob-
ability that they make exactly 37 of them. you do not need to evaluate the
formula.

(b) the team takes 20 free throws the next game. write down a formula for the

id203 that they make exactly 9 of them.

(c) write down a formula for the id203 that the team makes exactly 37 free
throws in the    rst game and exactly 9 in the second game. that is, write a
formula for the id203 that they accomplish both feats.

4. explain the role of qnbinom(...) in the r code for figure 5.2.

5. write down the distribution you would use to model each of the following random
variables. be as speci   c as you can. i.e., instead of answering    poisson distribu-
tion   , answer    poi(3)    or instead of answering    binomial   , answer    bin(n, p) where
n = 13 but p is unknown.   

(a) the temperature measured at a randomly selected point on the surface of mars.
(b) the number of car accidents in january at the corner of broad street and main

street.

(c) out of 20 people in a post o   ce, the number who, when exposed to anthrax

spores, actually develop anthrax.

(d) out of 10,000 people given a smallpox vaccine, the number who develop

smallpox.

(e) the amount of mercury in a    sh caught in lake ontario.

6. a student types dpois(3,1.5) into r. r responds with 0.1255107.

(a) write down in words what the student just calculated.
(b) write down a mathematical formula for what the student just calculated.

7. name the distribution. your answers should be of the form poi(  ) or n(3, 22), etc.

use numbers when parameters are known, symbols when they   re not.
you spend the evening at the roulette table in a casino. you bet on red 100 times.
each time the chance of winning is 18/38. if you win, you win $1; if you lose,
you lose $1. the average amount of time between bets is 90 seconds; the standard
deviation is 5 seconds.

5.9. exercises

337

(a) the number of times you win
(b) the number of times you lose
(c) the number of losses until your third win (if you don   t win three times in 100

tries, you keep playing.)

(d) the number of wins until your thirtieth loss (if you don   t lose thirty times in

100 tries, you keep playing.)

(e) the amount of time to play your    rst 40 bets
(f) the additional amount of time to play your next 60 bets
(g) the total amount of time to play your 100 bets
(h) your net pro   t at the end of the evening
(i) the amount of time until a stranger wearing a red carnation sits down next to

you

(j) the number of times you are accidentally jostled by the person standing behind

you

8. a golfer plays the same golf course daily for a period of many years. you may
assume that he does not get better or worse, that all holes are equally di   cult and
that the results on one hole do not in   uence the results on any other hole. on any one
hole, he has probabilities .05, .5, and .45 of being under par, exactly par, and over
par, respectively. write down what distribution best models each of the following
random variables. be as speci   c as you can. i.e., instead of answering "poisson
distribution" answer "poi(3)" or "poi(  ) where    is unknown." for some parts the
correct answer might be "i don   t know."

(a) x, the number of holes over par on 17 september, 2002
(b) w, the number of holes over par in september, 2002
(c) y, the number of rounds over par in september, 2002
(d) z, the number of times he is hit by lightning in this decade
(e) h, the number of holes-in-one this decade
(f) t, the time, in years, until his next hole-in-one

9. during a pet scan, a source (your brain) emits photons which are counted by a
detector (the machine). the detector is mounted at the end of a long tube, so only
photons that head straight down the tube are detected. in other words, though the

5.9. exercises

338

source emits photons in all directions, the only ones detected are those that are emit-
ted within the small range of angles that lead down the tube to the detector.
let x be the number of photons emitted by the source in 5 seconds. suppose the
detector captures only 1% of the photons emitted by the source. let y be the number
of photons captured by the detector in those same 5 seconds.

(a) what is a good model for the distribution of x?
(b) what is the conditional distribution of y given x?
(c) what is the marginal distribution of y?

try to answer these questions from    rst principles, without doing any calculations.

10.

(a) prove theorem 5.12 using moment generating functions.
(b) prove theorem 5.13 using moment generating functions.

11.

(a) prove theorem 5.15 by    nding e[y2] using the trick that was used to prove

theorem 5.13.

(b) prove theorem 5.15 by    nding e[y2] using moment generating functions.

12. case study 4.2.3 in larsen and marx [add reference] claims that the number of
fumbles per team in a football game is well modelled by a poisson(2.55) distribution.
for this quiz, assume that claim is correct.

(a) what is the expected number of fumbles per team in a football game?
(b) what is the expected total number of fumbles by both teams?
(c) what is a good model for the total number of fumbles by both teams?
(d) in a game played in 2002, duke fumbled 3 times and navy fumbled 4 times.
write a formula (don   t evaluate it.) for the id203 that duke will fumble
exactly 3 times in next week   s game.

(e) write a formula (don   t evaluate it.) for the id203 that duke will fumble

exactly three times given that they fumble at least once.

13. clemson university, trying to maintain its superiority over duke in acc football,
recently added a new practice    eld by reclaiming a few acres of swampland sur-
rounding the campus. however, the coaches and players refused to practice there in
the evenings because of the overwhelming number of mosquitos.
to solve the problem the athletic department installed 10 bug zappers around the
   eld. each bug zapper, each hour, zaps a random number of mosquitos that has a
poisson(25) distribution.

5.9. exercises

339

(a) what is the exact distribution of the number of mosquitos zapped by 10 zappers

in an hour? what are its expected value and variance?

(b) what is a good approximation to the distribution of the number of mosquitos

zapped by 10 zappers during the course of a 4 hour practice?

(c) starting from your answer to the previous part,    nd a random variable relevant

to this problem that has approximately a n(0,1) distribution.

14. bob is a high school senior applying to duke and wants something that will make
his application stand out from all the others. he    gures his best chance to impress
the admissions o   ce is to enter the guinness book of world records for the longest
amount of time spent continuously brushing one   s teeth with an electric toothbrush.
(time out for changing batteries is permissible.) batteries for bob   s toothbrush last
an average of 100 minutes each, with a variance of 100. to prepare for his assault
on the world record, bob lays in a supply of 100 batteries.
the television cameras arrive along with representatives of the guinness company
and the american dental association and bob begins the quest that he hopes will
be the de   ning moment of his young life. unfortunately for bob his quest ends in
humiliation as his batteries run out before he can reach the record which currently
stands at 10,200 minutes.
justice is well served however because, although bob did take ap statistics in high
school, he was not a very good student. had he been a good statistics student he
would have calculated in advance the chance that his batteries would run out in less
than 10,200 minutes.
calculate, approximately, that chance for bob.

15. an article on statistical fraud detection (bolton and hand [1992]), when talking

about records in a database, says:
"one of the di   culties with fraud detection is that typically there are many legiti-
mate records for each fraudulent one. a detection method which correctly identi   es
99% of the legitimate records as legitimate and 99% of the fraudulent records as
fraudulent might be regarded as a highly e   ective system. however, if only 1 in
1000 records is fraudulent, then, on average, in every 100 that the system    ags as
fraudulent, only about 9 will in fact be so."
question: can you justify the "about 9"?

16. in 1988 men averaged around 500 on the math sat, the sd was around 100 and the

histogram followed the normal curve.

5.9. exercises

340

(a) estimate the percentage of men getting over 600 on this test in 1988.
(b) one of the men who took the test in 1988 will be picked at random, and you
have to guess his test score. you will be given a dollar if you guess it right to
within 50 points.

i. what should you guess?
ii. what is your chance of winning?

this question was inspired by freedman et al. [1998].

17. multiple choice.

(a) x     poi(  ). pr[x     7] =

i. (cid:80)7
ii. (cid:80)7
iii. (cid:80)7

x=       e       x/x!
x=0 e       x/x!
  =0 e       x/x!

(b) x and y are distributed uniformly on the unit square.

pr[x     .5|y     .25] =
i. .5
ii. .25
iii. can   t tell from the information given.

(c) x     normal(  ,   ). pr[x >    +   ]

i. is more than .5
ii. is less than .5
iii. can   t tell from the information given.

  x     (x1 +        + x100)/100. y     (x1 +        + x100).

(d) x1, . . . , x100     n(0, 1).
calculate
i. pr[   .2       x     .2]
ii. pr[   .2     xi     .2]
iii. pr[   .2     y     .2]
iv. pr[   2       x     2]
v. pr[   2     xi     2]
vi. pr[   2     y     2]
vii. pr[   20       x     20]
viii. pr[   20     xi     20]

5.9. exercises

ix. pr[   20     y     20]

(e) x     bin(100,   ).(cid:80)100

  =0 f (x|  ) =

341

(f) x and y have joint density f (x, y) on the unit square. f (x) =

i. 1
ii. the question doesn   t make sense
iii. can   t tell from the information given.

i.
ii.
iii.

0 f (x, y) dx
0 f (x, y) dy
0 f (x, y) dy

(cid:82) 1
(cid:82) 1
(cid:82) x
i. [  r/(r     1)!]((cid:81) xi)r   1e     (cid:80) xi
ii. [  nr/((r     1)!)n]((cid:81) xi)r   1e     (cid:81) xi
iii. [  nr/((r     1)!)n]((cid:81) xi)r   1e     (cid:80) xi

f (x1, . . . , xn) =

(g) x1, . . . , xn     gamma(r, 1/  ) and are mutually independent.

18. in figure 5.2, the plots look increasingly normal as we go down each column. why?

hint: a well-known theorem is involved.

19. prove theorem 5.7.

20. prove a version of equation 5.1 on page 290. let k = 3. start from the joint pmf of

y1 and y2 (use theorem 5.7.), derive the marginal pmf of y1, and identify it.

21. ecologists who study forests have a concept of seed rain. the seed rain in an area is
the number of seeds that fall on that area. seed rain is a useful concept in studying
how forests rejuvenate and grow. after falling to earth, some seeds germinate and
become seedlings; others do not. for a particular square-meter quadrat, let y1 be
the number of seeds that fall to earth and germinate and y2 be the number of seeds
that fall to earth but do not germinate. let y = y1 + y2. adopt the statistical model
y1     poi(  1); y2     poi(  2) and y1     y2. theorem 5.10 says y     poi(  ) where
   =   1 +   2. find the distribution of y1 given y. i.e.,    nd p[y1 = y1 | y = y].

22. prove theorem 5.11. hint: use moment generating functions and the fact that

23.

limn      (1 + 1/n)n = e.
(a) let y     u(1, n) where the parameter n is an unknown positive integer. suppose
we observe y = 6. find the m.l.e.   n. hint: equation 5.2 de   nes the pmf for
y     {1, 2, . . . , n}. what is p(y) when y (cid:60) {1, 2, . . . , n}?

5.9. exercises

342

(b) in world war ii, when german tanks came from the factory they had serial
numbers labelled consecutively from 1. i.e., the numbers were 1, 2, . . . . the
allies wanted to estimate t, the total number of german tanks and had, as data,
the serial numbers of the tanks they had captured. assuming that tanks were
captured independently of each other and that all tanks were equally likely to
be captured    nd the m.l.e.   t.

24. let y be a continuous random variable, y     u(a, b).

(a) find e[y].
(b) find var(y).
(c) find my(t).

25.

(a) is there a discrete distribution that is uniform on the positive integers? why or

why not? if there is such a distribution then we might call it u(1,   ).

(b) is there a continuous distribution that is uniform on the real line? why or why

not? if there is, then we might call it u(      ,   ).

26. ecologists are studying pitcher plants in a bog. to a good approximation, pitcher
plants follow a poisson process with parameter   . that is, (i) in a region of area a,
the number of pitcher plants has a poisson distribution with parameter a  ; and (ii)
the numbers of plants in two disjoint regions are conditionally independent given   .
the ecologists want to make an id136 about   .

(a) this section of the problem describes a simpli   ed version of the ecologists   
sampling plan. they choose an arbitrary site s near the middle of the bog.
then they look for pitcher plants near s and record the location of the nearest
one. let r be the distance from s to the nearest pitcher plant and let q = r2.

i. find the density of q.
ii. find the density of r.
iii. find the m.l.e.,     .
iv. answer the previous questions under the supposition that the ecologists
had recorded the distance to the k   th nearest pitcher plant. (the previous
questions are for k = 1.)

(b) this section of the problem describes the ecologists    sampling plan more ac-
curately. first, they choose some sites s1, . . . , sn in the bog. then they go to
each site,    nd the nearest pitcher plant and record its location. the data are
these locations l1, . . . , ln. some sites may share a nearest plant, so some of

5.9. exercises

343

the li   s may be referring to the same plant. let di be the distance from si to li
and di, j be the distance from si to l j.
i. let d1 be the distance from s1 to l1. find the density p(d1|  ). you may
assume that pitcher plants arise according to a homogeneous poisson pro-
cess with rate   . hint: use the relationship between a poisson process and
the exponential distribution.

ii. when the ecologists go to s2 they discover that the nearest plant is the
same plant they already found nearest to s1. in other words, they discover
that d2 = d2,1. find pr[d2 = d2,1|  ].

iii. find the likelihood function (cid:96)(  )     p[l1, . . . , ln|  ].
iv. find the m.l.e.          argmax   (cid:96)(  ).
v. suppose the prior distribution for    is gam(  ,   ). find the posterior dis-

tribution for   .

27. let x     gam(  ,   ) and let y = 1/x. find the pdf of y. we say that y has an inverse

gamma distribution with parameters    and    and write y     invgam(  ,   ).

28. prove theorem 5.18. hint: use the method of theorem 5.13.
29. let x1, . . . , xn     i.i.d. u(0, 1). find the distribution of x(n), the largest order statistic.
30. in the r code to create figure 2.19, explain how to use dgamma(...) instead of

dpois(...).

31. prove the claim on page 309 that the half-life of a radioactive isotope is m =    log 2.

32. prove theorem 5.16.

33. prove theorem 5.19.

34. page 320 shows that the n-dimensional normal density with a diagonal covariance
matrix is the product of n separate univariate normal densities.
in this problem
you are to work in the opposite direction. let x1, . . . , xn be independent normally
distributed random variables with means   1, . . . ,   n and sd   s   1, . . . ,   n.

(a) write down the density of each xi.
(b) write down the joint density of x1, . . . , xn.
(c) show that the joint density can be written in the form of equation 5.6.
(d) derive the mean vector and covariance matrix of x1, . . . , xn.

5.9. exercises

35. prove corollary 5.26.
36. show, for every x     r,

p       ptp(x) =
lim

e    x2

2

1   
2  

344

where ptp(x) is the t density with p degrees of freedom, evaluated at x. hint: use
sterling   s formula. (this problem is exercise 5.18(c) in statistical id136, 2nd
ed. by casella and berger.)

37. it turns out that the t distribution with p degrees of freedom can be written as a
mixture of normal distributions, a fact that is sometimes useful in statistical calcu-
lations. let        gam(p/2, 2) and, conditional on   , y     n(0,
p/  ). show that the
marginal distribution of y is the t distribution with p degrees of freedom.

(cid:112)

38. this exercise provides a generalization of theorem 5.25.

in that theorem, (cid:126)x    
n(  ,   ) and a is a full-rank (invertible) n by n matrix. in this exercise we let a be an
m by n matrix where m < n and a has rank m. let y = ax. what is the distribution
of y?
(a) explain why a can be augmented with n     m additional rows, which we think

of as a matrix b, to create an n by n full-rank matrix

(cid:32)a
(cid:33)

b

a    =

you may cite results from id202.

(b) use theorem 5.25 to derive the distribution of a   .
(c) use theorem 5.27 to derive the distribution of a.
(d) in section 3.2.2 we saw that the m.l.e. of the coe   cients in a normal linear
model, under the assumption y     n(xb,   2i) is   b = (xtx)   1xty. since y is a
random variable, and   b is a transformation of y,   b is also a random variable.
find its distribution.

39. this exercise will be useful in the bayesian analysis of normal distributions. it is a
generalization of exercise 28. let        gam(  ,   ) and, conditional on   , let    have a
normal distribution with mean m and variance v/  . all of   ,   , m and v are known.

(a) find the joint density of (  ,   ).
(b) find the marginal density of   . show that    is a linear transformation of a

random variable that has a t distribution. find its degrees of freedom.

5.9. exercises

345

and variance.

given (  ,   ), let y1, . . . , yn be a random sample from the normal distribution with
mean    and precision   . our goal is to    nd the posterior distribution of (  ,   ).
(c) write an expression that is proportional to p(  ,   | y1, . . . , yn).
(d) show that the conditional posterior p(  |   , y1, . . . , yn) is normal. find its mean
(e) show that the marginal posterior p(  | y1, . . . , yn) is gamma. find its parame-
(f) find the marginal posterior density p(  | y1, . . . , yn). show that it represents a
linear transformation of a random variable that has a t distribution. find its
degrees of freedom.

ters.

chapter 6

bayesian statistics

6.1 multidimensional bayesian analysis

this chapter takes up bayesian statistics. modern bayesian statistics relies heavily on
computers, computation, programming, and algorithms, so that will be the major focus of
this chapter. we cannot give a complete treatment here, but there are several good books
that cover these topics in more depth. see, for example, gelman et al. [2004], liu [2004],
marin and robert [2007], or robert and casella [1997].

recall the framework of bayesian id136 from section 2.5.
    we posit a parametric family of distributions {p(y|   )}.
    we express our old knowledge of    through a prior id203 density p(  ).
    the previous two items combine to yield p(y,   ) and, ultimately, p(  | y).
    the posterior density p(  | y) represents our new state of knowledge about   .

the posterior density is

(cid:82)

p(  | y) =

p(  )p(y|   )
p(  )p(y|   ) d  

    p(  )p(y|   ).

(6.1)

so far, so good. but in many interesting applications,    is multi-dimensional and
problems arise when we want to examine the posterior. equation 6.1 tells us how to
evaluate the posterior at any value of   , but that   s not always su   cient for getting a sense
of which values of    are most likely, somewhat likely, unlikely, etc. one way to develop a
feeling for a multidimensional posterior is to examine a marginal posterior density, say

(cid:90)

(cid:90)

p(  1 | y) =

      

p(  1, . . . ,   k | y) d  2 . . . d  k.

(6.2)

346

6.1. multidimensional bayesian analysis

347

unfortunately, the integral in equation 6.2 is often not analytically tractable and must be
integrated numerically. standard numerical integration techniques such as quadrature may
work well in low dimensions, but in bayesian statistics equation 6.2 is often su   ciently
high dimensional that standard techniques are unreliable. therefore, new numerical inte-
gration techniques are needed. the most important of these is called markov chain monte
carlo integration, or mcmc. other techniques can be found in the references at the be-
ginning of the chapter. for the purposes of this book, we investigate mcmc. but    rst,
to get a feel for bayesian analysis, we explore posteriors in low dimensional, numerically
tractable examples.

the general situation is that there are multiple parameters   1, . . . ,   k, and data y1, . . . ,
yn. we may be interested in marginal, conditional, or joint distributions of the parameters
either a priori or a posteriori. some examples:

    p(  1, . . . ,   k), the joint prior
    p(  1, . . . ,   k | y1, . . . , yn), the joint posterior

    p(  1 | y1, . . . , yn) =(cid:82)       (cid:82)

of   1

p(  1, . . . ,   n | y1, . . . , yn) d  2        d  k, the marginal posterior

   

p(  2, . . . ,   k |   1, y1, . . . , yn) = p(  1, . . . ,   k | y1, . . . , yn)/p(  1 | y1, . . . , yn)

    p(  1, . . . ,   k | y1, . . . , yn),

the conditional joint posterior density of (  2, . . . ,   k) given   1, where the           means
that we substitute   1 into the numerator and treat the denominator as a constant.

the examples in this section illustrate the ideas.
example 6.1 (ice cream consumption, cont.)
this example continues example 3.5 in which weekly ice cream consumption is mod-
elled as a function of temperature and possibly other variables. we begin with the
model in equation 3.10:

consumption =   0 +   1temperature + error

or

where  1, . . . ,  30     i.i.d.n(0,   ). for now, let us suppose that    is known. later we   ll
drop that assumption. because    is known, there are only two parameters:   0 and   1.

yi =   0 +   1xi +  i

6.1. multidimensional bayesian analysis

348

for a bayesian analysis we need a prior distribution for them; then we can compute
the posterior distribution. for now we adopt the following prior without comment. later
we will see why we chose this prior and examine its consequences.

i. e.

(cid:33)

(cid:32)

  0
  1

  0     n(  0,   0)
  1     n(  1,   1)
  0       1
(cid:32)(cid:32)
(cid:33)
(cid:32)

    n

  0
  1

,

  2
0
0
0   2
1

(cid:33)(cid:33)

for some choice of (  0,   1,   0,   1). the likelihood function is

(cid:96)(  0,   1) = p(y1, . . . , y30 |   0,   1)

30(cid:89)
30(cid:89)

i=1

i=1

=

=

p(yi |   0,   1)

(

    1

2

)e

1   
2    

(cid:18) yi   (  0+  1 xi)

(cid:19)2

  

to    nd the posterior density we will use matrix notation. let    =

(cid:32)

(cid:33)

   =

  2
0
0
0   2
1

, (cid:126)y = (y1, . . . , yn)t and

x =

                                                   

temperature1
temperature2

1
1
...
1 temperature30

...

                                                    .

(cid:33)

(cid:32)

  0
  1

,    =

(cid:32)

(cid:33)

,

  0
  1

conditional on   , (cid:126)y has a 30-dimensional normal distribution with mean x   and co-
variance matrix   2i30. the posterior density is proportional to the prior times the likeli-
hood.

p(  | (cid:126)y)     e    1

2 (       )t     1(       )    1

2 ((cid:126)y   x  )t((cid:126)y   x  )/  2

(6.3)

at this point we observe that the exponent is a quadratic form in   . therefore the
posterior density will be a two-dimensional normal distribution for    and we just have

6.1. multidimensional bayesian analysis

349

to complete the square to    nd the mean vector and covariance matrix. the exponent
is, apart from a factor of     1

  t[     1 + xtx/  2]       2  t[     1   + xt (cid:126)y/  2] +        = (         

2 and some irrelevant constants involving the yi   s,
   )t(     )   1(         

   ) +       

where       = (     1 + xtx/  2)   1 and       =      (     1   + xt (cid:126)y/  2). therefore, the posterior
distribution of    given (cid:126)y is normal with mean       and covariance matrix      . it is worth
noting (1) that the posterior precision matrix (     )   1 is the sum of the prior precision
matrix      1 and a part that comes from the data, xtx/  2 and (2) that the posterior mean
is      (     1   + xt (cid:126)y/  2) =      (     1   + (xtx/  2)(xtx)   1xt (cid:126)y), a matrix weighted average of
the prior mean    and the least-squares estimate (xtx)   1xt (cid:126)y where the weights are the
two precisions      1 and xtx/  2.

the derivation of the posterior distribution does not depend on any particular choice
of (  ,   ), but it does depend on the fact that the prior distribution was normal because
that   s what gives us the quadratic form in the exponent. that   s one reason we took the
prior distribution for    to be normal: it made the calculations easy.

now let   s look at the posterior more closely, see what it implies for (  0,   1), and
see how sensitive the conclusions are to the choice of (  ,   ). we   re also treating    as
known, so we   ll need a value. let   s start with the choice

(cid:32)

(cid:33)

  0
  1

(cid:33)

(cid:32)0

0

(cid:32)

(cid:33)

(cid:32)106

0

(cid:33)

0
106

  2
0
0
0   2
1

=

   =

=

;

   =

;

and

   = 0.05.

(6.4)

the large diagonal entries in    say that we have very little a priori knowledge of   . we
can use r to calculate the posterior mean and covariance.

ic <- read.table ( "data/ice cream.txt", header=t )

mu <- c ( 0, 0 )
sig <- diag ( rep ( 10^6, 2 ) )
sig <- 0.05
x <- cbind ( 1, ic$temp )
y <- ic$ic

sigstar <- solve ( solve(sig) + t(x) %*% x / (sig^2) )
mustar <- sigstar %*% ( solve(sig) %*% mu + t(x) %*% y / (sig^2) )

the result is

    =

  

(cid:33)

(cid:32)

.207
.003

(cid:32) 8.54    10   4

   1.570    10   5

(cid:33)

.

   1.570    10   5
3.20    10   7

and

      =

(6.5)

6.1. multidimensional bayesian analysis

350

figure 6.1: posterior densities of   0 and   1 in the ice cream example using the prior from
equation 6.4.

note:

    solve performs matrix inversions and solves systems of linear equations.
    t(x) is the transpose of x.
    %*% performs id127.
    the matrix product t(x) %*% y is so common it has a special shortcut, crossprod

( x, y ). we could have used crossprod to    nd       and      .

figure 6.1 shows the posterior densities. the posterior density of   0 is not very mean-
ingful because it pertains to ice cream consumption when the temperature is 0. since
our data was collected at temperatures between about 25 and 75, extrapolating to tem-
peratures around 0 would be dangerous. and because   0 is not meaningful, neither
is the joint density of (  0,   1). on the other hand, our id136 for   1 is meaningful. it
says that ice cream consumption goes up about .003 (  .001 or so) pints per person
for every degree increase in temperature. you can verify whether that   s sensible by
looking at figure 3.8.

0.100.2504812bb00.0010.0040300600bb16.1. multidimensional bayesian analysis

351

figure 6.1 was produced by the following snippet.

opar <- par ( mfrow=c(1,2) )
m <- mustar[1]
sd <- sqrt ( sigstar[1,1] )
x <- seq ( m-4*sd, m+4*sd, length=60 )
plot ( x, dnorm ( x, m, sd ), type="l",

xlab=expression(beta[0]), ylab="" )

m <- mustar[2]
sd <- sqrt ( sigstar[2,2] )
x <- seq ( m-4*sd, m+4*sd, length=60 )
plot ( x, dnorm ( x, m, sd ), type="l",

xlab=expression(beta[1]), ylab="" )

now we   d like to investigate the role of the prior density. we notice that the prior
3.2    10   7     5.7    10   4. in other words,
sd of   1 was 103 while the posterior sd is
the data has reduced the uncertainty by a huge amount. because there   s so much
information in the data, we expect the prior to have little in   uence. we can verify that
by considering priors with different sd   s and comparing their posteriors. to that end,
consider the prior

   

   =

=

;

   =

and

   = 0.05.

(6.6)

(cid:32)

  2
0
0
0   2
1

=

(cid:32)1 0
(cid:33)
(cid:33)
(cid:32) 8.53    10   4

0 1

;

   1.568    10   5

(cid:33)

,

   1.568    10   5
3.19    10   7

with prior 6.6, the posterior would be

    =

  

.207
.003

and

      =

(cid:32)

  0
  1

(cid:33)
(cid:32)

(cid:33)

(cid:32)0
(cid:33)

0

(cid:33)

(cid:32) 30

nearly identical to posterior 6.5. that   s because the data contain much more infor-
mation than the prior, so the prior plays a negligible role in determining the posterior
distribution. the posterior precision matrix (inverse covariance matrix) is      1 + xtx/  2.
, which has entries much bigger than those in      1,
in our case, xtx/  2 =
whichever prior we use. even if we did a careful job of assessing our prior, it would be
in   uential only if our prior precision matrix had entries of the same order of magnitude
as xtx/  2. since that   s unlikely     our true a priori variances are probably not as small
as 1/30     there   s little to be gained by choosing the prior carefully and much effort to
be saved by using an arbitrary prior, as long as it has reasonably large variances.

1473
1473 80145

6.1. multidimensional bayesian analysis

352

ring
1
1
1
1
1

6
6
6
6
6

id

11003
11004
11011
11013
11017

68053
68055
68057
68058
68059

xcoor
0.71
1.26
1.44
3.56
3.75

0.82
-2.24
-0.78
0.76
1.48

ycoor
0.53
2.36
6.16
5.84
8.08

10.73
13.34
14.21
14.55

13

spec
pita
pita
pita
pita
pita
...
pita
pita
pita
pita
pita

dbh
19.4
14.1
19.4
21.6
10.8

14.4
11
8

10.6
21.2

1998 1999

2000

0
0
0
0
0

0
0
0
0
0

0
0
6
0
0

0
0
0
0
5

0
4
0
0
0

0
0
0
0
10

table 6.1: the numbers of pine cones on trees in the face experiment, 1998   2000.

example 6.2 (pine cones)
one possible result of increased co2 in the atmosphere is that plants will use some of
the excess carbon for reproduction, instead of growth. they may, for example produce
more seeds, produce bigger seeds, produce seeds earlier in life, or produce seeds
when they, the plants, are smaller. to investigate this possibility in the duke face
experiment (see example 1.12 and its sequels.) a graduate student went to the face
site each year and counted the number of pine cones on pine trees in the control and
treatment plots (ladeau and clark [2001] and example 3.8).

the data are in table 6.1. the    rst column is ring. rings 1, 5, and 6 were control;
2, 3, and 4 were treatment. the next column, id, identi   es each tree uniquely; xcoor
and ycoor give the location of the tree. the next column, spec, gives the species;
pita stands for pinus taeda, or loblolly pine, the dominant canopy tree in the face
experiment. the column dbh gives diameter at breast height, a common way for
foresters and ecologists to measure the size of a tree. the    nal three columns show
the number of pine cones in 1998, 1999, and 2000. we investigate the relationship
between dbh and the number of pine cones, and whether that relationship is the same
in the control and treatment plots.

figures 6.2, 6.3, and 6.4 plot the numbers of pine cones as a function of dbh in
the years 1998   2000. in 1998, very few trees had pine cones and those that did had
very few. but by 1999, many more trees had cones and had them in greater number.
there does not appear to be a substantial difference between 1999 and 2000. as a
quick check of our visual impression we can count the fraction of pine trees having
pine cones each year, by ring. the following r code does the job.

6.1. multidimensional bayesian analysis

353

for ( i in 1:6 ) {

good <- cones$ring == i
print ( c ( sum ( cones$x1998[good] > 0 ) / sum(good),
sum ( cones$x1999[good] > 0 ) / sum(good),
sum ( cones$x2000[good] > 0 ) / sum(good) ) )

}
[1] 0.0000000 0.1562500 0.2083333
[1] 0.05633803 0.36619718 0.32394366
[1] 0.01834862 0.21100917 0.27522936
[1] 0.05982906 0.39316239 0.37606838
[1] 0.01923077 0.10576923 0.22115385
[1] 0.04081633 0.19727891 0.18367347

since there   s not much action in 1998 we will ignore the data from that year. the data
show a greater contrast between treatment (rings 2, 3, 4) and control (rings 1, 5, 6) in
1999 than in 2000. so for the purpose of this example we   ll use the data from 1999. a
good scienti   c investigation, though, would use data from all years.

we   re looking for a model with two features: (1) the id203 of cones is an
increasing function of dbh and of the treatment and (2) given that a tree has cones,
the number of cones is an increasing function of dbh and treatment. here we describe
a simple model with these features. the idea is (1) a id28 with covariates
dbh and treatment for the id203 that a tree is sexually mature and (2) a poisson
regression with covariates dbh and treatment for the number of cones given that a tree
is sexually mature. let yi be the number of cones on the i   th tree. our model is

                     1 if the i   th tree had extra co2
                     1 if the i   th tree is sexually mature

0 otherwise

0 otherwise

xi =

  i =

  i = p[  i = 1] =

exp(  0 +   1dbhi +   2xi)

  i = exp(  0 +   1dbhi +   2xi)

1 + exp(  0 +   1dbhi +   2xi)
yi     poi(  i  i)

(6.7)

this model is called a zero-in   ated poisson model. there are six unknown parame-
ters:   0,   1,   2,   0,   1,   2. we must assign prior distributions and compute posterior

6.1. multidimensional bayesian analysis

354

figure 6.2: numbers of pine cones in 1998 as a function of dbh

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll020406080100lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025020406080100dbhcones 1998123456ring6.1. multidimensional bayesian analysis

355

figure 6.3: numbers of pine cones in 1999 as a function of dbh

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll020406080100lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025020406080100dbhcones 1999123456ring6.1. multidimensional bayesian analysis

356

figure 6.4: numbers of pine cones in 2000 as a function of dbh

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll020406080100lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll510152025020406080100dbhcones 2000123456ring6.1. multidimensional bayesian analysis

357

distributions of these parameters. in addition, each tree has an indicator   i and we will
be able to calculate the posterior probabilities p[  i = 1| y1, . . . , yn] for i = 1, . . . , n.
we start with the priors   0,   1,   2,   0,   1,   2     i.i.d.u(   100, 100). this prior distribu-
tion is not, obviously, based on any substantive prior knowledge.
instead of arguing
that this is a sensible prior, we will later check the robustness of conclusions to spec-
i   cation of the prior. if the conclusions are robust, then we will argue that almost any
sensible prior would lead to roughly the same conclusions.

to begin the analysis we write down the joint distribution of parameters and data.

p(y1, . . . , yn,   0,   1,   2,   0,   1,   2)

(cid:32) 1

(cid:33)6
= p(  0,   1,   2,   0,   1,   2)    p(y1, . . . , yn |   0,   1,   2,   0,   1,   2)

1(   100,100)(  0)    1(   100,100)(  1)    1(   100,100)(  2)    1(   100,100)(  0)

   1(   100,100)(  1)    1(   100,100)(  2)

  exp(    exp(  0 +   1dbhi +   2xi)) exp(  0 +   1dbhi +   2xi)yi

yi!

(cid:33)

=

200

(cid:32)

i:yi>0

(cid:32)

exp(  0 +   1dbhi +   2xi)

1 + exp(  0 +   1dbhi +   2xi)

  (cid:89)
  (cid:89)
in equation 6.8 each term in the product(cid:81)
while each term in(cid:81)

1 + exp(  0 +   1dbhi +   2xi)

i:yi=0

1

+

i:yi=0 is

exp(  0 +   1dbhi +   2xi)

1 + exp(  0 +   1dbhi +   2xi)

i:yi>0 is

p[i   th tree is sexually mature]    p(yi | i   th tree is sexually mature)

(cid:33)
exp(    exp(  0 +   1dbhi +   2xi))

(6.8)

p[i   th tree is immature] + p[i   th tree is mature but produces no cones].
the posterior p(  0,   1,   2,   0,   1,   2 | y1, . . . , yn) is proportional, as a function of
(  0,   1,   2,   0,   1,   2), to equation 6.8. similarly, conditional posteriors such as
p(  0 |   1,   2,   0,   1,   2, y1, . . . , yn) are proportional, as a function of   0, to equation 6.8.
but that doesn   t allow for much simpli   cation; it allows us to ignore only the factorials
in the denominator.

6.2. metropolis, metropolis-hastings, and gibbs

358

to learn about the posterior in, say, equation 6.8 it is easy to write an r function
that accepts (  0,   1,   2,   0,   1,   2) as input and returns 6.8 as output. but that   s quite a
complicated function of (  0,   1,   2,   0,   1,   2) and it   s not obvious how to use the function
or what it says about any of the six parameters or the   i   s. therefore, in section 6.2 we
present an algorithm that is very powerful for evaluating the integrals that often arise in
multivariate bayesian analyses.

6.2 the metropolis, metropolis-hastings, and gibbs sam-

pling algorithms

in    id115   , the term    monte carlo    refers to evaluating an integral by
using many random draws from a distribution. to    x ideas, suppose we want to evaluate
equation 6.2. let (cid:126)   = (  1, . . . ,   k).
if we could generate many samples (cid:126)  1, . . . , (cid:126)  m of
(cid:126)   (where (cid:126)  i = (  i,1, . . . ,   i,k)) from its posterior distribution then we could approximate
equation 6.2 by

1. discarding   i,2, . . . ,   i,k from each iteration,

2. retaining   1,1, . . . ,   m,1,

3. using   1,1, . . . ,   m,1 and standard density estimation techniques (page 105) to estimate

p(  1 | y), or

4. for any set a, using

as an estimate of p[  1     a| y].

number of   i,1   s in a

m

the term    markov chain    refers to how the samples (cid:126)  1, . . . , (cid:126)  m are produced.

that   s the idea behind monte carlo integration.
in a
markov chain there is a transition density or transition kernel k((cid:126)  i | (cid:126)  i   1) which is a density
for generating (cid:126)  i given (cid:126)  i   1. we    rst choose (cid:126)  1 almost arbitrarily, then generate ((cid:126)  2 | (cid:126)  1),
((cid:126)  3 | (cid:126)  2), and so on, in succession, for as many steps as we like. each (cid:126)  i has a density
pi     p((cid:126)  i) which depends on (cid:126)  1 and the transition kernel. but,

1. under some fairly benign conditions (see the references at the beginning of the chap-
ter for details.) the sequence p1, p2, . . . converges to a limit p, the stationary distri-
bution, that does not depend on (cid:126)  1;

6.2. metropolis, metropolis-hastings, and gibbs

359
2. the transition density k((cid:126)  i | (cid:126)  i   1) can be chosen so that the stationary distribution p is

equal to p((cid:126)  | y);

3. we can    nd an m such that i > m     pi     p = p((cid:126)  | y);
4. then (cid:126)  m+1, . . . , (cid:126)  m are, approximately, a sample from p((cid:126)  | y).
the metropolis-hastings algorithm [metropolis et al., 1953, hastings, 1970] is one
way to construct an mcmc algorithm whose stationary distribution is p((cid:126)  | y). it works
according to the following steps.

1. choose a proposal density g((cid:126)      | (cid:126)  ).
2. choose (cid:126)  1.

3. for i = 2, 3, . . .

    generate a proposal (cid:126)      from g((cid:126)      | (cid:126)  i   1).
    set

                      .

(6.9)

p((cid:126)      | y)g((cid:126)  i   1 | (cid:126)     )
p((cid:126)  i   1 | y)g((cid:126)      | (cid:126)  i   1)

    set

(cid:126)  i =

with id203 r,

(cid:126)  i   1 with id203 1     r.

                     1,

r     min

                     (cid:126)     

step 3 de   ne the transition kernel k. in many mcmc chains, the acceptance id203 r
may be strictly less than one, so the kernel k is a mixture of two parts: one that generates
a new value of (cid:126)  i+1 (cid:44) (cid:126)  i and one that sets (cid:126)  i+1 = (cid:126)  i.
to illustrate mcmc, suppose we want to generate a sample   1, . . . ,   10,000 from the
be(5, 2) distribution. we arbitrarily choose a proposal density g(      |   ) = u(       .1,    + .1)
and arbitrarily choose   1 = 0.5. the following r code draws the sample.

samp <- rep ( na, 10000 )
samp[1] <- 0.5
for ( i in 2:10000 ) {

prev <- samp[i-1]
thetastar <- runif ( 1, prev - .1, prev + .1 )
r <- min ( 1, dbeta(thetastar,5,2) / dbeta(prev,5,2) )
if ( rbinom ( 1, 1, r ) == 1 )

new <- thetastar

6.2. metropolis, metropolis-hastings, and gibbs

360

else

new <- prev

samp[i] <- new

}

the top panel of figure 6.5 shows the result. the solid curve is the be(5, 2) density and the
histogram is made from the metropolis-hastings samples. they match closely, showing
that the algorithm performed well.

figure 6.5 was produced by

par ( mfrow=c(3,1) )
hist ( samp[-(1:1000)], prob=true, xlab=expression(theta),

ylab="", main="" )

x <- seq(0,1,length=100)
lines ( x, dbeta(x,5,2) )
plot ( samp, pch=".", ylab=expression(theta) )
plot ( dbeta(samp,5,2), pch=".", ylab=expression(p(theta)) )

the code samp[-(1:1000)] discards the    rst 1000 draws in the hope that the sampler
will have converged to its stationary distribution after 1000 iterations.

assuming that convergence conditions have been met and that the algorithm is well-
constructed, mcmc chains are guaranteed eventually to converge and deliver samples
from the desired distribution. but the guarantee is asymptotic and in practice the output
from the chain should be checked to diagnose potential problems that might arise in    nite
samples.

the main thing to check is mixing. an mcmc algorithm operates in the space of (cid:126)  .
at each iteration of the chain, i.e., for each value of i, there is a current location (cid:126)  i. at the
next iteration the chain moves to a new location (cid:126)  i. in this way the chain explores the (cid:126)  
space. while it is exploring it also evaluates p((cid:126)  i). in theory, the chain should spend many
iterations at values of (cid:126)   where p((cid:126)  ) is large     and hence deliver many samples of (cid:126)     s with
large posterior density     and few iterations at values where p((cid:126)  ) is small. for the chain to
do its job it must    nd the mode or modes of p((cid:126)  ), it must move around in their vicinity, and
it must move between them. the process of moving from one part of the space to another
is called mixing.

the middle and bottom panels of figure 6.5 illustrate mixing. the middle panel plots
  i vs. i. it shows that the chain spends most of its iterations in values of    between about 0.6

6.2. metropolis, metropolis-hastings, and gibbs

361

figure 6.5: 10,000 mcmc samples of the be(5, 2) density. top panel: histogram of
samples from the metropolis-hastings algorithm and the be(5, 2) density. middle panel:
  i plotted against i. bottom panel: p(  i) plotted against i.

qq0.20.40.60.81.00.01.02.002000400060008000100000.20.61.0indexqq02000400060008000100000.01.02.0indexp((qq))6.2. metropolis, metropolis-hastings, and gibbs

362

and 0.9 but makes occasional excursions down to 0.4 or 0.2 or so. after each excursion
it comes back to the mode around 0.8. the chain has taken many excursions, so it has
explored the space well. the bottom panel plots p(  i) vs. i. it shows that the chain spent
most of its time near the mode where p(  )     2.4 but made multiple excursions down to
places where p(  ) is around 0.5, or even less. this chain mixed well.
to illustrate poor mixing we   ll use the same mcmc algorithm but with di   erent pro-
posal kernels. first we   ll use (      |   ) = u(       100,    + 100) and change the corresponding
line of code to
thetastar <- runif ( 1, prev - 100, prev + 100 ). then we   ll use (      |   ) =
u(       .00001,    + .00001) and change the corresponding line of code to
thetastar <- runif ( 1, prev - .00001, prev + .00001 ). figure 6.6 shows
the result. the left-hand side of the    gure is for (      |   ) = u(       100,    + 100). the top
panel shows a very much rougher histogram than figure 6.5; the middle and bottom pan-
els show why. the proposal radius is so large that most proposals are rejected; therefore,
  i+1 =   i for many iterations; therefore we get the    at spots in the middle and bottom pan-
els. the plots reveal that the sampler explored fewer than 30 separate values of   . that   s
too few; the sampler has not mixed well. in contrast, the right-hand side of the    gure    
for (      |   ) = u(       .00001,    + .00001)     shows that    has drifted steadily downward, but
over a very small range. there are no    at spots, so the sampler is accepting most propos-
als, but the proposal radius is so small that the sampler hasn   t yet explored most of the
space. it too has not mixed well.

plots such as the middle and bottom plots of figure 6.6 are called trace plots because

they trace the path of the sampler.

in this problem, good mixing depends on getting the proposal radius not too large and
not too small, but just right (hassall [1909]). to be sure, if we run the mcmc chain
long enough, all three samplers would yield good samples from be(5, 2). but the    rst
sampler mixed well with only 10,000 iterations while the others would require many more
iterations to yield a good sample. in practice, one must examine the output of one   s mcmc
chain to diagnose mixing problems. no diagnostics are fool proof, but not diagnosing is
foolhardy.

several special cases of the metropolis-hastings algorithm deserve separate mention.
metropolis algorithm it is often convenient to choose the proposal density g((cid:126)      | (cid:126)  ) to
be symmetric; i.e., so that g((cid:126)      | (cid:126)  ) = g((cid:126)  | (cid:126)     ).
in this case the metropolis ratio
p((cid:126)      | y)g((cid:126)  i   1 | (cid:126)     )/p((cid:126)  i   1 | y)g((cid:126)      | (cid:126)  i   1) simpli   es to p((cid:126)      | y)/p((cid:126)  i   1 | y). that   s what
happened in the be(5, 2) illustration and why the line
r <- min ( 1, dbeta(thetastar,5,2) / dbeta(prev,5,2) ) doesn   t involve
g.

6.2. metropolis, metropolis-hastings, and gibbs

363

figure 6.6: 10,000 mcmc samples of the be(5, 2) density. left column: (      |   ) = u(      
100,    + 100); right column: (      |   ) = u(       .00001,    + .00001). top: histogram of
samples from the metropolis-hastings algorithm and the be(5, 2) density. middle:   i
plotted against i. bottom: p(  i) plotted against i.

qq0.20.40.60.801234qq0.49900.49940.49980.500205001000020006000100000.30.50.70.9indexqq020006000100000.49920.4998indexqq020006000100000.01.02.0indexp((qq))020006000100000.9320.9350.938indexp((qq))6.2. metropolis, metropolis-hastings, and gibbs
364
independence sampler it may be convenient to choose g((cid:126)      | (cid:126)  ) = g((cid:126)     ) not dependent
on (cid:126)  . for example, we could have used thetastar <- runif(1) in the be(5, 2)
illustration.

multiple transition kernels we may construct multiple transition kernels, say g1, . . . , gm.
then for each iteration of the mcmc chain we can randomly choose j     {1, . . . , m}
and make a proposal according to g j. we would do this either for convenience or to
improve the convergence rate and mixing properties of the chain.

gibbs sampler [geman and geman, 1984] in many practical examples, the so-called full
conditionals or complete conditionals p(   j | (cid:126)  (    j), y) are known and easy to sample
for all j, where   (    j) = (  1, . . . ,    j   1,    j+1, . . . ,   k). in this case we may sample   i, j
from
p(   j |   i,1, . . . ,   i, j   1,   i   1, j+1, . . . ,   i   1,k) for j = 1, . . . , k and set (cid:126)  i = (  i,1, . . . ,   i,k). we
would do this for convenience.

the next example illustrates several mcmc algorithms on the pine cone data of ex-

ample 6.2.
example 6.3 (pine cones, cont)
in this example we try several mcmc algorithms to evaluate and display the posterior
distribution in equation 6.8. throughout this example, we shall, for compactness, refer
to the posterior density as p((cid:126)  ) instead of p((cid:126)  | y1, . . . , yn).

first we need functions to return the prior density and the likelihood function.

dprior <- function ( params, log=false ) {

logprior <- (

dunif ( params["b0"], -100, 100, log=true )
+ dunif ( params["b1"], -100, 100, log=true )
+ dunif ( params["b2"], -100, 100, log=true )
+ dunif ( params["g0"], -100, 100, log=true )
+ dunif ( params["g1"], -100, 100, log=true )
+ dunif ( params["g2"], -100, 100, log=true )

)

if (log) return (logprior)
else return (exp(logprior))

}

lik <- function ( params, n.cones=cones$x2000, dbh=cones$dbh,

trt=cones$trt, log=false ) {

zero <- n.cones == 0

6.2. metropolis, metropolis-hastings, and gibbs

365

tmp1 <- params["b0"] + params["b1"] * dbh + params["b2"] * trt
tmp2 <- params["g0"] + params["g1"] * dbh + params["g2"] * trt
etmp1 <- exp(tmp1)
etmp2 <- exp(tmp2)

loglik <- (

sum ( tmp1[!zero] )

- sum ( etmp2[!zero] )
+ sum ( n.cones[!zero] * tmp2[!zero] )
+ sum ( log ( 1 + etmp1[zero] * exp ( -etmp2[zero] ) ) )
- sum ( log ( 1 + etmp1 ) )

)

if (log) return (loglik)
else return (exp(loglik))

}

now we write a proposal function. this ones makes ((cid:126)      | (cid:126)  )     n((cid:126)  , .1i6), where i6 is the
6    6 identity matrix.
g.all <- function ( params ) {

sig <- c(.1,.1,.1,.1,.1,.1)
proposed <- mvrnorm ( 1, mu=params, sigma=diag(sig) )
return ( list ( proposed=proposed, ratio=1 ) )

}

finally we write the main part of the code. try to understand it; you may have to write
something similar. notice an interesting feature of r: assigning names to the compo-
nents of params allows us to refer to the components by name in the lik function.

# initial values
params <- c ( "b0"=0, "b1"=0, "b2"=0, "g0"=0, "g1"=0, "g2"=0 )

# number of iterations
mc <- 10000

# storage for output
mcmc.out <- matrix ( na, mc, length(params)+1 )

6.2. metropolis, metropolis-hastings, and gibbs

366

# the main loop
for ( i in 1:mc ) {

prop <- g.all ( params )
new <- prop$proposed
log.accept.ratio <- (

dprior ( new, log=true )

- dprior ( params, log=true )
+ lik ( new, log=true )
- lik ( params, log=true )
- log ( prop$ratio )

)

accept.ratio <- min ( 1, exp(log.accept.ratio) )

if ( as.logical ( rbinom(1,1,accept.ratio) ) )

params <- new

mcmc.out[i,] <- c ( params, lik ( params, log=true ) )

}

figure 6.7 shows trace plots of the output. the plots show that the sampler did not
move very often; it did not mix well and did not explore the space effectively.

figure 6.7 was produced by the following snippet.

par ( mfrow=c(4,2), mar=c(4,4,1,1)+.1 )
for ( i in 1:6 )

plot ( mcmc.out[,i], ylab=names(params)[i], pch="." )

plot ( mcmc.out[,7], ylab=expression(p(theta)), pch="." )

when samplers get stuck, sometimes it   s because the proposal radius is too large.
so next we try a smaller radius: sig <- rep(.01,6). figure 6.8 shows the result.
the sampler is still not mixing well. the parameter   0 travelled from its starting point of
  0 = 0 to about   0        1.4 or so, then seemed to get stuck; other parameters behaved
similarly. let   s try running the chain for more iterations: mc <- 100000. figure 6.9
shows the result. again, the sampler does not appear to have mixed well. parameters
  0 and   1, for example, have not yet settled into any sort of steady-state behavior and

6.2. metropolis, metropolis-hastings, and gibbs

367

figure 6.7: trace plots of mcmc output from the pine cone code on page 365.

02000600010000   0.8   0.20.2indexb002000600010000   0.20.00.1indexb102000600010000   1.0   0.6   0.2indexb202000600010000   1.5   0.50.0indexg0020006000100000.000.10indexg102000600010000   0.20.20.4indexg202000600010000   5005001500indexp((qq))6.2. metropolis, metropolis-hastings, and gibbs

368

figure 6.8: trace plots of mcmc output from the pine cone code with a smaller proposal
radius.

02000600010000   1.4   0.8   0.2indexb002000600010000   0.150.000.10indexb102000600010000   0.3   0.10.1indexb202000600010000   1.0   0.40.2indexg0020006000100000.060.100.14indexg1020006000100000.000.150.30indexg20200060001000010001400indexp((qq))6.2. metropolis, metropolis-hastings, and gibbs

369

p((cid:126)  ) seems to be steadily increasing, indicating that the sampler may not yet have
found the posterior mode.

it is not always necessary to plot every iteration of an mcmc sampler. figure 6.9
plots every 10   th iteration; plots of every iteration look similar. the    gure was produced
by the following snippet.

par ( mfrow=c(4,2), mar=c(4,4,1,1)+.1 )
plotem <- seq ( 1, 100000, by=10 )
for ( i in 1:6 )

plot ( mcmc.out[plotem,i], ylab=names(params)[i], pch="." )

plot ( mcmc.out[plotem,7], ylab=expression(p(theta)), pch="." )

the sampler isn   t mixing well. to write a better one we should try to understand
why this one is failing. it could be that proposing a change in all parameters simulta-
neously is too dramatic, that once the sampler reaches a location where p((cid:126)  ) is large,
changing all the parameters at once is likely to result in a location where p((cid:126)  ) is small,
therefore the acceptance ratio will be small, and the proposal will likely be rejected. to
ameliorate the problem we   ll try proposing a change to only one parameter at a time.
the new proposal function is

g.one <- function ( params ) {

sig <- c ( "b0"=.1, "b1"=.1, "b2"=.1, "g0"=.1, "g1"=.1, "g2"=.1 )
which <- sample ( names(params), 1 )
proposed <- params
proposed[which] <- rnorm ( 1, mean=params[which], sd=sig[which] )
return ( list ( proposed=proposed, ratio=1 ) )

}

which randomly chooses one of the six parameters and proposes to update that pa-
rameter only. naturally, we edit the main loop to use g.one instead of g.all. fig-
ure 6.10 shows the result. this is starting to look better. parameters   2 and   2 are ex-
hibiting steady-state behavior; so are   0 and   1, after iteration 10,000 or so (x = 1000
in the plots). still,   0 and   1 do not look like they have converged.

figure 6.11 illuminates some of the problems. in particular,   0 and   1 seem to be
linearly related, as do   0 and   1. this is often the case in regression problems; and we

6.2. metropolis, metropolis-hastings, and gibbs

370

figure 6.9: trace plots of mcmc output from the pine cone code with a smaller proposal
radius and 100,000 iterations. the plots show every 10   th iteration.

02000600010000   4.0   3.0   2.0indexb0020006000100000.060.12indexb1020006000100000.10.30.50.7indexb202000600010000   2.0   1.6   1.2indexg0020006000100000.150.170.19indexg1020006000100000.250.350.45indexg202000600010000174017551770indexp((qq))6.2. metropolis, metropolis-hastings, and gibbs

371

figure 6.10: trace plots of mcmc output from the pine cone code with proposal function
g.one and 100,000 iterations. the plots show every 10   th iteration.

02000600010000   7   5   3   1indexb002000600010000   0.050.100.25indexb1020006000100000.00.40.81.2indexb202000600010000   1.5   0.50.0indexg0020006000100000.000.10indexg1020006000100000.00.20.4indexg202000600010000   5005001500indexp((qq))6.2. metropolis, metropolis-hastings, and gibbs

372

have seen it before for the pine cones in figure 3.15. in the current setting it means
that p((cid:126)  | y1, . . . , yn) has ridges: one along a line in the (  0,   1) plane and another along
a line in the (  0,   1) plane.

figure 6.11 was produced by the following snippet.

plotem <- seq ( 10000, 100000, by=10 )
pairs ( mcmc.out[plotem,], pch=".",

labels=c(names(params),"density") )

as figure 6.10 shows, it took the    rst 10,000 iterations or so for   0 and   1 to reach a
roughly steady state and for p((cid:126)  ) to climb to a reasonably large value. if those iterations
were included in figure 6.11, the points after iteration 10,000 would be squashed
together in a small region. therefore we made plotem <- seq ( 10,000, 100000,
by=10 ) to drop the    rst 9999 iterations from the plots.

if our mcmc algorithm proposes a move along the ridge, the proposal is likely to be
accepted. but if the algorithm proposes a move that takes us off the ridge, the proposal
is likely to be rejected because p would be small and therefore the acceptance ratio
would be small. but that   s not happening here: our mcmc algorithm seems not to be
stuck, so we surmise that it is proposing moves that are small compared to the widths
of the ridges. however, because the proposals are small, the chain does not explore
the space quickly. that   s why   0 and   1 appear not to have reached a steady state.
we could improve the algorithm by proposing moves that are roughly parallel to the
ridges. and we can do that by making multivariate normal proposals with a covariance
matrix that approximates the posterior covariance of the parameters. we   ll do that by
   nding the covariance of the samples we   ve generated and using it as the covariance
matrix of our proposal distribution. the r code is

sig <- cov ( mcmc.out[10000:100000,-7])
g.group <- function ( params ) {

proposed <- mvrnorm ( 1, mu=params, sigma=sig )
return ( list ( proposed=proposed, ratio=1 ) )

}

we drop the    rst 9999 iterations because they seem not to re   ect p((cid:126)  ) accurately. then
we calculate the covariance matrix of the samples from the previous mcmc sampler.

6.2. metropolis, metropolis-hastings, and gibbs

373

figure 6.11: pairs plots of mcmc output from the pine cones example.

b00.160.30   1.6   0.40.200.55   6.5   5.00.160.24b1b20.00.61.2   1.6   1.0   0.4g0g10.120.150.200.40g2   6.50.01.20.120.17176017601768density6.2. metropolis, metropolis-hastings, and gibbs

374

that covariance matrix is used in the proposal function. the results are shown in
figures 6.12 and 6.13. figure 6.12 shows that the sampler seems to have converged
after the    rst several thousand iterations. the posterior density has risen to a high
level and is hovering there; all six variables appear to be mixing well. figure 6.13
con   rms our earlier impression that the posterior density seems to be approxiately
normal     at least, it has normal-looking two dimensional marginals     with   0 and
  1 highly correlated with each other,   1 and   2 highly correlated with each other, and
no other large correlations. the sampler seems to have found one mode and to be
exploring it well.

figures 6.12 and 6.13 were produced with the following snippet.

plotem <- seq ( 1, 100000, by=10 )
par ( mfrow=c(4,2), mar=c(4,4,1,1)+.1 )
for ( i in 1:6 )

plot ( mcmc.out[plotem,i], ylab=names(params)[i], pch="." )

plot ( mcmc.out[plotem,7], ylab=expression(p(theta)), pch="." )

plotem <- seq ( 1000, 100000, by=10 )
pairs ( mcmc.out[plotem,], pch=".",

labels=c(names(params),"density") )

now that we have a good set of samples from the posterior, we can use it to
answer substantive questions. for instance, we might want to know whether the extra
atmospheric co2 has allowed pine trees to reach sexual maturity at an earlier age
or to produce more pine cones. this is a question of whether   2 and   2 are positive,
negative, or approximately zero. figure 6.14 shows the answer by plotting the posterior
densities of   2 and   2. both densities put almost all their mass on positive values,
indicating that p[  2 > 0] and p[  2 > 0] are both very large, and therefore that pines
trees with excess co2 mature earlier and produce more cones than pine trees grown
under normal conditions.

figure 6.14 was produced by the following snippet.

par ( mfrow=c(1,2) )
plot ( density ( mcmc.out[10000:100000,"b2"] ),

6.2. metropolis, metropolis-hastings, and gibbs

375

figure 6.12: trace plots of mcmc output from the pine cone code with proposal function
g.group and 100,000 iterations. the plots show every 10   th iteration.

02000600010000   8   6   4   20indexb0020006000100000.00.20.4indexb102000600010000   1.00.01.0indexb202000600010000   3.0   1.50.0indexg0020006000100000.000.100.20indexg1020006000100000.00.20.40.6indexg202000600010000   5005001500indexp((qq))6.2. metropolis, metropolis-hastings, and gibbs

376

figure 6.13: pairs plots of mcmc output from the pine cones example with proposal
g.group.

b00.150.35   2.00.20.6   7   50.150.250.35b1b20.01.0   2.0   1.0g0g10.120.160.20.40.6g2   7   40.00.120.19176017601770density6.3. exercises

377

figure 6.14: posterior density of   2 and   2 from example 6.3.

xlab=expression(beta[2]),
ylab=expression(p(beta[2])), main="" )

plot ( density ( mcmc.out[10000:100000,"g2"] ),

xlab=expression(gamma[2]),
ylab=expression(p(gamma[2])), main="" )

6.3 exercises

1. this exercise follows from example 6.1.

(a) find the posterior density for c50, the expected amount of ice cream consumed
when the temperature is 50 degrees, by writing c50 as a linear function of
(  0,   1) and using the posterior from example 6.1.

(b) find the posterior density for c50 by reparameterizing. instead of working with
parameters (  0,   1), work with parameters (c50,   1). write the equation for yi
as a linear function of (c50,   1) and    nd the new x matrix. use that new matrix
and a convenient prior to calculate the posterior density of (c50,   1).

0.01.00.01.02.0bb2p((bb2))0.20.40.60246gg2p((gg2))6.3. exercises

378

(c) do parts (a) and (b) agree about the posterior distribution of c50. does part
(b) agree with example 6.1 about the posterior distribution of   1? should they
agree?

2. this exercise asks you to enhance the code for the be(5, 2) example on page 359.

(a) how many samples is enough? instead of 10,000, try di   erent numbers. how
few samples can you get away with and still have an adequate approximation
to the be(5, 2) distribution? you must decide what "adequate" means; you can
use either a    rm or fuzzy de   nition. illustrate your results with    gures similar
to 6.5.

(b) try an independence sampler in the be(5, 2) example on page 359. replace
the proposal kernel with           u(0, 1). run the sampler, make a    gure similar
to figure 6.5 and describe the result.

(c) does the proposal distribution matter? instead of proposing with a radius of
0.1, try di   erent numbers. how much does the proposal radius matter? does
the proposal radius change your answer to part 2a? illustrate your results with
   gures similar to 6.5.
(d) try a non-symmetric proposal. for example, you might try a proposal distri-
bution of be(5, 1), or a distribution that puts 2/3 of its mass on (xi   1     .1, xi   1)
and 1/3 of its mass on (xi   1, xi   1 +.1). illustrate your results with    gures similar
to 6.5.

(e) what would happen if your proposal distribution were be(5, 2)? how would

the algorithm simplify?

3.

(a) some researchers are interested in   , the proportion of students who ever cheat
on college exams. they randomly sample 100 students and ask    have you
ever cheated on a college exam?    naturally, some students lie. let   1 be the
proportion of non-cheaters who lie and   2 be the proportion of cheaters who
lie. let x be the number of students who answer    yes    and suppose x = 40.

i. create a prior distribution for   ,   1, and   2. use your knowledge guided
by experience. write a formula for your prior and plot the marginal prior
density of each parameter.

ii. write a formula for the likelihood function (cid:96)(  ,   1,   2).
iii. find the m.l.e..
iv. write a formula for the joint posterior density p(  ,   1,   2 | x = 40).
v. write a formula for the marginal posterior density p(  | x = 40).

6.3. exercises

379

vi. write an mcmc sampler to sample from the joint posterior.
vii. use the sampler to    nd p(  | x = 40). summarize your results. include
information on how you assessed mixing and on what you learned about
p(  | x = 40).
viii. assess the sensitivity of your posterior, p(  | x = 40), to your prior for   1

and   2.

(b) randomized response this part of the exercise uses ideas from exercises 42
in chapter 1 and 6 in chapter 2. as explained there, researchers will sometimes
instruct subjects as follows.

toss a coin, but don   t show it to me. if it lands heads, answer question
(a). if it lands tails, answer question (b). just answer    yes    or    no   .
do not tell me which question you are answering.
(a) does your telephone number end in an even digit?
(b) have you ever cheated on an exam in college?

the idea of the randomization is, of course, to reduce the incentive to lie.
nonetheless, students may still lie.

i. if about 40 students answered    yes    in part (a), about how many do you

think will answer    yes    under the conditions of part (b)?

ii. repeat part (a) under the conditions of part (b) and with your best guess

about what x will be under these conditions.

iii. assess whether researchers who are interested in    are better o    using the

conditions of part (a) or part (b).

4. the epa conducts occasional reviews of its standards for airborne asbestos. during
a review, the epa examines data from several studies. di   erent studies keep track
of di   erent groups of people; di   erent groups have di   erent exposures to asbestos.
let ni be the number of people in the i   th study, let xi be their asbestos exposure,
and let yi be the number who develop lung cancer. the epa   s model is yi     poi(  i)
where   i = nixi   and where    is the typical rate at which asbestos causes cancer.
the ni   s and xi   s are known constants; the yi   s are random variables. the epa wants
a posterior distribution for   .

(a) write down the likelihood function for   .

(b) show that the likelihood function depends only on(cid:80) yi, not on any other aspect

of the yi   s.

(c) what family of distributions would be convenient prior distributions for   ?

6.3. exercises

380
(d) if the epa used the prior        gam(a, b), what would be the epa   s posterior?
5. figures 6.12 and 6.13 suggest that the mcmc sampler has found one mode of the
posterior density. might there be others? use the lik function and r   s optim func-
tion to    nd out. either design or randomly generate some starting values (you must
decide on good choices for either the design or the randomization.) and use optim
to    nd a mode of the likelihood function. summarize and report your results.

6. example 6.3 shows that   2 and   2 are very likely positive, and therefore that pine
trees with extra co2 mature earlier and produce more cones. but how much earlier
and how many more?
(a) find the posterior means e[  2 | y1, . . . , yn] and e[  2 | y1, . . . , yn] approximately,

from the figures in the text.
(b) suppose there are three trees in the control plots that have probabilities 0.1, 0.5,
and 0.9 of being sexually mature. plugging in e[  2 | y1, . . . , yn] from the pre-
vious question, estimate their probabilities of being mature if they had grown
with excess co2.

(c) is the plug-in estimate from the previous question correct? i.e., does it correctly
calculate the id203 that those trees would be sexually mature? explain
why or why not. if it   s not correct, explain how to calculate the probabilities
correctly.

7. in the context of equation 6.7 in example 6.3 we might want to investigate whether

the coe   cient of dbh should be the same for control trees and for treated trees.

(a) write down a model enhancing that on page 353 to allow for the possibility of

di   erent coe   cients for di   erent treatments.

(b) what parts of the r code have to change?
(c) write the new code.
(d) run it.
(e) summarize and report results. report any di   culties with modifying and run-
ning the code. say how many iterations you ran and how you checked mixing.
also report conclusions: does it look like di   erent treatments need di   erent
coe   cients? how can you tell?

8. you go to the bus stop to catch a bus. you know that buses arrive every 15 minutes,
but you don   t know when the next is due. let t be the time elapsed, in hours, since
the previous bus. adopt the prior distribution t     unif(0, 1/4).

6.3. exercises

(a) find e[t].

381

passengers, apart from yourself, arrive at the bus stop according to a poisson process
with rate    = 2 people per hour; i.e., in any interval of length (cid:96), the number of
arrivals has a poisson distribution with parameter 2(cid:96) and, if two intervals are disjoint,
then their numbers of arrivals are independent. let x be the number of passengers,
other than yourself, waiting at the bus stop when you arrive.

(b) suppose x = 0. write an intuitive argument for whether that should increase
or decrease your expected value for t. i.e., is e[t|x = 0] greater than, less
than, or the same as e[t]?

(c) find the density of t given x = 0, up to a constant of proportionality. it is a

truncated version of a familiar density. what is the familiar density?

(d) suppose x = 1. write an intuitive argument for whether that should increase
or decrease your expected value for t. i.e., is e[t|x = 1] greater than, less
than, or the same as e[t]?

(e) find the density of t given x = 1, up to a constant of proportionality. it is a

truncated version of a familiar density. what is the familiar density?

(f) find the density of t given x = x, up to a constant of proportionality. it is a

truncated version of a familiar density. what is the familiar density?

chapter 7

more models

this chapter takes up a wide variety of statistical models. it is beyond the scope of this
book to give a full treatment of any one of them. but we hope to introduce each model
enough so the reader can see in what situations it might be useful, what it   s primary char-
acteristcs are, and how a simple analysis might be carried out in r. a more thorough
treatment of many of these models can be found in venables and ripley [2002].

specialized models call for specialized methods. because not all methods are built
in to r, many people have contributed packages of specialized methods. their packages
can be downloaded from http://id203.ca/cran/. to use a package, you must
   rst install it. then, in each session of r in which you want to use it, you must load
it. for example, to use the survival package for survival analysis you must    rst type
install.packages("survival"). r should respond either by installing the package or
by asking you to choose a mirror, then installing the package. next, whenever you want
to use the package, you must type library("survival").

7.1 random e   ects

to explain the idea of random e   ects it is best to look at an example. the nlme package
comes with a dataset orthodont. as the help    le explains,

   investigators at the university of north carolina dental school followed
the growth of 27 children (16 males, 11 females) from age 8 until age 14. ev-
ery two years they measured the distance between the pituitary and the ptery-
gomaxillary    ssure, two points that are easily identi   ed on x-ray exposures of
the side of the head. . . .

   [the] data frame contains the following columns:

382

7.1. random effects

383

distance a numeric vector of distances from the pituitary to the pterygomax-
illary    ssure (mm). these distances are measured on x-ray images of the
skull.

age a numeric vector of ages of the subject (yr).
subject an ordered factor indicating the subject on which the measurement
was made. the levels are labelled m01 to m16 for the males and f01
to f11 for the females. the ordering is by increasing average distance
within sex.

sex a factor with levels male and female   

each child was measured four times, so there are 108 lines in the data set. the    rst several
lines of data are

grouped data: distance ~ age | subject

distance age subject

1
2
3
4
5
6

26.0
25.0
29.0
31.0
21.5
22.5

8
10
12
14
8
10

sex
m01 male
m01 male
m01 male
m01 male
m02 male
m02 male

figure 7.1 shows the data and was produced by xyplot ( distance    age | sex,
data = orthodont, groups = subject, type="o", col=1 ). the function xyplot
is part of the lattice package. as illustrated in the    gure, it produces plots of y versus
x in which points can be grouped by one variable and separated into di   erent panels by
another variable.

the    gure shows that for most subjects, distance is an approximately linear function
of age, that males tend to be larger than females, and that di   erent subjects have di   erent
intercepts. therefore, to    t this data we need a model with the following features: (1) a
parameter for the average intercept of males (or females); (2) a parameter for the average
di   erence in intercepts for males and females; (3) one parameter per subject for how that
subject   s intercept di   ers from its group average; and (4) one parameter for the slope.
model 7.1 has those features.

yi,t = distance for subject i at time t

yi,t     n(  i,t,   )

  i,t =   0 +   1sexi +   i +   2t

(7.1)

7.1. random effects

384

figure 7.1: plots of the orthodont data: distance as a function of age, grouped by subject,
separated by sex.

here is the key feature: we want   0 to represent the average intercept of all males and
  0 +   1 to represent the average intercept of all females, not just those in this study; and
we want to think of the   i   s in this study as random draws from a population of      s rep-
resenting all children. the terminology is that   0,   1, and   2 are    xed e   ects because
they describe the general population, not the particular individuals in the sample, while
  1, . . . ,   n are random e   ects because they are random draws from the general population.
it is customary to add a term to the model to describe the distribution of random e   ects.
in our case we shall model the   i   s as n(0,   ran. e   .). thus model 7.1 becomes

yi,t = distance for subject i at time t

yi,t     n(  i,t,   )

  i,t =   0 +   1sexi +   i +   2t
  1, . . . ,   n     i.i.d. n(0,   ran. e   .)

(7.2)

modelling the random e   ects as normal is an arbitrary choice. we could have used a
di   erent distribution, but the normal is convenient and not obviously contraindicated by
figure 7.1. choosing the mean of the normal distribution to be 0 is not arbitrary. it   s
the result of thinking of the   i   s as draws from a larger population. in any population, the
average departure from the mean must be 0.

agedistance202530891011121314llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllmale891011121314llllllllllllllllllllllllllllllllllllllllllllfemale7.1. random effects

385

model 7.2 is called a mixed e   ects model because it contains both    xed and random
e   ects. often, in mixed e   ects models, we are interested in   ran. e   .. whether we are
interested in the individual   i   s depends on the purpose of the investigation.

we can    t model 7.2 by the following r code.

ortho.fit1 <- lme ( distance    age + sex, random =    1,

data = orthodont )

    lme stands for    linear mixed e   ects model.    it is in the nlme package.
    the formula distance    age + sex is just like formulas for linear models.
    random =    1 speci   es the random e   ects. in this case, the random e   ects are
intercepts, or coe   cients of 1. if we thought that each child had his or her own slope,
then we would have said random =    age - 1 to say that the random e   ects are
coe   cients of age but not of 1.

printing ortho.fit1 yields

linear mixed-effects model fit by reml

data: orthodont
log-restricted-likelihood: -218.7563
fixed: distance ~ age + sex

(intercept)
17.7067130

age
0.6601852

sexfemale
-2.3210227

random effects:

formula: ~1 | subject

stddev:

(intercept) residual
1.807425 1.431592

number of observations: 108
number of groups: 27

the    xed e   ects part of the output is just like the    xed e   ects part of linear models. the
estimates of (  0,   1,   2) are around (17.7,   2.32, 0.66). the random e   ects part of the
output shows that the estimate of    is about 1.43 while the estimate of   ran. e   . is about
1.81. in other words, most of the intercepts are within about 3.6 or so of their mean and
the di   erences from child to child are about the same size as any unexplained variation
with each child   s data. we can see whether that   s sensible by inspecting figure 7.1. it also

7.1. random effects

386

appears, from figure 7.1, that one of the males doesn   t    t the general pattern. because that
subject   s data    uctuates wildly from the pattern, it may have in   ated the estimate of   . we
might want to remove that subject   s data and re   t the model, just to see how in   uential it
really is. that   s a topic we don   t pursue here.

we can see estimates of   1, . . . ,   27 by typing random.effects(ortho.fit1), which

yields

(intercept)
m16 -1.70183357
m05 -1.70183357
m02 -1.37767479
m11 -1.16156894
m07 -1.05351602
m08 -0.94546309
m03 -0.62130432
m12 -0.62130432
m13 -0.62130432
m14 -0.08103969
m09 0.13506616
m15 0.78338371
m06 1.21559540
m04 1.43170125
m01 2.40417758
m10 3.91691853
f10 -3.58539251
f09 -1.31628108
f06 -1.31628108
f01 -1.10017523
f05 -0.01964599
f07 0.30451279
f02 0.30451279
f08 0.62867156
f03 0.95283034
f04 1.92530666
f11 3.22194176

the reasonableness of these estimates can be judged by comparison to figure 7.2, where
we can also see that the strange male is m09.

7.1. random effects

387

figure 7.2: plots of the orthodont data: distance as a function of age, separated by
subject.

agedistance202530891113llllm16llllm05891113llllm02llllm11891113llllm07llllm08llllm03llllm12llllm13202530llllm14202530llllm09llllm15llllm06llllm04llllm01llllm10llllf10llllf09llllf06202530llllf01202530llllf05llllf07llllf02llllf08llllf03llllf04891113202530llllf117.1. random effects

388

to see what is gained by    tting the mixed e   ects model, we compare it to two other

models that have    xed e   ects only.

ortho.fit2 <- lm ( distance ~ age + sex, data = orthodont )
ortho.fit3 <- lm ( distance ~ age+sex+subject, data=orthodont )

the summary of ortho.fit2 is

...

coefficients:

estimate std. error t value pr(>|t|)

(intercept) 17.70671
0.66019
age
sexfemale
-2.32102

1.11221
0.09776
0.44489

15.920

< 2e-16 ***
6.753 8.25e-10 ***
-5.217 9.20e-07 ***

...

residual standard error: 2.272 on 105 degrees of freedom

...

the estimates of the coe   cients are exactly the same as in ortho.fit1 but, since ortho.fit2
ignores di   erences between subjects, it attributes those di   erences to the observation sd
  . that   s why the estimate of    from ortho.fit1, 1.43, is smaller than the estimate from
ortho.fit2, 2.27.

the summary of ortho.fit3 is

coefficients: (1 not defined because of singularities)

(intercept)
age
sexfemale
subject.l
subject.q
subject.c
subject^4
subject^5
...
subject^25
subject^26

estimate std. error t value pr(>|t|)
23.19192
0.66019
-15.78472
33.91970
6.64753
-5.80525
-3.18380
3.26565

< 2e-16 ***
12.506
< 2e-16 ***
10.716
-3.737 0.000348 ***
3.682 0.000418 ***
2.871 0.005228 **

1.85453
0.06161
4.22373
9.21165
2.31508
2.99918
2.17427
1.39346

-1.936 0.056448 .
-1.464 0.147028

2.344 0.021584 *

-0.14291
na

0.89189
na

-0.160 0.873100
na

na

we see that the estimates of   0 and   1 have changed. that   s because, in the    xed e   ects
model, those estimates are too dependent on the particular subjects in the study. the

7.1. random effects

389

estimates from ortho.fit1 are preferred, as they come from a model that describes the
data more correctly.

finally, in figure 7.1 there is a slight suggestion that the slope for males is slightly
larger than the slope for females. model 7.3 allows for that possibility:   3 is the di   erence
in slope between males and females.

yi,t = distance for subject i at time t
  i,t =   0 +   1sexi +   i +   2t +   3t    sexi

yi,t     n(  i,t,   )

  1, . . . ,   n     i.i.d.n(0,   ran. e   .)

(7.3)

the model can be    t by ortho.fit4 <- lme ( distance    age * sex, random =
   1, data = orthodont ) and yields

...
random effects:

formula: ~1 | subject

stddev:

(intercept) residual
1.816214 1.386382

fixed effects: distance ~ age * sex

value std.error df

16.340625 0.9813122 79 16.651810
(intercept)
0.784375 0.0775011 79 10.120823
age
sexfemale
1.032102 1.5374208 25
0.671321
age:sexfemale -0.304830 0.1214209 79 -2.510520
...

t-value p-value
0.0000
0.0000
0.5082
0.0141

this model suggests that the slope for males is about 0.78 while the slope for females is
about 0.3 less, plus or minus about 0.25 or so. the evidence is not overwhelming in either
direction whether males and females have the same slope. but if they di   er, it could be by
an amount (roughly, .30    2    .12) that is large compared to the slope for males. for its
extra complexity, this model has reduced the residual sd, or our accuracy of prediction,
from about 1.43 to about 1.39. at this point, we don   t have a strong preference for either
model and, if we were investigating further, would keep both of them in mind.

the next example comes from a study of how ants store nutrients over the winter.

example 7.1 (ant fat)
the data in this example were collected to examine the strategy that ants of the

7.1. random effects

390

species pheidole morrisi employ to store nutrients, speci   cally fat, over the winter;
the study was reported by yang [2006]. many animals need to store nutrients over
the winter when food is scarce. for most species, individual animals store their own
nutrients. but for some species, nutrients can be stored collectively. as yang explains,
"among ants, a common mechanism of colony fat storage is for workers of both castes
(majors and minors) to uniformly increase the amount of fat they hold . . . the goal of
this study is to better understand the speci   c mechanisms by which ants use divi-
sion of labor to store colony fat . . . ." the need to store fat varies with the severity of
winter, which in turn varies with latitude. so yang studied ants at three sites, one in
florida, one in north carolina, and one in new york. at each site he dug up several
ant colonies in the spring and another several colonies in the fall. from each colony,
the ants were separated into their two castes, majors and minors, and the fat content
of each caste was measured. the    rst several lines of data look like this.

colony season

site

caste

fat
1 spring new york minors 15.819209
2 spring new york minors 10.526316
3 spring new york minors 18.534483
4 spring new york minors 21.467098
5 spring new york minors
9.784946
6 spring new york minors 20.138289

1
2
3
4
5
6

...

there are 108 lines in all. figure 7.3 shows the data along with kernel density esti-
mates. it was produced by densityplot (    fat | site+season, groups=caste,
data=ants, adjust=1.5 ). purple lines are for minors; blue lines for majors. in new
york and north carolina, it appears that minors have, on average, less fat than ma-
jors and less variability. there is also some suggestion that fat content increases with
increasing latitude. the main question is how the average percent fat differs by site,
season, and caste. because the predictors are categorical, we need to de   ne indicator
variables: nyi = 1 if the i   th observation was from ny; nci = 1 if the i   th observation
was from nc; springi = 1 if the i   th observation was from spring; and minorsi = 1 if
the i   th observation was on the minor caste. with those conventions, we begin with
the following linear model.

yi =   0 +   1nyi +   2nci +   3springi +   4minorsi +   5nyispringi

+   6ncispringi +   7nyiminorsi +   8nciminorsi +   9springiminorsi

+   10nyispringiminorsi +   11ncispringiminorsi +  i.

(7.4)

7.1. random effects

391

figure 7.3: percent body fat of major (blue) and minor (purple) pheidole morrisi ants at
three sites in two seasons.

fatdensity0.000.050.100.150204060llllllllllllllllllllfloridafallllllllllllllllllllllnew yorkfall0204060llllllllllllllllllllnorth carolinafallllllllllllllllllfloridaspring0204060llllllllllllllllnew yorkspring0.000.050.100.15llllllllllllllllnorth carolinaspring7.1. random effects

392

in model 7.4,   0 is the average fat content of major, florida ants in the fall;   1 is the
difference between new york majors and florida majors in the fall;   2 is the difference
between north carolina majors and florida majors in the fall; . . . ;   9 is the difference
between florida majors in the fall and florida minors in the spring; . . . ; etc. model 7.4
can be    t by

fit1 <- lm ( fat ~ site * season * caste, data=ants )

the parameter estimates and their sd   s, given by summary ( fit1 ), are

(intercept)
sitenew york
sitenorth carolina
seasonspring
casteminors
sitenew york:seasonspring
sitenorth carolina:seasonspring
sitenew york:casteminors
sitenorth carolina:casteminors
seasonspring:casteminors
sitenew york:seasonspring:casteminors
sitenorth carolina:seasonspring:casteminors

16.8857
13.2084
8.6182
-6.0555
-1.5489
4.2587
-3.7789
-4.2622
-1.6258
0.6997
-5.2305
-2.2812

2.0016
2.8307
2.8307
3.0024
2.8307
4.2460
4.2460
4.0032
4.0032
4.2460
6.0048
6.0048

we see that new york majors are much fatter, by about 13.2 percentage points on
average, than florida majors in the fall, while north carolina majors are in between.
that seems consistent with the theory that new york ants need to store more fat in
the fall because they are going to face a longer, harder winter than florida ants. in
the spring, florida majors have about 16.9%     6.1%     13.8% body fat while new york
majors have about 16.9% + 13.2%     6.1% + 4.3%     28.2% body fat. it appears that
new york majors did not lose as much fat over the winter as florida majors. perhaps
they didn   t need to store all that fat after all.

before addressing that question more thoroughly, we want to examine one possible
inadequacy of the model. the data sets contains two data points from each colony    
one for majors, one for minors     and it   s possible that those two data points are not
independent. in particular, there might be colony effects; one colony might be fatter,
on average, than another from the same site and season, and that extra fatness might
apply to both castes. to see whether that   s true, we   ll examine residuals from fit1.
speci   cally, we   ll plot residuals for minors on the abscissa and residuals for majors

7.1. random effects

393

figure 7.4: residuals from model 7.4. each point represents one colony. there is an
upward trend, indicating the possible presence of colony e   ects.

on the ordinate. figure 7.4 is the plot. there is a clear, upward, approximately linear
trend, indicating that majors and minors from one colony tend to be thin or fat together.
we can capture that tendency by including random colony effects in the model. that
leads to model 7.5:

yi =   0 +   1nyi +   2nci +   3springi +   4minorsi +   5nyispringi

+   6ncispringi +   7nyiminorsi +   8nciminorsi +   9springiminorsi

+   10nyispringiminorsi +   11ncispringiminorsi +   col(i) +  i

(7.5)

which differs from model 7.4 by the presence of the      s, which are assumed to be
distributed i.i.d.n(0,   ran. eff.). model 7.5 can be    t by

fit2 <- lme ( fat  site*season*caste, data=ants, random =   1|colony )

   10   5051015   10051015residualsminorsmajorsllllllllllllllllllllllllllllllllllllllllllllllllllllll7.1. random effects

394

the r code (...random =   1|colony) says to give each colony its own, random,
intercept. the summary of fit2 is, in part,

linear mixed-effects model fit by reml

data: ants

aic

loglik
671.0577 706.9585 -321.5288

bic

random effects:

formula: ~1 | colony

stddev:

(intercept) residual
4.76696

4.164122

fixed effects: fat ~ site * season * caste

16.885710
(intercept)
13.208390
sitenew york
8.618221
sitenorth carolina
-6.055542
seasonspring
-1.548911
casteminors
4.258693
sitenew york:seasonspring
-3.778862
sitenorth carolina:seasonspring
-4.262151
sitenew york:casteminors
-1.625755
sitenorth carolina:casteminors
0.699721
seasonspring:casteminors
sitenew york:seasonspring:casteminors
-5.230472
sitenorth carolina:seasonspring:casteminors -2.281162
...
number of observations: 108
number of groups: 54

value std.error
2.001595
2.830683
2.830683
3.002392
2.131849
4.246024
4.246024
3.014890
3.014890
3.197774
4.522335
4.522335

there are several things to note about fit2. first,          4.77 is somewhat smaller than
the estimate from fit1. that   s because some of the variability that fit1 attributes to
the     s, fit2 attributes to the      s. second,     ran. eff.     4.16 is about the same size as
    , indicating that colony effects explain a sizable portion of the variation in the data.
third, estimates of the      s are unchanged. and fourth, some of the estimates of sd   s
of the      s are changed while others are not. speci   cally, all the sd   s involving caste
effects have decreased. that   s because some of the variability that fit1 attributes to

7.1. random effects

395

majors

minors

florida
north carolina
new york

fall spring fall spring
16.9
10.1
11.0
25.0
30.1
18.0

15.3
24.0
24.3

10.8
15.7
28.3

table 7.1: fat as a percentage of body weight in ant colonies. three sites, two seasons,
two castes.

the     s, fit2 attributes to the      s.

with fit2 in hand, we can turn our attention to the question of interest: what are
the fat storage strategies and how do they differ from new york to florida? table 7.1
summarizes the analysis; the numbers come from adding the appropriate        s. the
main points are

    both castes in all locations stored more fat in the fall than in the spring.
    the amount of fat stored increases with increasing latitude.
    majors store more fat than minors, in some cases by a lot, in other cases by a

little.

    moving from florida to north carolina to new york, majors increase their fat
content in both fall and spring. but moving from florida to north carolina,
minors increase their fat content only in the fall while from north carolina to
new york, they increase only in the spring.

the summary in table 7.1 and the preceding bullets could have been carried out with
no formal statistical analysis. that   s the way it goes, sometimes.
in this example,
we could use the statistical analysis to be more precise about how accurately we can
estimate each of the effects noted in the bullets. here, there seems little need to do
that.

yang [2006] carries the analysis further. for one thing, he is more formal about
statistics. in addition, he notes that majors can be further divided into repletes and non-
repletes. according to yang,    [r]epletes carry and store a disproportionate amount of
nutrients relative to other individuals in a colony and provide it to other colony members
through trophallaxis in times of food scarcity." and according to wikipedia, "trophal-
laxis is the transfer of food or other    uids among members of a community through
mouth-to-mouth (stomodeal) or anus-to-mouth (proctodeal) feeding. it is most highly

7.2. time series and markov chains

396

developed in social insects such as ants, termites, wasps and bees." yang    nds in-
teresting differences in fat storage among repletes and other majors, differences that
vary according to season and location.

7.2 time series and markov chains

figure 7.5 shows some data sets that come with r. the following descriptions are taken
from the r help pages.
beaver the data are a small part of a study of the long-term temperature dynamics of
beaver castor canadensis in north-central wisconsin. body temperature was mea-
sured by telemetry every 10 minutes for four females, but data from one period of
less than a day is shown here.

mauna loa monthly atmospheric concentrations of co2 are expressed in parts per mil-
lion (ppm) and reported in the preliminary 1997 sio manometric mole fraction
scale.

dax the data are the daily closing prices of germany   s dax stock index. the data are

sampled in business time; i.e., weekends and holidays are omitted.

uk lung disease the data are monthly deaths from bronchitis, emphysema and asthma

in the uk, 1974     1979.

canadian lynx the data are annual numbers of lynx trappings for 1821     1934 in canada.

presidents the data are (approximately) quarterly approval rating for the president of the

united states from the    rst quarter of 1945 to the last quarter of 1974.

uk drivers the data are monthly totals of car drivers in great britain killed or seriously
injured jan 1969 to dec 1984. compulsory wearing of seat belts was introduced on
31 jan 1983.

sun spots the data are monthly numbers of sunspots. they come from the world data
center-c1 for sunspot index royal observatory of belgium, av. circulaire, 3, b-
1180 brussels http://www.oma.be/ksb-orb/sidc/sidc_txt.html.

what these data sets have in common is that they were all collected sequentially in time.
such data are known as time series data. because each data point is related to the ones
before and the ones after, they usually cannot be treated as independent random variables.
methods for analyzing data of this type are called time series methods. more formally,

7.2. time series and markov chains

397

a time series is a sequence y1, . . . , yt of random variables indexed by time. the generic
element of the series is usually denoted yt.

figure 7.5 was produced by the following snippet.

par ( mfrow=c(4,2), mar=c(3,4,1,1)+.1 )
plot.ts ( beaver1$temp, main="beaver", xlab="time",

ylab="temperature" )

plot.ts ( co2, main="mauna loa", ylab="co2 (ppm)" )
plot.ts ( eustockmarkets[,1], main="dax",

ylab="closing price" )

plot.ts ( ldeaths, main="uk lung disease",

ylab="monthly deaths" )

plot.ts ( lynx, main="canadian lynx", ylab="trappings" )
plot.ts ( presidents, main="presidents", ylab="approval" )
plot.ts ( seatbelts[,"driverskilled"], main="uk drivers",

ylab="deaths" )

plot.ts ( sunspot.month, main="sun spots",

ylab="number of sunspots" )

    plot.ts is the command for plotting time series.
    the mar argument in the par command says how many lines are in the margins of
each plot. those lines are used for titles and axis labels. the command is used here
to decrease the default so there is less white space between the plots, hence more
room for each plot.

the data sets in figure 7.5 exhibit a feature common to many time series: if one data
point is large, the next tends to be large, and if one data point is small, the next tends to
be small; i.e., yt and yt+1 are dependent. the dependence can be seen in figure 7.6 which
plots yt+1 vs. yt, for the beaver and president datasets. the upward trend in each panel
shows the dependence. time series analysts typically use the term autocorrelation     the
pre   x auto refers to the fact that the time series is correlated with itself     even though
they mean dependence. r has the built-in function acf for computing autocorrelations.
the following snippet shows how it works.

> acf ( beaver1$temp, plot=f, lag.max=5 )

7.2. time series and markov chains

398

figure 7.5: time series. beaver: body temperature of a beaver, recorded every 10 min-
utes; mauna loa: atmospheric concentration of co2; dax: daily closing prices of the
dax stock exchange in germany; uk lung disease: monthly deaths from bronchitis,
emphysema and asthma; canadian lynx: annual number of trappings; presidents: quar-
terly approval ratings; uk drivers: deaths of car drivers; sun spots: monthly sunspot
numbers. in all cases the abscissa is time.

beavertimetemperature02040608010036.437.0mauna loatimeco2 (ppm)1960197019801990320340360daxtimeclosing price1992199419961998200040006000uk lung diseasetimemonthly deaths197419761978198015003000canadian lynxtimetrappings182018601900020005000presidentstimeapproval1945195519651975305070uk driversdeaths197019751980198560100160sun spotsnumber of sunspots17501850195001002007.2. time series and markov chains

399

autocorrelations of series    beaver1$temp   , by lag

0

5
1.000 0.826 0.686 0.580 0.458 0.342

1

2

3

4

the six numbers in the bottom line are cor(yt, yt), cor(yt, yt+1), . . . , cor(yt, yt+5) and are
referred to as autocorrelations of lag 0, lag 1, . . . , lag 5. those autocorrelations can, as
usual, be visualized with plots as in figure 7.7.

figure 7.6: yt+1 plotted against yt for the beaver and presidents data sets

figure 7.6 was produced by the following snippet.

dim ( beaver1 )
plot ( beaver1$temp[-114], beaver1$temp[-1], main="beaver",

xlab=expression(y[t]), ylab=expression(y[t+1]) )

length ( presidents )
plot ( presidents[-120], presidents[-1], main="presidents",

xlab=expression(y[t]), ylab=expression(y[t+1]) )

36.437.036.437.0beaverytyt+13060305070presidentsytyt+17.2. time series and markov chains

400

figure 7.7: yt+k plotted against yt for the beaver data set and lags k = 0, . . . , 5

36.436.837.236.436.837.2lag = 0ytyt+k36.436.837.236.436.837.2lag = 1ytyt+k36.436.837.236.436.837.2lag = 2ytyt+k36.436.837.236.436.837.2lag = 3ytyt+k36.436.837.236.637.037.4lag = 4ytyt+k36.436.837.236.637.037.4lag = 5ytyt+k7.2. time series and markov chains

401

figure 7.7 was produced by the following snippet.

par ( mfrow=c(3,2) )
temp <- beaver1$temp
n <- length(temp)
for ( k in 0:5 ) {

x <- temp[1:(n-k)]
y <- temp[(1+k):n]
plot ( x, y, xlab=expression(y[t]),
ylab=expression(y[t+k]), main=paste("lag =", k) )

}

because time series data cannot usually be treated as independent, we need special
methods to deal with them. it is beyond the scope of this book to present the major the-
oretical developments of time series methods. as figure 7.5 shows, there can be a wide
variety of structure in time series data. in particular, the beaver, and presidents data sets
have no structure readily apparent to the eye; dax has seemingly minor    uctuations im-
posed on a general increasing trend; uk lung disease and uk drivers have an annual
cycle; mauna loa has an annual cycle imposed on a general increasing trend; and cana-
dian lynx and sun spots are cyclic, but for no obvious reason and with no obvious length
of the cycle. in the remainder of this section we will show, by analyzing some of the data
sets in figure 7.5, some of the possibilities.

beaver our goal is to develop a more complete picture of the probabilistic structure of
the {yt}   s. to that end, consider the following question. if we   re trying to predict yt+1, and
if we already know yt, does it help us also to know yt   1? i.e., are yt   1 and yt+1 conditionally
independent given yt? that question can be answered visually with a coplot (figures 2.15
and 2.16). figure 7.8 shows the coplot for the beaver data.

figure 7.8 was produced by the following snippet.

temp <- beaver1$temp
n
coplot ( temp[3:n] ~ temp[1:(n-2)] | temp[2:(n-1)],

<- length ( temp )

xlab=c (expression(y[t-1]), expression(y[t])),

7.2. time series and markov chains

402

figure 7.8: coplot of yt+1 as a function of yt   1 given yt for the beaver data set

36.436.837.236.436.837.236.436.837.236.436.837.236.436.837.2yt!1yt+136.436.636.837.037.237.4yt7.2. time series and markov chains

403

ylab=expression(y[t+1]) )

the    gure is ambiguous. in the    rst, second, and sixth panels, yt+1 and yt   1 seem
to be linearly related given yt, while in the third, fourth, and    fth panels, yt+1 and yt   1
seem to be independent given yt. we can examine the question numerically with the
partial autocorrelation, the conditional correlation of yt+1 and yt   1 given yt. the following
snippet shows how to compute partial autocorrelations in r using the function pacf.
> pacf ( temp, lag.max=5, plot=f )

partial autocorrelations of series    temp   , by lag

1
0.826

2
0.014

3

5
0.031 -0.101 -0.063

4

the numbers in the bottom row are cor(yt, yt+k | yt+1, . . . , yt+k   1). except for the    rst,
they   re small. figure 7.8 and the partial autocorrelations suggest that a model in which
yt+1     yt   1 | yt would    t the data well. and the second panel in figure 7.7 suggests that
a model of the form yt+1 =   0 +   1yt +  t+1 might    t well. such a model is called an
autoregression. r has a function ar for    tting them. here   s how it works with the beaver
data.

> fit <- ar ( beaver1$temp, order.max=1 )
> fit # see what we   ve got

call:
ar(x = beaver1$temp, order.max = 1)

coefficients:

1
0.8258

order selected 1

sigma^2 estimated as

0.01201

the 0.8258 means that the    tted model is yt+1 =   0 + 0.8258yt +  t+1. you can see
whether the 0.8258 makes sense by examing the second panel of figure 7.7. the  t   s
have an estimated variance of 0.012. fit$x.mean shows that     0 = 36.86. finally,
   
qqnorm(fit$resid) (try it.) shows a nearly linear plot, except for one point, indicating
that yt+1     n(36.86 + .8258yt,
.012) is a reasonably good model, except for one outlier.

7.2. time series and markov chains

404

mauna loa the mauna loa data look like an annual cycle superimposed on a steadily
increasing long term trend. our goal is to estimate both components and decompose the
data as

yt = long term trend + annual cycle + unexplained variation.

our strategy, because it seems easiest, is to estimate the long term trend    rst, then use
deviations from the long term trend to estimate the annual cycle. a sensible estimate of
the long term trend at time t is the average of a year   s co2 readings, for a year centered at
t. thus, let

.5yt   6 + yt   5 +        + yt+5 + .5yt+6

(7.6)

  g(t) =

12

where g(t) represents the long term trend at time t. r has the built-in command filter to
compute   g. the result is shown in figure 7.9 (a) which also shows how to use filter.
deviations from   g are co2 - g.hat. see figure 7.9 (b). the deviations can be grouped
by month, then averaged. the average of the january deviations, for example, is a good
estimate of how much the january co2 deviates from the long term trend, and likewise for
other months. see figure 7.9 (c). finally, figure 7.9 (d) shows the data,   g, and the    tted
values   g + monthly e   ects. the    t is good: the    tted values di   er very little from the data.

figure 7.9 was produced by the following snippet.

filt <- c ( .5, rep(1,11), .5 ) / 12
g.hat <- filter ( co2, filt )
par ( mfrow=c(2,2) )
plot.ts ( co2, main="(a)" )
lines ( g.hat )
resids <- co2 - g.hat
plot.ts ( resids, main="(b)" )
resids <- matrix ( resids, nrow=12 )
cycle <- apply ( resids, 1, mean, na.rm=t )
plot ( cycle, type="b", main="(c)" )
plot.ts ( co2, type="p", pch=".", main="(d)" )
lines ( g.hat )
lines ( g.hat + cycle )

dax yt is the closing price of the german stock exchange dax on day t. investors
often care about the rate of return y   
t = yt+1/yt, so we   ll have to consider whether to

7.2. time series and markov chains

405

figure 7.9: (a): co2 and   g; (b): residuals; (c): residuals averaged by month; (d): data,   g,
and    tted values

(a)timeco219601980320340360(b)timeresids19601980!4!2024246812!3!2!10123(c)indexcycle(d)timeco2196019803203403607.2. time series and markov chains

406

analyze the yt   s directly or convert them to y   
t    s    rst. figure 7.10 is for the dax prices
directly. panel (a) shows the yt   s. it seems to show minor    uctuations around a steadily
increasing trend. panel (b) shows the time series of yt     yt   1. it seems to show a series
of    uctuations approximately centered around 0, with no apparent pattern, and with larger
   uctuations occuring later in the series. panel (c) shows yt versus yt   1. it shows a strong
linear relationship between yt and yt   1. two lines are drawn on the plot: the lines yt =   0 +
  1yt   1 for (  0,   1) = (0, 1) and for (  0,   1) set equal to the ordinary regression coe   cients
found by lm. the two lines are indistinguishable, suggesting that yt     yt   1 is a good model
for the data. panel (d) is a q-q plot of yt     yt   1. it is not approximately linear, suggesting
that yt     n(yt   1,   ) is not a good model for the data.

figure 7.10 was produced by the following snippet.

par ( mfrow=c(2,2) )
plot.ts ( dax, main="(a)" )
plot.ts ( diff(dax), ylab = expression ( dax[t] - dax[t-1] ),

main="(b)" )

plot ( dax[-n], dax[-1], xlab = expression ( dax[t-1] ),

ylab = expression ( dax[t] ), main="(c)", pch="." )

abline ( 0, 1 )
abline ( lm ( dax[-1] ~ dax[-n] )$coef, lty=2 )
qqnorm ( diff(dax), main="(d)", pch="." )
    the r command diff is for taking di   erences, typically of time series. diff(y)
yields y[2]-y[1], y[3]-y[2], ... which could also be accomplished eas-
ily enough without using diff: y[-1] - y[-n]. but additional arguments, as
in diff ( y, lag, differences ) make it much more useful. for exam-
ple, diff(y,lag=2) yields y[3]-y[1], y[4]-y[2], ... while diff ( y,
differences=2 ) is the same as diff ( diff(y) ). the latter is a construct
very useful in time series analysis.

figure 7.11 is for the y   

t    s. panel (a) shows the time series. it shows a seemingly
t     y   
patternless set of data centered around 1. panel (b) shows the time series of y   
t   1, a
seemingly patternless set of data centered at 0. panel (c) shows y   
t   1. it shows
no apparent relationship between y   
t   1, suggesting that y   
t   1 is a good model
t    
for the data. panel (d) is a q-q plot of y   
t . it is approximately linear, suggesting that y   
n(  ,   ) is a good model for the data, with a few outliers on both the high and low ends.

t versus y   
t     y   

t and y   

7.2. time series and markov chains

407

figure 7.10: dax closing prices. (a): the time series of yt   s; (b): yt     yt   1; (c): yt versus
yt   1; (d): qq plot of yt     yt   1.

(a)timedax19921995199820005000(b)timedaxt--daxt--1199219951998   200020004000600020005000(c)daxt--1daxt   3   113   2000(d)theoretical quantilessample quantiles7.2. time series and markov chains
408
the mean and sd of the y      s are about 1.000705 and 0.01028; so y        n(1.0007, 0.01)
might be a good model.

figure 7.11: dax returns. (a): the time series of y   
(d): qq plot of y   
t .

t    s; (b): y   

t     y   

t   1; (c): y   

t versus y   
t   1;

figure 7.11 was produced by the following snippet.

par ( mfrow=c(2,2) )
plot.ts ( rate, main="(a)" )

(a)timerate050015000.921.00(b)timeratet--ratet--105001500   0.050.050.920.981.040.921.00(c)ratet--1ratetlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll   3   1130.921.00(d)theoretical quantilessample quantiles7.3. survival analysis

409

plot.ts ( diff(rate), ylab = expression ( rate[t] - rate[t-1] ),

main="(b)" )

plot ( rate[-n2], rate[-1], xlab = expression ( rate[t-1] ),

ylab = expression ( rate[t] ), main="(c)", pch="." )

qqnorm ( rate, main="(d)" )

we now have two possible models for the dax data: yt     yt   1 with a still to be
determined distribution and y        n(1.0007, 0.01) with the y   
t    s mutually independent.
both seem plausible on statistical grounds. (but see exercise 8 for further development.)
it is not necessary to choose one or the other. having several ways of describing a data
set is useful. each model gives us another way to view the data. economists and investors
might prefer one or the other at di   erent times or for di   erent purposes. there might
even be other useful models that we haven   t yet considered. those would be beyond the
scope of this book, but could be covered in texts on time series,    nancial mathematics,
econometrics, or similar topics.

7.3 survival analysis

in many studies, the random variable is the time at which an event occurs. for example,

medicine the time until a patient dies.

neurobiology the time until a neuron    res.

quality control the time until a computer crashes.

higher education the time until an associated professor is promoted to full professor.

such data are called survival data. for the i   th person, neuron, computer, etc., there is a
random variable

yi = time of event on i   th unit.

we usually call yi the lifetime, even though the event is not necessarily death. it is often the
case with survival data that some measurements are censored. for example, if we study
a university   s records to see how long it takes to get promoted from associate to full
professor, we will    nd some associate professors leave the university     either through
retirement or by taking another job     before they get promoted while others are still
associate professors at the time of our study. for these people we don   t know their time

7.3. survival analysis

410

if either (a) person i left the university after    ve years, or (b) person i
of promotion.
became associate professor    ve years prior to our study, then we don   t know yi exactly.
all we know is yi > 5. this form of censoring is called right censoring. in some data sets
there may also be left censoring or interval censoring. survival analysis typically requires
specialized statistical techniques. r has a package of functions for this purpose; the name
of the package is survival. the survival package is automatically distributed with
r. to load it into your r session, type library(survival). the package comes with
functions for survival analysis and also with some example data sets. our next example
uses one of those data sets.
example 7.2 (bladder tumors)
this example comes from a study of bladder tumors, originally published in byar [1980]
and later reanalyzed in wei et al. [1989]. patients had bladder tumors. the tumors
were removed and the patients were randomly assigned to one of three treatment
groups (placebo, thiotepa, pyridoxine). then the patients were followed through time
to see whether and when bladder tumors would recur. r   s survival package has the
data for the    rst two treatment groups, placebo and thiotepa. type bladder to see it.
(remember to load the survival package    rst.) the last several lines look like this.

id rx number size stop event enum
1
2
3
4
1
2
3
4
1
2
3
4

54
54
54
54
38
54
54
54
59
59
59
59

341 83
342 83
343 83
344 83
345 84
346 84
347 84
348 84
349 85
350 85
351 85
352 85

2
2
2
2
2
2
2
2
2
2
2
2

3
3
3
3
2
2
2
2
1
1
1
1

4
4
4
4
1
1
1
1
3
3
3
3

0
0
0
0
1
0
0
0
0
0
0
0

    id is the patient   s id number. note that each patient has four lines of data. that   s

to record up to four recurrences of tumor.

    rx is the treatment: 1 for placebo; 2 for thiotepa.
    number is the number of tumors the patient had at the initial exam when the

patient joined the study.

7.3. survival analysis

411

    size is the size (cm) of the largest initial tumor.
    stop is the time (months) of the observation.
    event is 1 if there   s a tumor; 0 if not.
    enum line 1, 2, 3, or 4 for each patient

for example, patient 83 was followed for 54 months and had no tumor recurrences;
patient 85 was followed for 59 months and also had no recurrences. but patient 84,
who was also followed for 54 months, had a tumor recurrence at month 38 and no fur-
ther recurrences after that. our analysis will look at the time until the    rst recurrence,
so we want bladder[bladder$enum==1,], the last several lines of which are

id rx number size stop event enum
1
1
1
1
1
1

49
50
4
54
38
59

329 80
333 81
337 82
341 83
345 84
349 85

2
2
2
2
2
2

3
1
4
3
2
1

3
1
1
4
1
3

0
0
1
0
1
0

patients 80, 81, 83, and 85 had no tumors for as long as they were followed; their
data is right-censored. the data for patients 82 and 84 is not censored; it is observed
exactly.

figure 7.12 is a plot of the data. the solid line is for placebo; the dashed line for
thiotepa. the abscissa is in months. the ordinate shows the fraction of patients who
have survived without a recurrence of bladder tumors. the plot shows, for example,
that at 30 months, the survival rate without recurrence is about 50% for thiotepa pa-
tients compared to a little under 40% for placebo patients. the circles on the plot show
censoring. i.e., the four circles on the solid curve between 30 and 40 months repre-
sent four placebo patients whose data was right-censored. there is a circle at every
censoring time that is not also the time of a recurrence (for a different patient).

figure 7.12 was produced with the snippet

event.first <- bladder[,"enum"] == 1
blad.surv <- surv ( bladder[event.first,"stop",],

7.3. survival analysis

412

figure 7.12: survival curve for bladder cancer. solid line for placebo; dashed line for
thiotepa.

01020304050600.00.20.40.60.81.0monthsfraction without recurrencellllllllllllllllllllllll7.3. survival analysis

413

bladder[event.first,"event"] )

blad.fit <- survfit ( blad.surv ~ bladder[event.first,"rx"] )
plot ( blad.fit, conf.int=false, mark=1, xlab="months",

ylab="fraction without recurrence", lty=1:2 )

    surv is r   s function for creating a survival object.

you can type
print(blad.surv) and summary(blad.surv) to learn more about survival ob-
jects.

    survfit computes an estimate of a survival curve.

intervals (0, t1], (t1, t2], . . . , and let pi = p[y > ti|y > ti   1]. then for each i, s (ti) =(cid:81)i
the interval (ti   1, ti]. thus,   s (ti) = (cid:81)i

in survival analysis we think of y1, . . . , yn as a sample from a distribution f, with
density f , of lifetimes.
in survival analysis, statisticians often work with the survivor
function s (t) = 1     f(t) = p[yi > t], the id203 that a unit survives beyond time t.
the lines in figure 7.12 are the so-called kaplan-meier estimates of s for patients in the
thiotepa and placebo groups, which arise from the following argument. partition r+ into
j=1 pi.
the pi   s can be estimated from data as   pi = (r(ti)     di)/r(ti) where r(ti) is the number of
people at risk (in the study but not yet dead) at time ti   1 and di is the number of deaths in
j=1(r(ti)     di)/r(ti). as the partition becomes    ner,
most terms in the product are equal to one; only those intervals with a death contribute a
(cid:89)
term that is not one. the limit yields the kaplan-meier estimate

  s (t) =

i:yi<t

r(yi)     di
r(yi)

.

this estimate is reasonably accurate so long as r(t) is reasonably large;   s (t) is more accu-
rate for small values of t than for large values of t; and there is no information at all for
estimating s (t) for t > max{yi}.

survival data is often modelled in terms of the hazard function
p[y     [t, t + h)]

p[y     [t, t + h)| y     t]

h(t) = lim
h   0

h

= lim
h   0

h p[y     t]

=

f (t)
s (t) .

(7.7)

the interpretation of h(t) is the fraction, among people who have survived to time t, of
those who will die soon thereafter. there are several parametric families of distributions
for lifetimes in use for survival analysis. the most basic is the exponential     f (y) =

7.3. survival analysis

414

(1/  ) exp   y/       which has hazard function h(y) = 1/  , a constant. a constant hazard
function says, for example, that young people are just as likely to die as old people, or that
new air conditioners are just as likely to fail as old air conditioners. for many applications
that assumption is unreasonable, so statisticians may work with other parametric families
for lifetimes, especially the weibull, which has h(y) =     (  y)     1, an increasing function
of y if    > 1. we will not dwell further on parametric models; the interested reader should
refer to a more specialized source.

however, the goal of survival analysis is not usually to estimate s and h, but to compare
the survivor and hazard functions for two groups such as treatment and placebo or to see
how the survivor and hazard functions vary as functions of some covariates. therefore it
is not usually necessary to estimate s and h well, as long as we can estimate how s and
h di   er between groups, or as a function of the covariates. for this purpose it has become
common to adopt a proportional hazards model:

h(y) = h0(y) exp(  

(cid:48)x)

(7.8)

where h0 is the baseline hazard function that is adjusted according to x, a vector of covari-
ates and   , a vector of coe   cients. equation 7.8 is known as the cox proportional hazards
model. the goal is usually to estimate   . r   s survival package has a function for    tting
equation 7.8 to data.

example 7.3 (bladder tumors, cont.)
this continues example 7.2. here we adopt the cox proportional hazards model and
see how well we can estimate the effect of the treatment thiotepa compared to placebo
in preventing recurrence of bladder tumors. we will also examine the effects of other
potential covariates.
we   d like to    t the cox proportional hazards model h(y) = h0(y) exp(  trt    trt) where
trt is an indicator variable that is 1 for patients on thiotepa and 0 for patients on
placebo; but    rst we check whether such a model looks plausible; i.e. whether the
hazards look proportional. starting from equation 7.7 we can integrate both sides to
0 h(z) dz =     log s (y). h(y) is called the cumulative hazard function. thus,
if the two groups have proportional hazards, they also have proportional cumulative
hazard functions and log survivor functions. figure 7.13 plots the estimated cumula-
tive hazard and log (cumulative hazard) functions for the bladder tumor data. the log
(cumulative hazard) functions look parallel, so the proportional hazards assumption
looks reasonable.

get h(y)    (cid:82) y

7.3. survival analysis

415

figure 7.13: cumulative hazard and log(hazard) curves for bladder cancer. solid line for
thiotepa; dashed line for placebo.

01030500.00.40.81.2monthscumulative hazardllllllllllllllllllllllll2050200   4   3   2   10monthslog(cumulative hazard)llllllllllllllllllllllll7.4. exercises

416

figure 7.13 was produced with the snippet

plot ( blad.fit, conf.int=false, mark=1, xlab="months",

ylab="cumulative hazard", lty=1:2, fun="cumhaz" )

plot ( blad.fit, conf.int=false, mark=1, xlab="months",

ylab="log(cumulative hazard)", lty=1:2, fun="cloglog" )

    the fun argument allows transformations of the survival curve. fun="cumhaz"
plots the cumulative hazard function and fun="cloglog" plots the log (cumula-
tive hazard) function.

since the proportional hazards model looks reasonable, we    t it:

blad.cox <- coxph ( blad.surv    bladder[event.first,"rx"] ).
printing blad.cox yields

call:
coxph(formula = blad.surv    bladder[event.first, "rx"])

bladder[event.first, "rx"] -0.371

0.69

coef exp(coef) se(coef)

p
0.303 -1.22 0.22

z

likelihood ratio test=1.54

on 1 df, p=0.215

n= 85

the estimated coef   cient is     trt =    0.371. thus the hazard function for thiotepa pa-
tients is estimated to be exp(   0.371) = 0.69 times that for placebo patients. the
standard error of     trt =    0.371 is about 0.3; so     trt is accurate to about   0.6 or so.

7.4 exercises

1. in the orthodont data, m09 doesn   t follow the general pattern. maybe there   s an
error in the data or maybe that person really did grow in an unusual way. fit a model
similar to ortho.fit1 but excluding the data from m09. does anything change in
an important way?

2. in the orthodont data, it seems clear that di   erent individuals have di   erent inter-
cepts. it   s not as clear whether they have di   erent slopes. conduct an analysis to

7.4. exercises

417

investigate that possibility. your analysis must address at least two questions. first,
do di   erent individuals seem to have di   erent slopes? second, is the apparent di   er-
ence in male and female slopes found by ortho.fit4 really a di   erence between
males and females on average, or is it due to the particular males and females who
happened to be chosen for this study?

3. carry out a bayesian analysis of the model in equation 7.2.

4.

(a) make plots analagous to figures 7.6 and 7.7, compute autocorrelations, and

interpret for the other datasets in figure 7.5.

(b) make plots analagous to figure 7.8, compute partial autocorrelations, and in-

terpret for the other data sets in figure 7.5.

5. create and    t a good model for body temperatures of the second beaver. use the

dataset beaver2.

6.

(a) why does equation 7.6 average over a year? why isn   t it, for example,

  g(t) =

for some k (cid:44) 6?

.5yt   k + yt   k+1 +        + yt+k   1 + .5yt+k

2k

(b) examine   g in equation 7.6. use r if necessary. why are some of the entries

na?

7. the r code for figure 7.9 contains the lines

resids <- matrix ( resids, nrow=12 )
cycle <- apply ( resids, 1, mean, na.rm=t )

would the following lines work instead?

resids <- matrix ( resids, ncol=12 )
cycle <- apply ( resids, 2, mean, na.rm=t )

why or why not?

8. figure 7.10 and the accompanying text suggest that yt     yt   1 is a good model for the
dax data. but that doesn   t square with the observation that the yt   s have a generally
increasing trend.

7.4. exercises

418

(a) find a quantitative way to show the trend.
(b) say why the dax analysis missed the trend.
(c) improve the analysis so it   s consistent with the trend.

9. figures 7.10 and 7.11 and the accompanying text analyze the dax time series as
though it has the same structure throughout the entire time. does that make sense?
think of and implement some way of investigating whether the structure of the
series changes from early to late.

10. choose one or more of the other eu stock markets that come with the dax data.

investigate whether it has the same structure as the dax.

11.

(a) make a plausible analysis of the uk lung disease data.
(b) r has the three data sets ldeaths, fdeaths, and mdeaths which are the total
deaths, the deaths of females, and the deaths of males. do the deaths of females
and males follow similar distributional patterns? justify your answer.

12. make a plausible analysis of the presidents approval ratings.

13.

(a) make a plausible analysis of the uk drivers deaths.
(b) according to r,    compulsory wearing of seat belts was introduced on 31 jan

1983.    did that e   ect the number of deaths? justify your answer.

(c) is the number of deaths related to the number of kilometers driven? (use the

variable kms in the seatbelts data set.) justify your answer.

14. this question follows up example 7.3. in the example we analyzed the data to learn
the e   ect of thiotepa on the recurrence of bladder tumors. but the data set has two
other variables that might be important covariates: the number of initial tumors and
the size of the largest initial tumor.

(a) find the distribution of the numbers of initial tumors. how many patients had

1 initial tumor, how many had 2, etc?

(b) divide patients, in a sensible way, into groups according to the number of
initial tumors. you must decide how many groups there should be and what
the group boundaries should be.

(c) make plots similar to figures 7.12 and 7.13 to see whether a proportional haz-

ard model looks sensible for number of initial tumors.
(d) fit a proportional hazard model and report the results.

7.4. exercises

419

(e) repeat the previous analysis, but for size of largest initial tumor.
(f) fit a proportional hazard model with three covariates: treatment, number of

initial tumors, size of largest initial tumor. report the results.

chapter 8

mathematical statistics

8.1 properties of statistics

8.1.1 su   ciency
consider the following two facts.

1. let y1, . . . , yn     i.i.d. poi(  ). chapter 2, exercise 7 showed that (cid:96)(  ) depends only

2. let y1, . . . , yn     i.i.d. exp(  ). chapter 2, exercise 20 showed that (cid:96)(  ) depends only

on(cid:80) yi and not on the speci   c values of the individual yi   s.
on(cid:80) yi and not on the speci   c values of the individual yi   s.
for poisson and exponential data, it su   ces to know(cid:80) yi. we don   t need to know the
individual yi   s. we say that(cid:80) yi is a su   cient statistic for   .

further, since (cid:96)(  ) quanti   es how strongly the data support each value of   , other aspects
of y are irrelevant. thus, for id136 about    it su   ces to know (cid:96)(  ), and therefore,

section 8.1.1 examines the general concept of su   ciency. we work in the context of a

parametric family. the idea of su   ciency is formalized in de   nition 8.1.
de   nition 8.1. let {p(  |   )} be a family of id203 densities indexed by a parameter   .
let y = (y1, . . . , yn) be a sample from p(  |   ) for some unknown   . let t(y) be a statistic
such that the joint distribution factors as(cid:89)

p(yi |   ) = g(t(y),   )h(y).

for some functions g and h. then t is called a su   cient statistic for   .

420

8.1. properties of statistics

the idea is that once the data have been observed, h(y) is a constant that does not

depend of   , so (cid:96)(  )    (cid:81) p(yi |   ) = g(t,   )h(y)     g(t,   ). therefore, in order to know the
else about y. for our poisson and exponential examples we can take t(y) =(cid:80) yi.

likelihood function and make id136 about   , we need only know t(y), not anything
for a more detailed look at su   ciency, think of generating three bern(  ) trials y    
(y1, y2, y3). y can be generated, obviously, by generating y1, y2, y3 sequentially. the possi-
ble outcomes and their probabilities are

421

(0, 0, 0)

(1, 0, 0)
(0, 1, 0)
(0, 0, 1)

(1, 1, 0)
(1, 0, 1)
(0, 1, 1)

(1, 1, 1)

(1       )3

  (1       )2

  2(1       )

  3

respectively.

but y can also be generated by a two-step procedure:

1. generate (cid:80) yi = 0, 1, 2, 3 with probabilities (1       )3, 3  (1       )2, 3  2(1       ),   3,
(a) if(cid:80) yi = 0, generate (0, 0, 0)
(b) if(cid:80) yi = 1, generate (1, 0, 0), (0, 1, 0), or (0, 0, 1) each with id203 1/3.
(c) if(cid:80) yi = 2, generate (1, 1, 0), (1, 0, 1), or (0, 1, 1) each with id203 1/3.
(d) if(cid:80) yi = 3, generate (1, 1, 1)

2.

it is easy to check that the two-step procedure generates each of the 8 possible outcomes
with the same probabilities as the obvious sequential procedure. for generating y the two
procedures are equivalent. but in the two-step procedure, only the    rst step depends on   .
so if we want to use the data to learn about   , we need only know the outcome of the    rst

step. the second step is irrelevant. i.e., we need only know(cid:80) yi. in other words,(cid:80) yi is

su   cient.

8.1. properties of statistics

422
for an example of another type, let y1, . . . , yn     i.i.d. u(0,   ). what is a su   cient

statistic for   ?

                      1

if yi <    for i = 1, . . . , n
otherwise

p(y|   ) =

=

  n
0
1
  n 1(0,  )(y(n))

shows that y(n), the maximum of the yi   s, is a one dimensional su   cient statistic for   .
example 8.1
in world war ii, when german tanks came from the factory they had serial numbers
labelled consecutively from 1. i.e., the numbers were 1, 2, . . . . the allies wanted to
estimate t , the total number of german tanks and had, as data, the serial numbers
of captured tanks. see exercise 23 in chapter 5. assume that tanks were captured
independently of each other and that all tanks were equally likely to be captured. let
x1, . . . , xn be the serial numbers of the captured tanks. then x(n) is a suf   cient statistic.
id136 about the total number of german tanks should be based on x(n) and not on
any other aspect of the data.

if y is a random variable whose values are in a space y, then y is a random variable
whose values are in yn. for any statistic t we can divide yn into subsets indexed by t.
i.e., for each value t, we de   ne the subset

yn
t = {y     yn : t(y) = t}

then t is a su   cient statistic if and only if

p(y| y     yn
t )

does not depend on   .

p(yi |   ,   ) =

(cid:89) 1

sometimes su   cient statistics are higher dimensional. for example, let y1, . . . , yn    
(cid:33)n(cid:16)(cid:89)
i.i.d. gam(  ,   ). then(cid:89)
so t(y) = ((cid:81) yi,(cid:80) yi) is a two dimensional su   cient statistic.
ples where(cid:80) yi was su   cient,   y =(cid:80) yi/n is also su   cient. but the lack of uniqueness is

su   cient statistics are not unique. if t = t(y) is a su   cient statistic, and if f is a 1-1
function, then f (t) is also su   cient. so in the poisson, exponential, and bernoulli exam-

e   (cid:80) yi/  

(cid:17)     1

e   yi/   =

  (  )    

  (  )    

y     1

(cid:32)

yi

1

i

8.1. properties of statistics

423

even more severe. the whole data set t(y) = (y) is an n-dimensional su   cient statistic
because

(cid:89)

p(yi |   ) = g(t(y),   )h(y)

where g(t(y),   ) = p(y|   ) and h(y) = 1. the order statistic t(y) = (y(1), . . . , y(n)) is
another n-dimensional su   cient statistic. also, if t is any su   cient one dimensional
statistic then t2 = (y1, t) is a two dimensional su   cient statistic. but it is intuitively
clear that these su   cient statistics are higher-dimensional than necessary. they can be
reduced to lower dimensional statistics while retaining su   ciency, that is, without losing
information.

the key idea in the preceding paragraph is that the high dimensional su   cient statistics
can be transformed into the low dimensional ones, but not vice versa. e.g.,   y is a function
of (y(1), . . . , y(n)) but (y(1), . . . , y(n)) is not a function of   y. de   nition 8.2 is for statistics that
have been reduced as much as possible without losing su   ciency.

de   nition 8.2. a su   cient statistic t(y) is called minimal su   cient if, for any other suf-
   cient statistic t2, t(y) is a function of t2(y).

this book does not delve into methods for    nding minimal su   cient statistics. in most

cases the user can recognize whether a statistic is minimal su   cient.

does the theory of su   ciency imply that statisticians need look only at su   cient statis-
tics and not at other aspects of the data? not quite. let y1, . . . , yn be binary random vari-
ables and suppose we adopt the model y1, . . . , yn     i.i.d. bern(  ). then for estimating   

we need look only at(cid:80) yi. but suppose (y1, . . . , yn) turn out to be

(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)

0 0        0

many 0   s

(cid:124)(cid:32)(cid:32)(cid:32)(cid:32)(cid:123)(cid:122)(cid:32)(cid:32)(cid:32)(cid:32)(cid:125)

1 1        1
,

many 1   s

i.e., many 0   s followed by many 1   s. such a dataset would cast doubt on the assumption
that the yi   s are independent. judging from this dataset, it looks much more likely that the
yi   s come in streaks or that    is increasing over time. so statisticians should look at all
the data, not just su   cient statistics, because looking at all the data can help us create and
critique models. but once a model has been adopted, then id136 should be based on
su   cient statistics.

8.1.2 consistency, bias, and mean-squared error
consistency heuristically speaking, as we collect ever more data we should be able to
learn the truth ever more accurately. this heuristic is captured formally, at least for pa-
rameter estimation, by the notion of consistency. to say whether an estimator is consistent

8.1. properties of statistics
424
we have to de   ne it for every sample size. to that end, let y1, y2,           i.i.d. f for some
unknown density f having    nite mean    and sd   . for each n     n let tn : rn     r. i.e.
tn is a real-valued function of (y1, . . . , yn). for example, if we   re trying to estimate    we

might take tn = n   1(cid:80)n

1 yi.

de   nition 8.3. the sequence of estimators t1, t2, . . . is said to be consistent for the pa-
rameter    if for every    and for every   > 0.

n       p[|tn       | <  ] = 1.
lim

means {tn = n   1(cid:80)n

1 yi} is consistent for   . similarly, let s n = n   1(cid:80)

for example, the law of large numbers, theorem 1.12, says the sequence of sample
i(yi     tn)2 be the
sample variance. then {s n} is consistent for   2. more generally, m.l.e.   s are consistent.
theorem 8.1. let y1, y2,           i.i.d. py(y|   ) and let     n be the m.l.e. from the sample
(y1, . . . , yn). further, let g be a continuous function of   . then, subject to regularity condi-
tions, {g(    n)} is a consistent sequence of estimators for g(  ).
proof. the proof requires regularity conditions relating to di   erentiability and the inter-
(cid:3)
change of integral and derivative. it is beyond the scope of this book.

consistency is a good property; one should be wary of an inconsistent estimator. on
the other hand, consistency alone does not guarantee that a sequence of estimators is op-
timal, or even sensible. for example, let rn(y1, . . . , yn) = ((cid:98)n/2(cid:99))   1(y1 +        + y(cid:98)n/2(cid:99)), the
mean of the    rst half of the observations. ((cid:98)w(cid:99) is the    oor of w, the largest integer not
greater than w.) the sequence {rn} is consistent for    but is not as good as the sequence of
sample means.

bias
it seems natural to want the sampling distribution of an estimator to be centered
around the parameter being estimated. this desideratum is captured formally, at least for
centering in the sense of expectation, by the notion of bias.
de   nition 8.4. let      =     (y1, . . . , yn) be an estimator of a parameter   . the quantity e[    ]     
is called the bias of     . an estimator whose bias is 0 is called unbiased.

here are some examples.

an unbiased estimator let y1, . . . , yn     i.i.d. n(  ,   ) and consider      =   y as an estimate

of   . because e[  y] =   ,   y is an unbiased estimate of   .

425

8.1. properties of statistics
a biased estimator let y1, . . . , yn     i.i.d. n(  ,   ) and consider

    2 = n   1(cid:88)

as an estimate of   2. theorem 5.31 says that(cid:80)(yi       y)2/  2       2
statisticians prefer to use the unbiased estimator     2 = (n     1)   1(cid:80)(yi       y)2.

i.e.,     2 is a biased estimator of   2.

e[     2] = n   1

(yi       y)2

n   2.

n   1 and therefore
it   s bias is      2/n. some

a biased estimator let x1, . . . , xn     i.i.d. u(0,   ) and consider      = x(n) as an estimate of
  . (     is the m.l.e.; see section 5.4.) but x(n) <   ; therefore e[x(n)] <   ; therefore x(n)
is a biased estimator of   .

mean squared error
is e[(           )2]. mse is a combination of variance and bias:

if      is an estimate of   , then the mean squared error (mse) of     

mse(    ) = e(cid:104)

= e(cid:104)
(           )2(cid:105)
(         e     + e           )2(cid:105)
= e(cid:104)
(         e    )2 + 2(         e    )(e           ) + (e           )2(cid:105)
= e(cid:104)
(         e    )2(cid:105)

+ (e           )2 = var(    ) + [bias(    )]2.
whenever possible, one would like to have an estimator with minimum bias and min-
imum variance; those two properties would also imply minimum mse. but it is not al-
ways possible to achieve both desiderata simultaneously. for example, let y1, . . . , yn    
i.i.d. n(  ,   ) and suppose we want an estimate of   2. we have looked at two estima-
we already know the bias of     2 is 0 and the bias of     2 is      2/n. we also know that
and var(     2) = 2  4/(n     1). thus,

tors so far: the id113     2 = n   1(cid:80)(yi       y)2 and the unbiased estimator     2 = (n/(n     1))     2.
(cid:80)(yi       y)2/  2       2
n   1. therefore var((cid:80)(yi       y)2/  2) = 2(n     1); var(     2) = 2(n     1)  4/n2

mse(     2) =

2(n     1)  4

n2

+

  4
n2

=

(2n     1)  4

n2

=

(2n2     3n + 1)  4

n2(n     1)
2n2  4
n2(n     1)

<

=

2  4
n     1

= mse(     2),

showing that the unbiased estimator does not minimize mse. in choosing an estimator for
  2 one must trade bias for variance. that is a common problem in statistics to which there
is no universal solution.

tion. let x1, . . . , xn     i.i.d. bin(n,   ). a sensible estimator of    is   x    (cid:80) xi/n. we know

we now investigate the variance-bias tradeo    for estimating    in a binomial distribu-

that   x is unbiased, and its variance is   (1       )/n, so its mse is also   (1       )/n.

8.1. properties of statistics

426

but we could take a bayesian approach to the problem instead and use the posterior
mean, e[  | x1, . . . , xn], as an estimator of   . for convenience, adopt the prior distribution
       be(  ,   ). then the posterior is given by [  | x1, . . . , xn]     be(   + x,    + n     x) and
the posterior mean is          e[  | x1, . . . , xn] = (   + x)/(   +    + n). we want the mse of     ,
which we shall calculate from its bias and variance.

(cid:34) x +   
(cid:34) x +   

   +    + n

(cid:35)
(cid:35)

   +    + n

=

=

n   +   
   +    + n
n  (1       )
(   +    + n)2 .

e[    ] = e

var[    ] = var

therefore

mse(    ) =

n  (1       )
(   +    + n)2

+

(cid:32) n   +   

   +    + n

(cid:33)2

.

      

we want to compare mse(   x) to mse(    ), but the comparison might depend on n,   ,
and   . figure 8.1 shows the comparison for four values of n and four values of (  ,   ),
always keeping    =   . note: the bayes estimator when    =    = 0 is the same as   x. using
large values of (  ,   ) looks advantageous when        .5; small values are advantageous
when    is near 0 or 1. there is no general rule for choosing which estimator to use or
for choosing (  ,   ) if we decide to use the bayes estimator. we might make the choice
according to a prior guess of whether    is likely to be near 0, .5, or 1.

figure 8.1 was produced with the following snippet.

theta <- seq ( 0, 1, length=60 )

mse <- function ( a, b, n, theta ) {

( n*theta*(1-theta ) ) / ( a+b+n )^2

+ ( (n*theta + a)/(a+b+n) - theta )^2

}

mse.out <- data.frame ( ab=null, n=null, mse=null )
for ( ab in c ( 0, .5, 1, 4 ) )
for ( n in c ( 5, 20, 100, 1000 ) ) {

mse.out <- rbind ( mse.out, cbind ( a=ab, b=ab, n=n,

theta=theta, mse=mse(ab,ab,n,theta) ) )

8.1. properties of statistics

427

figure 8.1: mean squared error for estimating binomial   . sample size = 5, 20, 100,
1000.    =    = 0: solid line.    =    = 0.5: dashed line.    =    = 1: dotted line.    =    = 4:
dash   dotted line.

thetamse0.000.040.080.00.20.40.60.81.0n = 50.0000.0100.0200.00.20.40.60.81.0n = 200.00000.00150.00.20.40.60.81.0n = 1000.000000.000150.00.20.40.60.81.0n = 10008.2. information

428

}
mse.out$n <- factor ( paste("n =", mse.out$n),

levels = paste("n =", c(5,20,100,1000) ) )

xyplot ( mse   theta | n, groups=a, data=mse.out, type="l",

scales = list ( relation="free" ), lty=1:4 )

8.2

information

we have talked loosely about the amount of information in a sample and we now want to
make the notion more precise. this is an important idea in statistics that can be found in
many texts. one devoted wholly to information is kullback [1968].

suppose that y1, . . . , yn is a random sample from an unknown density. and suppose
there are only two densities under consideration, p1 and p2. we know that the yi   s are a
sample from one of them, but we don   t know which. now consider the    rst observation,
y1. how can we be precise about the amount of information that y1 gives us for distin-
guishing between p1 and p2? we have already seen that the strength of evidence provided
by y1 = y1 is the likelihood ratio p1(y1)/p2(y1). the strength of evidence provided by the
i[p1(yi)/p2(yi)] of the evidence provided by the individual

whole sample is the product(cid:81)

observations. if we transform to a log scale, then the evidence is additive:

(cid:88)

log

p1(y1, . . . , yn)
p2(y1, . . . , yn)

=

log

p1(yi)
p2(yi) .

this seems a suitable quantity to call information. therefore we make the following de   -
nition.

de   nition 8.5. the information in a datum y for distinguishing between densities p1 and
p2 is log p1(y)
p2(y).

the information in a random sample is the sum of the information in the individual el-
ements. the i   th term in the sum is log p1(yi)
p2(yi). that term is a function of yi and is therefore
a random variable whose distribution is determined by either p1 or p2, whichever is the
true density generating the sample. if p1 is the true distribution, then the expected value of
p2(y) p1(y) dy and is the expected amount of information from
that random variable is
a single observation. the law of large numbers says that a large sample will contain

log p1(y)

(cid:82)

8.2. information

429

approximately n times that amount of information. this view of information was origi-
nally discussed thoroughly in kullback and leibler [1951]. accordingly, we make the
following de   nition.

log p1(y)

p2(y) p1(y) dy is called the id181

de   nition 8.6. i(p1, p2)     (cid:82)

from p1 to p2.

for example, suppose that we   re tossing a coin, and we know the id203 of heads
is either 0.4 or 0.8. over a sequence of many tosses, how will information accumulate
to distinguish the two possibilities? first, if we   re tossing the 0.4 coin, then the likeli-
hood ratio on a single toss is either 0.4/0.8 (if the coin lands heads) or 0.6/0.2 (if the
coin lands tails). the two possibilities have probabilities 0.4 and 0.6, respectively. so
i (bern(.4), bern(.8)) = 0.4 log(.5) + 0.6 log(3)     .382. but for tossing the 0.8 coin,
i (bern(.8), bern(.4)) = 0.8 log(2) + 0.2 log(1/3)     .335. notice that the divergence
is not symmetric. the calculation shows that information accumulates slightly faster if
we   re tossing the .4 coin than if we   re tossing the .8 coin. to carry the example to an
extreme, suppose one coin is fair but the other is two-headed. for tossing the fair coin,
i (bern(.5), bern(1)) = .5 log(.5) + .5 log(   ) =    ; but i (bern(1), bern(.5)) = log(2)    
.693. the asymmetry and the in   nity make sense: if we   re tossing the fair coin then even-
tually we will toss a tail and we   ll know for certain which coin it is. but if we   re tossing
the two-headed coin, we   ll always toss heads and never know for certain which coin it is.
theorem 8.2. the id181 between two distributions is non-negative.

proof. we prove the theorem in the continuous case; the discrete case is similar. our proof
follows theorem 3.1 in kullback [1968]. let f1 and f2 be the two densities. we want

(cid:90)

(cid:32) f1(x)

(cid:33)

f2(x)

(cid:90)

i( f1, f2) =

log

f1(x) dx =

g(x) log g(x) f2(x) dx

where g(x) = f1(x)/ f2(x). let   (t) = t log(t) and use taylor   s theorem to get

(cid:48)(1) +
where for every x, h(x)     [1, g(x)]. integrate to get

  (g(x)) =   (1) + [g(x)     1]  

[g(x)     1]2  

(cid:48)(cid:48)(h(x))

1
2

(cid:90)

(cid:90)

(cid:90)

i( f1, f2) =

  (g(x)) f2(x) dx =

  (1) f2(x) dx +

[g(x)     1]  

(cid:48)(1) f2(x) dx +

[g(x)     1]2  

(cid:48)(cid:48)(h(x)) f2(x) dx

= 0 + 0 +

[g(x)     1]2  

(cid:48)(cid:48)(h(x)) f2(x) dx

(cid:90) 1
(cid:90) 1

2

2

8.2. information
but g(x)     0 and h(x)     [1, g(x)] so h(x)     0 and therefore i( f1, f2)     0.

430

(cid:3)

theorem 8.2 shows that id181s are non-negative. see exer-

cise 6 for conditions under which they are zero.

while the id181 measures the ability to discriminate between
two arbitrary densities, the usual situation in statistics is that we are working with a para-
metric family of distributions, so we want to look at the ability to discriminate just among
distributions in the family. and when the sample size is large, we can usually focus atten-
tion on a small neighborhood of      s. to that end, note    rst that

(cid:34)

(cid:35)
f (x|   )

d2

d  2 log f (x|   ) =

d
d  

1

f (x|   )

d
d  

d  2 f (x|   ).
now we want to    nd i( f (x|   ), f (x|    +   )). expand in a taylor   s series around f (x|   ) to
get

f (x|   )2

f (x|   )

=    

d  

+

1

1

d2

(cid:32) d

(cid:33)2
f (x|   )

(cid:90)
i( f (x|   ), f (x|    +   )) =
   

f (x|   )

(cid:40)

log f (x|   )    

f (x|   )(cid:8)log f (x|   )     log f (x|    +   )(cid:9) dx
(cid:34)
log f (x|   ) +

  

(cid:90)
f (x|   ) +

  2
2

f (x|   )

d
d  
f (x|   )    

=      

f (x|   )   2
2

d2

(cid:35)(cid:41)
d  2 log f (x|   )
d  2 log f (x|   ) dx.

dx

d2

assume we can di   erentiate under the integral so that

f (x|   ) dx =

d
d  

1 = 0

f (x|   ) dx =
(cid:90)
                        

f (x|   )
(cid:34)
f (x|   )2

1

f (x|   )

and the    rst term in the previous expression vanishes to yield

(cid:90)

i( f (x|   ), f (x|    +   ))           2
2
f (x|   )
(cid:90)

=       2
2

=

  2
2

d2

(cid:33)2
f (x|   )

(cid:32) d
d  2 log f (x|   ) dx
(cid:35)2
f (x|   )

d  

+

1

f (x|   )

d
d  

                      dx

1

f (x|   )
  2
2

dx =

d2

d  2 f (x|   )
(cid:34) d

(cid:35)2
log f (x|   )

e

d  

dx.

(cid:90)

(cid:90) d

d  

(cid:90) d
(cid:90)

d  

d
d  

8.3. exponential families

431

de   nition 8.7. the expectation on the right in the previous expression,

(cid:34) d

d  

e

(cid:35)2
log p(x|   )

is called the fisher information for sampling from the family f (x|   ) and is denoted i(  ).
fisher information is the most studied form of information in statistics and is relevant
for id136 in parametric families when the sample size is large. the penultimate integral
in the previous derivation shows that i(  ) is also equal to    e[ d2
d  2 log f (x|   )]. the word
information is justi   ed because the fisher information also tells us the maximum precision
(minimum variance) with which we can estimate parameters, in a limiting, asymptotic
sense to be made precise in section 8.4.3. next we calculate the information in some
common parametric families. others are in the exercises.

let x     n(  ,   ) where    is    xed and    is the unknown parameter.

(cid:35)2
log f (x|   )

(cid:34)

= e

1

f (x|   )

d
d  

(cid:35)2
f (x|   )

(cid:34)

(cid:35)2
f (x|   )

=

1
  2 .

1

(x       )
  2

(cid:35)2
log f (x|   )

(cid:34) d

d  

= e

= e

f (x|   )
(cid:35)2
(      + x log        log x!)
(cid:21)2

(cid:20)   1 +

(cid:20) x       

= e

= e

x
  

  

(cid:21)2

var(x|   )

  2

=

1
  

.

=

(cid:34) d
(cid:34) d

i(  ) = e
d  
let x     poi(  ).

i(  ) = e

d  

8.3 exponential families

section 8.3 examines a structure that is shared by many common parametric families of
distributions, including the normal, gamma, beta, binomial, and poisson. we illustrate
with the normal and poisson. if x     poi(  ) then

p(x|   ) =

e       x
x!

=

e     ex log   

,

x!

which we can write as h(x)c(  ) exp(w(  )x) for some functions h, c, and w. if x     n(  ,   )
then

p(x|   ,   ) =

1   
2    

e    1

2  2 (x     )2

=

1   
2    

e    1

2  2 (x2   2  x+  2) =

1   
2    

e      2

2  2 e    x2

2  2

+   x
  2

8.3. exponential families

which we can write as h(x)c(  ,   ) exp((cid:80) wi(  ,   )ti(x)) for some functions h, c, wi, and ti.

these two examples reveal the structure we   re looking for.

a parametric family of distributions p(x|   ) is called an exponential family if its pdf   s

432

can be written as

(cid:80)d
p(x|   ) = h(x)c(  )e
i=1 wi(  )ti(x).

the normalizing constant c(  ) can be absorbed into the exponent, so it is common to

(cid:80) wi(  )ti(x)   c   (  ). we have just seen that the

we study exponential families because they have many features in common. a good
source for an advanced treatment of exponential families is brown [1986].
see exponential families written as p(x|   ) = h(x)e
family of poisson distributions is an exponential family with d = 1. the family of normal
distributions is an exponential family with d = 2. see exercise 10 for other examples of
exponential families. we may rewrite the parameters as   i = wi(  ). the   i   s are called
the natural parameters of the family. for poisson distributions, the natural parameter is
   = log   . for normal distributions the natural parameters are (    1
(cid:82)
dividing by its integral, provided that its integral is    nite. the set of      s for which
h(x)e
there is a number c(  ) such that p(x|   ) = h(x)c(  )e

(cid:80)   iti(x) can be made a id203 density by
a function of the form p(x|   )     h(x)e
(cid:80)   iti(x) <     is called the natural parameter space and denoted h. for every        h,

2  2 ,   

  2 ).

suppose x1, . . . , xn is a sample from an exponential family. then

(cid:80)   iti(x) is a id203 density.
                         n(cid:89)
                         (c(  ))n e
(cid:80)d
i=1 wi(  )(cid:80)n
j t1(x j), . . . , td(x) =(cid:80)
(cid:105) (cid:44) (cid:82) d
(cid:2)g(x, y)(cid:3) dx. but exponential families

j td(x j) is a d-dimensional

(cid:104)(cid:82)

h(x j)

j=1 ti(x j)

j=1

(cid:105)

.

p(x1, . . . , xn |   ) =

p(x j |   ) =

which shows that the collection t1(x) =(cid:80)

j=1

su   cient statistic.

in derivations     as in section 8.4     we sometimes need to study forms like d
dy

g(x, y) dx

for arbitrary functions g, d
dy
obey the following theorem, which we state without proof. the statement comes from
lehmann [1983].

g(x, y) dx

dy

theorem 8.3. for any integrable function g and any    in the interior of h, the integral

(cid:80)   iti(x) dx

g(x)h(x)c(  )e

is continuous and has derivatives of all orders with respect to the      s, and these can be
obtained by di   erentiating under the integral sign.

n(cid:89)

(cid:104)(cid:82)

(cid:90)

8.4. asymptotics

433

for example, take g(x) = 1. write a one-parameter exponential family in the form
p(x|   ) = h(x)e  t(x)   c   (  ). the integral of the density is, as always, 1, so taking derivatives
yields

(cid:90)

(cid:90)

h(x)e  t(x)   c   (  ) dx =

t(x)h(x)e  t(x)   c   (  ) dx    

c   (cid:48)

h(x)e  t(x)   c   (  ) dx,

(8.1)

(cid:90) d

0 =

d  
or e[t(x)] = c   (cid:48).

it is sometimes useful and natural to consider the random variable t = t(x). we have

just derived its expectation.

8.4 asymptotics

in real life, data sets are    nite: (y1, . . . , yn). yet we often appeal to the law of large
numbers or the central limit theorem, theorems 1.12, 1.13, and 1.14, which concern
the limit of a sequence of random variables as n        . the hope is that when n is large
those theorems will tell us something, at least approximately, about the distribution of the
sample mean. but we   re faced with the questions    how large is large?    and    how close
is the approximation?   

to take an example, we might want to apply the law of large numbers or the central
limit theorem to a sequence y1, y2, . . . of random variables from a distribution with mean
   and sd   . here are a few instances of the    rst several elements of such a sequence.

0.70
-0.23
-1.10
...

0.29
-0.24
-0.91
...

0.09
0.29
-0.34
...

-0.23
-0.16
0.22
...

-0.30
-0.79
0.37 -0.01
1.07 -1.51
...

...

-0.72
-0.48
-0.41
...

-0.35
-0.59
-0.65
...

1.79       
0.39       
0.07       
. . .

...

each sequence occupies one row of the array. the               indicates that the sequence con-
tinues in   nitely. the    ...    indicates that there are in   nitely many such sequences. the
numbers were generated by

y <- matrix ( na, 3, 9 )
for ( i in 1:3 ) {

y[i,] <- rnorm(9)
print ( round ( y[i,], 2 ) )

}

8.4. asymptotics

434
    i chose to generate yi   s from the n(0, 1) distribution so i used rnorm, and so, for
this example,    = 0 and    = 1. those are arbitrary choices. i could have used any
values of    and    and any distribution for which i know how to generate random
variables on the computer.

    round does rounding. in this case we   re printing each number to two decimal places.
because there are multiple sequences, each with multiple elements, we need two subscripts
to keep track of things properly. let yi j be the j   th element of the i   th sequence. a real
data set x1, . . . , xn is analogous to the    rst n observations, {yi, j}n
j=1, along one row of the
array. for each sequence of random variables (each row of the array), we   re interested in
things like the behavior as n         of the sequence of sample means   yi1,   yi2, . . . where
  yin = (yi1 +        + yin)/n. and for the central limit theorem, we   re also interested in the
   
n(   yin       ). for the three instances above, the   yin   s and
sequence zi1, zi2, . . . where zin =
zin   s can be printed with

for ( i in 1:3 ) {

print ( round ( cumsum(y[i,]) / 1:9, 2) )
print ( round ( cumsum(y[i,]) / (sqrt(1:9)), 2) )

}
    cumsum computes a cumulative sum; so cumsum(y[1,]) yields the vector y[1,1],

y[1,1]+y[1,2], ..., y[1,1]+...+y[1,9]. (print out
cumsum(y[1,]) if you   re not sure what it is.) therefore,
cumsum(y[i,])/1:9 is the sequence of   yin   s.

    sqrt computes the square root. so the second print statement prints the sequence

of zin   s.

the results for the   yin   s are

0.70
-0.23
-1.10
...

0.49
-0.23
-1.01
...

and for the zin   s are

0.70
-0.23
-1.10
...

0.91
-0.40
-1.74
...

0.36
-0.06
-0.78
...

0.96
-0.23
-1.94
...

0.11
0.21
0.01
-0.08
-0.53 -0.21
...

...

-0.04
-0.14
0.00 -0.07
-0.43 -0.43
...

...

-0.16
-0.13
-0.45
...

0.84
0.71
-0.31 -0.15
-1.83 -1.35
...

...

0.39
-0.15 -0.33
-1.97 -2.12
...

0.11 -0.01
-0.54
-2.35
...

...

0.05       
-0.07       
-0.40       
. . .

...

0.59       
-0.41       
-2.33       
. . .

...

8.4. asymptotics

435

we   re interested in the following questions.

1. will every sequence of   yi   s or zi   s converge? this is a question about the limit along

each row of the array.

2. if they converge, do they all have the same limit?

3. if not every sequence converges, what fraction of them converge; or what is the

id203 that a randomly chosen sequence of   yi   s or zi   s converges?

4. for a    xed n, the collection of random variables {   yi,n}   

i=1 are a set of i.i.d. draws from
some distribution. what is it? and what is the analogous distribution for {zi,n}   
i=1?
this is a question about the distribution along columns of the array.

5. does the distribution of   yn or zn depend on n?
6. is there a limiting distribution as n        ?
some simple examples and the strong law of large numbers, theorem 1.13, answer
questions 1, 2, and 3 for the sequences of   yi   s. the central limit theorem, theorem 1.14,
answers question 6 for the sequences of zi   s.

1. will every sequence of   yi   s converge? no. suppose the sequence of yi   s is 1, 2, 3, . . . .

then {   yi} increases without limit and does not converge.

2. if they converge, do they have the same limit? no. here are two sequences of yi   s.

1
-1

1
-1

1       
-1       

the corresponding sequences {   yi} converge to di   erent limits.

3. what is the id203 of convergence? the id203 of convergence is 1. that   s
the strong law of large numbers. in particular, the id203 of randomly getting
a sequence like 1, 2, 3, . . . that doesn   t converge is 0. but the strong law of large
numbers says even more. it says

p[lim
n      

  yn =   ] = 1.

so the id203 of getting sequences like 1, 1, 1, . . . or    1,   1,   1, . . . that con-
verges to something other than    is 0.

8.4. asymptotics

436

4. what is the distribution of zn? we cannot say in general. it depends on the distribu-

tion of the individual yi   s.

5. does the distribution of zn depend on n? yes, except in the special case where

yi     n(0, 1) for all i.

6. is there a limiting distribution? yes. that   s the central limit theorem. regardless
of the distribution of the yi j   s, as long as var(yi j) <    , the limit, as n        , of the
distribution of zn is n(0, 1).

the law of large numbers and the central limit theorem are theorems about the
limit as n        . when we use those theorems in practice we hope that our sample size n
is large enough that   yin        and zin     n(0, 1), approximately. but how large should n be
before relying on these theorems, and how good is the approximation? the answer is,    it
depends on the distribution of the yi j   s   . that   s what we look at next.

to illustrate, we generate sequences of yi j   s from two distributions, compute   yin   s and
zin   s for several values of n, and compare. one distribution is u(0, 1); the other is a
recentered and rescaled version of be(.39, .01).
the be(.39, .01) density, shown in figure 8.2, was chosen for its asymmetry. it has
a mean of .39/.40 = .975 and a variance of (.39)(.01)/((.40)2(1.40))     .017.
it was
recentered and rescaled to have a mean of .5 and variance of 1/12, the same as the u(0, 1)
distribution.

densities of the   yin   s are in figure 8.3. as the sample size increases from n = 10 to
n = 270, the   yin   s from both distributions get closer to their expected value of 0.5. that   s
the law of large numbers at work. the amount by which they   re o    their mean goes
from about   .2 to about   .04. that   s corollary 1.10 at work. and    nally, as n        , the
densities get more normal. that   s the central limit theorem at work.

note that the density of the   yin   s derived from the u(0, 1) distribution is close to nor-
mal even for the smallest sample size, while the density of the   yin   s derived from the
be(.39, .01) distribution is way o   . that   s because u(0, 1) is symmetric and unimodal,
and therefore close to normal to begin with, while be(.39, .01) is far from symmetric and
unimodal, and therefore far from normal, to begin with. so be(.39, .01) needs a larger n
to make the central limit theorem work; i.e., to be a good approximation.

figure 8.4 is for the zin   s. it   s the same as figure 8.3 except that each density has been
recentered and rescaled to have mean 0 and variance 1. when put on the same scale we
can see that all densities are converging to n(0, 1).

figure 8.2 was produced by

8.4. asymptotics

437

figure 8.2: the be(.39, .01) density

x <- seq ( .01, .99, length=80 )
plot ( x, dbeta(x,.39,.01), type="l", ylab="", xlab="" )

figure 8.3 was generated by the following r code.

<- 500

samp.size <- c ( 10, 30, 90, 270 )
n.reps
y.1 <- matrix ( na, n.reps, max(samp.size) )
y.2 <- matrix ( na, n.reps, max(samp.size) )
for ( i in 1:n.reps ) {

y.1[i,] <- runif ( max(samp.size), 0, 1 )
y.2[i,] <- ( rbeta ( max(samp.size), 0.39, .01 ) - .975 ) *

sqrt( .4^2*1.4 / (.39*.01*12 ) ) + .5

}
par ( mfrow=c(2,2) )

0.00.20.40.60.81.0024688.4. asymptotics

438

figure 8.3: densities of   yin for the u(0, 1) (dashed), modi   ed be(.39, .01) (dash and dot),
and normal (dotted) distributions.

0.00.40.8051015202530n = 100.00.40.8051015202530n = 300.00.40.8051015202530n = 900.00.40.8051015202530n = 2708.4. asymptotics

439

for ( n in 1:length(samp.size) ) {

ybar.1 <- apply ( y.1[,1:samp.size[n]], 1, mean )
ybar.2 <- apply ( y.2[,1:samp.size[n]], 1, mean )
sd <- sqrt ( 1 / ( 12 * samp.size[n] ) )
x <- seq ( .5-3*sd, .5+3*sd, length=60 )
y <- dnorm ( x, .5, sd )
den1 <- density ( ybar.1 )
den2 <- density ( ybar.2 )
ymax <- max ( y, den1$y, den2$y )
plot ( x, y, ylim=c(0,ymax), type="l", lty=3, ylab="",

xlab="", main=paste("n =", samp.size[n]) )

lines ( den1, lty=2 )
lines ( den2, lty=4 )

}

    the manipulations in the line y.2[i,] <- ... are so y.2 will have mean 1/2 and

variance 1/12.

8.4.1 modes of convergence
there are at least three di   erent meanings for convergence of a sequence of random vari-
ables. section 8.4.1 describes convergence in distribution, convergence in id203, and
convergence almost surely.

de   nition 8.8 (convergence in distribution). let y be a random variable and y1, y2, . . . be
a sequence of random variables. the sequence y1, y2, . . . is said to converge in distribution
to y if, at every point y where fy is continuous,

n       fyn(y) = fy(y).
lim

de   nition 8.9 (convergence in id203). the sequence y1, y2, . . . is said to converge
in id203 to y if, for every   > 0,

n       p[|yn     y| <  ] = 1.
lim

8.4. asymptotics

440

figure 8.4: densities of zin for the u(0, 1) (dashed), modi   ed be(.39, .01) (dash and dot),
and normal (dotted) distributions.

!3!1130.00.20.40.60.81.0n = 10!3!1130.00.20.40.60.81.0n = 30!3!1130.00.20.40.60.81.0n = 90!3!1130.00.20.40.60.81.0n = 2708.4. asymptotics

441

de   nition 8.10 (convergence almost surely). the sequence y1, y2, . . . is said to converge
almost surely to y if, for every   > 0,

n      |yn     y| <  ] = 1.
p[lim

almost sure (a.s.) convergence is also called convergence almost everywhere (a.e.) and
convergence with id203 1 (w.p.1).

the three modes of convergence are related by the following theorems, stated here

without proof.
theorem 8.4. if yn     y almost surely, then yn     y in id203.
theorem 8.5. if yn     y in id203, then yn     y in distribution.

one result we will need later is that if g is a function, continuous at c, and if y1, y2, . . .
converges to c in id203, then g(y1), g(y2), . . . converges to g(c) in id203. the
proof is left as an exercise.

the converses to theorems 8.4 and 8.5 are not true, as the following examples demon-

strate.

convergence in distribution

1. toss a fair penny. for all i = 0, 1, . . . , let xi = 1 if the penny lands heads and xi = 0
if the penny lands tails. (all xi   s are equal to each other.) toss a fair dime. let
y = 1 if the dime lands heads and y = 0 if the dime lands tails. then the sequence
x1, x2, . . . converges to x0 in distribution, in id203 and almost surely. the
cdf   s of x1, x2, . . . and y are all the same, so the xi   s converge to y in distribution.
but the xi   s do not converge to y in id203 or almost surely.

2. see the exercises.

convergence in id203 see exercise 21 and others.

convergence almost surely see exercise 20 and others.
one reason that convergence in distribution is sometimes useful is the following theo-

rem.
theorem 8.6. the sequence xn     x in distribution if and only if e[g(xn)]     e[g(x)] for
every bounded, continuous, real-valued function g.

8.4. asymptotics

442

the proof is beyond the scope of this book, but may be found in advanced texts on
id203.
sometimes we know that a sequence xn     x in distribution. but we may be interested
in y = g(x) for some know function g. does g(xn)     g(x)? theorems 8.7 and 8.8
provide answers in some important special cases.
theorem 8.7 (slutsky). let xn     x in distribution and yn     c in id203, where
|c| <    . then,

1. xn + yn     x + c in distribution;
2. xnyn     cx in distribution; and
3. xn/yn     x/c in distribution, if c (cid:44) 0.

proof. this proof follows serfling [1980]. choose t such that fx is continuous at t     c
and let   > 0 be such that fx is continuous at t     c       and t     c +  . (such a t and   can
always be found if fx is continuous except at    nitely many points.) then

fxn+yn(t) = pr[xn + yn]     t]

= pr[xn + yn     t;|yn     c|      ] + pr[xn + yn     t;|yn     c| >  ]
    pr[xn + yn     t;|yn     c|      ] + pr[|yn     c| >  ]
    pr[xn     t     c +  ] + pr[|yn     c| >  ].

so
lim sup fxn+yn(t)     lim sup pr[xn     t     c +  ] + pr[|yn     c| >  ]

    lim sup pr[xn     t     c +  ] = fx(t     c +  ).

letting       0 gives

similarly,

lim sup fxn+yn(t)     fx(t     c) = fx+c(t).

(8.2)

pr[xn     t     c      ] = pr[xn     t     c      ;|yn     c| <  ] + pr[xn     t     c      ;|yn     c|      ]

    pr[xn     t     c      ;|yn     c| <  ] + pr[|yn     c|      ]
= pr[xn + yn     t     c       + yn;|yn     c| <  ] + pr[|yn     c|      ]
    pr[xn + yn     t     c       + (c +  );|yn     c| <  ] + pr[|yn     c|      ]
= pr[xn + yn     t;|yn     c| <  ] + pr[|yn     c|      ]
    pr[xn + yn     t] + pr[|yn     c|      ].

8.4. asymptotics

so,

443

lim inf pr[xn + yn     t] + pr[|yn     c|      ]     lim inf pr[xn     t     c      ] = fx(t     c      ).

letting       0 gives

lim inf fxn+yn(t)     fx(t     c) = fx+c(t).

combining 8.2 and 8.3 yields

showing that xn + yn     x + c in distribution.

we leave the proofs of parts 2 and 3 as exercises.

lim fxn+yn(t) = fx+c(t),

(8.3)

(cid:3)

one application of slutsky   s theorem is the following, which comes from casella
and berger [2002]. let x1, x2, . . . be a sample from a distribution whose mean    and sd
   are    nite. the central limit theorem says
n(   xn       )

   

    n(0, 1)

  

in distribution. but in almost all practical problems we don   t know   . however, we can
estimate    by either the m.l.e.      or the unbiased estimator     . both of them are consistent,
meaning they converge to    in id203. thus,

   
n(   xn       )

   
n(   xn       )

  

=

  
    

    n(0, 1)

in distribution

    
by slutsky   s theorem.

8.4.2 the   -method
   
n(   xn       )/       n(0, 1)
for id136s about   , the central limit theorem tells us that
in distribution. but sometimes we   re interested in a function of   , say g(  ). that   s where
the   -method comes in. it translates the central limit theorem into a result about g(xn)
and g(  ). before stating and proving the   -method, let   s try to get some intuition.
suppose x     n(  ,   ). figure 8.5 shows p(x), a smooth function g(x), and the tangent
line at x =   . now consider a sequence of random variables xn     n(  ,   /n). they
would have pictures similar to 8.5, but the densities would become more concentrated
around   . as the densities become more concentrated, the relevant portion of g would
become more concentrated around the point of tangency and g(x) would be more like the
transformation represented by the tangent line (cid:96)(x) = g(  ) + g(cid:48)(  )(x       ). in the limit,
g(x)     n(g(  ),   g(cid:48)(  )). the   -method formalizes this intuition.

8.4. asymptotics

444

figure 8.5: the   -method

mmp(x)g(x)tangent line8.4. asymptotics

445
   
n(xn       )/       n(0, 1) in distribution. let g be a

theorem 8.8 (the   -method). let
function with a continuous derivative such that g(cid:48)(  ) is    nite and not zero. then

   

n

g(xn)     g(  )

  g(cid:48)(  )

    n(0, 1).

proof. expand g in a taylor   s series about   :

g(xn) = g(  ) + g(cid:48)(    )(xn       )

for some          [  , xn] and therefore
g(xn)     g(  )

   
n

  

   
n

=

g(cid:48)(    )(xn       )

  

    n(0, g(cid:48)(  ))

by slutsky   s theorem and because g(cid:48)(    )     g(cid:48)(  ). now use slutsky   s theorem again to get

   

n

g(xn)     g(  )

  g(cid:48)(  )

    n(0, 1).

(cid:3)

to illustrate the   -method, suppose we   re testing a new medical treatment to learn its
id203 of success,   . subjects, n of them, are recruited into a trial and we observe
   
xn, the number of successes. we could use the m.l.e.     n = xn/n as an estimator of   .
  (1       )     n(0, 1). but researchers sometimes
and we already know that
want to phrase their results in terms of the odds of success,   /(1       ), or the log odds,
log(  /(1       )). we could use     n/(1         n) to estimate the odds of success, but how would
we know its accuracy; what do we know about its distribution? the   -method gives the
answer, at least approximately for large n.

   
n(    n       )/

let g(x) = x/(1     x). then g(cid:48)(  ) = (1       )   2. therefore,

   

n

or equivalently,

(cid:35)

   

(cid:34) g(    n)     g(  )
(cid:34)

  (1       )g(cid:48)(  )

   

   
n

=

    n
1       n

      
1     

   
  (1       )(1       )   2

                           

(cid:35)

(cid:32)

                                n(0, 1),
(cid:33)

n

    n
1         n

      
1       

    n

0,

  1/2

(1       )3/2

.

8.4. asymptotics

446

8.4.3 the asymptotic behavior of estimators
suppose that x1, x2, . . . is an i.i.d. sequence of draws from a distribution p(x|   ) and we
are trying to estimate   . from x1, . . . , xn we construct an estimate   n. (we use the notation
  n rather than     n so as not to imply that   n is the m.l.e.) in most cases, we would choose a
consistent estimator:   n        in id203. typically, the central limit theorem would
also apply:
since the sequence   n is consistent, then for any d     0, pr[|  n       | > d]     0. in the
   
n,
central limit theorem, we multiply the sequences of di   erences by the sequence
n(  n       n) doesn   t go to 0, doesn   t go to in   nity, but
which magni   es it just enough so
goes to a distribution, in this case n(0,   ). but more general behavior is possible. suppose
there is a sequence of constants, c1, . . . and a cdf g such that for all x,

   
n(  n       n)     n(0,   ) in distribution.

   

pr[cn(  n       )     x]     g(x).

   

the sequence of constants tells us the rate of convergence. we say the errors (  n       )
   
converge to zero at the rate 1/cn. for example, in cases where the central limit theorem
applies, (  n      )     0 in distribution at the rate of 1/
   
n. the   -method is another example.
n(g(  n)     g(  ))     n(0,   g(cid:48)(  )), so the errors (g(  n)     g(  ))     0 at the
when it applies,
rate of 1/

when there are competing estimators, say   n and   (cid:48)
n, we might want to choose the one
   
whose errors converge to zero at a faster rate. but the situation can be more subtle than
n       )     n(0,   (cid:48)). in that case,
n(  (cid:48)
that. it might be that
the two estimators converge at the same rate and we might want to know which has the
smaller asymptotic sd.

n(  n       )     n(0,   ) while

   

n.

this section of the book is about rates of convergence and comparison of asymptotic
sd   s. it will guide us in choosing estimators. of course, with any    nite data set, rates
do not tell the whole story and can be only a guide. a more advanced treatment of these
topics can be found in many texts on mathematical statistics. lehmann [1983] is a good
example.

first, we have to see whether the concept of rate is well-de   ned. the following theo-

rem gives that assurance under some mild conditions.
theorem 8.9. suppose that for two sequences of constants, cn and c(cid:48)
and c(cid:48)
(pg. 347), there exists a constant k such that (a) c(cid:48)
x.

n, cn(  n       )     g
n(  n       )     g(cid:48) in distribution. then, under conditions given in lehmann [1983]
n/cn     k and (b) g(cid:48)(x) = g(x/k) for all

the proof is beyond our scope but can be found in lehmann. theorem 8.9 says that if
two sequences of constants lead to convergence then (a) the sequences themselves di   er

8.4. asymptotics

447

now let   s look at an illustration of two estimators   n and   (cid:48)

is the n(0, 1) cdf:   (x) =(cid:82) x

asymptotically by only a scale factor and (b), the corresponding limits di   er by only that
same scale factor.
   
n that both converge at
n. the illustration comes from example 2.1 in chapter 5 of lehmann.
the rate of 1/
suppose x1, x2, . . . are a sample from an unknown distribution f. we want to estimate
   = f(a) = pr[xi     a]. if we think that f is approximately n(  ,   ), and if we know or can
estimate   , then we might take   xn as an estimator of    and   n =   ((a      xn)/  ), where   (x)
2 u2 du. but if we don   t know that f is approximately
normal, then we might instead use the estimator   (cid:48)
but what if f is normal; how can we compare   n to   (cid:48)
   
compare their asymptotic standard deviations.
n

if f is not normal, then   n is likely to be a bad estimator; it won   t even be consistent.
n? since both are consistent, we

(cid:17)     n(0, 1). then, since   n is a known

first, the central limit theorem says

       1   

e    1

2  

transformation of   xn, we can get its asymptotic distribution by theorem 8.7:

n = n   1(# of xi     a).
(cid:16)   xn     
(cid:17)
(cid:16) a     
(cid:17)       
(cid:17) 1
(cid:16) a     

  

  

  

   

n

(cid:16) a      xn

  

    

where    =   (cid:48) is the standard normal pdf. equivalently,

  

  

(cid:18)

   
n (  n       )     n

0,   

    n(0, 1)
(cid:19)(cid:19)

(cid:18)a       

.

  

(8.4)

on the other hand,   (cid:48)
(# of xi     a). then yn     bin(n,   ). the central limit theorem says

n is a transformed version of a binomial random variable. let yn =

   
n

yn

n       
   
  (1       )
(cid:16)

   
n       )     n
(cid:48)
n(  

    n(0, 1)
(cid:17)
(cid:112)
  (1       )

0,

or, equivalently,

(cid:16) a     

(cid:17)

.

(8.5)

  

against

since there is a 1-to-1 correspondence between values of    and values of a     
   
   , we can
  (1       ). figure 8.6 shows the plot. the top panel, a plot of the
plot   
asymptotic sd of   n as a function of the asymptotic sd of   (cid:48)
n, shows that   n has the smaller
sd. the bottom panel, a plot of the ratio of the sd   s, shows that the advantage of   n over
  (cid:48)
n grows as    goes to either 0 or 1. therefore, we would normally prefer   n, especially for
extreme values of a, at least when f is normal and the sample size is large enough that
the asymptotics are reliable.

8.4. asymptotics

448

n for pr[x     a]. the
figure 8.6: top panel: asymptotic standard deviations of   n and   (cid:48)
solid line shows the actual relationship. the dotted line is the line of equality. bottom
panel: the ratio of asymptotic standard deviations.

0.10.20.30.40.50.00.10.20.30.4qq((1--qq))ff((a--mmss))equal sd'sactual sd's0.10.20.30.40.50.10.30.50.7qq((1--qq))sd ratioratio of sd's8.4. asymptotics

449

when there are competing estimators, there may be one or more that have faster rate,
or smaller asymptotic sd, than the others. if so, those estimators would be the best. our
next task is to show that under some mild regularity conditions there is, in fact, a lower
bound on the asymptotic sd,    nd what that bound is, and show that the sequence     n of
m.l.e.   s achieves that lower bound. thus the sequence of m.l.e.   s is, in this sense, a good
sequence of estimators. there may be other estimators that achieve the same bound, but
no sequence can do better. the main theorem is the following, which we state without
proof.
theorem 8.10. under suitable regularity conditions concerning continuity, di   erentia-
bility, support of the parametric family, and interchanging the order of di   erentiation
   
and integration (see lehmann, pg. 406.), if   n is a sequence of estimators satisfying
n(  n       )     n(0, sd(  )) in distribution, then sd(  )     i(  )   1/2, except possibly for a
set of      s of lebesgue measure 0.

theorem 8.10 shows the sense in which fisher information quanti   es the ability to
estimate a parameter, at least in large samples. theorem 8.10 provides only a bound.
it is quite typical that there are sequences of estimators that achieve the bound. such
estimators are called asymptotically e   cient. our next task is to show that under suitable
conditions, the sequence     n of m.l.e.   s is asymptotically e   cient. the material here follows
the development in chapter 6, section 2 of lehmann.
suppose that x1, . . . is an i.i.d. sequence from f (x|   0) and that f (x|   0) is a member of
a parametric family f (x|   ) that satis   es suitable regularity conditions. (we will not men-
tion the conditions further. a precise statement can be found in lehmann and elsewhere.)
theorem 8.11. for any    (cid:44)   0,

                      n(cid:89)

i=1

pr

n(cid:89)

i=1

f (x|   )

                          1 as n        .
n(cid:88)

f (x|   0) >
n(cid:89)

n(cid:89)

proof.

the law of large numbers says that the right-hand side goes to e(cid:104)

f (x|   )        n   1

f (x|   0) >

log

i=1

i=1

i=1

f (x|   0)
f (x|   ) > 0.

theorem 8.2 and the exercises say is positive.

(cid:105)

, which
(cid:3)

log f (x|   0)
f (x|   )

theorem 8.11 says that for any    xed   , (cid:96)(  0) > (cid:96)(  ) with high id203. it does
not say that argmax (cid:96)(  ) =   0 with high id203. in fact, argmax (cid:96)(  )          is a random
variable with a continuous distribution, so pr[argmax (cid:96)(  ) =   0] = 0.

8.4. asymptotics

450

theorem 8.12. the sequence of maximum likelihood estimators,     n, is consistent; i.e.
    n       0 in id203.
proof. choose   > 0, let (cid:126)xn = x1, . . . , xn, and let

s n =(cid:8)(cid:126)xn : p((cid:126)xn |   0)     p((cid:126)xn |   0      ) and p((cid:126)xn |   0)     p((cid:126)xn |   0 +  )(cid:9) .

for any (cid:126)x     s n, the likelihood function p((cid:126)xn |   ) has a local maximum in [  0      ,   0 +  ].
and by theorem 8.11, pr[s n]     1. therefore pr[|    n       0| <  ]     1.
(cid:3)
theorem 8.13. if there exists a number c and a function m(x) such that

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) d3
d  3 log p(x|   )
(cid:17)     n
(cid:16)    n       

(cid:32)

0,

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)     m(x)
(cid:33)

1   
i(  0)

   
n

for all x and for all        (  0   c,   0 +c), then the sequence of maximum likelihood estimators,
    n, is asymptotically e   cient; i.e.

proof. let g(  ) be the derivative of the log-likelihood function:

g(  ) =

log p((cid:126)xn |   ) =

d
d  

in distribution.

(cid:88) p(cid:48)(xi |   )

p(xi |   ) .

we want to examine g(    n); we know g(    n) is close to g(    0), so expand in a taylor   s series.

g(    n) = g(  0) + (    n       0)g(cid:48)(  0) +

(    n       0)2g(2)(  

   )

1
2

for some           [    n,   0]. by assumption, the left-hand side is zero. rearrange terms to get

or

   
n(    n       0) =

(    n       0) =    

g(cid:48)(  0) + 1

g(  0)
2(    n       0)g(2)(     )
1   
ng(  0)
    1
ng(cid:48)(  0)     1
2n(    n       0)g(2)(     )

now we   re going to analyze the numerator and the two terms in the denominator sepa-
rately, then use slutsky   s theorem (thm 8.7).

8.5. exercises

451
1. g(  0) is the sum of terms like p(cid:48)(xi |   )/p(xi |   ). because xi is a random variable,
each term is a random variable. because the xi   s are i.i.d., the terms are i.i.d. the
expected value of each term is

(cid:35)

(cid:34) p(cid:48)(xi |   )

p(xi |   )

e

=

(cid:90) d

(cid:90)

p(xi |   ) d   =

d
d  

d  

p(xi |   ) d   = 0.

the central limit theorem applies so, by the de   nition of i(  ), 1   
in id203.

ng(  0)     n(0,

2. g(cid:48)(  0) is also the sum of i.i.d.summands. speci   cally,

(cid:88) p(2)(xi |   )
p(xi |   )2     [p(cid:48)(xi |   )]2
p(xi |   )2 .

g(cid:48)(  ) =

1
n

1
n

   

i(  ))

the expectation of the    rst term is 0; the expectation of the second is i(  ). therefore
ng(cid:48)(  )        i(  ) by the law of large numbers.
1

3. by assumption of the theorem, g(2)(     )     m(x) for all      s in an interval around   0.

and             0 in id203, so 1

2n(    n       0)g(2)(     )     0 in id203.

now slutsky   s theorem gives the desired result.

(cid:3)

the condition of theorem 8.13 may seem awkward, but it is often easy to check. the

following corollary is an example.
corollary 8.14. if {p(x|   )} is a one-dimensional exponential family, then     n is asymptoti-
cally e   cient.
proof. if {p(x|   )} is a one-dimensional exponential family, then

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) d3

d  3 log p(x|   )

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) =

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12) d3

d  3 log h(x) + log c(  ) + w(  )t(x)

(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)(cid:12)

which satis   es the conditions of the theorem, at least when c, w, and t are continuous
(cid:3)
functions.

8.5 exercises

1. let y1, . . . , yn be a sample from n(  ,   ).

8.5. exercises

452

(a) suppose    is unknown but    is known. find a one dimensional su   cient

statistic for   .

(b) suppose    is known but    is unknown. find a one dimensional su   cient

statistic for   .

(c) suppose    and    are both unknown. find a two dimensional su   cient statistic

for (  ,   ).

2. let y1, . . . , yn be a sample from be(  ,   ). find a two dimensional su   cient statistic

for (  ,   ).

3. let y1, . . . , yn     i.i.d. u(     ,   ). find a low dimensional su   cient statistic for   .
4. let y1, . . . yn     i.i.d. u(0,   ).

(a) find the m.l.e.     .
(b) find the distribution of     .
(c) find e[    ].
(d) find var[    ].
(e) find mse(    ).
(f) because e[   y] =   /2, we might consider whether          2   y as an estimator of   .

i. is      a function of a su   cient statistic?
ii. is      unbiased?
iii. find mse(    ). compare to mse(    ).

5. refer to exercise 26 in chapter 5. when ecologists sample the nearest pitcher plants
to, say, m points, the total number of plants found is some number m   , which is less
than or equal to m. the total region they search, say a, is the union of the circles of
radii di, centered at the si.
(a) show that (m   ,|a|) is a su   cient statistic for   . (|a| is the area of a.)
(b) if any of the circles intersect, then |a| is di   cult to    nd analytically. but |a|

can be estimated numerically by the following method.

i. construct a rectangle b that contains a.
ii. generate n (a large integer) points at random, uniformly, in b.
iii. let x be the number of generated points that lie within a.
iv. use x/n as an estimate of |a|/b and |b|x/n as an estimate of |a|.

8.5. exercises

453

the user can choose b, as long as it   s big enough to contain a. if the goal is to
estimate |a| as accurately as possible, what advice would you give the user for
choosing the size of b? should |b| be large, small, or somewhere in between?
justify your answer. hint: think about binomial distributions.

6. theorem 8.2 shows that id181s are non-negative. this exer-

cise investigates conditions under which they are zero.

(a) let f be a distribution. find the id181 from f to itself.
(b) look at the proof of theorem 8.2 to see what conditions are necessary for
i( f1, f2) to be zero. prove that if f1 and f2 di   er on any interval, then i( f1, f2) >
0.

(a) find the id181 from bern(p1) to bern(p2) and from

bern(p2) to bern(p1).

(b) find the id181 from bin(n, p1) to bin(n, p2) and from

bin(n, p2) to bin(n, p1).

(a) let x     n(  ,   ) where    is    xed. find i(  ).
(b) let x     bin(n,   ). find i(  ).
(a) let x     poi(  ). we know i(  ) =      1. but we may be interested in           log   .

7.

8.

9.

find i(     ).

(b) let x     f (x|   ). let    = h(  ). show i(  ) = ( d  

d  )2i(  ).

10. show that the following are exponential families of distributions.
identify the functions h, c, wi, and ti and    nd the natural parameters.

in each case,

(a) bin(n,   ) where n is known and    is the parameter.
(b) gam(  ,   ).
(c) be(  ,   ).

11. verify that equation 8.1 gives the correct value for the means of the following dis-

tributions.

(a) poi(  ).
(b) exp(  ).
(c) bin(n,   ).

8.5. exercises

454

12. di   erentiate equation 8.1 to show var(t(x)) = c   (2).

13. derive the two-parameter version of equation 8.1.

14. in a one-parameter exponential family, it is sometimes natural and useful to consider

the random variable t = t(x). equation 8.1 gives e[t].
(a) use the method of transformations to    nd p(t |   ). show that it is an exponential

family.

(b) find the moment generating function mt(s) of t.

15. prove that if g is a function continuous at a number c, and if {yn}     c in id203,

then {g(yn)}     c in id203.

16. prove the claims in item 1 on page 441 that xn     x0 in distribution, in id203,

and almost surely, but xn     y in distribution only.
   
n). does the sequence {xn}   

17. let xn     n(0, 1/

n=1 converge? explain why or why
not. if yes, also explain in what sense it converges     distribution, id203 or
almost sure     and    nd its limit.

18. let x1, x2,           i.i.d. n(  ,   ) and let   xn = n   1(cid:80)n

i=1 xi. does the sequence {   xn}   

n=1

converge? in what sense? to what limit? justify your answer.

   

19. let x1, x2, . . . be an i.i.d. random sample from a distribution f with mean    and sd
   and let zn =
n=1 converges
in distribution to a well-known distribution. what is the theorem and what is the
distribution?

n(   xn       )/  . a well-known theorem says that {zn}   

20. let u     u(0, 1). now de   ne the sequence of random variables x1, . . . in terms of

u by

                     1

0

xn =

if u     n   1
otherwise.

(a) what is the distribution of xn?
(b) find the limit, in distribution, of the xn   s.
(c) show that the xn   s converge to that limit in id203.
(d) show that the xn   s converge to that limit almost surely.
(e) find the sequence of numbers ex1, ex2, . . . .

8.5. exercises

455

(f) does the sequence exn converge to ex?

21. this exercise is similar to exercise 20 but with a subtle di   erence. let u     u(0, 1).
now de   ne the sequence of constants c0 = 0, c1 = 1 and, in general, cn = cn   1 + 1/n.
in de   ning the ci   s, addition is carried out modulo 1; so c2 = (1+1/2) mod 1 = 1/2,
etc. now de   ne the sequence of random variables x1, . . . in terms of u by

                     1

0

xn =

if xn     [cn   1, cn]
otherwise.

where intervals are understood to wrap around the unit interval. for example,
[c3, c4] = [5/6, 13/12] = [5/6, 1/12] is understood to be the union [5/6, 1]   [0, 1/12].
(it may help to draw a picture.)

(a) what is the distribution of xn?
(b) find the limit, in distribution, of the xn   s.
(c) find the limit, in id203, of the xn   s.
(d) show that the xn   s do not converge to that limit almost surely.

22.

(a) prove part 2 of slutsky   s theorem (8.7).
(b) prove part 3 of slutsky   s theorem (8.7).

23. let xn     bin(n,   ) and let     n = xn/n. use the   -method to    nd the asymptotic

distribution of the log-odds, log(  /(1       )).

(cid:16) a     

(cid:17)

  

   

/

  (1       ), goes to

24. in figure 8.6, show that the ratio of asymptotic sd   s,   

in   nity as    goes to 0 and also as    goes to 1.

satisfying

25. starting from theorem 8.10, show that if   n = h(  n) is a sequence of estimators

   
n(  n     h(  ))     n(0, sd(h(  ))), then sd(h(  ))     h(cid:48)(  )/

i(  ).
26. page 447 compares the asymptotic variances of two estimators,   n and   (cid:48)

n, when the

   

underlying distribution f is normal. why is normality needed?

bibliography

consumer reports, june:366   367, 1986.

t. w. anderson. an introduction to multivariate statistical analysis. john wiley, new

york, 2nd edition, 1984.

d. f. andrews and a. m. herzberg. data. springer-verlag, new york, 1985.

h. bateman. on the id203 distribution of    particles. philosophical magazine series

6, 20:704   705, 1910.

richard j. bolton and david j. hand. statistical fraud detection: a review. statistical

science, 17:235   255, 1992.

paul brodeur. annals of radiation, the cancer at slater school. the new yorker, dec. 7,

1992.

lawrence d. brown. fundamentals of statistical exponential families with applications
in statistical decision theory.
institute of mathematical statistics lecture notes   
monograph series, 9. institute of mathematical statistics, hayward, ca, 1986. isbn
0-940600-10-2.

jason c. buchan, susan c. alberts, joan b. silk, and jeanne altmann. true paternal care

in a multi-male primate society. nature, 425:179   181, 2003.

d. p. byar. the veterans administration study of chemoprophylaxis for recurrent stage
in
i bladder tumors: comparisons of placebo, pyridoxine, and topical thiotepa.
m. pavone-macaluso, p. h. smith, and f. edsmyn, editors, bladder tumors and other
topics in urological oncology, pages 363   370. plenum, new york, 1980.

george casella and roger l. berger. statistical id136. duxbury, paci   c grove, second

edition, 2002.

456

bibliography

457

lorraine denby and daryl pregibon. an example of the use of graphics in regression. the

american statistician, 41:33   38, 1987.

a. j. dobson. an introduction to statistical modelling. chapman and hall, london, 1983.

d. freedman, r. pisani, and r. purves. statistics. w. w. norton and company, new york,

4th edition, 1998.

andrew gelman, john b. carlin, hal s. stern, and donald b. rubin. bayesian data

analysis. chapman and hall, boca raton, 2nd edition, 2004.

s. geman and d. geman. stochastic relaxation, gibbs distributions, and the bayesian
restoration of images. ieee transactions on pattern analysis and machine intelligence,
6:721   741, 1984.

john hassall. the old nursery stories and rhymes. blackie and son limited, london,

1909.

w. k. hastings. monte carlo sampling methods using markov chains and their applica-

tions. biometrika, 57:97   109, 1970.

s. kullback and r. a. leibler. on information and su   ciency. annals of mathematical

statistics, 22:79   86, 1951.

solomon kullback. id205 and statistics. dover publications, inc., 1968.

shannon ladeau and james clark. rising co2 levels and the fecundity of forest trees.

science, 292(5514):95   98, 2001.

michael lavine. what is bayesian statistics and why everything else is wrong. the journal

of undergraduate mathematics and its applications, 20:165   174, 1999.

michael lavine, brian beckage, and james s. clark. statistical modelling of seedling
mortality. journal of agricultural, biological and environmental statistics, 7:21   41,
2002.

e. l. lehmann. theory of point estimation. john wiley, new york, 1983.

jun s. liu. monte carlo strategies in scienti   c computing. springer-verlag, new york,

2004.

jean-michel marin and christian p. robert. bayesian core: a practical approach to

computational bayesian statistics. springer-verlag, new york, 2007.

bibliography

458

n. metropolis, a. w. rosenbluth, m. n. rosenbluth, a. h. teller, and e. teller. equation
of state calculations by fast computing machines. journal of chemical physics, 21:
1087   1092, 1953.

r development core team. r: a language and environment for statistical computing.
r foundation for statistical computing, vienna, austria, 2006. url http://www.
r-project.org. isbn 3-900051-07-0.

christian p. robert and george casella. monte carlo statistical methods. springer-verlag,

new york, 1997.

e. rutherford and h. geiger. the id203 variations in the distribution of    particles.

philosophical magazine series 6, 20:698   704, 1910.

mark j. schervish. theory of statistics. springer-verlag, new york, 1995.

robert j. ser   ing. approximation theorems of mathematical statistics. john wiley, new

york, 1980.

t.s. tsou and r.m. royall. robust likelihoods. journal of the american statistical asso-

ciation, 90:316   320, 1995.

jessica utts. replication and meta-analysis in parapsychology. statistical science, 4:

363   403, 1991.

w. n. venables and b. d. ripley. modern applied statistics with s. springer, new york,

fourth edition, 2002.

l. j. wei, d. y. lin, and l. weissfeld. regression analysis of multivariate incomplete
failure time data by modeling marginal distributions. journal of the american statistical
association, 84:1065   1073, 1989.

sanford weisberg. applied id75. john wiley & sons, new york, second

edition, 1985.

a.s. yang. seasonality, division of labor, and dynamics of colony-level nutrient storage

in the ant pheidole morrisi. insectes sociaux, 53:456   452, 2006.

index

   particle, 293

autocorrelation, 393
autoregression, 399

bandwidth, 107
bias, 419

case, 215
cdf, see cumulative distribution function
central limit theorem, 79
change of variables, 12
characteristic functions, 273
chebychev   s inequality, 78
chi-squared distribution, 310
consistency, 418
convergence

almost surely, 434
in distribution, 434
in id203, 434

coplots, 127
correlation, 52
covariance, 50
covariance matrix, 265
covariate, 215
cross tabulation, 117
cumulative distribution function, 269
cumulative hazard function, 410

dasl, see data and story library, see

data and story library, 203

data and story library, 105, 141
density

id203, 263

density estimation, 106
dependence, 53
distribution, 2
distributions

bernoulli, 278
beta, 310
binomial, 14, 277
cauchy, 333
exponential, 20
gamma, 303
inverse gamma, 341
multinomial, 287
negative binomial, 282
normal, 22, 313
poisson, 17, 289
standard multivariate normal, 318
standard normal, 29
uniform, 302

errors, 218
estimate, 153
expected value, 32
explanatory variable, 215

459

index

   tted values, 223, 247
   tting, 223
   oor, 419
formula, 224

gamma function, 303
gaussian density, 313
generalized moment, 39
genotype, 287

half-life, 307
histogram, 105

independence, 53

joint, 264
mutual, 264

indicator function, 55
indicator variable, 55
information

fisher, 425

jacobian, 266

kaplan-meier estimate, 409

laplace transform, 272
law of large numbers, 78
likelihood function, 133
likelihood set, 155
linear model, 218
linear predictor, 239
location parameter, 317
id28, 239
logit, 239

marginal likelihood, 140
id115, 344
maximum likelihood estimate, 153
mean, 32
mean squared error, 420
median, 96

460

mediterranean tongue, 30
mgf, see moment generating function
minimal su   cient, 418
moment, 39
moment generating function, 272
mosaic plot, 117
multinomial coe   cient, 288
multivariate

change of variables, 266

order statistic, 97, 418
outer product, 322

parameter, 14, 133, 277
parametric family, 14, 133, 277
partial autocorrelation, 399
pdf, see id203 density, see probabil-

ity density

physics, 8
poisson process, 309
predicted values, 247
id203

continuous, 1, 7
density, 7
discrete, 1, 6

proportional hazards model, 410

qq plots, 112
quantile, 96

r commands

!, 58
==, 4
[[]], see subscript
[], see subscript
#, 4
%*%, 347
%o%, 322
  , 224
abline, 147

index

461

acf, 393
apply, 62
ar, 399
array, 66
arrows, 37
as.factor, 244
assignment, 4, 6
+<-+,4
boxplot, 60, 111
c, 9
cbind, 75
contour, 147
coplot, 127
cor, 53
cov, 52
crossprod, 347
cumsum, 429
data.frame, 244
dbinom, 17, 280
density, 12
dexp, 22
di   , 315, 402
dim, 72
dimnames, 300
dmultinom, 289
dnbinom, 285
dnorm, 23
dpois, 20
expression, 135
   lter, 400
   tted, 249
for, 5
glm, 243
hist, 12
if, 6
is.na, 147
legend, 22
length, 73

lines, 12
list, 130
lm, 224
log10, 151
lowess, 207
matplot, 22
matrix, 22, 60
mean, 12
median, 96
mosaicplot, 117
names, 72
pacf, 399
pairs, 50
par, 10
paste, 22
pbinom, 280
plot, 9, 20
plot.ecdf, 99
plot.ts, 393
pnbinom, 285
print, 5
qbinom, 280
qnbinom, 285
qqnorm, 114
quantile, 97
rbinom, 39, 280
read.table, 72
rep, 5, 6
rmultinom, 289
rnbinom, 285
rnorm, 26
round, 429
sample, 3
scan, 130
segments, 270
seq, 20
solve, 347
sqrt, 429

462

regressor, 215
residual, 207
residual plots, 230
response variable, 215

sampling distribution, 158
scale parameter, 317
scatterplot smoothers, 204
standard deviation, 34
standard error, 162
standard normal distribution, 317
standard units, 26
stationary distribution, 355
statlib, 71
strong law of large numbers, 78
su   cient statistic, 415

trace plot, 359

variance, 34

weak law of large numbers, 78

index

stripchart, 109
subscript, 72, 73
sum, 4, 5
supsmu, 207
surv, 409
surv   t, 409
t, 347
tapply, 75
text, 39
unique, 105
var, 12
while, 58
xyplot, 379

r data sets

airquality, 201
attenu, 201
beaver1, 393, 395
co2, 63, 393
discoveries, 10
eustockmarkets, 393
faithful, 121, 201
iris, 50
ldeaths, 393
lynx, 393
mtcars, 201, 228, 247
plantgrowth, 213
presidents, 393, 395
seatbelts, 393
sunspot.month, 393
tooth growth, 101, 183
ucbadmissions, 114

r datasets

orthodont, 378

r packages

lattice, 379
nlme, 378

random vector, 263
regression function, 207

index of examples

1970 draft lottery, 204

baboons, 187
bladder cancer, 359

ceo salary, 141
craps, 2, 3, 15, 49, 58, 59, 157

face, 64, 144, 236

hot dogs, 105, 210, 216, 225

ice cream consumption, 220

neurobiology, 127, 298

o-rings, 236
ocean temperatures, 29, 316

quiz scores, 109, 148

rutherford and geiger, 296

seedlings, 18, 43, 49, 56, 136, 148, 167,

208, 245

slater school, 136, 140, 193

463

