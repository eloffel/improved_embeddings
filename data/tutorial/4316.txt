introduction to python

luis pedro coelho

european molecular biology laboratory

lisbon machine learning school 2013

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(1 / 70)

python language history

python was started in the late 80   s.
it was intended to be both easy to teach and industrial strength.
it is (has always been) open-source.
it has become one of the most widely used languages (top 10).

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(2 / 70)

python versions

python versions

there are two major versions, currently: 2.7 and 3.3.
we are going to be using 2.7 (but 2.6 should be ok too).

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(3 / 70)

python example

print     hello world   

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(4 / 70)

task

compute the average of the following numbers:

average

...1 10
...2 7
...3 22
...4 14
...5 17

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(5 / 70)

python example

numbers = [ 10 , 7 , 22 , 14 , 17 ]

sum = 0 . 0
n = 0 . 0
f o r val

in numbers :
sum = sum + val
n = n + 1
return sum / n

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(6 / 70)

   python is executable pseudo-code.   
   python lore (often attributed to bruce eckel)

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(7 / 70)

programming basics

numbers = [ 10 , 7 , 22 , 14 , 17 ]

sum = 0 . 0
n = 0 . 0
f o r val

in numbers :
sum = sum + val
n = n + 1
return sum / n

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(8 / 70)

python types

basic types

numbers (integers and    oating point)
strings
lists and tuples
dictionaries

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(9 / 70)

python types: numbers i: integers

a = 1
b = 2
c = 3
print a + b*c
outputs 7.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(10 / 70)

python types: numbers ii: floats

a = 1 . 2
b = 2 . 4
c = 3 . 6
print a + b*c
outputs 9.84.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(11 / 70)

python types: numbers iii: integers & floats

a = 2
b = 2 . 5
c = 4 . 4
print a + b*c
outputs 22.0.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(12 / 70)

composite assignment

t o t a l = t o t a l + n
can be abbreviated as
t o t a l += n

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(13 / 70)

python types: strings

f i r s t =     john    
l a s t =    doe   
f u l l = f i r s t +         + l a s t

print

f u l l

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(14 / 70)

python types: strings

f i r s t =     john    
l a s t =    doe   
f u l l = f i r s t +         + l a s t

f u l l

print
outputs john doe.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(14 / 70)

python types: string rules

what is a string literal

short string literals are delimited by (   ) or (   ).
short string literals are one line only.
special characters are input using escape sequences.
(nn for newline,   )

multiple =    he : may i ?\nshe : no, you may not .    
a l t e r n a t i v e =    he : may i ?\nshe : no, you may not .    

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(15 / 70)

python types: long strings

we can input a long string using triple quotes (       or          ) as delimiters.
love
long =             tell me,
s t i l l a popular
suggestion
or merely an o b s o l e t e art ?

i s

forgive me,
this
i am unfamiliar with h i s heart .            

simple question ,

f o r asking ,

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(16 / 70)

python types: lists

courses = [     pfs     ,     p o l i t i c a l philosophy     ]

f i r s t

print    the the
print    the second course
notice that list indices start at 0!

course

i s     , courses [ 0 ]

i s     , courses [ 1 ]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(17 / 70)

python types: lists

mixed = [     banana     , 100 , [     another     ,     l i s t     ] , [ ] ]
print

len ( mixed )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(18 / 70)

python types: lists

f r u i t s = [     banana     ,     apple     ,     orange     ]
f r u i t s . s o r t ( )
print
f r u i t s
prints [   apple   ,    banana   ,    orange   ]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(19 / 70)

python types: dictionaries

emails = {     luis    
   mark    

:
:
print     luis     s email

    lpc@cmu . edu     ,
   mark@cmu . edu     }
i s     , emails [     luis     ]

emails [     rita     ] =     rita@cmu . edu    

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(20 / 70)

python control structures

student =     rita    
average = gradeavg ( student )
i f average > 0 . 7 :
student ,
    passed !    
    congratulations ! !    

print
print

e l s e :

print

student ,

    f a i l e d . sorry .    

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(21 / 70)

python blocks

unlike almost all other modern programming languages,
python uses indentation to delimit blocks!
i f <condition>:
statement 1
statement 2
statement 3
statement

next

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(22 / 70)

convention
...1 use 4 spaces to indent.
...2 other things will work, but confuse people.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(23 / 70)

conditionals

examples
x == y
x != y
x < y
x < y < z
x in lst
x not in lst

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(24 / 70)

nested blocks

i f <condition 1>:
do something
i f

condition 2>:
nested block

e l s e :

nested e l s e block

e l i f <condition 1b>:

do something

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(25 / 70)

for loop

students = [     luis     ,     rita     ,     sabah     ,    mark     ]
f o r

in students :

st
print

st

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(26 / 70)

while loop

while <condition>:

statement1
statement2

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(27 / 70)

other loopy stu   

f o r

in range ( 5 ) :

i
print

i

prints

0
1
2
3
4

this is because range(5) is the list [0,1,2,3,4].

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(28 / 70)

break

r i t a _ e n r o l l e d = false
f o r

st
i f

in students :
st ==     rita     :
r i t a _ e n r o l l e d = true
break

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(29 / 70)

conditions & booleans

booleans

just two values: true and false.
comparisons return booleans (e.g., x < 2)

conditions

when evaluating a condition, the condition is converted to a
boolean:
many things are converted to false:

[] (the empty list)

...1
...2 fg (the empty dictionary)
...3        (the empty string)
...4 0 or 0.0 (the value zero)
...5    

everything else is true or not convertible to boolean.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(30 / 70)

conditions example

a = [ ]
b = [ 1 , 2 ]
c = 2
d = 0

i f a:

i f b:

i f c:

i f d:

print

print

print

print

   a i s

true    

   b i s

true    

   c i s

true    

   d i s

true    

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(31 / 70)

numbers

two types of numbers
...1
...2 floating-point

integers

operations
...1 unary minus:
-x
...2 addition: x + y
...3 subtraction: x - y
...4 multiplication: x * y
...5 exponentiation: x ** y

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(32 / 70)

division

division

what is 9 divided by 3?
what is 10 divided by 3?

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(33 / 70)

division

division

what is 9 divided by 3?
what is 10 divided by 3?

two types of division
...1
...2 floating-point division: x /    oat(y)

integer division: x // y

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(33 / 70)

functions

def double ( x) :

           
y = double ( x)

the double of x

returns
           
return 2*x

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(34 / 70)

functions

a=4
print double (a)
print double ( 2 . 3 )
print double ( double (a) )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(35 / 70)

numeric python: numpy

numpy

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(36 / 70)

basic type

numpy.array or numpy.ndarray.

multi-dimensional array of numbers.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(37 / 70)

numpy example

import numpy as np
a = np . array ( [

[ 0 , 1 , 2 ] ,
[ 2 , 3 , 4 ] ,
[ 4 , 5 , 6 ] ,
[ 6 , 7 , 8 ] ] )
print a[ 0 , 0 ]
print a[ 0 , 1 ]
print a[ 1 , 0 ]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(38 / 70)

numpy example

import numpy as np
a = np . array ( [

[ 0 , 1 , 2 ] ,
[ 2 , 3 , 4 ] ,
[ 4 , 5 , 6 ] ,
[ 6 , 7 , 8 ] ] )
print a[ 0 , 0 ]
print a[ 0 , 1 ]
print a[ 1 , 0 ]

0
1
2

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(38 / 70)

why numpy?

why do we need numpy?
import numpy as np
l s t = [ 0 . , 1 . , 2 . , 3 . ]
arr = np . array ( [ 0 . , 1 . , 2 . , 3 . ] )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(39 / 70)

a python list of numbers

..
.
.
.
.
.
.
.

   oat

   oat

   oat

   oat

0.0

1.0

2.0

3.0

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(40 / 70)

a numpy array of numbers

0.0

1.0

2.0

3.0

   oat

..
.
.
.
.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(41 / 70)

numpy arrays

advantages

less memory consumption
faster
work with (or write) code in other languages (c, c++, fortran   )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(42 / 70)

matrix-vector multiplication

a = np . array ( [

[ 1 , 0 , 0 ] ,
[ 0 , 1 , 0 ] ,
[ 0 , 0 , 1 ] ] )

v = np . array ( [ 1 , 5 , 2 ] )

print np . dot (a, v )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(43 / 70)

matrix-vector multiplication

a = np . array ( [

[ 1 , 0 , 0 ] ,
[ 0 , 1 , 0 ] ,
[ 0 , 0 , 1 ] ] )

v = np . array ( [ 1 , 5 , 2 ] )

print np . dot (a, v )

[1 5 2]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(43 / 70)

matrix-matrix and dot products

(

)(

)

(

=

0 1
1 0

1

1(cid:0)1 1

)

1
1
1 (cid:0)1

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(44 / 70)

matrix-matrix and dot products

(

1 2

)

(

) (cid:1)

3(cid:0)1

= 1 (cid:1) 3 + ((cid:0)1) (cid:1) 2 = 1:

this is a vector inner product (aka dot product)
<    x;    y >=    x (cid:1)    y =    xt   y:

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(45 / 70)

v0 = np . array ( [ 1 , 2 ] )
v1 = np . array ( [ 3 , - 1 ] )

r = 0 . 0
f o r

print

r

i
in xrange ( 2 ) :
r += v0 [ i ] *v1 [ i ]

print np . dot ( v0 , v1 )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(46 / 70)

a0 = np . array ( [ [ 1 , 2 ] ,
a1 = np . array ( [ [ 0 , 1 ] ,

print np . dot (a0, a1) (

[ 2 , 3 ] ] )
[ 1 , 0 ] ] )

)(

)

0 1
1 0

0 2
2 3

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(47 / 70)

some array properties

import numpy as np
a = np . array ( [

[ 0 , 1 , 2 ] ,
[ 2 , 3 , 4 ] ,
[ 4 , 5 , 6 ] ,
[ 6 , 7 , 8 ] ] )
print a. shape
print a. s i z e

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(48 / 70)

some array functions

. . .
print a. max( )
print a. min( )

max(): maximum
min(): minimum
ptp(): spread (max - min)
sum(): sum
std(): standard deviation
   

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(49 / 70)

other functions

np.exp
np.sin
   

all of these work element-wise!

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(50 / 70)

arithmetic operations

import numpy as np
a = np . array ( [ 0 , 1 , 2 , 3 ] )
b = np . array ( [ 1 , 1 , 2 , 2 ] )

print a + b
print a * b
print a / b

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(51 / 70)

arithmetic operations

import numpy as np
a = np . array ( [ 0 , 1 , 2 , 3 ] )
b = np . array ( [ 1 , 1 , 2 , 2 ] )

print a + b
print a * b
print a / b

[1 2 4 5]
[0 1 4 6]
[0 1 1 1]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(51 / 70)

numpy dtypes

all members of an array have the same type
either integer or    oating point
de   ned when you    rst create the array

a = np . array ( [ 0 , 1 , 2 ] )
b = np . array ( [ 0 . 5 , 1 . 1 , 2 . 1 ] )

a *= 2 . 5
b *= 2 . 5

print a
print b

[0 2 5]
[ 1.25 2.75 5.25]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(52 / 70)

a = np . array ( [ 0 , 1 , 2 ] , dtype=np . int16 )
b = np . array ( [ 0 , 1 , 2 ] , dtype=np . f l o a t 3 2 )

np.int8, np.int16, np.int32
np.uint8, np.uint16, np.uint32
np.   oat32, np.   oat64
np.bool

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(53 / 70)

object construction

import numpy as np
a = np . array ( [ 0 , 1 , 1 ] ,np . f l o a t 3 2 )
a = np . array ( [ 0 , 1 , 1 ] , f l o a t )
a = np . array ( [ 0 , 1 , 1 ] , bool )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(54 / 70)

reduction

a = np . array ( [

[ 0 , 0 , 1 ] ,
[ 1 , 2 , 3 ] ,
[ 2 , 4 , 2 ] ,
[ 1 , 0 , 1 ] ] )
print a. max( 0 )
print a. max( 1 )
print a. max( )
prints
[2,4,3]
[1,3,4,1]
4
the same is true for many other functions.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(55 / 70)

slicing

import numpy as np
a = np . array ( [

[ 0 , 1 , 2 ] ,
[ 2 , 3 , 4 ] ,
[ 4 , 5 , 6 ] ,
[ 6 , 7 , 8 ] ] )

print a[ 0 ]
print a[ 0 ] . shape
print a[ 1 ]
print a[ : , 2 ]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(56 / 70)

slicing

import numpy as np
a = np . array ( [

[ 0 , 1 , 2 ] ,
[ 2 , 3 , 4 ] ,
[ 4 , 5 , 6 ] ,
[ 6 , 7 , 8 ] ] )

print a[ 0 ]
print a[ 0 ] . shape
print a[ 1 ]
print a[ : , 2 ]

[0, 1, 2]
(3,)
[2, 3, 4]
[2, 4, 6, 8]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(56 / 70)

slices share memory!

import numpy as np
a = np . array ( [

[ 0 , 1 , 2 ] ,
[ 2 , 3 , 4 ] ,
[ 4 , 5 , 6 ] ,
[ 6 , 7 , 8 ] ] )

b = a[ 0 ]
b[ 0 ] = - 1
print a[ 0 , 0 ]

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(57 / 70)

pass is by reference

def double (a) :

a *= 2

a = np . arange ( 20 )
double (a)

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(58 / 70)

pass is by reference

def double (a) :

a *= 2

a = np . arange ( 20 )
double (a)

a = np . arange ( 20 )
b = a. copy ( )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(58 / 70)

logical arrays

a = np . array ( [ - 1 , 0 , 1 , 2 , - 2 , 3 , 4 , - 2 ] )
print

(a > 0 )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(59 / 70)

logical arrays ii

a = np . array ( [ - 1 , 0 , 1 , 2 , - 2 , 3 , 4 , - 2 ] )
print
) . mean( )
what does this do?

(a > 0 ) & (a < 3 )

(

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(60 / 70)

logical indexing

a[a < 0 ] = 0
or
a *= (a > 0 )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(61 / 70)

logical indexing

print

   mean of p o s i t i v e s     , a[a > 0 ] . mean( )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(62 / 70)

some helper functions

constructing arrays

a = np . zeros ( ( 10 , 10 ) , dtype=np . int8 )
b = np . ones ( 10 )
c = np . arange ( 100 ) . reshape ( ( 10 , 10 ) )
. . .

multiple dimensions

img = np . zeros ( ( 1024 , 1024 , 3 ) , dype=np . uint8 )

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(63 / 70)

documentation

http://docs.scipy.org/doc/

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(64 / 70)

last section

matplotlib & spyder

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(65 / 70)

matplotlib

matplotlib is a plotting library.
very    exible.
very active project.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(66 / 70)

example i

import numpy as np
import matplotlib . pyplot as p l t
x = np . l i n s p a c e ( - 4 , 4 , 1000 )
p l t . plot (x, x**2*np . cos (x**2 ) )
p l t . s a v e f i g (     simple . pdf     )

y = x2 cos

)

(

x2

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(67 / 70)

example i

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(68 / 70)

4321012342015105051015resources

numpy+scipy docs: http://docs.scipy.org
matplotlib: http://matplotlib.sf.net
python docs: http://docs.python.org

these slides are available at http://luispedro.org/talks/2013
i   m available at luis@luispedro.org

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(69 / 70)

thank you.

luis pedro coelho (embl)

   

introduction to python

   

#lxmls

(70 / 70)

