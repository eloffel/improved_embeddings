   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    getting started with audio data analysis using
   deep learning (with case study) comments feed [4]alternate [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]deep learning [94]getting started with audio data analysis
   using deep learning (with case study)

   [95]deep learning[96]python

getting started with audio data analysis using deep learning (with case
study)

   [97]faizan shaikh, august 24, 2017

introduction

   when you get started with data science, you start simple. you go
   through simple projects like [98]loan prediction problem or [99]big
   mart sales prediction. these problems have structured data arranged
   neatly in a tabular format. in other words, you are spoon-fed the
   hardest part in data science pipeline.

   the datasets in real life are much more complex.

   you first have to understand it, collect it from various sources and
   arrange it in a format which is ready for processing. this is even more
   difficult when the data is in an unstructured format such as image or
   audio. this is so because you would have to represent image/audio data
   in a standard way for it to be useful for analysis.


the abundance on unstructured data

   interestingly, unstructured data represents huge under-exploited
   opportunity. it is closer to how we communicate and interact as humans.
   it also contains a lot of useful & powerful information. for example,
   if a person speaks; you not only get what he / she says but also what
   were the emotions of the person from the voice.

   also the body language of the person can show you many more features
   about a person, because actions speak louder than words! so in short,
   unstructured data is complex but processing it can reap easy rewards.

   in this article, i intend to cover an overview of audio / voice
   processing with a case study so that you would get a hands-on
   introduction to solving audio processing problems.

   let   s get on with it!


table of contents

     * what do you mean by audio data?
          + applications of audio processing
     * data handling in audio domain
     * let   s solve the urbansound challenge!
     * intermission: our first submission
     * let   s solve the challenge! part 2: building better models
     * future steps to explore


what do you mean by audio data?

   directly or indirectly, you are always in contact with audio. your
   brain is continuously processing and understanding audio data and
   giving you information about the environment. a simple example can be
   your conversations with people which you do daily. this speech is
   discerned by the other person to carry on the discussions. even when
   you think you are in a quiet environment, you tend to catch much more
   subtle sounds, like the rustling of leaves or the splatter of rain.
   this is the extent of your connection with audio.

   so can you somehow catch this audio floating all around you to do
   something constructive? yes, of course! there are devices built which
   help you catch these sounds and represent it in computer readable
   format. examples of these formats are
     * wav (waveform audio file) format
     * mp3 (mpeg-1 audio layer 3) format
     * wma (windows media audio) format

   if you give a thought on what an audio looks like, it is nothing but a
   wave like format of data, where the amplitude of audio change with
   respect to time. this can be pictorial represented as follows.

applications of audio processing

   although we discussed that audio data can be useful for analysis. but
   what are the potential applications of audio processing? here i would
   list a few of them
     * indexing music collections according to their audio features.
     * recommending music for radio channels
     * similarity search for audio files (aka shazam)
     * speech processing and synthesis     generating artificial voice for
       conversational agents

   here   s an exercise for you; can you think of an application of audio
   processing that can potentially help thousands of lives?


data handling in audio domain

   as with all unstructured data formats, audio data has a couple of
   preprocessing steps which have to be followed before it is presented
   for analysis.. we will cover this in detail in later article, here we
   will get an intuition on why this is done.

   the first step is to actually load the data into a machine
   understandable format. for this, we simply take values after every
   specific time steps. for example; in a 2 second audio file, we extract
   values at half a second. this is called sampling of audio data, and the
   rate at which it is sampled is called the sampling rate.

   another way of representing audio data is by converting it into a
   different domain of data representation, namely the frequency domain.
   when we sample an audio data, we require much more data points to
   represent the whole data and also, the sampling rate should be as high
   as possible.

   on the other hand, if we represent audio data in frequency domain, much
   less computational space is required. to get an intuition, take a look
   at the image below

   [100]source

   here, we separate one audio signal into 3 different pure signals, which
   can now be represented as three unique values in frequency domain.

   there are a few more ways in which audio data can be represented, for
   example. using [101]mfcs (mel-frequency cepstrums. ps: we will cover
   this in the later article). these are nothing but different ways to
   represent the data.

   now the next step is to extract features from this audio
   representations, so that our algorithm can work on these features and
   perform the task it is designed for. here   s a visual representation of
   the categories of audio features that can be extracted.

   after extracting these features, it is then sent to the machine
   learning model for further analysis.


let   s solve the urbansound challenge!

   let us have a better practical overview in a real life project, the
   [102]urban sound challenge. this practice problem is meant to introduce
   you to audio processing in the usual classification scenario.

   the dataset contains 8732 sound excerpts (<=4s) of urban sounds from 10
   classes, namely:
     * air conditioner,
     * car horn,
     * children playing,
     * dog bark,
     * drilling,
     * engine idling,
     * gun shot,
     * jackhammer,
     * siren, and
     * street music

   here   s a sound excerpt from the dataset. can you guess which class does
   it belong to?
   [103]https://s3-ap-south-1.amazonaws.com/av-blog-media/wp-content/uploa
   ds/2017/08/23192318/temp.wav

   to play this in the jupyter notebook, you can simply follow along with
   the code.
import ipython.display as ipd
ipd.audio('../data/train/2022.wav')

   now let us load this audio in our notebook as a numpy array. for this,
   we will use [104]librosa library in python. to install librosa, just
   type this in command line
pip install librosa

   now we can run the following code to load the data
data, sampling_rate = librosa.load('../data/train/2022.wav')

   when you load the data, it gives you two objects; a numpy array of an
   audio file and the corresponding sampling rate by which it was
   extracted. now to represent this as a waveform (which it originally
   is), use the following  code
% pylab inline
import os
import pandas as pd
import librosa
import glob

plt.figure(figsize=(12, 4))
librosa.display.waveplot(data, sr=sampling_rate)

   the output comes out as follows

   let us now visually inspect our data and see if we can find patterns in
   the data
class:  jackhammer


class: drilling

class: dog_barking

   we can see that it may be difficult to differentiate between jackhammer
   and drilling, but it is still easy to discern between dog_barking and
   drilling. to see more such examples, you can use this code
i = random.choice(train.index)

audio_name = train.id[i]
path = os.path.join(data_dir, 'train', str(audio_name) + '.wav')

print('class: ', train.class[i])
x, sr = librosa.load('../data/train/' + str(train.id[i]) + '.wav')

plt.figure(figsize=(12, 4))
librosa.display.waveplot(x, sr=sr)



intermission: our first submission

   we will do a similar approach as we did for [105]age detection problem,
   to see the class distributions and just predict the max occurrence of
   all test cases as that class.

   let us see the distributions for this problem.
train.class.value_counts()
out[10]:

jackhammer 0.122907
engine_idling 0.114811
siren 0.111684
dog_bark 0.110396
air_conditioner 0.110396
children_playing 0.110396
street_music 0.110396
drilling 0.110396
car_horn 0.056302
gun_shot 0.042318

   we see that jackhammer class has more values than any other class. so
   let us create our first submission with this idea.
test = pd.read_csv('../data/test.csv')
test['class'] = 'jackhammer'
test.to_csv(   sub01.csv   , index=false)

   this seems like a good idea as a benchmark for any challenge, but for
   this problem, it seems a bit unfair. this is so because the dataset is
   not much imbalanced.


let   s solve the challenge! part 2: building better models

   now let us see how we can leverage the concepts we learned above to
   solve the problem. we will follow these steps to solve the problem.

   step 1: load audio files
   step 2: extract features from audio
   step 3: convert the data to pass it in our deep learning model
   step 4: run a deep learning model and get results

   below is a code of how i implemented these steps

step 1 and  2 combined: load audio files and extract features

def parser(row):
   # function to load files and extract features
   file_name = os.path.join(os.path.abspath(data_dir), 'train', str(row.id) + '.
wav')

   # handle exception to check if there isn't a file which is corrupted
   try:
      # here kaiser_fast is a technique used for faster extraction
      x, sample_rate = librosa.load(file_name, res_type='kaiser_fast')
      # we extract mfcc feature from data
      mfccs = np.mean(librosa.feature.mfcc(y=x, sr=sample_rate, n_mfcc=40).t,axi
s=0)
   except exception as e:
      print("error encountered while parsing file: ", file)
      return none, none

   feature = mfccs
   label = row.class

   return [feature, label]

temp = train.apply(parser, axis=1)
temp.columns = ['feature', 'label']


step 3: convert the data to pass it in our deep learning model

from sklearn.preprocessing import labelencoder

x = np.array(temp.feature.tolist())
y = np.array(temp.label.tolist())

lb = labelencoder()

y = np_utils.to_categorical(lb.fit_transform(y))

step 4: run a deep learning model and get results

import numpy as np
from keras.models import sequential
from keras.layers import dense, dropout, activation, flatten
from keras.layers import convolution2d, maxpooling2d
from keras.optimizers import adam
from keras.utils import np_utils
from sklearn import metrics

num_labels = y.shape[1]
filter_size = 2

# build model
model = sequential()

model.add(dense(256, input_shape=(40,)))
model.add(activation('relu'))
model.add(dropout(0.5))

model.add(dense(256))
model.add(activation('relu'))
model.add(dropout(0.5))

model.add(dense(num_labels))
model.add(activation('softmax'))

model.compile(loss='categorical_crossid178', metrics=['accuracy'], optimizer='
adam')

   now let us train our model
model.fit(x, y, batch_size=32, epochs=5, validation_data=(val_x, val_y))

   this is the result i got on training for 5 epochs
train on 5435 samples, validate on 1359 samples
epoch 1/10
5435/5435 [==============================] - 2s - loss: 12.0145 - acc: 0.1799 -
val_loss: 8.3553 - val_acc: 0.2958
epoch 2/10
5435/5435 [==============================] - 0s - loss: 7.6847 - acc: 0.2925 - v
al_loss: 2.1265 - val_acc: 0.5026
epoch 3/10
5435/5435 [==============================] - 0s - loss: 2.5338 - acc: 0.3553 - v
al_loss: 1.7296 - val_acc: 0.5033
epoch 4/10
5435/5435 [==============================] - 0s - loss: 1.8101 - acc: 0.4039 - v
al_loss: 1.4127 - val_acc: 0.6144
epoch 5/10
5435/5435 [==============================] - 0s - loss: 1.5522 - acc: 0.4822 - v
al_loss: 1.2489 - val_acc: 0.6637

   seems ok, but the score can be increased obviously. (ps: i could get an
   accuracy of  80% on my validation dataset). now its your turn, can you
   increase on this score? if you do, let me know in the comments below!


future steps to explore

   now that we saw a simple applications, we can ideate a few more methods
   which can help us improve our score
    1. we applied a simple neural network model to the problem. our
       immediate next step should be to understand where does the model
       fail and why. by this, we want to conceptualize our understanding
       of the failures of algorithm so that the next time we build a
       model, it does not do the same mistakes
    2. we can build more efficient models that our    better models   , such
       as convolutional neural networks or recurrent neural networks.
       these models have be proven to solve such problems with greater
       ease.
    3. we touched the concept of data augmentation, but we did not apply
       them here. you could try it to see if it works for the problem.


end notes

   in this article, i have given a brief overview of audio processing with
   an case study on urbansound challenge. i have also shown the steps you
   perform when dealing with audio data in python with librosa package.
   giving this    shastra    in your hand, i hope you could try your own
   algorithms in urban sound challenge, or try solving your own audio
   problems in daily life. if you have any suggestions/ideas, do let me
   know in the comments below!

[106]learn, [107]engage [108], hack and [109]get hired!

   [110]play play

   podcast: [111]play in new window | [112]download
   you can also read this article on analytics vidhya's android app
   [113]get it on google play

share this:

     * [114]click to share on linkedin (opens in new window)
     * [115]click to share on facebook (opens in new window)
     * [116]click to share on twitter (opens in new window)
     * [117]click to share on pocket (opens in new window)
     * [118]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [119]audio dataset, [120]audio processing, [121]datahack,
   [122]deep learning, [123]deep learning for speech processing,
   [124]librosa, [125]urban sound
   next article

solving multi-label classification problems (case studies included)

   previous article

building your first machine learning model using knime (no coding required!)

[126]faizan shaikh

   faizan is a data science enthusiast and a deep learning rookie. a
   recent comp. sc. undergrad, he aims to utilize his skills to push the
   boundaries of ai research.
     *
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [127]discussion portal to get your queries resolved

40 comments

     * kishor peddolla says:
       [128]august 24, 2017 at 12:38 pm
       hi faizan,
       it was great explanation thank you. and i am working like same
       problem but it is on the financial(bank customer) speech
       recognition problem, would you please help on this,
       thank you in advance
       regards,
       kishor peddolla
       [129]reply
          + faizan shaikh says:
            [130]august 24, 2017 at 5:06 pm
            hey kishor,
            sure! your problem seems interesting.
            i might add that id103 is more complex than audio
            classification, as it involves natural language processing
            too. can you explain what approach you followed as of now to
            solve the problem?
            also, i would suggest creating a thread on [131]discussion
            portal so that more people from the community could contribute
            to help you
            [132]reply
     * [133]karthikeyan sankaran says:
       [134]august 24, 2017 at 12:47 pm
       nice article, faizan. gives a good foundation to exploring audio
       data. keep up the good work. thanks
       regards
       karthik
       [135]reply
          + faizan shaikh says:
            [136]august 24, 2017 at 4:54 pm
            thanks karthikeyan
            [137]reply
     * kalyanaraman says:
       [138]august 24, 2017 at 12:49 pm
       thanks. this is something i had been thinking for sometime.
       [139]reply
          + faizan shaikh says:
            [140]august 24, 2017 at 4:55 pm
            thanks kalyanaraman
            [141]reply
     * manoj says:
       [142]august 24, 2017 at 5:09 pm
       nice article. i liked the introduction to python libraries for
       audio. any chance, you cover id48 for audio and
       related libraries. thank you
       [143]reply
          + faizan shaikh says:
            [144]august 26, 2017 at 12:28 pm
            thanks manoj! i   ll try to cover this in the next article
            [145]reply
     * georgios sarantitis says:
       [146]august 24, 2017 at 6:02 pm
       hello faizan and thank you for your introduction to sound
       recognition and id91! just a kind remark, i noticed that you
       have imported the convolutional and maxpooling layers which you do
       not use so i guess there   s no need for them to be there   .but i did
       say wow when i saw them     i thought you would implement a id98
       solution   
       [147]reply
     * nagu says:
       [148]august 24, 2017 at 9:33 pm
       hi faizan
       this is a very good article to get started on audio analysis. i do
       not think any other books out there could have given this type of
       explanation ! keep up the great work !!!
       [149]reply
          + faizan shaikh says:
            [150]august 26, 2017 at 12:27 pm
            thanks nagu
            [151]reply
     * krish says:
       [152]august 25, 2017 at 12:19 am
       great work! appreciate your effort in documenting this.
       [153]reply
          + faizan shaikh says:
            [154]august 26, 2017 at 12:27 pm
            thanks krish
            [155]reply
     * gowri says:
       [156]august 26, 2017 at 3:25 pm
       great work faizan! i did go through this article and i find that
       most of machine learning articles require extensive knowledge of
       dataset or domain : like speech here. how does one do that and how
       do you decide to work on such problems ? any references? i usually
       tend to follow moocs, but how to do self research and design end to
       end processes especially for machine learning?
       [157]reply
          + faizan shaikh says:
            [158]september 6, 2017 at 9:01 pm
            hi gowri,
            you are right to say that data science problems involve domain
            knowledge to solve problems, and this comes from experience in
            working on those kind of problems. when i take up a problem, i
            try to do as much research as i can and also, try to get hands
            on experience in it.
            each person has his or her own learning process. so my process
            may or may not work for you. still i would suggest a course
            that would help you
            [159]https://www.coursera.org/learn/learning-how-to-learn
            [160]reply
               o uraj singh says:
                 [161]november 13, 2017 at 12:35 pm
                 thanks for suggesting the wonderful course !!
                 [162]reply
     * darli yang says:
       [163]september 5, 2017 at 6:40 pm
       hi faizan,
       i got the following result, would you give some solutions to me:
       in [132]: model.fit(x, y, batch_size=32, epochs=5)
       traceback (most recent call last):
       file       , line 1, in
       model.fit(x, y, batch_size=32, epochs=5)
       file    c:\users\admin\anaconda2\lib\site-packages\keras\models.py   ,
       line 867, in fit
       initial_epoch=initial_epoch)
       file
          c:\users\admin\anaconda2\lib\site-packages\keras\engine\training.p
       y   , line 1522, in fit
       batch_size=batch_size)
       file
          c:\users\admin\anaconda2\lib\site-packages\keras\engine\training.p
       y   , line 1378, in _standardize_user_data
       exception_prefix=   input   )
       file
          c:\users\admin\anaconda2\lib\site-packages\keras\engine\training.p
       y   , line 144, in _standardize_input_data
       str(array.shape))
       valueerror: error when checking input: expected dense_7_input to
       have shape (none, 40) but got array with shape (5435l, 1l)
       [164]reply
          + faizan shaikh says:
            [165]november 16, 2017 at 4:46 pm
            the input which you give to the neural network is improper.
            you can answer the following questions to get the answer
            1. what is the shape of input layer?
            2. what is the shape of x?
            [166]reply
               o darli says:
                 [167]november 22, 2017 at 8:24 pm
                 i have solved this problem, thanks!
                 [168]reply
     * phani says:
       [169]september 16, 2017 at 2:29 am
       thank you for the great explanation. do you mind making the source
       code including data files and ipython notebook available through
       github?
       [170]reply
          + faizan shaikh says:
            [171]september 19, 2017 at 12:02 pm
            sure. will do
            [172]reply
               o phani says:
                 [173]september 25, 2017 at 9:01 pm
                 hi faizan,
                 a friendly reminder about the ipython notebook you
                 promised. here is the reason for my curiosity. while
                 experimenting with urban sound dataset
                 ([174]https://serv.cusp.nyu.edu/projects/urbansounddatase
                 t/urbansound8k.html), with an identical deep feed forward
                 neural network like yours, the best accuracy i have
                 achieved is 65%.
                 that is after lots of hyper parameterization. i know in
                 this blog you have reported similar accuracy and further
                 alluded that you could achieve 80% accuracy. that is
                 impressive, and i am aiming for similar result. however,
                 i have noticed your dataset size is not the full 8k set.
                 in my experimentation, i am using audio folders1-8 for
                 training, folder 9 for validation and folder 10 for
                 testing. i get 65% accuracy both on the validation and
                 testing sets.
                 hope you could share your notebook or help me towards 80%
                 accuracy goal. while i am currently experimenting with
                 data augmentation, your help is much appreciated. i am
                 aiming for this higher accuracy before using the trained
                 model/parameters for a custom project of mine to classify
                 a personal audio dataset.
                 thank you in advance,
                 phani.
                 [175]reply
                    # phani says:
                      [176]september 25, 2017 at 9:25 pm
                      forgot to mention, for my training i am extracting 5
                      different datapoints
                      (mfccs,chroma,mel,contrast,tonnetz) not just one
                      (mfccs) like you did. with this fullset i get 65%
                      accuracy. with mfccs alone i get only 53%. also, 60%
                      is the highest i saw so far in various other blogs
                      with similar dataset. interestingly convoluted
                      networks (id98) with mel features alone could not
                      push this any further, making your results of 80%
                      that much more impressive.
                      look forward to seeing your response.
                      thank you in advance.
                      [177]reply
     * smitha says:
       [178]october 26, 2017 at 11:42 am
       nice article    even i want to classify normal and pathological voice
       samples using keras    if i get any difficulty please help me
       regarding this   .
       [179]reply
          + faizan shaikh says:
            [180]november 16, 2017 at 4:58 pm
            sure
            [181]reply
     * sourish says:
       [182]november 16, 2017 at 11:09 am
       hi faizan,
       thank you for introducing this concept. however there is a basic
       problem,i am facing.
       i can   t install librosa, as every time i typed import librosa i got
       attributeerror: module    llvmlite.binding    has no attribute
          get_host_cpu_name   . i googled a lot, but didn   t find a solution
       for this. can you please provide a solution here, so that i can
       proceed further.
       thanks
       [183]reply
          + faizan shaikh says:
            [184]november 16, 2017 at 4:51 pm
            hi, a solution to [185]similar issue was to reinstall llvm
            package by executing sudo apt-get install llvm
            [186]reply
               o sourish says:
                 [187]november 17, 2017 at 12:10 pm
                 tried with that, however not solved the problem.mine is
                 windows os with anaconda environment.
                 thanks
                 [188]reply
                    # faizan shaikh says:
                      [189]november 17, 2017 at 4:40 pm
                      as a last resort, you can rely on a docker system
                      for testing out the code
                      [190]reply
     * toke hiber says:
       [191]april 11, 2018 at 6:48 am
       hi sir.
       thanks for this nice article. but how to i get datasets?
       [192]reply
          + louiscc says:
            [193]april 17, 2018 at 3:05 pm
            hello
            you can find the dataset here :
            [194]https://drive.google.com/drive/folders/0by0bai7hobafuhvxd
            1jcn3mwteu
            [195]reply
     * louiscc says:
       [196]april 17, 2018 at 2:54 pm
       hi,
       how do you read train.scv to get train variable ?
       thank you in advance
       louis
       [197]reply
          + aishwarya singh says:
            [198]april 20, 2018 at 3:41 pm
            hi louis,
            the link for the dataset is provided in the article itself.
            you can download it from there.
            [199]reply
     * maxwel says:
       [200]april 18, 2018 at 8:16 am
       can i get the dataset please
       [201]reply
          + aishwarya singh says:
            [202]april 19, 2018 at 1:20 pm
            hi maxwel,
            the link to the dataset is provided in the article itself.
            [203]reply
     * houda abzd says:
       [204]april 18, 2018 at 9:29 pm
       hi, i would like to use your example for my problem which is the
       separation of audio sources , i have some troubles using the code
       because i don   t know what do you mean by    train    , and also i need
       your data to run the example to see if it is working in my python,
       so can you plz provide us all the data through github?
       [205]reply
          + aishwarya singh says:
            [206]april 20, 2018 at 3:53 pm
            hi houda,
            the dataset has two parts, train and test. the link to
            download the datasets is provided in the article itself.
            [207]reply
     * houda bzd says:
       [208]april 20, 2018 at 4:13 pm
       hi, thanks for the nice article,
       i have a problem dealing with the code, it gives me    name    train   
       is not defined    even i have the dataset , can you help me plz ?
       best.
       [209]reply
          + aishwarya singh says:
            [210]april 23, 2018 at 1:46 pm
            hi,
            glad you liked the article.
            also, check the name you have set for the dataset you   re
            trying to load. i guess it should be    train   , not    train   
            [211]reply
     * houda abzd says:
       [212]april 21, 2018 at 9:17 pm
       hi aishwarya ,
       first of all , thanks for your feedback, i download the data,
       otherwise, i get this error: typeerror:    <' not supported between
       instances of 'nonetype' and 'str' , this error comes with this
       command:
       y = np_utils.to_categorical(lb.fit_transform(y))
       knowing that i am using python 3.6. any help or suggestion i will
       be upreciating that     
       best.
       [213]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-06] [214]srk       3924
   2    [2.jpg?date=2019-04-06] [215]mark12    3510
   3    [3.jpg?date=2019-04-06] [216]nilabha   3261
   4    [4.jpg?date=2019-04-06] [217]nitish007 3237
   5    [5.jpg?date=2019-04-06] [218]tezdhar   3082
   [219]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [220]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [221]understanding support vector machine algorithm from examples
       (along with code)
     * [222]essentials of machine learning algorithms (with python and r
       codes)
     * [223]a complete tutorial to learn data science with python from
       scratch
     * [224]7 types of regression techniques you should know!
     * [225]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [226]a simple introduction to anova (with applications in excel)
     * [227]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [228]top 5 machine learning github repositories and reddit discussions
   from march 2019

[229]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [230]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[231]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [232]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[233]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [234]16 opencv functions to start your id161 journey (with
   python code)

[235]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [236][ds-finhack.jpg]

   [237][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [238]about us
     * [239]our team
     * [240]career
     * [241]contact us
     * [242]write for us

   [243]about us
   [244]   
   [245]our team
   [246]   
   [247]careers
   [248]   
   [249]contact us

data scientists

     * [250]blog
     * [251]hackathon
     * [252]discussions
     * [253]apply jobs
     * [254]leaderboard

companies

     * [255]post jobs
     * [256]trainings
     * [257]hiring hackathons
     * [258]advertising
     * [259]reach us

   don't have an account? [260]sign up here.

join our community :

   [261]46336 [262]followers
   [263]20222 [264]followers
   [265]followers
   [266]7513 [267]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [268]privacy policy
     * [269]terms of use
     * [270]refund policy

   don't have an account? [271]sign up here

   iframe: [272]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [273](button) join now

   subscribe!

   iframe: [274]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [275](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/deep-learning/
  94. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/
  95. https://www.analyticsvidhya.com/blog/category/deep-learning/
  96. https://www.analyticsvidhya.com/blog/category/python-2/
  97. https://www.analyticsvidhya.com/blog/author/jalfaizy/
  98. https://datahack.analyticsvidhya.com/contest/practice-problem-loan-prediction-iii/
  99. https://datahack.analyticsvidhya.com/contest/practice-problem-big-mart-sales-iii/
 100. https://docs.google.com/presentation/d/1zzgnu_hbkl2ipkhs8-qhtdv20qfwt9lc3zwpvzo8rw0/pub?start=false&loop=false&delayms=3000#slide=id.g5a7a9806e_0_84
 101. https://en.wikipedia.org/wiki/mel-frequency_cepstrum
 102. https://datahack.analyticsvidhya.com/contest/practice-problem-urban-sound-classification/
 103. https://s3-ap-south-1.amazonaws.com/av-blog-media/wp-content/uploads/2017/08/23192318/temp.wav
 104. https://github.com/librosa/librosa
 105. https://www.analyticsvidhya.com/blog/2017/06/hands-on-with-deep-learning-solution-for-age-detection-practice-problem/
 106. https://www.analyticsvidhya.com/blog
 107. http://discuss.analyticsvidhya.com/
 108. https://datahack.analyticsvidhya.com/
 109. https://www.analyticsvidhya.com/jobs/#/user/
 110. https://s3-ap-south-1.amazonaws.com/av-blog-media/wp-content/uploads/2017/08/23192318/temp.wav
 111. https://s3-ap-south-1.amazonaws.com/av-blog-media/wp-content/uploads/2017/08/23192318/temp.wav
 112. https://s3-ap-south-1.amazonaws.com/av-blog-media/wp-content/uploads/2017/08/23192318/temp.wav
 113. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 114. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/?share=linkedin
 115. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/?share=facebook
 116. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/?share=twitter
 117. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/?share=pocket
 118. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/?share=reddit
 119. https://www.analyticsvidhya.com/blog/tag/audio-dataset/
 120. https://www.analyticsvidhya.com/blog/tag/audio-processing/
 121. https://www.analyticsvidhya.com/blog/tag/datahack/
 122. https://www.analyticsvidhya.com/blog/tag/deep-learning/
 123. https://www.analyticsvidhya.com/blog/tag/deep-learning-for-speech-processing/
 124. https://www.analyticsvidhya.com/blog/tag/librosa/
 125. https://www.analyticsvidhya.com/blog/tag/urban-sound/
 126. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 127. https://discuss.analyticsvidhya.com/
 128. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135004
 129. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135004
 130. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135025
 131. http://discuss.analyticsvidhya.com/
 132. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135025
 133. http://bit.ly/31kart8
 134. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135005
 135. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135005
 136. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135021
 137. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135021
 138. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135006
 139. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135006
 140. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135022
 141. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135022
 142. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135027
 143. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135027
 144. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135158
 145. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135158
 146. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135029
 147. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135029
 148. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135035
 149. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135035
 150. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135157
 151. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135157
 152. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135044
 153. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135044
 154. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135156
 155. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135156
 156. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135169
 157. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-135169
 158. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-136526
 159. https://www.coursera.org/learn/learning-how-to-learn
 160. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-136526
 161. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143523
 162. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143523
 163. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-136436
 164. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-136436
 165. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143994
 166. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143994
 167. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-144347
 168. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-144347
 169. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137247
 170. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137247
 171. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137461
 172. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137461
 173. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137965
 174. https://serv.cusp.nyu.edu/projects/urbansounddataset/urbansound8k.html
 175. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137965
 176. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137967
 177. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-137967
 178. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-140887
 179. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-140887
 180. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143997
 181. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143997
 182. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143974
 183. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143974
 184. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143996
 185. https://github.com/numba/llvmlite/issues/55
 186. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-143996
 187. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-144047
 188. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-144047
 189. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-144059
 190. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-144059
 191. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152502
 192. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152502
 193. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152624
 194. https://drive.google.com/drive/folders/0by0bai7hobafuhvxd1jcn3mwteu
 195. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152624
 196. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152623
 197. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152623
 198. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152718
 199. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152718
 200. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152640
 201. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152640
 202. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152682
 203. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152682
 204. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152663
 205. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152663
 206. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152719
 207. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152719
 208. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152721
 209. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152721
 210. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152779
 211. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152779
 212. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152755
 213. https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/#comment-152755
 214. https://datahack.analyticsvidhya.com/user/profile/srk
 215. https://datahack.analyticsvidhya.com/user/profile/mark12
 216. https://datahack.analyticsvidhya.com/user/profile/nilabha
 217. https://datahack.analyticsvidhya.com/user/profile/nitish007
 218. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 219. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 220. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 221. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 222. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 223. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 224. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 225. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 226. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 227. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 228. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 229. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 230. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 231. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 232. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 233. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 234. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 235. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 236. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 237. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 238. http://www.analyticsvidhya.com/about-me/
 239. https://www.analyticsvidhya.com/about-me/team/
 240. https://www.analyticsvidhya.com/career-analytics-vidhya/
 241. https://www.analyticsvidhya.com/contact/
 242. https://www.analyticsvidhya.com/about-me/write/
 243. http://www.analyticsvidhya.com/about-me/
 244. https://www.analyticsvidhya.com/about-me/team/
 245. https://www.analyticsvidhya.com/about-me/team/
 246. https://www.analyticsvidhya.com/about-me/team/
 247. https://www.analyticsvidhya.com/career-analytics-vidhya/
 248. https://www.analyticsvidhya.com/about-me/team/
 249. https://www.analyticsvidhya.com/contact/
 250. https://www.analyticsvidhya.com/blog
 251. https://datahack.analyticsvidhya.com/
 252. https://discuss.analyticsvidhya.com/
 253. https://www.analyticsvidhya.com/jobs/
 254. https://datahack.analyticsvidhya.com/users/
 255. https://www.analyticsvidhya.com/corporate/
 256. https://trainings.analyticsvidhya.com/
 257. https://datahack.analyticsvidhya.com/
 258. https://www.analyticsvidhya.com/contact/
 259. https://www.analyticsvidhya.com/contact/
 260. https://datahack.analyticsvidhya.com/signup/
 261. https://www.facebook.com/analyticsvidhya/
 262. https://www.facebook.com/analyticsvidhya/
 263. https://twitter.com/analyticsvidhya
 264. https://twitter.com/analyticsvidhya
 265. https://plus.google.com/+analyticsvidhya
 266. https://in.linkedin.com/company/analytics-vidhya
 267. https://in.linkedin.com/company/analytics-vidhya
 268. https://www.analyticsvidhya.com/privacy-policy/
 269. https://www.analyticsvidhya.com/terms/
 270. https://www.analyticsvidhya.com/refund-policy/
 271. https://id.analyticsvidhya.com/accounts/signup/
 272. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 273. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 274. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 275. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 277. https://www.facebook.com/analyticsvidhya
 278. https://twitter.com/analyticsvidhya
 279. https://plus.google.com/+analyticsvidhya/posts
 280. https://in.linkedin.com/company/analytics-vidhya
 281. https://www.analyticsvidhya.com/blog/2017/08/introduction-to-multi-label-classification/
 282. https://www.analyticsvidhya.com/blog/2017/08/knime-machine-learning/
 283. https://www.analyticsvidhya.com/blog/author/jalfaizy/
 284. https://www.linkedin.com/in/faizankshaikh
 285. http://github.com/faizankshaikh
 286. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 287. https://www.facebook.com/analyticsvidhya/
 288. https://twitter.com/analyticsvidhya
 289. https://plus.google.com/+analyticsvidhya
 290. https://plus.google.com/+analyticsvidhya
 291. https://in.linkedin.com/company/analytics-vidhya
 292. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 293. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 294. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 295. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 296. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 297. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 298. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 299. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 300. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 301. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 302. javascript:void(0);
 303. javascript:void(0);
 304. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 305. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 306. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 307. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 308. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 309. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 310. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 311. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 312. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 313. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f08%2faudio-voice-processing-deep-learning%2f&linkname=getting%20started%20with%20audio%20data%20analysis%20%28voice%29%20using%20deep%20learning
 314. javascript:void(0);
 315. javascript:void(0);
