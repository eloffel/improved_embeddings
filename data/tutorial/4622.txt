   #[1]github [2]recent commits to fashion-mnist:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]209
     * [35]star [36]5,390
     * [37]fork [38]951

[39]zalandoresearch/[40]fashion-mnist

   [41]code [42]issues 6 [43]pull requests 0 [44]insights
   [45]permalink
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   branch: master
   [47]fashion-mnist/readme.md
   [48]find file copy path
   [49]@hanxiao [50]hanxiao [51]update readme.md [52]24e58aa oct 5, 2018
   5 contributors
   (button)

users who have contributed to this file

     * [53]hanxiao
     * [54]kashif
     * [55]afagarap
     * [56]leo-ml
     * [57]heitorrapela

   [58]@hanxiao [59]@kashif [60]@afagarap [61]@leo-ml [62]@heitorrapela
   277 lines (202 sloc) 21.6 kb
   [63]raw [64]blame [65]history
   (button) (button)

fashion-mnist

   [66]github stars [67]gitter [68]readme-cn [69]readme-ja [70]license:
   mit [71]year-in-review
   table of contents

     * [72]why we made fashion-mnist
     * [73]get the data
     * [74]usage
     * [75]benchmark
     * [76]visualization
     * [77]contributing
     * [78]contact
     * [79]citing fashion-mnist
     * [80]license

   fashion-mnist is a dataset of [81]zalando's article images   consisting
   of a training set of 60,000 examples and a test set of 10,000 examples.
   each example is a 28x28 grayscale image, associated with a label from
   10 classes. we intend fashion-mnist to serve as a direct drop-in
   replacement for the original [82]mnist dataset for benchmarking machine
   learning algorithms. it shares the same image size and structure of
   training and testing splits.

   here's an example how the data looks (each class takes three-rows):

   [83][embedding.gif]

why we made fashion-mnist

   the original [84]mnist dataset contains a lot of handwritten digits.
   members of the ai/ml/data science community love this dataset and use
   it as a benchmark to validate their algorithms. in fact, mnist is often
   the first dataset researchers try. "if it doesn't work on mnist, it
   won't work at all", they said. "well, if it does work on mnist, it may
   still fail on others."

to serious machine learning researchers

   seriously, we are talking about replacing mnist. here are some good
   reasons:
     * mnist is too easy. convolutional nets can achieve 99.7% on mnist.
       classic machine learning algorithms can also achieve 97% easily.
       check out [85]our side-by-side benchmark for fashion-mnist vs.
       mnist, and read "[86]most pairs of mnist digits can be
       distinguished pretty well by just one pixel."
     * mnist is overused. in [87]this april 2017 twitter thread, google
       brain research scientist and deep learning expert ian goodfellow
       calls for people to move away from mnist.
     * mnist can not represent modern cv tasks, as noted in [88]this april
       2017 twitter thread, deep learning expert/keras author fran  ois
       chollet.

get the data

   [89]many ml libraries already include fashion-mnist data/api, give it a
   try!

   you can use direct links to download the dataset. the data is stored in
   the same format as the original [90]mnist data.
   name content examples size link md5 checksum
   train-images-idx3-ubyte.gz training set images 60,000 26 mbytes
   [91]download 8d4fb7e6c68d591d4c3dfef9ec88bf0d
   train-labels-idx1-ubyte.gz training set labels 60,000 29 kbytes
   [92]download 25c81989df183df01b3e8a0aad5dffbe
   t10k-images-idx3-ubyte.gz test set images 10,000 4.3 mbytes
   [93]download bef4ecab320f06d8554ea6380940ec79
   t10k-labels-idx1-ubyte.gz test set labels 10,000 5.1 kbytes
   [94]download bb300cfdad3c16e7a12a480ee83cd310

   alternatively, you can clone this github repository; the dataset
   appears under data/fashion. this repo also contains some scripts for
   benchmark and visualization.
git clone git@github.com:zalandoresearch/fashion-mnist.git

labels

   each training and test example is assigned to one of the following
   labels:
   label description
   0     t-shirt/top
   1     trouser
   2     pullover
   3     dress
   4     coat
   5     sandal
   6     shirt
   7     sneaker
   8     bag
   9     ankle boot

usage

loading data with python (requires [95]numpy)

   use utils/mnist_reader in this repo:
import mnist_reader
x_train, y_train = mnist_reader.load_mnist('data/fashion', kind='train')
x_test, y_test = mnist_reader.load_mnist('data/fashion', kind='t10k')

loading data with tensorflow

   make sure you have [96]downloaded the data and placed it in
   data/fashion. otherwise, tensorflow will download and use the original
   mnist.
from tensorflow.examples.tutorials.mnist import input_data
data = input_data.read_data_sets('data/fashion')

data.train.next_batch(batch_size)

   note, tensorflow supports passing in a source url to the
   read_data_sets. you may use:
data = input_data.read_data_sets('data/fashion', source_url='http://fashion-mnis
t.s3-website.eu-central-1.amazonaws.com/')

   also, an official tensorflow tutorial of using tf.keras, a high-level
   api to train fashion-mnist [97]can be found here.

loading data with other machine learning libraries

   to date, the following libraries have included fashion-mnist as a
   built-in dataset. therefore, you don't need to download fashion-mnist
   by yourself. just follow their api and you are ready to go.
     * [98]apache mxnet gluon
     * [99]deeplearn.js
     * [100]kaggle
     * [101]pytorch
     * [102]keras
     * [103]edward
     * [104]tensorflow
     * [105]torch
     * [106]juliaml
     * [107]chainer

   you are welcome to make pull requests to other open-source machine
   learning packages, improving their support to fashion-mnist dataset.

loading data with other languages

   as one of the machine learning community's most popular datasets, mnist
   has inspired people to implement loaders in many different languages.
   you can use these loaders with the fashion-mnist dataset as well.
   (note: may require decompressing first.) to date, we haven't yet tested
   all of these loaders with fashion-mnist.
     * [108]c
     * [109]c++
     * [110]java
     * [111]python and [112]this and this
     * [113]scala
     * [114]go
     * [115]c#
     * [116]nodejs and [117]this
     * [118]swift
     * [119]r and [120]this
     * [121]matlab
     * [122]ruby

benchmark

   we built an automatic benchmarking system based on scikit-learn that
   covers 129 classifiers (but no deep learning) with different
   parameters. [123]find the results here.

   [124][benchmark.gif]

   you can reproduce the results by running benchmark/runner.py. we
   recommend building and deploying [125]this dockerfile.

   you are welcome to submit your benchmark; simply create a new issue and
   we'll list your results here. before doing that, please make sure it
   does not already appear [126]in this list. visit our [127]contributor
   guidelines for additional details.

   the table below collects the submitted benchmarks. note that we haven't
   yet tested these results. you are welcome to validate the results using
   the code provided by the submitter. test accuracy may differ due to the
   number of epoch, batch size, etc. to correct this table, please create
   a new issue.
   classifier preprocessing fashion test accuracy mnist test accuracy
   submitter code
   2 conv+pooling none 0.876 - [128]kashif rasul [129]    
   2 conv+pooling none 0.916 - [130]tensorflow's doc [131]    
   2 conv+pooling+elu activation (pytorch) none 0.903 - [132]@abhirajhinge
   [133]    
   2 conv id172, random horizontal flip, random vertical flip,
   random translation, random rotation. 0.919 0.971 [134]kyriakos
   efthymiadis [135]    
   2 conv <100k parameters none 0.925 0.992 [136]@hardmaru [137]    
   2 conv ~113k parameters id172 0.922 0.993 [138]abel g. [139]    
   2 conv+3 fc ~1.8m parameters id172 0.932 0.994 [140]@xfan1025
   [141]    
   2 conv+3 fc ~500k parameters augmentation, batch id172 0.934
   0.994 [142]@cmasch [143]    
   2 conv+pooling+bn none 0.934 - [144]@khanguyen1207 [145]    
   2 conv+2 fc random horizontal flips 0.939 - [146]@ashmeet13 [147]    
   3 conv+2 fc none 0.907 - [148]@cenk bircano  lu [149]    
   3 conv+pooling+bn none 0.903 0.994 [150]@meghanabhange [151]    
   3 conv+pooling+2 fc+dropout none 0.926 - [152]@umberto griffo [153]    
   3 conv+bn+pooling none 0.921 0.992 [154]@gunjanchhablani [155]    
   5 conv+bn+pooling none 0.931 - [156]@noumanmufc1 [157]    
   id98 with optional shortcuts, dense-like connectivity
   standardization+augmentation+random erasing 0.947 - [158]@kennivich
   [159]    
   gru+id166 none 0.888 0.965 [160]@afagarap [161]    
   gru+id166 with dropout none 0.897 0.988 [162]@afagarap [163]    
   wrn40-4 8.9m params standard preprocessing (mean/std
   subtraction/division) and augmentation (random crops/horizontal flips)
   0.967 - [164]@ajbrock [165]     [166]    
   densenet-bc 768k params standard preprocessing (mean/std
   subtraction/division) and augmentation (random crops/horizontal flips)
   0.954 - [167]@ajbrock [168]     [169]    
   mobilenet augmentation (horizontal flips) 0.950 - [170]@          [171]    
   resnet18 id172, random horizontal flip, random vertical flip,
   random translation, random rotation. 0.949 0.979 [172]kyriakos
   efthymiadis [173]    
   googlenet with cross-id178 loss none 0.937 - [174]@cenk bircano  lu
   [175]    
   alexnet with triplet loss none 0.899 - [176]@cenk bircano  lu [177]    
   squeezenet with cyclical learning rate 200 epochs none 0.900 -
   [178]@snakers4 [179]    
   dual path network with wide resnet 28-10 standard preprocessing
   (mean/std subtraction/division) and augmentation (random
   crops/horizontal flips) 0.957 - [180]@queequeg [181]    
   mlp 256-128-100 none 0.8833 - [182]@heitorrapela [183]    
   vgg16 26m parameters none 0.935 - [184]@quantumliu [185]     [186]    
   wrn-28-10 standard preprocessing (mean/std subtraction/division) and
   augmentation (random crops/horizontal flips) 0.959 - [187]@zhunzhong07
   [188]    
   wrn-28-10 + random erasing standard preprocessing (mean/std
   subtraction/division) and augmentation (random crops/horizontal flips)
   0.963 - [189]@zhunzhong07 [190]    
   human performance crowd-sourced evaluation of human (with no fashion
   expertise) performance. 1000 randomly sampled test images, 3 labels per
   image, majority labelling. 0.835 - leo -
   capsule network 8m parameters id172 and shift at most 2 pixel
   and horizontal flip 0.936 - [191]@xifengguo [192]    
   hog+id166 hog 0.926 - [193]@subalde [194]    
   xgboost scaling the pixel values to mean=0.0 and var=1.0 0.898 0.958
   [195]@anktplwl91 [196]    
   denser - 0.953 0.997 [197]@fillassuncao [198]     [199]    
   dyra-net rescale to unit interval 0.906 - [200]@dirk sch  fer [201]    
   [202]    
   google automl 24 compute hours (higher quality) 0.939 - [203]@sebastian
   heinz [204]    

other explorations of fashion-mnist

[205]fashion-mnist: year in review

[206]fashion-mnist on google scholar

id3 (gans)

     * [207]tensorflow implementation of various gans and vaes. (recommend
       to read! note how various gans generate different results on
       fashion-mnist, which can not be easily observed on the original
       mnist.)
     * [208]make a ghost wardrobe using dcgan
     * [209]fashion-mnist   gan      
     * [210]cgan output after 5000 steps
     * [211]live demo of generative adversarial network model with
       deeplearn.js
     * [212]gan playground - explore generative adversarial nets in your
       browser

id91

     * [213]xifeng guo's implementation of [214]unsupervised deep
       embedding for id91 analysis (dec)
     * [215]leland mcinnes's [216]uniform manifold approximation and
       projection (umap)

video tutorial

   machine learning meets fashion by yufeng g @ google cloud

   [217]machine learning meets fashion

   introduction to kaggle kernels by [218]yufeng g @ google cloud

   [219]introduction to kaggle kernels

                         by mu li @ amazon ai

   [220]mxnet/gluon            

   apache mxnet                             (deep learning) -           (aws                         )

   [221]apache mxnet                             (deep learning)

visualization

id167 on fashion-mnist (left) and original mnist (right)

   [222][34d72c08.png] [223][01e0c4be.png]

pca on fashion-mnist (left) and original mnist (right)

   [224][f04ba662.png] [225][4433f0e1.png]

[226]umap on fashion-mnist (left) and original mnist (right)

   [227][umap_example_fashion_mnist1.png] [228][umap_example_mnist1.png]

contributing

   thanks for your interest in contributing! there are many ways to get
   involved; start with our [229]contributor guidelines and then check
   these [230]open issues for specific tasks.

contact

   to discuss the dataset, please use [231]gitter .

citing fashion-mnist

   if you use fashion-mnist in a scientific publication, we would
   appreciate references to the following paper:

   fashion-mnist: a novel image dataset for benchmarking machine learning
   algorithms. han xiao, kashif rasul, roland vollgraf.
   [232]arxiv:1708.07747

   biblatex entry:
@online{xiao2017/online,
  author       = {han xiao and kashif rasul and roland vollgraf},
  title        = {fashion-mnist: a novel image dataset for benchmarking machine
learning algorithms},
  date         = {2017-08-28},
  year         = {2017},
  eprintclass  = {cs.lg},
  eprinttype   = {arxiv},
  eprint       = {cs.lg/1708.07747},
}

   [233]who is citing fashion-mnist?

license

   the mit license (mit) copyright    [2017] zalando se,
   [234]https://tech.zalando.com

   permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the
      software   ), to deal in the software without restriction, including
   without limitation the rights to use, copy, modify, merge, publish,
   distribute, sublicense, and/or sell copies of the software, and to
   permit persons to whom the software is furnished to do so, subject to
   the following conditions:

   the above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the software.

   the software is provided    as is   , without warranty of any kind, express
   or implied, including but not limited to the warranties of
   merchantability, fitness for a particular purpose and noninfringement.
   in no event shall the authors or copyright holders be liable for any
   claim, damages or other liability, whether in an action of contract,
   tort or otherwise, arising from, out of or in connection with the
   software or the use or other dealings in the software.
   ____________________ (button) go

     *    2019 github, inc.
     * [235]terms
     * [236]privacy
     * [237]security
     * [238]status
     * [239]help

     * [240]contact github
     * [241]pricing
     * [242]api
     * [243]training
     * [244]blog
     * [245]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [246]reload to refresh your
   session. you signed out in another tab or window. [247]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/zalandoresearch/fashion-mnist/commits/master.atom
   3. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/zalandoresearch/fashion-mnist/blob/master/readme.md
  32. https://github.com/join
  33. https://github.com/login?return_to=/zalandoresearch/fashion-mnist
  34. https://github.com/zalandoresearch/fashion-mnist/watchers
  35. https://github.com/login?return_to=/zalandoresearch/fashion-mnist
  36. https://github.com/zalandoresearch/fashion-mnist/stargazers
  37. https://github.com/login?return_to=/zalandoresearch/fashion-mnist
  38. https://github.com/zalandoresearch/fashion-mnist/network/members
  39. https://github.com/zalandoresearch
  40. https://github.com/zalandoresearch/fashion-mnist
  41. https://github.com/zalandoresearch/fashion-mnist
  42. https://github.com/zalandoresearch/fashion-mnist/issues
  43. https://github.com/zalandoresearch/fashion-mnist/pulls
  44. https://github.com/zalandoresearch/fashion-mnist/pulse
  45. https://github.com/zalandoresearch/fashion-mnist/blob/629abc0f9a73c2897383a9178e8e38f7141be30d/readme.md
  46. https://github.com/join?source=prompt-blob-show
  47. https://github.com/zalandoresearch/fashion-mnist
  48. https://github.com/zalandoresearch/fashion-mnist/find/master
  49. https://github.com/hanxiao
  50. https://github.com/hanxiao
  51. https://github.com/zalandoresearch/fashion-mnist/commit/24e58aaedf0d2fceaa31fb94657912fca7e00814
  52. https://github.com/zalandoresearch/fashion-mnist/commit/24e58aaedf0d2fceaa31fb94657912fca7e00814
  53. https://github.com/hanxiao
  54. https://github.com/kashif
  55. https://github.com/afagarap
  56. https://github.com/leo-ml
  57. https://github.com/heitorrapela
  58. https://github.com/zalandoresearch/fashion-mnist/commits/master/readme.md?author=hanxiao
  59. https://github.com/zalandoresearch/fashion-mnist/commits/master/readme.md?author=kashif
  60. https://github.com/zalandoresearch/fashion-mnist/commits/master/readme.md?author=afagarap
  61. https://github.com/zalandoresearch/fashion-mnist/commits/master/readme.md?author=leo-ml
  62. https://github.com/zalandoresearch/fashion-mnist/commits/master/readme.md?author=heitorrapela
  63. https://github.com/zalandoresearch/fashion-mnist/raw/master/readme.md
  64. https://github.com/zalandoresearch/fashion-mnist/blame/master/readme.md
  65. https://github.com/zalandoresearch/fashion-mnist/commits/master/readme.md
  66. https://github.com/zalandoresearch/fashion-mnist/
  67. https://gitter.im/fashion-mnist/lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link
  68. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.zh-cn.md
  69. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.ja.md
  70. https://opensource.org/licenses/mit
  71. https://hanxiao.github.io/2018/09/28/fashion-mnist-year-in-review/
  72. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#why-we-made-fashion-mnist
  73. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#get-the-data
  74. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#usage
  75. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#benchmark
  76. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#visualization
  77. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#contributing
  78. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#contact
  79. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#citing-fashion-mnist
  80. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#license
  81. https://jobs.zalando.com/tech/
  82. http://yann.lecun.com/exdb/mnist/
  83. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/embedding.gif
  84. http://yann.lecun.com/exdb/mnist/
  85. http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/
  86. https://gist.github.com/dgrtwo/aaef94ecc6a60cd50322c0054cc04478
  87. https://twitter.com/goodfellow_ian/status/852591106655043584
  88. https://twitter.com/fchollet/status/852594987527045120
  89. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#loading-data-with-other-machine-learning-libraries
  90. http://yann.lecun.com/exdb/mnist/
  91. http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz
  92. http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz
  93. http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz
  94. http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz
  95. http://www.numpy.org/
  96. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#get-the-data
  97. https://www.tensorflow.org/tutorials/keras/basic_classification
  98. https://mxnet.incubator.apache.org/api/python/gluon/data.html
  99. https://deeplearnjs.org/demos/model-builder/
 100. https://www.kaggle.com/zalando-research/fashionmnist
 101. http://pytorch.org/docs/master/torchvision/datasets.html#fashion-mnist
 102. https://keras.io/datasets/#fashion-mnist-database-of-fashion-articles
 103. http://edwardlib.org/api/observations/fashion_mnist
 104. https://www.tensorflow.org/api_docs/python/tf/keras/datasets/fashion_mnist
 105. https://github.com/mingloo/fashion-mnist
 106. https://github.com/juliaml/mldatasets.jl
 107. https://docs.chainer.org/en/stable/reference/generated/chainer.datasets.get_fashion_mnist.html
 108. https://stackoverflow.com/a/10409376
 109. https://github.com/wichtounet/mnist
 110. https://stackoverflow.com/a/8301949
 111. https://pypi.python.org/pypi/python-mnist
 112. https://pypi.python.org/pypi/mnist
 113. http://mxnet.io/tutorials/scala/mnist.html
 114. https://github.com/schuyler/neural-go/blob/master/mnist/mnist.go
 115. https://jamesmccaffrey.wordpress.com/2013/11/23/reading-the-mnist-data-set-with-c/
 116. https://github.com/apelsyn/mnist_dl
 117. https://github.com/cazala/mnist
 118. https://github.com/simonlee2/mnistkit
 119. https://gist.github.com/brendano/39760
 120. https://github.com/maddin79/darch
 121. http://ufldl.stanford.edu/wiki/index.php/using_the_mnist_dataset
 122. https://github.com/gbuesing/mnist-ruby-test/blob/master/train/mnist_loader.rb
 123. http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/
 124. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/benchmark.gif
 125. https://github.com/zalandoresearch/fashion-mnist/blob/master/dockerfile
 126. http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/
 127. https://github.com/zalandoresearch/fashion-mnist#contributing
 128. https://twitter.com/krasul
 129. https://gist.github.com/kashif/76792939dd6f473b7404474989cb62a8
 130. https://www.tensorflow.org/tutorials/layers
 131. https://github.com/zalandoresearch/fashion-mnist/blob/master/benchmark/convnet.py
 132. https://github.com/abhirajhinge
 133. https://github.com/abhirajhinge/id98-with-fashion-mnist-dataset
 134. https://github.com/kefth
 135. https://github.com/kefth/fashion-mnist
 136. https://twitter.com/hardmaru
 137. https://github.com/hardmaru/pytorch_notebooks/blob/master/pytorch_tiny_custom_mnist_adam.ipynb
 138. https://github.com/abelusha
 139. https://github.com/abelusha/mnist-fashion-id98/blob/master/fashon_mnist_id98_using_keras_10_runs.ipynb
 140. https://github.com/xfan1025
 141. https://github.com/xfan1025/fashion-mnist/blob/master/fashion-mnist.ipynb
 142. https://github.com/cmasch
 143. https://github.com/cmasch/zalando-fashion-mnist
 144. https://github.com/khanguyen1207
 145. https://github.com/khanguyen1207/my-machine-learning-corner/blob/master/zalando mnist/fashion.ipynb
 146. https://github.com/ashmeet13
 147. https://github.com/ashmeet13/fashionmnist-id98
 148. https://github.com/cenkbircanoglu
 149. https://github.com/cenkbircanoglu/openface/tree/master/fashion_mnist
 150. https://github.com/meghanabhange
 151. https://github.com/meghanabhange/fashionmnist-3-layer-id98
 152. https://github.com/umbertogriffo
 153. https://github.com/umbertogriffo/fashion-mnist-id98-keras
 154. https://github.com/gunjanchhablani
 155. https://github.com/gunjanchhablani/id98-with-fashionmnist
 156. https://github.com/noumanmufc1
 157. https://gist.github.com/noumanmufc1/60f00e434f0ce42b6f4826029737490a
 158. https://github.com/dezhic
 159. https://github.com/dezhic/fashion-classifier
 160. https://github.com/afagarap
 161. https://gist.githubusercontent.com/afagarap/92c1c4a5dd771999b0201ec0e7edfee0/raw/828fbda0e466dacb1fad66549e0e3022e1c7263a/gru_id166_zalando.py
 162. https://github.com/afagarap
 163. https://gist.githubusercontent.com/afagarap/92c1c4a5dd771999b0201ec0e7edfee0/raw/58dbe7cd8b0d83e4386cd6896766113b1a9af096/gru_id166_zalando_dropout.py
 164. https://github.com/ajbrock
 165. https://github.com/xternalz/wideresnet-pytorch
 166. https://github.com/ajbrock/freezeout
 167. https://github.com/ajbrock
 168. https://github.com/bamos/densenet.pytorch
 169. https://github.com/ajbrock/freezeout
 170. https://github.com/bojone
 171. http://kexue.fm/archives/4556/
 172. https://github.com/kefth
 173. https://github.com/kefth/fashion-mnist
 174. https://github.com/cenkbircanoglu
 175. https://github.com/cenkbircanoglu/openface/tree/master/fashion_mnist
 176. https://github.com/cenkbircanoglu
 177. https://github.com/cenkbircanoglu/openface/tree/master/fashion_mnist
 178. https://github.com/snakers4
 179. https://github.com/zalandoresearch/fashion-mnist/files/1263340/squeeze_net_mnist.zip
 180. https://github.com/queequeg92
 181. https://github.com/queequeg92/dualpathnet
 182. https://github.com/heitorrapela
 183. https://github.com/heitorrapela/fashion-mnist-mlp
 184. https://github.com/quantumliu
 185. https://github.com/quantumliu/fashion-mnist-demo-by-keras
 186. https://zhuanlan.zhihu.com/p/28968219
 187. https://github.com/zhunzhong07
 188. https://github.com/zhunzhong07/random-erasing
 189. https://github.com/zhunzhong07
 190. https://github.com/zhunzhong07/random-erasing
 191. https://github.com/xifengguo
 192. https://github.com/xifengguo/capsnet-fashion-mnist
 193. https://github.com/subalde
 194. https://github.com/subalde/fashion-mnist
 195. https://github.com/anktplwl91
 196. https://github.com/anktplwl91/fashion_mnist.git
 197. https://github.com/fillassuncao
 198. https://github.com/fillassuncao/denser-models
 199. https://arxiv.org/pdf/1801.01563.pdf
 200. https://github.com/disc5
 201. https://github.com/disc5/dyra-net
 202. https://dl.acm.org/citation.cfm?id=3204176.3204200
 203. https://github.com/sebastianheinz
 204. https://www.statworx.com/de/blog/a-performance-benchmark-of-google-automl-vision-using-fashion-mnist/
 205. https://hanxiao.github.io/2018/09/28/fashion-mnist-year-in-review/
 206. https://scholar.google.com/scholar?hl=en&as_sdt=0,5&q=fashion-mnist&btng=&oq=fas
 207. https://github.com/hwalsuklee/tensorflow-generative-model-collections
 208. https://twitter.com/spacelenny/status/901488938023403520
 209. http://kexue.fm/archives/4540/
 210. https://github.com/a7b23/conditional-gan-using-tensorflow-slim
 211. http://cognitivechaos.com/playground/fashion-gan/
 212. https://reiinakano.github.io/gan-playground/
 213. https://github.com/xifengguo/dec-keras
 214. http://proceedings.mlr.press/v48/xieb16.pdf
 215. https://github.com/lmcinnes
 216. https://github.com/lmcinnes/umap
 217. https://youtu.be/rjudqel8dva
 218. https://twitter.com/yufengg
 219. https://youtu.be/flomhmou5bs
 220. https://youtu.be/kgktiyf5upk
 221. https://youtu.be/h66gdulsgl4
 222. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/34d72c08.png
 223. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/01e0c4be.png
 224. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/f04ba662.png
 225. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/4433f0e1.png
 226. https://github.com/lmcinnes/umap
 227. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/umap_example_fashion_mnist1.png
 228. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/umap_example_mnist1.png
 229. https://github.com/zalandoresearch/fashion-mnist/blob/master/contributing.md
 230. https://github.com/zalandoresearch/fashion-mnist/issues
 231. https://gitter.im/fashion-mnist/lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link
 232. http://arxiv.org/abs/1708.07747
 233. https://scholar.google.com/scholar?scisbd=2&q="fashion-mnist"&hl=en&as_sdt=0,5
 234. https://tech.zalando.com/
 235. https://github.com/site/terms
 236. https://github.com/site/privacy
 237. https://github.com/security
 238. https://githubstatus.com/
 239. https://help.github.com/
 240. https://github.com/contact
 241. https://github.com/pricing
 242. https://developer.github.com/
 243. https://training.github.com/
 244. https://github.blog/
 245. https://github.com/about
 246. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md
 247. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md

   hidden links:
 249. https://github.com/
 250. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md
 251. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md
 252. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md
 253. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#fashion-mnist
 254. https://github.com/zalandoresearch/fashion-mnist/blob/master/doc/img/fashion-mnist-sprite.png
 255. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#why-we-made-fashion-mnist
 256. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#to-serious-machine-learning-researchers
 257. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#get-the-data
 258. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#labels
 259. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#usage
 260. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#loading-data-with-python-requires-numpy
 261. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#loading-data-with-tensorflow
 262. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#loading-data-with-other-machine-learning-libraries
 263. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#loading-data-with-other-languages
 264. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#benchmark
 265. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#other-explorations-of-fashion-mnist
 266. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#fashion-mnist-year-in-review
 267. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#fashion-mnist-on-google-scholar
 268. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#generative-adversarial-networks-gans
 269. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#id91
 270. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#video-tutorial
 271. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#visualization
 272. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#id167-on-fashion-mnist-left-and-original-mnist-right
 273. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#pca-on-fashion-mnist-left-and-original-mnist-right
 274. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#umap-on-fashion-mnist-left-and-original-mnist-right
 275. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#contributing
 276. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#contact
 277. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#citing-fashion-mnist
 278. https://github.com/zalandoresearch/fashion-mnist/blob/master/readme.md#license
 279. https://github.com/
