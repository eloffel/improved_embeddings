   #[1]code in python    understanding tensorflow for noobs comments feed
   [2]alternate [3]alternate

[4]code in python

machine learning and deep learning blogs

     * [5]home
     * [6]about
     * [7]tutorials
     * [8]projects
     * [9]code snippets
     * [10]support us

     * [11]home
     * [12]about
     * [13]tutorials
     * [14]projects
     * [15]code snippets
     * [16]support us

   [17]menu

   search
     * ____________________ search

   [18]undertanding tensorflow for noobs

[19]understanding tensorflow for noobs

   [20]26 august, 2017 / [21]akarsh singh / [22]2 comments

   deep learning is a trending field in computer science. it is a subset
   of machine learning and artificial intelligence. tensorflow is an open
   source machine learning library developed by google that supports
   neural networks and other deep learning models. in this tutorial
   series, we will learn more about tensorflow and construct deep learning
   models on our own. to get started with tensorflow it is recommended to
   have some basic knowledge of python. you can refer these tutorials to
   revisit some crucial python concepts.

   1) [23]variables in python
   2) [24]functions in python
   3) [25]classes in python

   some elementary knowledge of scalars, vectors, matrices, and graphs is
   recommended to fully understand the working of tensorflow. briefly, i
   would say, scalars are quantities that have magnitude (just the
   numbers) and no direction. for example, 5 kilograms, 25 degrees, etc.
   vectors are quantities that have both magnitude and direction. for
   example, 5 m to the north, 45 degrees south, etc. matrices are an array
   of numbers in 2d space. now there is a third quantity called tensor.
   tensor is a mathematical representation of a physical quantity that has
   magnitude and many directions. tensor is an array of numbers or
   functions that transform according to certain rules. you can represent
   tensor as an array of n^r numbers in n-dimensional space, where r is
   the rank of the tensor. to visualize better we will take n = 3 so as to
   remain in 3-d space. you can think scalars, vectors, and matrix as a
   special case of a tensor. since the rank of a tensor object gives the
   number of dimensions. scalar is a rank zero tensor (r = 0), vector is a
   rank one tensor (r = 1) and matrix (2d array) is rank two tensor (r =
   2). to read more on tensor read this article
   [26]http://www.physlink.com/education/askexperts/ae168.cfm

   google   s tensorflow, as the name indicates, is a framework to define
   and run computations involving tensors. internally tensorflow
   represents tensor as an n-dimensional array of base datatypes. your
   goal very basic is to manipulate and pass around tensorflow class
   tf.tensor object. a tf.tensor has the following properties:
    1. a data type (float32, int32, or string, for example)
    2. a shape

   some special types that we will cover in upcoming blog posts are:
    1. tf.variable
    2. tf.constant
    3. tf.placeholder
    4. tf.sparsetensor

   to learn more on tensorflow   s tensor read this
   [27]https://www.tensorflow.org/programmers_guide/tensors

   one thing that is impressive about tensorflow is it leverages the power
   of parallel computing by using data flow graphs and threading. you can
   learn how tensorflow uses dataflow graphs and what is it advantages
   from this link
   [28]https://www.tensorflow.org/programmers_guide/graphs

   to know more on tensorflow   s multithreading and queues read this

   [29]https://www.tensorflow.org/programmers_guide/threading_and_queues

   in layman terms this how tensorflow   s computational graph architecture
   works. a node is an independently executing block of code which depends
   on resources propagated by all its parents. if those resources are not
   available, then it waits until all resources from all parents are
   computed and made available. the main idea behind computational graphs
   is that computations don   t always need to happen in order. there are
   some computations that can happen side-by-side. there are some
   computations that depend on other computations. instead of sequentially
   processing everything, we try to run as much in parallel as possible.
   computational graph tf

installing tensorflow

   the most simple and direct method to install tensorflow is to use this
   command

   pip install tensorflow

using conda

   we   ll be using conda to install tensorflow.

os x or linux

   run the following commands to setup your environment:
   conda create -n tensorflow python=3.5
   source activate tensorflow
   conda install pandas matplotlib jupyter notebook scipy scikit-learn
   pip install tensorflow

windows

   and installing on windows. in your console or anaconda shell,
   conda create -n tensorflow python=3.5
   activate tensorflow
   conda install pandas matplotlib jupyter notebook scipy scikit-learn
   pip install tensorflow

   i have this article has given you a brief insight on working with
   tensorflow. if you like this article then share it with your friends.
   subscribe to my python and machine learning blog newsletter for
   updates.
     * [30]about
     * [31]latest posts

   [32]akarsh singh
   follow me

[33]akarsh singh

   founder, code in python. web and android app developer. he loves python
   and wants to share his knowledge via this website. follow him on
   facebook, twitter and github.

   [34]akarsh singh
   follow me

latest posts by akarsh singh ([35]see all)

     * [36]understanding tensorflow for noobs - 26 august, 2017
     * [37]deep learning tensorflow vs keras vs pytorch - 7 august, 2017
     * [38]numpy array indexing and slicing - 23 july, 2017

1. for more awesome ads-free content help me to stay awake late. buy me a
coffee.

2. support akarsh singh(founder, code in python) so that he can teach you
more python and machine learning concepts for free. contribute to his
[39]paypal.me page and he will mention you in his next post.

                         [40]favoritedonate - paypal

   [41]deep learning, [42]tensorflow

   [43]ai[44]deep learning[45]machine learning[46]tensorflow
   [47]

previous post

   deep learning tensorflow vs keras vs pytorch

2 comments

    1. [48]final grade calculator
       [49]15 may, 2018 at 5:26 pm
       it   s awesome to pay a visit this website and reading the views of
       all friends concerning this article, while i am also
       zealous of getting experience.
       [50]reply
    2. [51]paul
       [52]16 october, 2018 at 4:09 am
       i have recently started a blog, the information you offer on this
       website has helped me greatly. thank you for all of your time &
       work.    never trust anybody who says    trust me.    except just this
       once, of course.     from steel beach    by john varley.
       [53]reply

leave a reply [54]cancel reply

   your email address will not be published.


   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   ______________________________author *

   ______________________________email *

   ______________________________website

   post comment

download code in python app

   [55]get it on google play

site map

     * [56]about
     * [57]tutorials
     * [58]projects
     * [59]code snippets
     * [60]support us
     * [61]app

connect

   [62][facebook.png] [63][twitter.png] [64][gplus.png] [65][github.png]

      2019 [66]code in python

references

   visible links
   1. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/feed/
   2. http://codeinpython.com/tutorials/wp-json/oembed/1.0/embed?url=http://codeinpython.com/tutorials/understanding-tensorflow-noobs/
   3. http://codeinpython.com/tutorials/wp-json/oembed/1.0/embed?url=http://codeinpython.com/tutorials/understanding-tensorflow-noobs/&format=xml
   4. http://codeinpython.com/home.html
   5. http://codeinpython.com/home.html
   6. http://codeinpython.com/about.html
   7. http://codeinpython.com/tutorials
   8. http://codeinpython.com/projects.html
   9. http://codeinpython.com/code-snippets.html
  10. http://codeinpython.com/tutorials/support-us/
  11. http://codeinpython.com/home.html
  12. http://codeinpython.com/about.html
  13. http://codeinpython.com/tutorials
  14. http://codeinpython.com/projects.html
  15. http://codeinpython.com/code-snippets.html
  16. http://codeinpython.com/tutorials/support-us/
  17. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/?nonamp=1
  18. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/
  19. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/
  20. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/
  21. http://codeinpython.com/tutorials/author/akarsh/
  22. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/#comments
  23. http://codeinpython.com/tutorials/learn-variables-python/
  24. http://codeinpython.com/tutorials/functions-python/
  25. http://codeinpython.com/tutorials/learn-classes-objects-python/
  26. http://www.physlink.com/education/askexperts/ae168.cfm
  27. https://www.tensorflow.org/programmers_guide/tensors
  28. https://www.tensorflow.org/programmers_guide/graphs
  29. https://www.tensorflow.org/programmers_guide/threading_and_queues
  30. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/?nonamp=1#abh_about
  31. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/?nonamp=1#abh_posts
  32. http://codeinpython.com/
  33. http://codeinpython.com/
  34. http://codeinpython.com/
  35. http://codeinpython.com/tutorials/author/akarsh/
  36. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/
  37. http://codeinpython.com/tutorials/deep-learning-tensorflow-keras-pytorch/
  38. http://codeinpython.com/tutorials/numpy-array-indexing-slicing/
  39. https://www.paypal.me/akarshsingh
  40. https://www.paypal.me/akarshsingh
  41. http://codeinpython.com/tutorials/category/deep-learning/
  42. http://codeinpython.com/tutorials/category/tensorflow/
  43. http://codeinpython.com/tutorials/tag/ai/
  44. http://codeinpython.com/tutorials/tag/deep-learning/
  45. http://codeinpython.com/tutorials/tag/machine-learning/
  46. http://codeinpython.com/tutorials/tag/tensorflow/
  47. http://codeinpython.com/tutorials/deep-learning-tensorflow-keras-pytorch/
  48. https://finalsgradecalculator.com/number-grade-to-gpa-calculator/
  49. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/#comment-145
  50. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/?nonamp=1#comment-145
  51. http://fuentesfuentes6.qowap.com/17745924/movie-an-overview
  52. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/#comment-1037
  53. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/?nonamp=1#comment-1037
  54. http://codeinpython.com/tutorials/understanding-tensorflow-noobs/?nonamp=1#respond
  55. https://play.google.com/store/apps/details?id=com.codeinpython.codeinpython&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
  56. http://codeinpython.com/about.html
  57. http://codeinpython.com/tutorials
  58. http://codeinpython.com/projects.html
  59. http://codeinpython.com/code-snippets.html
  60. http://codeinpython.com/tutorials/support-us/
  61. https://play.google.com/store/apps/details?id=com.codeinpython.codeinpython
  62. https://www.facebook.com/codeinpython
  63. https://twitter.com/akarsh_singh9
  64. https://plus.google.com/+akarshsinghoriginals
  65. https://github.com/akarshsingh9
  66. http://codeinpython.com/tutorials

   hidden links:
  68. https://facebook.com/akarsh.singh1997
  69. https://twitter.com/akarsh_singh9
  70. https://facebook.com/akarsh.singh1997
  71. https://twitter.com/akarsh_singh9
