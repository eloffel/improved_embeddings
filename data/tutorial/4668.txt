   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]towards data science
     * [9]data science
     * [10]machine learning
     * [11]programming
     * [12]visualization
     * [13]ai
     * [14]data journalism
     * [15]contribute
     __________________________________________________________________

pairwise sequence alignment using biopython

checking how similar two sequences are using python tools for bioinformatics

   [16]go to the profile of vijini mallawaarachchi
   [17]vijini mallawaarachchi (button) blockedunblock (button)
   followfollowing
   sep 2, 2017

     how similar are two sequences?

   if you want to answer this question, you need to have a basic idea
   about sequence alignment. as described in my [18]previous article,
   sequence alignment is a method of arranging sequences of dna, rna, or
   protein to identify regions of similarity. the similarity being
   identified, may be a result of functional, structural, or evolutionary
   relationships between the sequences.

   in this article, i will be walking you through pairwise sequence
   alignment. furthermore, we will be trying out some coding with a cool
   python tool known as biopython.
   [1*mvf9nuzn54va1_to8rmloa.png]
   figure 1: pairwise sequence alignment using biopython

what is pairwise sequence alignment?

   pairwise sequence alignment is one form of sequence alignment
   technique, where we compare only two sequences. this process involves
   finding the optimal alignment between the two sequences, scoring based
   on their similarity (how similar they are) or distance (how different
   they are), and then assessing the significance of this score.
   [1*ppbmp7uq8hgbtadpgljp4w.jpeg]
   figure 2: image scource:
   [19]http://compbio.pbworks.com/w/page/16252912/pairwise%20sequence%20al
   ignment

scoring

   before moving on to the pairwise sequence alignment techniques, let   s
   go through the process of scoring.

   the basis of sequence alignment lies with the scoring process, where
   the two sequences are given a score on how similar (or different) they
   are to each other. the pairwise sequence aligning algorithms require a
   scoring matrix to keep track of the scores assigned. the scoring matrix
   assigns a positive score for a match, and a penalty for a mismatch.

   three basic aspects are considered when assigning scores. they are,
    1. match value         value assigned for matching characters
    2. mismatch value         value assigned for mismatching characters
    3. gap penalty         value assigned for spaces

   the figure 3 given below shows how you can identify a match, mismatch
   and a gap among two sequences.
   [1*2wh0jtmrhxlcjqshhirviw.png]
   figure 3: match, mismatch and gap

   the first character of the two sequences is a match, as both are letter
   a. second character of the first sequence is c and that of the second
   sequence is t. so, it is mismatch.

   a space is introduced at the end of the second sequence to match with
   g. this space is known as a gap. a gap is the maximal contiguous run of
   spaces in a single sequence within a given alignment.

   in general, a gap is expressed as a gap penalty function which is a
   function that measures the cost of a gap as a (possibly nonlinear)
   function of its length.

types of pairwise sequence alignment

   consider that you are given two sequences as below.
x = x1     xi     xn
y = y1     yj     ym
    1. global alignment: this method finds the best alignment over the
       entire lengths of the 2 sequences. what is the maximum similarity
       between sequence x and y?
    2. local alignment: this method finds the most similar subsequences
       among the 2 sequences. what is the maximum similarity between a
       subsequence of x and a subsequence of y?

global alignment

   in this method, we consider the entire length of the 2 sequences and
   try to match them to obtain the best alignment. it is obtained by
   inserting gaps (spaces) to x and y until the length of the two
   sequences will be the same so that the two sequences are matched.

   for example, consider the sequences x = acgctgat and y = cagctat. one
   possible global alignment is,
ac-gctgat
 | ||  ||
-cagc-tat

   not that we have included gaps so that the strings are aligned.

   if we set a scoring scheme as match score = 1, mismatch score = 0 and
   gap penalty = 0, then the overall score for the above alignment will
   be,
score = nmatch x 1 + nmismatch x 0 + ngap x 0
      = 6x1 + 1x0 + 2x0
      = 6

needleman-wunsch algorithm

   one of the algorithms that uses id145 to obtain global
   alignment is the needleman-wunsch algorithm. this algorithm was
   published by needleman and wunsch in 1970 for alignment of two protein
   sequences and it was the first application of id145 to
   biological sequence analysis. the needleman-wunsch algorithm finds the
   best-scoring global alignment between two sequences.

local alignment

   in this method, we consider subsequences within each of the 2 sequences
   and try to match them to obtain the best alignment.

   for example, consider 2 sequences as x=ggtctgatg and y=aaacgatc.
   characters in bold are the subsequences to be considered. the best
   local alignment is,
ctgat (in x)
| |||
c-gat (in y)

   here, one gap is introduced in order to match the 2 subsequences.

   if we set a scoring scheme as match score = 1, mismatch score = 0 and
   gap penalty = 0, then the overall score for the above alignment will
   be,
score = nmatch x 1 + nmismatch x 0 + ngap x 0
      = 4x1 + 0x0 + 1x0
      = 4

smith-waterman algorithm

   one of the algorithms that uses id145 to obtain local
   alignments within two given sequences is the smith-waterman algorithm.
   smith and waterman published an application of id145 to
   find the optimal local alignments in 1981. this algorithm is similar to
   needleman-wunsch algorithm, but there are slight differences with the
   scoring process.

   we will not go into details of the above two algorithms in this
   article.

time to practice

   since we have a basic idea about pairwise sequence alignment and two
   useful algorithms, it is time to try out some coding.

biopython         python tools for computational molecular biology

   [1*rub8pd0g-kcna8qhgidqgw.png]
   figure 4: biopython ([20]http://biopython.org)

   in this article, i am going to introduce you to set of tools which we
   will use to play around with biological data from hereafter.
   [21]biopython is a set of tools written in python which can be used for
   a variety of biological computations, simulations and analysis.

   you can download and install biopython from [22]here. make sure that
   you have [23]python 2.7, 3.4, 3.5, or 3.6 already installed. you can
   refer the [24]biopython tutorial and cookbook for further details on
   what we can do and how to use these tools.

bio.pairwise2         pairwise sequence alignment using a id145

   let   s try out some coding to simulate pairwise sequence alignment using
   biopython. i will be using [25]pairwise2 module which can be found in
   the bio package. this module provides alignment functions to get global
   and local alignments between two sequences.

   the names of the alignment functions follow the convention;
<alignment type>xx

   where <alignment type> is either global or local and xx is a 2
   character code indicating the parameters it takes. the first character
   indicates the parameters for matches (and mismatches), and the second
   indicates the parameters for gap penalties.

   the match parameters are:
code  description
x     no parameters. identical characters have score of 1, else 0.
m     a match score is the score of identical chars, else mismatch
      score.
d     a dictionary returns the score of any pair of characters.
c     a callback function returns scores.

   the gap penalty parameters are:
code  description
x     no gap penalties.
s     same open and extend gap penalties for both sequences.
d     the sequences have different open and extend gap penalties.
c     a callback function returns the gap penalties.

   let   s try out a few examples of pairwise sequence alignments using
   bio.pairwise2 module.

example 1

   consider two sequences given below. we want to find out all the
   possible global alignments with the maximum similarity score.
x = acgggt
y = acg

   given below is the python code to get the global alignments for the
   given two sequences. note how we have used bio.pairwise2 module and its
   functionality.

   iframe: [26]/media/a37e80b9100f43b416f94cec4eb57e72?postid=d1a9d0ba861f

   code snippet 1: pairwise sequence alignment (global)

   by running the code, we can get all the possible global alignments as
   given below in figure 5.
   [1*ein7qrq5k1beonl0svlphw.png]
   figure 5: pairwise sequence alignment (global) output

   in this example, note that matching characters have been given 1 point.
   no points have been deducted for mismatches or gaps.

example 2

   consider the two sequences given in the previous example. we want to
   find out all the possible local alignments with the maximum similarity
   score.

   given below is the python code to get the local alignments for the
   given two sequences.

   iframe: [27]/media/4412910b7f3becd7f66d569d6f996263?postid=d1a9d0ba861f

   code snippet 2: pairwise sequence alignment (local)

   by running the code, we can get all the possible local alignments as
   given below in figure 6.
   [1*pn88e3e9tyq8axsizyppbq.png]
   figure 6: pairwise sequence alignment (local) output

   in this example, note that matching characters have been given 1 point.
   no points have been deducted for mismatches or gaps.

example 3

   in this example, we are going to change the scoring scheme and assign
   values for matches, mismatches and gaps. we will be considering the
   same two sequences as before. we want to find out all the possible
   global alignments with the maximum similarity score.

   matching characters are given 2 points, 1 point is deducted for each
   mismatching character. 0.5 points are deducted when opening a gap, and
   0.1 points are deducted when extending it.

   iframe: [28]/media/a1e3a44e21c85ffd5141078375010220?postid=d1a9d0ba861f

   code snippet 3: pairwise sequence alignment (global with custom
   scoring)

   by running the code, we can get all the possible global alignments as
   given below in figure 7.
   [1*m0kc9ueotkqlbyfjgmhdmq.png]
   figure 7: pairwise sequence alignment (global with custom
   scoring) output
     __________________________________________________________________

   hope you enjoyed reading this article and learned something useful and
   interesting.

   since i   m still very new to this field, i would like to hear your
   advice.     

   thanks for reading        

     * [29]bioinformatics
     * [30]science
     * [31]computer science
     * [32]algorithms
     * [33]data science

   (button)
   (button)
   (button) 553 claps
   (button) (button) (button) 4 (button) (button)

     (button) blockedunblock (button) followfollowing
   [34]go to the profile of vijini mallawaarachchi

[35]vijini mallawaarachchi

   phd student at australian national university | loves bioinformatics,
   data science, music & astronomy

     (button) follow
   [36]towards data science

[37]towards data science

   sharing concepts, ideas, and codes.

     * (button)
       (button) 553
     * (button)
     *
     *

   [38]towards data science
   never miss a story from towards data science, when you sign up for
   medium. [39]learn more
   never miss a story from towards data science
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://towardsdatascience.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/d1a9d0ba861f
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://towardsdatascience.com/pairwise-sequence-alignment-using-biopython-d1a9d0ba861f&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://towardsdatascience.com/pairwise-sequence-alignment-using-biopython-d1a9d0ba861f&source=--------------------------nav_reg&operation=register
   8. https://towardsdatascience.com/?source=logo-lo_xcdval6nvk9g---7f60cf5620c9
   9. https://towardsdatascience.com/data-science/home
  10. https://towardsdatascience.com/machine-learning/home
  11. https://towardsdatascience.com/programming/home
  12. https://towardsdatascience.com/data-visualization/home
  13. https://towardsdatascience.com/artificial-intelligence/home
  14. https://towardsdatascience.com/data-journalism/home
  15. https://towardsdatascience.com/contribute/home
  16. https://towardsdatascience.com/@vijinimallawaarachchi?source=post_header_lockup
  17. https://towardsdatascience.com/@vijinimallawaarachchi
  18. https://medium.com/towards-data-science/dna-sequence-data-analysis-starting-off-in-bioinformatics-3dba4cea04f
  19. http://compbio.pbworks.com/w/page/16252912/pairwise sequence alignment
  20. http://biopython.org/
  21. http://biopython.org/
  22. http://biopython.org/wiki/download
  23. http://www.python.org/
  24. http://biopython.org/dist/docs/tutorial/tutorial.html
  25. http://biopython.org/dist/docs/api/bio.pairwise2-module.html
  26. https://towardsdatascience.com/media/a37e80b9100f43b416f94cec4eb57e72?postid=d1a9d0ba861f
  27. https://towardsdatascience.com/media/4412910b7f3becd7f66d569d6f996263?postid=d1a9d0ba861f
  28. https://towardsdatascience.com/media/a1e3a44e21c85ffd5141078375010220?postid=d1a9d0ba861f
  29. https://towardsdatascience.com/tagged/bioinformatics?source=post
  30. https://towardsdatascience.com/tagged/science?source=post
  31. https://towardsdatascience.com/tagged/computer-science?source=post
  32. https://towardsdatascience.com/tagged/algorithms?source=post
  33. https://towardsdatascience.com/tagged/data-science?source=post
  34. https://towardsdatascience.com/@vijinimallawaarachchi?source=footer_card
  35. https://towardsdatascience.com/@vijinimallawaarachchi
  36. https://towardsdatascience.com/?source=footer_card
  37. https://towardsdatascience.com/?source=footer_card
  38. https://towardsdatascience.com/
  39. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  41. https://medium.com/p/d1a9d0ba861f/share/twitter
  42. https://medium.com/p/d1a9d0ba861f/share/facebook
  43. https://medium.com/p/d1a9d0ba861f/share/twitter
  44. https://medium.com/p/d1a9d0ba861f/share/facebook
