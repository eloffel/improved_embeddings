   #[1]github [2]recent commits to guesswhat:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]9
     * [35]star [36]51
     * [37]fork [38]29

[39]guesswhatgame/[40]guesswhat

   [41]code [42]issues 3 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   guesswhat?! baselines
     * [47]146 commits
     * [48]2 branches
     * [49]1 release
     * [50]fetching contributors
     * [51]apache-2.0

    1. [52]python 100.0%

   (button) python
   branch: master (button) new pull request
   [53]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/g
   [54]download zip

downloading...

   want to be notified of new releases in guesswhatgame/guesswhat?
   [55]sign in [56]sign up

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [59]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [60]download the github extension for visual studio
   and try again.

   (button) go back
   [61]@fstrub95
   [62]fstrub95 [63]update readme.md
   latest commit [64]9f643b6 nov 16, 2018
   [65]permalink
   type       name             latest commit message        commit time
        failed to load latest commit information.
        [66]config
        [67]src         [68]fix restoring supervized model may 13, 2018
        [69].gitignore
        [70].gitmodules
        [71]license
        [72]readme.md

readme.md

guesswhat?! models

   this repo aims at reproducing the results from the series of
   guesswhat?! papers, namely:
     * guesswhat?! visual object discovery through multi-modal dialogue
       [1] [73]https://arxiv.org/abs/1611.08481
     * end-to-end optimization of goal-driven and visually grounded
       dialogue systems [2] - [74]https://arxiv.org/abs/1703.05423

   the code was equally developed by florian strub (university of lille)
   and harm de vries (university of montreal)

   the project is part of the chistera - iglu project.

   warning: after refactoring the code of the original paper, we fixed a
   bug in the codebase (the last generated question was ignored in some
   cases). new scores are greatly above the scores reported in [1] but
   some results analysis are now obsolete (qgen stop learning to stop,
   greedy has the highest accuracy). we apologize for the inconvenience.

summary:

     * [75]introduction
     * [76]installation
          + [77]download
          + [78]requirements
          + [79]file architecture
          + [80]data
          + [81]pretrained models
     * [82]reproducing results
          + [83]process data
          + [84]train oracle
          + [85]train guesser
          + [86]train qgen
     * [87]faq
     * [88]citation

introduction

   we introduce guesswhat?!, a two-player guessing game as a testbed for
   research on the interplay of id161 and dialogue systems. the
   goal of the game is to locate an unknown object in a rich image scene
   by asking a sequence of questions. higher-level image understanding,
   like spatial reasoning and language grounding, is required to solve the
   proposed task.

installation

download

   our code has internal dependences called submodules. to properly clone
   the repository, please use the following git command:\
git clone --recursive https://github.com/guesswhatgame/guesswhat.git'

requirements

   the code works on both python 2 and 3. it relies on the tensorflow
   python api. it requires the following python packages:
pip install \
    tensorflow-gpu \
    nltk \
    tqdm \
    image

file architecture

   in the following, we assume that the following file/folder architecture
   is respected:
guesswhat
          config         # store the configuration file to create/train models
|             oracle
|             guesser
|             qgen
|             looper
|
          out            # store the output experiments (checkpoint, logs etc.)
|             oracle
|             guesser
|             qgen
|             looper
|
          data          # contains the guesshat data
|             img       # contains the coco img
|                  ft_vgg_img
|                  ft_vgg_crop
|                  raw
|
          src            # source files

   to complete the git-clone file arhictecture, you can do:
cd guesswhat
mkdir data; mkdir data/img ; mkdir data/img/raw ; mkdir data/img/ft_vgg_img ; mk
dir data/img/ft_vgg_crop
mkdir out; mkdir out/oracle ; mkdir out/guesser; mkdir out/qgen; mkdir out/loope
r ;

   of course, one is free to change this file architecture!

data

   guesswhat?! relies on two datasets:
     * the [89]guesswhat?! dataset that contains the dialogue inputs
     * the [90]ms coco dataset that contains the image inputs

   to download the guesswhat?! dataset please follow the following
   instruction:
wget https://s3-us-west-2.amazonaws.com/guess-what/guesswhat.train.jsonl.gz -p d
ata/
wget https://s3-us-west-2.amazonaws.com/guess-what/guesswhat.valid.jsonl.gz -p d
ata/
wget https://s3-us-west-2.amazonaws.com/guess-what/guesswhat.test.jsonl.gz -p da
ta/

   to download the ms coco dataset, please follow the following
   instruction:
wget http://msvocds.blob.core.windows.net/coco2014/train2014.zip -p data/img/
unzip data/img/train2014.zip -d data/img/raw

wget http://msvocds.blob.core.windows.net/coco2014/val2014.zip -p data/img/
unzip data/img/val2014.zip -d data/img/raw

# creates a folder `raw` with filenames as expected by preprocessing script belo
w
python ./src/guesswhat/preprocess_data/rewire_coco_image_id.py \
   -image_dir `pwd`/data/img/raw \
   -data_out `pwd`/data/img/raw

   nb: please check that md5sum are correct after downloading the files to
   check whether they have been corrupted. to do so, you can use the
   following command:
md5sum $file

pretrained networks

   pretrained networks can be downloaded here:

   v1 of the code:
     * tensorflow (1.0<->1.2): [91]network.
     * tensorflow (1.3): [92]network.

   you need to use the following tag to checkout the corresponding code:
git checkout tags/v1

   v2 of the code:
     * coming sooon! it would include gw?! with advanced film models, new
       rl algorithms, new tools!

   note that the reported results comes from the first version (v1) of
   pre-trained networks.

reproducing results

   to launch the experiments in the local directory, you first have to set
   the pyhton path:
export pythonpath=src:${pythonpath}

   note that you can also directly execute the experiments in the source
   folder.

process data

   before starting the training, one needs to compute the image features
   and the word dictionary

extract image features

   following the original papers, we are going to extract fc8 features
   from the coco images by using a vgg-16 network.
     * solution 1: you can directly download the vgg features:

wget www.florian-strub.com/github/ft_vgg_img.zip -p data/images
unzip data/images/ft_vgg_img.zip -d data/images/

     * solution 2: you can download vgg-16 pretrained network provided by
       [93]slim-tensorflow:

wget http://download.tensorflow.org/models/vgg_16_2016_08_28.tar.gz -p data/
tar zxvf data/vgg_16_2016_08_28.tar.gz -c data/

   guesswhat?! requires to both computes the image features from the full
   image to do so, you need to use the pythn script
   guesswhat/src/guesswhat/preprocess_data/extract_img_features.py .
array=( img crop )
for mode in "${array[@]}"; do
   python src/guesswhat/preprocess_data/extract_img_features.py \
     -img_dir data/img/raw \
     -data_dir data \
     -out_dir data/img/ft_vgg_$mode \
     -network vgg \
     -ckpt data/vgg_16.ckpt \
     -feature_name fc8 \
     -mode $mode
done

   noticeably, one can also extract vgg-fc7 or resnet features. please
   follow the script documentation for more advanced setting.

create dictionary

   to create the guesswhat?! dictionary, you need to use the pythn script
   guesswhat/src/guesswhat/preprocess_data/create_dico.py .
python src/guesswhat/preprocess_data/create_dictionary.py -data_dir data -dict_f
ile dict.json -min_occ 3

train oracle

   to train the oracle, you need to select/configure the input you want to
   use. to do so, you have update the file config/oracle/config.json by
   default, the oracle is trained with spatial+category but one may
   add/remove inputs. more information are available in the config folder.

   once the config file is set, you can launch the training step:
python src/guesswhat/train/train_oracle.py \
   -data_dir data \
   -img_dir data/img/ft_vgg_img \
   -crop_dir data/img/ft_vgg_crop \
   -config config/oracle/config.json \
   -exp_dir out/oracle \
   -no_thread 2

   after training, we obtained the following results:
    set  loss  error
   train 0.130 17.5%
   valid 0.155 20.6%
   test  0.157 21.1%

train guesser

   identically, you first have to update the config/guesser/config.json
python src/guesswhat/train/train_guesser.py \
   -data_dir data \
   -img_dir data/ft_vgg_img \
   -config config/guesser/config.json \
   -exp_dir out/guesser \
   -no_thread 2

   after training, we obtained the following results:
    set  loss  error
   train 0.681 27.6%
   valid 0.906 34.7%
   test  0.947 35.8%

train qgen

   identically, you first have to update the config/guesser/config.json
python src/guesswhat/train/train_qgen_supervised.py \
   -data_dir data \
   -img_dir data/ft_vgg_img \
   -config config/qgen/config.json \
   -exp_dir out/qgen \
   -no_thread 2

   after training, we obtained the following results:
    set  loss
   train 1.31
   valid 1.75
   test  1.76

train looper

   the looper use three pretrained models to play the guesswhat?! game.
   therefore, it provides a user-simulation scheme to perform rl training
   methods.

   in this codebase, the qgen is fine-tuned by using reinforce. the qgen
   keep playing guesswhat?! with the oracle and it is rewarded when the
   guesser find the correct object at the end of the dialogue.

   to do so, one need to first pretrain the three models. each model has a
   configuration hash and checkpoint. these configuration hash will be
   used as an entry point for the looper.
python src/guesswhat/train/train_qgen_reinforce.py
    -data_dir data/ \
    -exp_dir out/loop/ \
    -config config/looper/config.json \
    -img_dir data/ft_vgg_img \
    -crop_dir data/ft_vgg_crop \
    -networks_dir out/ \
    -oracle_identifier <oracle_identifier> \
    -qgen_identifier <qgen_identifier> \
    -guesser_identifier <guesser_identifier> \
    -evaluate_all false \
    -store_games true   \
    -no_thread 2

   activate the flag evaluate_all to also compute the accuracy with
   beamsearch and sampling (time-consuming).

   detailled accuracies:
   new images cross-id178 reinforce
   sampling       39.2%      56.5 %
   greedy         40.8%      58.4 %
   beamsearch     44.6%      58.4 %
   new objects cross-id178 reinforce
   sampling        41.6%       58.5%
   greedy          43.5%       60.3%
   beamsearch      47.1%       60.2%

   note that those scores are exact accuracies.

plot dataset

   it is possible to plot figures analysing guesswhat raw dataset or qgen
   generated games (if you set the flag, store_games to true). to do so,
python src/guesswhat/statistics/statistics/plot_them_all.py
   -data_dir data
   -out_dir out
   -name train
   -ignore_incomplete false

     * the "ignore_incomplete flag" will take into account or ignore
       incomplete games in the dataset.
     * the "name" flag correspond to the following variable
       guesswhat.${name}.jsonl.gz

   note: if you want to compute you personal plot, you can user the
   abstractploter interface and append your implementation into the
   plot_them_all.py script.

faq

     * when i start a python script, i have the following message:
       importerror: no module named generic.data_provider.iterator (or
       equivalent module). it is likely that your python path is not
       correctly set. add the "src" folder to your python path
       (pythonpath=src)

citation

   guesswhat?! framework - [94]https://arxiv.org/abs/1611.08481
@inproceedings{guesswhat_game,
author = {harm de vries and florian strub and sarath chandar and olivier pietqui
n and hugo larochelle and aaron c. courville},
title = {guesswhat?! visual object discovery through multi-modal dialogue},
booktitle = {conference on id161 and pattern recognition (cvpr)},
year = {2017}
}

   id23 applied to guesswhat?! -
   [95]https://arxiv.org/abs/1703.05423
@inproceedings{end_to_end_gw,
author = {florian strub and harm de vries and j\'er\'emie mary and bilal piot an
d aaron c. courville and olivier pietquin},
title = {end-to-end optimization of goal-driven and visually grounded dialogue s
ystems},
booktitle = {international joint conference on artificial intelligence (ijcai)},
year = {2017}
}

acknowledgement

     * sequel team
     * mila team

   we would also like people that help improving the code base namely: rui
   zhao, hannes schulz.

     *    2019 github, inc.
     * [96]terms
     * [97]privacy
     * [98]security
     * [99]status
     * [100]help

     * [101]contact github
     * [102]pricing
     * [103]api
     * [104]training
     * [105]blog
     * [106]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [107]reload to refresh your
   session. you signed out in another tab or window. [108]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/guesswhatgame/guesswhat/commits/master.atom
   3. https://github.com/guesswhatgame/guesswhat/#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/guesswhatgame/guesswhat
  32. https://github.com/join
  33. https://github.com/login?return_to=/guesswhatgame/guesswhat
  34. https://github.com/guesswhatgame/guesswhat/watchers
  35. https://github.com/login?return_to=/guesswhatgame/guesswhat
  36. https://github.com/guesswhatgame/guesswhat/stargazers
  37. https://github.com/login?return_to=/guesswhatgame/guesswhat
  38. https://github.com/guesswhatgame/guesswhat/network/members
  39. https://github.com/guesswhatgame
  40. https://github.com/guesswhatgame/guesswhat
  41. https://github.com/guesswhatgame/guesswhat
  42. https://github.com/guesswhatgame/guesswhat/issues
  43. https://github.com/guesswhatgame/guesswhat/pulls
  44. https://github.com/guesswhatgame/guesswhat/projects
  45. https://github.com/guesswhatgame/guesswhat/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/guesswhatgame/guesswhat/commits/master
  48. https://github.com/guesswhatgame/guesswhat/branches
  49. https://github.com/guesswhatgame/guesswhat/releases
  50. https://github.com/guesswhatgame/guesswhat/graphs/contributors
  51. https://github.com/guesswhatgame/guesswhat/blob/master/license
  52. https://github.com/guesswhatgame/guesswhat/search?l=python
  53. https://github.com/guesswhatgame/guesswhat/find/master
  54. https://github.com/guesswhatgame/guesswhat/archive/master.zip
  55. https://github.com/login?return_to=https://github.com/guesswhatgame/guesswhat/
  56. https://github.com/join?return_to=/guesswhatgame/guesswhat
  57. https://desktop.github.com/
  58. https://desktop.github.com/
  59. https://developer.apple.com/xcode/
  60. https://visualstudio.github.com/
  61. https://github.com/fstrub95
  62. https://github.com/guesswhatgame/guesswhat/commits?author=fstrub95
  63. https://github.com/guesswhatgame/guesswhat/commit/9f643b615931733ca95192816f4f63685570b19e
  64. https://github.com/guesswhatgame/guesswhat/commit/9f643b615931733ca95192816f4f63685570b19e
  65. https://github.com/guesswhatgame/guesswhat/tree/9f643b615931733ca95192816f4f63685570b19e
  66. https://github.com/guesswhatgame/guesswhat/tree/master/config
  67. https://github.com/guesswhatgame/guesswhat/tree/master/src
  68. https://github.com/guesswhatgame/guesswhat/commit/d44caf63de2071e50ed59237fa1dd4650a3043b5
  69. https://github.com/guesswhatgame/guesswhat/blob/master/.gitignore
  70. https://github.com/guesswhatgame/guesswhat/blob/master/.gitmodules
  71. https://github.com/guesswhatgame/guesswhat/blob/master/license
  72. https://github.com/guesswhatgame/guesswhat/blob/master/readme.md
  73. https://arxiv.org/abs/1611.08481
  74. https://arxiv.org/abs/1703.05423
  75. https://github.com/guesswhatgame/guesswhat/#introduction
  76. https://github.com/guesswhatgame/guesswhat/#installation
  77. https://github.com/guesswhatgame/guesswhat/#download
  78. https://github.com/guesswhatgame/guesswhat/#requirements
  79. https://github.com/guesswhatgame/guesswhat/#file-architecture
  80. https://github.com/guesswhatgame/guesswhat/#data
  81. https://github.com/guesswhatgame/guesswhat/#pretrained-models
  82. https://github.com/guesswhatgame/guesswhat/#reproducing-results
  83. https://github.com/guesswhatgame/guesswhat/#data
  84. https://github.com/guesswhatgame/guesswhat/#oracle
  85. https://github.com/guesswhatgame/guesswhat/#guesser
  86. https://github.com/guesswhatgame/guesswhat/#qgen
  87. https://github.com/guesswhatgame/guesswhat/#faq
  88. https://github.com/guesswhatgame/guesswhat/#citation
  89. https://guesswhat.ai/
  90. http://mscoco.org/
  91. http://florian-strub.com/github/pretrained_models.tf1-2.zip
  92. http://florian-strub.com/github/pretrained_models.tf1-3.zip
  93. https://github.com/tensorflow/models/tree/master/research/slim
  94. https://arxiv.org/abs/1611.08481
  95. https://arxiv.org/abs/1703.05423
  96. https://github.com/site/terms
  97. https://github.com/site/privacy
  98. https://github.com/security
  99. https://githubstatus.com/
 100. https://help.github.com/
 101. https://github.com/contact
 102. https://github.com/pricing
 103. https://developer.github.com/
 104. https://training.github.com/
 105. https://github.blog/
 106. https://github.com/about
 107. https://github.com/guesswhatgame/guesswhat/
 108. https://github.com/guesswhatgame/guesswhat/

   hidden links:
 110. https://github.com/
 111. https://github.com/guesswhatgame/guesswhat/
 112. https://github.com/guesswhatgame/guesswhat/
 113. https://github.com/guesswhatgame/guesswhat/
 114. https://help.github.com/articles/which-remote-url-should-i-use
 115. https://github.com/guesswhatgame/guesswhat/#guesswhat-models
 116. https://github.com/guesswhatgame/guesswhat/#summary
 117. https://github.com/guesswhatgame/guesswhat/#introduction
 118. https://github.com/guesswhatgame/guesswhat/#installation
 119. https://github.com/guesswhatgame/guesswhat/#download
 120. https://github.com/guesswhatgame/guesswhat/#requirements
 121. https://github.com/guesswhatgame/guesswhat/#file-architecture
 122. https://github.com/guesswhatgame/guesswhat/#data
 123. https://github.com/guesswhatgame/guesswhat/#pretrained-networks
 124. https://github.com/guesswhatgame/guesswhat/#reproducing-results
 125. https://github.com/guesswhatgame/guesswhat/#process-data
 126. https://github.com/guesswhatgame/guesswhat/#extract-image-features
 127. https://github.com/guesswhatgame/guesswhat/#create-dictionary
 128. https://github.com/guesswhatgame/guesswhat/#train-oracle
 129. https://github.com/guesswhatgame/guesswhat/#train-guesser
 130. https://github.com/guesswhatgame/guesswhat/#train-qgen
 131. https://github.com/guesswhatgame/guesswhat/#train-looper
 132. https://github.com/guesswhatgame/guesswhat/#plot-dataset
 133. https://github.com/guesswhatgame/guesswhat/#faq
 134. https://github.com/guesswhatgame/guesswhat/#citation
 135. https://github.com/guesswhatgame/guesswhat/#acknowledgement
 136. https://github.com/
