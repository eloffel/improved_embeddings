   #[1]github [2]recent commits to quickdraw-dataset:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]153
     * [35]star [36]2,852
     * [37]fork [38]382

[39]googlecreativelab/[40]quickdraw-dataset

   [41]code [42]issues 9 [43]pull requests 1 [44]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [45]sign up
   documentation on how to access and use the quick, draw! dataset.
   [46]https://quickdraw.withgoogle.com/data
   [47]dataset
     * [48]37 commits
     * [49]2 branches
     * [50]0 releases
     * [51]9 contributors
     * [52]view license

   branch: master (button) new pull request
   [53]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/g
   [54]download zip

downloading...

   want to be notified of new releases in
   googlecreativelab/quickdraw-dataset?
   [55]sign in [56]sign up

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [59]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [60]download the github extension for visual studio
   and try again.

   (button) go back
   [61]@halfdanj
   [62]halfdanj [63]update readme.md
   latest commit [64]67c4ad1 mar 12, 2019
   [65]permalink
   type        name               latest commit message        commit time
        failed to load latest commit information.
        [66]examples       [67]fix typo                       jul 5, 2018
        [68]license        [69]add initial readme and example may 18, 2017
        [70]readme.md      [71]update readme.md               mar 12, 2019
        [72]categories.txt
        [73]preview.jpg

readme.md

the quick, draw! dataset

   [74]preview

   the quick draw dataset is a collection of 50 million drawings across
   [75]345 categories, contributed by players of the game [76]quick,
   draw!. the drawings were captured as timestamped vectors, tagged with
   metadata including what the player was asked to draw and in which
   country the player was located. you can browse the recognized drawings
   on [77]quickdraw.withgoogle.com/data.

   we're sharing them here for developers, researchers, and artists to
   explore, study, and learn from. if you create something with this
   dataset, please let us know [78]by e-mail or at [79]a.i. experiments.

   we have also released a tutorial and model for training your own
   drawing classifier on [80]tensorflow.org.

   please keep in mind that while this collection of drawings was
   individually moderated, it may still contain inappropriate content.

content

     * [81]the raw moderated dataset
     * [82]preprocessed dataset
     * [83]get the data
     * [84]projects using the dataset
     * [85]changes
     * [86]license

the raw moderated dataset

   the raw data is available as [87]ndjson files seperated by category, in
   the following format:
   key type description
   key_id 64-bit unsigned integer a unique identifier across all drawings.
   word string category the player was prompted to draw.
   recognized boolean whether the word was recognized by the game.
   timestamp datetime when the drawing was created.
   countrycode string a two letter country code ([88]iso 3166-1 alpha-2)
   of where the player was located.
   drawing string a json array representing the vector drawing

   each line contains one drawing. here's an example of a single drawing:
  {
    "key_id":"5891796615823360",
    "word":"nose",
    "countrycode":"ae",
    "timestamp":"2017-03-01 20:41:36.70725 utc",
    "recognized":true,
    "drawing":[[[129,128,129,129,130,130,131,132,132,133,133,133,133,...]]]
  }

   the format of the drawing array is as following:
[
  [  // first stroke
    [x0, x1, x2, x3, ...],
    [y0, y1, y2, y3, ...],
    [t0, t1, t2, t3, ...]
  ],
  [  // second stroke
    [x0, x1, x2, x3, ...],
    [y0, y1, y2, y3, ...],
    [t0, t1, t2, t3, ...]
  ],
  ... // additional strokes
]

   where x and y are the pixel coordinates, and t is the time in
   milliseconds since the first point. x and y are real-valued while t is
   an integer. the raw drawings can have vastly different bounding boxes
   and number of points due to the different devices used for display and
   input.

preprocessed dataset

   we've preprocessed and split the dataset into different files and
   formats to make it faster and easier to download and explore.

simplified drawing files (.ndjson)

   we've simplified the vectors, removed the timing information, and
   positioned and scaled the data into a 256x256 region. the data is
   exported in [89]ndjson format with the same metadata as the raw format.
   the simplification process was:
    1. align the drawing to the top-left corner, to have minimum values of
       0.
    2. uniformly scale the drawing, to have a maximum value of 255.
    3. resample all strokes with a 1 pixel spacing.
    4. simplify all strokes using the [90]ramer   douglas   peucker algorithm
       with an epsilon value of 2.0.

   there is an example in [91]examples/nodejs/simplified-parser.js showing
   how to read ndjson files in nodejs.
   additionally, the [92]examples/nodejs/ndjson.md document details a set
   of command-line tools that can help explore subsets of these quite
   large files.

binary files (.bin)

   the simplified drawings and metadata are also available in a custom
   binary format for efficient compression and loading.

   there is an example in [93]examples/binary_file_parser.py showing how
   to load the binary files in python.
   there is also an example in [94]examples/nodejs/binary-parser.js
   showing how to read the binary files in nodejs.

numpy bitmaps (.npy)

   all the simplified drawings have been rendered into a 28x28 grayscale
   bitmap in numpy .npy format. the files can be loaded with
   [95]np.load(). these images were generated from the simplified data,
   but are aligned to the center of the drawing's bounding box rather than
   the top-left corner.

get the data

   the dataset is available on google cloud storage as [96]ndjson files
   seperated by category. see the list of files in [97]cloud console, or
   read more about [98]accessing public datasets using other methods. as
   an example, to easily download all simplified drawings, one way is to
   run the command gsutil -m cp
   gs://quickdraw_dataset/full/simplified/*.ndjson .

full dataset seperated by categories

     * [99]raw files (.ndjson)
     * [100]simplified drawings files (.ndjson)
     * [101]binary files (.bin)
     * [102]numpy bitmap files (.npy)

sketch-id56 quickdraw dataset

   this data is also used for training the [103]sketch-id56 model. an open
   source, tensorflow implementation of this model is available in the
   [104]magenta project, (link to github [105]repo). you can also read
   more about this model in this google research [106]blog post. the data
   is stored in compressed .npz files, in a format suitable for inputs
   into a recurrent neural network.

   in this dataset, 75k samples (70k training, 2.5k validation, 2.5k test)
   has been randomly selected from each category, processed with [107]rdp
   line simplification with an epsilon parameter of 2.0. each category
   will be stored in its own .npz file, for example, cat.npz.

   we have also provided the full data for each category, if you want to
   use more than 70k training examples. these are stored with the
   .full.npz extensions.
     * [108]numpy .npz files

projects using the dataset

   here are some projects and experiments that are using or featuring the
   dataset in interesting ways. got something to add? [109]let us know!

   creative and artistic projects
     * [110]letter collages by [111]deborah schmidt
     * [112]face tracking experiment by [113]neil mendoza
     * [114]faces of humanity by [115]tortue
     * [116]infinite quickdraw by [117]kynd.info
     * [118]misfire.io by matthew collyer
     * [119]draw this by [120]dan macnish
     * [121]scribbling speech by [122]xinyue yang
     * [123]illustraition by [124]ling chen
     * [125]dreaming of electric sheep by [126]dr. ernesto diaz-aviles

   data analyses
     * [127]how do you draw a circle? by [128]quartz
     * [129]forma fluens by [130]mauro martino, [131]hendrik strobelt and
       [132]owen cornec
     * [133]how long does it take to (quick) draw a dog? by [134]jim
       vallandingham
     * [135]finding bad flamingo drawings with recurrent neural networks
       by [136]colin morris
     * [137]facets dive x quick, draw! by [138]people + ai research
       initiative (pair), google
     * [139]exploring and visualizing an open global dataset by google
       research
     * [140]machine learning for visualization - talk / article by ian
       johnson

   guides & tutorials
     * [141]tensorflow tutorial for drawing classification
     * [142]train a model in tf.keras with colab, and run it in the
       browser with tensorflow.js by zaid alyafeai

   code and tools
     * [143]quick, draw! polymer component & data api by nick jonas
     * [144]quick, draw for processing by [145]cody ben lewis
     * [146]quick, draw! prediction model by keisuke irie
     * [147]random sample tool by [148]learning statistics is awesome
     * [149]svg rendering in d3.js example by [150]ian johnson (read more
       about the process [151]here)
     * [152]sketch-id56 classification by payal bajaj
     * [153]quickdraw.js by thomas wagenaar
     * [154]~ doodler ~ by [155]krishna sri somepalli
     * [156]quickdraw python api by [157]martin o'hanlon
     * [158]realtime quickdraw by [159]akshay bahadur

changes

   may 25, 2017: updated sketch-id56 quickdraw dataset, created .full.npz
   complementary sets.

license

   this data made available by google, inc. under the [160]creative
   commons attribution 4.0 international license.

     *    2019 github, inc.
     * [161]terms
     * [162]privacy
     * [163]security
     * [164]status
     * [165]help

     * [166]contact github
     * [167]pricing
     * [168]api
     * [169]training
     * [170]blog
     * [171]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [172]reload to refresh your
   session. you signed out in another tab or window. [173]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/googlecreativelab/quickdraw-dataset/commits/master.atom
   3. https://github.com/googlecreativelab/quickdraw-dataset#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/googlecreativelab/quickdraw-dataset
  32. https://github.com/join
  33. https://github.com/login?return_to=/googlecreativelab/quickdraw-dataset
  34. https://github.com/googlecreativelab/quickdraw-dataset/watchers
  35. https://github.com/login?return_to=/googlecreativelab/quickdraw-dataset
  36. https://github.com/googlecreativelab/quickdraw-dataset/stargazers
  37. https://github.com/login?return_to=/googlecreativelab/quickdraw-dataset
  38. https://github.com/googlecreativelab/quickdraw-dataset/network/members
  39. https://github.com/googlecreativelab
  40. https://github.com/googlecreativelab/quickdraw-dataset
  41. https://github.com/googlecreativelab/quickdraw-dataset
  42. https://github.com/googlecreativelab/quickdraw-dataset/issues
  43. https://github.com/googlecreativelab/quickdraw-dataset/pulls
  44. https://github.com/googlecreativelab/quickdraw-dataset/pulse
  45. https://github.com/join?source=prompt-code
  46. https://quickdraw.withgoogle.com/data
  47. https://github.com/topics/dataset
  48. https://github.com/googlecreativelab/quickdraw-dataset/commits/master
  49. https://github.com/googlecreativelab/quickdraw-dataset/branches
  50. https://github.com/googlecreativelab/quickdraw-dataset/releases
  51. https://github.com/googlecreativelab/quickdraw-dataset/graphs/contributors
  52. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/license
  53. https://github.com/googlecreativelab/quickdraw-dataset/find/master
  54. https://github.com/googlecreativelab/quickdraw-dataset/archive/master.zip
  55. https://github.com/login?return_to=https://github.com/googlecreativelab/quickdraw-dataset
  56. https://github.com/join?return_to=/googlecreativelab/quickdraw-dataset
  57. https://desktop.github.com/
  58. https://desktop.github.com/
  59. https://developer.apple.com/xcode/
  60. https://visualstudio.github.com/
  61. https://github.com/halfdanj
  62. https://github.com/googlecreativelab/quickdraw-dataset/commits?author=halfdanj
  63. https://github.com/googlecreativelab/quickdraw-dataset/commit/67c4ad1c52cd2206b6297929e9ae15252395aaf9
  64. https://github.com/googlecreativelab/quickdraw-dataset/commit/67c4ad1c52cd2206b6297929e9ae15252395aaf9
  65. https://github.com/googlecreativelab/quickdraw-dataset/tree/67c4ad1c52cd2206b6297929e9ae15252395aaf9
  66. https://github.com/googlecreativelab/quickdraw-dataset/tree/master/examples
  67. https://github.com/googlecreativelab/quickdraw-dataset/commit/60e0500f75ae95ae5627691c6abcc43dd8065dcb
  68. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/license
  69. https://github.com/googlecreativelab/quickdraw-dataset/commit/ea7fd227b1ba5e061a1b206e4dd83e17a8607fe3
  70. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/readme.md
  71. https://github.com/googlecreativelab/quickdraw-dataset/commit/67c4ad1c52cd2206b6297929e9ae15252395aaf9
  72. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/categories.txt
  73. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/preview.jpg
  74. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/preview.jpg
  75. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/categories.txt
  76. https://quickdraw.withgoogle.com/
  77. https://quickdraw.withgoogle.com/data
  78. mailto:quickdraw-support@google.com
  79. https://aiexperiments.withgoogle.com/submit
  80. https://www.tensorflow.org/tutorials/sequences/recurrent_quickdraw
  81. https://github.com/googlecreativelab/quickdraw-dataset#the-raw-moderated-dataset
  82. https://github.com/googlecreativelab/quickdraw-dataset#preprocessed-dataset
  83. https://github.com/googlecreativelab/quickdraw-dataset#get-the-data
  84. https://github.com/googlecreativelab/quickdraw-dataset#projects-using-the-dataset
  85. https://github.com/googlecreativelab/quickdraw-dataset#changes
  86. https://github.com/googlecreativelab/quickdraw-dataset#license
  87. http://ndjson.org/
  88. https://en.wikipedia.org/wiki/iso_3166-1_alpha-2
  89. http://ndjson.org/
  90. https://en.wikipedia.org/wiki/ramer   douglas   peucker_algorithm
  91. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/examples/nodejs/simplified-parser.js
  92. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/examples/nodejs/ndjson.md
  93. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/examples/binary_file_parser.py
  94. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/examples/nodejs/binary-parser.js
  95. https://docs.scipy.org/doc/numpy-1.12.0/reference/generated/numpy.load.html
  96. http://ndjson.org/
  97. https://console.cloud.google.com/storage/quickdraw_dataset/
  98. https://cloud.google.com/storage/docs/access-public-data
  99. https://console.cloud.google.com/storage/quickdraw_dataset/full/raw
 100. https://console.cloud.google.com/storage/quickdraw_dataset/full/simplified
 101. https://console.cloud.google.com/storage/quickdraw_dataset/full/binary
 102. https://console.cloud.google.com/storage/quickdraw_dataset/full/numpy_bitmap
 103. https://arxiv.org/abs/1704.03477
 104. https://magenta.tensorflow.org/sketch_id56
 105. https://github.com/tensorflow/magenta/tree/master/magenta/models/sketch_id56
 106. https://research.googleblog.com/2017/04/teaching-machines-to-draw.html
 107. https://en.wikipedia.org/wiki/ramer   douglas   peucker_algorithm
 108. https://console.cloud.google.com/storage/quickdraw_dataset/sketchid56
 109. mailto:quickdraw-support@google.com
 110. http://frauzufall.de/en/2017/google-quick-draw/
 111. http://frauzufall.de/
 112. https://www.instagram.com/p/buu8tuqd6_v/
 113. http://www.neilmendoza.com/
 114. http://project.laboiteatortue.com/facesofhumanity/
 115. https://github.com/googlecreativelab/quickdraw-dataset/blob/master/www.laboiteatortue.com
 116. https://kynd.github.io/infinite_quickdraw/
 117. http://kynd.info/
 118. http://misfire.io/
 119. http://danmacnish.com/2018/07/01/draw-this/
 120. http://danmacnish.com/
 121. http://xinyue.de/scribbling-speech.html
 122. http://xinyue.de/
 123. http://www.illustraition.net/
 124. https://github.com/lingchen42/illustraition
 125. https://medium.com/@libreai/dreaming-of-electric-sheep-d1aca32545dc
 126. http://ernesto.diazaviles.com/
 127. https://qz.com/994486/the-way-you-draw-circles-says-a-lot-about-you/
 128. https://qz.com/
 129. http://formafluens.io/
 130. http://www.mamartino.com/
 131. http://hendrik.strobelt.com/
 132. http://www.byowen.com/
 133. http://vallandingham.me/quickdraw/
 134. http://vallandingham.me/
 135. http://colinmorris.github.io/blog/bad_flamingos
 136. http://colinmorris.github.io/
 137. https://pair-code.github.io/facets/quickdraw.html
 138. https://ai.google/pair
 139. https://research.googleblog.com/2017/08/exploring-and-visualizing-open-global.html
 140. https://medium.com/@enjalot/machine-learning-for-visualization-927a9dff1cab
 141. https://www.tensorflow.org/tutorials/sequences/recurrent_quickdraw
 142. https://medium.com/tensorflow/train-on-google-colab-and-run-on-the-browser-a-case-study-8a45f9b1474e
 143. https://github.com/googlecreativelab/quickdraw-component
 144. https://github.com/codybenlewis/quick-draw-for-processing
 145. https://twitter.com/codybenlewis
 146. https://github.com/keisukeirie/quickdraw_prediction_model
 147. http://learning.statistics-is-awesome.org/draw/
 148. http://learning.statistics-is-awesome.org/
 149. https://bl.ocks.org/enjalot/a2b28f0ed18b891f9fb70910f1b8886d
 150. http://enja.org/
 151. https://gist.github.com/enjalot/54c4342eb7527ea523884dbfa52d174b
 152. https://github.com/payalbajaj/sketch_id56_classification
 153. https://github.com/wagenaartje/quickdraw.js
 154. https://github.com/krishnasrisomepalli/cs50-project/
 155. https://krishnasrisomepalli.github.io/
 156. http://quickdraw.readthedocs.io/
 157. https://github.com/martinohanlon
 158. https://github.com/akshaybahadur21/quickdraw
 159. http://akshaybahadur.com/
 160. https://creativecommons.org/licenses/by/4.0/
 161. https://github.com/site/terms
 162. https://github.com/site/privacy
 163. https://github.com/security
 164. https://githubstatus.com/
 165. https://help.github.com/
 166. https://github.com/contact
 167. https://github.com/pricing
 168. https://developer.github.com/
 169. https://training.github.com/
 170. https://github.blog/
 171. https://github.com/about
 172. https://github.com/googlecreativelab/quickdraw-dataset
 173. https://github.com/googlecreativelab/quickdraw-dataset

   hidden links:
 175. https://github.com/
 176. https://github.com/googlecreativelab/quickdraw-dataset
 177. https://github.com/googlecreativelab/quickdraw-dataset
 178. https://github.com/googlecreativelab/quickdraw-dataset
 179. https://help.github.com/articles/which-remote-url-should-i-use
 180. https://github.com/googlecreativelab/quickdraw-dataset#the-quick-draw-dataset
 181. https://github.com/googlecreativelab/quickdraw-dataset#content
 182. https://github.com/googlecreativelab/quickdraw-dataset#the-raw-moderated-dataset
 183. https://github.com/googlecreativelab/quickdraw-dataset#preprocessed-dataset
 184. https://github.com/googlecreativelab/quickdraw-dataset#simplified-drawing-files-ndjson
 185. https://github.com/googlecreativelab/quickdraw-dataset#binary-files-bin
 186. https://github.com/googlecreativelab/quickdraw-dataset#numpy-bitmaps-npy
 187. https://github.com/googlecreativelab/quickdraw-dataset#get-the-data
 188. https://github.com/googlecreativelab/quickdraw-dataset#full-dataset-seperated-by-categories
 189. https://github.com/googlecreativelab/quickdraw-dataset#sketch-id56-quickdraw-dataset
 190. https://github.com/googlecreativelab/quickdraw-dataset#projects-using-the-dataset
 191. https://github.com/googlecreativelab/quickdraw-dataset#changes
 192. https://github.com/googlecreativelab/quickdraw-dataset#license
 193. https://github.com/
