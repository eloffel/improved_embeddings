   #[1]silicon valley data science    feed [2]silicon valley data science   
   comments feed [3]silicon valley data science    ical feed [4]silicon
   valley data science    understanding ai toolkits comments feed
   [5]alternate [6]alternate

   [7]silicon valley data science silicon valley data science

     * [8]search

   search ____________________ search
   (button) toggle navigation

   [wrench-717684_header.jpeg]

understanding ai toolkits

options for developing with deep learning  |  july 18th, 2017

   modern artificial intelligence makes many benefits available to
   business, bringing cognitive abilities to machines at scale. as a field
   of computer science, ai is moving at an unprecedented rate: the time
   you must wait for a research result in an academic paper to translate
   into production-ready code can now be measured in mere months. however,
   with this velocity comes a corresponding level of confusion for
   newcomers to the field. as well as developing familiarity with ai
   techniques, practitioners must choose their technology platforms
   wisely. this post surveys today   s foremost options for ai in the form
   of deep learning, examining each toolkit   s primary advantages as well
   as their respective industry supporters.

machine learning, and deep learning

   contemporary ai workloads can be divided into two classes: machine
   learning and deep learning. the first of these classes, and the
   overwhelming majority in current use, is machine learning. these
   incorporate the most common algorithms used by data scientists: linear
   models, id116 id91, id90, and so on. though we now
   talk of them as part of ai, this is what data scientists have been
   doing for a long time.

   the second class of ai workload has received considerably more
   attention and hype in the last two years: a specialization of one
   machine learning technique, neural networks, known as [9]deep learning.
   deep learning is fueling the interest in ai, or    cognitive   
   technologies, with applications such as image recognition, voice
   recognition, automatic game-playing, and self-driving cars as well as
   other autonomous vehicles. typically, these applications require vast
   amounts of data to feed and train complex neural networks.

options for machine learning

   toolkits to handle this first class of workloads are integrated into
   every statistics package in common use. commercial offerings include
   sas, spss, and matlab. common open-source tools include r and python;
   the big data platforms apache spark and hadoop also have their own
   toolkits for parallel machine learning (spark   s mllib and apache
   mahout). currently, python is emerging as the most popular programming
   language for data science in industry, thanks to projects such as
   [10]scikit-learn and [11]anaconda.

options for deep learning

   the landscape of deep learning toolkits is evolving rapidly. both
   academia and data giants, such as google, baidu, and facebook, have
   been investing in deep learning for years, and as a result there are
   multiple strong alternatives. as such, the newcomer is faced with many
   choices! here   s a rundown of the main contenders, which each have
   different strengths and ecosystems.
     * [12]tensorflow: from google, and the highest profile at the time of
       writing. it   s a    second generation    deep learning library, built by
       those experienced with earlier frameworks. tensorflow is very
       accessible from python, and includes the [13]tensorboard tool,
       which lends a strong advantage in debugging and inspecting
       networks. the xla compilation tool provides optimal execution of
       models, and tensorflow mobile brings machine learning support for
       low-powered mobile devices.
     * [14]mxnet: has high profile adoption, spearheaded by amazon web
       services, and is integrated with many programming languages. mxnet
       has been [15]accepted into the apache incubator, which puts it on
       track to eventually become a top-level apache project.
     * [16]deeplearning4j: a commercially-supported deep learning
       framework with strong performance in a java environment, making it
       attractive for enterprise applications.
     * [17]torch: a powerful framework in use at places such as facebook
       and twitter, but written in lua, with less first-class support for
       other programming languages.
     * [18]pytorch: a descendant of torch that    puts python first,   
       pytorch brings torch into the popular python ecosystem of data
       science. [19]released in 2017, it claims facebook and twitter among
       its backers. pytorch supports dynamic computational graphs,
       something [20]not currently available in tensorflow, and provides a
       smoother development flow than non-dynamic alternatives.
     * [21]ctnk: microsoft   s offering in the deep learning space, with
       python and c++ apis (java is also available experimentally).
     * [22]caffe: brings an emphasis on id161 applications. core
       language is c++, with a python interface.
     * [23]theano: one of the oldest deep learning frameworks, written in
       python. used broadly in academia, but isn   t that well suited to
       production use.

   many of these deep learning frameworks operate at a lower level than
   everyday developers would like, and so have higher-level libraries on
   top of them that make their use more friendly. the most important of
   these is [24]keras, a python library that supports the creation of deep
   learning applications that can run on either tensorflow, theano, cntk,
   or deeplearning4j.

   apple   s entry into machine learning is also worth a mention. in
   contrast to the above toolkits, apple provides only the [25]execution
   framework for models. developers must train their models with toolkits
   such as caffe, keras, or scikit-learn, and then convert them so apps
   can use them through apple   s coreml.

where to start?

   tensorflow github star count

   tensorflow github star count, feb 2017. [26]gdg-shanghai 2017
   tensorflow summit

   if you have no specific reason to choose any of the alternatives, then
   the keras and tensorflow combination appears the strongest default
   choice going forward, on account of its developer experience, google   s
   reputation in ai, and the importance of the python ecosystem.
   tensorflow   s rapid growth in popularity is likely to ensure it is
   compatible with the broadest range of data tools in the near term. for
   example, see databricks    [27]recent announcement of tensorflow and
   keras support for deep learning in spark.

   however, amazon web services    strong backing of mxnet makes it one to
   continue watching, as it grows and migrates into an apache project; and
   microsoft   s strong foothold with azure makes cntk a significant effort.

   deep learning is a rapidly growing field, and each of the cloud
   providers see pre-eminence in machine learning as a strategic goal.
   fortunately, they are all choosing open source approaches   guaranteeing
   accessibility and longevity for any projects that adopt their toolkits.
   together with the increasing availability of deep-learning focused
   compute resource in clouds and [28]gpus, this is great news for anyone
   wanting to start exploring deep learning.

     * edd wilder-james
    [29]edd wilder-james
       founder of the pioneering data conference, o   reilly strata, edd is
       a respected voice in the worlds of data, open source and the web.
       bringing together deep technical know-how with market
       understanding, edd makes sense of information technology and its
       trajectory.

share

related blog posts

     * [30]open source toolkits for id103
       this article reviews the main options for free    
     * [31]understanding modern data systems
       in this post, fausto talks about the characteristics    
     * [32]getting started with deep learning
       one way to give back to the open    

   [33]see all blogs
   [building-839787_1920_feature-145x120.jpeg]

   previous article

rethinking data governance

   thank you

   previous article

thank you

   next article

building a data-driven culture

   [floppy-disk-2-feature-1-145x118.jpeg]

   next article

welcome to silicon valley data science

      2017 silicon valley data science llc
     * [34]blog
     * [35]projects
     * [36]resources

     * [37]sitemap
     * [38]privacy policy
     * [39]terms of use

sign in

   ____________________ ____________________ log in
     * [40]forgot password?

   [tr?id=1791588387795047&ev=pageview&noscript=1]

references

   visible links
   1. https://www.svds.com/feed/
   2. https://www.svds.com/comments/feed/
   3. https://www.svds.com/events/?ical=1
   4. https://www.svds.com/understanding-ai-toolkits/feed/
   5. https://www.svds.com/wp-json/oembed/1.0/embed?url=https://www.svds.com/understanding-ai-toolkits/
   6. https://www.svds.com/wp-json/oembed/1.0/embed?url=https://www.svds.com/understanding-ai-toolkits/&format=xml
   7. https://www.svds.com/
   8. https://www.svds.com/?s=
   9. https://en.wikipedia.org/wiki/deep_learning
  10. http://scikit-learn.org/
  11. https://www.continuum.io/anaconda-overview
  12. https://www.tensorflow.org/
  13. https://www.youtube.com/watch?v=ebbedrscmv4
  14. http://mxnet.io/
  15. http://incubator.apache.org/projects/mxnet.html
  16. https://deeplearning4j.org/
  17. http://torch.ch/
  18. http://pytorch.org/
  19. https://medium.com/intuitionmachine/pytorch-dynamic-computational-graphs-and-modular-deep-learning-7e7f89f18d1
  20. https://www.forbes.com/sites/quora/2017/07/10/is-pytorch-better-than-tensorflow/#6487ca2473b7
  21. https://www.microsoft.com/en-us/research/product/cognitive-toolkit/
  22. http://caffe.berkeleyvision.org/
  23. http://www.deeplearning.net/software/theano/
  24. https://keras.io/
  25. https://developer.apple.com/documentation/coreml
  26. https://www.slideshare.net/jiangjun1990/gdgshanghai-2017-tensorflow-summit-recap
  27. https://github.com/databricks/spark-deep-learning
  28. https://developer.nvidia.com/deep-learning
  29. https://www.svds.com/team/edd-wilder-james/
  30. https://www.svds.com/open-source-toolkits-speech-recognition/
  31. https://www.svds.com/understanding-modern-data-systems/
  32. https://www.svds.com/getting-started-deep-learning/
  33. https://www.svds.com/blog/
  34. https://www.svds.com/blog/
  35. https://www.svds.com/projects/
  36. https://www.svds.com/resources/
  37. https://www.svds.com/sitemap/
  38. https://www.svds.com/privacy-policy/
  39. https://www.svds.com/terms-of-use/
  40. https://www.svds.com/wp-login.php?action=lostpassword

   hidden links:
  42. https://www.svds.com/rethinking-data-governance/
  43. https://www.svds.com/thankyou/
  44. https://www.svds.com/tbt-building-data-driven-culture/
  45. https://www.svds.com/welcome-to-silicon-valley-data-science/
