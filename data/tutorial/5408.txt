[1] logo

     * [2]learn python
     * [3]gui
     * [4]pyqt
     * [5]machine learning
     * [6]web development
     * [7]django
     * [8]oop

text to speech

   [ins: :ins]

   we can make the computer speak with python.

   given a text string, it will speak the written words in the english
   language.
   this process is called text to speech (tts).

   related course: [9]zero to deep learning with python and keras
   icon

text to speech

pyttsx text to speech

   pytsx is a cross-platform text-to-speech wrapper.
   it uses different speech engines based on your operating system:
   nsss - nsspeechsynthesizer on mac os x 10.5 and higher
   sapi5 - sapi5 on windows xp, windows vista, and (untested) windows 7
   espeak - espeak on any distro / platform that can host the shared
   library (e.g., ubuntu / fedora linux)

   install with pip (using pyenv, pipenv or virtualenv):
   sudo pip install pyttsx

   then run the example code:
import pyttsx
engine = pyttsx.init()
engine.say('good morning.')
engine.runandwait()

gtts text to speech

   gtts is a module and command line utility to save spoken text to mp3.
   it uses the google text to speech (tts) api.

   listen to the voice sample below:

   iframe: [10]https://www.youtube.com/embed/ahz-5arkdgu

   this module supports many languages and sounds very natural.

   install
   install with the python package tool (pip):
   sudo pip install gtts

   example
from gtts import gtts
import os
tts = gtts(text='good morning', lang='en')
tts.save("good.mp3")
os.system("mpg321 good.mp3")

   if you want to test it on the command line use:
      
   gtts-cli.py    hello    -l    en    -o hello.mp3

ios tts and id103

   tts in pythonista for ios:
import speech
speech.say('hola mundo', 'es_es')

   to record sound:
import sound
r = sound.recorder('audio.m4a')
r.record(3)  # seconds


   to recognize it as text:
text = speech.recognize('audio.m4a', 'en')[0][0]  # sent to apple servers

microsoft speech engine

   if you use microsoft windows 10, it has a speech engine included.
   install the module win32com, then you can use this code:
import win32com.client as wincl
speak = wincl.dispatch("sapi.spvoice")
speak.speak("hello world")

ibm watson tts

   ibm has created an tts api, which is free for a limited amount of
   queries.
   their api has many languages including english, german, spanish,
   french, italian, japanese and portuguese. they also have different
   speakers.

   you can listen to sample data on the [11]watson tts page.

   you can use the tts-watson module to interact.
   pip install tts-watson

   after registrating on the ibm watson site (generate keys there),
   we can write our code:

from tts_watson.ttswatson import ttswatson
ttswatson = ttswatson('watson_user', 'watson_password', 'en-us_allisonvoice')
ttswatson.play("hello world")


   alternatively you can use curl to directly fetch from the api.
   [12]download tts examples
   [ins: :ins]
   [13]previous post [14]next post

      2007 - 2019 [15]pythonprogramminglanguage.com.
   [16]cookie policy & [17]privacy policy.

references

   visible links
   1. https://pythonprogramminglanguage.com/
   2. https://pythonprogramminglanguage.com/
   3. https://pythonprogramminglanguage.com/python-gui
   4. https://pythonprogramminglanguage.com/category/pyqt
   5. https://pythonprogramminglanguage.com/category/machine-learning
   6. https://pythonprogramminglanguage.com/web-application
   7. https://pythonprogramminglanguage.com/django
   8. https://pythonprogramminglanguage.com/category/oop
   9. https://click.linksynergy.com/deeplink?id=ke*2f3hl/pw&mid=39197&murl=https://www.udemy.com/zero-to-deep-learning/
  10. https://www.youtube.com/embed/ahz-5arkdgu
  11. https://text-to-speech-demo.mybluemix.net/
  12. https://share.pythonprogramminglanguage.com/download-tts-examples/
  13. https://pythonprogramminglanguage.com/speech-recognition/
  14. https://pythonprogramminglanguage.com/machine-learning-classifier/
  15. https://pythonprogramminglanguage.com/
  16. https://pythonprogramminglanguage.com/cookie-policy/
  17. https://pythonprogramminglanguage.com/privacy-policy/

   hidden links:
  19. https://pythonprogramminglanguage.com/text-to-speech/#text-to-speech
  20. https://pythonprogramminglanguage.com/text-to-speech/#pyttsx-text-to-speech
  21. https://pythonprogramminglanguage.com/text-to-speech/#gtts-text-to-speech
  22. https://pythonprogramminglanguage.com/text-to-speech/#ios-tts-and-speech-recognition
  23. https://pythonprogramminglanguage.com/text-to-speech/#microsoft-speech-engine
  24. https://pythonprogramminglanguage.com/text-to-speech/#ibm-watson-tts
