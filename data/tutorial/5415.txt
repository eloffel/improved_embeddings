   #[1]github [2]recent commits to fastrdfstore:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]7
     * [35]star [36]21
     * [37]fork [38]3

[39]microsoft/[40]fastrdfstore

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   the msr fastrdfstore package is designed for creating an in-memory
   index of rdf triples, implemented as a wcf service in c#, and consists
   of server & client side code.
     * [47]17 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors
     * [51]view license

    1. [52]c# 99.8%
    2. [53]batchfile 0.2%

   (button) c# batchfile
   branch: master (button) new pull request
   [54]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/m
   [55]download zip

downloading...

   want to be notified of new releases in microsoft/fastrdfstore?
   [56]sign in [57]sign up

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [60]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [61]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [62]permalink
   type          name          latest commit message commit time
        failed to load latest commit information.
        [63]fastrdfstore
        [64]fastrdfstoreclient
        [65]freebasetordfstore
        [66]shareddatatypes
        [67]bin
        [68]data
        [69].gitattributes
        [70].gitignore
        [71]fastrdfstore.sln
        [72]license.docx
        [73]license.md
        [74]readme.md

readme.md

#msr fastrdfstore package

overview

   the msr fastrdfstore package is designed for creating an in-memory
   index of rdf triples, implemented as a wcf service in c#, and consists
   of server & client side code. rdf triples are the standard format for
   storing structured id13s. instead of relying on a complete
   sparql server engine to index and serve the data from rdf triples, our
   software package provides the essential functions for traversing the
   id13 in a much more efficient way.

   in addition to the binary executables and the source code, the package
   includes the last dump of freebase
   ([75]freebase-rdf-2015-08-09-00-01.gz), as well as the processed
   version ready to load directly into fastrdfstore. the data release
   needs to be downloaded separately from microsoft download center
   ([76]msr fastrdfstore package - data release). users who would like to
   use the package for freebase do not need to compile the package and
   process the raw data, but instead can run the executables directly. the
   executables can be directly run on windows, or on linux using [77]mono.

   fastrdfstore was originally designed to support the creation of the
   [78]webquestions semantic parses dataset (webqsp). details on this
   dataset can be found at our acl-2016 paper: yih, richardson, meek,
   chang & suh. "[79]the value of semantic parse labeling for knowledge
   base id53."

run fastrdfstore on freebase

   if you just need to run the fastrdfstore wcf server on the freebase
   data provided in this package, simply use the following command to
   start the fastrdfstore server.
     * bin\fastrdfstore.exe -i data

   notice that running the fastrdfstore service to serve this freebase
   data will need about 50gb memory. initializing the server takes about
   14 minutes. once the service starts, you can use the command line
   client tool to test it.
     * bin\fastrdfstoreclient.exe

   by typing an entity id in freebase(i.e., mid), it will output the
   triples where the given mid is the subject. when the object is a cvt
   node, it will output triples with the cvt node as the subject as well.
   below is an example:
enter subject: m.0c5g7w5
common.topic.notable_for                 --> cvt (g.1yg9b9lpq)
    common.notable_for.predicate             --> /type/object/type
    common.notable_for.display_name          --> musical track
                                         --> musical recording
    common.notable_for.object                --> musical recording (m.0kpv11)
    common.notable_for.notable_object        --> musical recording (m.0kpv11)
base.schemastaging.topic_extra.review_webpage --> round_%2526_round_(selena_gome
z_%2526_the_scene_song)
music.recording.contributions            --> cvt (m.0ccbt6k)
    music.track_contribution.track           --> round & round (m.0c5g7w5)
    music.track_contribution.contributor     --> selena gomez (m.0gs6vr)
common.topic.notable_types               --> musical recording (m.0kpv11)
music.recording.producer                 --> kevin rudolf (m.03f5drm)
music.recording.length                   --> 308.0
common.topic.webpage                     --> cvt (m.0ccbrdk)
    common.webpage.resource                  --> wikipedia (m.0ccbrdf)
    common.webpage.category                  --> review (m.09rg1d4)
    common.webpage.topic                     --> round & round (m.0c5g7w5)
kg.object_profile.prominent_type         --> musical track (music.recording)
common.topic.article                     --> cvt (m.0ccbrm8)
    common.document.updated                  --> 2010-07-08t20:12:00.330017z
    common.document.text                     --> \"round & round\" is a song by
american band selena gomez & the scene. the song was written by selena gomez, fe
fe dobson, and cash money's kevin rudolf, who also produced the song. the song i
s an electronica-based dance-pop song with rock and disco beats. it was released
 as the lead single from the band's sophomore album, a year without rain on june
 22, 2010.
    common.document.content                  --> type.object.name
          --> round & round
took 0.071488 seconds to retrieve results

details of projects

   below, we provide more detailed descriptions of the projects, data and
   other folders included in this package.

fastrdfstore

   this is the rdfstore wcf service we provided. available command line
   arguments are:
bin\fastrdfstore.exe -h
fastrdfstore.exe usage:


  -i, --idir      (default: ) directory containing *.bin files
  -s, --server    (default: localhost) server [localhost]
  -p, --port      (default: 9358) connect to the fastrdfstore server on this por
t
  -l, --log       (default: fastrdfstore.log) log file. set to empty to disable
logging
  --help          display this help screen.

   functions supported in this service are defined in the interface file
   ifastrdfstore.cs:
     * string[] getoutboundpredicates(string subjectmid);
       return all the predicates starting with subjectmid. if any
       predicate leads to a cvt node, then all outbound predicates from
       the cvt node are also followed. these predicates are represented by
       a space-delimited string "predicate1 predicate2", where predicate1
       leads from the subjectmid to the cvt node, and predicate2 is a
       predicate off of the cvt node.
     * string[] getentitynames(string[] entmids);
       return the names of given entity ids (entmids). names are
       determined using the "type.object.name" relation for the entity.
     * simplefbobject getsimpleobjectpredicatesandcvts(string subjectmid,
       int maxperpredicate, bool followcvt);
       returns a graph of predicates and objects reachable from the given
       subject. the simplefbobject contains all of predicates of which
       subjectmid is a subject, and for each predicate contains a list of
       all objects reachable by following the predicate from the given
       subject. it will also follow cvt nodes for one hop, if requested.
       that is, if a predicate points to a cvt node, then all outgoing
       predicates from that node (and all corresponding objects) will also
       be returned. note that the same object may be reachable through
       more than one predicate, and is deduplicated in the returned graph.
     * simplefbobject getsimpleobjectfilteredpredicateandobjects(string
       subjectmid, string predicate);
       similar to getsimpleobjectpredicatesandcvts, this returns a graph
       containing predicates and objects reachable from the given
       subjectmid. in this case, it is filtered to objects reachable via
       the given predicate. the predicate may be a space-delimited string
       containing two predicates in order to walk through a cvt node. for
       example, "music.recording.contributions
       music.track_contribution.track".
     * string[][] findnodesquencesonpredicatechain(string startmid,
       string[] chainpredicates);
       return the lists of intermediate nodes connected by the given chain
       of predicates (chainpredicates) starting from the node startmid
     __________________________________________________________________

fastrdfstoreclient

   this command-line client tool is useful for querying the fastrdfstore
   service in either batch or interactive mode. available command line
   arguments are:
bin\fastrdfstoreclient.exe -h
fastrdfstoreclient.exe usage:


  -s, --server        (default: localhost) connect to the fastrdfstore server on
 this server [localhost]
  -p, --port          (default: 9358) connect to the fastrdfstore server on this
 port [9358]
  -d, --dump          dumpmid
  -m, --mid           mid to search for
  -t, --tripleonly    triple only
  --pred              (optional) predicate for filtering
  -c, --chain         predicate chain to search for
  --help              display this help screen.

   when the mid is given, the code is in batch mode and dumps the results
   to standard output. this is useful when using a script to run
   fastrdfstore. arguments --tripleonly and --chain are only valid in
   batch mode; the former outputs only the triples with mid as the subject
   (without expanding the cvt triples) and the latter only outputs nodes
   on a given predicate chain.
     __________________________________________________________________

fasttordfstore

   this is the utility to process the raw freebase dump into binary and
   text data files used by fastrdfstore. for instance, taking the freebase
   dump freebase-rdf-2015-08-09-00-01.gz as the original input file, we
   need to run the following commands to generate the data files.

   zcat freebase-rdf-2015-08-09-00-01.gz > data/freebase-rdf-latest
# preserve only the freebase triples needed
bin\freebasetordfstore.exe -c trimdata -i data -o data

# build the compressed, binary rdf store files
bin\freebasetordfstore.exe -c buildstore -i data -o data

# find ghost entity nodes that no subject nodes can link to
bin\freebasetordfstore.exe -c findghost -i data -o data

   once you have run this sequence of commands, you can run the
   fastrdfstore server on the data directory, as outlined above.
     __________________________________________________________________

notes on compiling using mono

   when using mono to compile fastrdfstore, the package
   commandlineparser.1.9.71 needs to be installed first via nuget.
$ wget http://nuget.org/nuget.exe -p bin
$ mono bin/nuget.exe install fastrdfstore/packages.config -outputdirectory packa
ges

   after that, you can then directly run xbuild.
$ xbuild fastrdfstore.sln

     *    2019 github, inc.
     * [80]terms
     * [81]privacy
     * [82]security
     * [83]status
     * [84]help

     * [85]contact github
     * [86]pricing
     * [87]api
     * [88]training
     * [89]blog
     * [90]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [91]reload to refresh your
   session. you signed out in another tab or window. [92]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/microsoft/fastrdfstore/commits/master.atom
   3. https://github.com/microsoft/fastrdfstore/#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/microsoft/fastrdfstore
  32. https://github.com/join
  33. https://github.com/login?return_to=/microsoft/fastrdfstore
  34. https://github.com/microsoft/fastrdfstore/watchers
  35. https://github.com/login?return_to=/microsoft/fastrdfstore
  36. https://github.com/microsoft/fastrdfstore/stargazers
  37. https://github.com/login?return_to=/microsoft/fastrdfstore
  38. https://github.com/microsoft/fastrdfstore/network/members
  39. https://github.com/microsoft
  40. https://github.com/microsoft/fastrdfstore
  41. https://github.com/microsoft/fastrdfstore
  42. https://github.com/microsoft/fastrdfstore/issues
  43. https://github.com/microsoft/fastrdfstore/pulls
  44. https://github.com/microsoft/fastrdfstore/projects
  45. https://github.com/microsoft/fastrdfstore/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/microsoft/fastrdfstore/commits/master
  48. https://github.com/microsoft/fastrdfstore/branches
  49. https://github.com/microsoft/fastrdfstore/releases
  50. https://github.com/microsoft/fastrdfstore/graphs/contributors
  51. https://github.com/microsoft/fastrdfstore/blob/master/license.md
  52. https://github.com/microsoft/fastrdfstore/search?l=c#
  53. https://github.com/microsoft/fastrdfstore/search?l=batchfile
  54. https://github.com/microsoft/fastrdfstore/find/master
  55. https://github.com/microsoft/fastrdfstore/archive/master.zip
  56. https://github.com/login?return_to=https://github.com/microsoft/fastrdfstore/
  57. https://github.com/join?return_to=/microsoft/fastrdfstore
  58. https://desktop.github.com/
  59. https://desktop.github.com/
  60. https://developer.apple.com/xcode/
  61. https://visualstudio.github.com/
  62. https://github.com/microsoft/fastrdfstore/tree/bbbcad7548b804e4abfdb3733c59ca73658c9e14
  63. https://github.com/microsoft/fastrdfstore/tree/master/fastrdfstore
  64. https://github.com/microsoft/fastrdfstore/tree/master/fastrdfstoreclient
  65. https://github.com/microsoft/fastrdfstore/tree/master/freebasetordfstore
  66. https://github.com/microsoft/fastrdfstore/tree/master/shareddatatypes
  67. https://github.com/microsoft/fastrdfstore/tree/master/bin
  68. https://github.com/microsoft/fastrdfstore/tree/master/data
  69. https://github.com/microsoft/fastrdfstore/blob/master/.gitattributes
  70. https://github.com/microsoft/fastrdfstore/blob/master/.gitignore
  71. https://github.com/microsoft/fastrdfstore/blob/master/fastrdfstore.sln
  72. https://github.com/microsoft/fastrdfstore/blob/master/license.docx
  73. https://github.com/microsoft/fastrdfstore/blob/master/license.md
  74. https://github.com/microsoft/fastrdfstore/blob/master/readme.md
  75. https://developers.google.com/freebase/
  76. https://www.microsoft.com/en-us/download/details.aspx?id=54511
  77. http://www.mono-project.com/
  78. https://www.aka.ms/webqsp
  79. https://aclweb.org/anthology/p/p16/p16-2033.pdf
  80. https://github.com/site/terms
  81. https://github.com/site/privacy
  82. https://github.com/security
  83. https://githubstatus.com/
  84. https://help.github.com/
  85. https://github.com/contact
  86. https://github.com/pricing
  87. https://developer.github.com/
  88. https://training.github.com/
  89. https://github.blog/
  90. https://github.com/about
  91. https://github.com/microsoft/fastrdfstore/
  92. https://github.com/microsoft/fastrdfstore/

   hidden links:
  94. https://github.com/
  95. https://github.com/microsoft/fastrdfstore/
  96. https://github.com/microsoft/fastrdfstore/
  97. https://github.com/microsoft/fastrdfstore/
  98. https://help.github.com/articles/which-remote-url-should-i-use
  99. https://github.com/microsoft/fastrdfstore/#msr-fastrdfstore-package
 100. https://github.com/microsoft/fastrdfstore/#overview
 101. https://github.com/microsoft/fastrdfstore/#run-fastrdfstore-on-freebase
 102. https://github.com/microsoft/fastrdfstore/#details-of-projects
 103. https://github.com/microsoft/fastrdfstore/#fastrdfstore
 104. https://github.com/microsoft/fastrdfstore/#fastrdfstoreclient
 105. https://github.com/microsoft/fastrdfstore/#fasttordfstore
 106. https://github.com/microsoft/fastrdfstore/#notes-on-compiling-using-mono
 107. https://github.com/
