   #[1]github [2]recent commits to stanza:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]41
     * [35]star [36]129
     * [37]fork [38]29

[39]stanfordnlp/[40]stanza

   [41]code [42]issues 1 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   stanford nlp group's shared python tools.
   [47]python [48]nlp [49]text-analysis [50]text-processing
   [51]natural-language-processing
     * [52]323 commits
     * [53]4 branches
     * [54]3 releases
     * [55]fetching contributors
     * [56]apache-2.0

    1. [57]python 98.6%
    2. [58]shell 1.4%

   (button) python shell
   branch: master (button) new pull request
   [59]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/s
   [60]download zip

downloading...

   want to be notified of new releases in stanfordnlp/stanza?
   [61]sign in [62]sign up

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [65]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [66]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [67]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [68]docs
   [69]examples
   [70]stanza [71]fix scikit-learn error in ml.embeddings test oct 2, 2017
   [72]test
   [73].gitignore
   [74].travis.yml [75]pin configargparse to a version sep 8, 2016
   [76]license
   [77]manifest
   [78]readme.rst
   [79]requirements.txt
   [80]setup.id18
   [81]setup.py

readme.rst

stanza

   [82]master build status [83]documentation status

   stanza is the stanford nlp group   s shared repository for python
   infrastructure. the goal of stanza is not to replace your modeling
   tools of choice, but to offer implementations for common patterns
   useful for machine learning experiments.

usage

   you can install the package as follows:
git clone git@github.com:stanfordnlp/stanza.git
cd stanza
pip install -e .

   to use the package, import it in your python code. an example would be:
from stanza.text.vocab import vocab
v = vocab('unk')

   to use the python client for the corenlp server, [84]first launch your
   corenlp java server. then, in your python program:
from stanza.nlp.corenlp import corenlpclient
client = corenlpclient(server='http://localhost:9000', default_annotators=['sspl
it', 'tokenize', 'lemma', 'pos', 'ner'])
annotated = client.annotate('this is an example document. here is a second sente
nce')
for sentence in annotated.sentences:
    print('sentence', sentence)
    for token in sentence:
        print(token.word, token.lemma, token.pos, token.ner)

   please see the documentation for more use cases.

documentation

   documentation is hosted on read the docs at
   [85]http://stanza.readthedocs.org/en/latest/. stanza is still in early
   development. interfaces and code organization will probably change
   substantially over the next few months.

development guide

   to request or discuss additional functionality, please open a github
   issue. we greatly appreciate pull requests!

tests

   stanza has unit tests, doctests, and longer, integration tests. we ask
   that all contributors run the unit tests and doctests before submitting
   pull requests:
python setup.py test

   doctests are the easiest way to write a test for new functionality, and
   serve as helpful examples for how to use your code. see [86]progress.py
   for a simple example of a easily testable module, or [87]summary.py for
   a more involved setup involving a mocked filesystem.

adding a new module

   if you are adding a new module, please remember to add it to setup.py
   as well as a corresponding .rst file in the docs directory.

documentation

   documentation is generated via [88]sphinx using inline comments. this
   means that the docstring in python double both as interactive
   documentation and standalone documentation. this also means that you
   must format your docstring in rst. rst is very similar to markdown.
   there are many tutorials on the exact syntax, essentially you only need
   to know the function parameter syntax which can be found [89]here. you
   can, of course, look at documentations for existing modules for
   guidance as well. a good place to start is the text.dataset package.

   to set up your environment such that you can generate docs locally:
pip install sphinx sphinx-autobuild

   if you introduced a new module, please auto-generate the docs:
sphinx-apidoc -f -o docs stanza
cd docs && make
open _build/html/index.html

   you most likely need to manually edit the rst file corresponding to
   your new module.

   our docs are [90]hosted on readthedocs. if you'd like admin access to
   the readthedocs project, please contact victor or will.

road map

     * common objects used in nlp
          + [x] a vocabulary object mapping from strings to
            integers/vectors
     * tools for running experiments on the nlp cluster
          + [ ] a function for querying gpu device stats (to aid in
            selecting a gpu on the cluster)
          + [ ] a tool for plotting training curves from multiple jobs
          + [ ] a tool for interacting with an already running job via
            edits to a text file
     * [x] an api for calling corenlp

for stanford nlp members

   stanza is not meant to include every research project the group
   undertakes. if you have a standalone project that you would like to
   share with other people in the group, you can:
     * request your own private repo under the [91]stanfordnlp github
       account.
     * share your code on [92]codalab.
     * for targeted questions, ask on [93]stanford nlp overflow (use the
       stanza tag).

using git subtree

   that said, it can be useful to add functionality to stanza while you
   work in a separate repo on a project that depends on stanza. since
   stanza is under active development, you will want to version-control
   the stanza code that your code uses. probably the most effective way of
   accomplishing this is by using git subtree.

   git subtree includes the source tree of another repo (in this case,
   stanza) as a directory within your repo (your cutting-edge research),
   and keeps track of some metadata that allows you to keep that directory
   in sync with the original stanza code. the main advantage of git
   subtree is that you can modify the stanza code locally, merge in
   updates, and push your changes back to the stanza repo to share them
   with the group. (git submodule doesn't allow this.)

   it has some downsides to be aware of:
     * you have a copy of all of stanza as part of your repo. for small
       projects, this could increase your repo size dramatically. (note:
       you can keep the history of your repo from growing at the same rate
       as stanza's by using squashed commits; it's only the size of the
       source tree that unavoidably bloats your project.)
     * your repo's history will contain a merge commit every time you
       update stanza from upstream. this can look ugly, especially in
       graphical viewers.

   still, subtree can be configured to be fairly easy to use, and the
   consensus seems to be that it is superior to submodule
   ([94]https://codingkilledthecat.wordpress.com/2012/04/28/why-your-compa
   ny-shouldnt-use-git-submodules/).

   here's one way to configure subtree so that you can include stanza in
   your repo and contribute your changes back to the master repo:
# add stanza as a remote repo
git remote add stanza http://<your github username>@github.com/stanfordnlp/stanz
a.git
# import the contents of the repo as a subtree
git subtree add --prefix third-party/stanza stanza develop --squash
# put a symlink to the actual module somewhere where your code needs it
ln -s third-party/stanza/stanza stanza
# add aliases for the two things you'll need to do with the subtree
git config alias.stanza-update 'subtree pull --prefix third-party/stanza stanza
develop --squash'
git config alias.stanza-push 'subtree push --prefix third-party/stanza stanza de
velop'

   after this, you can use the aliases to push and pull stanza like so:
git stanza-update
git stanza-push

   i [@futurulus] highly recommend a [95]topic branch/rebase workflow,
   which will keep your history fairly clean besides those pesky subtree
   merge commits:
# create a topic branch
git checkout -b fix-stanza
# <hack hack hack, make some commits>

git checkout master
# update stanza on master, should go smoothly because master doesn't
# have any of your changes yet
git stanza-update

# go back and replay your fixes on top of master changes
git checkout fix-stanza
git rebase master
# you might need to resolve merge conflicts here

# add your rebased changes to master and push
git checkout master
git merge --ff-only fix-stanza
git stanza-push
# done!
git branch -d fix-stanza

     *    2019 github, inc.
     * [96]terms
     * [97]privacy
     * [98]security
     * [99]status
     * [100]help

     * [101]contact github
     * [102]pricing
     * [103]api
     * [104]training
     * [105]blog
     * [106]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [107]reload to refresh your
   session. you signed out in another tab or window. [108]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/stanfordnlp/stanza/commits/master.atom
   3. https://github.com/stanfordnlp/stanza#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/stanfordnlp/stanza
  32. https://github.com/join
  33. https://github.com/login?return_to=/stanfordnlp/stanza
  34. https://github.com/stanfordnlp/stanza/watchers
  35. https://github.com/login?return_to=/stanfordnlp/stanza
  36. https://github.com/stanfordnlp/stanza/stargazers
  37. https://github.com/login?return_to=/stanfordnlp/stanza
  38. https://github.com/stanfordnlp/stanza/network/members
  39. https://github.com/stanfordnlp
  40. https://github.com/stanfordnlp/stanza
  41. https://github.com/stanfordnlp/stanza
  42. https://github.com/stanfordnlp/stanza/issues
  43. https://github.com/stanfordnlp/stanza/pulls
  44. https://github.com/stanfordnlp/stanza/projects
  45. https://github.com/stanfordnlp/stanza/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/python
  48. https://github.com/topics/nlp
  49. https://github.com/topics/text-analysis
  50. https://github.com/topics/text-processing
  51. https://github.com/topics/natural-language-processing
  52. https://github.com/stanfordnlp/stanza/commits/master
  53. https://github.com/stanfordnlp/stanza/branches
  54. https://github.com/stanfordnlp/stanza/releases
  55. https://github.com/stanfordnlp/stanza/graphs/contributors
  56. https://github.com/stanfordnlp/stanza/blob/master/license
  57. https://github.com/stanfordnlp/stanza/search?l=python
  58. https://github.com/stanfordnlp/stanza/search?l=shell
  59. https://github.com/stanfordnlp/stanza/find/master
  60. https://github.com/stanfordnlp/stanza/archive/master.zip
  61. https://github.com/login?return_to=https://github.com/stanfordnlp/stanza
  62. https://github.com/join?return_to=/stanfordnlp/stanza
  63. https://desktop.github.com/
  64. https://desktop.github.com/
  65. https://developer.apple.com/xcode/
  66. https://visualstudio.github.com/
  67. https://github.com/stanfordnlp/stanza/tree/920c55d8eaa1e7105971059c66eb448a74c100d6
  68. https://github.com/stanfordnlp/stanza/tree/master/docs
  69. https://github.com/stanfordnlp/stanza/tree/master/examples
  70. https://github.com/stanfordnlp/stanza/tree/master/stanza
  71. https://github.com/stanfordnlp/stanza/commit/920c55d8eaa1e7105971059c66eb448a74c100d6
  72. https://github.com/stanfordnlp/stanza/tree/master/test
  73. https://github.com/stanfordnlp/stanza/blob/master/.gitignore
  74. https://github.com/stanfordnlp/stanza/blob/master/.travis.yml
  75. https://github.com/stanfordnlp/stanza/commit/c5ad63122e708dfac5370dea9de70b1e73d53a5b
  76. https://github.com/stanfordnlp/stanza/blob/master/license
  77. https://github.com/stanfordnlp/stanza/blob/master/manifest
  78. https://github.com/stanfordnlp/stanza/blob/master/readme.rst
  79. https://github.com/stanfordnlp/stanza/blob/master/requirements.txt
  80. https://github.com/stanfordnlp/stanza/blob/master/setup.id18
  81. https://github.com/stanfordnlp/stanza/blob/master/setup.py
  82. https://travis-ci.org/stanfordnlp/stanza
  83. http://stanza.readthedocs.org/en/latest/?badge=latest
  84. https://stanfordnlp.github.io/corenlp/corenlp-server.html
  85. http://stanza.readthedocs.org/en/latest/
  86. https://github.com/stanfordnlp/stanza/blob/master/stanza/research/progress.py
  87. https://github.com/stanfordnlp/stanza/blob/master/stanza/research/summary.py
  88. http://www.sphinx-doc.org/en/stable/
  89. http://thomas-cokelaer.info/tutorials/sphinx/rest_syntax.html#auto-document-your-python-code
  90. https://readthedocs.org/projects/stanza/
  91. https://github.com/stanfordnlp
  92. https://codalab.stanford.edu/
  93. http://nlp.stanford.edu/local/qa/
  94. https://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/
  95. https://randyfay.com/content/rebase-workflow-git
  96. https://github.com/site/terms
  97. https://github.com/site/privacy
  98. https://github.com/security
  99. https://githubstatus.com/
 100. https://help.github.com/
 101. https://github.com/contact
 102. https://github.com/pricing
 103. https://developer.github.com/
 104. https://training.github.com/
 105. https://github.blog/
 106. https://github.com/about
 107. https://github.com/stanfordnlp/stanza
 108. https://github.com/stanfordnlp/stanza

   hidden links:
 110. https://github.com/
 111. https://github.com/stanfordnlp/stanza
 112. https://github.com/stanfordnlp/stanza
 113. https://github.com/stanfordnlp/stanza
 114. https://help.github.com/articles/which-remote-url-should-i-use
 115. https://github.com/stanfordnlp/stanza#stanza
 116. https://github.com/stanfordnlp/stanza#usage
 117. https://github.com/stanfordnlp/stanza#documentation
 118. https://github.com/stanfordnlp/stanza#development-guide
 119. https://github.com/stanfordnlp/stanza#tests
 120. https://github.com/stanfordnlp/stanza#adding-a-new-module
 121. https://github.com/stanfordnlp/stanza#documentation-1
 122. https://github.com/stanfordnlp/stanza#road-map
 123. https://github.com/stanfordnlp/stanza#for-stanford-nlp-members
 124. https://github.com/stanfordnlp/stanza#using-git-subtree
 125. https://github.com/
