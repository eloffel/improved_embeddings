   #[1]giuseppe bonaccorso    feed [2]giuseppe bonaccorso    comments feed
   [3]giuseppe bonaccorso    ml algorithms addendum: hopfield networks
   comments feed [4]alternate [5]alternate

[6]giuseppe bonaccorso

   artificial intelligence     machine learning     data science
   (button)

     * [7]blog
     * [8]books
     * [9]resume / cv
     * [10]bonaccorso   s law
     * [11]essays
     * [12]contact
     * [13]testimonials
     * [14]gallery
     * [15]disclaimer

     * [16]blog
     * [17]books
     * [18]resume / cv
     * [19]bonaccorso   s law
     * [20]essays
     * [21]contact
     * [22]testimonials
     * [23]gallery
     * [24]disclaimer

ml algorithms addendum: hopfield networks

   [25]09/20/201709/30/2017[26]artificial intelligence, [27]computational
   neuroscience, [28]deep learning, [29]generic, [30]machine learning,
   [31]machine learning algorithms addenda, [32]neural networks,
   [33]python[34]2 comments

   hopfield networks (named after the scientist [35]john hopfield) are a
   family of recurrent neural networks with bipolar thresholded neurons.
   even if they are have replaced by more efficient models, they represent
   an excellent example of associative memory, based on the shaping of an
   energy surface. in the following picture, there   s the generic schema of
   a hopfield network with 3 neurons:

   conventionally the synaptic weights obey the following conditions:

   if we have n neurons, also the generic input vector must be n-dimension
   and bipolar (-1 and 1 values).the activation function for each neuron
   is hence defined as:

   in the previous formula the threshold for each neuron is represented by
      (a common value is 0, that implies a strong symmetry). contrary to
   mlp, in this kind of networks, there   s no separation between input and
   output layers. each unit can receive its input value, processes it and
   outputs the result. according to the original theory, it   s possible to
   update the network in two ways:
     * synchronous: all units compute their activation at the same time
     * asynchronous: the units compute the activations following a fixed
       or random sequence

   the first approach is less biologically plausible and most of the
   efforts were focused on the second strategy. at this point, it   s useful
   to introduce another concept, which is peculiar to this kind of
   networks: an energy function. we can define the energy of a hopfield
   network as:

   if the weights are null and no input is applied, e = 0, which is the
   initial condition for every network. however, we need to employ this
   model as associative memory, therefore our task is to    reshape    the
   energy surface, so to store the patterns (attractors) in the local
   minima of e:

   to determine the optimal learning rule, we need to consider that a new
   pattern has to reduce the total energy, finding an existing or a new
   local minimum that can be representative of its structure. let   s
   consider a network that has already stored m patterns. we can rewrite
   the energy (for simplicity, we can set all threshold to zero) to
   separate the    old    part from the one due the new pattern:


   in order to reduce the global energy we need to increase the absolute
   value of the second term. it   s easy to understand that, choosing:

   the second term becomes:

   which is always non positive and, therefore, contributes to reduce the
   total energy. this conclusion allows to define the learning rule for a
   hopfield network (which is actually an extended hebbian rule):

   one the worst drawbacks of hopfield networks is the capacity. in fact,
   hertz, krogh and palmer (in [36]introdution to theory of neural
   computation) have proven that a bipolar network with n>>1 neurons can
   permanently store max 0.138n patterns (about 14%) with an error
   id203 less than 0.36%. this means, for example, that we at least
   138 neurons to store the digits 0 to 9.

   let   s see a simple example written in python (the code can be
   vectorized in order to improve the performances) with four basic 4  4
   patterns:

   the code is available on this [37]gist:
   view the code on [38]gist.

   we have trained the network and proposed a corrupted pattern that has
   been attracted by the nearest energy local minimum where the original
   version has been stored:

   it   s also possible to implement a stochastic process based on a
   id203 distribution obtained using the sigmoid function. in this
   case, each neuron (the threshold is set to null) is activated according
   to the id203:

   the parameter    is related to the boltzmann distribution is normally
   considered as the reciprocal of the absolute temperature. if t >> 1,  
   is close to 0 the p is about 0.5. when t decreases,   increases and p
   approaches to value 1. for our purposes, it   s possible to set it to 1.
   the process is very similar to the one already explained, with the
   difference that the activation of a neuron is random. once p(n=1) has
   been computed, it   s possible to sample a value from a uniform
   distribution (for example, between 0 and 1) and check whether the value
   is less than p(n=1). if it is, the neuron is activated (state = 1)
   otherwise it   s state is set to -1. the process must be iterated for a
   fixed number of times or until the pattern becomes stable.

   for any further information, i suggest:
     * hertz j.a, krogh a.s., [39]palmer r.g, introduction to the theory
       of neural computation, santa fe institute series

   see also:

[40]ml algorithms addendum: hebbian learning     giuseppe bonaccorso

     hebbian learning is one the most famous learning theories, proposed
     by the canadian psychologist donald hebb in 1949, many years before
     his results were confirmed through neuroscientific experiments.

share:

     * [41]click to share on twitter (opens in new window)
     * [42]click to share on facebook (opens in new window)
     * [43]click to share on linkedin (opens in new window)
     * [44]click to share on pocket (opens in new window)
     * [45]click to share on tumblr (opens in new window)
     * [46]click to share on reddit (opens in new window)
     * [47]click to share on pinterest (opens in new window)
     * [48]click to share on skype (opens in new window)
     * [49]click to share on whatsapp (opens in new window)
     * [50]click to share on telegram (opens in new window)
     * [51]click to email this to a friend (opens in new window)
     * [52]click to print (opens in new window)
     *

you can also be interested in these articles:

   [53]deep learning[54]machine learning[55]neural networks[56]python

post navigation

   [57]quickprop: an almost forgotten neural training algorithm
   [58]elon musk   s ai    child warning    marketing approach

2 thoughts on    ml algorithms addendum: hopfield networks   

    1. mence
       04/26/2018 at 1:39
       an awesome stuff! thank you for posting!
       [59]reply
          + [60]giuseppe bonaccorso
            04/26/2018 at 9:03
            thanks!
            [61]reply

leave a reply [62]cancel reply

   iframe: [63]jetpack_remote_comment

follow me

     * [64]linkedin
     * [65]twitter
     * [66]facebook
     * [67]github
     * [68]instagram
     * [69]amazon
     * [70]medium
     * [71]rss

search articles

   ____________________ (button)

latest blog posts

     * [72]machine learning algorithms     second edition 08/28/2018
     * [73]recommendations and user-profiling from implicit feedbacks
       07/10/2018
     * [74]are recommendations really helpful? a brief non-technical
       discussion 06/29/2018
     * [75]a book that every data scientist should read 06/22/2018
     * [76]mastering machine learning algorithms 05/24/2018

subscribe to this blog

   join 2,190 other subscribers

   email ____________________

   subscribe

follow me on twitter

   [77]my tweets

   copyright    2019 [78]giuseppe bonaccorso. all rights reserved.
   [79]privacy policy - [80]cookie policy

   send to email address ____________________ your name
   ____________________ your email address ____________________
   _________________________ loading send email [81]cancel
   post was not sent - check your email addresses!
   email check failed, please try again
   sorry, your blog cannot share posts by email.

references

   visible links
   1. https://www.bonaccorso.eu/feed/
   2. https://www.bonaccorso.eu/comments/feed/
   3. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/feed/
   4. https://www.bonaccorso.eu/wp-json/oembed/1.0/embed?url=https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/
   5. https://www.bonaccorso.eu/wp-json/oembed/1.0/embed?url=https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/&format=xml
   6. https://www.bonaccorso.eu/
   7. https://www.bonaccorso.eu/blog/
   8. https://www.bonaccorso.eu/books/
   9. https://www.bonaccorso.eu/resume/
  10. https://www.bonaccorso.eu/bonaccorso-law/
  11. https://www.bonaccorso.eu/ai-cognitive-pychology-essays-italian/
  12. https://www.bonaccorso.eu/contact/
  13. https://www.bonaccorso.eu/testimonials/
  14. https://www.bonaccorso.eu/gallery/
  15. https://www.bonaccorso.eu/disclaimer/
  16. https://www.bonaccorso.eu/blog/
  17. https://www.bonaccorso.eu/books/
  18. https://www.bonaccorso.eu/resume/
  19. https://www.bonaccorso.eu/bonaccorso-law/
  20. https://www.bonaccorso.eu/ai-cognitive-pychology-essays-italian/
  21. https://www.bonaccorso.eu/contact/
  22. https://www.bonaccorso.eu/testimonials/
  23. https://www.bonaccorso.eu/gallery/
  24. https://www.bonaccorso.eu/disclaimer/
  25. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/
  26. https://www.bonaccorso.eu/category/generic/artificial-intelligence/
  27. https://www.bonaccorso.eu/category/computational-neuroscience/
  28. https://www.bonaccorso.eu/category/machine-learning/deep-learning/
  29. https://www.bonaccorso.eu/category/generic/
  30. https://www.bonaccorso.eu/category/machine-learning/
  31. https://www.bonaccorso.eu/category/machine-learning/machine-learning-algorithms-addenda/
  32. https://www.bonaccorso.eu/category/machine-learning/neural-networks/
  33. https://www.bonaccorso.eu/category/software/python/
  34. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/#comments
  35. https://en.wikipedia.org/wiki/john_hopfield
  36. https://www.amazon.com/introduction-theory-neural-computation-institute/dp/0201515601
  37. https://gist.github.com/giuseppebonaccorso/36b6a7eac1a3e54063ea96aa48ba4acf
  38. https://gist.github.com/giuseppebonaccorso/36b6a7eac1a3e54063ea96aa48ba4acf
  39. https://www.amazon.com/introduction-theory-neural-computation-institute/dp/0201515601/ref=sr_1_1?ie=utf8&qid=1505914869&sr=8-1&keywords=hertz+krogh+palmer
  40. https://www.bonaccorso.eu/2017/08/21/ml-algorithms-addendum-hebbian-learning/
  41. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=twitter
  42. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=facebook
  43. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=linkedin
  44. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=pocket
  45. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=tumblr
  46. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=reddit
  47. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=pinterest
  48. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=skype
  49. https://api.whatsapp.com/send?text=ml algorithms addendum: hopfield networks https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/
  50. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=telegram
  51. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/?share=email
  52. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/#print
  53. https://www.bonaccorso.eu/tag/deep-learning/
  54. https://www.bonaccorso.eu/tag/machine-learning/
  55. https://www.bonaccorso.eu/tag/neural-networks/
  56. https://www.bonaccorso.eu/tag/python/
  57. https://www.bonaccorso.eu/2017/09/15/quickprop-an-almost-forgotten-neural-training-algorithm/
  58. https://www.bonaccorso.eu/2017/09/21/elon-musks-ai-child-warning-marketing-approach/
  59. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/#comment-85
  60. https://www.bonaccorso.eu/
  61. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/#comment-86
  62. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/#respond
  63. https://jetpack.wordpress.com/jetpack-comment/?blogid=100107841&postid=1376&comment_registration=0&require_name_email=1&stc_enabled=1&stb_enabled=1&show_avatars=1&avatar_default=gravatar_default&greeting=leave+a+reply&greeting_reply=leave+a+reply+to+%s&color_scheme=light&lang=en_us&jetpack_version=7.0.1&show_cookie_consent=10&has_cookie_consent=0&sig=0a7cb9b8e7af0f53c1f605edc0a5633fb0aa790b#parent=https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/
  64. https://www.linkedin.com/in/giuseppebonaccorso/
  65. https://twitter.com/giuseppeb/
  66. https://www.facebook.com/giuseppe.bonaccorso/
  67. https://github.com/giuseppebonaccorso/
  68. https://www.instagram.com/giuseppebonaccorso/
  69. https://www.amazon.com/author/giuseppebonaccorso
  70. https://medium.com/@giuseppe.bonaccorso
  71. https://www.bonaccorso.eu/feed/
  72. https://www.bonaccorso.eu/2018/08/28/machine-learning-algorithms-second-edition/
  73. https://www.bonaccorso.eu/2018/07/10/recommendations-user-profiling-implicit-feedbacks/
  74. https://www.bonaccorso.eu/2018/06/29/recommendations-really-helpful-brief-non-technical-discussion/
  75. https://www.bonaccorso.eu/2018/06/22/a-book-that-every-data-scientist-should-read/
  76. https://www.bonaccorso.eu/2018/05/24/mastering-machine-learning-algorithms/
  77. https://twitter.com/giuseppeb
  78. https://www.bonaccorso.eu/
  79. https://www.iubenda.com/privacy-policy/331721
  80. https://www.iubenda.com/privacy-policy/331721/cookie-policy
  81. https://www.bonaccorso.eu/2017/09/20/ml-algorithms-addendum-hopfield-networks/#cancel

   hidden links:
  83. https://www.bonaccorso.eu/category/machine-learning/machine-learning-algorithms-addenda/
