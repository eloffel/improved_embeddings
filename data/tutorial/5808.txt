   #[1]giuseppe bonaccorso    feed [2]giuseppe bonaccorso    comments feed
   [3]giuseppe bonaccorso    a model-free collaborative recommendation
   system in 20 lines of python code comments feed [4]alternate
   [5]alternate

[6]giuseppe bonaccorso

   artificial intelligence     machine learning     data science
   (button)

     * [7]blog
     * [8]books
     * [9]resume / cv
     * [10]bonaccorso   s law
     * [11]essays
     * [12]contact
     * [13]testimonials
     * [14]gallery
     * [15]disclaimer

     * [16]blog
     * [17]books
     * [18]resume / cv
     * [19]bonaccorso   s law
     * [20]essays
     * [21]contact
     * [22]testimonials
     * [23]gallery
     * [24]disclaimer

a model-free collaborative id126 in 20 lines of python code

   [25]09/13/201709/30/2017[26]artificial intelligence, [27]generic,
   [28]machine learning, [29]machine learning algorithms addenda,
   [30]python, [31]scikit-learn[32]no comments

   model-free id185 is a    lightweight    approach to
   id126s. it   s always based on the implicit
      collaboration    (in terms of ratings) among users, but it is computed
   in-memory without the usage of complex algorithms like
   [33]als (alternating least squares) that can be executed in parallel
   environment (like spark).

   if we assume to have n users and m products, it   s possible to define a
   user-preference sparse matrix:

   each element represents the rating given by the user i to the item j (0
   means that no rating has been provided). to face the differences
   belonging to many different contexts, it   s useful to define two kinds
   of ratings (or feedbacks):
     * explicit feedback: an actual rating (like 3 stars or 8 out of 10)
     * implicit feedback: a page view, song play, move play and so forth

   the different kind of feedback determines also the best metric to
   compare users. in fact, once the user preference matrix has been
   populated, it   s necessary to compute the affinity matrix based on a
   similarity metric (the most common is the euclidean one):

   this matrix is built considering the rows of upref. in particular,
   upref[i] represents the preference vector (over all products) for the
   user i.

   when the feedback is explicit, it can be useful to keep using the
   euclidean metric, but when it   s implicit, it can a different meaning
   and it can be better to pick another metric function. for example, if
   we use a binary encoding for the feedback (0 means no interaction and 1
   a single or multiple interaction), we could be interested in
   considering two users similar when they have the same amount of
   interactions (page views, song/movie plays,    ), therefore the hamming
   distance can be more appropriate.

   in this implementation, i   ve used scikit-learn for computing the
   pairwise distances, but there are also other interesting solutions like
   crab ([34]http://muricoca.github.io/crab/). the source code is also
   available in this [35]gist.
   view the code on [36]gist.

   once the list of top neighbors has been determined, it   s possible to
   suggest the top-k products selecting them from the union of the most
   rated    neighbor    products:

   the predicted rating for a suggested item can be obtained as the
   weighted average of the neighborhood. for example, it   s possible to
   determine a weigh vector using a softmax function:

   alpha is a id172 parameter introduced to avoid an overflow when
   the distances are too large. the weight vector is referred to the
   subset of suggested items. the average rating is obtained as:

   of course, this is only a possibility, and the reader can employ
   different techniques to compute the expected rating. for example, it   s
   possible to use a radial basis function with a low variance to penalize
   the contributions given by the most distant elements. at the same time,
   it   s possible to implement different affinities for the same task,
   evaluating the difference in the suggested products. a recommender
   isn   t seldom based on a    off-the-shelf    solution because of the
   intrinsic diversities in several business contexts, therefore i always
   suggest to try various alternatives before making the final decision.

   see also:

[37]svd recommendations using tensorflow     giuseppe bonaccorso

     id126 based on the user-item id105
     have become more and more important thanks to powerful and
     distributable algorithms like als, but sometimes the number of users
     and/or items is not so huge and the computation can be done using
     directly a svd (singular value decomposition) algorithm.

share:

     * [38]click to share on twitter (opens in new window)
     * [39]click to share on facebook (opens in new window)
     * [40]click to share on linkedin (opens in new window)
     * [41]click to share on pocket (opens in new window)
     * [42]click to share on tumblr (opens in new window)
     * [43]click to share on reddit (opens in new window)
     * [44]click to share on pinterest (opens in new window)
     * [45]click to share on skype (opens in new window)
     * [46]click to share on whatsapp (opens in new window)
     * [47]click to share on telegram (opens in new window)
     * [48]click to email this to a friend (opens in new window)
     * [49]click to print (opens in new window)
     *

you can also be interested in these articles:

   [50]machine learning[51]python[52]recommendations[53]scikit-learn

post navigation

   [54]artificial intelligence is a matter of language
   [55]quickprop: an almost forgotten neural training algorithm

0 thoughts on    a model-free collaborative id126 in 20 lines
of python code   

    1. [56]jayaraj chanku
       02/14/2018 at 18:01
       great information. thanks for sharing this amazing guidelines. this
       article really helped me to gather what i was searching for. thank
       you once again.
       [57]reply

leave a reply [58]cancel reply

   iframe: [59]jetpack_remote_comment

follow me

     * [60]linkedin
     * [61]twitter
     * [62]facebook
     * [63]github
     * [64]instagram
     * [65]amazon
     * [66]medium
     * [67]rss

search articles

   ____________________ (button)

latest blog posts

     * [68]machine learning algorithms     second edition 08/28/2018
     * [69]recommendations and user-profiling from implicit feedbacks
       07/10/2018
     * [70]are recommendations really helpful? a brief non-technical
       discussion 06/29/2018
     * [71]a book that every data scientist should read 06/22/2018
     * [72]mastering machine learning algorithms 05/24/2018

subscribe to this blog

   join 2,190 other subscribers

   email ____________________

   subscribe

follow me on twitter

   [73]my tweets

   copyright    2019 [74]giuseppe bonaccorso. all rights reserved.
   [75]privacy policy - [76]cookie policy

   send to email address ____________________ your name
   ____________________ your email address ____________________
   _________________________ loading send email [77]cancel
   post was not sent - check your email addresses!
   email check failed, please try again
   sorry, your blog cannot share posts by email.

references

   visible links
   1. https://www.bonaccorso.eu/feed/
   2. https://www.bonaccorso.eu/comments/feed/
   3. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/feed/
   4. https://www.bonaccorso.eu/wp-json/oembed/1.0/embed?url=https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/
   5. https://www.bonaccorso.eu/wp-json/oembed/1.0/embed?url=https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/&format=xml
   6. https://www.bonaccorso.eu/
   7. https://www.bonaccorso.eu/blog/
   8. https://www.bonaccorso.eu/books/
   9. https://www.bonaccorso.eu/resume/
  10. https://www.bonaccorso.eu/bonaccorso-law/
  11. https://www.bonaccorso.eu/ai-cognitive-pychology-essays-italian/
  12. https://www.bonaccorso.eu/contact/
  13. https://www.bonaccorso.eu/testimonials/
  14. https://www.bonaccorso.eu/gallery/
  15. https://www.bonaccorso.eu/disclaimer/
  16. https://www.bonaccorso.eu/blog/
  17. https://www.bonaccorso.eu/books/
  18. https://www.bonaccorso.eu/resume/
  19. https://www.bonaccorso.eu/bonaccorso-law/
  20. https://www.bonaccorso.eu/ai-cognitive-pychology-essays-italian/
  21. https://www.bonaccorso.eu/contact/
  22. https://www.bonaccorso.eu/testimonials/
  23. https://www.bonaccorso.eu/gallery/
  24. https://www.bonaccorso.eu/disclaimer/
  25. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/
  26. https://www.bonaccorso.eu/category/generic/artificial-intelligence/
  27. https://www.bonaccorso.eu/category/generic/
  28. https://www.bonaccorso.eu/category/machine-learning/
  29. https://www.bonaccorso.eu/category/machine-learning/machine-learning-algorithms-addenda/
  30. https://www.bonaccorso.eu/category/software/python/
  31. https://www.bonaccorso.eu/category/machine-learning/scikit-learn/
  32. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/#comments
  33. https://www.google.de/url?sa=t&rct=j&q=&esrc=s&source=web&cd=5&cad=rja&uact=8&ved=0ahukewj_vjtc-qhwahxbzxqkhsufaluqfgg-maq&url=https://stanford.edu/~rezab/classes/cme323/s15/notes/lec14.pdf&usg=afqjcnez9asg1idco3w41xyzy3r8qsyluw
  34. https://muricoca.github.io/crab/
  35. https://gist.github.com/giuseppebonaccorso/65eed3fb5f745d7b4e13fb99b263ac2e
  36. https://gist.github.com/giuseppebonaccorso/65eed3fb5f745d7b4e13fb99b263ac2e
  37. https://www.bonaccorso.eu/2017/08/02/svd-recommendations-using-tensorflow/
  38. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=twitter
  39. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=facebook
  40. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=linkedin
  41. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=pocket
  42. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=tumblr
  43. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=reddit
  44. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=pinterest
  45. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=skype
  46. https://api.whatsapp.com/send?text=a model-free collaborative id126 in 20 lines of python code https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/
  47. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=telegram
  48. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/?share=email
  49. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/#print
  50. https://www.bonaccorso.eu/tag/machine-learning/
  51. https://www.bonaccorso.eu/tag/python/
  52. https://www.bonaccorso.eu/tag/recommendations/
  53. https://www.bonaccorso.eu/tag/scikit-learn/
  54. https://www.bonaccorso.eu/2017/09/11/artificial-intelligence-is-a-matter-of-language/
  55. https://www.bonaccorso.eu/2017/09/15/quickprop-an-almost-forgotten-neural-training-algorithm/
  56. http://strontium.biz/
  57. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/#comment-75
  58. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/#respond
  59. https://jetpack.wordpress.com/jetpack-comment/?blogid=100107841&postid=1325&comment_registration=0&require_name_email=1&stc_enabled=1&stb_enabled=1&show_avatars=1&avatar_default=gravatar_default&greeting=leave+a+reply&greeting_reply=leave+a+reply+to+%s&color_scheme=light&lang=en_us&jetpack_version=7.0.1&show_cookie_consent=10&has_cookie_consent=0&sig=095da72f553e47f1cc3dc1fe35560c87e4fd00c6#parent=https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/
  60. https://www.linkedin.com/in/giuseppebonaccorso/
  61. https://twitter.com/giuseppeb/
  62. https://www.facebook.com/giuseppe.bonaccorso/
  63. https://github.com/giuseppebonaccorso/
  64. https://www.instagram.com/giuseppebonaccorso/
  65. https://www.amazon.com/author/giuseppebonaccorso
  66. https://medium.com/@giuseppe.bonaccorso
  67. https://www.bonaccorso.eu/feed/
  68. https://www.bonaccorso.eu/2018/08/28/machine-learning-algorithms-second-edition/
  69. https://www.bonaccorso.eu/2018/07/10/recommendations-user-profiling-implicit-feedbacks/
  70. https://www.bonaccorso.eu/2018/06/29/recommendations-really-helpful-brief-non-technical-discussion/
  71. https://www.bonaccorso.eu/2018/06/22/a-book-that-every-data-scientist-should-read/
  72. https://www.bonaccorso.eu/2018/05/24/mastering-machine-learning-algorithms/
  73. https://twitter.com/giuseppeb
  74. https://www.bonaccorso.eu/
  75. https://www.iubenda.com/privacy-policy/331721
  76. https://www.iubenda.com/privacy-policy/331721/cookie-policy
  77. https://www.bonaccorso.eu/2017/09/13/a-model-free-collaborative-recommendation-system-in-20-lines-of-python/#cancel

   hidden links:
  79. https://www.bonaccorso.eu/category/machine-learning/machine-learning-algorithms-addenda/
