   #[1]github [2]recent commits to datavec:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

   this repository has been archived by the owner. it is now read-only.
     * [33]watch [34]40
     * [35]star [36]240
     * [37]fork [38]171

[39]deeplearning4j/[40]datavec

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 1 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   etl library for machine learning - data pipelines, data munging and
   wrangling
   [47]etl [48]spark [49]machine-learning [50]transformations [51]id166light
   [52]hadoop-ecosystem [53]writables [54]schema [55]pipeline
   [56]formatter [57]datapipeline [58]data-munging
     * [59]1,241 commits
     * [60]30 branches
     * [61]13 releases
     * [62]fetching contributors
     * [63]apache-2.0

    1. [64]java 98.9%
    2. other 1.1%

   (button) java other
   branch: master
   [65]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/d
   [66]download zip

downloading...

   want to be notified of new releases in deeplearning4j/datavec?
   [67]sign in [68]sign up

launching github desktop...

   if nothing happens, [69]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [70]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [71]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [72]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [73]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [74].github
   [75]ci [76]update to javacpp and javacv 1.4 ([77]#486[78]) jan 20, 2018
   [79]contrib
   [80]datavec-api [81]update to reflect new nd4j changes may 19, 2018
   [82]datavec-arrow [83]update to reflect new nd4j changes may 19, 2018
   [84]datavec-camel [85]update to version 1.0.0-snapshot may 16, 2018
   [86]datavec-data [87]update to reflect new nd4j changes may 19, 2018
   [88]datavec-excel [89]update to version 1.0.0-snapshot may 16, 2018
   [90]datavec-geo [91]update to version 1.0.0-snapshot may 16, 2018
   [92]datavec-hadoop
   [93]datavec-jdbc [94]update to version 1.0.0-snapshot may 16, 2018
   [95]datavec-local [96]update to version 1.0.0-snapshot may 16, 2018
   [97]datavec-perf
   [98]datavec-spark-id136-parent
   [99]datavec-spark [100]update to reflect new nd4j changes may 19, 2018
   [101].gitignore [102]version check support aug 7, 2017
   [103].travis.yml
   [104]jenkinsfile
   [105]license
   [106]readme.md
   [107]version
   [108]buildmultiplescalaversions.sh
   [109]change-scala-versions.sh
   [110]change-spark-versions.sh [111]fix change-spark-versions script jun
   19, 2017
   [112]perform-release.sh
   [113]pom.xml
   [114]runtests.sh

readme.md

important: this repository has been archived and datavec has been moved

   datavec has been migrated to a sub-module of the mono-repository here:
   [115]https://github.com/deeplearning4j/deeplearning4j all future
   development will continue at that repository, which should be used for
   all issues and pull requests.

datavec

   [116]join the chat at https://gitter.im/deeplearning4j/deeplearning4j
   [117]maven central [118]javadoc

   datavec is an apache 2.0-licensed library for machine-learning etl
   (extract, transform, load) operations. datavec's purpose is to
   transform raw data into usable vector formats that can be fed to
   machine learning algorithms. by contributing code to this repository,
   you agree to make your contribution available under an apache 2.0
   license.

why would i use datavec?

   data handling is sometimes messy, and we believe it should be distinct
   from high-performance algebra libraries (such as [119]nd4j or
   [120]deeplearning4j).

   datavec allows a practitioner to take raw data and produce open
   standard compliant vectorized data (id166light, etc) quickly. current
   input data types supported out of the box:
     * csv data
     * raw text data (tweets, text documents, etc)
     * image data
     * libid166
     * id166light
     * matlab (mat) format
     * json, xml, yaml, xml

   datavec draws inspiration from a lot of the hadoop ecosystem tools, and
   in particular accesses data on disk through the hadoop api (like spark
   does), which means it's compatible with many records

   datavec also includes sophisticated functionality for feature
   engineering, data cleaning and data id172 both for static data
   and for sequences (time series). such operations can be executed on
   [121]apache spark using datavec-spark.

datavec's architecture : api, transforms and filters, and schema management

   apart from obviously providing readers for classic data formats,
   datavec also provides an interface. so if you wanted to ingest specific
   custom data, you don't have to do the whole pipeline, you just have to
   do the very first step. you describe through the api how your data fits
   into a common format that complies with the interface, in this case,
   datavec will return a list of writables for each record. you'll find
   more detail on the api in the corresponding [122]module.

   another thing you can do with datavec is data cleaning functionality.
   instead of having clean ready-to-go data, say you start with maybe data
   in different forms or from different sources. you might need to do
   sampling, filtering, or several of all those incredibly messy etl tasks
   that you need to prepare data in the real world. datavec offers filters
   and transformations that help with curating, preparing and massaging
   your data. it leverages apache spark to do this at scale.

   finally, datavec tracks a schema for your columnar data, across all
   transformations. this schema is actively checked through probing, and
   datavec will raise exceptions if your data does not match the schema.
   you can specify filters as well: you can attach a regular expression to
   an input column of type string, for example, and datavec will only keep
   data that matches this filter

on distribution

   distributed treatment through apache spark is entirely optional,
   including running spark in local-mode (where your cluster is emulated
   with multi-threading) when necessary. datavec aims to abstract away
   from the actual execution and create at compile time, a logical set of
   operations to execute. while we have some code that uses spark, we do
   not want to be locked into a single tool, and using [123]apache flink
   or [124]beam are possibilities, on which we would welcome
   collaboration.

examples

   examples for using datavec are available here:
   [125]https://github.com/deeplearning4j/dl4j-examples
     __________________________________________________________________

contribute

where to contribute?

   we have a lot on the pipeline, and even more we'd love to receive
   contributions. we want to support representing data as more than a
   collection of simple types ("writables"), and rather as binary data    
   that will help with gc pressure across our pipelines and fit better
   with media-based uses cases, where columnar data is not essential. we
   also expect it will streamline a lot of the specialized operations we
   now do on primitive types.

   with that being said, an area that could welcome a first contribution
   is the implementations of the recordreader interface, since this is
   relatively self-contained. of note, to support most of the distributed
   file formats of the hadoop ecosystem, we use [126]apache camel. camel
   supports a [127]pluggable dataformat to allow messages to be marshalled
   to and from binary or text formats to support a kind of message
   translator.

   another area that is relatively self-contained is transformations,
   where you might find a filter or data munging operation that has not
   been implemented yet, and provide it in a self-contained way.

which maintainers to contact?

   it's often useful to have an idea of which maintainers to contact to
   get information on a particular part of the code, including reviewing
   your pull requests, or asking questions on our [128]gitter channel. for
   this you can use the following, indicative mapping:
     * recordreader implementations: @saudet and @agibsonccc
     * transformations and their api: @agibsonccc and @alexdblack
     * spark and distributed processing: @alexdblack, @agibsonccc and
       @huitseeker
     * native formats, geodata: @saudet

how to contribute

    1. check for open issues, or open a new issue to start a discussion
       around a feature idea or a bug.
    2. if you feel uncomfortable or uncertain about an issue or your
       changes, feel free to contact us on gitter using the link above.
    3. fork [129]the repository on github to start making your changes.
    4. write a test, which shows that the bug was fixed or that the
       feature works as expected.
    5. note the repository follows the [130]google java style with two
       modifications: 120-char column wrap and 4-spaces indentation. you
       can format your code to this format by typing mvn formatter:format
       in the subproject you work on, by using the contrib/formatter.xml
       at the root of the repository to configure the eclipse formatter,
       or by [131]using the intellij plugin.
    6. send a pull request, and bug us on gitter until it gets merged and
       published.

eclipse setup

    1. downloading the latest jar from
       [132]https://projectlombok.org/download
    2. double click the jar to install the plugin for eclipse
    3. clone datavec to your system
    4. import the project as a maven project
    5. you will also need clone and build nd4j and libnd4j

     *    2019 github, inc.
     * [133]terms
     * [134]privacy
     * [135]security
     * [136]status
     * [137]help

     * [138]contact github
     * [139]pricing
     * [140]api
     * [141]training
     * [142]blog
     * [143]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [144]reload to refresh your
   session. you signed out in another tab or window. [145]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/deeplearning4j/datavec/commits/master.atom
   3. https://github.com/deeplearning4j/datavec#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/deeplearning4j/datavec
  32. https://github.com/join
  33. https://github.com/login?return_to=/deeplearning4j/datavec
  34. https://github.com/deeplearning4j/datavec/watchers
  35. https://github.com/login?return_to=/deeplearning4j/datavec
  36. https://github.com/deeplearning4j/datavec/stargazers
  37. https://github.com/login?return_to=/deeplearning4j/datavec
  38. https://github.com/deeplearning4j/datavec/network/members
  39. https://github.com/deeplearning4j
  40. https://github.com/deeplearning4j/datavec
  41. https://github.com/deeplearning4j/datavec
  42. https://github.com/deeplearning4j/datavec/issues
  43. https://github.com/deeplearning4j/datavec/pulls
  44. https://github.com/deeplearning4j/datavec/projects
  45. https://github.com/deeplearning4j/datavec/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/etl
  48. https://github.com/topics/spark
  49. https://github.com/topics/machine-learning
  50. https://github.com/topics/transformations
  51. https://github.com/topics/id166light
  52. https://github.com/topics/hadoop-ecosystem
  53. https://github.com/topics/writables
  54. https://github.com/topics/schema
  55. https://github.com/topics/pipeline
  56. https://github.com/topics/formatter
  57. https://github.com/topics/datapipeline
  58. https://github.com/topics/data-munging
  59. https://github.com/deeplearning4j/datavec/commits/master
  60. https://github.com/deeplearning4j/datavec/branches
  61. https://github.com/deeplearning4j/datavec/releases
  62. https://github.com/deeplearning4j/datavec/graphs/contributors
  63. https://github.com/deeplearning4j/datavec/blob/master/license
  64. https://github.com/deeplearning4j/datavec/search?l=java
  65. https://github.com/deeplearning4j/datavec/find/master
  66. https://github.com/deeplearning4j/datavec/archive/master.zip
  67. https://github.com/login?return_to=https://github.com/deeplearning4j/datavec
  68. https://github.com/join?return_to=/deeplearning4j/datavec
  69. https://desktop.github.com/
  70. https://desktop.github.com/
  71. https://developer.apple.com/xcode/
  72. https://visualstudio.github.com/
  73. https://github.com/deeplearning4j/datavec/tree/c0847509be514d155e0cf8ffdf6abc2bee56e24b
  74. https://github.com/deeplearning4j/datavec/tree/master/.github
  75. https://github.com/deeplearning4j/datavec/tree/master/ci
  76. https://github.com/deeplearning4j/datavec/commit/36c4b9b9911b8c12645810f4ce37d1e4607babe6
  77. https://github.com/deeplearning4j/datavec/pull/486
  78. https://github.com/deeplearning4j/datavec/commit/36c4b9b9911b8c12645810f4ce37d1e4607babe6
  79. https://github.com/deeplearning4j/datavec/tree/master/contrib
  80. https://github.com/deeplearning4j/datavec/tree/master/datavec-api
  81. https://github.com/deeplearning4j/datavec/commit/fe83a524b8f5388213f2e8f8ad1b5c14ac87059b
  82. https://github.com/deeplearning4j/datavec/tree/master/datavec-arrow
  83. https://github.com/deeplearning4j/datavec/commit/fe83a524b8f5388213f2e8f8ad1b5c14ac87059b
  84. https://github.com/deeplearning4j/datavec/tree/master/datavec-camel
  85. https://github.com/deeplearning4j/datavec/commit/8a1a31c10afb141e9c0cf3ff4181202eff85b0cd
  86. https://github.com/deeplearning4j/datavec/tree/master/datavec-data
  87. https://github.com/deeplearning4j/datavec/commit/fe83a524b8f5388213f2e8f8ad1b5c14ac87059b
  88. https://github.com/deeplearning4j/datavec/tree/master/datavec-excel
  89. https://github.com/deeplearning4j/datavec/commit/8a1a31c10afb141e9c0cf3ff4181202eff85b0cd
  90. https://github.com/deeplearning4j/datavec/tree/master/datavec-geo
  91. https://github.com/deeplearning4j/datavec/commit/8a1a31c10afb141e9c0cf3ff4181202eff85b0cd
  92. https://github.com/deeplearning4j/datavec/tree/master/datavec-hadoop
  93. https://github.com/deeplearning4j/datavec/tree/master/datavec-jdbc
  94. https://github.com/deeplearning4j/datavec/commit/8a1a31c10afb141e9c0cf3ff4181202eff85b0cd
  95. https://github.com/deeplearning4j/datavec/tree/master/datavec-local
  96. https://github.com/deeplearning4j/datavec/commit/8a1a31c10afb141e9c0cf3ff4181202eff85b0cd
  97. https://github.com/deeplearning4j/datavec/tree/master/datavec-perf
  98. https://github.com/deeplearning4j/datavec/tree/master/datavec-spark-id136-parent
  99. https://github.com/deeplearning4j/datavec/tree/master/datavec-spark
 100. https://github.com/deeplearning4j/datavec/commit/fe83a524b8f5388213f2e8f8ad1b5c14ac87059b
 101. https://github.com/deeplearning4j/datavec/blob/master/.gitignore
 102. https://github.com/deeplearning4j/datavec/commit/a893b71f2506de933f5630af093cbc36139efefc
 103. https://github.com/deeplearning4j/datavec/blob/master/.travis.yml
 104. https://github.com/deeplearning4j/datavec/blob/master/jenkinsfile
 105. https://github.com/deeplearning4j/datavec/blob/master/license
 106. https://github.com/deeplearning4j/datavec/blob/master/readme.md
 107. https://github.com/deeplearning4j/datavec/blob/master/version
 108. https://github.com/deeplearning4j/datavec/blob/master/buildmultiplescalaversions.sh
 109. https://github.com/deeplearning4j/datavec/blob/master/change-scala-versions.sh
 110. https://github.com/deeplearning4j/datavec/blob/master/change-spark-versions.sh
 111. https://github.com/deeplearning4j/datavec/commit/1918c3a0cdd9ea6d1fcc7c6b06ac78522260bcc2
 112. https://github.com/deeplearning4j/datavec/blob/master/perform-release.sh
 113. https://github.com/deeplearning4j/datavec/blob/master/pom.xml
 114. https://github.com/deeplearning4j/datavec/blob/master/runtests.sh
 115. https://github.com/deeplearning4j/deeplearning4j
 116. https://gitter.im/deeplearning4j/deeplearning4j?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
 117. https://maven-badges.herokuapp.com/maven-central/org.datavec/datavec-api
 118. http://deeplearning4j.org/datavecdoc
 119. https://nd4j.org/
 120. https://deeplearning4j.org/
 121. https://spark.apache.org/
 122. https://github.com/deeplearning4j/datavec/tree/master/datavec-api
 123. https://flink.apache.org/
 124. https://beam.apache.org/
 125. https://github.com/deeplearning4j/dl4j-examples
 126. https://camel.apache.org/
 127. https://camel.apache.org/data-format.html
 128. https://gitter.im/deeplearning4j/deeplearning4j
 129. https://github.com/deeplearning4j/datavec.git
 130. https://google.github.io/styleguide/javaguide.html
 131. https://github.com/hpi-information-systems/metanome/wiki/installing-the-google-styleguide-settings-in-intellij-and-eclipse
 132. https://projectlombok.org/download
 133. https://github.com/site/terms
 134. https://github.com/site/privacy
 135. https://github.com/security
 136. https://githubstatus.com/
 137. https://help.github.com/
 138. https://github.com/contact
 139. https://github.com/pricing
 140. https://developer.github.com/
 141. https://training.github.com/
 142. https://github.blog/
 143. https://github.com/about
 144. https://github.com/deeplearning4j/datavec
 145. https://github.com/deeplearning4j/datavec

   hidden links:
 147. https://github.com/
 148. https://github.com/deeplearning4j/datavec
 149. https://github.com/deeplearning4j/datavec
 150. https://github.com/deeplearning4j/datavec
 151. https://help.github.com/articles/which-remote-url-should-i-use
 152. https://github.com/deeplearning4j/datavec#important-this-repository-has-been-archived-and-datavec-has-been-moved
 153. https://github.com/deeplearning4j/datavec#datavec
 154. https://github.com/deeplearning4j/datavec#why-would-i-use-datavec
 155. https://github.com/deeplearning4j/datavec#datavecs-architecture--api-transforms-and-filters-and-schema-management
 156. https://github.com/deeplearning4j/datavec#on-distribution
 157. https://github.com/deeplearning4j/datavec#examples
 158. https://github.com/deeplearning4j/datavec#contribute
 159. https://github.com/deeplearning4j/datavec#where-to-contribute
 160. https://github.com/deeplearning4j/datavec#which-maintainers-to-contact
 161. https://github.com/deeplearning4j/datavec#how-to-contribute
 162. https://github.com/deeplearning4j/datavec#eclipse-setup
 163. https://github.com/
