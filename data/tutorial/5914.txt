   #[1]rare technologies    feed [2]rare technologies    comments feed
   [3]rare technologies    understanding and coding dynamic topic models
   comments feed [4]alternate [5]alternate

   [tr?id=1761346240851963&ev=pageview&noscript=1]

   iframe: [6]https://www.googletagmanager.com/ns.html?id=gtm-t2pcjld

   [7]pragmatic machine learning rare technologies [8]navigation

     * [9]services
     * [10]products
          + [11]pii tools
          + [12]scaletext
     * [13]corporate training
          + [14]overview
          + [15]python best practices
          + [16]practical machine learning
          + [17]topic modelling
          + [18]deep learning in practice
     * [19]for students
          + [20]open source
          + [21]incubator
          + [22]competitions
     * [23]company
          + [24]careers
          + [25]our team
     * [26]blog
     * [27]contact
     * [28]search

     * [29]services
     * [30]products
          + [31]pii tools
          + [32]scaletext
     * [33]corporate training
          + [34]overview
          + [35]python best practices
          + [36]practical machine learning
          + [37]topic modelling
          + [38]deep learning in practice
     * [39]for students
          + [40]open source
          + [41]incubator
          + [42]competitions
     * [43]company
          + [44]careers
          + [45]our team
     * [46]blog
     * [47]contact
     * [48]search

understanding and coding dynamic topic models

   [49]bhargav srinivasa 2016-06-22[50] google summer of code 2016,
   [51]student incubator[52] leave a comment

   around a month into gsoc and into coding dynamic topic models, there
   have been many challenges and experiences along the way.

   before getting into the problems i faced, i   ll briefly describe what
   dynamic topic models are. it would be helpful to read my [53]previous
   blog post where i described topic models, first. you can also just do a
   quick google search of [54]id96 to get up to speed.

   so, in dynamic topic models we concern ourselves with the evolution of
   topics. this means that if we divide our corpus into different
   time-frames which they belong in, a topic    evolves    from it   s previous
   time-frame. what does this mean? let   s revisit our harry potter example
   from the previous blog post.

   a dynamic topic model (dtm, from henceforth) needs us to specify the
   time-frames. since there are 7 hp books, let us conveniently create 7
   timeslices, one for each book. so each book contains a certain number
   of chapters, which are our documents in our example.
   we called one of our topics the voldemort topic. it (hypothetically)
   contained the following keywords    

      voldemort, death, horcrux, snake, dark      .

   in a dtm, the words in a topic are fit in the first timeslice, after
   which they evolve. the first timeslice for us is harry potter and the
   philosopher   s stone, where our voldemort topic is not likely going to
   contain the words horcrux, or snake.
   in fact, the voldemort topic is more likely going to contain words more
   like    

      voldemort, quirrell, philosopher   s, evil..   .

   in our second time-slice, you can expect quirrell to make way for
   something likechamber. so, maybe, if we actually ran dtm on the hp
   corpus (note to self: run dtm on the harry potter books when you get
   the time!), we might see the voldemort topic evolve like this, over the
   7 books:
    1. voldemort, quirrell, philosopher   s, evil,    
    2. voldemort, chamber, basilisk, petrified,    
    3.  death, voldemort, servant, pettigrew, ..
    4. voldemort, goblet, return, death, ..
    5. voldemort, return, death, nagini,    
    6. voldemort, horcrux, death,    
    7. voldemort, death, hallows, hogwarts, ..

   [note: this is not the actual results of a dtm, but what they might
   look like]

   so what can we understand from the above evolution? while the key
      theme    of a topic and it   s keywords are more or less the same,
   depending on the documents in that timeslice, they change. the blei
   [55]dtm paper is a good way to learn more about how it works, but an
   even better way is to see it in action: [56]this is a gensim dtm
   tutorial i contributed to which walks one through the process of
   setting up dtm on your own machine, and how to make sense of the
   results.

   if you didn   t really understand what   s going on in the topic evolution
   (or haven   t read harry potter), this image from blei   s paper gives a
   nice example of topic evolution in research papers, particularly atomic
   physics and neuroscience.

   screen-shot-2016-06-22-at-6-01-07-pm

   my posts on id96 do not mention any of the math behind this
   at all     i   ll try to address this by doing a blog post on the math
   behind this in a slightly hand-wavey manner, so you can at least
   intuitively figure out what is going on. in the mean time, the [57]wiki
   does a decent job summarizing the evolution of parameters well.

   phew! now that explaining what dtm does is done, i   ll be talking about
   my experience coding it up. since there was already an implementation
   by [58]blei   s group, it made sense to tackle my problem by converting
   the c/c++ code to python. as a c++ newbie though, this was not at all
   easy.

   the mere size of the code threw me off at first; i didn   t know where to
   start! once i started getting at the main.c file and started
   converting, the thousands of methods and searching slowed me down
   tremendously. my mentor, lev, advised me to get an ide, so i chose to
   work with [59]clion, and it   s been a smooth experience so far.

   with an ide set up my task was considerably easier, but getting used to
   pointers (and sometimes pointers pointing to pointers to pointers!),
   and gsl (gnu scientific library) meant i was just crawling along. after
   a week or two of this though, my speed has considerably increased: i   m
   done converting and testing one of the major parts of the code. of
   course, another major chunk of the code remains, but it does feel nice
   to start chipping away at it. you can follow my progress with my dtm
   [60]pull request.

   working on dtm has taught me a lot, especially about code design and
   testing. lev is a huge fan of testing based development, so i usually
   have unit tests ready after i finish up with each mathematical module.
   this way i can check every unit individually and know that stitching my
   results together will likely give me the right result. another
   challenge is deciding when to re-use the gensim lda code and when not
   to. it   s something i   m still experimenting with though, and hopefully
   i   ll have more clarity on this in my next blog post!

   i hope you enjoyed reading about dtm, and my attempt at coding it for
   gsoc 2016. my midterm evaluation is going on this week, so these are
   busy times. i   ll still try to put out a few more posts about my
   experiences with gensim, soon!

   [61]blei dtm paper[62]dtm[63]dtm pull request[64]gnu scientific
   library[65]gsoc[66]gsoc2016

leave a reply [67]cancel reply

   your email address will not be published. required fields are marked *

   comment
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________
   _____________________________________________

   name * ______________________________

   email * ______________________________

   website ______________________________

   submit

   current [68][email protected] * 4.2_________________

   leave this field empty ____________________

author of post

   bhargav srinivasa

bhargav srinivasa's bio:

   i'm excited to be chosen as rare's google summer of code 2016 student
   developer and enjoy working on machine learning, information retrieval
   and how it can positively affect social science research.

need expert consulting in ml and nlp?

   ________________________________________

   ________________________________________


   ________________________________________
   ________________________________________
   ________________________________________
   ________________________________________
   ________________________________________
   ________________________________________
   ________________________________________
   ________________________________________
   ________________________________________
   ________________________________________
   please leave this field empty. ________________________________________

   send

categories

   categories[select category___________]

archives

   archives [select month__]

recent posts

     * [69]export pii drill-down reports
     * [70]personal data analytics
     * [71]scanning office 365 for sensitive pii information
     * [72]pivoted document length normalisation
     * [73]sent2vec: an unsupervised approach towards learning sentence
       embeddings

stay ahead of the curve

get our latest tutorials, updates and insights delivered straight to your
inbox.

   ____________________

   ____________________

   subscribe
   ____________________
   1-2 times a month, if lucky. your information will not be shared.

   [74][footer-logo.png]
     * [75]services
     * [76]careers
     * [77]our team
     * [78]corporate training
     * [79]blog
     * [80]incubator
     * [81]contact
     * [82]competitions
     * [83]site map

   rare technologies [84][email protected] sv  tova 5, prague, czech
   republic [85](eu) +420 776 288 853
   type and press    enter    to search ____________________

references

   visible links
   1. https://rare-technologies.com/feed/
   2. https://rare-technologies.com/comments/feed/
   3. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/feed/
   4. https://rare-technologies.com/wp-json/oembed/1.0/embed?url=https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/
   5. https://rare-technologies.com/wp-json/oembed/1.0/embed?url=https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/&format=xml
   6. https://www.googletagmanager.com/ns.html?id=gtm-t2pcjld
   7. https://rare-technologies.com/
   8. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/
   9. https://rare-technologies.com/services/
  10. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/
  11. https://pii-tools.com/
  12. https://scaletext.com/
  13. https://rare-technologies.com/corporate-training/
  14. https://rare-technologies.com/corporate-training/
  15. https://rare-technologies.com/python-best-practices/
  16. https://rare-technologies.com/practical-machine-learning/
  17. https://rare-technologies.com/topic-modelling-training/
  18. https://rare-technologies.com/deep_learning_training/
  19. https://rare-technologies.com/incubator
  20. https://github.com/rare-technologies/
  21. https://rare-technologies.com/incubator/
  22. https://rare-technologies.com/competitions/
  23. https://rare-technologies.com/#braintrust
  24. https://rare-technologies.com/careers/
  25. https://rare-technologies.com/our-team/
  26. https://rare-technologies.com/blog/
  27. https://rare-technologies.com/contact/
  28. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/
  29. https://rare-technologies.com/services/
  30. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/
  31. https://pii-tools.com/
  32. https://scaletext.com/
  33. https://rare-technologies.com/corporate-training/
  34. https://rare-technologies.com/corporate-training/
  35. https://rare-technologies.com/python-best-practices/
  36. https://rare-technologies.com/practical-machine-learning/
  37. https://rare-technologies.com/topic-modelling-training/
  38. https://rare-technologies.com/deep_learning_training/
  39. https://rare-technologies.com/incubator
  40. https://github.com/rare-technologies/
  41. https://rare-technologies.com/incubator/
  42. https://rare-technologies.com/competitions/
  43. https://rare-technologies.com/#braintrust
  44. https://rare-technologies.com/careers/
  45. https://rare-technologies.com/our-team/
  46. https://rare-technologies.com/blog/
  47. https://rare-technologies.com/contact/
  48. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/
  49. https://rare-technologies.com/author/bhargav/
  50. https://rare-technologies.com/category/google-summer-of-code-2016/
  51. https://rare-technologies.com/category/student-incubator/
  52. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/#respond
  53. https://topicmodel2016.wordpress.com/2016/06/15/topic-modelling-and-coloring-document-words/
  54. https://en.wikipedia.org/wiki/topic_model
  55. http://www.stat.uchicago.edu/~lafferty/pdf/dtm.pdf
  56. https://github.com/rare-technologies/gensim/blob/develop/docs/notebooks/dtm_example.ipynb
  57. https://en.wikipedia.org/wiki/dynamic_topic_model
  58. https://github.com/blei-lab/dtm
  59. https://www.jetbrains.com/clion/
  60. https://github.com/rare-technologies/gensim/pull/739
  61. https://rare-technologies.com/tag/blei-dtm-paper/
  62. https://rare-technologies.com/tag/dtm/
  63. https://rare-technologies.com/tag/dtm-pull-request/
  64. https://rare-technologies.com/tag/gnu-scientific-library/
  65. https://rare-technologies.com/tag/gsoc/
  66. https://rare-technologies.com/tag/gsoc2016/
  67. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/#respond
  68. https://rare-technologies.com/cdn-cgi/l/email-protection
  69. https://rare-technologies.com/personal-data-reports/
  70. https://rare-technologies.com/pii_analytics/
  71. https://rare-technologies.com/pii-scan-o365-connector/
  72. https://rare-technologies.com/pivoted-document-length-normalisation/
  73. https://rare-technologies.com/sent2vec-an-unsupervised-approach-towards-learning-sentence-embeddings/
  74. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/
  75. https://rare-technologies.com/services/
  76. https://rare-technologies.com/careers/
  77. https://rare-technologies.com/our-team/
  78. https://rare-technologies.com/corporate-training/
  79. https://rare-technologies.com/blog/
  80. https://rare-technologies.com/incubator/
  81. https://rare-technologies.com/contact/
  82. https://rare-technologies.com/competitions/
  83. https://rare-technologies.com/sitemap
  84. https://rare-technologies.com/cdn-cgi/l/email-protection#7b12151d143b091a091e560f1e1813151417141c121e0855181416
  85. tel:+420 776 288 853

   hidden links:
  87. https://rare-technologies.com/understanding-and-coding-dynamic-topic-models/#top
  88. https://www.facebook.com/raretechnologies
  89. https://twitter.com/raretechteam
  90. https://www.linkedin.com/company/6457766
  91. https://github.com/piskvorky/
  92. https://rare-technologies.com/feed/
