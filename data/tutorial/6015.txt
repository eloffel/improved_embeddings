   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]becoming human: artificial intelligence magazine
     * [9]     consulting
     * [10]     tutorials
     * [11]       submit an article
     * [12]     communities
     * [13]     our bot
     __________________________________________________________________

vehicle detection using cameras for self-driving cars

project #5 in udacity   s self-driving car nanodegree

   [14]go to the profile of david clark
   [15]david clark (button) blockedunblock (button) followfollowing
   may 24, 2017

   project #5 in the [16]udacity self-driving car program involves
   creating a pipeline to detect other vehicles on the road in images
   taken from a vehicle   s dash-cam.

   my code for this project is publicly available and can be found
   [17]here.

   this is part of a series. you can also read about my [18]first,
   [19]second, [20]third, and [21]fourth projects if you missed them!

overview

    1. extracting features
    2. training a classifier
    3. sliding window search
    4. vehicle detection and heatmaps

extracting features

   to identify vehicles in an image, we need an idea of what exactly we
   are looking for         we need a vehicle    signature.    this signature must
   ultimately come from the pixel values themselves, because that   s all
   the information we have. to create the vehicle signature, i extracted
   three different feature-sets:
    1. spatial features
    2. color histogram features
    3. hog (histogram of oriented gradients) features

   spatial features

   spatial features are essentially the pixel values themselves. the image
   is resized (i used 16x16) and flattened out to a one-dimensional array,
   and these values are used directly in the    signature.    i used rgb
   images for this feature-set.

   color histogram features

   a color histogram totals the number of pixel values that fall into
   evenly-distributed bins for the image   s color spectrum. this
   essentially tells us things like    there   s a lot of dark red    or    not
   much light green    (when rgb images are used). these    color bin    totals
   are added on to the vehicle signature. i chose to use 32 color bins and
   images in the hsv color space for this feature-set. while an
   explanation of [22]color spaces wouldn   t be appropriate here, the image
   comparison below should give you a quick idea of what i   m talking
   about.
   [1*n_2shtpadrfxfc1u6o6yig.jpeg]
   [1*bv357av-0gvwzkoydpykfg.jpeg]
   rgb image (left) and a visualization of the s channel (right) for an
   hsv image. s is for saturation in hsv         you can see how the line on the
   left stands out a lot.

   hog (histogram of oriented gradients) features

   hog features can basically be thought of as    colors are changing by x
   amount in y direction    (hence    oriented gradients   ). detailed tutorials
   are widely available on the web if you desire to know the intricacies.
   hog features make up the bulk of the vehicle signature and are the most
   valuable features gathered. i used hsv images for this feature-set,
   also.

training a classifier

   for each image we wish to train the machine learning classifier on, the
   features discussed above are extracted and concatenated together to
   form the image   s vehicle    signature.    i trained a linear id166 (support
   vector machine) classifier on over 17,000 images (half of which
   contained vehicles). the features were normalized before being passed
   in to the classifier. the test results showed over 99% accuracy,
   thankfully!

   below is an example vehicle image the classifier was trained on along
   with the raw and normalized features extracted for that image.
   normalizing is important for quicker learning and better accuracy!
   [0*rrnscjv1tvrgiddh.png]
   example    vehicle    image the classifier was trained on. the raw features
   need to be normalized to help the classifier learn better.

sliding window search

   a trained classifier does no good unless you give it similar
   information on which it was trained. i trained the id166 on 64x64 pixel
   images, so i needed a way to pass it 64x64 cutouts of the larger images
   coming from the dash-cam. specifically, i want the id166 to be passed
   64x64 cutouts of the parts of the image that have vehicles so they can
   be identified. the closest i can get to knowing where the vehicles will
   be in the image without using the classifier is the bottom half,
   roughly. thus, i performed a sliding window search (with overlap) in
   the bottom half of the image to produce windows that will be tested to
   see if they contain a vehicle.
   [0*_y_gihya47bx0f2t.jpg]
   the mesh of overlapping windows that represent sub-images which will be
   tested to see if they contain a vehicle.

vehicle detection and heatmaps

   the sliding window search produces many windows         potentially hundreds!
   each of these windows represents an image that will be tested with the
   classifier, meaning each window needs to have features extracted for
   it. this is the main bottleneck of the pipeline.

   nevertheless, once features are extracted for each window-image and
   classified, the windows containing vehicles remain. unfortunately,
   these windows usually don   t produce nice, single bounding-boxes around
   the vehicles like we want. to reach a single bounding-box per vehicle,
   a heatmap is implemented, and a new bounding-box is drawn around the
      hot    areas. results before and after the heatmap are shown below.
   [0*bn-kuoqisxgq_cup.jpg]
   [0*7nyidu1psrhcodgc.jpg]
   on the left we see the windows which were identified as containing
   vehicles. on the right we see the result after a heatmap is applied and
   a single bounding-box is chosen.
   [0*7nyidu1psrhcodgc.jpg]
   the final result         vehicles in the image are identified by a single
   bounding-box each!

applying the pipeline to videos

   as in my other projects, while the pipeline processes single images, it
   can easily be applied to processing videos by separating the video into
   frames and processing each frame individually.

   here you can see my final project video:

   iframe: [23]/media/6e657b94853d25a9654539309a5d2044?postid=db806dcccf65

   final project video         vehicle detection from a dash-cam.

   iframe: [24]/media/c43026df6fee7cdb1aab8aaf916125ea?postid=db806dcccf65

   [1*bqlrszfhjemf4q7pyrlgng.gif]
   [25][1*2f7oqe2ajk1ksrhkmd9zmw.png]
   [26][1*v-ppfkswhbvlwwamsvhhwg.png]
   [27][1*wt2auqisieaozxj-i7brdq.png]

     * [28]machine learning
     * [29]id161
     * [30]udacity sdcnd
     * [31]self driving cars
     * [32]vehicle detection

   (button)
   (button)
   (button) 8 claps
   (button) (button) (button) (button)

     (button) blockedunblock (button) followfollowing
   [33]go to the profile of david clark

[34]david clark

     (button) follow
   [35]becoming human: artificial intelligence magazine

[36]becoming human: artificial intelligence magazine

   latest news, info and tutorials on artificial intelligence, machine
   learning, deep learning, big data and what it means for humanity.

     * (button)
       (button) 8
     * (button)
     *
     *

   [37]becoming human: artificial intelligence magazine
   never miss a story from becoming human: artificial intelligence
   magazine, when you sign up for medium. [38]learn more
   never miss a story from becoming human: artificial intelligence
   magazine
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://becominghuman.ai/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/db806dcccf65
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://becominghuman.ai/vehicle-detection-using-cameras-for-self-driving-cars-db806dcccf65&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://becominghuman.ai/vehicle-detection-using-cameras-for-self-driving-cars-db806dcccf65&source=--------------------------nav_reg&operation=register
   8. https://becominghuman.ai/?source=logo-lo_qhysaxdwlygv---5e5bef33608a
   9. https://becominghuman.ai/artificial-intelligence-software-developers-af09386dc05d
  10. https://becominghuman.ai/tagged/tutorial
  11. https://becominghuman.ai/write-for-us-48270209de63
  12. https://becominghuman.ai/artificial-intelligence-communities-c305f28e674c
  13. http://m.me/becominghumanai
  14. https://becominghuman.ai/@sealedsaint?source=post_header_lockup
  15. https://becominghuman.ai/@sealedsaint
  16. https://www.udacity.com/drive
  17. https://github.com/sealedsaint/carnd-term1-p5
  18. https://becominghuman.ai/detecting-lane-lines-udacity-sdcnd-b52bf36193cb
  19. https://becominghuman.ai/classifying-traffic-signs-728744d3deac
  20. https://becominghuman.ai/end-to-end-self-driving-car-using-behavioral-cloning-5cad2610522c
  21. https://medium.com/@sealedsaint/advanced-lane-detection-for-self-driving-cars-9579e1f057ef
  22. https://en.wikipedia.org/wiki/color_space
  23. https://becominghuman.ai/media/6e657b94853d25a9654539309a5d2044?postid=db806dcccf65
  24. https://becominghuman.ai/media/c43026df6fee7cdb1aab8aaf916125ea?postid=db806dcccf65
  25. https://becominghuman.ai/artificial-intelligence-communities-c305f28e674c
  26. https://upscri.be/8f5f8b
  27. https://becominghuman.ai/write-for-us-48270209de63
  28. https://becominghuman.ai/tagged/machine-learning?source=post
  29. https://becominghuman.ai/tagged/computer-vision?source=post
  30. https://becominghuman.ai/tagged/udacity-sdcnd?source=post
  31. https://becominghuman.ai/tagged/self-driving-cars?source=post
  32. https://becominghuman.ai/tagged/vehicle-detection?source=post
  33. https://becominghuman.ai/@sealedsaint?source=footer_card
  34. https://becominghuman.ai/@sealedsaint
  35. https://becominghuman.ai/?source=footer_card
  36. https://becominghuman.ai/?source=footer_card
  37. https://becominghuman.ai/
  38. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  40. https://medium.com/p/db806dcccf65/share/twitter
  41. https://medium.com/p/db806dcccf65/share/facebook
  42. https://medium.com/p/db806dcccf65/share/twitter
  43. https://medium.com/p/db806dcccf65/share/facebook
