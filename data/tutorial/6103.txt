   #[1]pyimagesearch    feed [2]pyimagesearch    comments feed
   [3]pyimagesearch    macos for deep learning with python, tensorflow, and
   keras comments feed [4]alternate [5]alternate

[6]navigation

   [7]pyimagesearch [8]pyimagesearch be awesome at opencv, python, deep
   learning, and id161

   [9]home

main menu

     * [10]start here
     * [11]practical python and opencv
     * [12]pyimagesearch gurus
     * [13]opencv 3 & 4 tutorials
     * [14]free crash course
     * [15]about
     * [16]contact

   [17]return to content

macos for deep learning with python, tensorflow, and keras

   by [18]adrian rosebrock on september 29, 2017 in [19]deep learning,
   [20]dl4cv

   in today   s tutorial, i   ll demonstrate how you can configure your macos
   system for deep learning using python, tensorflow, and keras.

   this tutorial is the final part of a series on configuring your
   development environment for deep learning. i created these tutorials to
   accompany my new book, [21]deep learning for id161 with
   python; however, you can use these instructions to configure your
   system regardless if you bought my book or not.

   in case you   re on the wrong page (or you don   t have macos), take a look
   at the other deep learning development environment tutorials in this
   series:
     * [22]your deep learning + python ubuntu virtual machine
     * [23]pre-configured amazon aws deep learning ami with python
     * [24]configuring ubuntu for deep learning with python (cpu only)
     * [25]setting up ubuntu 16.04 + cuda + gpu for deep learning with
       python
     * macos for deep learning with python, tensorflow, and keras (this
       post)

   to learn how to configure macos for deep learning and id161
   with python, just keep reading.

macos for deep learning with python, tensorflow, and keras

   as you get acclimated in the deep learning domain, you   ll want to
   perform many experiments to hone your skills and even to solve
   real-world problems.

   you   ll find that for experiments in the most chapters inside
   the starter bundle and half the chapters in the practitioner bundle can
   be executed on your cpu. readers of the id163 bundle will need a gpu
   machine in order to perform the more advanced experiments.

   i definitely don   t recommend churning through large datasets and deep
   neural networks on your laptop, but like i said, for small experiments
   it is just fine.

   today, i   ll walk you through the steps to configure your mac for deep
   learning.

   first, we   ll install xcode and homebrew (a package manager). from there
   we will create a virtual environment called dl4cv  and install opencv,
   tensorflow, and keras into the environment.

   let   s get started.

step #1: install xcode

   for starters, you   ll need to get xcode from the apple app store and
   install it. don   t worry, it is 100% free.

   figure 1: selecting xcode from the apple app store.

   from there, open a terminal and execute the following command to accept
   the developer license:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ sudo xcodebuild -license__________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ sudo xcodebuild -license

   the next step is to install apple command line tools:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ sudo xcode-select --install_______________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ sudo xcode-select --install

   figure 2: accepting the xcode license.

step #2: install homebrew

   homebrew (also known as brew), is a package manager for macos. you may
   already have it on your system, but if you don   t you will want to
   perform the actions in this section.

   first we   ll install homebrew by copying and pasting the entire command
   into your terminal:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ /usr/bin/ruby -e "$(curl -fssl https://raw.githubuserconte
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ /usr/bin/ruby -e "$(curl -fssl
   https://raw.githubusercontent.com/homebrew/install/master/install)"

   next we   ll update our package definitions:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ brew update_______________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ brew update

   followed by updating your ~/.bash_profile  using the  nano  terminal
   editor (any other editor should do the trick as well):
   macos for deep learning with python, tensorflow, and keras
   shell

   $ nano ~/.bash_profile______________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ nano ~/.bash_profile

   add the following lines to the file:
   macos for deep learning with python, tensorflow, and keras
   shell

   # homebrew__________________________________________________
   export path=/usr/local/bin:$path____________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   # homebrew
   export path=/usr/local/bin:$path

   figure 3: changing ~/.bash_profile to accommodate homebrew.

   next, simply reload your ~/.bash_profile  (this happens automatically
   when a new terminal is opened):
   macos for deep learning with python, tensorflow, and keras
   shell

   $ source ~/.bash_profile____________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ source ~/.bash_profile

   now that brew is ready to go, let   s get python 3 installed.

step #3: install homebrew python 3 for macos

   this step is actually very easy, but i want to clear up some possible
   confusion first.

   macos comes with python installed; however we will be installing a
   non-system python using brew. while you could use your system python,
   it is actually strongly discouraged. therefore, don   t skip this step    
   it is very important to your successful install.

   to install python 3 with homebrew, simply execute this command:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ brew install python3______________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ brew install python3

   before continuing you   ll want to verify that your python 3 installation
   is homebrew   s rather than the macos system   s:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ which python3_____________________________________________
   /usr/local/bin/python3______________________________________
   $ which pip3________________________________________________
   /usr/local/bin/pip3_________________________________________
   1
   2
   3
   4
   $ which python3
   /usr/local/bin/python3
   $ which pip3
   /usr/local/bin/pip3

   ensure that you see     local     in each path. if you don   t see this
   output, then you aren   t using homebrew   s install of python 3.

   figure 4: executing which python3 and which pip3 to ensure that you are
   using the homebrew version of each rather than the system version.

   assuming your python 3 install worked, let   s continue on to step #4.

step #4: create your python virtual environment

   as i   ve stated in [26]other install guides on this site, virtual
   environments are definitely the way to go when working with python,
   enabling you to accommodate different versions in sandboxed
   environments.

   in other words, there is less of a chance that you   ll do something that
   is a pain in the ass to fix. if you mess up an environment, you can
   simply delete the environment and rebuild it.

   let   s install [27]virtualenv and [28]virtualenvwrapper via pip :
   macos for deep learning with python, tensorflow, and keras
   shell

   $ pip3 install virtualenv virtualenvwrapper_________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ pip3 install virtualenv virtualenvwrapper

   from there, we   ll update our ~/.bash_profile  again:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ nano ~/.bash_profile______________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ nano ~/.bash_profile

   where we   ll add the following lines to the file:
   macos for deep learning with python, tensorflow, and keras
   shell

   # virtualenv and virtualenvwrapper__________________________
   export virtualenvwrapper_python=/usr/local/bin/python3______
   source /usr/local/bin/virtualenvwrapper.sh__________________
   ____________________________________________________________
   1
   2
   3
   # virtualenv and virtualenvwrapper
   export virtualenvwrapper_python=/usr/local/bin/python3
   source /usr/local/bin/virtualenvwrapper.sh

   figure 5: the bottom of our ~/.bash_profile should contain these lines
   for virtualenv and virtualenvwrapper.

   followed by reloading the file:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ source ~/.bash_profile____________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ source ~/.bash_profile

creating the    dl4cv    environment

   the dl4cv  environment will house all of our software for performing
   experiments associated with [29]my book. you can easily name the
   environment whatever you want, but from here on we   ll be referring to
   it as dl4cv .

   to create the dl4cv environment with python 3 simply enter the
   following command:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ mkvirtualenv dl4cv -p python3_____________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ mkvirtualenv dl4cv -p python3

   after python 3 and supporting scripts are installed into the new
   environment, you should actually be inside the environment.  this is
   denoted by a     (dl4cv)     at the beginning of your bash prompt as shown
   in the figure below:

   figure 6: the (dl4cv) in the bash prompt signifies that we are working
   inside the dl4cv virtual environment. if you don   t see this, then
   execute workon dl4cv to activate the environment.

   if you do not see the modified bash prompt then you can enter the
   following command at any time to enter the environment at any time:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ workon dl4cv______________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ workon dl4cv

   the only python dependency required by opencv is numpy, which we can
   install below:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ pip install numpy_________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ pip install numpy

   that   s it as far as creating a virtual environment and installing
   numpy. let   s continue to step #5.

step #5: install opencv prerequisites using homebrew

   the following tools need to be installed for compilation, image i/o,
   and optimization:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ brew install cmake pkg-config wget________________________
   $ brew install jpeg libpng libtiff openexr__________________
   $ brew install eigen tbb____________________________________
   ____________________________________________________________
   1
   2
   3
   $ brew install cmake pkg-config wget
   $ brew install jpeg libpng libtiff openexr
   $ brew install eigen tbb

   after those packages are installed we   re ready to install opencv.

step #6: compile and install opencv

   first, let   s download the source code:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ cd ~______________________________________________________
   $ wget -o opencv.zip https://github.com/opencv/opencv/archiv
   $ wget -o opencv_contrib.zip https://github.com/opencv/openc
   ____________________________________________________________
   1
   2
   3
   $ cd ~
   $ wget -o opencv.zip https://github.com/opencv/opencv/archive/3.3.0.zip
   $ wget -o opencv_contrib.zip
   https://github.com/opencv/opencv_contrib/archive/3.3.0.zip

   then unpack the archives:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ unzip opencv.zip__________________________________________
   $ unzip opencv_contrib.zip__________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   $ unzip opencv.zip
   $ unzip opencv_contrib.zip

   followed by configuring the build with cmake (it is very important that
   you copy the cmake command exactly as it appears here, taking care to
   copy and past the entire command; i would suggest clicking the    <=>   
   button in the toolbar below to expand the entire command):
   macos for deep learning with python, tensorflow, and keras
   shell

   $ cd ~/opencv-3.3.0/________________________________________
   $ mkdir build_______________________________________________
   $ cd build__________________________________________________
   $ cmake -d cmake_build_type=release \_______________________
       -d cmake_install_prefix=/usr/local \____________________
       -d opencv_extra_modules_path=~/opencv_contrib-3.3.0/modu
       -d python3_library=`python -c 'import subprocess ; impor
       -d python3_include_dir=`python -c 'import distutils.sysc
       -d python3_executable=$virtual_env/bin/python \_________
       -d build_opencv_python2=off \___________________________
       -d build_opencv_python3=on \____________________________
       -d install_python_examples=on \_________________________
       -d install_c_examples=off \_____________________________
       -d build_examples=on .._________________________________
   1
   2
   3
   4
   5
   6
   7
   8
   9
   10
   11
   12
   13
   14
   $ cd ~/opencv-3.3.0/
   $ mkdir build
   $ cd build
   $ cmake -d cmake_build_type=release \
       -d cmake_install_prefix=/usr/local \
       -d opencv_extra_modules_path=~/opencv_contrib-3.3.0/modules \
       -d python3_library=`python -c 'import subprocess ; import sys ; s =
   subprocess.check_output("python-config --configdir",
   shell=true).decode("utf-8").strip() ; (m, m) = sys.version_info[:2] ;
   print("{}/libpython{}.{}.dylib".format(s, m, m))'` \
       -d python3_include_dir=`python -c 'import distutils.sysconfig as s;
   print(s.get_python_inc())'` \
       -d python3_executable=$virtual_env/bin/python \
       -d build_opencv_python2=off \
       -d build_opencv_python3=on \
       -d install_python_examples=on \
       -d install_c_examples=off \
       -d build_examples=on ..

   note: for the above cmake command, i spent considerable time creating,
   testing, and refactoring it. i   m confident that it will save you time
   and frustration if you use it exactly as it appears. make sure you
   click the    <=>    button in the toolbar of the code block above to expand
   the code block. this will enable you to copy and paste the entire
   command.

   your output should be similar to the screenshot below which ensures
   that the correct python 3 binary/library and numpy version are
   utilized:

   figure 7: the opencv cmake output that ensures the correct python 3 and
   numpy will be used for compiling.

   then we   re ready to perform the compilation compile opencv:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ make -j4__________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ make -j4

   note: the number    4    above specifies that we have 4 cores/processors
   for compiling. if you have a different number of processors you can
   update the -j  switch. for only one core/processor simply just use the
   make  command (from the build directory enter make clean  prior to
   retrying if your build failed or got stuck).

   from there you can install opencv:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ sudo make install_________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ sudo make install

   after installing it is necessary to sym-link the cv2.so  file into the
   dl4cv  virtual environment:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ cd ~/.virtualenvs/dl4cv/lib/python3.6/site-packages/______
   $ ln -s /usr/local/lib/python3.6/site-packages/cv2.cpython-3
   $ cd ~______________________________________________________
   ____________________________________________________________
   1
   2
   3
   $ cd ~/.virtualenvs/dl4cv/lib/python3.6/site-packages/
   $ ln -s
   /usr/local/lib/python3.6/site-packages/cv2.cpython-36m-darwin.so cv2.so
   $ cd ~

   finally, we can test out the install:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ python____________________________________________________
   >>> import cv2______________________________________________
   >>> cv2.__version___________________________________________
   '3.3.0'_____________________________________________________
   1
   2
   3
   4
   $ python
   >>> import cv2
   >>> cv2.__version__
   '3.3.0'

   figure 8: opencv 3.3 has been installed and linked as is shown by the
   successful import and display of the version.

   if your output properly shows the version of opencv that you installed,
   then you   re ready to go on to step #7 where we will install the keras
   deep learning library.

step #7: install keras

   before beginning this step, ensure you have activated the dl4cv
   virtualenv. if you aren   t in the environment, simply execute:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ workon dl4cv______________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ workon dl4cv

   then, using pip , install the required python id161, image
   processing, and machine learning libraries:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ pip install scipy pillow__________________________________
   $ pip install imutils h5py requests progressbar2____________
   $ pip install scikit-learn scikit-image_____________________
   ____________________________________________________________
   1
   2
   3
   $ pip install scipy pillow
   $ pip install imutils h5py requests progressbar2
   $ pip install scikit-learn scikit-image

   next install matplotlib and update the rendering backend:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ pip install matplotlib____________________________________
   $ touch ~/.matplotlib/matplotlibrc__________________________
   $ echo "backend: tkagg" >> ~/.matplotlib/matplotlibrc_______
   ____________________________________________________________
   1
   2
   3
   $ pip install matplotlib
   $ touch ~/.matplotlib/matplotlibrc
   $ echo "backend: tkagg" >> ~/.matplotlib/matplotlibrc

   then, install tensorflow:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ pip install tensorflow____________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ pip install tensorflow

   followed by keras:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ pip install keras_________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ pip install keras

   to verify that keras is installed properly we can import it and check
   for errors:
   macos for deep learning with python, tensorflow, and keras
   shell

   $ python____________________________________________________
   >>> import keras____________________________________________
   using tensorflow backend.___________________________________
   >>>_________________________________________________________
   1
   2
   3
   4
   $ python
   >>> import keras
   using tensorflow backend.
   >>>

   keras should be imported with no errors, while stating that tensorflow
   is being utilized as the backend.

   figure 9: keras is successfully installed into the dl4cv virtual
   environment.

   at this point, you can familiarize yourself with the
   ~/.keras/keras.json  file:
   macos for deep learning with python, tensorflow, and keras
   shell

   {___________________________________________________________
   	"image_data_format": "channels_last",______________________
   	"backend": "tensorflow",___________________________________
   	"epsilon": 1e-07,__________________________________________
   	"floatx": "float32"________________________________________
   }___________________________________________________________
   1
   2
   3
   4
   5
   6
   {
   "image_data_format": "channels_last",
   "backend": "tensorflow",
   "epsilon": 1e-07,
   "floatx": "float32"
   }

   ensure that the image_data_format  is set to channels_last  and that
   the backend  is set to tensorflow .

   congratulations! you   re now ready to go. if you didn   t open up a beer
   or coffee during the installation process, now is the time. it   s also
   the time to find a comfortable spot to read [30]deep learning for
   id161 with python.

summary

   in today   s post, we configured our macos box for id161 and
   deep learning. the main pieces of software included python 3, opencv,
   tensorflow, and keras accompanied by dependencies and
   installation/compilation tools.

   as you can see, utilizing homebrew, pip, and virtualenv +
   virtualenvwrapper made this install rather easy. i spent quite a bit of
   time creating and testing  the cmake command which should work easily
   on your computer. be sure to give it a try.

   if you encountered any problems along the way, leave a comment in the
   form below.

   if you would like to put your newly configured macos deep learning
   environment to good use, i would highly suggest you take a look at my
   new book, [31]deep learning for id161 with python.

   regardless if you   re new to deep learning or already a seasoned
   practitioner, the book has content to help you reach deep learning
   mastery     [32]take a look here.

resource guide (it   s totally free).

   get your free 17-page id161 and deep learning resource guide
   pdf
   enter your email address below to get my free 17-page id161,
   opencv, and deep learning resource guide pdf. inside you'll find my
   hand-picked tutorials, books, courses, and python libraries to help you
   master id161 and deep learning!
   ____________________
   download the guide!

   [33]deep learning, [34]dl4cv, [35]install, [36]macos, [37]optimization,
   [38]python, [39]python 3, [40]virtual environments
   [41]setting up ubuntu 16.04 + cuda + gpu for deep learning with python
   [42]deep learning on the raspberry pi with opencv

95 responses to macos for deep learning with python, tensorflow, and keras

    1. [43]shannon september 29, 2017 at 11:07 am [44]#
       thanks adrian, these tutorials are great. really looking forward to
       the rest of the kickstarter deliverables coming out over the next
       few months.
       question regarding setup: you used brew + virtualenv to set up and
       configure the dl4cv environment. would it be possible to instead
       use conda environments? i suppose the one potential hiccup that
       comes to mind would be linking the opencv 3.3.0 build with the
       environment.
       [45]reply
          + adrian rosebrock october 2, 2017 at 10:14 am [46]#
            you can use conda environments if you wish, but please note
            that i cannot provide any suggestions/support if you deviate
            from the instructions here.
            [47]reply
          + stephen october 4, 2017 at 7:00 am [48]#
            probably would need to replace -d
            python3_executable=$virtual_env/bin/python \ with -d
            python3_executable=$conda_prefix/bin/python \
            i   m trying it now to see if it works     otherwise ubuntu vm.
            [49]reply
               o stephen october 4, 2017 at 7:16 am [50]#
                 nah, there is obviously more to just that for the
                 makefile using conda. libraries and possibly packages
                 path (python3_library and python3_include_dir) need
                 repointing.
                     python 3:
                     interpreter:
                 /users/stgreszc/anaconda/envs/python3/bin/python (ver
                 3.6.2)
                     libraries: /usr/lib/libpython2.7.dylib (ver 3.6.2)
                     numpy:
                 /users/stgreszc/anaconda/envs/python3/lib/python3.6/site-
                 packages/numpy/core/include (ver 1.12.1)
                     packages path: lib/python3.6/site-packages
                 [51]reply
    2. dear bar september 29, 2017 at 9:56 pm [52]#
       very timely tutorial, very grateful.
       [53]reply
    3. memeka september 29, 2017 at 10:55 pm [54]#
       any plans to try coreml?
       [55]reply
          + adrian rosebrock september 30, 2017 at 9:38 am [56]#
            no plans at the moment, but i will consider it for the future.
            [57]reply
    4. jeff september 30, 2017 at 4:18 pm [58]#
       your install guide worked perfectly on my macbook pro (10.12.6).
       thank you!
       [59]reply
          + adrian rosebrock october 2, 2017 at 9:48 am [60]#
            awesome, i   m glad to hear it jeff! congrats on getting your
            macos machine configured for deep learning!
            [61]reply
    5. hendrick october 1, 2017 at 5:48 am [62]#
       i cannot run make -j4, the error said make:*** no targets specified
       and no makefile found. someone can help me?
       [63]reply
          + adrian rosebrock october 1, 2017 at 8:47 am [64]#
            double-check your output from cmake. it is very likely that
            cmake exited with an error, hence there it did not generate a
            makefile. secondly, ensure you are in the    build    directory
            before executing    make   .
            [65]reply
    6. andreas gounaris october 2, 2017 at 5:01 am [66]#
       hi adrian, i have 3 virtual envs, with opencv 3.0 and i want to
       upgrade all of them to ver 3.3. if i download and compile opencv
       3.3 outside of a virtual env, should my envs be informed about the
       upgrade?
       if not, how can i do that?
       [67]reply
          + adrian rosebrock october 2, 2017 at 9:24 am [68]#
            are all three of your virtual environments the same python
            version? or different?
            if they are the same you can simply compile opencv 3.3 once,
            install it, and ensure the cv2.so sym-links are correct for
            each python virtual environment.
            [69]reply
    7. andrew october 2, 2017 at 4:33 pm [70]#
       does not work with the latest xcode 9.0.
       nvcc warning : the    compute_20   ,    sm_20   , and    sm_21    architectures
       are deprecated, and may be removed in a future release (use
       -wno-deprecated-gpu-targets to suppress warning).
       nvcc fatal : the version (   90000   ) of the host compiler (   apple
       clang   ) is not supported
       cmake error at cuda_compile_generated_gpu_mat.cu.o.cmake:208
       (message):
       [71]reply
          + andrew october 3, 2017 at 1:44 am [72]#
            i went back to 8.1. it worked.
            apple llvm version 8.0.0 (clang-800.0.42.1)
            target: x86_64-apple-darwin16.7.0
            thread model: posix
            installeddir: /library/developer/commandlinetools/usr/bin
            [73]reply
    8. [74]joachim october 5, 2017 at 3:24 am [75]#
       thanks, adrian, really great tutorial !
       i made the installation on an imac (retina 5k, 27-inch, late 2014)
       with macos high sierra and xcode 9.0. i got a problem with make
       -j4:    fatal error tesseract/baseapi.h file not found.
       after adding    -d build_opencv_text = off    it worked.
       [76]reply
          + adrian rosebrock october 6, 2017 at 5:07 pm [77]#
            awesome, thank you for sharing joachim!
            [78]reply
    9. chris october 8, 2017 at 9:14 pm [79]#
       thanks, adrian, for yet another, most excellent tutorial!
       i was able to successfully install on high sierra(10.13) using a
       late 2013 mac pro. the only hitch i had was a conflict when running
       one of your dl4cv scripts that imports    matplotlib.pyplot.    seems
       there was some sore of osx back-end-renderer conflict. i found a
       fix here:
       [80]https://stackoverflow.com/questions/21784641/installation-issue
       -with-matplotlib-python
       do you have any suggestions for editing the cmake so that tensor
       flow can be compiled to use sse4.2?
       [81]reply
          + adrian rosebrock october 9, 2017 at 12:18 pm [82]#
            thanks for sharing the matplotlib solution, chris!
            i have not compiled tensorflow by hand (i   ve only used the pip
            install) but i   ll consider looking into this and doing a
            future blog post on it.
            [83]reply
   10. gavin october 16, 2017 at 12:30 pm [84]#
       hi adrian, thanks for the great tutorial.
       i am trying to install on a 2017 imac with high sierra. i have
       managed to get as far as the cmake command for opencv. when i check
       the build both numpy and libraries say no next to them. do i need
       to change something to make cmake find them?
       many thanks
       [85]reply
          + adrian rosebrock october 16, 2017 at 12:35 pm [86]#
            hi gavin     can you please confirm whether or not you are in
            the    dl4cv    python virtual environment when executing cmake?
            also, can you confirm the full python version?
            [87]reply
   11. gavin armstrong october 16, 2017 at 3:51 pm [88]#
       thanks adrian,
       i can confirm i am in the    dl4cv    and the python version is 3.6.3
       i have made a video of the install skip to the last 30 secs or so
       to see the cmake script running and the results.
       [89]https://youtu.be/6tqq_fbmzxc
       thanks again
       gavin
       [90]reply
          + gavin armstrong october 16, 2017 at 4:26 pm [91]#
            its working, just installed all osx updates and deleted the
            build dir and tried again. build success.
            thanks again
            gavin
            [92]reply
               o adrian rosebrock october 17, 2017 at 9:34 am [93]#
                 congrats on getting your deep learning environment
                 configured, gavin! nice job!
                 [94]reply
   12. andrew baker october 26, 2017 at 12:26 pm [95]#
       i couldn   t get the cmake file to generate properly. at the end i
       received the following cmake error:
       the following variables are used in this project, but they are set
       to notfound. please set them or make sure they are set and tested
       correctly in the cmake files:
       cuda_nppi_library (advanced)
       linked by target    opencv_cudev    in directory
       /users/andrewbaker/opencv-3.3.0/modules/cudev        there are many
       more linked by target lines which follow.
       my configuration:
       macos version 10.12.6
       cuda 9.0
       xcode 9.0
       clang-900.0.38
       i tried going back to xcode 8.1. that produced the same result.
       maybe i should try going back to cuda 8.0?
       [96]reply
          + adrian rosebrock october 27, 2017 at 10:54 am [97]#
            hi andrew     cuda likely won   t work on your mac unless you
            indeed have a capable nvidia gpu. do you have an nvidia gpu?
            [98]reply
               o andrew baker october 31, 2017 at 1:35 am [99]#
                 yes i do. i went back to xcode 8.1, clang-800.0.42.1 and
                 cuda 8.0.61. all complied fine and installed. however now
                 when i try to do the simlink i am getting cv2.so: no such
                 file or directory.
                 [100]reply
                    # andrew baker october 31, 2017 at 2:20 am [101]#
                      ok i figured it out. no issues all is well.
                      [102]reply
                         @ adrian rosebrock october 31, 2017 at 7:40 am
                           [103]#
                           congrats on figuring out the issue, andrew!
   13. [104]murthy october 31, 2017 at 12:10 am [105]#
       hi adrian,
       thanks for the tutorial.
       i had a successful installation.
       when i pip installed matplotlib     it mentioned it is already
       installed but the next command    touch    failed as there was no
       .matplotlib . i proceeded by created one. hope this is not a big
       issue when it comes to rendering.
       [106]reply
          + adrian rosebrock october 31, 2017 at 7:42 am [107]#
            hi murthy     this shouldn   t be an issue.
            [108]reply
   14. crashdummy november 30, 2017 at 9:25 pm [109]#
       found that when installing and compiling opencv (step #6), numpy
       wasn   t utilised on the build list for some reason.
       i need to manually add this line to the cmake list for it to
       include numpy   s directory:
       -d python_numpy_include_dir=python -c    import numpy as np;
       print(np.__path__)    \
       hope this helps anyone out there with the same issue     
       i   m using:
       macos 10.13.1 on macbook pro 13 mid 2014
       opencv 3.3.0
       numpy 1.3.3
       [110]reply
          + adrian rosebrock december 2, 2017 at 7:31 am [111]#
            thank you for sharing! i   ll make note of this as well     
            [112]reply
   15. michael december 12, 2017 at 5:31 pm [113]#
       adrian,
       possibly a stupid question, but i previously installed opencv using
       one of your tutorials. do i need to set it up again in this new
       environment, or can i use the one i previously installed?
       thanks
       [114]reply
          + adrian rosebrock december 15, 2017 at 8:39 am [115]#
            you can use your previous install of opencv. i would recommend
            creating a new python virtual environment and then sym-linking
            in your opencv bindings, but that   s entirely up to you.
            [116]reply
   16. andrew baker december 14, 2017 at 12:48 pm [117]#
       today the new imac pro was introduced by apple. the most expensive
       configuration came in at $13,348.00. that was with a 2.3ghz 18 core
       intel xeon w processor, 128gb ram, 4 tb ssd and radeon pro vega 64
       16 gb video card. being that most of the deep learning frameworks
       are dependent on cuda and the nvidia architecture, i wonder what
       apple   s thinking was for using this machine for deep learning? for
       $13k one could build a very nice multigpu capable ubuntu machine.
       [118]reply
          + adrian rosebrock december 14, 2017 at 1:41 pm [119]#
            i haven   t watched the announcement video or looked at the
            specs yet (i certainly will though)     but were they mentioning
            in the announcement that they expected the new imac to be used
            for deep learning?
            [120]reply
   17. carlos december 19, 2017 at 11:20 am [121]#
       adrian,
       i do not really use mac. however, i wanted to try it out on mac
       high sierra (10.13) and ran into two issues and wanted to share the
       solutions (save ppls time).
       1. issues with jpeg 8 and 9 when importing cv2 (brew repo issue)
       solution from link:
       [122]https://stackoverflow.com/questions/32703296/dyld-library-not-
       loaded-usr-local-lib-libjpeg-8-dylib-homebrew-php
       2. runtime issue for 3.5 and 3.6 versions when importing tensorflow
       (first seen when importing keras)
       solution: download the proper build, remove tensorflow and keras
       (pip uninstall tensorflow and pip uninstall keras), reinstall using
       downloaded wheel pip install /path/to/binary/file.whl. more details
       and builds on the link:
       [123]https://github.com/lakshayg/tensorflow-build
       [124]reply
          + adrian rosebrock december 19, 2017 at 4:11 pm [125]#
            i   ll have to look into the jpeg issue, but tensorflow does not
            yet support python 3.6. you   ll need to install python 3.5 and
            use python 3.5 for the install.
            [126]reply
               o alex holsgrove january 6, 2018 at 1:31 pm [127]#
                 i have the same issue. is is possible to use homebrew to
                 downgrade to 3.5, and if so, is it best to try this, or
                 just start again with a new virtual environment using
                 python 3.5? thank you
                 [128]reply
                    # adrian rosebrock january 8, 2018 at 2:52 pm [129]#
                      i would suggest creating a new environment using
                      python 3.5. this is likely the best approach.
                      [130]reply
               o pete january 10, 2018 at 1:48 pm [131]#
                 great tutorial. but i am stuck with the same issue. how
                 do i uninstall python 3.6 and install 3.5? thanks.
                 [132]reply
                    # adrian rosebrock january 11, 2018 at 7:24 am [133]#
                      i haven   t been able to test this to see if it works
                          but you should be able to download python 3.5 from
                      the [134]official python + macos release and then
                      install it. the paths to the python 3.5 libraries,
                      interpreter, etc. will be different so you   ll need
                      to investigate that. once installed, you should be
                      able to create a python 3.5 virtual environment via:
                      $ mkvirtualenv dl4cv -p python35
                      but again, that   s speculation off the top of my head
                      based on what i think should work. i have not
                      personally tried this.
                      i haven   t encountered the issues    carlos    (the op of
                      this thread) described regarding tensorflow and i
                      haven   t been able to replicate them so unfortunately
                      i   m shooting in the dark a bit here.
                      [135]reply
                         @ alex holsgrove january 13, 2018 at 8:20 am
                           [136]#
                           pete, adrian     i   ve managed to install python
                           3.5 using the link adrian kindly provided, and
                           i have managed to install everything using this
                           article. will be moving on to the image
                           classification article next:
                           /2017/12/11/image-classification-with-keras-and
                           -deep-learning/)
                         @ adrian rosebrock january 15, 2018 at 9:23 am
                           [137]#
                           thank you for letting us know alex, i   m glad
                           that worked     
   18. alex holsgrove january 1, 2018 at 5:38 pm [138]#
       adrian, thank you again for another thorough and excellent article.
       i have got most of the way through here, but when running    pip
       install matplotlib    it came back with    requirement already
       satisfied: matplotlib in
       /users/alex/.virtualenvs/dl4cv/lib/python3.6/site-packages   . there
       also wasn   t a    ~/.matplotlib/matplotlibrc    directory or file so i
       created these manually (although i fear this may not be correct). i
       tried the pip command with    update    force-reinstall and i can see
       this is now in my ~/.virtualenvs/dl4cv/lib/python3.6/site-packages
       directory.
       secondly, when i run python and import keras, i get the error
          attributeerror: module    enum    has no attribute    intflag'   . i made
       sure i was running on the dl4cv environment and am running python
       3.6.4
       apologies for the number of comments recently, but i hope you can
       please help.
       [139]reply
          + adrian rosebrock january 3, 2018 at 1:09 pm [140]#
            hm, that   s hard for me to say without having direct access to
            your environment. can you try uninstalling and re-installing?
            i would also suggest trying to install an older version of
            matplotlib and see if that resolves the issue:
            python

            $ pip uninstall matplotlib__________________________________
            $ pip install matplotlib==1.4.1_____________________________
            ____________________________________________________________
            ____________________________________________________________

   1

   2

   $ pip uninstall matplotlib

   $ pip install matplotlib==1.4.1
            [141]reply
               o alex holsgrove january 6, 2018 at 1:30 pm [142]#
                 fantastic, thank you. this has fixed the problem but i
                 now have the same issue as carlos (i   ve replied to his
                 comment to keep the discussion organised)
                 [143]reply
   19. arindam january 5, 2018 at 11:31 am [144]#
       hi adrian,
       similar to michael   s post on dec 12, i already had a previous
       instance of opencv. so i followed your idea and symlinked to it
       from the dl4cv virtualenv. after testing, it seems to be ok     i get
       ver 3.3.1. then i proceeded to install tensorflow and keras in the
       dl4cv virtual env. everything seems to go fine, but when i try to
       import keras i get a bunch of errors, the final one being    
       attributeerror: module    enum    has no attribute    intflag   
       i am stuck on that one, before i can move forward. any suggestions?
       [145]reply
   20. arindam january 5, 2018 at 11:44 am [146]#
       hi adrian,
       ignore my previous post. my symlink to cv2.so was broken. that   s
       what caused the error to show up as it was not able to pull up the
       correct python version i believe. fixed that and it is up and
       running.
       thanks!
       [147]reply
          + adrian rosebrock january 5, 2018 at 1:21 pm [148]#
            congrats on resolving the issue, arindam! nice job.
            [149]reply
   21. ying lu january 17, 2018 at 12:28 am [150]#
       hi adrian, thanks for your great tutorial! this is the most
       complete tutorial i have ever seen. appreciated!
       however i do have the same mac high sierra problem   now i realize i
       need to install python 3.5. i downloaded python3.5 and installed
       but now    workon dl4cv    doesn   t run anymore. i think the best way
       might be deleting everything and reinstall from beginning. in this
       case what would you recommend..would pip, brew uninstall work?
       anything else i need to pay attention to? many thanks ying
       [151]reply
          + adrian rosebrock january 17, 2018 at 10:13 am [152]#
            hey ying! thanks for the comment. i   m glad you have found the
            tutorial helpful. it   s hard for me to provide a concrete
            recommendation as (1) i do not know what previous commands you
            executed and (2) i do not have direct access to your system.
            it sounds like the only issue right now is related to
            virtualenv/virtualenvwrapper. try using:
            $ pip3 install virtualenv virtualenvwrapper
            and then updating your ~/.bash_profile as i discuss in this
            post.
            try to debug and get the workon command to work. from there
            you should be able to proceed.
            [153]reply
   22. guilherme january 21, 2018 at 9:53 pm [154]#
       hi adrian,
       i   m having a recurrent problem with make command.
       it always breaks at 17% of compilation.
       could you help me ?
       [155]reply
          + adrian rosebrock january 22, 2018 at 6:17 pm [156]#
            hey guilherme     i   m sorry to hear about the opencv compile;
            however, i would need to see the error message to provide any
            suggestion as to what the problem could be.
            [157]reply
   23. tim february 10, 2018 at 7:15 am [158]#
       hey adrian,
       i   m really excited about getting into dl4cv but i   m struggling to
       get the setup outlined above. altering my path and creating virtual
       environments is all brand new to me     so forgive me if i have very
       basic questions, or if i include information that isn   t useful.
       i   ve followed the above, but things broke at the cmake command. in
       particular, i think i ended up installing python 3.6. as per your
       recommendation above, i   ve installed python 3.5(.4). but, i   m now
       struggling to create a new environment.
       i am running:
       osx 10.13.3
       imac (retina 5k, 27-inch, late 2015)
       in terminal:
       which python gives /usr/bin/python
       which python3 gives
       /library/frameworks/python.framework/versions/3.5/bin/python3
       in terminal when i try:
       mkvirtualenv dl4cv -p python35
       i get    the path python35 (from    python=python35) does not exist   
       my .bash_profile is:
       # homebrew
       export path=/usr/local/bin:$path
       # setting path for python 3.5
       # the original version is saved in .bash_profile.pysave
       path=   /library/frameworks/python.framework/versions/3.5/bin:${path}
          
       export path
       # virtualenv and virtualenvwrapper
       export virtualenvwrapper_python=/usr/local/bin/python3
       source /usr/local/bin/virtualenvwrapper.sh
       # added by anaconda2 4.3.0 installer
       # export path=   /users/davidrtfraser/anaconda/bin:$path   
       when i open terminal i also get this error:
          
       /usr/local/bin/python3: error while finding module specification
       for    virtualenvwrapper.hook_loader    (importerror: no module named
          virtualenvwrapper   )
       virtualenvwrapper.sh: there was a problem running the
       initialization hooks.
       if python could not import the module
       virtualenvwrapper.hook_loader,
       check that virtualenvwrapper has been installed for
       virtualenvwrapper_python=/usr/local/bin/python3 and that path is
       set properly.
          
       again- i   m very new to all of this, so would appreciate any help
       you   re able to give!
       thanks in advance!
       [159]reply
          + tim february 10, 2018 at 7:32 am [160]#
            also, as you can see from my .bash_profile i   ve previously had
            anaconda installed, which i uninstalled according to this:
            [161]https://conda.io/docs/user-guide/install/macos.html
            [162]reply
          + adrian rosebrock february 10, 2018 at 7:48 am [163]#
            hey tim     i think there are a few issues here. the first is
            that anaconda may be causing an issue with your python path.
            however, it looks like you have anaconda commented out in your
            file. i   m not an expert with anaconda so i   m not entirely sure
            if the uninstall procedure would have created any issues. some
            installers will still leave sym-links to paths that do not
            exist anymore (a common problem you may encounter with
            macports).
            without direct access to your machine it   s hard to give
            concrete advice on the best path to try as i cannot run
            commands/tests myself. however, i have a few suggestions:
            1. what is your output for    which pip    and    which pip3   ? and
            what is the output of    pip    version    and    pip3    version   ? do
            you recall which one you used to install virtualenv and
            virtualenvwrapper?
            2. skip using python 3.5 and use your python 3.6 install. the
            latest tensorflow (1.6) is compatible with python 3.6 on macos
            so the install procedure will work.
            3. skip using python virtual environments all together and
            install globally via sudo pip install your_package. while
            python virtual environments are a best practice they can
            create a little bit of additional complexity if you haven   t
            used unix path variables before.
            4. i agree with you that getting started with dl4cv as soon as
            possible is really important. while you continue working with
            your development environment i would suggest using the
            pre-configured virtual machine included with your purchase of
            dl4cv. this vm is pre-configured with all the packages you
            need for the book. you can use the vm to get started
            immediately then continue to diagnose the macos install issue
            in your free time.
            one of the hardest steps can be getting started (i know this
            from experience) so i would recommend a combination of my
            suggestions above. use the vm included with the book right now
            to start working through the book. this will help you get your
            hands dirty immediately and study deep learning. when you have
            additional time, try my suggestions for python 3.6.
            i hope that helps and certainly let me know how it goes!
            [164]reply
               o tim february 10, 2018 at 12:11 pm [165]#
                 thanks adrian,
                 i   ll be sure to use the virtual machine till i can work
                 out the rest. in terms of answers:
                 1) which pip returns nothing, while which pip3 returns
                    /library/frameworks/python.framework/versions/3.5/bin/pi
                 p3   
                 i believe that i used pip3 (but may have previously tried
                 and failed to install virtual environments).
                 in terms of skipping virtual environments, and installing
                 globally. i take it that in terms of your directions then
                 i would install numpy and open cv with sudo pip install,
                 and then pick things up from step 7 (ignoring the dl4cv
                 environment) and modifying pip install commands
                 accordingly?
                 thanks again!
                 [166]reply
                    # adrian rosebrock february 12, 2018 at 6:36 pm [167]#
                      the output of pip3 should read    /usr/local/bin/pip3   
                      which seems to be that the homebrew + python install
                      might have failed. could you try that again?
                      you are correct, you would use    sudo pip install
                      numpy    and then continue to the    cmake    step,
                      ignoring the python virtual environment. your
                      understanding is 100% on point, great job!
                      [168]reply
                         @ nontawat march 13, 2018 at 8:01 pm [169]#
                           hi adrian,
                           (1) i use python 3.6
                           (2) following your mention,    3. skip using
                           python virtual environments all together and
                           install globally via sudo pip install
                           your_package. while python virtual environments
                           are a best practice they can create a little
                           bit of additional complexity if you haven   t
                           used unix path variables before.   
                           what does    your_package    mean? i tried to run
                           this command but i   m not sure.
                           could you please show the example? how to run
                           sudo pip install your_package
                         @ adrian rosebrock march 14, 2018 at 12:39 pm
                           [170]#
                           you replace    your_packages    with the name of
                           the python package you want to install. for
                           example, if you wanted to install numpy:
                           $ pip install numpy
                           you would need to use    sudo    if you wanted to
                           install the package globally on your system.
          + maik november 26, 2018 at 8:16 am [171]#
            hello,
            i   ve run into the same issue.
            it seems that this tutorial is missing one command: after
               brew install python    you should run    brew link python    also.
            after that the error message was gone away.
            regards,
            maik
            [172]reply
               o adrian rosebrock november 26, 2018 at 2:25 pm [173]#
                 hi maik     i   m in the process of updating this guide now
                 that opencv 4 was just released. on macos i would
                 recommend a [174]pip install of opencv. from there you   ll
                 be up and running.
                 [175]reply
   24. nunes march 8, 2018 at 6:19 pm [176]#
       hello adrian,
       i   m getting the following error:    illegal instruction: 4    when
       using    import tensorflow    in python.
       i   ve already tried installing tensorflow in a virtualenv and
       without it. i   ve tried with    sudo    and with the    tfbinaryurl   
       option as recommend on their website.
       i have python 3.6.4 with high sierra 10.13.3
       thank you for the great tutorial!
       [177]reply
          + adrian rosebrock march 9, 2018 at 8:53 am [178]#
            hey nunes, i   m sorry to hear about the error getting
            tensorflow installed. i haven   t encountered this error before
            but a quick search turns up multiple tensorflow github issue
            reports such as [179]this one. the threads report that it   s
            normally a dev environment issue so i would suggest creating a
            new thread on the tensorflow github and share your system
            information with the developers.
            [180]reply
               o nunes march 11, 2018 at 4:22 pm [181]#
                 thank you for your reply adrian!
                 for anyone who is having the same problem, i   ve solved
                 the error by installing a previous version of tensorflow,
                 specifically the version 1.5.0
                 [182]reply
   25. khalid bodhi march 13, 2018 at 12:36 pm [183]#
       i am using a macbook pro high sierra 10.13 with 16gb ram
       what are the pros and cons doing the experiment in osx, compared
       with running with linux in a virtual machine? besides, i have a
       nvidia gpu, i wonder if i should install cuda now or later.
       thanks.
       [184]reply
          + adrian rosebrock march 14, 2018 at 12:42 pm [185]#
            a vm is slower than running on    bare metal   . additionally, a
            vm cannot access peripherals such as your gpu.
            if you install locally, rather than a vm, you can use your
            gpu. the problem is that it   s often harder to configure macos
            machines vs. ubuntu or debian-based machines.
            [186]reply
               o bodhi khalid march 14, 2018 at 4:04 pm [187]#
                 thanks for your advice. i will choose to install under
                 macos.
                 [188]reply
   26. rp april 5, 2018 at 11:39 pm [189]#
       when i import cv2, i get no module named    cv2   . this is after the
       make install step. i   m using a mac. not sure how to proceed. i
       can   t find the cv2.so file either.. the make install did not throw
       any error
       [190]reply
          + adrian rosebrock april 6, 2018 at 8:46 am [191]#
            make sure you check the output of your    cmake    command and
            ensure your    python 3    section matches mine. it sounds like
            your python 3 section for cmake was not properly configured.
            opencv will not throw an error if this happens, it will just
            skip compiling the python binaries.
            [192]reply
   27. manju may 9, 2018 at 7:02 pm [193]#
       i had problem with tensorflow as backend. so i did 2 steps to
       correct it.
       pip3 uninstall h5py
       pip3 install h5py=2.8.1rc
       if you see a some command change after importing keras in final
       step its not fault of your installation but its due to old version
       of h5py. install new rc version and    alles gut   .
       [194]reply
   28. carlos june 17, 2018 at 4:59 pm [195]#
       hello adrian,
       i am whit a virtualenv called    dl    activated, python 3.6.5.
       the problem is that after installing opencv, there is no file at
       /usr/local/lib/python3.6/site-packages/cv2.cpython-36m-darwin.so
       i searched for the file and found it as
       /usr/local/lib/python3.5/site-packages/cv2.cpython-35m-darwin.so
       as you can see, the opencv is installing for python 3.5. i tried a
       lot of things, did all process again, but canon get
       cv2.cpython-36m-darwin.so, just the cv2.cpython-35m-darwin.so file.
           
       [196]reply
          + adrian rosebrock june 19, 2018 at 8:52 am [197]#
            hey carlos, i   m sorry to hear about the opencv issues. there
            are a few options here:
            1. create a    dl    python virtual environment for python 3.5 and
            use it instead of python 3.6.
            2. if you want to use python 3.6 check your output of the
               cmake    command ensure the    python 3    section is filled out
            correctly. i get the impression that it   s pointing to python
            3.5.
            [198]reply
   29. andrew baker june 26, 2018 at 8:56 pm [199]#
       another data point:
       macos: v10.13.5, macbook pro (mid 2014), nvidia geforce gt 750m
       2048 mb
       opencv: 3.4.1
       imutils: 0.4.6
       python: 3.6.5_1
       cuda driver version: 396.64
       cpu driver version: 387.10.10.10.35.106
       i was able to build opencv 3.4.1 successfully with cuda enabled.
       however some of my programs which ran fine under opencv 3.3.0 are
       not under 3.4.1. the video reading i   m doing with imutils whether
       it be from a video file or webcam is definitely slower. right now
       .avi files crash when trying to read them with opencv 3.4.1. there
       is a known assertion error being thrown. details are here:
       [200]https://stackoverflow.com/questions/49746279/opencv-3-4-1-erro
       r-assertion-failed-chunk-m-size-0xffff-in-readframe
       [201]reply
   30. jimmy august 25, 2018 at 8:12 pm [202]#
       i have got a ton of errors        
       [203]reply
          + adrian rosebrock august 30, 2018 at 9:31 am [204]#
            what errors have you gotten? without knowing what your errors
            are it   s impossible to diagnose or provide a suggestion or
            solution.
            [205]reply
   31. chai september 4, 2018 at 2:20 am [206]#
       hi adrian,
       i have already installed anaconda version on my mac,, do i need to
       drop before going through the above setup ?? or can they coexist ??
       if so, will there be any issues i can expect ??
       thanks,
       chai
       [207]reply
          + adrian rosebrock september 5, 2018 at 8:47 am [208]#
            if you   re an experienced python user who is comfortable
            debugging potential python path issues it shouldn   t be a
            problem. if you   re new to python and debugging i would suggest
            sticking clear of combining the two. the other solution would
            be to skip python virtual environments and just create a new
            virtual environment via anaconda.
            [209]reply
   32. dr rgs asthana september 6, 2018 at 12:52 pm [210]#
       i am dr rgs asthana. . i tried the environment you suggested in
       this paper. since i had mac with two cores so i wrote $ make -j2. i
       wrote to u about 5 days bak with a copy of output. i get two
       errors.
       [211]reply
          + adrian rosebrock september 11, 2018 at 8:41 am [212]#
            i replied to your question over email. be sure to check your
            inbox. please do not include large amounts of code/terminal
            output in the comment form. it breaks the formatting and i
            cannot approve the comment.
            [213]reply
   33. pvm444 october 1, 2018 at 11:05 pm [214]#
       hi adrien
       while compiling opencv i am having following error, not much help i
       see except [215]https://github.com/opencv/opencv/issues/11908
       i use the same version of packages you referred above
       error: cannot initialize a variable of type    char *    with an rvalue
       of type    const char *   
       char* str = pystring_asstring(obj);
       can you suggest how to go fwd please?
       [216]reply
          + adrian rosebrock october 8, 2018 at 10:42 am [217]#
            instead of installing opencv 3.3, instead download opencv
            3.4.2. from there the error should be resolved     
            [218]reply
               o varun october 16, 2018 at 2:06 pm [219]#
                 is it okay to use    pip install opencv-python    i just
                 tried it ,and it got installed with 3.4.2 version. please
                 let me know if there if there are any disadvantages of
                 doing so becasue in my mac i   m facing problems while
                 running the make command for opencv installation.
                 thanks in advance and really thank you for your wonderful
                 tutorial.
                 [220]reply
                    # adrian rosebrock october 20, 2018 at 8:04 am [221]#
                      there are. mainly, you should be doing pip install
                      opencv-contrib-python. refer to my [222]pip install
                      opencv post for more details.
                      [223]reply
          + varun october 16, 2018 at 2:19 pm [224]#
            or you can add const before char*, even that will solve the
            issue
            [225]reply
   34. laurence november 28, 2018 at 5:53 am [226]#
       great tutorial! i was following another guide which did not
       specified to look for the    local    in the path, so i actually could
       not make it work because my system was trying to launch the older
       version of python included in macos. very helpful and i like your
       style a lot!
       unfortunately my macbook pro mid 2010, while still very good at
       coding with various languages, is too old for keras because of the
       intel processor which is not using avx ! so i will start with aws
       and amis. very excited!
       [227]reply
          + adrian rosebrock november 30, 2018 at 9:14 am [228]#
            congrats on getting started with deep learning, laurence!
            [229]reply
   35. colin december 6, 2018 at 2:20 am [230]#
          pip install tensorflow    reports that    no matching distribution
       found for tensorflow   
       my virtualenv defaulted to python 3.7.1. could that be the issue
       and if so, do i have to start from scratch with python 3.6?
       [231]reply
          + adrian rosebrock december 6, 2018 at 9:28 am [232]#
            tensorflow doesn   t yet support python 3.7. you can either:
            1. build tensorflow from source for python 3.7 (recommended
            only if you have a fair amount of unix experience)
            2. downgrade to python 3.6
            [233]reply
   36. carl january 7, 2019 at 8:47 pm [234]#
       i got the problem at make too, i am on apple mac w 2 cores, even
       tried to go back to 1 core.
       was working well till make command
       [235]reply
          + adrian rosebrock january 8, 2019 at 6:42 am [236]#
            hey carl     what was the error you received?
            [237]reply
   37. monty max february 13, 2019 at 3:10 am [238]#
       i want to install tensorflow from source so that i can make use of
       all sse on my macbook 2.2 ghz intel core i7, intel iris pro 1536
       mb.
       should i follow the procedure on official website inside (dl4cv)
       virtual environment?
       [239]reply
          + adrian rosebrock february 14, 2019 at 1:00 pm [240]#
            yes, make sure you follow this guide.
            [241]reply

leave a reply [242]click here to cancel reply.

   comment
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________

   ______________________________name (required)

   ______________________________email (will not be published) (required)

   ______________________________website

   submit comment

   search...___________ (search)

resource guide (it   s totally free).

   [243]get your free 17-page id161 and deep learning resource
   guide pdf

   get your free 17 page id161, opencv, and deep learning
   resource guide pdf. inside you'll find my hand-picked tutorials, books,
   courses, and libraries to help you master cv and dl.

                           [244]download for free!

deep learning for id161 with python book     out now!

   [245]deep learning with id161 and python kickstarter

   you're interested in deep learning and id161, but you don't
   know how to get started. let me help. [246]my new book will teach you
   all you need to know about deep learning.

   click here to master deep learning

you can detect faces in images & video.

   [247]learn how to detect faces in images and video

   are you interested in detecting faces in images & video? but tired of
   googling for tutorials that never work? then let me help! i guarantee
   that my new book will turn you into a face detection ninja by the end
   of this weekend. [248]click here to give it a shot yourself.

   click here to master face detection

pyimagesearch gurus: now enrolling!

   the pyimagesearch gurus course is now enrolling! inside the course
   you'll learn how to perform:
     * automatic license plate recognition (anpr)
     * deep learning
     * face recognition
     * and much more!

   click the button below to learn more about the course, take a tour, and
   get 10 (free) sample lessons.

   take a tour & get 10 (free) lessons

hello! i   m adrian rosebrock.

   i'm an entrepreneur and ph.d who has launched two successful image
   search engines, [249]id my pill and [250]chic engine. i'm here to share
   my tips, tricks, and hacks i've learned along the way.

learn id161 in a single weekend.

   [251]become an opencv guru

   want to learn id161 & opencv? i can teach you in a single
   weekend. i know. it sounds crazy, but it   s no joke. my new book is your
   guaranteed, quick-start guide to becoming an opencv ninja. so why not
   give it a try? [252]click here to become a id161 ninja.

   click here to become an opencv ninja

subscribe via rss

   [253]pyimagesearch rss feed

   never miss a post! subscribe to the pyimagesearch rss feed and keep up
   to date with my image search engine tutorials, tips, and tricks
     * [254]popular

     * [255]raspbian stretch: install opencv 3 + python on your raspberry
       pi september 4, 2017
     * [256]install guide: raspberry pi 3 + raspbian jessie + opencv 3
       april 18, 2016
     * [257]home surveillance and motion detection with the raspberry pi,
       python, opencv, and dropbox june 1, 2015
     * [258]install opencv and python on your raspberry pi 2 and b+
       february 23, 2015
     * [259]ubuntu 16.04: how to install opencv october 24, 2016
     * [260]real-time id164 with deep learning and opencv
       september 18, 2017
     * [261]basic motion detection and tracking with python and opencv may
       25, 2015

   find me on [262]twitter, [263]facebook, and [264]linkedin.

      2019 pyimagesearch. all rights reserved.

   [tr?id=1465896023527386&ev=pageview&noscript=1]

   [email]
   [email]

references

   visible links
   1. http://feeds.feedburner.com/pyimagesearch
   2. https://www.pyimagesearch.com/comments/feed/
   3. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/feed/
   4. https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/
   5. https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/&format=xml
   6. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#navigation
   7. https://www.pyimagesearch.com/
   8. https://www.pyimagesearch.com/
   9. https://www.pyimagesearch.com/
  10. https://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/
  11. https://www.pyimagesearch.com/practical-python-opencv/
  12. https://www.pyimagesearch.com/pyimagesearch-gurus/
  13. https://www.pyimagesearch.com/opencv-tutorials-resources-guides/
  14. https://www.pyimagesearch.com/free-opencv-computer-vision-deep-learning-crash-course/
  15. https://www.pyimagesearch.com/about/
  16. https://www.pyimagesearch.com/contact/
  17. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#top
  18. https://www.pyimagesearch.com/author/adrian/
  19. https://www.pyimagesearch.com/category/deep-learning-2/
  20. https://www.pyimagesearch.com/category/dl4cv/
  21. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  22. https://www.pyimagesearch.com/2017/09/22/deep-learning-python-ubuntu-virtual-machine/
  23. https://www.pyimagesearch.com/2017/09/20/pre-configured-amazon-aws-deep-learning-ami-with-python/
  24. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/
  25. https://www.pyimagesearch.com/2017/09/27/setting-up-ubuntu-16-04-cuda-gpu-for-deep-learning-with-python/
  26. https://www.pyimagesearch.com/opencv-tutorials-resources-guides/
  27. https://virtualenv.pypa.io/en/latest/
  28. https://virtualenvwrapper.readthedocs.org/en/latest/
  29. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  30. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  31. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  32. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  33. https://www.pyimagesearch.com/tag/deep-learning/
  34. https://www.pyimagesearch.com/tag/dl4cv/
  35. https://www.pyimagesearch.com/tag/install/
  36. https://www.pyimagesearch.com/tag/macos/
  37. https://www.pyimagesearch.com/tag/optimization/
  38. https://www.pyimagesearch.com/tag/python/
  39. https://www.pyimagesearch.com/tag/python-3/
  40. https://www.pyimagesearch.com/tag/virtual-environments/
  41. https://www.pyimagesearch.com/2017/09/27/setting-up-ubuntu-16-04-cuda-gpu-for-deep-learning-with-python/
  42. https://www.pyimagesearch.com/2017/10/02/deep-learning-on-the-raspberry-pi-with-opencv/
  43. https://magsol.github.io/
  44. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436017
  45. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436017
  46. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436265
  47. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436265
  48. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436437
  49. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436437
  50. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436438
  51. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436438
  52. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436050
  53. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436050
  54. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436054
  55. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436054
  56. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436096
  57. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436096
  58. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436133
  59. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436133
  60. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436245
  61. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436245
  62. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436162
  63. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436162
  64. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436167
  65. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436167
  66. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436214
  67. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436214
  68. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436228
  69. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436228
  70. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436306
  71. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436306
  72. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436326
  73. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436326
  74. http://denkprozess.com/
  75. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436503
  76. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436503
  77. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436644
  78. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436644
  79. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436827
  80. https://stackoverflow.com/questions/21784641/installation-issue-with-matplotlib-python
  81. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436827
  82. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436943
  83. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-436943
  84. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437752
  85. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437752
  86. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437757
  87. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437757
  88. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437771
  89. https://youtu.be/6tqq_fbmzxc
  90. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437771
  91. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437773
  92. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437773
  93. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437836
  94. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-437836
  95. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-438763
  96. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-438763
  97. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-438869
  98. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-438869
  99. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439240
 100. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439240
 101. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439242
 102. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439242
 103. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439262
 104. http://www.torun4ever.com/
 105. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439236
 106. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439236
 107. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439265
 108. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-439265
 109. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-442067
 110. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-442067
 111. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-442173
 112. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-442173
 113. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-442988
 114. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-442988
 115. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443346
 116. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443346
 117. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443171
 118. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443171
 119. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443177
 120. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443177
 121. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443751
 122. https://stackoverflow.com/questions/32703296/dyld-library-not-loaded-usr-local-lib-libjpeg-8-dylib-homebrew-php
 123. https://github.com/lakshayg/tensorflow-build
 124. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443751
 125. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443797
 126. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-443797
 127. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445798
 128. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445798
 129. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445954
 130. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445954
 131. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446166
 132. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446166
 133. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446222
 134. https://www.python.org/downloads/mac-osx/
 135. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446222
 136. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446403
 137. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446535
 138. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445339
 139. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445339
 140. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445530
 141. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445530
 142. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445797
 143. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445797
 144. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445712
 145. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445712
 146. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445713
 147. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445713
 148. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445714
 149. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-445714
 150. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446655
 151. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446655
 152. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446720
 153. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-446720
 154. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-447125
 155. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-447125
 156. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-447226
 157. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-447226
 158. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449769
 159. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449769
 160. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449773
 161. https://conda.io/docs/user-guide/install/macos.html
 162. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449773
 163. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449776
 164. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449776
 165. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449810
 166. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-449810
 167. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-450129
 168. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-450129
 169. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452973
 170. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-453048
 171. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-489186
 172. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-489186
 173. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-489243
 174. https://www.pyimagesearch.com/2018/09/19/pip-install-opencv/
 175. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-489243
 176. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452451
 177. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452451
 178. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452523
 179. https://github.com/tensorflow/tensorflow/issues/8976
 180. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452523
 181. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452760
 182. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452760
 183. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452946
 184. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-452946
 185. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-453052
 186. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-453052
 187. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-453109
 188. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-453109
 189. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-455256
 190. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-455256
 191. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-455291
 192. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-455291
 193. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-460750
 194. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-460750
 195. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-468333
 196. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-468333
 197. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-468550
 198. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-468550
 199. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-469270
 200. https://stackoverflow.com/questions/49746279/opencv-3-4-1-error-assertion-failed-chunk-m-size-0xffff-in-readframe
 201. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-469270
 202. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-475524
 203. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-475524
 204. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-475986
 205. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-475986
 206. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-476487
 207. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-476487
 208. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-476695
 209. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-476695
 210. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-476870
 211. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-476870
 212. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-477509
 213. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-477509
 214. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-480493
 215. https://github.com/opencv/opencv/issues/11908
 216. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-480493
 217. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-481242
 218. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-481242
 219. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-482861
 220. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-482861
 221. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-483329
 222. https://www.pyimagesearch.com/2018/09/19/pip-install-opencv/
 223. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-483329
 224. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-482863
 225. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-482863
 226. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-489581
 227. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-489581
 228. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-490016
 229. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-490016
 230. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-490933
 231. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-490933
 232. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-490990
 233. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-490990
 234. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-495059
 235. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-495059
 236. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-495112
 237. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-495112
 238. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-501045
 239. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-501045
 240. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-501306
 241. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#comment-501306
 242. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#respond
 243. https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/
 244. https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/
 245. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 246. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 247. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection
 248. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection
 249. http://www.idmypill.com/
 250. http://www.chicengine.com/
 251. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend
 252. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend
 253. http://feeds.feedburner.com/pyimagesearch
 254. https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/#tab-pop
 255. https://www.pyimagesearch.com/2017/09/04/raspbian-stretch-install-opencv-3-python-on-your-raspberry-pi/
 256. https://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/
 257. https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/
 258. https://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/
 259. https://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/
 260. https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/
 261. https://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/
 262. https://twitter.com/pyimagesearch
 263. https://www.facebook.com/pyimagesearch
 264. http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b

   hidden links:
 266. https://www.pyimagesearch.com/wp-content/uploads/2016/11/sierra_xcode_app_store.jpg
 267. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_license.png
 268. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_bashprofile_homebrew.png
 269. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_which_python3_pip3.png
 270. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_bash_profile_virtualenv.png
 271. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_dl4cv.png
 272. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_cmake_python_numpy.png
 273. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_cv2_version.png
 274. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_macos_keras_installed.png
