   #[1]pyimagesearch    feed [2]pyimagesearch    comments feed
   [3]pyimagesearch    configuring ubuntu for deep learning with python
   comments feed [4]alternate [5]alternate

[6]navigation

   [7]pyimagesearch [8]pyimagesearch be awesome at opencv, python, deep
   learning, and id161

   [9]home

main menu

     * [10]start here
     * [11]practical python and opencv
     * [12]pyimagesearch gurus
     * [13]opencv 3 & 4 tutorials
     * [14]free crash course
     * [15]about
     * [16]contact

   [17]return to content

configuring ubuntu for deep learning with python

   by [18]adrian rosebrock on september 25, 2017 in [19]deep learning,
   [20]dl4cv

   when it comes to learning new technology such as deep learning,
   configuring your development environment tends to be half the battle.
   different operating systems, hardware, dependencies, and the actual
   libraries themselves can lead to many headaches before you   re even able
   to get started studying deep learning.

   these issues are further compounded by the speed of deep learning
   library updates and releases     new features push innovation, but
   oftentimes break previous versions. your environment can quickly become
   obsolete, so it is imperative to become an expert in installing and
   configuring your deep learning environment.

   now that [21]deep learning for id161 with python has
   officially released, i   ll be publishing three posts this week where i
   will demonstrate how to stand up your own deep learning environments so
   that you can get a head start before you dive into reading.

   i   ll be demonstrating how to configure your own native development
   environment for the following operating systems and peripherals:
     * configuring ubuntu for deep learning with python (i.e., the post
       you are currently reading)
     * setting up ubuntu (with gpu support) for deep learning with python
     * configuring macos for deep learning with python

   as you start to walk the path to deep learning and id161
   mastery, i   ll be right there with you.

   to get started configuring your ubuntu machine for deep learning with
   python, just keep reading.

configuring ubuntu for deep learning with python

   accompanying [22]my new deep learning book is a downloadable
   [23]pre-configured ubuntu virtualbox virtual machine with keras,
   tensorflow, opencv, and other id161/machine learning
   libraries pre-installed. by far, this is the fastest way to get up and
   running with deep learning for id161 with python.

   that being said, it is often desirable to install your environment on
   the bare metal so that you can take advantage of your physical
   hardware. for the gpu install tutorial part of this series it is a
   requirement that you be on the metal     a vm just won   t cut it since it
   doesn   t have access to your physical gpu.

   today, our blog post is broken down into four relatively easy steps:
    1. step #1: install ubuntu system dependencies
    2. step #2: create your python 3 virtual environment
    3. step #3: compile and install opencv
    4. step #4: install keras

   taking note of the steps, you will see that deep learning for computer
   vision with python supports python 3.

   python 3 will be the standard on pyimagesearch going forward as it is
   stable and quite frankly the future. many organizations have been
   hesitant to adopt python 3 at first (me included, as there was no
   python 3 support for opencv until opencv 3), but at this point if you
   don   t adopt python 3 you will be left in the dust. expect
   [24]pyimagesearch gurus course content to be compatible with python 3
   in the near future as well.

   notice that we have chosen keras as our deep learning library. keras
      stands out from the rest    of the available libraries for it   s ease of
   use and compatibility with both tensorflow and theano.

   my deep learning book focuses on fundamentals and breaking into the
   field with ease rather than introducing you to a bunch of libraries    
   so for the starter bundle and practitioner bundle, i demonstrate
   various tasks and exercises with keras (as well as implementing some
   basic neural network concepts by hand). the id163 bundle takes
   advantage of mxnet as well.

   while we will be primarily using keras in my book, there are many deep
   learning libraries for python, and i encourage you to become familiar
   with [25]my top 9 favorite python deep learning libraries.

   to get started, you   ll want to have some time on your hands and access
   to an ubuntu machine   s terminal     ssh is perfectly suitable if your box
   is in the cloud or elsewhere. let   s begin!

step #1: install ubuntu system dependencies

   the purpose of this step is to prepare your system with the
   dependencies necessary for opencv.

   all steps in this tutorial will be accomplished by using your terminal.
   to start, open up your command line and update the  apt-get  package
   manager to refresh and upgrade and pre-installed packages/libraries:
   configuring ubuntu for deep learning with python
   shell

   $ sudo apt-get update_______________________________________
   $ sudo apt-get upgrade______________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   $ sudo apt-get update
   $ sudo apt-get upgrade

   we   ll also need to install some developer tools as well as
   prerequisites required for image and video i/o, optimizations, and
   creating plots/visualizations:
   configuring ubuntu for deep learning with python
   shell

   $ sudo apt-get install build-essential cmake git unzip pkg-c
   $ sudo apt-get install libjpeg-dev libtiff5-dev libjasper-de
   $ sudo apt-get install libavcodec-dev libavformat-dev libsws
   $ sudo apt-get install libxvidcore-dev libx264-dev__________
   $ sudo apt-get install libgtk-3-dev_________________________
   $ sudo apt-get install libhdf5-serial-dev graphviz__________
   $ sudo apt-get install libopenblas-dev libatlas-base-dev gfo
   $ sudo apt-get install python-tk python3-tk python-imaging-t
   1
   2
   3
   4
   5
   6
   7
   8
   $ sudo apt-get install build-essential cmake git unzip pkg-config
   $ sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev
   libpng12-dev
   $ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev
   libv4l-dev
   $ sudo apt-get install libxvidcore-dev libx264-dev
   $ sudo apt-get install libgtk-3-dev
   $ sudo apt-get install libhdf5-serial-dev graphviz
   $ sudo apt-get install libopenblas-dev libatlas-base-dev gfortran
   $ sudo apt-get install python-tk python3-tk python-imaging-tk

   we   ll wrap up step #1 by installing the python development headers and
   libraries for both python 2.7 and python 3.5 (that way you have both).
   configuring ubuntu for deep learning with python
   shell

   $ sudo apt-get install python2.7-dev python3-dev____________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ sudo apt-get install python2.7-dev python3-dev

   note: if you do not install the python development headers and static
   library, you   ll run into issues during step #3 where we run  cmake  to
   configure our build. if these headers are not installed, then the
   cmake  command will be unable to automatically determine the proper
   values of the python interpreter and python libraries. in short, the
   output of this section will look    empty    and you will not be able to
   build the python bindings. when you get to step #3, take the time to
   compare your output of the command to mine.

   let   s continue on by creating a virtual environment to house opencv and
   keras.

step #2: create your python virtual environment

   in this section we will setup a python virtual environment on your
   system.

installing pip

   we are now ready to start configuring our python development
   environment for the build. the first step is to install pip , a python
   package manager:
   configuring ubuntu for deep learning with python
   shell

   $ wget https://bootstrap.pypa.io/get-pip.py_________________
   $ sudo python get-pip.py____________________________________
   $ sudo python3 get-pip.py___________________________________
   ____________________________________________________________
   1
   2
   3
   $ wget https://bootstrap.pypa.io/get-pip.py
   $ sudo python get-pip.py
   $ sudo python3 get-pip.py

installing virtualenv and virtualenvwrapper

   i   ve mentioned this in every single install tutorial i   ve ever done,
   but i   ll say it again here today: i   m a huge fan of
   both [26]virtualenv and [27]virtualenvwrapper. these python packages
   allow you to create separate, independent python environments
   for eachproject that you are working on.

   in short, using these packages allows you to solve the    project x
   depends on version 1.x, but project y needs 4.x dilemma. a fantastic
   side effect of using python virtual environments is that you can keep
   your system python neat, tidy, and free from clutter.

   while you can certainly install opencv with python bindings without
   python virtual environments, i highly recommend you use them as other
   pyimagesearch tutorials leverage python virtual environments. i   ll also
   be assuming that you have both  virtualenv  and  virtualenvwrapper
   installed throughout the remainder of this guide.

   if you would like a full, detailed explanation on why python virtual
   environments are a best practice, you should absolutely [28]give this
   excellent blog post on realpython a read. i also provide some
   commentary on why i personally prefer python virtual
   environments [29]in the first half of this tutorial.

   again, let me reiterate that it   s standard practice in the python
   community to be leveraging virtual environments of some sort, so i
   suggest you do the same:
   configuring ubuntu for deep learning with python
   shell

   $ sudo pip install virtualenv virtualenvwrapper_____________
   $ sudo rm -rf ~/.cache/pip get-pip.py_______________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   $ sudo pip install virtualenv virtualenvwrapper
   $ sudo rm -rf ~/.cache/pip get-pip.py

   once we have  virtualenv  and  virtualenvwrapper  installed, we need to
   update our ~/.bashrc  file to include the following lines at
   the bottom of the file:
   configuring ubuntu for deep learning with python
   shell

   # virtualenv and virtualenvwrapper__________________________
   export workon_home=$home/.virtualenvs_______________________
   export virtualenvwrapper_python=/usr/bin/python3____________
   source /usr/local/bin/virtualenvwrapper.sh__________________
   1
   2
   3
   4
   # virtualenv and virtualenvwrapper
   export workon_home=$home/.virtualenvs
   export virtualenvwrapper_python=/usr/bin/python3
   source /usr/local/bin/virtualenvwrapper.sh

   the ~/.bashrc  file is simply a shell script that bash runs whenever
   you launch a new terminal. you normally use this file to set various
   configurations. in this case, we are setting an environment variable
   called  workon_home   to point to the directory where our python
   virtual environments live. we then load any necessary configurations
   from  virtualenvwrapper  .

   to update your  ~/.bashrc  file simply use a standard text editor. i
   would recommend using  nano  ,  vim  , or emacs . you can also use
   graphical editors as well, but if you   re just getting started,  nano
   is likely the easiest to operate.

   a more simple solution is to use the  cat  command and avoid editors
   entirely:
   configuring ubuntu for deep learning with python
   shell

   $ echo -e "\n# virtualenv and virtualenvwrapper" >> ~/.bashr
   $ echo "export workon_home=$home/.virtualenvs" >> ~/.bashrc_
   $ echo "export virtualenvwrapper_python=/usr/bin/python3" >>
   $ echo "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.ba
   1
   2
   3
   4
   $ echo -e "\n# virtualenv and virtualenvwrapper" >> ~/.bashrc
   $ echo "export workon_home=$home/.virtualenvs" >> ~/.bashrc
   $ echo "export virtualenvwrapper_python=/usr/bin/python3" >> ~/.bashrc
   $ echo "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.bashrc

   after editing our ~/.bashrc  file, we need to reload the changes:
   configuring ubuntu for deep learning with python
   shell

   $ source ~/.bashrc__________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ source ~/.bashrc

   note: calling source on ~/.bashrc only has to be done once for our
   current shell session. anytime we open up a new terminal, the contents
   of ~/.bashrc  will be automatically executed (including our updates).

creating a virtual environment for deep learning and id161

   now that we have installed  virtualenv  and virtualenvwrapper, the next
   step is to actually create the python virtual environment     we do this
   using the  mkvirtualenv  command.

   in past install tutorials, i   ve presented the choice of python 2.7 or
   python 3. at this point in the python 3 development cycle, i consider
   it stable and the right choice. you may elect to use python 2.7 if you
   have specific compatibility requirements, but for the purposes of my
   new deep learning book we will use python 3.

   with that said, for the following command, ensure your python ( -p )
   flag is set to python3 :
   configuring ubuntu for deep learning with python
   shell

   $ mkvirtualenv dl4cv -p python3_____________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ mkvirtualenv dl4cv -p python3

   regardless of which python version you decide to use, the end result is
   that we have created a python virtual environment named  dl4cv  (short
   for    deep learning for id161   ).

   you can name this virtual environment whatever you like (and create as
   many python virtual environments as you want), but for the time being,
   i would suggest sticking with the dl4cv  name as that is what i   ll be
   using throughout the rest of this tutorial as well as the remaining
   install guides in this series.

verifying that you are in the    dl4cv    virtual environment

   if you ever reboot your ubuntu system; log out and log back in; or open
   up a new terminal, you   ll need to use the workon  command to re-access
   your dl4cv  virtual environment. an example of the workon  command
   follows:
   configuring ubuntu for deep learning with python
   shell

   $ workon dl4cv______________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ workon dl4cv

   to validate that you are in the dl4cv  virtual environment, simply
   examine your command line     if you see the text (dl4cv)  preceding your
   prompt, then you are in the dl4cv  virtual environment:
   [30][in_dl4cv.png_edited.png]

   figure 1: inside the dl4cv virtual environment denoted by    (dl4cv)    in
   the prompt.

   otherwise if you do not see the dl4cv  text, then you are not in the
   dl4cv  virtual environment:
   [31][not_in_dl4cv-1.png_edited-1.png]

   figure 2: outside of the dl4cv virtual environment. simply execute the
      workon dl4cv    command to get into the environment.

installing numpy

   the final step before we compile opencv is to install [32]numpy, a
   python package used for numerical processing. to install numpy, ensure
   you are in the dl4cv  virtual environment (otherwise numpy will be
   installed into the system version of python rather than the  dl4cv
   environment).

   from there execute the following command:
   configuring ubuntu for deep learning with python
   shell

   $ pip install numpy_________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ pip install numpy

step #3: compile and install opencv

   in this section we will install and compile opencv. we   ll start by
   downloading and unarchiving opencv 3.3. then we will build and compile
   opencv from source. finally we will test that opencv has been
   installed.

downloading opencv

   first let   s download [33]opencv and [34]opencv_contrib into your home
   directory:
   configuring ubuntu for deep learning with python
   shell

   $ cd ~______________________________________________________
   $ wget -o opencv.zip https://github.com/itseez/opencv/archiv
   $ wget -o opencv_contrib.zip https://github.com/itseez/openc
   ____________________________________________________________
   1
   2
   3
   $ cd ~
   $ wget -o opencv.zip https://github.com/itseez/opencv/archive/3.3.0.zip
   $ wget -o opencv_contrib.zip
   https://github.com/itseez/opencv_contrib/archive/3.3.0.zip

   you may need to expand the commands above to copy and past the full
   path to the opencv_contrib  file.

   then, let   s unzip both files:
   configuring ubuntu for deep learning with python
   shell

   $ unzip opencv.zip__________________________________________
   $ unzip opencv_contrib.zip__________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   2
   $ unzip opencv.zip
   $ unzip opencv_contrib.zip

running cmake

   let   s create a build  directory and run cmake:
   configuring ubuntu for deep learning with python
   shell

   $ cd ~/opencv-3.3.0/________________________________________
   $ mkdir build_______________________________________________
   $ cd build__________________________________________________
   $ cmake -d cmake_build_type=release \_______________________
       -d cmake_install_prefix=/usr/local \____________________
       -d with_cuda=off \______________________________________
       -d install_python_examples=on \_________________________
       -d opencv_extra_modules_path=~/opencv_contrib-3.3.0/modu
       -d build_examples=on .._________________________________
   1
   2
   3
   4
   5
   6
   7
   8
   9
   $ cd ~/opencv-3.3.0/
   $ mkdir build
   $ cd build
   $ cmake -d cmake_build_type=release \
       -d cmake_install_prefix=/usr/local \
       -d with_cuda=off \
       -d install_python_examples=on \
       -d opencv_extra_modules_path=~/opencv_contrib-3.3.0/modules \
       -d build_examples=on ..

   for cmake, it is important that your flags match mine for
   compatibility. also, make sure that your opencv_contrib  version is the
   exact same as the opencv version you downloaded (in this case version
   3.3.0 ).

   before we move on to the actual compilation step make sure you examine
   the output of cmake!

   start by scrolling to the section titled python 3 .

   make sure that your python 3 section looks like the figure below:
   [35][python3_cmake_edited.png]

   figure 3: checking that python 3 will be used when compiling opencv 3
   for ubuntu.

   pay attention that the interpreter points to our python3.5  binary
   located in the dl4cv  virtual environment while numpy  points to our
   numpy install.

   in either case if you do not see the dl4cv  virtual environment in
   these variables    paths, then it   s almost certainly because you are not
   in the dl4cv  virtual environment prior to running cmake!

   if this is the case, access the dl4cv  virtual environment using workon
   dl4cv  and re-run the command outlined above (i would also suggest
   deleting the build  directory and re-creating it).

compiling opencv

   now we are now ready to compile opencv with 4 cores:
   configuring ubuntu for deep learning with python
   shell

   $ make -j4__________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ make -j4

   note: you can try a version of the -j4  flag corresponding to the
   number of cores of your cpu to achieve compile time speedups. in this
   case i used -j4  since my machine has four cores. if you run into
   compilation errors, you may run the command make clean  and then just
   compile without the parallel flag: make .

   from there, all you need to do is to install opencv 3.3 and then free
   up some disk space if you so desire:
   configuring ubuntu for deep learning with python
   shell

   $ sudo make install_________________________________________
   $ sudo ldconfig_____________________________________________
   $ cd ~______________________________________________________
   $ rm -rf opencv-3.3.0 opencv.zip____________________________
   $ rm -rf opencv_contrib-3.3.0 opencv_contrib.zip____________
   1
   2
   3
   4
   5
   $ sudo make install
   $ sudo ldconfig
   $ cd ~
   $ rm -rf opencv-3.3.0 opencv.zip
   $ rm -rf opencv_contrib-3.3.0 opencv_contrib.zip

   when your compilation is complete you should see output that looks
   similar to the following:
   [36][dl4cv_compiled.png]

   figure 4: opencv compilation is complete.

symbolic linking opencv to your virtual environment

   to sym-link our opencv bindings into the dl4cv  virtual environment,
   issue the following commands:
   configuring ubuntu for deep learning with python
   shell

   $ cd ~/.virtualenvs/dl4cv/lib/python3.5/site-packages/______
   $ ln -s /usr/local/lib/python3.5/site-packages/cv2.cpython-3
   $ cd ~______________________________________________________
   ____________________________________________________________
   1
   2
   3
   $ cd ~/.virtualenvs/dl4cv/lib/python3.5/site-packages/
   $ ln -s
   /usr/local/lib/python3.5/site-packages/cv2.cpython-35m-x86_64-linux-gnu
   .so cv2.so
   $ cd ~

   notice that i am using python 3.5 in this example. if you are using
   python 3.6 (or newer) you   ll want to update the paths to use your
   version of python.

   secondly, your .so  file (i.e., the actual opencv bindings) may be some
   variant of what is shown above, so be sure to use the appropriate file
   by double-checking the path.

testing your opencv 3.3 install

   now that we   ve got opencv 3.3 installed and linked, let   s do a quick
   sanity test to see if things work:
   configuring ubuntu for deep learning with python
   python

   $ python____________________________________________________
   >>> import cv2______________________________________________
   >>> cv2.__version___________________________________________
   '3.3.0'_____________________________________________________
   1
   2
   3
   4
   $ python
   >>> import cv2
   >>> cv2.__version__
   '3.3.0'

   make sure you are in the dl4cv  virtual environment before firing up
   python ( workon dl4cv ). when you print out the version, it should
   match the version of opencv that you installed (in our case, opencv
   3.3.0 ).

   that   s it     assuming you didn   t encounter an import error, you   re ready
   to go on to step #4 where we will install keras.

step #4: install keras

   for this step, be sure that you are in the dl4cv  environment by
   issuing the workon dl4cv  command. then install our various python
   id161, image processing, and machine learning libraries:
   configuring ubuntu for deep learning with python
   shell

   $ pip install scipy matplotlib pillow_______________________
   $ pip install imutils h5py requests progressbar2____________
   $ pip install scikit-learn scikit-image_____________________
   ____________________________________________________________
   1
   2
   3
   $ pip install scipy matplotlib pillow
   $ pip install imutils h5py requests progressbar2
   $ pip install scikit-learn scikit-image

   next, install tensorflow:
   configuring ubuntu for deep learning with python

   $ pip install tensorflow____________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ pip install tensorflow

   notice how we are using the cpu version of tensorflow. i will be
   covering the gpu version in a separate tutorial.

   installing keras is extremely simple, thanks to pip :
   configuring ubuntu for deep learning with python
   shell

   $ pip install keras_________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   1
   $ pip install keras

   again, do this in the dl4cv  virtual environment.

   you can test our keras install from a python shell:
   configuring ubuntu for deep learning with python
   python

   $ python____________________________________________________
   >>> import keras____________________________________________
   using tensorflow backend.___________________________________
   >>>_________________________________________________________
   1
   2
   3
   4
   $ python
   >>> import keras
   using tensorflow backend.
   >>>

   you should see that keras has been imported with no errors and the
   tensorflow backend is being used.

   before you wrap up the install tutorial take a second to familiarize
   yourself with the ~/.keras/keras.json  file:
   configuring ubuntu for deep learning with python

   {___________________________________________________________
       "image_data_format": "channels_last",___________________
       "backend": "tensorflow",________________________________
       "epsilon": 1e-07,_______________________________________
       "floatx": "float32"_____________________________________
   }___________________________________________________________
   1
   2
   3
   4
   5
   6
   {
       "image_data_format": "channels_last",
       "backend": "tensorflow",
       "epsilon": 1e-07,
       "floatx": "float32"
   }

   ensure that image_data_format  is set to channels_last  and backend  is
   tensorflow .

   congratulations! you are now ready to begin your [37]deep learning for
   id161 with python journey.

summary

   in today   s blog post, i demonstrated how to set up your deep learning
   environment on an ubuntu machine using only the cpu. configuring your
   development environment is half the battle when it comes to learning
   new techniques, algorithms, and libraries.

   if you   re interested in studying deep learning in more detail, be sure
   to take a look at my new book, [38]deep learning for id161
   with python.

   the next few blog posts in this series will cover alternative
   environments including macos and ubuntu (with gpu support).

   of course, if you   re interested in pre-configured deep learning
   development environments, take a look my [39]ubuntu virtual machine and
   [40]amazon ec2 instance.

   if you are interested in learning more about id161 and deep
   learning, be sure to enter your email address in the form below to be
   notified when new blog posts + tutorials are published!

resource guide (it   s totally free).

   get your free 17-page id161 and deep learning resource guide
   pdf
   enter your email address below to get my free 17-page id161,
   opencv, and deep learning resource guide pdf. inside you'll find my
   hand-picked tutorials, books, courses, and python libraries to help you
   master id161 and deep learning!
   ____________________
   download the guide!

   [41]deep learning, [42]dl4cv, [43]install, [44]python, [45]python 3,
   [46]ubuntu, [47]virtual environments
   [48]getting started with deep learning for id161 with python
   [49]setting up ubuntu 16.04 + cuda + gpu for deep learning with python

66 responses to configuring ubuntu for deep learning with python

    1. brian robbins september 25, 2017 at 11:32 am [50]#
       libjasper-dev libpng12-dev unavailable on ubuntu 17.04
       (see [51]https://github.com/opencv/opencv/issues/8622)
       so are we forced to use ubuntu 16?
       [52]reply
          + adrian rosebrock september 26, 2017 at 8:23 am [53]#
            i created this tutorial with the intention of ubuntu 16 being
            used. i would suggest using ubuntu 16.
            [54]reply
               o luke july 14, 2018 at 1:55 pm [55]#
                 i wouldn   t recommend using older operating system just
                 for one package! in fact, you can see versions newer than
                 16.x already have opencv >3.0 so you probably don   t even
                 need to manually compile it on newer os and newer
                 packages.
                 [56]https://packages.ubuntu.com/search?suite=artful&searc
                 hon=names&keywords=opencv
                 by the way you know you can combine sudo apt-get packagea
                 packageb,
                 sudo apt-get packagec packaged, into one command
                 sudo apt-get packagea packageb packagec packaged
                 that should same some time and clean up above where you
                 have 8 different commands for users to paste into the
                 terminal.
                 thanks for the writeup     
                 [57]reply
                    # adrian rosebrock july 17, 2018 at 7:34 am [58]#
                      i do not recommend installing opencv via apt-get.
                      you will install an older version and likely without
                      the    contrib    module which is important for other
                      applications of id161.
                      [59]reply
                         @ igor nikitin august 1, 2018 at 6:36 am [60]#
                           you can use pip install opencv-python or pip
                           install opencv-contrib-python, but it will be
                           without cuda, i think it   s easier than comile
                           opencv. see on
                           [61]https://pypi.org/project/opencv-python/
          + rafael campos january 29, 2019 at 9:44 am [62]#
            i solved this issue adding this line to /etc/apt/sources.list:
            deb [63]http://security.ubuntu.com/ubuntu xenial-security main
            deb-src [64]http://security.ubuntu.com/ubuntu xenial-security
            main
            after, i update the system and installed the packages:
            sudo apt-get update
            sudo apt-get install libjasper1 libjasper-dev
            [65]reply
    2. michael schwab september 25, 2017 at 12:38 pm [66]#
       it   s also possible to use a pre-created dockerfile to get setup
       with a full cuda/cudnn/keras/theano/tensorflow/jupyter/opencv
       environment in ubuntu that has access to the cpu and gpu. this is
       using something called nvidia-docker and is probably the easiest
       way to have a full running gpu stack. i   ve used it successfully all
       weekend to work through the first 12 chapters of the deeplearning
       book. here   s more info..
       .[67]https://github.com/floydhub/dl-docker. for me, having a full
       docker stack that doesn   t require any changes to the host system
       makes things extremely portable and easy to configure.
       [68]reply
          + adrian rosebrock september 26, 2017 at 8:21 am [69]#
            i   ve used docker + gpu before, the biggest problem is that
            it   s a huge support burden for me personally. some
            pyimagesearch readers are just getting started and docker is
            overkill so a simple vm with a nice gui is more appropriate.
            some readers are more advanced and want to work with the    bare
            metal   . docker is excellent and makes life easier and i do
            hope i can cover it in the future. but for the time being i
            simply need to create a baseline of install instructions that
               work   .
            [70]reply
    3. jose antonio sanchez valero september 25, 2017 at 1:38 pm [71]#
       how much free space we need for this kind of task? btw i   m thinking
       about a new partition in my disc for deep learning with ubuntu so
       it would be nice if you could estimate how much we need
       regards.
       [72]reply
          + adrian rosebrock september 26, 2017 at 8:18 am [73]#
            the more the better. i would recommend at least 16gb to start
            (including os files), especially if you intend on following
            next week   s blog post on gpu + cuda. keep in mind that you   ll
            not only need space for the drivers but for any code +
            datasets you want to work with as well.
            [74]reply
    4. ofey september 25, 2017 at 1:48 pm [75]#
       hey adrian! thank you for the tutorial     
       can you also post a tutorial for installing cuda support for opencv
       with python on ubuntu. like i   m able to set it up but have to go
       through a bunch of tutorials. so if you can enumerate the steps (in
       your style) it would be awesome!
       [76]reply
          + adrian rosebrock september 26, 2017 at 8:17 am [77]#
            yes, this coming wednesday (september 27th, 2017) i   ll be
            doing a gpu + cuda install tutorial for ubuntu.
            [78]reply
    5. [79]jason september 25, 2017 at 7:38 pm [80]#
       great little tutorial   . i   m just wondering you prefer to compile
       opencv from source instead of plain install? do you get more stuff
       this way ??
       also what about anaconda for a virtual environment. i   ve been using
       it for quite some time without issues? again    with anaconda i can
       just install opencv?!?
       [81]reply
          + adrian rosebrock september 26, 2017 at 8:11 am [82]#
            i   m not sure what you mean by    plain install   . do you mean
            using apt-get? the reason is because the apt-get will install
            an older, out of date version of opencv. compiling from source
            will allow you to pull in the latest opencv version, including
            the    contrib    modules. anaconda does a better job of keeping
            their scientific libraries up to date, but again, compiling
            from source gives you the most control.
            [83]reply
    6. michael september 25, 2017 at 9:32 pm [84]#
       ugh, i got all the way to the end of step 3, and couldn   t import
       cv2: import error: no module named    cv2   
       any suggestions?
       [85]reply
          + adrian rosebrock september 26, 2017 at 8:10 am [86]#
            there are a number of things that could be causing the
            problem. first, make sure that cmake correctly configured the
            python 3 build and    python3    is in the list of opencv modules
            to be compiled. secondly, make sure you sym-linked the
            resulting .so file (which are your actual python bindings)
            into the python virtual environment. finally, double-check
            that you are in the dl4cv python virtual environment before
            running cmake.
            [87]reply
          + daniel watanabe september 26, 2017 at 1:53 pm [88]#
            to fix the import cv2 problem i refered to this link:
            [89]https://stackoverflow.com/a/34628823/7690982
            [90]reply
               o adrian rosebrock september 27, 2017 at 6:50 am [91]#
                 are you using python virtual environments? if so, i do
                 not recommend this solution. let your python virtual
                 environment set the pythonpath accordingly.
                 [92]reply
                    # daniel watanabe september 27, 2017 at 8:09 am [93]#
                      yes, i am using python virtual environments.
                      however, the python wasn   t setting the pythonpath.
                      [94]reply
                         @ adrian rosebrock september 27, 2017 at 8:40 am
                           [95]#
                           i   d be curious to learn more about your setup.
                           explicitly setting the pythonpath shouldn   t be
                           necessary. definitely ensure that the .so file
                           (i.e., your actual opencv bindings) are
                           correctly sym-linked into your python virtual
                           environment.
          + regina march 6, 2019 at 1:31 pm [96]#
            i also had this problem, it just needed to run    source
            ~/.bashrc    and then it worked fine.
            [97]reply
    7. jl september 26, 2017 at 6:59 am [98]#
       i sent a message yesterday that i was having issues configuring vm
       , cancel it , its all working now , i made a new virtual machine
       and now its all working
       thanks
       [99]reply
          + adrian rosebrock september 26, 2017 at 8:05 am [100]#
            congrats on resolving the issue!
            [101]reply
    8. mario september 26, 2017 at 1:47 pm [102]#
       hi.
       this comes at a fortunate time as i was just looking for something
       simliar, but i   m still looking into different frameworks: what do
       you think about pytorch? i have no experience but the autograd
       feature looks like a sweet component to have especially when
       playing around with the architecture, do you think keras (with any
       backend) is flexible enough for research?
       thank you!
       [103]reply
          + adrian rosebrock september 27, 2017 at 6:48 am [104]#
            i plan on covering pytorch vs. keras in a future blog post,
            but my opinion is that keras is more mature, more used, and
            has a larger community. pytorch has a lot of nice features,
            but keras is fantastic for both research and commercial
            applications.
            [105]reply
    9. daniel watanabe september 26, 2017 at 1:57 pm [106]#
       for this error:
       /opencv_contrib-3.1.0/modules/hdf/include/opencv2/hdf/hdf5.hpp:40:1
       8: fatal error: hdf5.h: no such file or directory
       compilation terminated. i refered to the links below for help:
       [107]https://github.com/opencv/opencv/issues/6016
       [108]https://github.com/bvlc/caffe/issues/4333
       [109]reply
          + adrian rosebrock september 27, 2017 at 6:51 am [110]#
            another solution is to update the cmake command to configure
            the build without hdf5:
            -d with_hdf5=off
            [111]reply
   10. abhijit september 26, 2017 at 3:31 pm [112]#
       thanks much for the great tutorial adrian !!
       the install process was a smooth sail. it worked exactly as
       described.
       (i am using linuxmint 18.1)
       i have purchased the copy of dl4cv and anxious now to get my hands
       on the code !!
       abhijit
       [113]reply
          + adrian rosebrock september 27, 2017 at 6:47 am [114]#
            nice job on getting your system configured, abhijit! and thank
            you for picking up a copy dl4cv      were you able to download
            the code associated wit the book okay?
            [115]reply
   11. eason wang september 29, 2017 at 2:43 am [116]#
       hi adrian, i run into a problem for my ubuntu 16.04. in the cmake
       step, i got the results you mentioned. however, for the    make
       step   , it was terminated becaused of
          /opencv-3.3.0/modules/stitching/include/opencv2/stitching/detail/m
       atchers.hpp:52:42: fatal error: opencv2/xfeatures2d/cuda.hpp: no
       such file or directory
       compilation terminated.    don   t know why. i checked the output for
       cmake, and found this    
          output removed for formatting   
       do you have any suggestion on this issue? thanks!
       [117]reply
          + adrian rosebrock october 2, 2017 at 10:21 am [118]#
            it sounds like cuda is interfering with your compile. please
            ensure that the -d with_cuda=off flag is supplied to cmake.
            [119]reply
   12. carlos october 18, 2017 at 5:07 am [120]#
       hi adrian , do you think it   s possible to follow all the step to
       install keras in raspbian in my raspberry pi 3 ?
       [121]reply
          + carlos october 18, 2017 at 5:08 am [122]#
            i train a model in keras on my gpu and i ask my self if it   s
            possible to run the model i train in my raspberry pi
            [123]reply
               o adrian rosebrock october 19, 2017 at 4:54 pm [124]#
                 yes. train the model on your gpu system. serialize it to
                 disk. transfer it to your raspberry pi and then load it
                 there. i detail a similar process inside my book,
                 [125]deep learning for id161 with python.
                 [126]reply
          + adrian rosebrock october 19, 2017 at 4:53 pm [127]#
            yes. since raspbian is ubuntu-based you can use these
            instructions to install keras on your raspberry pi.
            [128]reply
   13. mr.lee october 27, 2017 at 8:33 am [129]#
       when i    import cv2   ,there was an error:
       importerror: /opt/ros/kinetic/lib/python2.7/dist-packages/cv2.so:
       undefined symbol: pycobject_type
       what is that? what should i do?
       [130]reply
          + adrian rosebrock october 27, 2017 at 11:49 am [131]#
            hi mr. lee     it seems you have a cv2.so linking problem.
            assuming you   re using virtual environments you should try
            this:
            cd ~/.virtualenvs/dl4cv/lib/python3.5/site-packages/
            ln -sf /usr/local/lib/python3.5/site-packages/cv2.so cv2.so
            try that and let me know if it resolves your issue.
            i also offer a pre-configured virtual machine which is ready
            to go with the [132]deep learning for id161 with
            python book. i know this isn   t the ideal solution, but it
            would let you get to learning rather than fighting
            configuration issues.
            [133]reply
               o mr.lee october 27, 2017 at 10:19 pm [134]#
                 i have tried that,but it was the same problem.i not sure
                 what   s wrong.do you have any suggestion?
                 [135]reply
               o mr.lee october 30, 2017 at 12:39 am [136]#
                 it comes to the same problem.i was confused by it several
                 days.do you have more suggestion?
                 [137]reply
                    # adrian rosebrock october 30, 2017 at 1:42 pm [138]#
                      since you   re using ros, see [139]this sof thread.
                      [140]reply
                         @ gushu october 9, 2018 at 8:49 am [141]#
                           i found the solution in the stack overflow link
                           you shared. thanks!
   14. mr.wang october 28, 2017 at 11:21 am [142]#
       i have a problem,after i installed the opencv3.3.0,when i tried:
       pkg-config    modversion opencv
       it showed:
       3.3.0
       but when i do this :
       $ python
       >>> import cv2
       >>> cv2.__version__
       then it turned to:
          3.2.0-dev   
       what is that mean?was i success to install the opencv3.3.0?
       [143]reply
          + adrian rosebrock october 30, 2017 at 2:40 pm [144]#
            hi mr. wang     thanks for your comment. did you use virtual
            environments as i instructed? you might not be in your new
            virtual environment. did you compile from source or use a
            package manager to install opencv?
            [145]reply
   15. reed october 28, 2017 at 12:36 pm [146]#
       hi adrian
       i have installed the optimized opencv following by the post on 9th
       oct, then followed this post to install keras. when i installed
       tensorflow, it showed:
       (cv) pi@raspberrypi:~ $ pip install tensorflow
       collecting tensorflow
       could not find a version that satisfies the requirement tensorflow
       (from versions:)
       no matching distribution found for tensorflow
       what is that?and what should i do?
       [147]reply
          + reed october 28, 2017 at 12:48 pm [148]#
            i download a wheel from
            [149]https://github.com/lhelontra/tensorflow-on-arm/releases/t
            ag/v1.3.1
            and install
            $pip install
            /home/pi/downloads/tensorflow-1.3.1-cp35-none-linux_armv7l.whl
            and it works~magic
            [150]reply
               o adrian rosebrock october 30, 2017 at 2:43 pm [151]#
                 hi reed     i   m glad you found a workable solution!
                 [152]reply
   16. halbstein november 26, 2017 at 4:29 am [153]#
       is it possible to make a backup of the vitrualenv so i do not have
       to reinstall everything when something goes wrong?
       [154]reply
          + adrian rosebrock november 27, 2017 at 1:10 pm [155]#
            you can run    pip freeze    to save all dependencies, but keep in
            mind that opencv also relies on libraries installed globally
            as well. i would suggest backing up your system if at all
            possible.
            [156]reply
   17. jose luis december 21, 2017 at 1:36 pm [157]#
       hi adrian, first of all thanks, i got your book and i   ve been
       reading it even since. in step 3 i got stocked an error popped out
       /home/jose/opencv_contrib-3.3.0/modules/xfeatures2d/src/vgg.cpp:474
       :41: fatal error: vgg_generated_120.i: no such file or directory
       i followed all the steps and i actually don   t know how to proceed.
       thanks a lot.
       [158]reply
          + adrian rosebrock december 22, 2017 at 8:37 am [159]#
            hi jose, did you make sure that the opencv-contrib package was
            included in your cmake command?
            [160]reply
               o jose luis december 26, 2017 at 10:19 pm [161]#
                 yes, i did, still the same error appeared. i started all
                 over again and the error stopped. thanks a lot!
                 [162]reply
                    # adrian rosebrock december 27, 2017 at 9:52 am [163]#
                      congrats on resolving the issue     
                      [164]reply
   18. alzbeta vlachynska april 10, 2018 at 9:54 am [165]#
       hi adrian,
       i   ve just finished the installation on the new ubuntu 17.10 and i
       faced the problem with the fact that the python3 is the default
       interpreter there, in the cmake configuration output there is no
       python3 section and the cv2.so library was never built.
       it could be fixed by adding this option to cmake:
       -d python_default_executable=/usr/bin/python3
       -d build_new_python_support=on
       for more info please reffer to
       [166]https://github.com/opencv/opencv/issues/8425 and
       [167]http://dalvikplanet.blogspot.co.at/2017/12/how-to-install-open
       cv-on-ubuntu-1710.html.
       hope this information will save someone some time and nerves.     
       by the way, i am now making my way through your deep learning book
       and i must say, it is very well written, i can read it almost like
       belles-lettres. thank you for that!     
       all the best.
       bety
       [168]reply
          + adrian rosebrock april 10, 2018 at 11:54 am [169]#
            thanks so much for sharing! not only do i really appreciate it
            but i   m sure other pyimagesearch readers will as well.
            belles-lettres is probably the highest compliment i have ever
            received on my writing. thank you so much and i   m so happy to
            hear you are enjoying the book     
            [170]reply
   19. arklegru april 13, 2018 at 7:19 pm [171]#
       hey adrian,
       i ran into several problems over the course of setting up my
       ubuntu. i   ve solved most of them myself, but i   ve gotten stuck at
       getting my opencv working. all the compilation seems to work and
       i   ve followed the instructions for the symbolic linking. however,
       when testing to see if it works, when i try importing cv2 in python
       i get the error    importerror: libopencv_reg.so.3.3: cannot enable
       executable stack as shared object requires: invalid argument   
       i   ve looked online and they
       ([172]https://stackoverflow.com/questions/39136040/python3-4-error-
       cannot-enable-executable-stack-as-shared-object-requires-inva)
       recommended running execstack on my files, which i did and it still
       doesn   t work. i   ve already tried redoing everything from scratch.
       do you have any insights? my system is a 64-bit windows 10 os
       running ubuntu. thanks!
       [173]reply
          + adrian rosebrock april 16, 2018 at 2:35 pm [174]#
            hi arklegru     i   m sorry to hear about the issues installing
            opencv on your ubuntu system. to be honest i have not
            encountered that error before but my guess is that there was a
            problem with your opencv + python bindings. go back to your
               cmake    step and make sure your python 2 or python 3 section
            matches mind (depending on which version of python you are
            using, of course).
            my guess is that you compiled opencv bindings for one version
            of python (ex. python 2.7) but are trying to import the
            bindings into a different opencv version (ex. python 3).
            [175]reply
   20. qin june 9, 2018 at 1:29 am [176]#
       hi, i have a problem here:
       when building opencv, i couldn   t get the cv.so. and i discover in
       the log that i have no numpy information, only interpreter
       information is there as is shown. i do have installed numpy. please
       help !!!
       python 3:
           interpreter: /home/qin/.virtualenvs/dl4cv/bin/python3 (ver 3.5.2)
          
           python (for build): /usr/bin/python2.7
       [177]reply
          + qin june 9, 2018 at 3:10 am [178]#
            turned out i have to apt install python3-numpy first. then it
            works as the tutorial shows. thanks for the
            information@arklegru. but i don   t know the logic behind this
            since i already installed numpy for my virualen
            [179]reply
               o adrian rosebrock june 13, 2018 at 6:09 am [180]#
                 that is very strange. you should not have needed to
                 apt-get install numpy. also, you can ignore the    python
                 (for build)    section     that configuration is buggy. as
                 long as your    python 3    section is filled out correctly
                 the compile will complete.
                 [181]reply
   21. philipp august 10, 2018 at 10:15 am [182]#
       hey,
       i did this tutorial on a standard digitalocean droplet and it
       worked great!
       thanks for sharing!
       [183]reply
          + adrian rosebrock august 15, 2018 at 9:24 am [184]#
            congrats on getting your ubuntu system configured, philipp!
            [185]reply
   22. aniket september 1, 2018 at 2:49 am [186]#
       i got a error after last step saying :
       >>> import tensorflow
       illegal instruction (core dumped)
       >>> import keras
       illegal instruction (core dumped)
       i am using ubuntu 16, cpu.
       all previous steps before last one that is was >>>import
       tensorflow   .executed without any error
       so please suggest a solution.
       [187]reply
          + aniket september 1, 2018 at 3:10 am [188]#
            hello sir,
            i solved this issue by downgrading tensorflow==1.5. it   s a
            great tutorial. installation done successfully.
            earlier i installed tensorflow 1.10.1, so giving error.
            thanks dr. adrian
            [189]reply
   23. [190]ainamazima yoas september 11, 2018 at 4:46 am [191]#
       thanks adrian, finally i manged to install all the environments.
       however, i had to downgrade tensorflow version from 1.10.1 to 1.5
       due to an error (core dumped)
       i would request you to also make us guides to installation through
       anaconda 5.2. (this was the biggest issue i was getting due to the
       fact that anaconda was pointing to python 3.6) and thus could stop
       on symlinking #step3
       thank you very much adrian.
       [192]reply
   24. brucedai november 20, 2018 at 2:48 am [193]#
       thanks very much. love your book and posts., helped me a lot.
       but i got a question, in all the commands involve    pip install   , do
       you actually mean    pip3 install    instead? since you have installed
       both python 2.7, python 3, pip 2, pip 3, the default of    pip
       install    will be referring to python 2.7. am i right? and how do i
       make a alias for pip3? i mean if i type    pip install   , actually i
       will be calling    pip3 install   , how do i change the names of it?
       like change pip to pip2, pip3 to pip.
       thanks.
       [194]reply
          + adrian rosebrock november 20, 2018 at 9:06 am [195]#
            no, once you are inside your python virtual environment the
               pip    command automatically detects your python version inside
            the virtual environment and installs any packages into the
               site-packages    directory of the virtual environment.
            [196]reply

leave a reply [197]click here to cancel reply.

   comment
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________

   ______________________________name (required)

   ______________________________email (will not be published) (required)

   ______________________________website

   submit comment

   search...___________ (search)

resource guide (it   s totally free).

   [198]get your free 17-page id161 and deep learning resource
   guide pdf

   get your free 17 page id161, opencv, and deep learning
   resource guide pdf. inside you'll find my hand-picked tutorials, books,
   courses, and libraries to help you master cv and dl.

                           [199]download for free!

deep learning for id161 with python book     out now!

   [200]deep learning with id161 and python kickstarter

   you're interested in deep learning and id161, but you don't
   know how to get started. let me help. [201]my new book will teach you
   all you need to know about deep learning.

   click here to master deep learning

you can detect faces in images & video.

   [202]learn how to detect faces in images and video

   are you interested in detecting faces in images & video? but tired of
   googling for tutorials that never work? then let me help! i guarantee
   that my new book will turn you into a face detection ninja by the end
   of this weekend. [203]click here to give it a shot yourself.

   click here to master face detection

pyimagesearch gurus: now enrolling!

   the pyimagesearch gurus course is now enrolling! inside the course
   you'll learn how to perform:
     * automatic license plate recognition (anpr)
     * deep learning
     * face recognition
     * and much more!

   click the button below to learn more about the course, take a tour, and
   get 10 (free) sample lessons.

   take a tour & get 10 (free) lessons

hello! i   m adrian rosebrock.

   i'm an entrepreneur and ph.d who has launched two successful image
   search engines, [204]id my pill and [205]chic engine. i'm here to share
   my tips, tricks, and hacks i've learned along the way.

learn id161 in a single weekend.

   [206]become an opencv guru

   want to learn id161 & opencv? i can teach you in a single
   weekend. i know. it sounds crazy, but it   s no joke. my new book is your
   guaranteed, quick-start guide to becoming an opencv ninja. so why not
   give it a try? [207]click here to become a id161 ninja.

   click here to become an opencv ninja

subscribe via rss

   [208]pyimagesearch rss feed

   never miss a post! subscribe to the pyimagesearch rss feed and keep up
   to date with my image search engine tutorials, tips, and tricks
     * [209]popular

     * [210]raspbian stretch: install opencv 3 + python on your raspberry
       pi september 4, 2017
     * [211]install guide: raspberry pi 3 + raspbian jessie + opencv 3
       april 18, 2016
     * [212]home surveillance and motion detection with the raspberry pi,
       python, opencv, and dropbox june 1, 2015
     * [213]install opencv and python on your raspberry pi 2 and b+
       february 23, 2015
     * [214]ubuntu 16.04: how to install opencv october 24, 2016
     * [215]real-time id164 with deep learning and opencv
       september 18, 2017
     * [216]basic motion detection and tracking with python and opencv may
       25, 2015

   find me on [217]twitter, [218]facebook, and [219]linkedin.

      2019 pyimagesearch. all rights reserved.

   [tr?id=1465896023527386&ev=pageview&noscript=1]

   [email]
   [email]

references

   1. http://feeds.feedburner.com/pyimagesearch
   2. https://www.pyimagesearch.com/comments/feed/
   3. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/feed/
   4. https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/
   5. https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/&format=xml
   6. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#navigation
   7. https://www.pyimagesearch.com/
   8. https://www.pyimagesearch.com/
   9. https://www.pyimagesearch.com/
  10. https://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/
  11. https://www.pyimagesearch.com/practical-python-opencv/
  12. https://www.pyimagesearch.com/pyimagesearch-gurus/
  13. https://www.pyimagesearch.com/opencv-tutorials-resources-guides/
  14. https://www.pyimagesearch.com/free-opencv-computer-vision-deep-learning-crash-course/
  15. https://www.pyimagesearch.com/about/
  16. https://www.pyimagesearch.com/contact/
  17. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#top
  18. https://www.pyimagesearch.com/author/adrian/
  19. https://www.pyimagesearch.com/category/deep-learning-2/
  20. https://www.pyimagesearch.com/category/dl4cv/
  21. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  22. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  23. https://www.pyimagesearch.com/2017/09/22/deep-learning-python-ubuntu-virtual-machine/
  24. https://www.pyimagesearch.com/pyimagesearch-gurus/
  25. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/
  26. https://virtualenv.pypa.io/en/latest/
  27. https://virtualenvwrapper.readthedocs.org/en/latest/
  28. https://realpython.com/blog/python/python-virtual-environments-a-primer/
  29. https://www.pyimagesearch.com/2016/05/02/accessing-rpi-gpio-and-gpio-zero-with-opencv-python/
  30. https://www.pyimagesearch.com/wp-content/uploads/2017/09/in_dl4cv.png_edited.png
  31. https://www.pyimagesearch.com/wp-content/uploads/2017/09/not_in_dl4cv-1.png_edited-1.png
  32. http://www.numpy.org/
  33. https://github.com/itseez/opencv
  34. https://github.com/itseez/opencv_contrib
  35. https://www.pyimagesearch.com/wp-content/uploads/2017/09/python3_cmake_edited.png
  36. https://www.pyimagesearch.com/wp-content/uploads/2017/09/dl4cv_compiled.png
  37. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  38. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
  39. https://www.pyimagesearch.com/2017/09/22/deep-learning-python-ubuntu-virtual-machine/
  40. https://www.pyimagesearch.com/2017/09/20/pre-configured-amazon-aws-deep-learning-ami-with-python/
  41. https://www.pyimagesearch.com/tag/deep-learning/
  42. https://www.pyimagesearch.com/tag/dl4cv/
  43. https://www.pyimagesearch.com/tag/install/
  44. https://www.pyimagesearch.com/tag/python/
  45. https://www.pyimagesearch.com/tag/python-3/
  46. https://www.pyimagesearch.com/tag/ubuntu/
  47. https://www.pyimagesearch.com/tag/virtual-environments/
  48. https://www.pyimagesearch.com/2017/09/23/getting-started-deep-learning-computer-vision-python/
  49. https://www.pyimagesearch.com/2017/09/27/setting-up-ubuntu-16-04-cuda-gpu-for-deep-learning-with-python/
  50. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435639
  51. https://github.com/opencv/opencv/issues/8622
  52. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435639
  53. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435724
  54. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435724
  55. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-471028
  56. https://packages.ubuntu.com/search?suite=artful&searchon=names&keywords=opencv
  57. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-471028
  58. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-471267
  59. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-471267
  60. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-472699
  61. https://pypi.org/project/opencv-python/
  62. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-498392
  63. http://security.ubuntu.com/ubuntu
  64. http://security.ubuntu.com/ubuntu
  65. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-498392
  66. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435644
  67. https://github.com/floydhub/dl-docker
  68. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435644
  69. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435722
  70. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435722
  71. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435650
  72. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435650
  73. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435720
  74. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435720
  75. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435651
  76. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435651
  77. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435719
  78. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435719
  79. http://www.programic.com.au/
  80. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435665
  81. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435665
  82. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435714
  83. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435714
  84. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435672
  85. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435672
  86. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435713
  87. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435713
  88. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435755
  89. https://stackoverflow.com/a/34628823/7690982
  90. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435755
  91. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435817
  92. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435817
  93. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435827
  94. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435827
  95. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435830
  96. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-505276
  97. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-505276
  98. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435705
  99. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435705
 100. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435710
 101. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435710
 102. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435754
 103. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435754
 104. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435816
 105. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435816
 106. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435756
 107. https://github.com/opencv/opencv/issues/6016
 108. https://github.com/bvlc/caffe/issues/4333
 109. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435756
 110. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435818
 111. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435818
 112. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435760
 113. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435760
 114. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435813
 115. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435813
 116. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435990
 117. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-435990
 118. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-436273
 119. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-436273
 120. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-437912
 121. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-437912
 122. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-437913
 123. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-437913
 124. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438061
 125. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 126. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438061
 127. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438060
 128. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438060
 129. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438855
 130. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438855
 131. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438883
 132. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 133. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438883
 134. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438909
 135. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438909
 136. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439084
 137. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439084
 138. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439172
 139. https://stackoverflow.com/questions/43019951/after-install-ros-kinetic-cannot-import-opencv
 140. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439172
 141. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-481551
 142. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438961
 143. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438961
 144. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439192
 145. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439192
 146. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438964
 147. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438964
 148. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438965
 149. https://github.com/lhelontra/tensorflow-on-arm/releases/tag/v1.3.1
 150. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-438965
 151. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439194
 152. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-439194
 153. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-441657
 154. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-441657
 155. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-441784
 156. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-441784
 157. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444063
 158. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444063
 159. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444232
 160. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444232
 161. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444738
 162. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444738
 163. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444815
 164. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-444815
 165. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-455908
 166. https://github.com/opencv/opencv/issues/8425
 167. http://dalvikplanet.blogspot.co.at/2017/12/how-to-install-opencv-on-ubuntu-1710.html
 168. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-455908
 169. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-455930
 170. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-455930
 171. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-456551
 172. https://stackoverflow.com/questions/39136040/python3-4-error-cannot-enable-executable-stack-as-shared-object-requires-inva
 173. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-456551
 174. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-456971
 175. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-456971
 176. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-467549
 177. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-467549
 178. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-467552
 179. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-467552
 180. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-468003
 181. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-468003
 182. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-473899
 183. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-473899
 184. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-474433
 185. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-474433
 186. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-476182
 187. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-476182
 188. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-476185
 189. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-476185
 190. http://www.codinex.co.ug/
 191. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-477409
 192. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-477409
 193. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-487977
 194. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-487977
 195. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-488046
 196. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#comment-488046
 197. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#respond
 198. https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/
 199. https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/
 200. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 201. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 202. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection
 203. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection
 204. http://www.idmypill.com/
 205. http://www.chicengine.com/
 206. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend
 207. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend
 208. http://feeds.feedburner.com/pyimagesearch
 209. https://www.pyimagesearch.com/2017/09/25/configuring-ubuntu-for-deep-learning-with-python/#tab-pop
 210. https://www.pyimagesearch.com/2017/09/04/raspbian-stretch-install-opencv-3-python-on-your-raspberry-pi/
 211. https://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/
 212. https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/
 213. https://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/
 214. https://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/
 215. https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/
 216. https://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/
 217. https://twitter.com/pyimagesearch
 218. https://www.facebook.com/pyimagesearch
 219. http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b
