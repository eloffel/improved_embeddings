   #[1]pyimagesearch    feed [2]pyimagesearch    comments feed
   [3]pyimagesearch    my top 9 favorite python deep learning libraries
   comments feed [4]alternate [5]alternate

[6]navigation

   [7]pyimagesearch [8]pyimagesearch be awesome at opencv, python, deep
   learning, and id161

   [9]home

main menu

     * [10]start here
     * [11]practical python and opencv
     * [12]pyimagesearch gurus
     * [13]opencv 3 & 4 tutorials
     * [14]free crash course
     * [15]about
     * [16]contact

   [17]return to content

my top 9 favorite python deep learning libraries

   by [18]adrian rosebrock on june 27, 2016 in [19]deep learning,
   [20]libraries

   deep_learning_lib_network

   so you   re interested in deep learning and convolutional neural
   networks. but where do you start? which library do you use? there are
   just so many!

   inside this blog post, i detail 9 of my favorite python deep learning
   libraries.

   this list is by no means exhaustive, it   s simply a list of libraries
   that i   ve used in my id161 career and found particular useful
   at one time or another.

   some of these libraries i use more than others    
   specifically, keras, mxnet, and sklearn-theano.

   others, i use indirectly, such as theano and tensorflow (which
   libraries like keras, deepy, and blocks build upon).

   and even others, i use only for very specific tasks (such as nolearn
   and their deep belief network implementation).

   the goal of this blog post is to introduce you to these libraries. i
   encourage you to read up on each them individually to determine which
   one will work best for you in your particular situation.

my top 9 favorite python deep learning libraries

   again, i want to reiterate that this list is by no means exhaustive.
   furthermore, since i am a id161 researcher and actively work
   in the field, many of these libraries have a strong focus on
   convolutional neural networks (id98s).

   i   ve organized this list of deep learning libraries into three parts.

   the first part details popular libraries that you may already be
   familiar with. for each of these libraries, i provide a very general,
   high-level overview. i then detail some of my likes and dislikes about
   each library, along with a few appropriate use cases.

   the second part dives into my personal favorite deep learning libraries
   that i use heavily on a regular basis (hint: keras, mxnet, and
   sklearn-theano).

   finally, i provide a    bonus    section for libraries that i have (1) not
   used in a long time, but still think you may find useful or (2)
   libraries that i haven   t tried yet, but look interesting.

   let   s go ahead and dive in!

for starters:

1. [21]caffe

   it   s pretty much impossible to mention    deep learning libraries   
   without bringing up caffe. in fact, since you   re on this page right now
   reading up on deep learning libraries, i   m willing to bet that
   you   ve already heard of caffe.

   so, what is caffe exactly?

   caffe is a deep learning framework developed by the [22]berkeley vision
   and learning center (bvlc). it   s modular. extremely fast. and it   s used
   by academics and industry in start-of-the-art applications.

   in fact, if you were to go through the most recent deep learning
   publications (that also provide source code), you   ll more than likely
   find caffe models on their associated github repositories.

   while caffe itself isn   t a python library, it does provide bindings
   into the python programming language. we typically use these bindings
   when actually deploying our network in the wild.

   the reason i   ve included caffe in this list is because it   s used nearly
   everywhere. you define your model architecture and solver methods in a
   plaintext, json-like file called .prototxt  configuration files. the
   caffe binaries take these .prototxt  files and train your network.
   after caffe is done training, you can take your network and classify
   new images via caffe binaries, or better yet, through the python or
   matlab apis.

   while i love caffe for its performance (it can process 60 million
   images per day on a k40 gpu), i don   t like it as much as keras or
   mxnet.

   the main reason is that constructing an architecture inside the
   .prototxt  files can become quite tedious and tiresome. and more to the
   point, tuning hyperparameters with caffe can not be (easily) done
   programmatically! because of these two reasons, i tend to lean towards
   libraries that allow me to implement the end-to-end network (including
   cross-validation and hyperparameter tuning) in a python-based api.

2. [23]theano

   let me start by saying that theano is beautiful. without theano, we
   wouldn   t have anywhere near the amount of deep learning libraries
   (specifically in python) that we do today. in the same way that without
   numpy, we couldn   t have scipy, scikit-learn, and scikit-image, the same
   can be said about theano and higher-level abstractions of deep
   learning.

   at the very core, theano is a python library used to define, optimize,
   and evaluate mathematical expressions involving multi-dimensional
   arrays. theano accomplishes this via tight integration with numpy and
   transparent use of the gpu.

   while you can build deep learning networks in theano, i tend to think
   of theano as the building blocks for neural networks, in the same way
   that numpy serves as the building blocks for scientific computing. in
   fact, most of the libraries i mention in this blog post wrap around
   theano to make it more convenient and accessible.

   don   t get me wrong, i love theano     i just don   t like writing code in
   theano.

   while not a perfect comparison, building a convolutional neural network
   in theano is like writing a custom support vector machine (id166) in
   native python with only a sprinkle of numpy.

   can you do it?

   sure, absolutely.

   is it worth your time and effort?

   eh, maybe. it depends on how low-level you want to go/your application
   requires.

   personally, i   d rather use a library like keras that wraps theano into
   a more user-friendly api, in the same way that scikit-learn makes it
   easier to work with machine learning algorithms.

3. [24]tensorflow

   similar to theano, [25]tensorflow is an open source library for
   numerical computation using data flow graphs (which is all that a
   neural network really is). originally developed by the researchers on
   the google brain team within google   s machine intelligence research
   organization, the library has since been open sourced and made
   available to the general public.

   a primary benefit of tensorflow (as compared to theano) is distributed
   computing, particularly among multiple-gpus (although this is something
   theano is working on).

   other than swapping out the keras backend to use tensorflow (rather
   than theano), i don   t have much experience with the tensorflow library.
   over the next few months, i expect this to change, however.

4. [26]lasagne

   lasagne is a lightweight library used to construct and train networks
   in theano. the key term here is lightweight     it is not meant to be a
   heavy wrapper around theano like keras is. while this leads to your
   code being more verbose, it does free you from any restraints, while
   still giving you modular building blocks based on theano.

   simply put: lasagne functions as a happy medium between the low-level
   programming of theano and the higher-level abstractions of keras.

my go-to   s:

5. [27]keras

   if i had to pick a favorite deep learning python library, it would be
   hard for me to pick between keras and mxnet     but in the end, i think
   keras might win out.

   really, i can   t say enough good things about keras.

   keras is a minimalist, modular neural network library that can
   use either theano or tensorflow as a backend. the primary motivation
   behind keras is that you should be able to experiment fast and go from
   idea to result as quickly as possible.

   architecting networks in keras feels easy and natural. it includes some
   of the latest state-of-the-art algorithms for optimizers (adam,
   rmsprop), id172 (batchnorm), and activation layers (prelu, elu,
   leakyrelu).

   keras also places a heavy focus on convolutional neural networks,
   something very near to my heart. whether this was done intentionally or
   unintentionally, i think this is extremely valuable from a computer
   vision perspective.

   more to the point, you can easily construct both sequence-based
   networks (where the inputs flow linearly through the network) and
   graph-based networks (where inputs can    skip    certain layers, only to
   be concatenated later). this makes implementing more complex network
   architectures such as googlenet and squeezenet much easier.

   my only problem with keras is that it does not support multi-gpu
   environments for training a network in parallel. this may or may not be
   a deal breaker for you.

   if i want to train a network as fast as possible, then i   ll likely use
   mxnet. but if i   m tuning hyperparameters, i   m likely to setup four
   independent experiments with keras (running on each of my titan x gpus)
   and evaluate the results.

6. [28]mxnet

   my second favorite deep learning python library (again, with a focus on
   training image classification networks), would undoubtedly be mxnet.
   while it can take a bit more code to standup a network in mxnet, what
   it does give you is an incredible number of language bindings (c++,
   python, r, javascript, etc.)

   the mxnet library really shines for distributed computing, allowing you
   to train your network across multiple cpu/gpu machines, and even in
   aws, azure, and yarn clusters.

   again, it takes a little more code to get an experiment up and running
   in mxnet (as compared to keras), but if you   re looking to distribute
   training across multiple gpus or systems, i would use mxnet.

7. [29]sklearn-theano

   there are times where you don   t need to train a convolutional neural
   network end-to-end. instead, you need to treat the id98 as a feature
   extractor. this is especially useful in situations where you don   t have
   enough data to train a full id98 from scratch. instead, just pass your
   input images through a popular pre-trained architecture such as
   overfeat, alexnet, vggnet, or googlenet, and extract features from the
   fc layers (or whichever layer you decide to use).

   in short, this is exactly what sklearn-theano allows you to do. you
   can   t train a model from scratch with it     but it   s fantastic for
   treating networks as feature extractors. i tend to use this library as
   my first stop when evaluating whether a particular problem is suitable
   for deep learning or not.

8. [30]nolearn

   i   ve used nolearn a few times already on the pyimagesearch blog, mainly
   when [31]performing some initial gpu experiments on my macbook pro and
   [32]performing deep learning on an amazon ec2 gpu instance.

   while keras wraps theano and tensorflow into a more user-friendly api,
   nolearn does the same     only for lasagne. furthermore, all code in
   nolearn is compatible with scikit-learn, a huge bonus in my book.

   i personally don   t use nolearn for convolutional neural networks
   (id98s), although you certainly could (i prefer keras and mxnet for
   id98s)     i mainly use nolearn for its implementation of deep belief
   networks (dbns).

9. [33]digits

   alright, you got me.

   digits isn   t a true deep learning library (although it is written in
   python). digits (deep learning gpu training system) is actually a web
   application used for training deep learning models in caffe (although i
   suppose you could hack the source code to work with a backend other
   than caffe, but that sounds like a nightmare).

   if you   ve ever worked with caffe before, then you know it can be quite
   tedious to define your .prototxt  files, generate your image dataset,
   run your network, and babysit your network training all via your
   terminal. digits aims to fix this by allowing you to do (most) of these
   tasks in your browser.

   furthermore, the user interface is excellent, providing you with
   valuable statistics and graphs as your model trains. i also like that
   you can easily visualize activation layers of the network for various
   inputs. finally, if you have a specific image that you would like to
   test, you can either upload the image to your digits server or enter
   the url of the image and your caffe model will automatically classify
   the image and display the result in your browser. pretty neat!

bonus:

10. [34]blocks

   i   ll be honest, i   ve never used blocks before, although i do want to
   give it a try (hence why i   m including it in this list). like many of
   the other libraries in this list, blocks builds on top of theano,
   exposing a much more user friendly api.

11. [35]deepy

   if you were to guess which library deepy wraps around, what would your
   guess be?

   that   s right, it   s theano.

   i remember using deepy awhile ago (during one if its first initial
   commits), but i haven   t touched it in a good 6-8 months. i plan on
   giving it another try in future blog posts.

12. [36]pylearn2

   i feel compelled to include pylearn2 in this list for historical
   reasons, even though i don   t actively use it anymore. pylearn2 is more
   than a general machine learning library (similar to scikit-learn in
   that it respect), but also includes implementations of deep learning
   algorithms.

   the biggest concern i have with pylearn2 is that (as of this writing),
   it does not have an active developer. because of this, i   m hesitant to
   recommend pylearn2 over more maintained and active libraries such as
   keras and mxnet.

13. [37]deeplearning4j

   this is supposed to be a python-based list, but i thought i would
   include deeplearning4j in here, mainly out of the immense respect i
   have for what they are doing     building an open source, distributed
   deep learning library for the jvm.

   if you work in enterprise, you likely have a basement full of servers
   you use for hadoop and mapreduce. maybe you   re still using these
   machines. maybe you   re not.

   but what if you could use these same machines to apply deep learning?

   it turns out you can     you just need deeplearning4j.

take a deep dive into deep learning and convolutional neural networks

   [38]figure 1: learn how to utilize deep learning and convolutional
   neural networks to classify the contents of images inside the
   pyimagesearch gurus course.

   figure 1: learn how to utilize deep learning and convolutional neural
   networks to classify the contents of images inside the pyimagesearch
   gurus course.

   curious about deep learning?

   i   m here to help.

   inside the [39]pyimagesearch gurus course,  i   ve created 21 lessons
   covering 256 pages of tutorials on neural networks, deep belief
   networks, and convolutional neural networks, allowing you to get up to
   speed qucikly and easily.

   to learn more about the pyimagesearch gurus course (and grab 10 free
   sample lessons), just click the button below:

           [40]click here to learn more about pyimagesearch gurus!

summary

   in this blog post, i reviewed some of my favorite libraries for deep
   learning and convolutional neural networks. this list was by no means
   exhaustive and was certainly biased towards deep learning libraries
   that focus on id161 and convolutional neural networks.

   all that said, i do think this is a great list to utilize if
   you   re just getting started in the deep learning field and looking for
   a library to try out.

   in my personal opinion, i find it hard to beat [41]keras and [42]mxnet.
   the keras library sits on top of computational powerhouses such as
   theano and tensorflow, allowing you to construct deep learning
   architectures in remarkably few lines of python code.

   and while it may take a bit more code to construct and train a network
   with mxnet, you gain the ability to distribute training across multiple
   gpus easily and efficiently. if you   re in a multi-gpu
   system/environment and want to leverage this environment to its full
   capacity, then definitely give mxnet a try.

   before you go, be sure to sign up for the pyimagesearch newsletter
   using the form below to be notified when new deep learning posts are
   published (there will be a lot of them in the coming months!)

resource guide (it   s totally free).

   get your free 17-page id161 and deep learning resource guide
   pdf
   enter your email address below to get my free 17-page id161,
   opencv, and deep learning resource guide pdf. inside you'll find my
   hand-picked tutorials, books, courses, and python libraries to help you
   master id161 and deep learning!
   ____________________
   download the guide!

   [43]caffe, [44]convolutional neural network, [45]deep learning,
   [46]keras, [47]libraries, [48]mxnet, [49]nolearn, [50]theano
   [51]detecting cats in images with opencv
   [52]how to install cuda toolkit and cudnn for deep learning

34 responses to my top 9 favorite python deep learning libraries

    1. [53]joe minichino june 27, 2016 at 11:07 am [54]#
       hi adrian,
       how   s it going? what is your opinion on tflearn (former scikit
       flow)? seems interesting!
       [55]reply
          + adrian rosebrock june 28, 2016 at 10:53 am [56]#
            as fas a i understand, scikit-flow has been moved into
            tensorflow, starting with v0.8+.
            [57]reply
    2. [58]abhishek mishra june 27, 2016 at 11:37 am [59]#
       this is a great list. thanks for putting this together.
       for convolutional networks, being    fast    really helps. some of the
       networks that won id163 challenge in last few years were more
       than 100 layers. this is where gpu and distributed come in to be
       very useful.
       [60]reply
          + adrian rosebrock june 28, 2016 at 10:53 am [61]#
            resnet, the architecture that won the most recent id163
            challenges was massive. in fact, it took over 3 weeks to train
            using 8 gpus! there is a mantra in the deep learning world
            that    the deeper, the better   . but i think resnet, while
            winning the id163 challenge, also demonstrated there is a
            point in diminishing returns as the network gets deeper.
            [62]reply
    3. kenny june 27, 2016 at 12:18 pm [63]#
       as always, awesome post adrian      wonderful and splendid!
       [64]reply
          + adrian rosebrock june 28, 2016 at 10:51 am [65]#
            thanks for the kind words kenny     
            [66]reply
    4. sahil dadia june 27, 2016 at 2:02 pm [67]#
       finally a concise answer on how to get started with deep learning.
       are you going to post tutorials on keras? so that i will start with
       keras. i really like your posts. keep posting?
       [68]reply
          + adrian rosebrock june 28, 2016 at 10:51 am [69]#
            correct, most tutorials will use either keras or mxnet. the
            ones i have planned for the near future will be using keras.
            [70]reply
    5. keith prisbrey june 27, 2016 at 4:57 pm [71]#
       incredibly useful. thank you very much.
       [72]reply
          + adrian rosebrock june 28, 2016 at 10:50 am [73]#
            thanks keith     
            [74]reply
    6. jason june 27, 2016 at 9:06 pm [75]#
       nice summary    i notice that today the tensorflow team have released
       0.9 which includes support for running it on the raspberry pi,
       android and ios (amongst other things)   
       it seems to be gaining allot of momentum in the ml community.
       [76]reply
          + adrian rosebrock june 28, 2016 at 10:51 am [77]#
            tensorflow will only continue to grow. i personally haven   t
            used it as much as i would like, mainly because theano does
            such a good job as a backend for keras already, but i   m really
            looking forward to giving the multi-gpu variant of tensorflow
            a try.
            [78]reply
    7. linus july 8, 2016 at 8:07 am [79]#
       unfortunaly i didn   t got the last two posts mailed     
       but nice to see you starting with deep learning and neural netwoks!
       [80]reply
          + adrian rosebrock july 8, 2016 at 9:44 am [81]#
            thanks for letting me know linus, i   ll be sure to look into
            this.
            [82]reply
    8. amit july 18, 2016 at 11:55 am [83]#
       hi,
       thank you for a very useful post.
       i suggest having a look at chainer. it is pure python (with cython
       bindings to cuda/cudnn). on the one hand it allows easy
       construction and training of deeplearning networks. on the other
       hand it offers low level programming of custom layers. it also
       supports multi-gpu.
       [84]reply
          + adrian rosebrock july 18, 2016 at 5:08 pm [85]#
            thanks for sharing amit, i   ll be sure to take a look at
            chainer.
            [86]reply
               o chugmagaga september 11, 2016 at 9:20 pm [87]#
                 hi,
                 just curious to see if you had time to look at chainer.
                 [88]reply
                    # adrian rosebrock september 12, 2016 at 12:44 pm
                      [89]#
                      i honestly haven   t had a chance to play with it at
                      all. i   ve been mainly using keras and mxnet for my
                      recent projects.
                      [90]reply
    9. gerard july 20, 2016 at 2:36 am [91]#
       installing and configuring theano gives me a whole deal of a
       headache >:(
       [92]reply
          + adrian rosebrock july 20, 2016 at 2:35 pm [93]#
            hey gerard     installing and configuring theano isn   t too hard
            once you   ve seen it done before. see [94]this blog post where
            i install keras (which has theano as a pre-requisite). as
            you   ll see, it   s not too bad.
            [95]reply
   10. jc august 10, 2016 at 3:39 pm [96]#
       this morning intel bought nervana which backs up neon, which is
       fastest framework today. what   s your comment on neon framework?
       [97]reply
   11. neerja october 25, 2016 at 1:53 am [98]#
       hey adrian which all deep learning libraries can be integrated with
       opencv other than caffe?
       [99]reply
          + adrian rosebrock november 1, 2016 at 9:41 am [100]#
            any python deep learning library can be used with opencv. keep
            in mind that opencv represents images as numpy arrays just
            like deep learning libraries do. therefore, if you can
            represent an image with a numpy array it can be easily used in
            other libraries.
            [101]reply
   12. ajeet february 6, 2017 at 8:31 am [102]#
       excellent summary , very useful for someone like me ,who just
       started learning deeep learning. do you recommend any book on deep
       learning.
       [103]reply
          + adrian rosebrock february 7, 2017 at 9:12 am [104]#
            if you   re interested in deep learning for the specific use of
            id161, [105]i   m actually writing a book on that very
            topic.
            [106]reply
               o bob june 16, 2017 at 2:15 pm [107]#
                 hi adrian,
                 can id161 solve problems such as    if the
                 persons in the 2 photos look alike   , or    if the 2 house
                 in the 2 pictures have similar style   ?
                 regards,
                 bob
                 [108]reply
                    # adrian rosebrock june 20, 2017 at 11:18 am [109]#
                      it depends on what you define as    similar    as
                         similarity    is often a subjective concept. if you
                      can formalize what    similar    means, than in some
                      cases, yes, id161 can be used with very
                      high accuracy for this.
                      [110]reply
   13. vincent april 22, 2017 at 12:24 am [111]#
       time to update this blog post to include pytorch b)
       [112]reply
          + adrian rosebrock april 24, 2017 at 9:48 am [113]#
            i haven   t tried pytorch, but i   ll certainly check it out.
            [114]reply
   14. juraj january 31, 2018 at 7:22 am [115]#
       hi adrian, please update information about multi-gpu support in
       keras. you can insert there a link to your article:
       [116]https://www.pyimagesearch.com/2017/10/30/how-to-multi-gpu-trai
       ning-with-keras-python-and-deep-learning/
       [117]reply
   15. priyanka october 12, 2018 at 2:26 pm [118]#
       hello,
       actually i am new to deep learning and very confused between all
       these libraries, can you please tell me that should i go for either
       tensorflow or keras or both for video classification and action
       recognition in video. and in which format, my video dataset should
       be or which video format is supported by these libraries.
       [119]reply
          + adrian rosebrock october 16, 2018 at 8:52 am [120]#
            hey priyanka     i actually just authored a blog post on
            [121]keras vs. tensorflow. give it a look as it should help
            start to address your concerns.
            [122]reply
   16. fadi january 9, 2019 at 2:55 am [123]#
       thank you adrian, very useful post. i   m new to deep learning, i
       want to work on id164 using satellite imagery. could you
       please give me some advises about how to start (which framework is
       better to use?, which id98 model to use as a baseline?,   ). i will
       use xview satellite dataset. thank you in advance.
       [124]reply
          + adrian rosebrock january 11, 2019 at 9:52 am [125]#
            hey fadi     it   s awesome that you are interested in studying
            deep learning and id164. i would suggest using
            keras and tensorflow. you should also utilize object detectors
            such as faster r-id98, single shot detector (ssds), and
            retinanet. i cover all of these object detectors inside
            [126]deep learning for id161 with python. be sure to
            take a look, i believe it will really help you.
            [127]reply

leave a reply [128]click here to cancel reply.

   comment
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________
   __________________________________________________

   ______________________________name (required)

   ______________________________email (will not be published) (required)

   ______________________________website

   submit comment

   search...___________ (search)

resource guide (it   s totally free).

   [129]get your free 17-page id161 and deep learning resource
   guide pdf

   get your free 17 page id161, opencv, and deep learning
   resource guide pdf. inside you'll find my hand-picked tutorials, books,
   courses, and libraries to help you master cv and dl.

                           [130]download for free!

deep learning for id161 with python book     out now!

   [131]deep learning with id161 and python kickstarter

   you're interested in deep learning and id161, but you don't
   know how to get started. let me help. [132]my new book will teach you
   all you need to know about deep learning.

   click here to master deep learning

you can detect faces in images & video.

   [133]learn how to detect faces in images and video

   are you interested in detecting faces in images & video? but tired of
   googling for tutorials that never work? then let me help! i guarantee
   that my new book will turn you into a face detection ninja by the end
   of this weekend. [134]click here to give it a shot yourself.

   click here to master face detection

pyimagesearch gurus: now enrolling!

   the pyimagesearch gurus course is now enrolling! inside the course
   you'll learn how to perform:
     * automatic license plate recognition (anpr)
     * deep learning
     * face recognition
     * and much more!

   click the button below to learn more about the course, take a tour, and
   get 10 (free) sample lessons.

   take a tour & get 10 (free) lessons

hello! i   m adrian rosebrock.

   i'm an entrepreneur and ph.d who has launched two successful image
   search engines, [135]id my pill and [136]chic engine. i'm here to share
   my tips, tricks, and hacks i've learned along the way.

learn id161 in a single weekend.

   [137]become an opencv guru

   want to learn id161 & opencv? i can teach you in a single
   weekend. i know. it sounds crazy, but it   s no joke. my new book is your
   guaranteed, quick-start guide to becoming an opencv ninja. so why not
   give it a try? [138]click here to become a id161 ninja.

   click here to become an opencv ninja

subscribe via rss

   [139]pyimagesearch rss feed

   never miss a post! subscribe to the pyimagesearch rss feed and keep up
   to date with my image search engine tutorials, tips, and tricks
     * [140]popular

     * [141]raspbian stretch: install opencv 3 + python on your raspberry
       pi september 4, 2017
     * [142]install guide: raspberry pi 3 + raspbian jessie + opencv 3
       april 18, 2016
     * [143]home surveillance and motion detection with the raspberry pi,
       python, opencv, and dropbox june 1, 2015
     * [144]install opencv and python on your raspberry pi 2 and b+
       february 23, 2015
     * [145]ubuntu 16.04: how to install opencv october 24, 2016
     * [146]real-time id164 with deep learning and opencv
       september 18, 2017
     * [147]basic motion detection and tracking with python and opencv may
       25, 2015

   find me on [148]twitter, [149]facebook, and [150]linkedin.

      2019 pyimagesearch. all rights reserved.

   [tr?id=1465896023527386&ev=pageview&noscript=1]

   [email]
   [email]

references

   1. http://feeds.feedburner.com/pyimagesearch
   2. https://www.pyimagesearch.com/comments/feed/
   3. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/feed/
   4. https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/
   5. https://www.pyimagesearch.com/wp-json/oembed/1.0/embed?url=https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/&format=xml
   6. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#navigation
   7. https://www.pyimagesearch.com/
   8. https://www.pyimagesearch.com/
   9. https://www.pyimagesearch.com/
  10. https://www.pyimagesearch.com/start-here-learn-computer-vision-opencv/
  11. https://www.pyimagesearch.com/practical-python-opencv/
  12. https://www.pyimagesearch.com/pyimagesearch-gurus/
  13. https://www.pyimagesearch.com/opencv-tutorials-resources-guides/
  14. https://www.pyimagesearch.com/free-opencv-computer-vision-deep-learning-crash-course/
  15. https://www.pyimagesearch.com/about/
  16. https://www.pyimagesearch.com/contact/
  17. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#top
  18. https://www.pyimagesearch.com/author/adrian/
  19. https://www.pyimagesearch.com/category/deep-learning-2/
  20. https://www.pyimagesearch.com/category/libraries/
  21. http://caffe.berkeleyvision.org/
  22. http://bvlc.eecs.berkeley.edu/
  23. http://deeplearning.net/software/theano/
  24. https://www.tensorflow.org/
  25. https://www.tensorflow.org/
  26. https://github.com/lasagne/lasagne
  27. http://keras.io/
  28. https://github.com/dmlc/mxnet
  29. https://github.com/sklearn-theano/sklearn-theano
  30. https://github.com/dnouri/nolearn
  31. https://www.pyimagesearch.com/2014/10/06/experience-cudamat-deep-belief-networks-python/
  32. https://www.pyimagesearch.com/2014/10/13/deep-learning-amazon-ec2-gpu-python-nolearn/
  33. https://github.com/nvidia/digits
  34. https://github.com/mila-udem/blocks
  35. https://github.com/zomux/deepy
  36. http://deeplearning.net/software/pylearn2/
  37. http://deeplearning4j.org/
  38. https://www.pyimagesearch.com/pyimagesearch-gurus/?src=post-deep-learning-libs
  39. https://www.pyimagesearch.com/pyimagesearch-gurus/?src=post-deep-learning-libs
  40. https://www.pyimagesearch.com/pyimagesearch-gurus/?src=post-deep-learning-libs
  41. http://keras.io/
  42. https://github.com/dmlc/mxnet
  43. https://www.pyimagesearch.com/tag/caffe/
  44. https://www.pyimagesearch.com/tag/convolutional-neural-network/
  45. https://www.pyimagesearch.com/tag/deep-learning/
  46. https://www.pyimagesearch.com/tag/keras/
  47. https://www.pyimagesearch.com/tag/libraries-2/
  48. https://www.pyimagesearch.com/tag/mxnet/
  49. https://www.pyimagesearch.com/tag/nolearn/
  50. https://www.pyimagesearch.com/tag/theano/
  51. https://www.pyimagesearch.com/2016/06/20/detecting-cats-in-images-with-opencv/
  52. https://www.pyimagesearch.com/2016/07/04/how-to-install-cuda-toolkit-and-cudnn-for-deep-learning/
  53. http://tech-fort.com/
  54. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401104
  55. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401104
  56. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401154
  57. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401154
  58. http://numahub.com/
  59. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401105
  60. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401105
  61. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401153
  62. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401153
  63. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401106
  64. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401106
  65. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401152
  66. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401152
  67. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401109
  68. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401109
  69. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401151
  70. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401151
  71. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401114
  72. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401114
  73. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401149
  74. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401149
  75. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401117
  76. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401117
  77. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401150
  78. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401150
  79. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401759
  80. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401759
  81. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401763
  82. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-401763
  83. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402461
  84. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402461
  85. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402476
  86. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402476
  87. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-405975
  88. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-405975
  89. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-406016
  90. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-406016
  91. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402663
  92. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402663
  93. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402693
  94. https://www.pyimagesearch.com/2016/07/18/installing-keras-for-deep-learning/
  95. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-402693
  96. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-404041
  97. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-404041
  98. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-409001
  99. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-409001
 100. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-409572
 101. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-409572
 102. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-417119
 103. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-417119
 104. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-417200
 105. https://www.kickstarter.com/projects/adrianrosebrock/deep-learning-for-computer-vision-with-python-eboo
 106. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-417200
 107. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-427490
 108. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-427490
 109. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-427776
 110. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-427776
 111. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-423420
 112. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-423420
 113. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-423587
 114. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-423587
 115. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-448389
 116. https://www.pyimagesearch.com/2017/10/30/how-to-multi-gpu-training-with-keras-python-and-deep-learning/
 117. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-448389
 118. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-482242
 119. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-482242
 120. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-482825
 121. https://www.pyimagesearch.com/2018/10/08/keras-vs-tensorflow-which-one-is-better-and-which-one-should-i-learn/
 122. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-482825
 123. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-495220
 124. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-495220
 125. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-495938
 126. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 127. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#comment-495938
 128. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#respond
 129. https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/
 130. https://app.monstercampaigns.com/c/mdoijtrmex7bpm0rp2hn/
 131. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 132. https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/
 133. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection
 134. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-face-detection
 135. http://www.idmypill.com/
 136. http://www.chicengine.com/
 137. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend
 138. https://www.pyimagesearch.com/practical-python-opencv/?src=sidebar-single-weekend
 139. http://feeds.feedburner.com/pyimagesearch
 140. https://www.pyimagesearch.com/2016/06/27/my-top-9-favorite-python-deep-learning-libraries/#tab-pop
 141. https://www.pyimagesearch.com/2017/09/04/raspbian-stretch-install-opencv-3-python-on-your-raspberry-pi/
 142. https://www.pyimagesearch.com/2016/04/18/install-guide-raspberry-pi-3-raspbian-jessie-opencv-3/
 143. https://www.pyimagesearch.com/2015/06/01/home-surveillance-and-motion-detection-with-the-raspberry-pi-python-and-opencv/
 144. https://www.pyimagesearch.com/2015/02/23/install-opencv-and-python-on-your-raspberry-pi-2-and-b/
 145. https://www.pyimagesearch.com/2016/10/24/ubuntu-16-04-how-to-install-opencv/
 146. https://www.pyimagesearch.com/2017/09/18/real-time-object-detection-with-deep-learning-and-opencv/
 147. https://www.pyimagesearch.com/2015/05/25/basic-motion-detection-and-tracking-with-python-and-opencv/
 148. https://twitter.com/pyimagesearch
 149. https://www.facebook.com/pyimagesearch
 150. http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b
