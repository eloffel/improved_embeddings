   #[1]github [2]recent commits to deep-nlp:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]9
     * [35]star [36]53
     * [37]fork [38]23

[39]siddk/[40]deep-nlp

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   tensorflow tutorial files and implementations of various deep nlp and
   cv models.
   [47]tensorflow-tutorials [48]nlp [49]mnist-nn [50]deep
   [51]neural-network [52]tensorflow
     * [53]48 commits
     * [54]1 branch
     * [55]0 releases
     * [56]fetching contributors

    1. [57]python 100.0%

   (button) python
   branch: master (button) new pull request
   [58]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/s
   [59]download zip

downloading...

   want to be notified of new releases in siddk/deep-nlp?
   [60]sign in [61]sign up

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [64]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [65]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [66]permalink
   type             name                latest commit message     commit time
        failed to load latest commit information.
        [67]cifar_id98
        [68]deep_q
        [69]langmod_nn
        [70]langmod_id56
        [71]memory_networks         [72]add linear start training jul 3, 2016
        [73]mnist_id98
        [74]mnist_nn
        [75]multilingual_embeddings
        [76]multilingual_lm
        [77]id195_mt              [78]add multilingual lm       oct 3, 2016
        [79]variational_autoencoder
        [80].gitignore
        [81]readme.md               [82]update readme             oct 3, 2016
        [83]__init__.py

readme.md

deep - nlp

   this repository contains tensorflow implementations of various deep
   learning models, with a focus on problems in natural language
   processing. each individual subdirectory is self-contained, addressing
   one specific model.

models

   the following models are implemented:
     * mnist_nn/: a simple one-layer classifier implemented as part of the
       tensorflow tutorial for the mnist handwriting classification task.
       very simple model, contained in a single python script, just to
       show off the tensorflow basics.
     * mnist_id98/: a three-layer convolutional neural network for the
       mnist handwritten digit classification task.
     * langmod_nn/: a three-layer feed-forward bigram language model that
       tries to predict the next word in the corpus given the current
       word.
     * langmod_id56/: a recurrent neural network language model. given a
       fixed-sized context window, predict the time-shifted (next) words
       in the sequence.
     * memory_networks/: implementation of end-to-end memory networks:
       [84]https://papers.nips.cc/paper/5846-end-to-end-memory-networks.pd
       f
     * id195_mt/: implementation of encoder-decoder machine translation
       for french-english translation.
     * multilingual_embeddings/: multi-task translation implementation,
       for the purpose of learning language-agnostic sentence embeddings
       (encoding multiple source languages in the same low-dimensional
       space).
     * cifar_id98/: a multi-layer convolutional neural network that follows
       the alexnet convention for the cifar-10 image classification task.
       given an image, classify it as an airplane, automobile, bird, cat,
       deer, dog, frog, horse, ship, or truck.
     * deep_q/: implementation of deep id24 for atari pong.
     * variational_autoencoder/: variational autoencoder implementation,
       compresses and decodes mnist digits, with
       demonstration of walking latent space.

project setup

   there are a lot of ways to set up and train tensorflow models, which
   can be very confusing. with the exception of the simple mnist nn from
   the tensorflow tutorial, each of the above model subdirectories is
   broken up in the following way:

   train.py: this file is the core file for training a given model (think
   of this as the main script for the entire directory). this script loads
   the data, performs any preprocessing to format the data for training
   and testing, and then builds and trains the model. usually contains
   code to output training details to stdout, as well as code to
   save/serialize the model parameters periodically.

   preprocessor/: subdirectory that contains any data processing code
   (i.e. code to read raw data like text or images, and convert it to
   numerical form for training/testing).

   model/:
     * model.py: class definition for the model's neural network.
       tensorflow at its core is a system for building symbolic
       computational graphs, and everything in tensorflow is either
       expressed as a raw tensor, or a tensor operation. because of this,
       building a model consists of building different graphs and
       operations to handle the id136 of the model, how to evaluate
       the loss/cost, and how to perform training (usually via
       id26). because of this, each class definition consists
       of the following three functions:
          + id136: this is the crux of any neural network. this
            function is responsible for building all the layers of the
            network, from the input, all the way to the final layer, just
            before the loss is calculated.
          + loss: using the output from the id136 function, this
            function evaluates the loss used for training the model. for
            example, the id168 might take in the logits from the
            softmax layer of a classification model (say like in the mnist
            model), and calculate the cross-id178 loss with the true
            labels of the input data.
          + train: the train function builds the training operation, given
            the cost calculated in the id168. this function
            computes the gradients, and sets up the optimizer (i.e. sgd,
            adam, adagrad, etc.). any learning rate decay is also
            performed during this step.

   data/: a data subdirectory, for storing raw data.

   log/: a log directory, consisting of two parts - summaries, and
   checkpoints. each of the above tensorflow models have code to store
   tensorboard-formatted summary files to track things like loss over
   time, accuracy, gradients, etc, and these logs are stored in
   logs/summaries. the models also have code to save and serialize all the
   parameters during training, allowing for easy restoration of
   interrupted training, or for just loading fully trained models.

     *    2019 github, inc.
     * [85]terms
     * [86]privacy
     * [87]security
     * [88]status
     * [89]help

     * [90]contact github
     * [91]pricing
     * [92]api
     * [93]training
     * [94]blog
     * [95]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [96]reload to refresh your
   session. you signed out in another tab or window. [97]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/siddk/deep-nlp/commits/master.atom
   3. https://github.com/siddk/deep-nlp#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/siddk/deep-nlp
  32. https://github.com/join
  33. https://github.com/login?return_to=/siddk/deep-nlp
  34. https://github.com/siddk/deep-nlp/watchers
  35. https://github.com/login?return_to=/siddk/deep-nlp
  36. https://github.com/siddk/deep-nlp/stargazers
  37. https://github.com/login?return_to=/siddk/deep-nlp
  38. https://github.com/siddk/deep-nlp/network/members
  39. https://github.com/siddk
  40. https://github.com/siddk/deep-nlp
  41. https://github.com/siddk/deep-nlp
  42. https://github.com/siddk/deep-nlp/issues
  43. https://github.com/siddk/deep-nlp/pulls
  44. https://github.com/siddk/deep-nlp/projects
  45. https://github.com/siddk/deep-nlp/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/tensorflow-tutorials
  48. https://github.com/topics/nlp
  49. https://github.com/topics/mnist-nn
  50. https://github.com/topics/deep
  51. https://github.com/topics/neural-network
  52. https://github.com/topics/tensorflow
  53. https://github.com/siddk/deep-nlp/commits/master
  54. https://github.com/siddk/deep-nlp/branches
  55. https://github.com/siddk/deep-nlp/releases
  56. https://github.com/siddk/deep-nlp/graphs/contributors
  57. https://github.com/siddk/deep-nlp/search?l=python
  58. https://github.com/siddk/deep-nlp/find/master
  59. https://github.com/siddk/deep-nlp/archive/master.zip
  60. https://github.com/login?return_to=https://github.com/siddk/deep-nlp
  61. https://github.com/join?return_to=/siddk/deep-nlp
  62. https://desktop.github.com/
  63. https://desktop.github.com/
  64. https://developer.apple.com/xcode/
  65. https://visualstudio.github.com/
  66. https://github.com/siddk/deep-nlp/tree/a0d2553c346fe1a5869fd4218894d69a9ea885be
  67. https://github.com/siddk/deep-nlp/tree/master/cifar_id98
  68. https://github.com/siddk/deep-nlp/tree/master/deep_q
  69. https://github.com/siddk/deep-nlp/tree/master/langmod_nn
  70. https://github.com/siddk/deep-nlp/tree/master/langmod_id56
  71. https://github.com/siddk/deep-nlp/tree/master/memory_networks
  72. https://github.com/siddk/deep-nlp/commit/93754c19e6db6827528a3ec349b1e05f96af1529
  73. https://github.com/siddk/deep-nlp/tree/master/mnist_id98
  74. https://github.com/siddk/deep-nlp/tree/master/mnist_nn
  75. https://github.com/siddk/deep-nlp/tree/master/multilingual_embeddings
  76. https://github.com/siddk/deep-nlp/tree/master/multilingual_lm
  77. https://github.com/siddk/deep-nlp/tree/master/id195_mt
  78. https://github.com/siddk/deep-nlp/commit/9ab7ea6d80080def99d13f41430afe2fe153cce8
  79. https://github.com/siddk/deep-nlp/tree/master/variational_autoencoder
  80. https://github.com/siddk/deep-nlp/blob/master/.gitignore
  81. https://github.com/siddk/deep-nlp/blob/master/readme.md
  82. https://github.com/siddk/deep-nlp/commit/a0d2553c346fe1a5869fd4218894d69a9ea885be
  83. https://github.com/siddk/deep-nlp/blob/master/__init__.py
  84. https://papers.nips.cc/paper/5846-end-to-end-memory-networks.pdf
  85. https://github.com/site/terms
  86. https://github.com/site/privacy
  87. https://github.com/security
  88. https://githubstatus.com/
  89. https://help.github.com/
  90. https://github.com/contact
  91. https://github.com/pricing
  92. https://developer.github.com/
  93. https://training.github.com/
  94. https://github.blog/
  95. https://github.com/about
  96. https://github.com/siddk/deep-nlp
  97. https://github.com/siddk/deep-nlp

   hidden links:
  99. https://github.com/
 100. https://github.com/siddk/deep-nlp
 101. https://github.com/siddk/deep-nlp
 102. https://github.com/siddk/deep-nlp
 103. https://help.github.com/articles/which-remote-url-should-i-use
 104. https://github.com/siddk/deep-nlp#deep---nlp
 105. https://github.com/siddk/deep-nlp#models
 106. https://github.com/siddk/deep-nlp#project-setup
 107. https://github.com/
