   #[1]github [2]recent commits to python-stanford-corenlp:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]45
     * [35]star [36]395
     * [37]fork [38]90

[39]stanfordnlp/[40]python-stanford-corenlp

   [41]code [42]issues 4 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   python interface to corenlp using a bidirectional server-client
   interface.
   [47]corenlp [48]corenlp-server [49]nlp
     * [50]56 commits
     * [51]1 branch
     * [52]0 releases
     * [53]fetching contributors
     * [54]mit

    1. [55]python 100.0%

   (button) python
   branch: master (button) new pull request
   [56]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/s
   [57]download zip

downloading...

   want to be notified of new releases in
   stanfordnlp/python-stanford-corenlp?
   [58]sign in [59]sign up

launching github desktop...

   if nothing happens, [60]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [61]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [62]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [63]download the github extension for visual studio
   and try again.

   (button) go back
   [64]@arunchaganty
   [65]arunchaganty [66]update readme.rst
   latest commit [67]4d0aa08 feb 7, 2019
   [68]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [69]corenlp [70]modify _request to use none as the date default jan 29,
   2019
   [71]doc [72]updated tests and manifest jun 10, 2017
   [73]tests [74]fixed timeout issue for tokensregex jan 14, 2019
   [75].gitignore [76]initial commit jun 8, 2017
   [77].travis.yml [78]updated travis jun 10, 2017
   [79]changelog
   [80]license [81]initial commit jun 8, 2017
   [82]manifest.in [83]added changelog to manifest jun 10, 2017
   [84]readme.rst
   [85]setup.id18
   [86]setup.py [87]new dependencies jan 14, 2019
   [88]tox.ini

readme.rst

stanford corenlp python interface

   note: this package is now deprecated. please use the [89]stanfordnlp
   package instead.
   [90]https://travis-ci.org/stanfordnlp/python-stanford-corenlp.svg?branc
   h=master

   this package contains a python interface for [91]stanford corenlp that
   contains a reference implementation to interface with the [92]stanford
   corenlp server. the package also contains a base class to expose a
   python-based annotation provider (e.g. your favorite neural ner system)
   to the corenlp pipeline via a lightweight service.

   to use the package, first download the [93]official java corenlp
   release, unzip it, and define an environment variable $corenlp_home
   that points to the unzipped directory.

   you can also install this package from [94]pypi using pip install
   stanford-corenlp
     __________________________________________________________________

command line usage

   probably the easiest way to use this package is through the annotate
   command-line utility:
usage: annotate [-h] [-i input] [-o output] [-f {json}]
                [-a annotators [annotators ...]] [-s] [-v] [-m memory]
                [-p props [props ...]]

annotate data

optional arguments:
  -h, --help            show this help message and exit
  -i input, --input input
                        input file to process; each line contains one document
                        (default: stdin)
  -o output, --output output
                        file to write annotations to (default: stdout)
  -f {json}, --format {json}
                        output format
  -a annotators [annotators ...], --annotators annotators [annotators ...]
                        a list of annotators
  -s, --sentence-mode   assume each line of input is a sentence.
  -v, --verbose-server  server is made verbose
  -m memory, --memory memory
                        memory to use for the server
  -p props [props ...], --props props [props ...]
                        properties as a list of key=value pairs

   we recommend using annotate in conjuction with the wonderful jq command
   to process the output. as an example, given a file with a sentence on
   each line, the following command produces an equivalent space-separated
   tokens:
cat file.txt | annotate -s -a tokenize | jq '[.tokens[].originaltext]' > tokeniz
ed.txt

annotation server usage

import corenlp

text = "chris wrote a simple sentence that he parsed with stanford corenlp."

# we assume that you've downloaded stanford corenlp and defined an environment
# variable $corenlp_home that points to the unzipped directory.
# the code below will launch stanfordcorenlpserver in the background
# and communicate with the server to annotate the sentence.
with corenlp.corenlpclient(annotators="tokenize ssplit pos lemma ner depparse".s
plit()) as client:
  ann = client.annotate(text)

# you can access annotations using ann.
sentence = ann.sentence[0]

# the corenlp.to_text function is a helper function that
# reconstructs a sentence from tokens.
assert corenlp.to_text(sentence) == text

# you can access any property within a sentence.
print(sentence.text)

# likewise for tokens
token = sentence.token[0]
print(token.lemma)

# use tokensregex patterns to find who wrote a sentence.
pattern = '([ner: person]+) /wrote/ /an?/ []{0,3} /sentence|article/'
matches = client.tokensregex(text, pattern)
# sentences contains a list with matches for each sentence.
assert len(matches["sentences"]) == 1
# length tells you whether or not there are any matches in this
assert matches["sentences"][0]["length"] == 1
# you can access matches like most regex groups.
matches["sentences"][1]["0"]["text"] == "chris wrote a simple sentence"
matches["sentences"][1]["0"]["1"]["text"] == "chris"

# use semgrex patterns to directly find who wrote what.
pattern = '{word:wrote} >nsubj {}=subject >dobj {}=object'
matches = client.semgrex(text, pattern)
# sentences contains a list with matches for each sentence.
assert len(matches["sentences"]) == 1
# length tells you whether or not there are any matches in this
assert matches["sentences"][0]["length"] == 1
# you can access matches like most regex groups.
matches["sentences"][1]["0"]["text"] == "wrote"
matches["sentences"][1]["0"]["$subject"]["text"] == "chris"
matches["sentences"][1]["0"]["$object"]["text"] == "sentence"

   see test_client.py and test_protobuf.py for more examples. props to
   @dan-zheng for tokensregex/semgrex support.

annotation service usage

   note: the annotation service allows users to provide a custom annotator
   to be used by the corenlp pipeline. unfortunately, it relies on
   experimental code internal to the stanford corenlp project is not yet
   available for public use.
import corenlp
from .happyfuntokenizer import tokenizer

class happyfuntokenizer(tokenizer, corenlp.annotator):
    def __init__(self, preserve_case=false):
        tokenizer.__init__(self, preserve_case)
        corenlp.annotator.__init__(self)

    @property
    def name(self):
        """
        name of the annotator (used by corenlp)
        """
        return "happyfun"

    @property
    def requires(self):
        """
        requires has to specify all the annotations required before we
        are called.
        """
        return []

    @property
    def provides(self):
        """
        the set of annotations guaranteed to be provided when we are done.
        note: that these annotations are either fully qualified java
        class names or refer to nested classes of
        edu.stanford.nlp.ling.coreannotations (as is the case below).
        """
        return ["textannotation",
                "tokensannotation",
                "tokenbeginannotation",
                "tokenendannotation",
                "characteroffsetbeginannotation",
                "characteroffsetendannotation",
               ]

    def annotate(self, ann):
        """
        @ann: is a protobuf annotation object.
        actually populate @ann with tokens.
        """
        buf, beg_idx, end_idx = ann.text.lower(), 0, 0
        for i, word in enumerate(self.tokenize(ann.text)):
            token = ann.sentencelesstoken.add()
            # these are the bare minimum required for the tokenannotation
            token.word = word
            token.tokenbeginindex = i
            token.tokenendindex = i+1

            # seek into the txt until you can find this word.
            try:
                # try to update beginning index
                beg_idx = buf.index(word, beg_idx)
            except valueerror:
                # give up -- this will be something random
                end_idx = beg_idx + len(word)

            token.beginchar = beg_idx
            token.endchar = end_idx

            beg_idx, end_idx = end_idx, end_idx

annotator = happyfuntokenizer()
# calling .start() will launch the annotator as a service running on
# port 8432 by default.
annotator.start()

# annotator.properties contains all the right properties for
# stanford corenlp to use this annotator.
with corenlp.corenlpclient(properties=annotator.properties, annotators="happyfun
 ssplit pos".split()) as client:
    ann = client.annotate("rt @ #happyfuncoding: this is a typical twitter tweet
 :-)")

    tokens = [t.word for t in ann.sentence[0].token]
    print(tokens)

   see test_annotator.py for more examples.

     *    2019 github, inc.
     * [95]terms
     * [96]privacy
     * [97]security
     * [98]status
     * [99]help

     * [100]contact github
     * [101]pricing
     * [102]api
     * [103]training
     * [104]blog
     * [105]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [106]reload to refresh your
   session. you signed out in another tab or window. [107]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/stanfordnlp/python-stanford-corenlp/commits/master.atom
   3. https://github.com/stanfordnlp/python-stanford-corenlp#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/stanfordnlp/python-stanford-corenlp
  32. https://github.com/join
  33. https://github.com/login?return_to=/stanfordnlp/python-stanford-corenlp
  34. https://github.com/stanfordnlp/python-stanford-corenlp/watchers
  35. https://github.com/login?return_to=/stanfordnlp/python-stanford-corenlp
  36. https://github.com/stanfordnlp/python-stanford-corenlp/stargazers
  37. https://github.com/login?return_to=/stanfordnlp/python-stanford-corenlp
  38. https://github.com/stanfordnlp/python-stanford-corenlp/network/members
  39. https://github.com/stanfordnlp
  40. https://github.com/stanfordnlp/python-stanford-corenlp
  41. https://github.com/stanfordnlp/python-stanford-corenlp
  42. https://github.com/stanfordnlp/python-stanford-corenlp/issues
  43. https://github.com/stanfordnlp/python-stanford-corenlp/pulls
  44. https://github.com/stanfordnlp/python-stanford-corenlp/projects
  45. https://github.com/stanfordnlp/python-stanford-corenlp/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/corenlp
  48. https://github.com/topics/corenlp-server
  49. https://github.com/topics/nlp
  50. https://github.com/stanfordnlp/python-stanford-corenlp/commits/master
  51. https://github.com/stanfordnlp/python-stanford-corenlp/branches
  52. https://github.com/stanfordnlp/python-stanford-corenlp/releases
  53. https://github.com/stanfordnlp/python-stanford-corenlp/graphs/contributors
  54. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/license
  55. https://github.com/stanfordnlp/python-stanford-corenlp/search?l=python
  56. https://github.com/stanfordnlp/python-stanford-corenlp/find/master
  57. https://github.com/stanfordnlp/python-stanford-corenlp/archive/master.zip
  58. https://github.com/login?return_to=https://github.com/stanfordnlp/python-stanford-corenlp
  59. https://github.com/join?return_to=/stanfordnlp/python-stanford-corenlp
  60. https://desktop.github.com/
  61. https://desktop.github.com/
  62. https://developer.apple.com/xcode/
  63. https://visualstudio.github.com/
  64. https://github.com/arunchaganty
  65. https://github.com/stanfordnlp/python-stanford-corenlp/commits?author=arunchaganty
  66. https://github.com/stanfordnlp/python-stanford-corenlp/commit/4d0aa08521e13e2a1c707f5a7ddcdaa3ec530d86
  67. https://github.com/stanfordnlp/python-stanford-corenlp/commit/4d0aa08521e13e2a1c707f5a7ddcdaa3ec530d86
  68. https://github.com/stanfordnlp/python-stanford-corenlp/tree/4d0aa08521e13e2a1c707f5a7ddcdaa3ec530d86
  69. https://github.com/stanfordnlp/python-stanford-corenlp/tree/master/corenlp
  70. https://github.com/stanfordnlp/python-stanford-corenlp/commit/c6065550552ec36ae0e4c08a9129054fcc3466c0
  71. https://github.com/stanfordnlp/python-stanford-corenlp/tree/master/doc
  72. https://github.com/stanfordnlp/python-stanford-corenlp/commit/d05093e8af31dcd7d2f024b39c3b15b87e63cb2e
  73. https://github.com/stanfordnlp/python-stanford-corenlp/tree/master/tests
  74. https://github.com/stanfordnlp/python-stanford-corenlp/commit/f046f4f7ad24a8b4871614b934437adc660cdefa
  75. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/.gitignore
  76. https://github.com/stanfordnlp/python-stanford-corenlp/commit/924444b80a3a3734bfcc563a6ca0b4fcf6bedd8e
  77. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/.travis.yml
  78. https://github.com/stanfordnlp/python-stanford-corenlp/commit/f771aa8cce10f437e6a9186f0dc1f2f5fba72bea
  79. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/changelog
  80. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/license
  81. https://github.com/stanfordnlp/python-stanford-corenlp/commit/924444b80a3a3734bfcc563a6ca0b4fcf6bedd8e
  82. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/manifest.in
  83. https://github.com/stanfordnlp/python-stanford-corenlp/commit/2fade55b7bee4932f2ad63796ab145516aaaa98d
  84. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/readme.rst
  85. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/setup.id18
  86. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/setup.py
  87. https://github.com/stanfordnlp/python-stanford-corenlp/commit/7a32ce6cda19d167a79e0881422a1d79d3b1aff6
  88. https://github.com/stanfordnlp/python-stanford-corenlp/blob/master/tox.ini
  89. https://github.com/stanfordnlp/stanfordnlp
  90. https://travis-ci.org/stanfordnlp/python-stanford-corenlp
  91. https://github.com/stanfordnlp/corenlp
  92. https://stanfordnlp.github.io/corenlp/corenlp-server.html
  93. https://stanfordnlp.github.io/corenlp/#download
  94. https://pypi.python.org/pypi/stanford-corenlp/
  95. https://github.com/site/terms
  96. https://github.com/site/privacy
  97. https://github.com/security
  98. https://githubstatus.com/
  99. https://help.github.com/
 100. https://github.com/contact
 101. https://github.com/pricing
 102. https://developer.github.com/
 103. https://training.github.com/
 104. https://github.blog/
 105. https://github.com/about
 106. https://github.com/stanfordnlp/python-stanford-corenlp
 107. https://github.com/stanfordnlp/python-stanford-corenlp

   hidden links:
 109. https://github.com/
 110. https://github.com/stanfordnlp/python-stanford-corenlp
 111. https://github.com/stanfordnlp/python-stanford-corenlp
 112. https://github.com/stanfordnlp/python-stanford-corenlp
 113. https://help.github.com/articles/which-remote-url-should-i-use
 114. https://github.com/stanfordnlp/python-stanford-corenlp#stanford-corenlp-python-interface
 115. https://github.com/stanfordnlp/python-stanford-corenlp#command-line-usage
 116. https://github.com/stanfordnlp/python-stanford-corenlp#annotation-server-usage
 117. https://github.com/stanfordnlp/python-stanford-corenlp#annotation-service-usage
 118. https://github.com/
