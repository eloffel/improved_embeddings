   #[1]github [2]recent commits to language-detection:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]24
     * [35]star [36]496
     * [37]fork [38]44

[39]patrickschur/[40]language-detection

   [41]code [42]issues 3 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a language detection library for php. detects the language from a given
   text string.
   [47]language [48]language-detection [49]natural-language-processing
   [50]id165s [51]php [52]nlp [53]training
     * [54]80 commits
     * [55]1 branch
     * [56]12 releases
     * [57]fetching contributors
     * [58]mit

    1. [59]php 100.0%

   (button) php
   branch: master (button) new pull request
   [60]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/p
   [61]download zip

downloading...

   want to be notified of new releases in patrickschur/language-detection?
   [62]sign in [63]sign up

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [65]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [66]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [67]download the github extension for visual studio
   and try again.

   (button) go back
   [68]@patrickschur
   [69]patrickschur [70]removed further copyright date notices
   latest commit [71]aabe4db jan 1, 2019
   [72]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [73]resources [74]changed danish language code sep 19, 2018
   [75]src/languagedetection [76]removed copyright date notices jan 1,
   2019
   [77]tests [78]removed further copyright date notices jan 1, 2019
   [79].editorconfig [80]initial commit dec 25, 2016
   [81].gitattributes
   [82].gitignore
   [83].travis.yml [84]it looks like as if phpunit has a problem with the
   php-nightly version jan 31, 2017
   [85]changelog.md [86]changed danish language code sep 19, 2018
   [87]contributing.md
   [88]license
   [89]readme.md
   [90]composer.json [91]added ext-json as dependency jan 1, 2019
   [92]phpunit.xml

readme.md

language-detection

   build status code coverage version total downloads minimum php version
   license
   [93]build status [94]codecov [95]version [96]total downloads
   [97]minimum php version [98]license

   this library can detect the language of a given text string. it can
   parse given training text in many different idioms into a sequence of
   [99]id165s and builds a database file in json format to be used in the
   detection phase. then it can take a given text and detect its language
   using the database previously generated in the training phase. the
   library comes with text samples used for training and detecting text in
   110 languages.

table of contents

     * [100]installation with composer
     * [101]basic usage
     * [102]api
     * [103]method chaining
     * [104]array access
     * [105]list of supported languages
     * [106]other languages
     * [107]faq
     * [108]contributing
     * [109]license

installation with composer

     note: this library requires the [110]multibyte string extension in
     order to work.

$ composer require patrickschur/language-detection

basic usage

   to detect the language correctly, the length of the input text should
   be at least some sentences.
use languagedetection\language;

$ld = new language;

$ld->detect('mag het een onsje meer zijn?')->close();

   result:
array
(
    "nl" => 0.66193548387097,
    "af" => 0.51338709677419,
    "br" => 0.49634408602151,
    "nb" => 0.48849462365591,
    "nn" => 0.48741935483871,
    "fy" => 0.47822580645161,
    "dk" => 0.47172043010753,
    "sv" => 0.46408602150538,
    "bi" => 0.46021505376344,
    "de" => 0.45903225806452,
    [...]
)

api

__construct(array $result = [], string $dirname = '')

   you can pass an array of languages to the constructor. to compare the
   desired sentence only with the given languages. this can dramatically
   increase the performance. the other parameter is optional and the name
   of the directory where the translations files are located.
$ld = new language(['de', 'en', 'nl']);

// compares the sentence only with "de", "en" and "nl" language models.
$ld->detect('das ist ein test');
     __________________________________________________________________

whitelist(string ...$whitelist)

   provide a whitelist. returns a list of languages, which are required.
$ld->detect('mag het een onsje meer zijn?')->whitelist('de', 'nn', 'nl', 'af')->
close();

   result:
array
(
    "nl" => 0.66193548387097,
    "af" => 0.51338709677419,
    "nn" => 0.48741935483871,
    "de" => 0.45903225806452
)
     __________________________________________________________________

blacklist(string ...$blacklist)

   provide a blacklist. removes the given languages from the result.
$ld->detect('mag het een onsje meer zijn?')->blacklist('dk', 'nb', 'de')->close(
);

   result:
array
(
    "nl" => 0.66193548387097,
    "af" => 0.51338709677419,
    "br" => 0.49634408602151,
    "nn" => 0.48741935483871,
    "fy" => 0.47822580645161,
    "sv" => 0.46408602150538,
    "bi" => 0.46021505376344,
    [...]
)
     __________________________________________________________________

bestresults()

   returns the best results.
$ld->detect('mag het een onsje meer zijn?')->bestresults()->close();

   result:
array
(
    "nl" => 0.66193548387097
)
     __________________________________________________________________

limit(int $offset, int $length = null)

   you can specify the number of records to return. for example the
   following code will return the top three entries.
$ld->detect('mag het een onsje meer zijn?')->limit(0, 3)->close();

   result:
array
(
    "nl" => 0.66193548387097,
    "af" => 0.51338709677419,
    "br" => 0.49634408602151
)
     __________________________________________________________________

close()

   returns the result as an array.
$ld->detect('this is an example!')->close();

   result:
array
(
    "en" => 0.5889400921659,
    "gd" => 0.55691244239631,
    "ga" => 0.55376344086022,
    "et" => 0.48294930875576,
    "af" => 0.48218125960061,
    [...]
)
     __________________________________________________________________

settokenizer(tokenizerinterface $tokenizer)

   the script use a tokenizer for getting all words in a sentence. you can
   define your own tokenizer to deal with numbers for example.
$ld->settokenizer(new class implements tokenizerinterface
{
    public function tokenize(string $str): array
    {
        return preg_split('/[^a-z0-9]/u', $str, -1, preg_split_no_empty);
    }
});

   this will return only characters from the alphabet in lowercase and
   numbers between 0 and 9.
     __________________________________________________________________

__tostring()

   returns the top entrie of the result. note the echo at the beginning.
echo $ld->detect('das ist ein test.');

   result:
de
     __________________________________________________________________

jsonserialize()

   serialized the data to json.
$object = $ld->detect('tere tulemast tagasi! n  gemist!');

json_encode($object, json_pretty_print);

   result:
{
    "et": 0.5224748810153358,
    "ch": 0.45817028027498674,
    "bi": 0.4452670544685352,
    "fi": 0.440983606557377,
    "lt": 0.4382866208355367,
    [...]
}
     __________________________________________________________________

method chaining

   you can also combine methods with each other. the following example
   will remove all entries specified in the blacklist and returns only the
   top four entries.
$ld->detect('mag het een onsje meer zijn?')->blacklist('af', 'dk', 'sv')->limit(
0, 4)->close();

   result:
array
(
    "nl" => 0.66193548387097
    "br" => 0.49634408602151
    "nb" => 0.48849462365591
    "nn" => 0.48741935483871
)
     __________________________________________________________________

arrayaccess

   you can also access the object directly as an array.
$object = $ld->detect(das ist ein test');

echo $object['de'];
echo $object['en'];
echo $object['xy']; // does not exists

   result:
0.6623339658444
0.56859582542694
null
     __________________________________________________________________

supported languages

   the library currently supports 110 languages. to get an overview of all
   supported languages please have a look at [111]here.
     __________________________________________________________________

other languages

   the library is trainable which means you can change, remove and add
   your own language files to it. if your language not supported, feel
   free to add your own language files. to do that, create a new directory
   in resources and add your training text to it.

     note: the training text should be a .txt file.

example

|- resources
    |- ham
        |- ham.txt
    |- spam
        |- spam.txt

   as you can see, we can also used it to detect spam or ham.

   when you stored your translation files outside of resources, you have
   to specify the path.
$t->learn('your_path_here');

   whenever you change one of the translation files you must first
   generate a language profile for it. this may take a few seconds.
use languagedetection\trainer;

$t = new trainer();

$t->learn();

   remove these few lines after execution and now we can classify texts by
   their language with our own training text.
     __________________________________________________________________

faq

how can i improve the detection phase?

   to improve the detection phase you have to use more id165s. but be
   careful this will slow down the script. i figured out that the
   detection phase is much better when you are using around 9.000 id165s
   (default is 310). to do that look at the code right below:
$t = new trainer();

$t->setmaxngrams(9000);

$t->learn();

   first you have to train it. now you can classify texts like before but
   you must specify how many id165s you want to use.
$ld = new language();

$ld->setmaxngrams(9000);

// "grille pain" is french and means "toaster" in english
var_dump($ld->detect('grille pain')->bestresults());

   result:
class languagedetection\languageresult#5 (1) {
  private $result =>
  array(2) {
    'fr' =>
    double(0.91307037037037)
    'en' =>
    double(0.90623333333333)
  }
}

is the detection process slower if language files are very big?

   no it is not. the trainer class will only use the best 310 id165s of
   the language. if you don't change this number or add more language
   files it will not affect the performance. only creating the id165s is
   slower. however, the creation of id165s must be done only once. the
   detection phase is only affected when you are trying to detect big
   chunks of texts.

     summary: the training phase will be slower but the detection phase
     remains the same.

contributing

   feel free to contribute. any help is welcome.

license

   this projects is licensed under the terms of the mit license.

     *    2019 github, inc.
     * [112]terms
     * [113]privacy
     * [114]security
     * [115]status
     * [116]help

     * [117]contact github
     * [118]pricing
     * [119]api
     * [120]training
     * [121]blog
     * [122]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [123]reload to refresh your
   session. you signed out in another tab or window. [124]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/patrickschur/language-detection/commits/master.atom
   3. https://github.com/patrickschur/language-detection#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/patrickschur/language-detection
  32. https://github.com/join
  33. https://github.com/login?return_to=/patrickschur/language-detection
  34. https://github.com/patrickschur/language-detection/watchers
  35. https://github.com/login?return_to=/patrickschur/language-detection
  36. https://github.com/patrickschur/language-detection/stargazers
  37. https://github.com/login?return_to=/patrickschur/language-detection
  38. https://github.com/patrickschur/language-detection/network/members
  39. https://github.com/patrickschur
  40. https://github.com/patrickschur/language-detection
  41. https://github.com/patrickschur/language-detection
  42. https://github.com/patrickschur/language-detection/issues
  43. https://github.com/patrickschur/language-detection/pulls
  44. https://github.com/patrickschur/language-detection/projects
  45. https://github.com/patrickschur/language-detection/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/language
  48. https://github.com/topics/language-detection
  49. https://github.com/topics/natural-language-processing
  50. https://github.com/topics/id165s
  51. https://github.com/topics/php
  52. https://github.com/topics/nlp
  53. https://github.com/topics/training
  54. https://github.com/patrickschur/language-detection/commits/master
  55. https://github.com/patrickschur/language-detection/branches
  56. https://github.com/patrickschur/language-detection/releases
  57. https://github.com/patrickschur/language-detection/graphs/contributors
  58. https://github.com/patrickschur/language-detection/blob/master/license
  59. https://github.com/patrickschur/language-detection/search?l=php
  60. https://github.com/patrickschur/language-detection/find/master
  61. https://github.com/patrickschur/language-detection/archive/master.zip
  62. https://github.com/login?return_to=https://github.com/patrickschur/language-detection
  63. https://github.com/join?return_to=/patrickschur/language-detection
  64. https://desktop.github.com/
  65. https://desktop.github.com/
  66. https://developer.apple.com/xcode/
  67. https://visualstudio.github.com/
  68. https://github.com/patrickschur
  69. https://github.com/patrickschur/language-detection/commits?author=patrickschur
  70. https://github.com/patrickschur/language-detection/commit/aabe4dbb4441d33aac63de25ce7b3680db07c8d8
  71. https://github.com/patrickschur/language-detection/commit/aabe4dbb4441d33aac63de25ce7b3680db07c8d8
  72. https://github.com/patrickschur/language-detection/tree/aabe4dbb4441d33aac63de25ce7b3680db07c8d8
  73. https://github.com/patrickschur/language-detection/tree/master/resources
  74. https://github.com/patrickschur/language-detection/commit/95b55109177d5c4bd6b1bec6e8835cd0df36ef5f
  75. https://github.com/patrickschur/language-detection/tree/master/src/languagedetection
  76. https://github.com/patrickschur/language-detection/commit/8943343c87187d38d80dba98148ef6d40928f08b
  77. https://github.com/patrickschur/language-detection/tree/master/tests
  78. https://github.com/patrickschur/language-detection/commit/aabe4dbb4441d33aac63de25ce7b3680db07c8d8
  79. https://github.com/patrickschur/language-detection/blob/master/.editorconfig
  80. https://github.com/patrickschur/language-detection/commit/d08dee127d9026a672fa10c4d3bf360c3580723f
  81. https://github.com/patrickschur/language-detection/blob/master/.gitattributes
  82. https://github.com/patrickschur/language-detection/blob/master/.gitignore
  83. https://github.com/patrickschur/language-detection/blob/master/.travis.yml
  84. https://github.com/patrickschur/language-detection/commit/5af5c430f182493fc878abb3cfc1cc101b608991
  85. https://github.com/patrickschur/language-detection/blob/master/changelog.md
  86. https://github.com/patrickschur/language-detection/commit/95b55109177d5c4bd6b1bec6e8835cd0df36ef5f
  87. https://github.com/patrickschur/language-detection/blob/master/contributing.md
  88. https://github.com/patrickschur/language-detection/blob/master/license
  89. https://github.com/patrickschur/language-detection/blob/master/readme.md
  90. https://github.com/patrickschur/language-detection/blob/master/composer.json
  91. https://github.com/patrickschur/language-detection/commit/f9365f541bbdddc3c9eb83b1a7b92fb595478bc1
  92. https://github.com/patrickschur/language-detection/blob/master/phpunit.xml
  93. https://travis-ci.org/patrickschur/language-detection
  94. https://codecov.io/gh/patrickschur/language-detection
  95. https://packagist.org/packages/patrickschur/language-detection
  96. https://packagist.org/packages/patrickschur/language-detection
  97. http://php.net/
  98. https://opensource.org/licenses/mit
  99. https://en.wikipedia.org/wiki/id165
 100. https://github.com/patrickschur/language-detection#installation-with-composer
 101. https://github.com/patrickschur/language-detection#basic-usage
 102. https://github.com/patrickschur/language-detection#api
 103. https://github.com/patrickschur/language-detection#method-chaining
 104. https://github.com/patrickschur/language-detection#arrayaccess
 105. https://github.com/patrickschur/language-detection#supported-languages
 106. https://github.com/patrickschur/language-detection#other-languages
 107. https://github.com/patrickschur/language-detection#faq
 108. https://github.com/patrickschur/language-detection#contributing
 109. https://github.com/patrickschur/language-detection#license
 110. https://secure.php.net/manual/en/book.mbstring.php
 111. https://github.com/patrickschur/language-detection/blob/master/resources/readme.md
 112. https://github.com/site/terms
 113. https://github.com/site/privacy
 114. https://github.com/security
 115. https://githubstatus.com/
 116. https://help.github.com/
 117. https://github.com/contact
 118. https://github.com/pricing
 119. https://developer.github.com/
 120. https://training.github.com/
 121. https://github.blog/
 122. https://github.com/about
 123. https://github.com/patrickschur/language-detection
 124. https://github.com/patrickschur/language-detection

   hidden links:
 126. https://github.com/
 127. https://github.com/patrickschur/language-detection
 128. https://github.com/patrickschur/language-detection
 129. https://github.com/patrickschur/language-detection
 130. https://help.github.com/articles/which-remote-url-should-i-use
 131. https://github.com/patrickschur/language-detection#language-detection
 132. https://github.com/patrickschur/language-detection#table-of-contents
 133. https://github.com/patrickschur/language-detection#installation-with-composer
 134. https://github.com/patrickschur/language-detection#basic-usage
 135. https://github.com/patrickschur/language-detection#api
 136. https://github.com/patrickschur/language-detection#__constructarray-result---string-dirname--
 137. https://github.com/patrickschur/language-detection#whiteliststring-whitelist
 138. https://github.com/patrickschur/language-detection#blackliststring-blacklist
 139. https://github.com/patrickschur/language-detection#bestresults
 140. https://github.com/patrickschur/language-detection#limitint-offset-int-length--null
 141. https://github.com/patrickschur/language-detection#close
 142. https://github.com/patrickschur/language-detection#settokenizertokenizerinterface-tokenizer
 143. https://github.com/patrickschur/language-detection#__tostring
 144. https://github.com/patrickschur/language-detection#jsonserialize
 145. https://github.com/patrickschur/language-detection#method-chaining
 146. https://github.com/patrickschur/language-detection#arrayaccess
 147. https://github.com/patrickschur/language-detection#supported-languages
 148. https://github.com/patrickschur/language-detection#other-languages
 149. https://github.com/patrickschur/language-detection#example
 150. https://github.com/patrickschur/language-detection#faq
 151. https://github.com/patrickschur/language-detection#how-can-i-improve-the-detection-phase
 152. https://github.com/patrickschur/language-detection#is-the-detection-process-slower-if-language-files-are-very-big
 153. https://github.com/patrickschur/language-detection#contributing
 154. https://github.com/patrickschur/language-detection#license
 155. https://github.com/
