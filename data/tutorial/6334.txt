   #[1]github [2]recent commits to displacy:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

   this repository has been archived by the owner. it is now read-only.
     * [33]watch [34]19
     * [35]star [36]271
     * [37]fork [38]68

[39]explosion/[40]displacy

   [41]code [42]pull requests 0 [43]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [44]sign up
        displacy.js: an open-source nlp visualiser for the modern web
   [45]https://demos.explosion.ai/displacy
   [46]spacy [47]javascript [48]css [49]svg [50]nlp
   [51]natural-language-processing [52]visualization
     * [53]24 commits
     * [54]1 branch
     * [55]0 releases
     * [56]fetching contributors
     * [57]mit

    1. [58]javascript 51.8%
    2. [59]css 29.6%
    3. [60]html 18.6%

   (button) javascript css html
   branch: master
   [61]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/e
   [62]download zip

downloading...

   want to be notified of new releases in explosion/displacy?
   [63]sign in [64]sign up

launching github desktop...

   if nothing happens, [65]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [66]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [67]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [68]download the github extension for visual studio
   and try again.

   (button) go back
   [69]@ines
   [70]ines [71]update readme.md
   latest commit [72]a18486d apr 8, 2018
   [73]permalink
   type       name       latest commit message commit time
        failed to load latest commit information.
        [74]assets
        [75].gitignore   [76]update gitignore  oct 5, 2016
        [77]license      [78]    initial commit  oct 3, 2016
        [79]readme.md
        [80]_data.json
        [81]_layout.jade
        [82]_mixins.jade
        [83]index.jade
        [84]package.json

readme.md

   [85][68747470733a2f2f6578706c6f73696f6e2e61692f6173736574732f696d672f6c
   6f676f2e737667]

displacy.js: an open-source nlp visualiser for the modern web

            as of v2.0.0, the displacy visualizers are now integrated into
     the core library. [86]see here for more details on how to visualize
     a doc object from within spacy. we're also working on a new suite of
     tools for serving and testing spacy models. the code of the
     standalone visualizers will still be available on github, just not
     actively maintained.

   [87]displacy.js is a modern and service-independent visualisation
   library. we hope this makes it easy to compare different services, and
   explore your own in-house models. if you're using [88]spacy's syntactic
   parser, displacy should be part of your regular workflow. because
   spacy's parser is statistical, it's often hard to predict how it will
   analyse a given sentence. using displacy, you can simply try and see.
   you can also share the page for discussion with your team, or save the
   svg to use elsewhere. if you're developing your own model, you can run
   the service yourself     it's 100% open source.

   to read more about displacy.js, check out the [89]blog post.

   [90]npm

run the demo

   this demo is implemented in [91]jade (aka pug), an extensible
   templating language that compiles to html, and is built or served by
   [92]harp. to serve it locally on [93]http://localhost:9000, simply run:
sudo npm install --global harp
git clone https://github.com/explosion/displacy
cd displacy
harp server

   or simply install it from npm:
npm install displacy-demo

   the demo is written in ecmascript 6. for full, cross-browser
   compatibility, make sure to use a compiler like [94]babel. for more
   info, see this [95]compatibility table.

using displacy.js

   to use displacy in your project, download [96]displacy.js from github
   or via npm:
npm install displacy

   then include the file and initialize a new instance specifying the api
   and settings:
const displacy = new displacy('http://localhost:8000', {
    container: '#displacy',
    format: 'spacy',
    distance: 300,
    offsetx: 100
});

   our service that produces the input data is open source, too. you can
   find it at [97]spacy-services.

   the following settings are available:
   setting description default
   container element to draw displacy in, can be any query selector
   #displacy
   format format used to generate parse ('spacy' or 'google') 'spacy'
   defaulttext text used if displacy is run without text specified 'hello
   world.'
   defaultmodel model used if displacy is run without model specified 'en'
   collapsepunct collapse punctuation true
   collapsephrase collapse phrases true
   distance distance between words in px 300
   offsetx spacing on left side of the svg in px 50
   arrowspacing spacing between arrows in px to avoid overlaps 20
   arrowwidth width of arrow head in px 10
   arrowstroke width of arc in px 2
   wordspacing spacing between words and arcs in px 50
   font font face for all text 'inherit'
   color text color, hex, rgb or color names '#000000'
   bg background color, hex, rgb or color names '#ffffff'
   onstart function to be executed on start of server request false
   onsuccess callback function to be executed on successful server
   response false
   onerror function to be executed if request fails false

visualising a parse

   the parse() method renders a parse generated by spacy as an svg in the
   container.
displacy.parse('this is a sentence.', 'en', {
    collapsepunct: false,
    collapsephrase: false,
    color: '#ffffff',
    bg: '#000000'
});

   the visual settings specified here override the global settings. the
   available settings are collapsepunct, collapsephrase, font, color and
   bg.

rendering a parse manually

   alternatively, you can use render() to manually render a json-formatted
   set of arcs and words:
const parse = {
    arcs: [
        { dir: 'right', end: 1, label: 'npadvmod', start: 0 }
    ],
    words: [
        { tag: 'uh', text: 'hello' },
        { tag: 'nnp', text: 'world.' }
    ]
};

displacy.render(parse, {
    color: '#ff0000'
});

   the visual settings specified here override the global settings. the
   available settings are font, color and bg.

converting output from other formats and adding your own

   by default, displacy expects spacy's json output in the following
   style:
{
    "arcs": [
        { "dir": "left", "end": 4, "label": "nsubj", "start": 0 }
    ],

    "words": [
        { "tag": "nns", "text": "robots" }
    ]
}

   if format is set to 'google', the api response is converted from
   [98]google's format. to add your own conversion rules, add a new case
   to handleconversion():
handleconversion(parse) {
    switch(this.format) {
        case 'spacy': return parse; break;
        case 'google': return({ words: ..., arcs: ... }); break;
        case 'your_format': return({ words: ..., arcs: ... }); break;
        default: return parse;
    }
}

   you can now initialize displacy with format: 'your_format'.

changing the theme and colours

   you can find the current theme settings in
   [99]/assets/css/_displacy-theme.sass. all elements contained in the svg
   output come with tags and data attributes and can be styled flexibly
   using css. by default, the currentcolor of the element is used for
   colouring, meaning only need to change the color property in css.

   the following classes are available:
       class name                    description
   .displacy-word      word text
   .displacy-tag       pos tag
   .displacy-token     container of word and pos tag
   .displacy-arc       arrow arc (without label or arrow head)
   .displacy-label     relation type (arrow label)
   .displacy-arrowhead arrow head
   .displacy-arrow     container of arc, label and arrow head

   additionally, you can use these attributes as attribute selectors:
   attribute value on element
   data-tag pos tag value .displacy-token, .displacy-word, .displacy-tag
   data-label relation type value .displacy-arrow, .displacy-arc,
   .displacy-arrowhead, .displacy-label
   data-dir direction of arrow .displacy-arrow, .displacy-arc,
   .displacy-arrowhead, .displacy-label

   using a combination of those selectors and some basic css logic, you
   can create pretty powerful templates to style the elements based on
   their role and function in the parse. here are a few examples:
/* format all words in 12px helvetica and grey */

.displacy-word {
    font: 12px helvetica, arial, sans-serif;
    color: grey;
}


/* make all noun phrases (tags that start with "nn") green */

.displacy-tag[data-tag^="nn"] {
    color: green;
}


/* make all right arrows red and hide their labels */

.displacy-arc[data-dir="right"],
.displacy-arrowhead[data-dir="right"] {
    color: red;
}

.displacy-label[data-dir="right"] {
    display: none;
}


/* hide all tags for verbs (tags that start with "vb") that are not the base for
m ("vb") */

.displacy-tag[data-tag^="vb"]:not([data-tag="vb"]) {
    display: none;
}


/* only display tags if word is hovered (with smooth transition) */

.displacy-tag {
    opacity: 0;
    transition: opacity 0.25s ease;
}

.displacy-word:hover + .displacy-tag {
    opacity: 1;
}

adding custom data attributes

   displacy lets you define custom attributes via the json representation
   of the parse on both words and arcs:
"words": [
    {
        "tag": "nns",
        "text": "robots",
        "data": [
            [ "custom", "your value here" ],
            [ "example", "example text here" ]
        ]
    }
]

   custom attributes are added as data attributes prefixed with data-, so
   their names shouldn't contain spaces or special characters. if added to
   words, the data attributes are attached to the token (.displacy-token),
   if added to arcs, they're attached to the arrow (.displacy-arrow):
<text class="displacy-token" data-custom="your value here" data-example="example
 text here">...</text>

     *    2019 github, inc.
     * [100]terms
     * [101]privacy
     * [102]security
     * [103]status
     * [104]help

     * [105]contact github
     * [106]pricing
     * [107]api
     * [108]training
     * [109]blog
     * [110]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [111]reload to refresh your
   session. you signed out in another tab or window. [112]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/explosion/displacy/commits/master.atom
   3. https://github.com/explosion/displacy#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/explosion/displacy
  32. https://github.com/join
  33. https://github.com/login?return_to=/explosion/displacy
  34. https://github.com/explosion/displacy/watchers
  35. https://github.com/login?return_to=/explosion/displacy
  36. https://github.com/explosion/displacy/stargazers
  37. https://github.com/login?return_to=/explosion/displacy
  38. https://github.com/explosion/displacy/network/members
  39. https://github.com/explosion
  40. https://github.com/explosion/displacy
  41. https://github.com/explosion/displacy
  42. https://github.com/explosion/displacy/pulls
  43. https://github.com/explosion/displacy/pulse
  44. https://github.com/join?source=prompt-code
  45. https://demos.explosion.ai/displacy
  46. https://github.com/topics/spacy
  47. https://github.com/topics/javascript
  48. https://github.com/topics/css
  49. https://github.com/topics/svg
  50. https://github.com/topics/nlp
  51. https://github.com/topics/natural-language-processing
  52. https://github.com/topics/visualization
  53. https://github.com/explosion/displacy/commits/master
  54. https://github.com/explosion/displacy/branches
  55. https://github.com/explosion/displacy/releases
  56. https://github.com/explosion/displacy/graphs/contributors
  57. https://github.com/explosion/displacy/blob/master/license
  58. https://github.com/explosion/displacy/search?l=javascript
  59. https://github.com/explosion/displacy/search?l=css
  60. https://github.com/explosion/displacy/search?l=html
  61. https://github.com/explosion/displacy/find/master
  62. https://github.com/explosion/displacy/archive/master.zip
  63. https://github.com/login?return_to=https://github.com/explosion/displacy
  64. https://github.com/join?return_to=/explosion/displacy
  65. https://desktop.github.com/
  66. https://desktop.github.com/
  67. https://developer.apple.com/xcode/
  68. https://visualstudio.github.com/
  69. https://github.com/ines
  70. https://github.com/explosion/displacy/commits?author=ines
  71. https://github.com/explosion/displacy/commit/a18486da3ea8b327f64141c035be8b06ff158453
  72. https://github.com/explosion/displacy/commit/a18486da3ea8b327f64141c035be8b06ff158453
  73. https://github.com/explosion/displacy/tree/a18486da3ea8b327f64141c035be8b06ff158453
  74. https://github.com/explosion/displacy/tree/master/assets
  75. https://github.com/explosion/displacy/blob/master/.gitignore
  76. https://github.com/explosion/displacy/commit/5f328f4ca0fd79e5b302332281c7c392a146a453
  77. https://github.com/explosion/displacy/blob/master/license
  78. https://github.com/explosion/displacy/commit/bd84bf0c58a5772180917b5904cdb2fbd81db918
  79. https://github.com/explosion/displacy/blob/master/readme.md
  80. https://github.com/explosion/displacy/blob/master/_data.json
  81. https://github.com/explosion/displacy/blob/master/_layout.jade
  82. https://github.com/explosion/displacy/blob/master/_mixins.jade
  83. https://github.com/explosion/displacy/blob/master/index.jade
  84. https://github.com/explosion/displacy/blob/master/package.json
  85. https://explosion.ai/
  86. https://spacy.io/usage/visualizers
  87. https://demos.explosion.ai/displacy
  88. https://spacy.io/
  89. https://explosion.ai/blog/displacy-js-nlp-visualizer
  90. https://www.npmjs.com/package/displacy
  91. https://www.jade-lang.org/
  92. https://harpjs.com/
  93. http://localhost:9000/
  94. https://github.com/babel/babel
  95. https://kangax.github.io/compat-table/es6/
  96. https://github.com/explosion/displacy/blob/master/assets/js/displacy.js
  97. https://github.com/explosion/spacy-services
  98. https://cloud.google.com/natural-language/docs/basics#syntactic_analysis_responses
  99. https://github.com/explosion/displacy/blob/master/assets/css/_displacy-theme.sass
 100. https://github.com/site/terms
 101. https://github.com/site/privacy
 102. https://github.com/security
 103. https://githubstatus.com/
 104. https://help.github.com/
 105. https://github.com/contact
 106. https://github.com/pricing
 107. https://developer.github.com/
 108. https://training.github.com/
 109. https://github.blog/
 110. https://github.com/about
 111. https://github.com/explosion/displacy
 112. https://github.com/explosion/displacy

   hidden links:
 114. https://github.com/
 115. https://github.com/explosion/displacy
 116. https://github.com/explosion/displacy
 117. https://github.com/explosion/displacy
 118. https://help.github.com/articles/which-remote-url-should-i-use
 119. https://github.com/explosion/displacy#displacyjs-an-open-source-nlp-visualiser-for-the-modern-web
 120. https://github.com/explosion/displacy#run-the-demo
 121. https://github.com/explosion/displacy#using-displacyjs
 122. https://github.com/explosion/displacy#visualising-a-parse
 123. https://github.com/explosion/displacy#rendering-a-parse-manually
 124. https://github.com/explosion/displacy#converting-output-from-other-formats-and-adding-your-own
 125. https://github.com/explosion/displacy#changing-the-theme-and-colours
 126. https://github.com/explosion/displacy#adding-custom-data-attributes
 127. https://github.com/
