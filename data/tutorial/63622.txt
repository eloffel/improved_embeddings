   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]become a member[7]sign in[8]get started
     __________________________________________________________________

   [1*yppdaln8bng1d96tafrsgq.png]

introducing vega-lite 2.0

   [9]go to the profile of uw interactive data lab
   [10]uw interactive data lab (button) blockedunblock (button)
   followfollowing
   oct 31, 2017

   we are excited to announce the official version 2 release of
   [11]vega-lite, a high-level language for rapidly creating interactive
   visualizations.

   vega-lite enables concise descriptions of visualizations as a set of
   encodings that map data fields to the properties of graphical marks.
   vega-lite uses a portable [12]json format that compiles to full
   specifications in the larger [13]vega language. vega-lite includes
   support for data transformations such as aggregation, binning,
   filtering, and sorting, as well as visual transformations such as
   stacking and faceting into small multiples.

   in addition to an expressive range of static visualizations, vega-lite
   2.0 adds support for flexible combinations of charts and interactions
   such as panning, zooming, interactive filtering, and linked selection.
   version 2 introduces three major additions: view composition,
   interaction, and vega 3 support.

view composition

   a powerful aspect of modular approaches to visualization is the ability
   to create sophisticated graphics by composing simple ones. vega-lite
   has four operators to compose charts: layer, facet, concat and repeat.
   with layer, you can stack charts on top of each other and vega-lite
   automatically determines how to align the axes and share scales. facet
   subdivides the data into groups and creates a chart for each partition.
   concat combines arbitrary charts into dashboard layouts. finally,
   repeat is a data-driven way to concatenate charts.

   most importantly, these operators can be combined! authors can create
   rich multi-view graphics within one declarative specification. the
   example below compares weather data in new york and seattle, layering
   data for individual years and averages within a repeated template for
   different measurements.
   [1*zc7ne_zsjqbfow0wnt-kkw.png]
   three charts that show different weather measures throughout the year
   in seattle and new york. you can create this chart in vega-lite with
   layering and repeating views.[14] try it out!

   the layer, facet, concat, and repeat operators comprise a view algebra
   for creating a wide range of multi-view visualizations. for more about
   details about flexible chart composition, see the [15]vega-lite
   documentation.

interaction

   multi-view visualizations provide a valuable way to get an overview of
   many variables at once. however, to investigate further and see data
   from multiple perspectives, interaction is critical. vega-lite version
   2 introduces ways to describe not only visual encodings, but also to
   specify interaction techniques using a concise and composable syntax
   for selections.

   in vega-lite 2.0, visualization authors specify the type of selection
   they would like (e.g., a point or interval selection), along with
   possible transformations. the vega-lite compiler then automatically
   synthesizes appropriate input handling logic to implement the
   interaction. once defined, interactive selections can be used to
   parameterize the visualization, for example to filter data, highlight
   points, and determine scale ranges to pan or zoom a plot.

   the plot below uses an interval selection, which causes the chart to
   include an interactive brush (shown in grey). the brush selection
   parameterizes the red guideline, which visualizes the average value
   within the selected interval.
   [1*fmey_ykwjgpihuhtjjhu9q.gif]
   an interactive moving average in vega-lite 2. [16]try it out!

   view composition and interactive selections can be combined. below, we
   use an interval selection over a set of histograms showing the
   distributions of different flight statistics. the selection
   parameterizes a filter for the yellow bars, creating a coordinated
   interaction commonly referred to as brushing & linking or
   cross-filtering. as a viewer adjusts the selection, they can
   immediately see how the other distributions change in response.
   [1*9mgtnodef6ytccsk9mytsw.gif]
   a crossfilter interaction in vega-lite 2. [17]try it out!

   more details about vega-lite   s interaction primitives can be found in
   [18]the documentation. for a more formal treatment, see the (best paper
   winning) [19]infovis 2016 research paper on the vega-lite language
   design.

   for a tour of these and other features, watch our openvis conf talk:

   iframe: [20]/media/b288f3a71c5d5b5cc528eb6ce6bc0bc6?postid=de6661c12d58

   vega-lite openvis conf talk

vega 3 support

   finally, another major change in vega-lite 2.0 is that it now targets
   the new [21]vega 3.0 language. among other advances, vega 3 introduces
   a more performant reactive dataflow runtime and richer support for
   interaction, layouts, data transformation, binned scales, and more.
     __________________________________________________________________

   in addition to the developments above, we have attempted to make
   vega-lite more consistent and powerful. as one example, data transforms
   are now specified using an array notation, giving authors more control
   over the execution order of filters, formula calculations, binning, and
   aggregation.

   we are excited to see what others will build with vega-lite! we are
   especially encouraged that [22]jupyter lab (the next generation of
   [23]jupyter notebooks) will ship with vega and vega-lite by default. we
   are also working with the [24]altair team to release a new version of
   the altair python api for vega-lite. look for that in the months to
   come to create interactive, multi-view visualizations directly within
   the jupyter data science environment!

   feeling inspired? check out the [25]example gallery and
   [26]applications that use vega-lite. read tutorials and documentation
   at [27]vega.github.io/vega-lite/. source code is available on github at
   [28]https://github.com/vega/vega-lite. for updates, [29]follow the vega
   project on twitter at @vega_vis.

   this post was written by [30]dominik moritz, [31]kanit    ham   
   wongsuphasawat, [32]arvind satyanarayan, and [33]jeffrey heer.

   thanks to [34]dominik moritz and [35]kanit ham wong.
     * [36]data visualization
     * [37]charts
     * [38]interaction design

   (button)
   (button)
   (button) 607 claps
   (button) (button) (button) 2 (button) (button)

     (button) blockedunblock (button) followfollowing
   [39]go to the profile of uw interactive data lab

[40]uw interactive data lab

   data visualization and interactive analysis research at the university
   of washington. [41]http://idl.cs.washington.edu/

     * (button)
       (button) 607
     * (button)
     *
     *

   [42]go to the profile of uw interactive data lab
   never miss a story from uw interactive data lab, when you sign up for
   medium. [43]learn more
   never miss a story from uw interactive data lab
   (button) blockedunblock (button) followget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/de6661c12d58
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/membership?source=upgrade_membership---nav_full
   7. https://medium.com/m/signin?redirect=https://medium.com/@uwdata/introducing-vega-lite-2-0-de6661c12d58&source=--------------------------nav_reg&operation=login
   8. https://medium.com/m/signin?redirect=https://medium.com/@uwdata/introducing-vega-lite-2-0-de6661c12d58&source=--------------------------nav_reg&operation=register
   9. https://medium.com/@uwdata?source=post_header_lockup
  10. https://medium.com/@uwdata
  11. https://vega.github.io/vega-lite/
  12. https://en.wikipedia.org/wiki/json
  13. https://vega.github.io/vega/
  14. https://vega.github.io/editor/#/examples/vega-lite/repeat_layer
  15. https://vega.github.io/vega-lite/docs/composition.html
  16. https://vega.github.io/editor/#/examples/vega-lite/selection_layer_bar_month
  17. https://vega.github.io/editor/#/examples/vega-lite/layered_crossfilter
  18. https://vega.github.io/vega-lite/docs/selection.html
  19. https://idl.cs.washington.edu/papers/vega-lite
  20. https://medium.com/media/b288f3a71c5d5b5cc528eb6ce6bc0bc6?postid=de6661c12d58
  21. https://vega.github.io/vega/
  22. https://github.com/jupyterlab/jupyterlab
  23. http://jupyter.org/
  24. https://altair-viz.github.io/
  25. https://vega.github.io/vega-lite/examples/
  26. https://vega.github.io/vega-lite/applications.html
  27. https://vega.github.io/vega-lite/
  28. https://github.com/vega/vega-lite
  29. https://twitter.com/vega_vis
  30. https://twitter.com/domoritz
  31. https://twitter.com/kanitw
  32. https://twitter.com/arvindsatya1
  33. https://twitter.com/jeffrey_heer
  34. https://medium.com/@domoritz?source=post_page
  35. https://medium.com/@kanitw?source=post_page
  36. https://medium.com/tag/data-visualization?source=post
  37. https://medium.com/tag/charts?source=post
  38. https://medium.com/tag/interaction-design?source=post
  39. https://medium.com/@uwdata?source=footer_card
  40. https://medium.com/@uwdata
  41. http://idl.cs.washington.edu/
  42. https://medium.com/@uwdata
  43. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  45. https://medium.com/p/de6661c12d58/share/twitter
  46. https://medium.com/p/de6661c12d58/share/facebook
  47. https://medium.com/p/de6661c12d58/share/twitter
  48. https://medium.com/p/de6661c12d58/share/facebook
