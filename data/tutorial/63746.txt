   #[1]github [2]recent commits to tensorflow-livelessons:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]100
     * [35]star [36]666
     * [37]fork [38]517

[39]the-deep-learners/[40]tensorflow-livelessons

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   "deep learning with tensorflow" livelessons
     * [47]273 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors
     * [51]mit

    1. [52]jupyter notebook 99.7%
    2. other 0.3%

   (button) jupyter notebook other
   branch: master (button) new pull request
   [53]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/t
   [54]download zip

downloading...

   want to be notified of new releases in
   the-deep-learners/tensorflow-livelessons?
   [55]sign in [56]sign up

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [59]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [60]download the github extension for visual studio
   and try again.

   (button) go back
   [61]@jonkrohn
   [62]jonkrohn [63]merge pull request [64]#19 [65]from
   dmitrinesterenko/patch-1 (button)    
updates docker run command to simplify it

   latest commit [66]93c0e1d feb 7, 2019
   [67]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [68]img [69]delete game.jpg mar 7, 2018
   [70]installation [71]updates docker run command to simplify it feb 6,
   2019
   [72]notebooks
   [73].gitignore [74]initial commit apr 18, 2017
   [75]dockerfile
   [76]dockerfile-gpu
   [77]license
   [78]readme.md [79]fix bullet indents jun 14, 2018

readme.md

tensorflow-livelessons

   this repository is home to the code that accompanies [80]jon krohn's:
    1. [81]deep learning with tensorflow livelessons (summary blog post
       [82]here)
    2. [83]deep learning for natural language processing livelessons
       (summary blog post [84]here)
    3. [85]deep id23 and gans livelessons (summary blog
       post [86]here)

   the above order is the recommended sequence in which to undertake these
   livelessons. that said, deep learning with tensorflow provides a
   sufficient theoretical and practical background for the other
   livelessons.

prerequisites

command line

   working through these livelessons will be easiest if you are familiar
   with the unix command line basics. a tutorial of these fundamentals can
   be found [87]here.

python for data analysis

   in addition, if you're unfamiliar with using python for data analysis
   (e.g., the pandas, scikit-learn, matplotlib packages), the [88]data
   analyst path of dataquest will quickly get you up to speed -- steps one
   (introduction to python) and two (intermediate python and pandas)
   provide the bulk of the essentials.

installation

   step-by-step guides for running the code in this repository can be
   found in the [89]installation directory.

notebooks

   all of the code that i cover in the livelessons can be found in
   [90]this directory as [91]jupyter notebooks.

   below is the lesson-by-lesson sequence in which i covered them:

[92]deep learning with tensorflow livelessons

lesson one: introduction to deep learning

1.1 neural networks and deep learning

     * via analogy to their biological inspirations, this section
       introduces id158s and how they developed to
       their predominantly deep architectures today

1.2 running the code in these livelessons

     * goes over the [93]installation directory mentioned above,
       discussing the options for working through my jupyter notebooks
     * details the [94]step-by-step installation of tensorflow on mac os
       x, a process that may be instructive for users of any unix-like
       operating system

1.3 an introductory id158

     * get your hands dirty with a simple-as-possible neural network
       ([95]shallow_net_in_keras.ipynb) for classifying handwritten digits
     * introduces jupyter notebooks and their most useful hot keys
     * introduces a gentle quantity of deep learning terminology by
       whiteboarding through:
          + the mnist digit data set
          + the preprocessing of images for analysis with a neural network
          + a shallow network architecture
     __________________________________________________________________

lesson two: how deep learning works

2.1 the families of deep neural nets and their applications

     * talk through the function and popular applications of the
       predominant modern families of deep neural nets:
          + dense / fully-connected
          + convolutional networks (convnets)
          + recurrent neural networks (id56s) / long short-term memory
            units (lstms)
          + id23
          + id3

2.2 essential theory i    - neural units

     * the following essential deep learning concepts are explained with
       intuitive, graphical explanations:
          + neural units and id180
               o id88
               o sigmoid ([96]sigmoid_function.ipynb)
               o tanh
               o rectified linear units (relu)

2.3 essential theory ii -- cost functions, id119, and
id26

     * cost functions
          + quadratic
          + cross-id178 ([97]cross_id178_cost.ipynb)
     * id119
     * id26 via the chain rule
     * layer types
          + input
          + dense / fully-connected
          + softmax output ([98]softmax_demo.ipynb)

2.4 tensorflow playground -- visualizing a deep net in action

     * leverage [99]tensorflow playground to interactively visualize the
       theory from the preceding section

2.5 data sets for deep learning

     * overview of canonical data sets for image classification and
       meta-resources for data sets ideally suited to deep learning

2.6 applying deep net theory to code i

     * apply the theory learned throughout lesson two to create an
       intermediate-depth image classifier
       ([100]intermediate_net_in_keras.ipynb)
     * builds on, and greatly outperforms, the shallow architecture from
       section 1.3
     __________________________________________________________________

lesson three: convolutional networks

3.1 essential theory iii -- mini-batches, unstable gradients, and avoiding
overfitting

     * add to our state-of-the-art deep learning toolkit by delving
       further into essential theory, specifically:
          + weight initialization
               o uniform
               o normal
               o xavier glorot
          + stochastic id119
               o learning rate
               o batch size
               o second-order gradient learning
                    # momentum
                    # adam
          + unstable gradients
               o vanishing
               o exploding
          + avoiding overfitting / model generalization
               o l1/l2 id173
               o dropout
               o artificial data set expansion
          + batch id172
          + more layers
               o max-pooling
               o flatten

3.2 applying deep net theory to code ii

     * apply the theory learned in the previous section to create a deep,
       dense net for image classification ([101]deep_net_in_keras.ipynb)
     * builds on, and outperforms, the intermediate architecture from
       section 2.5

3.3 introduction to convolutional neural networks for visual recognition

     * whiteboard through an intuitive explanation of what convolutional
       layers are and how they're so effective

3.4 classic convnet architectures -    lenet-5

     * apply the theory learned in the previous section to create a deep
       convolutional net for image classification
       ([102]lenet_in_keras.ipynb) that is inspired by the classic lenet-5
       neural network introduced in section 1.1

3.5 classic convnet architectures -    alexnet and vggnet

     * classify color images of flowers with two very deep convolutional
       networks inspired by contemporary prize-winning model
       architectures: alexnet ([103]alexnet_in_keras.ipynb) and vggnet
       ([104]vggnet_in_keras.ipynb)

3.6 tensorboard and the interpretation of model outputs

     * return to the networks from the previous section, adding code to
       output results to the tensorboard deep learning
       results-visualization tool
     * explore tensorboard and explain how to interpret model results
       within it
     __________________________________________________________________

lesson four: introduction to tensorflow

4.1 comparison of the leading deep learning libraries

     * discuss the relative strengths, weaknesses, and common applications
       of the leading deep learning libraries:
          + caffe
          + torch
          + theano
          + tensorflow
          + and the high-level apis tflearn and keras
     * conclude that, for the broadest set of applications, tensorflow is
       the best option

4.2 introduction to tensorflow

     * introduce tensorflow graphs and related terminology:
          + ops
          + tensors
               o variables
               o placeholders
          + feeds
          + fetches
     * build simple tensorflow graphs ([105]first_tensorflow_graphs.ipynb)
     * build neurons in tensorflow ([106]first_tensorflow_neurons.ipynb)

4.3 fitting models in tensorflow

     * fit a simple line in tensorflow:
          + by considering individual data points
            ([107]point_by_point_intro_to_tensorflow.ipynb)
          + while taking advantage of tensors
            ([108]tensor-fied_intro_to_tensorflow.ipynb)
          + with batches sampled from millions of data points
            ([109]intro_to_tensorflow_times_a_million.ipynb)

4.4 dense nets in tensorflow

     * create a dense neural net
       ([110]intermediate_net_in_tensorflow.ipynb) in tensorflow with an
       architecture identical to the intermediate one built in keras in
       section 2.5

4.5 deep convolutional nets in tensorflow

     * create a deep convolutional neural net
       ([111]lenet_in_tensorflow.ipynb) in tensorflow with an architecture
       identical to the lenet-inspired one built in keras in section 3.4
     __________________________________________________________________

lesson five: improving deep networks

5.1 improving performance and tuning hyperparameters

     * detail systematic steps for improving the performance of deep
       neural nets, including by tuning hyperparameters

5.2 how to built your own deep learning project

     * specific steps for designing and evaluating your own deep learning
       project

5.3 resources for self-study

     * topics worth investing time in to become an expert deployer of deep
       learning models
     __________________________________________________________________
     __________________________________________________________________

[112]deep learning for natural language processing

lesson one: the power and elegance of deep learning for nlp

1.1 introduction to deep learning for natural language processing

     * high-level overview of deep learning as it pertains to natural
       language processing (nlp)
     * influential examples of industrial applications of nlp
     * timeline of contemporary breakthroughs that have brought deep
       learning approaches to the forefront of nlp research and
       development

1.2 computational representations of natural language elements

     * introduce the elements of natural language
     * contrast how these elements are represented by traditional
       machine-learning models and emergent deep-learning models

1.3 nlp applications

     * specify common nlp applications and bucket them into three tiers of
       relative complexity

1.4 installation, including gpu considerations

     * build on the [113]step-by-step installation of tensorflow on mac os
       x covered in the [114]deep learning with tensorflow livelessons to
       facilitate the training of deep learning models with an nvidia gpu.

1.5 review of prerequisite deep learning theory

     * summarise the key concepts introduced in the [115]deep learning
       with tensorflow livelessons, which serve as the foundation for the
       material introduced in these nlp-focused livelessons

1.6 a sneak peak

     * take a tantalising look ahead at the capabilities developed over
       the course of these livelessons
     __________________________________________________________________

lesson two: word vectors

2.1 vector-space embedding

     * leverage interactive demos to enable an intuitive understanding of
       vector-space embeddings of words, nuanced quantitative
       representations of word meaning

2.2 id97

     * key papers that led to the development of id97, a technique for
       transforming natural language into vector representations
     * essential id97 theory introduced:
          + architectures:
              1. skip-gram
              2. continuous bag of words
          + training algorithms:
              1. hierarchical softmax
              2. negative sampling
          + evaluation perspectives:
              1. intrinsic
              2. extrinsic
          + hyperparameters:
              1. number of dimensions
              2. context-word window size
              3. number of iterations
              4. size of data set
     * contrast id97 with its leading alternative, [116]glove

2.3 data sets for nlp

     * pre-trained word vectors:
          + for [117]id97
          + for [118]glove
     * natural language data sets:
          + jon krohn's [119]resources page
          + [120]zhang, zhao and lecun's [121]labelled data
          + internet movie database (imdb) reviews classified by sentiment
            from [122]andrew maas and his stanford colleagues (2011)

2.4 creating word vectors with id97

     * use books from [123]project gutenberg to create word vectors with
       id97
     * interactively visualise the word vectors with the [124]bokeh
       library ([125]creating_word_vectors_with_id97.ipynb)
     __________________________________________________________________

lesson three: modeling natural language data

3.1 best practices for preprocessing natural language data

     * in [126]natural_language_preprocessing_best_practices.ipynb, apply
       the following recommended best practices to clean up a corpus
       natural language data prior to modeling:
          + tokenize
          + convert all characters to lowercase
          + remove stopwords
          + remove punctuation
          + stem words
          + handle bigram (and trigram) word collocations

3.2 the area under the roc curve

     * detail the calculation and functionality of the area under the
       receiver operating characteristic curve summary metric, which is
       used throughout the remainder of the livelessons for evaluating
       model performance

3.3 dense neural network classification

     * pair vector-space embedding with the fundamentals of deep learning
       introduced in the [127]deep learning with tensorflow livelessons to
       create a dense neural network for classifying documents by their
       sentiment ([128]dense_sentiment_classifier.ipynb)

3.4 convolutional neural network classification

     * add convolutional layers to the deep learning architecture to
       improve the performance of the natural language classifying model
       ([129]convolutional_sentiment_classifier.ipynb)
     __________________________________________________________________

lesson four: recurrent neural networks

4.1 essential theory of id56s

     * provide an intuitive understanding of recurrent neural networks
       (id56s), which permit id26 through time over sequential
       data, such as natural language and financial time series data

4.2 id56s in practice

     * incorporate simple id56 layers into a model that classifies
       documents by their sentiment ([130]id56_in_keras.ipynb

4.3 essential theory of lstms and grus

     * develop familiarity with the long short-term memory (lstm) and
       gated recurrent unit (gru) varieties of id56s which provide markedly
       more productive modeling of sequential data with deep learning
       models

4.4 lstms and grus in practice

     * straightforwardly build lstm ([131]vanilla_lstm_in_keras.ipynb) and
       gru ([132]gru_in_keras.ipynb) deep learning architectures through
       the keras high-level api
     __________________________________________________________________

lesson five: advanced models

5.1 bi-directional lstms

     * bi-directional lstms are an especially potent variant of the lstm
     * high-level theory on bi-lstms before leveraging them in practice
       ([133]bidirectional_lstm.ipynb)

5.2 stacked lstms

     * bi-lstms are stacked to enable deep learning networks to model
       increasingly abstract representations of language
       ([134]stacked_bidirectional_lstm.ipynb;
       [135]ye_olde_conv_lstm_stackeroo.ipynb)

5.3 parallel network architectures

     * advanced data modeling capabilities are possible with
       non-sequential architectures, e.g., parallel convolutional layers,
       each with unique hyperparameters
       ([136]multi_convnet_architectures.ipynb)
     __________________________________________________________________
     __________________________________________________________________

[137]deep id23 and gans

lesson one: the foundations of artificial intelligence

1.1 the contemporary state of ai

     * examine what the term "artificial intelligence" means and how it
       relates to deep learning
     * define narrow, general, and super intelligence

1.2 applications of id3

     * uncover the rapidly-improving quality of generative adversarial
       networks for creating compelling novel imagery in the style of
       humans
     * involves the fun, interactive [138]pix2pix tool

1.3 applications of deep id23

     * distinguish supervised and unsupervised learning from reinforcement
       learning
     * provide an overview of the seminal contemporary deep reinforcement
       learning breakthroughs, including:
          + the deep id24 algorithm
          + alphago
          + alphago zero
          + alphazero
          + robotics advances
     * introduce the most popular deep id23
       environments:
          + [139]openai gym
          + [140]deepmind lab
          + [141]unity

1.4 running the code in these livelessons

     * review the [142]step-by-step installation of tensorflow on mac os x
       detailed in the [143]deep learning with tensorflow livelessons

1.5 review of prerequisite deep learning theory

     * summarise the key concepts introduced in the [144]deep learning
       with tensorflow livelessons, which serve as the foundation for the
       material introduced in these advanced-topics livelessons
     __________________________________________________________________

lesson two: id3 (gans)

2.1 essential gan theory

     * cover the high-level theory of what gans are and how they are able
       to generate realistic-looking images

2.2 the    quick, draw!    game dataset

     * show the [145]quick, draw! game, which we use as the source of
       hundreds of thousands of hand-drawn images from a single class for
       a gan to learn to imitate

2.3 a discriminator network

     * build the discriminator component of a gan
       ([146]generative_adversarial_network.ipynb)

2.4 a generator network

     * build the generator component of a gan
       ([147]generative_adversarial_network.ipynb continued)

2.5 training an adversarial network

     * pit the generator and discriminator networks against each other as
       adversaries ([148]generative_adversarial_network.ipynb completed)
     __________________________________________________________________

lesson three: deep id24 networks (id25s)

3.1 the cartpole game

     * introduce the [149]cartpole game, an environment provided by openai
       and used throughout the remainder these livelessons to train deep
       id23 algorithms

3.2 essential deep rl theory

     * delve into the essential theory of deep id23 in
       general

3.3 essential id25 theory

     * delve into the essential theory of deep id24 networks, a
       popular, particular type of deep id23 algorithm

3.4 defining a id25 agent

     * define a deep id24 agent from scratch
       ([150]cartpole_id25.ipynb)

3.5 interacting with an openai gym environment

     * leverage openai gym to enable our deep id24 agent to master
       the cartpole game ([151]cartpole_id25.ipynb completed)
     __________________________________________________________________

lesson four: openai lab

4.1 visualizing agent performance

     * use the [152]openai lab to visualise our deep id24 agent's
       performance in real-time

4.2 modifying agent hyperparameters

     * learn to straightforwardly optimise a deep id23
       agent's hyperparameters

4.3 automated hyperparameter experimentation and optimization

     * automate the search through hyperparameters to optimize our agent   s
       performance

4.4 fitness

     * calculate summary metrics to gauge our agent   s overall fitness
     __________________________________________________________________

lesson five: advanced deep id23 agents

5.1 policy gradients and the reinforce algorithm

     * at a high level, discover policy gradient algorithms in general and
       the classic reinforce implementation in particular

5.2 the actor-critic algorithm

     * cover how policy gradients can be combined with deep id24 to
       facilitate the actor-critic algorithms

5.3 software 2.0

     * discuss how deep learning is ushering in a new era of software
       development driven by data in place of hard-coded rules

5.4 approaching artificial general intelligence

     * return to our discussion of artificial intelligence, specifically
       addressing the limitations of modern deep learning approaches
     __________________________________________________________________
     __________________________________________________________________

     *    2019 github, inc.
     * [153]terms
     * [154]privacy
     * [155]security
     * [156]status
     * [157]help

     * [158]contact github
     * [159]pricing
     * [160]api
     * [161]training
     * [162]blog
     * [163]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [164]reload to refresh your
   session. you signed out in another tab or window. [165]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/the-deep-learners/tensorflow-livelessons/commits/master.atom
   3. https://github.com/the-deep-learners/tensorflow-livelessons#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/the-deep-learners/tensorflow-livelessons
  32. https://github.com/join
  33. https://github.com/login?return_to=/the-deep-learners/tensorflow-livelessons
  34. https://github.com/the-deep-learners/tensorflow-livelessons/watchers
  35. https://github.com/login?return_to=/the-deep-learners/tensorflow-livelessons
  36. https://github.com/the-deep-learners/tensorflow-livelessons/stargazers
  37. https://github.com/login?return_to=/the-deep-learners/tensorflow-livelessons
  38. https://github.com/the-deep-learners/tensorflow-livelessons/network/members
  39. https://github.com/the-deep-learners
  40. https://github.com/the-deep-learners/tensorflow-livelessons
  41. https://github.com/the-deep-learners/tensorflow-livelessons
  42. https://github.com/the-deep-learners/tensorflow-livelessons/issues
  43. https://github.com/the-deep-learners/tensorflow-livelessons/pulls
  44. https://github.com/the-deep-learners/tensorflow-livelessons/projects
  45. https://github.com/the-deep-learners/tensorflow-livelessons/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/the-deep-learners/tensorflow-livelessons/commits/master
  48. https://github.com/the-deep-learners/tensorflow-livelessons/branches
  49. https://github.com/the-deep-learners/tensorflow-livelessons/releases
  50. https://github.com/the-deep-learners/tensorflow-livelessons/graphs/contributors
  51. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/license
  52. https://github.com/the-deep-learners/tensorflow-livelessons/search?l=jupyter-notebook
  53. https://github.com/the-deep-learners/tensorflow-livelessons/find/master
  54. https://github.com/the-deep-learners/tensorflow-livelessons/archive/master.zip
  55. https://github.com/login?return_to=https://github.com/the-deep-learners/tensorflow-livelessons
  56. https://github.com/join?return_to=/the-deep-learners/tensorflow-livelessons
  57. https://desktop.github.com/
  58. https://desktop.github.com/
  59. https://developer.apple.com/xcode/
  60. https://visualstudio.github.com/
  61. https://github.com/jonkrohn
  62. https://github.com/the-deep-learners/tensorflow-livelessons/commits?author=jonkrohn
  63. https://github.com/the-deep-learners/tensorflow-livelessons/commit/93c0e1d102f78a0680970beee9b2ea81abc60dcd
  64. https://github.com/the-deep-learners/tensorflow-livelessons/pull/19
  65. https://github.com/the-deep-learners/tensorflow-livelessons/commit/93c0e1d102f78a0680970beee9b2ea81abc60dcd
  66. https://github.com/the-deep-learners/tensorflow-livelessons/commit/93c0e1d102f78a0680970beee9b2ea81abc60dcd
  67. https://github.com/the-deep-learners/tensorflow-livelessons/tree/93c0e1d102f78a0680970beee9b2ea81abc60dcd
  68. https://github.com/the-deep-learners/tensorflow-livelessons/tree/master/img
  69. https://github.com/the-deep-learners/tensorflow-livelessons/commit/2ca395a6356ea2d069d638074502674c2c5954d1
  70. https://github.com/the-deep-learners/tensorflow-livelessons/tree/master/installation
  71. https://github.com/the-deep-learners/tensorflow-livelessons/commit/8ffc2dc85557e0ca14189dc97414346191eb16cf
  72. https://github.com/the-deep-learners/tensorflow-livelessons/tree/master/notebooks
  73. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/.gitignore
  74. https://github.com/the-deep-learners/tensorflow-livelessons/commit/d5f652f129c99ccd3c06cfa84dd74976d75da12e
  75. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/dockerfile
  76. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/dockerfile-gpu
  77. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/license
  78. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/readme.md
  79. https://github.com/the-deep-learners/tensorflow-livelessons/commit/36467ae64ff3607a25595c7baecc2b23712b958f
  80. https://www.jonkrohn.com/
  81. https://www.safaribooksonline.com/library/view/deep-learning-with/9780134770826/
  82. https://medium.com/@jjpkrohn/filming-deep-learning-with-tensorflow-livelessons-for-oreilly-safari-50363ed4efad
  83. https://www.safaribooksonline.com/library/view/deep-learning-for/9780134851921/
  84. https://insights.untapt.com/deep-learning-for-natural-language-processing-tutorials-with-jupyter-notebooks-ad67f336ce3f
  85. https://www.safaribooksonline.com/library/view/deep-reinforcement-learning/9780135171233/
  86. https://insights.untapt.com/deep-reinforcement-learning-and-generative-adversarial-networks-tutorials-with-jupyter-notebooks-6ef4dc6957ea
  87. https://learnpythonthehardway.org/book/appendixa.html
  88. https://www.dataquest.io/path/data-analyst
  89. https://github.com/the-deep-learners/tensorflow-livelessons/tree/master/installation
  90. https://github.com/the-deep-learners/tensorflow-livelessons/tree/master/notebooks
  91. http://jupyter.org/
  92. https://www.safaribooksonline.com/library/view/deep-learning-with/9780134770826/
  93. https://github.com/the-deep-learners/tensorflow-livelessons/tree/master/installation
  94. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/installation/step_by_step_macosx_install.md
  95. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/shallow_net_in_keras.ipynb
  96. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/sigmoid_function.ipynb
  97. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/cross_id178_cost.ipynb
  98. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/softmax_demo.ipynb
  99. http://playground.tensorflow.org/
 100. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/intermediate_net_in_keras.ipynb
 101. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/deep_net_in_keras.ipynb
 102. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/lenet_in_keras.ipynb
 103. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/alexnet_in_keras.ipynb
 104. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/vggnet_in_keras.ipynb
 105. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/first_tensorflow_graphs.ipynb
 106. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/first_tensorflow_neurons.ipynb
 107. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/point_by_point_intro_to_tensorflow.ipynb
 108. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/tensor-fied_intro_to_tensorflow.ipynb
 109. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/intro_to_tensorflow_times_a_million.ipynb
 110. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/intermediate_net_in_tensorflow.ipynb
 111. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/lenet_in_tensorflow.ipynb
 112. https://www.safaribooksonline.com/library/view/deep-learning-for/9780134851921/
 113. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/installation/step_by_step_macosx_install.md
 114. https://github.com/the-deep-learners/tensorflow-livelessons/#12-running-the-code-in-these-livelessons
 115. https://www.safaribooksonline.com/library/view/deep-learning-with/9780134770826/
 116. https://nlp.stanford.edu/projects/glove/
 117. https://code.google.com/archive/p/id97/
 118. http://nlp.stanford.edu/projects/glove/
 119. https://www.jonkrohn.com/resources/
 120. https://arxiv.org/pdf/1509.01626.pdf
 121. http://xzh.me/
 122. http://ai.stanford.edu/~amaas/papers/wvsent_acl2011.pdf
 123. https://www.gutenberg.org/
 124. https://bokeh.pydata.org/en/latest/
 125. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/creating_word_vectors_with_id97.ipynb
 126. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/natural_language_preprocessing_best_practices.ipynb
 127. https://www.safaribooksonline.com/library/view/deep-learning-with/9780134770826/
 128. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/dense_sentiment_classifier.ipynb
 129. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/convolutional_sentiment_classifier.ipynb
 130. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/id56_in_keras.ipynb
 131. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/vanilla_lstm_in_keras.ipynb
 132. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/gru_in_keras.ipynb
 133. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/bidirectional_lstm.ipynb
 134. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/stacked_bidirectional_lstm.ipynb
 135. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/ye_olde_conv_lstm_stackeroo.ipynb
 136. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/multi_convnet_architectures.ipynb
 137. https://www.safaribooksonline.com/library/view/deep-reinforcement-learning/9780135171233/
 138. https://affinelayer.com/pixsrv/
 139. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/github.com/openai/gym
 140. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/github.com/deepmind/lab
 141. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/github.com/unity-technologies/ml-agents
 142. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/installation/step_by_step_macosx_install.md
 143. https://github.com/the-deep-learners/tensorflow-livelessons/#12-running-the-code-in-these-livelessons
 144. https://www.safaribooksonline.com/library/view/deep-learning-with/9780134770826/
 145. https://quickdraw.withgoogle.com/
 146. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/generative_adversarial_network.ipynb
 147. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/generative_adversarial_network.ipynb
 148. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/generative_adversarial_network.ipynb
 149. https://github.com/openai/gym/wiki/cartpole-v0
 150. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/cartpole_id25.ipynb
 151. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/notebooks/cartpole_id25.ipynb
 152. https://github.com/kengz/openai_lab
 153. https://github.com/site/terms
 154. https://github.com/site/privacy
 155. https://github.com/security
 156. https://githubstatus.com/
 157. https://help.github.com/
 158. https://github.com/contact
 159. https://github.com/pricing
 160. https://developer.github.com/
 161. https://training.github.com/
 162. https://github.blog/
 163. https://github.com/about
 164. https://github.com/the-deep-learners/tensorflow-livelessons
 165. https://github.com/the-deep-learners/tensorflow-livelessons

   hidden links:
 167. https://github.com/
 168. https://github.com/the-deep-learners/tensorflow-livelessons
 169. https://github.com/the-deep-learners/tensorflow-livelessons
 170. https://github.com/the-deep-learners/tensorflow-livelessons
 171. https://help.github.com/articles/which-remote-url-should-i-use
 172. https://github.com/the-deep-learners/tensorflow-livelessons#tensorflow-livelessons
 173. https://github.com/the-deep-learners/tensorflow-livelessons#prerequisites
 174. https://github.com/the-deep-learners/tensorflow-livelessons#command-line
 175. https://github.com/the-deep-learners/tensorflow-livelessons#python-for-data-analysis
 176. https://github.com/the-deep-learners/tensorflow-livelessons#installation
 177. https://github.com/the-deep-learners/tensorflow-livelessons#notebooks
 178. https://github.com/the-deep-learners/tensorflow-livelessons#deep-learning-with-tensorflow-livelessons
 179. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-one-introduction-to-deep-learning
 180. https://github.com/the-deep-learners/tensorflow-livelessons#11-neural-networks-and-deep-learning
 181. https://github.com/the-deep-learners/tensorflow-livelessons#12-running-the-code-in-these-livelessons
 182. https://github.com/the-deep-learners/tensorflow-livelessons#13-an-introductory-artificial-neural-network
 183. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-two-how-deep-learning-works
 184. https://github.com/the-deep-learners/tensorflow-livelessons#21-the-families-of-deep-neural-nets-and-their-applications
 185. https://github.com/the-deep-learners/tensorflow-livelessons#22-essential-theory-i---neural-units
 186. https://github.com/the-deep-learners/tensorflow-livelessons#23-essential-theory-ii----cost-functions-gradient-descent-and-id26
 187. https://github.com/the-deep-learners/tensorflow-livelessons#24-tensorflow-playground----visualizing-a-deep-net-in-action
 188. https://github.com/the-deep-learners/tensorflow-livelessons#25-data-sets-for-deep-learning
 189. https://github.com/the-deep-learners/tensorflow-livelessons#26-applying-deep-net-theory-to-code-i
 190. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-three-convolutional-networks
 191. https://github.com/the-deep-learners/tensorflow-livelessons#31-essential-theory-iii----mini-batches-unstable-gradients-and-avoiding-overfitting
 192. https://github.com/the-deep-learners/tensorflow-livelessons#32-applying-deep-net-theory-to-code-ii
 193. https://github.com/the-deep-learners/tensorflow-livelessons#33-introduction-to-convolutional-neural-networks-for-visual-recognition
 194. https://github.com/the-deep-learners/tensorflow-livelessons#34-classic-convnet-architectures---lenet-5
 195. https://github.com/the-deep-learners/tensorflow-livelessons#35-classic-convnet-architectures---alexnet-and-vggnet
 196. https://github.com/the-deep-learners/tensorflow-livelessons#36-tensorboard-and-the-interpretation-of-model-outputs
 197. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-four-introduction-to-tensorflow
 198. https://github.com/the-deep-learners/tensorflow-livelessons#41-comparison-of-the-leading-deep-learning-libraries
 199. https://github.com/the-deep-learners/tensorflow-livelessons#42-introduction-to-tensorflow
 200. https://github.com/the-deep-learners/tensorflow-livelessons#43-fitting-models-in-tensorflow
 201. https://github.com/the-deep-learners/tensorflow-livelessons#44-dense-nets-in-tensorflow
 202. https://github.com/the-deep-learners/tensorflow-livelessons#45-deep-convolutional-nets-in-tensorflow
 203. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-five-improving-deep-networks
 204. https://github.com/the-deep-learners/tensorflow-livelessons#51-improving-performance-and-tuning-hyperparameters
 205. https://github.com/the-deep-learners/tensorflow-livelessons#52-how-to-built-your-own-deep-learning-project
 206. https://github.com/the-deep-learners/tensorflow-livelessons#53-resources-for-self-study
 207. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/img/book.jpg
 208. https://github.com/the-deep-learners/tensorflow-livelessons#deep-learning-for-natural-language-processing
 209. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-one-the-power-and-elegance-of-deep-learning-for-nlp
 210. https://github.com/the-deep-learners/tensorflow-livelessons#11-introduction-to-deep-learning-for-natural-language-processing
 211. https://github.com/the-deep-learners/tensorflow-livelessons#12-computational-representations-of-natural-language-elements
 212. https://github.com/the-deep-learners/tensorflow-livelessons#13-nlp-applications
 213. https://github.com/the-deep-learners/tensorflow-livelessons#14-installation-including-gpu-considerations
 214. https://github.com/the-deep-learners/tensorflow-livelessons#15-review-of-prerequisite-deep-learning-theory
 215. https://github.com/the-deep-learners/tensorflow-livelessons#16-a-sneak-peak
 216. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-two-word-vectors
 217. https://github.com/the-deep-learners/tensorflow-livelessons#21-vector-space-embedding
 218. https://github.com/the-deep-learners/tensorflow-livelessons#22-id97
 219. https://github.com/the-deep-learners/tensorflow-livelessons#23-data-sets-for-nlp
 220. https://github.com/the-deep-learners/tensorflow-livelessons#24-creating-word-vectors-with-id97
 221. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-three-modeling-natural-language-data
 222. https://github.com/the-deep-learners/tensorflow-livelessons#31-best-practices-for-preprocessing-natural-language-data
 223. https://github.com/the-deep-learners/tensorflow-livelessons#32-the-area-under-the-roc-curve
 224. https://github.com/the-deep-learners/tensorflow-livelessons#33-dense-neural-network-classification
 225. https://github.com/the-deep-learners/tensorflow-livelessons#34-convolutional-neural-network-classification
 226. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-four-recurrent-neural-networks
 227. https://github.com/the-deep-learners/tensorflow-livelessons#41-essential-theory-of-id56s
 228. https://github.com/the-deep-learners/tensorflow-livelessons#42-id56s-in-practice
 229. https://github.com/the-deep-learners/tensorflow-livelessons#43-essential-theory-of-lstms-and-grus
 230. https://github.com/the-deep-learners/tensorflow-livelessons#44-lstms-and-grus-in-practice
 231. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-five-advanced-models
 232. https://github.com/the-deep-learners/tensorflow-livelessons#51-bi-directional-lstms
 233. https://github.com/the-deep-learners/tensorflow-livelessons#52-stacked-lstms
 234. https://github.com/the-deep-learners/tensorflow-livelessons#53-parallel-network-architectures
 235. https://github.com/the-deep-learners/tensorflow-livelessons/blob/master/img/paint.jpg
 236. https://github.com/the-deep-learners/tensorflow-livelessons#deep-reinforcement-learning-and-gans
 237. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-one-the-foundations-of-artificial-intelligence
 238. https://github.com/the-deep-learners/tensorflow-livelessons#11-the-contemporary-state-of-ai
 239. https://github.com/the-deep-learners/tensorflow-livelessons#12-applications-of-generative-adversarial-networks
 240. https://github.com/the-deep-learners/tensorflow-livelessons#13-applications-of-deep-reinforcement-learning
 241. https://github.com/the-deep-learners/tensorflow-livelessons#14-running-the-code-in-these-livelessons
 242. https://github.com/the-deep-learners/tensorflow-livelessons#15-review-of-prerequisite-deep-learning-theory-1
 243. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-two-generative-adversarial-networks-gans
 244. https://github.com/the-deep-learners/tensorflow-livelessons#21-essential-gan-theory
 245. https://github.com/the-deep-learners/tensorflow-livelessons#22-the-quick-draw-game-dataset
 246. https://github.com/the-deep-learners/tensorflow-livelessons#23-a-discriminator-network
 247. https://github.com/the-deep-learners/tensorflow-livelessons#24-a-generator-network
 248. https://github.com/the-deep-learners/tensorflow-livelessons#25-training-an-adversarial-network
 249. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-three-deep-id24-networks-id25s
 250. https://github.com/the-deep-learners/tensorflow-livelessons#31-the-cartpole-game
 251. https://github.com/the-deep-learners/tensorflow-livelessons#32-essential-deep-rl-theory
 252. https://github.com/the-deep-learners/tensorflow-livelessons#33-essential-id25-theory
 253. https://github.com/the-deep-learners/tensorflow-livelessons#34-defining-a-id25-agent
 254. https://github.com/the-deep-learners/tensorflow-livelessons#35-interacting-with-an-openai-gym-environment
 255. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-four-openai-lab
 256. https://github.com/the-deep-learners/tensorflow-livelessons#41-visualizing-agent-performance
 257. https://github.com/the-deep-learners/tensorflow-livelessons#42-modifying-agent-hyperparameters
 258. https://github.com/the-deep-learners/tensorflow-livelessons#43-automated-hyperparameter-experimentation-and-optimization
 259. https://github.com/the-deep-learners/tensorflow-livelessons#44-fitness
 260. https://github.com/the-deep-learners/tensorflow-livelessons#lesson-five-advanced-deep-reinforcement-learning-agents
 261. https://github.com/the-deep-learners/tensorflow-livelessons#51-policy-gradients-and-the-reinforce-algorithm
 262. https://github.com/the-deep-learners/tensorflow-livelessons#52-the-actor-critic-algorithm
 263. https://github.com/the-deep-learners/tensorflow-livelessons#53-software-20
 264. https://github.com/the-deep-learners/tensorflow-livelessons#54-approaching-artificial-general-intelligence
 265. https://github.com/
