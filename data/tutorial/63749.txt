   #[1]github [2]recent commits to nnabla:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]183
     * [35]star [36]2,159
     * [37]fork [38]244

[39]sony/[40]nnabla

   [41]code [42]issues 15 [43]pull requests 13 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   neural network libraries [47]https://nnabla.org/
     * [48]1,226 commits
     * [49]43 branches
     * [50]29 releases
     * [51]fetching contributors
     * [52]apache-2.0

    1. [53]python 52.9%
    2. [54]c++ 41.4%
    3. [55]jupyter notebook 3.9%
    4. [56]cmake 0.7%
    5. [57]makefile 0.6%
    6. [58]batchfile 0.4%
    7. other 0.1%

   (button) python c++ jupyter notebook cmake makefile batchfile other
   branch: master (button) new pull request
   [59]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/s
   [60]download zip

downloading...

   want to be notified of new releases in sony/nnabla?
   [61]sign in [62]sign up

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [65]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [66]download the github extension for visual studio
   and try again.

   (button) go back
   [67]@te-stephentiedemann
   [68]te-stephentiedemann [69]merge pull request [70]#393 [71]from
   sony/feature/20190308-expose-pointer (button)    
expose data pointer to python layer (for specific use cases like using dali).

   latest commit [72]f36919f apr 5, 2019
   [73]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [74]build-tools [75]fix functions.yaml error feb 25, 2019
   [76]doc [77]update version number for release v1.0.15 apr 4, 2019
   [78]docker
   [79]examples [80]added examples/cpp/mnist_collection feb 20, 2019
   [81]include [82]merge pull request [83]#393 [84]from
   sony/feature/20190308-expose-pointer apr 5, 2019
   [85]mnist_nnp
   [86]python
   [87]src
   [88]third_party
   [89]tutorial
   [90].gitattributes [91]big change around build system. may 21, 2018
   [92].gitignore
   [93]changelog.md [94]oss first commit jun 26, 2017
   [95]cmakelists.txt
   [96]contributing.md
   [97]gnumakefile [98]big change around build system. may 21, 2018
   [99]license
   [100]notice
   [101]readme.md [102]add link to nnabla-c-runtime in readme.md oct 4,
   2018
   [103]version.txt

readme.md

neural network libraries

   neural network libraries is a deep learning framework that is intended
   to be used for research, development and production. we aim to have it
   running everywhere: desktop pcs, hpc clusters, embedded devices and
   production servers.
     * [104]neural network libraries - cuda extension: an extension
       library of neural network libraries that allows users to speed-up
       the computation on cuda-capable gpus.
     * [105]neural network libraries - examples: working examples of
       neural network libraries from basic to state-of-the-art.
     * [106]neural network libraries - c runtime: runtime library for
       id136 neural network created by neural network libraries.
     * [107]neural network console: a windows gui app for neural network
       development.

installation

   installing neural network libraries is easy:
pip install nnabla

   this installs the cpu version of neural network libraries.
   gpu-acceleration can be added by installing the cuda extension with pip
   install nnabla-ext-cuda.

   for more details, see the [108]installation section of the
   documentation.

building from source

   see [109]build manuals.

running on docker

   for details on running on docker, see the [110]installation section of
   the documentation.

features

easy, flexible and expressive

   the python api built on the neural network libraries c++11 core gives
   you flexibility and productivity. for example, a two layer neural
   network with classification loss can be defined in the following 5
   lines of codes (hyper parameters are enclosed by <>).
import nnabla as nn
import nnabla.functions as f
import nnabla.parametric_functions as pf

x = nn.variable(<input_shape>)
t = nn.variable(<target_shape>)
h = f.tanh(pf.affine(x, <hidden_size>, name='affine1'))
y = pf.affine(h, <target_size>, name='affine2')
loss = f.mean(f.softmax_cross_id178(y, t))

   training can be done by:
import nnabla.solvers as s

# create a solver (parameter updater)
solver = s.adam(<solver_params>)
solver.set_parameters(nn.get_parameters())

# training iteration
for n in range(<num_training_iterations>):
    # setting data from any data source
    x.d = <set data>
    t.d = <set label>
    # initialize gradients
    solver.zero_grad()
    # forward and backward execution
    loss.forward()
    loss.backward()
    # update parameters by computed gradients
    solver.update()

   the dynamic computation graph enables flexible runtime network
   construction. neural network libraries can use both paradigms of static
   and dynamic graphs, both using the same api.
x.d = <set data>
t.d = <set label>
drop_depth = np.random.rand(<num_stochastic_layers>) < <layer_drop_ratio>
with nn.auto_forward():
    h = f.relu(pf.convolution(x, <hidden_size>, (3, 3), pad=(1, 1), name='conv0'
))
    for i in range(<num_stochastic_layers>):
        if drop_depth[i]:
            continue  # stochastically drop a layer
        h2 = f.relu(pf.convolution(x, <hidden_size>, (3, 3), pad=(1, 1),
                                   name='conv%d' % (i + 1)))
        h = f.add2(h, h2)
    y = pf.affine(h, <target_size>, name='classification')
    loss = f.mean(f.softmax_cross_id178(y, t))
# backward computation (can also be done in dynamically executed graph)
loss.backward()

command line utility

   neural network libraries provides a command line utility nnabla_cli for
   easier use of nnl.

   nnabla_cli provides following functionality.
     * training, evaluation or id136 with nnp file.
     * dataset and parameter manipulation.
     * file format converter
          + from onnx to nnp and nnp to onnx.
          + from onnx or nnp to nnb or c source code.

   for more details see [111]documentation

portable and multi-platform

     * python api can be used on linux and windows
     * most of the library code is written in c++11, deployable to
       embedded devices

extensible

     * easy to add new modules like neural network operators and
       optimizers
     * the library allows developers to add specialized implementations
       (e.g., for fpga, ...). for example, we provide cuda backend as an
       extension, which gives speed-up by gpu accelerated computation.

efficient

     * high speed on a single cuda gpu
     * memory optimization engine
     * multiple gpu support

documentation

   [112]https://nnabla.readthedocs.org

getting started

     * a number of jupyter notebook tutorials can be found in the
       [113]tutorial folder. we recommend starting from by_examples.ipynb
       for a first working example in neural network libraries and
       python_api.ipynb for an introduction into the neural network
       libraries api.
     * we also provide some more sophisticated examples at
       [114]nnabla-examples repository.
     * c++ api examples are available in [115]examples/cpp.

contribution guide

   the technology is rapidly progressing, and researchers and developers
   often want to add their custom features to a deep learning framework.
   nnabla is really nice in this point. the architecture of neural network
   libraries is clean and quite simple. also, you can add new features
   very easy by the help of our code template generating system. see the
   following link for details.
     * [116]contribution guide

     *    2019 github, inc.
     * [117]terms
     * [118]privacy
     * [119]security
     * [120]status
     * [121]help

     * [122]contact github
     * [123]pricing
     * [124]api
     * [125]training
     * [126]blog
     * [127]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [128]reload to refresh your
   session. you signed out in another tab or window. [129]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/sony/nnabla/commits/master.atom
   3. https://github.com/sony/nnabla#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/sony/nnabla
  32. https://github.com/join
  33. https://github.com/login?return_to=/sony/nnabla
  34. https://github.com/sony/nnabla/watchers
  35. https://github.com/login?return_to=/sony/nnabla
  36. https://github.com/sony/nnabla/stargazers
  37. https://github.com/login?return_to=/sony/nnabla
  38. https://github.com/sony/nnabla/network/members
  39. https://github.com/sony
  40. https://github.com/sony/nnabla
  41. https://github.com/sony/nnabla
  42. https://github.com/sony/nnabla/issues
  43. https://github.com/sony/nnabla/pulls
  44. https://github.com/sony/nnabla/projects
  45. https://github.com/sony/nnabla/pulse
  46. https://github.com/join?source=prompt-code
  47. https://nnabla.org/
  48. https://github.com/sony/nnabla/commits/master
  49. https://github.com/sony/nnabla/branches
  50. https://github.com/sony/nnabla/releases
  51. https://github.com/sony/nnabla/graphs/contributors
  52. https://github.com/sony/nnabla/blob/master/license
  53. https://github.com/sony/nnabla/search?l=python
  54. https://github.com/sony/nnabla/search?l=c++
  55. https://github.com/sony/nnabla/search?l=jupyter-notebook
  56. https://github.com/sony/nnabla/search?l=cmake
  57. https://github.com/sony/nnabla/search?l=makefile
  58. https://github.com/sony/nnabla/search?l=batchfile
  59. https://github.com/sony/nnabla/find/master
  60. https://github.com/sony/nnabla/archive/master.zip
  61. https://github.com/login?return_to=https://github.com/sony/nnabla
  62. https://github.com/join?return_to=/sony/nnabla
  63. https://desktop.github.com/
  64. https://desktop.github.com/
  65. https://developer.apple.com/xcode/
  66. https://visualstudio.github.com/
  67. https://github.com/te-stephentiedemann
  68. https://github.com/sony/nnabla/commits?author=te-stephentiedemann
  69. https://github.com/sony/nnabla/commit/f36919f8056cdac0831d1802bc8cdf20d8412ede
  70. https://github.com/sony/nnabla/pull/393
  71. https://github.com/sony/nnabla/commit/f36919f8056cdac0831d1802bc8cdf20d8412ede
  72. https://github.com/sony/nnabla/commit/f36919f8056cdac0831d1802bc8cdf20d8412ede
  73. https://github.com/sony/nnabla/tree/f36919f8056cdac0831d1802bc8cdf20d8412ede
  74. https://github.com/sony/nnabla/tree/master/build-tools
  75. https://github.com/sony/nnabla/commit/4f9240b981575bb90a645a5836033155b564e10c
  76. https://github.com/sony/nnabla/tree/master/doc
  77. https://github.com/sony/nnabla/commit/6214f0ae85a764bd13363b12e3563e304e709af4
  78. https://github.com/sony/nnabla/tree/master/docker
  79. https://github.com/sony/nnabla/tree/master/examples
  80. https://github.com/sony/nnabla/commit/d74284b90ff059ff7eb79beb177fa8f4c5ae6461
  81. https://github.com/sony/nnabla/tree/master/include
  82. https://github.com/sony/nnabla/commit/f36919f8056cdac0831d1802bc8cdf20d8412ede
  83. https://github.com/sony/nnabla/pull/393
  84. https://github.com/sony/nnabla/commit/f36919f8056cdac0831d1802bc8cdf20d8412ede
  85. https://github.com/sony/nnabla/tree/master/mnist_nnp
  86. https://github.com/sony/nnabla/tree/master/python
  87. https://github.com/sony/nnabla/tree/master/src
  88. https://github.com/sony/nnabla/tree/master/third_party
  89. https://github.com/sony/nnabla/tree/master/tutorial
  90. https://github.com/sony/nnabla/blob/master/.gitattributes
  91. https://github.com/sony/nnabla/commit/b61e2e8f5d3423f19a986194dc5d617d78b4451b
  92. https://github.com/sony/nnabla/blob/master/.gitignore
  93. https://github.com/sony/nnabla/blob/master/changelog.md
  94. https://github.com/sony/nnabla/commit/4fb5defc38f6cbe4c772d7ac4170450235786a07
  95. https://github.com/sony/nnabla/blob/master/cmakelists.txt
  96. https://github.com/sony/nnabla/blob/master/contributing.md
  97. https://github.com/sony/nnabla/blob/master/gnumakefile
  98. https://github.com/sony/nnabla/commit/b61e2e8f5d3423f19a986194dc5d617d78b4451b
  99. https://github.com/sony/nnabla/blob/master/license
 100. https://github.com/sony/nnabla/blob/master/notice
 101. https://github.com/sony/nnabla/blob/master/readme.md
 102. https://github.com/sony/nnabla/commit/ecb7a02cfbba8504eedc4802b5c55f3391102bf5
 103. https://github.com/sony/nnabla/blob/master/version.txt
 104. https://github.com/sony/nnabla-ext-cuda
 105. https://github.com/sony/nnabla-examples
 106. https://github.com/sony/nnabla-c-runtime
 107. https://dl.sony.com/
 108. http://nnabla.readthedocs.io/en/latest/python/installation.html
 109. https://github.com/sony/nnabla/blob/master/doc/build/readme.md
 110. http://nnabla.readthedocs.io/en/latest/python/installation.html
 111. https://github.com/sony/nnabla/blob/master/doc/python/command_line_interface.rst
 112. https://nnabla.readthedocs.org/
 113. https://github.com/sony/nnabla/tree/master/tutorial
 114. https://github.com/sony/nnabla-examples
 115. https://github.com/sony/nnabla/tree/master/examples/cpp
 116. https://github.com/sony/nnabla/blob/master/contributing.md
 117. https://github.com/site/terms
 118. https://github.com/site/privacy
 119. https://github.com/security
 120. https://githubstatus.com/
 121. https://help.github.com/
 122. https://github.com/contact
 123. https://github.com/pricing
 124. https://developer.github.com/
 125. https://training.github.com/
 126. https://github.blog/
 127. https://github.com/about
 128. https://github.com/sony/nnabla
 129. https://github.com/sony/nnabla

   hidden links:
 131. https://github.com/
 132. https://github.com/sony/nnabla
 133. https://github.com/sony/nnabla
 134. https://github.com/sony/nnabla
 135. https://help.github.com/articles/which-remote-url-should-i-use
 136. https://github.com/sony/nnabla#neural-network-libraries
 137. https://github.com/sony/nnabla#installation
 138. https://github.com/sony/nnabla#building-from-source
 139. https://github.com/sony/nnabla#running-on-docker
 140. https://github.com/sony/nnabla#features
 141. https://github.com/sony/nnabla#easy-flexible-and-expressive
 142. https://github.com/sony/nnabla#command-line-utility
 143. https://github.com/sony/nnabla#portable-and-multi-platform
 144. https://github.com/sony/nnabla#extensible
 145. https://github.com/sony/nnabla#efficient
 146. https://github.com/sony/nnabla#documentation
 147. https://github.com/sony/nnabla#getting-started
 148. https://github.com/sony/nnabla#contribution-guide
 149. https://github.com/
