   #[1]rss: 40 latest updates [2]rss: 40 newest packages [3]pypi

   [4]skip to main content (button) switch to mobile version

   warning: some features may not work without javascript. please try
   enabling it if you encounter problems.

   [5]pypi
   search pypi ____________________ (button) search

   [6]help [7]donate [8]log in [9]register

   search pypi ____________________ (button) search

pyid8 0.1.0

   pip install pyid8==0.1.0 (button) copy pip instructions
   [10]newer version available (0.1.3)

   last released: jan 25, 2014

   a python wrapper for the id8 summarization evaluation package.

navigation

   [11]project description [12]release history [13]download files

project links

   [14]homepage

statistics

   github statistics: stars: forks: open issues/prs:

   view statistics for this project via [15]libraries.io, or by using
   [16]google bigquery

meta

   license: mit license (license.txt)

   author: [17]benjamin heinzerling, anders johannsen

maintainers

   [18]avatar for noutenki from gravatar.com [19]noutenki

classifiers

   intended audience
          [20]science/research

   license
          [21]osi approved :: mit license

   operating system
          [22]os independent

   programming language
          [23]python
          [24]python :: 2.7
          [25]python :: 3
          [26]python :: 3.0
          [27]python :: 3.1
          [28]python :: 3.2
          [29]python :: 3.3

   topic
          [30]text processing :: linguistic

   [31]project description [32]project details [33]release history
   [34]download files

project description

pyid8

   pyid8 is a python wrapper for the id8 summarization evaluation
   package. getting id8 to work can require quite a bit of time. pyid8
   is designed to make getting id8 scores easier by automatically
   converting your summaries into a format id8 understands, and
   automatically generating the id8 configuration file.

usage examples

i have summaries in plain text format and want to get the id8 scores

   you can evaluate your plain text summaries like this:
from pyid8 import id8155

r = id8155()
r.system_dir = 'path/to/system_summaries'
r.model_dir = 'path/to/model_summaries'
r.system_filename_pattern = 'some_name.(\d+).txt'
r.model_filename_pattern = 'some_name.[a-z].#id#.txt'

output = r.convert_and_evaluate()
print(output)
output_dict = r.output_to_dict(output)

   in order to evaluate summaries, id8 needs to know where your
   summaries and the gold standard summaries are, and how to match them.
   in id8 parlance, your summaries are    system    summaries and the gold
   standard summaries are    model    summaries. the summaries should be in
   separate folders, whose paths are set with the system_dir and model_dir
   variables. all summaries should contain one sentence per line.

   to automatically match a system summary with the corresponding model
   summaries, pyid8 uses id157. for example, let   s assume
   your system summaries are named with a combination of a fixed name and
   a variable numeric id like this:
   some_name.001.txt
   some_name.002.txt
   some_name.003.txt
      

   and the model summaries like this, with uppercase letters identifying
   multiple model summaries for a given document:
   some_name.a.001.txt
   some_name.b.001.txt
   some_name.c.001.txt
   some_name.a.002.txt
   some_name.b.002.txt
      

   the group in the system_filename_pattern tells pyid8 which part of
   the filename is the id     in this case (\d+). you have to use round
   brackets to indicate a group, or else pyid8 won   t be able to tell
   apart the id from the rest of the filename. pyid8 then uses that id
   to find all matching model summaries. the special placeholder #id#
   tells pyid8 where it should expect the id in the
   model_filename_pattern. the [a-z] part matches multiple model summaries
   for that id.

   with the configuration done, invoking convert_and_evaluate() gets you
   the id8 scores as a string. if you want to further process the
   scores, you can parse the output into a dict with
   output_to_dict(output).

i only want to preprocess my summaries and then run id8 on my own

   to convert plain text summaries into a format id8 understands, do:
from pyid8 import id8155

id8155.convert_summaries_to_id8_format(system_input_dir, system_output_dir)
id8155.convert_summaries_to_id8_format(model_input_dir, model_output_dir)

   this will convert all summaries in system_input_dir and
   model_input_dir, and save them to their respective output directories.

   to generate the configuration file that id8 uses to match system and
   model summaries, do:
from pyid8 import id8155

id8155.write_config_static(
    system_dir, system_filename_pattern,
    model_dir, model_filename_pattern,
    config_file_path)

   the first four arguments are explained above. config_file_path
   specifies where to save the configuration file.

using pyid8 from the command line

   if you prefer the command line to python and the pyid8 module, you
   can use the following scripts, which are automatically installed and
   should be runnable from anywhere on your system:
     * pyid8_evaluate_plain_text_files.py gets you id8 scores for your
       plain text summaries. example:

pyid8_evaluate_plain_text_files.py -s systems_plain/ -sfp "some_name.(\d+).txt
" -m models_plain/ -mfp some_name.[a-z].#id#.txt

     * pyid8_evaluate_id8_format_files.py gets you id8 scores for
       summaries already converted to id8 format. example usage for the
       sample-test/sl2003 data that comes with id8:

pyid8_evaluate_id8_format_files.py -s systems -sfp "sl.p.10.r.11.sl062003-(\
d+).html" -m models -mfp sl.p.10.r.[a-z].sl062003-#id#.html

   note that the system filename pattern is enclosed in quotation marks
   because it contains special characters.
     * pyid8_convert_plain_text_to_id8_format.py converts plain text
       files into a format id8 understands. if your plain text files do
       not contain one sentence per line, this script can also split
       sentences, provided you have nltk and its punkt sentence splitter
       installed. example:

pyid8_convert_plain_text_to_id8_format.py -i models_plain/ -o models_id8

     * pyid8_write_config_file.py creates a configuration file you can
       use to run id8 on your own. example:

pyid8_write_config_file.py -s systems -sfp "sl.p.10.r.11.sl062003-(\d+).html"
-m models -mfp sl.p.10.r.[a-z].sl062003-#id#.html -c sl2003_config.xml

   running any of these with the -h option will display a usage message
   explaining the various command line options.

installation

   instructions on installing id8 can be found [35]here.

   depending on your system, you might have to run the following commands
   as root.

   to install pyid8, run:
pip install pyid8

   assuming a working id8-1.5.5. installation, tell pyid8 the id8
   path with this command:
pyid8_set_id8_path.py /absolute/path/to/id8-1.5.5/directory

   to test if everything is installed correctly, run:
python -m pyid8.test

   if everything works, you should see something like:
ran 10 tests in 3.753s

ok

   if you want to uninstall pyid8:
pip uninstall pyid8

project details

project links

   [36]homepage

statistics

   github statistics: stars: forks: open issues/prs:

   view statistics for this project via [37]libraries.io, or by using
   [38]google bigquery

meta

   license: mit license (license.txt)

   author: [39]benjamin heinzerling, anders johannsen

maintainers

   [40]avatar for noutenki from gravatar.com [41]noutenki

classifiers

   intended audience
          [42]science/research

   license
          [43]osi approved :: mit license

   operating system
          [44]os independent

   programming language
          [45]python
          [46]python :: 2.7
          [47]python :: 3
          [48]python :: 3.0
          [49]python :: 3.1
          [50]python :: 3.2
          [51]python :: 3.3

   topic
          [52]text processing :: linguistic

release history [53]release notifications

   history node
   [54]

   0.1.3

   oct 8, 2016
   history node
   [55]

   0.1.2

   feb 8, 2014
   history node
   [56]

   0.1.1

   feb 1, 2014
   this version
   history node
   [57]

   0.1.0

   jan 25, 2014

download files

   download the file for your platform. if you're not sure which to
   choose, learn more about [58]installing packages.
   filename, size & hash [59]sha256 hash help file type python version
   upload date
   [60]pyid8-0.1.0.tar.gz (55.3 kb) copy sha256 hash sha256 source none
   jan 25, 2014

   logo

     * help
     * [61]installing packages
     * [62]uploading packages
     * [63]user guide
     * [64]faqs

     * about pypi
     * [65]pypi on twitter
     * [66]infrastructure dashboard
     * [67]package index name retention
     * [68]our sponsors

     * contributing to pypi
     * [69]bugs and feedback
     * [70]contribute on github
     * [71]development credits

     * using pypi
     * [72]code of conduct
     * [73]report security issue
     * [74]privacy policy
     * [75]terms of use
     __________________________________________________________________

   status: [76]all systems operational

   developed and maintained by the python community, for the python
   community.
   [77]donate today!

      2019 [78]python software foundation

   (button) desktop version

   supported by
   [79]elastic elastic search [80]pingdom pingdom monitoring [81]google
   google bigquery [82]sentry sentry error logging [83]aws aws cloud
   computing [84]datadog datadog monitoring [85]fastly fastly cdn
   [86]signalfx signalfx supporter [87]digicert digicert ev certificate
   [88]statuspage statuspage status page

references

   1. https://pypi.org/rss/updates.xml
   2. https://pypi.org/rss/packages.xml
   3. https://pypi.org/opensearch.xml
   4. https://pypi.org/project/pyid8/0.1.0/#content
   5. https://pypi.org/
   6. https://pypi.org/help/
   7. https://donate.pypi.org/
   8. https://pypi.org/account/login/
   9. https://pypi.org/account/register/
  10. https://pypi.org/project/pyid8/
  11. https://pypi.org/project/pyid8/0.1.0/#description
  12. https://pypi.org/project/pyid8/0.1.0/#history
  13. https://pypi.org/project/pyid8/0.1.0/#files
  14. https://github.com/noutenki/pyid8
  15. https://libraries.io/pypi/pyid8
  16. https://packaging.python.org/guides/analyzing-pypi-package-downloads/
  17. mailto:benjamin.heinzerling@h-its.org
  18. https://pypi.org/user/noutenki/
  19. https://pypi.org/user/noutenki/
  20. https://pypi.org/search/?c=intended+audience+::+science/research
  21. https://pypi.org/search/?c=license+::+osi+approved+::+mit+license
  22. https://pypi.org/search/?c=operating+system+::+os+independent
  23. https://pypi.org/search/?c=programming+language+::+python
  24. https://pypi.org/search/?c=programming+language+::+python+::+2.7
  25. https://pypi.org/search/?c=programming+language+::+python+::+3
  26. https://pypi.org/search/?c=programming+language+::+python+::+3.0
  27. https://pypi.org/search/?c=programming+language+::+python+::+3.1
  28. https://pypi.org/search/?c=programming+language+::+python+::+3.2
  29. https://pypi.org/search/?c=programming+language+::+python+::+3.3
  30. https://pypi.org/search/?c=topic+::+text+processing+::+linguistic
  31. https://pypi.org/project/pyid8/0.1.0/#description
  32. https://pypi.org/project/pyid8/0.1.0/#data
  33. https://pypi.org/project/pyid8/0.1.0/#history
  34. https://pypi.org/project/pyid8/0.1.0/#files
  35. http://jpbalb.in/post/42675198985/figuring-out-id8
  36. https://github.com/noutenki/pyid8
  37. https://libraries.io/pypi/pyid8
  38. https://packaging.python.org/guides/analyzing-pypi-package-downloads/
  39. mailto:benjamin.heinzerling@h-its.org
  40. https://pypi.org/user/noutenki/
  41. https://pypi.org/user/noutenki/
  42. https://pypi.org/search/?c=intended+audience+::+science/research
  43. https://pypi.org/search/?c=license+::+osi+approved+::+mit+license
  44. https://pypi.org/search/?c=operating+system+::+os+independent
  45. https://pypi.org/search/?c=programming+language+::+python
  46. https://pypi.org/search/?c=programming+language+::+python+::+2.7
  47. https://pypi.org/search/?c=programming+language+::+python+::+3
  48. https://pypi.org/search/?c=programming+language+::+python+::+3.0
  49. https://pypi.org/search/?c=programming+language+::+python+::+3.1
  50. https://pypi.org/search/?c=programming+language+::+python+::+3.2
  51. https://pypi.org/search/?c=programming+language+::+python+::+3.3
  52. https://pypi.org/search/?c=topic+::+text+processing+::+linguistic
  53. https://pypi.org/help/#project-release-notifications
  54. https://pypi.org/project/pyid8/0.1.3/
  55. https://pypi.org/project/pyid8/0.1.2/
  56. https://pypi.org/project/pyid8/0.1.1/
  57. https://pypi.org/project/pyid8/0.1.0/
  58. https://packaging.python.org/installing/
  59. https://pip.pypa.io/en/stable/reference/pip_install/#hash-checking-mode
  60. https://files.pythonhosted.org/packages/87/82/b02e669132dfa97b99c741de26f4d69d0f57d9dfa58480a34075786f751c/pyid8-0.1.0.tar.gz
  61. https://packaging.python.org/installing/
  62. https://packaging.python.org/tutorials/packaging-projects/
  63. https://packaging.python.org/
  64. https://pypi.org/help/
  65. https://twitter.com/pypi
  66. https://dtdg.co/pypi
  67. https://www.python.org/dev/peps/pep-0541/
  68. https://pypi.org/sponsors/
  69. https://pypi.org/help/#feedback
  70. https://github.com/pypa/warehouse
  71. https://github.com/pypa/warehouse/graphs/contributors
  72. https://www.pypa.io/en/latest/code-of-conduct/
  73. https://pypi.org/security/
  74. https://www.python.org/privacy/
  75. https://pypi.org/policy/terms-of-use/
  76. https://status.python.org/
  77. https://donate.pypi.org/
  78. https://www.python.org/psf/
  79. https://www.elastic.co/
  80. https://www.pingdom.com/
  81. https://cloud.google.com/
  82. https://getsentry.com/for/python
  83. https://aws.amazon.com/
  84. https://www.datadoghq.com/
  85. https://www.fastly.com/
  86. https://www.signalfx.com/
  87. https://www.digicert.com/
  88. https://statuspage.io/
