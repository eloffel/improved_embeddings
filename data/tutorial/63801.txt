   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]sicara's blog
     * [9]machine learning
     * [10]id161
     * [11]data engineering
     * [12]dataviz
     * [13]best of ai
     * [14]about sicara
     __________________________________________________________________

set up tensorflow with docker + gpu in minutes

along with jupyter and opencv

   [15]go to the profile of reda boumahdi
   [16]reda boumahdi (button) blockedunblock (button) followfollowing
   nov 28, 2017
   [1*vyepd2uhko_wtiqmkw-74a.png]

   docker is the best platform to easily install tensorflow with a gpu.
   this tutorial aims demonstrate this and test it on a real-time object
   recognition application.

docker image for tensorflow with gpu

   [17]docker is a tool which allows us to pull predefined images. the
   image we will pull contains [18]tensorflow and nvidia tools as well as
   [19]opencv. the idea is to package all the necessary tools for image
   processing. with that, we want to be able to run any image processing
   algorithm within minutes.

   first of all, we need to install docker.
> curl -fssl https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
> sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ub
untu $(lsb_release -cs) stable"
> sudo apt-get update
> apt-cache policy docker-ce
> sudo apt-get install -y docker-ce
> sudo systemctl status docker

   after that, we will need to install [20]nvidia-docker if we want to use
   gpu:
> wget [21]https://github.com/nvidia/nvidia-docker/releases/download/v1.0.1/nvid
ia-docker_1.0.1-1_amd64.deb
> sudo dpkg -i nvidia-docker*.deb

   at some point, this installation may fail if nvidia-modprobe is not
   installed, you can try to run (gpu only):
> sudo apt-get install nvidia-modprobe
> sudo nvidia-docker-plugin &

   eventually, you can run this command to test your installation.
   hopefully, you will get the following output (gpu only):
> sudo nvidia-docker run --rm nvidia/cuda nvidia-smi

   [1*lzl--drlap91azykvg9g1w.png]
   result of nvidia-smi

fetch image and launch jupyter

   you probably are familiar with jupyter notebook. jupyter notebook
   documents are both human-readable documents containing the analysis
   description and the results (figures, tables, etc..) as well as
   executable documents which can be run to perform data analysis. jupyter
   notebook can also run distributed algorithms with gpu.

   to run a jupyter [22]notebook with tensorflow powered by gpu and
   opencv, launch:
> sudo nvidia-docker run --rm --name tf1 -p 8888:8888 -p 6006:6006 redaboumahdi/
image_processing:gpu jupyter notebook --allow-root

   if you just want to run a jupyter notebook with tensorflow powered by
   cpu and opencv, you can run the following command:
> sudo docker run --rm --name tf1 -p 8888:8888 -p 6006:6006 redaboumahdi/image_p
rocessing:cpu jupyter notebook --allow-root

   you will get the following result out of your terminal. then you can
   navigate to your localhost and use the port 8888, for me, the link
   looks like this: [23]http://localhost:8888/
   [1*tsr35knlzeywl4fgtmrlaw.png]

   you will need to paste your token to identify and access your jupyter
   notebooks: 3299304f3cdd149fe0d68ce0a9cb204bfb80c7d4edc42687
   [1*_98pzeh7o81xqbg17u_5yw.png]

   and eventually, you will get the following result. you can therefore
   test your installation by running the jupyter notebooks.
   [1*u2_2lborkqsgnyliurd21w.png]

   the first link is a hello tensorflow notebook to get more familiar with
   this tool. tensorflow is an [24]open-source [25]software library for
   [26]dataflow programming across a range of tasks. it is principally
   used to build deep neural networks. the third link gives an example of
   using tensorflow to build a simple fully connected neural network. you
   can find [27]here a tensorflow implementation of a convolutionnal
   neural network. i highly recommand using gpu to train id98 / id56 / lstm
   networks.

real-time object recognition

   now it is time to test our configuration and spend some time with our
   machine learning algorithms. the following code helps us track objects
   over frames with our webcam. it is a sample of code taken from the
   internet, you can find the github repository at the end of the article.

   first of all, we need to open the access to the xserver to our docker
   image. there are different ways of doing so. the first one opens an
   access to your xserver to anyone. other methods are described in the
   links at the end of the article.
> xhost +local:root

   then we will bash to our docker image using this command:
> sudo docker run -p 8888:8888 --device /dev/video0 --env="display" --volume="/t
mp/.x11-unix:/tmp/.x11-unix:rw" -it image_processing bash

   we will need to clone the github repository, which is a real-time
   object detector:
> git clone [28]https://github.com/datitran/object_detector_app.git && cd object
_detector_app/

   finally, you can launch the python code:
> python object_detection_app.py

   the code that we are using uses opencv. it is know as one of the most
   used libraries for image processing and available for c++ as well as
   python.

   you should see the following output, opencv will open your webcam and
   render a video. opencv will also find any object in the frame and print
   the label of the predicted object.

conclusion

   i showed how one can use docker to get your computer ready for image
   processing. this image contains opencv and tensorflow with either gpu
   or cpu. we tested our installation through a real-time object detector.
   i hope it convinced you that most of what you need to process images is
   contained in this docker image. thank you for following my tutorial.
   please don   t hesitate to send me any feedback!

useful links

     * d[29]ocker
     * [30]opencv
     * [31]an article on real-time object recognition
     * [32]tensorflow
     * r[33]eal-time object recognition   s code
     * [34]on running gui applications with docker
     * [35]jupyter notebook

   if you want to be notified when the next article comes out, feel free
   to click on follow just below.

   did you like this article? don   t forget to hit the follow button!

   iframe: [36]/media/4832dea2286a7211b06f2907b8ed6dea?postid=10705b6cd1d

   thanks to [37]adil baaj and [38]charles bochet.
     * [39]docker
     * [40]tensorflow
     * [41]gpu
     * [42]data engineering
     * [43]id161

   (button)
   (button)
   (button) 300 claps
   (button) (button) (button) 5 (button) (button)

     (button) blockedunblock (button) followfollowing
   [44]go to the profile of reda boumahdi

[45]reda boumahdi

   after working in finance, developing algorithmic trading, and doing
   research in natural language processing, i joined sicara as an agile
   data scientist.

     (button) follow
   [46]sicara's blog

[47]sicara's blog

   we build tailor-made ai and big data solutions for amazing clients

     * (button)
       (button) 300
     * (button)
     *
     *

   [48]sicara's blog
   never miss a story from sicara's blog, when you sign up for medium.
   [49]learn more
   never miss a story from sicara's blog
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://blog.sicara.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/10705b6cd1d
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://blog.sicara.com/tensorflow-gpu-opencv-jupyter-docker-10705b6cd1d&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://blog.sicara.com/tensorflow-gpu-opencv-jupyter-docker-10705b6cd1d&source=--------------------------nav_reg&operation=register
   8. https://blog.sicara.com/?source=logo-lo_lcd8g66x1blh---fd4c083fbb93
   9. https://blog.sicara.com/machine-learning/home
  10. https://blog.sicara.com/computer-vision/home
  11. https://blog.sicara.com/data-engineering/home
  12. https://blog.sicara.com/data-visualization/home
  13. https://blog.sicara.com/best-of-ai/home
  14. https://www.sicara.com/en
  15. https://blog.sicara.com/@redaboumahdi?source=post_header_lockup
  16. https://blog.sicara.com/@redaboumahdi
  17. https://www.docker.com/
  18. https://www.tensorflow.org/
  19. https://opencv.org/
  20. https://github.com/nvidia/nvidia-docker
  21. https://github.com/nvidia/nvidia-docker/releases/download/v1.0.1/nvidia-docker_1.0.1-1_amd64.deb
  22. http://jupyter.org/
  23. http://ec2-54-244-203-183.us-west-2.compute.amazonaws.com:8888/tree
  24. https://en.wikipedia.org/wiki/open-source
  25. https://en.wikipedia.org/wiki/library_(computing)
  26. https://en.wikipedia.org/wiki/dataflow
  27. https://github.com/rdcolema/tensorflow-image-classification/blob/master/id98.ipynb
  28. https://github.com/datitran/object_detector_app.git
  29. https://www.docker.com/
  30. https://opencv.org/
  31. https://towardsdatascience.com/building-a-real-time-object-recognition-app-with-tensorflow-and-opencv-b7a2b4ebdc32
  32. https://www.tensorflow.org/
  33. https://github.com/datitran/object_detector_app
  34. http://wiki.ros.org/docker/tutorials/gui
  35. http://jupyter.org/
  36. https://blog.sicara.com/media/4832dea2286a7211b06f2907b8ed6dea?postid=10705b6cd1d
  37. https://medium.com/@adilbaaj?source=post_page
  38. https://medium.com/@charlesb_55383?source=post_page
  39. https://blog.sicara.com/tagged/docker?source=post
  40. https://blog.sicara.com/tagged/tensorflow?source=post
  41. https://blog.sicara.com/tagged/gpu?source=post
  42. https://blog.sicara.com/tagged/data-engineering?source=post
  43. https://blog.sicara.com/tagged/computer-vision?source=post
  44. https://blog.sicara.com/@redaboumahdi?source=footer_card
  45. https://blog.sicara.com/@redaboumahdi
  46. https://blog.sicara.com/?source=footer_card
  47. https://blog.sicara.com/?source=footer_card
  48. https://blog.sicara.com/
  49. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  51. https://medium.com/p/10705b6cd1d/share/twitter
  52. https://medium.com/p/10705b6cd1d/share/facebook
  53. https://medium.com/p/10705b6cd1d/share/twitter
  54. https://medium.com/p/10705b6cd1d/share/facebook
