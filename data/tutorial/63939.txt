   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]becoming human: artificial intelligence magazine
     * [9]     consulting
     * [10]     tutorials
     * [11]       submit an article
     * [12]     communities
     * [13]     our bot
     __________________________________________________________________

deep learning made easy with deep cognition

   go to the profile of favio v  zquez
   [14]favio v  zquez (button) blockedunblock (button) followfollowing
   dec 21, 2017
   [1*bd6h0mzd3s87cgshym2saa.png]
   deep cognition, inc.

   this past month i had the luck to meet the founders of
   [15]deepcognition.ai. deep cognition breaks the significant barrier for
   organizations to be ready to adopt deep learning and ai through deep
   learning studio.

what is deep learning?

   [1*dnvgc-porsoco7vxt3pv_a.png]

   before continuing and describe how deep cognition simplifies deep
   learning and ai, lets first define the main concepts for deep learning.

   deep learning is a specific subfield of machine learning, a new take on
   learning representations from data which puts an emphasis on learning
   successive    layers    of increasingly meaningful representations.

   deep learning allows computational models that are composed of multiple
   processing layers to learn representations of data with multiple levels
   of abstraction.

   these layered representations are learned via models called    neural
   networks   , structured in literal layers stacked one after the other.

   actually what we use in deep learning is something called artificial
   neural network (ann), that   s a network inspired by biological neural
   networks which are used to estimate or approximate functions that can
   depend on a large number of inputs that are generally unknown.

   although deep learning is a fairly old subfield of machine learning, it
   only rose to prominence in the early 2010s. in the few years since, it
   has achieved great things, fran  ois chollet list following
   breakthroughs of deep learning:
     * near-human level image classification.
     * near-human level id103.
     * near-human level handwriting transcription.
     * improved machine translation.
     * improved text-to-speech conversion.
     * digital assistants such as google now or amazon alexa.
     * near-human level autonomous driving.
     * improved ad targeting, as used by google, baidu, and bing.
     * improved search results on the web.
     * answering natural language questions.
     * superhuman go playing.

why deep learning?

   as fran  ois chollet states in his book until the late 2000s, we were
   still missing a reliable way to train very deep neural networks. as a
   result, neural networks were still fairly shallow, leveraging only one
   or two layers of representations, and so they were not able to shine
   against more refined shallow methods such as id166s or id79s.

   but in this decade, with the development of several simple but
   important algorithmic improvements, the advances in hardware (mostly
   gpus), and the exponential generation and accumulation of data, with
   the help of deep learning nowadays it   s possible to run small deep
   learning models on your laptop (or in the cloud).

how do we do deep learning?

   let   s see how we normally do deep learning.
   [1*ogvszqwz_35lcegxafgzow.jpeg]

   even though this is not a new field, what is new are the ways we can
   interact with the computer to do deep learning. and one of the most
   important moments for this field was the creation of tensorflow.

   tensorflow is an open source software library for numerical computation
   using data flow graphs. nodes in the graph represent mathematical
   operations, while the graph edges represent the multidimensional data
   arrays (tensors) communicated between them.

what are tensors?

   [1*v9sunocluhejl5yrccnp3g.jpeg]

   tensors, defined mathematically, are simply arrays of numbers, or
   functions, that transform according to certain rules under a change of
   coordinates.

   but in this scope a tensor is a generalization of vectors and matrices
   to potentially higher dimensions. internally, tensorflow represents
   tensors as n-dimensional arrays of base datatypes.

   we need tensors because what numpy (the fundamental package for
   scientific computing with python) lacks is creating tensors. we can
   convert tensors to numpy and viceversa. that is possible since the
   constructs are defined definitely as arrays/matrices.

   tensorflow combines the computational algebra of compilation
   optimization techniques, making easy the calculation of many
   mathematical expressions that would be difficult to calculate, instead.

keras

   [1*lbjjmgofnj_6vetddyaviq.jpeg]

   this is not a blog about tensorflow, there are great ones. but it was
   neccesary to introduce keras.

   keras is a high-level neural networks api, written in python and
   capable of running on top of [16]tensorflow, [17]cntk, or [18]theano.
   it was developed with a focus on enabling fast experimentation. being
   able to go from idea to result with the least possible delay is key to
   doing good research.

   this was created by fran  ois chollet and was the first serious step for
   making deep learning easy for the masses.

   tensorflow has a python api which is not that hard, but keras made
   really easy to get into deep learning for lots of people. it should be
   noted that keras is now officially a part of tensorflow:
   [19]https://www.tensorflow.org/api_docs/python/tf/contrib/keras

deep learning frameworks

   i made a comparison between deep learning frameworks.
   [1*zsvnvfsq5iqnuvvm14sepg.png]

   keras is the winner for now, it is interesting to see that people
   prefers an easy interface and usability.

   if you want more information about keras visit this post i made on
   linkedin:
   [20]https://www.linkedin.com/feed/update/urn:li:activity:63442550870572
   11393

deep cognition

   so normally we do deep learning programming, and learning new apis,
   some harder than others, some are really easy an expressive like keras,
   but how about a visual api to create and deploy deep learning solutions
   with the click of a button?

   this is the promise of deep cognition.

   as they say the deep cognition platform was founded to    democratize
   ai   .

   artificial intelligence is already creating significant value for the
   world economy. there is a (big) shortage of ai expertise though that
   creates a significant barrier for organizations ready to adopt ai. and
   this is what they are solving.

   their platform, deep learning studio is available as cloud solution,
   desktop solution ( [21]http://deepcognition.ai/desktop/ ) where
   software will run on your machine or enterprise solution ( private
   cloud or on premise solution).

   the desktop version allows people to use their own computers with gpu
   without hourly fee.
   [1*4ju0lnww0jlwtctjle_d_g.png]

   for this we will be using the cloud version of the deep learning
   studio. this is a single-user solution for creating and deploying ai.
   the simple drag & drop interface helps you design deep learning models
   with ease.

   pre-trained models as well as use built-in assistive features simplify
   and accelerate the model development process. you can import model code
   and edit the model with the visual interface. the platform
   automatically saves each model version as you iterate and tune
   hyperparameters to improve performance. you can compare performance
   across versions to find your optimal design.

mnist with deep cognition and automl

   [1*av47vapmzum0an21vaicsa.png]

   deep learning studio can automagically design a deep learning model for
   your custom dataset thanks to our advance automl feature. you will have
   good performing model up and running in minutes.

   and yes automl is what you think, automatic machine learning, here
   applied specifically to deep learning, and it will create for you a
   whole pipeline to go from raw data into predictions.

   as a small tutorial / try, of the deep learning studio let   s study the
   classical mnist.

   mnist is a simple id161 dataset. it consists of images of
   handwritten digits like these:
   [1*_8cuoorfbmueedcutreb4w.png]

   it also includes labels for each image, telling us which digit it is.

   let   s train a model to look at images and predict what digits they are
   using deep cognition cloud studio and automl.

   when you have an account you just need to enter in the
   [22]http://deepcognition.ai webpage and click on launch cloud app.
   [1*9jxsz1wu9t6ekhfrrbkxgg.png]

   now this will take you to the ui, you   ll see that you can choose from
   some sample projects:
   [1*a602kpobuv3ghxpyxm-wga.png]

   or create a new project that is what we are going to do now:
   [1*7dkrpascknwtshibm57r9g.png]
   [1*sygjeq68o7wrtjf0rrg8mq.png]

   this will take you to a page where you can choose the
   training-validation-test ratio, load a dataset or used an already
   uploaded one, specify the types of your data and more.
   [1*9jsqjnv8_vpwegeb9y4pha.png]

   the model tab will allow you to create your own models using advance
   deep learning features and different types of layers and neural
   networks, but we will use the automl feature so deep cognition take
   care of all of the modeling:
   [1*p91almttsqrt8j_fvj3sfg.png]
   [1*r0fp6_i7xxat9oqogoxhyq.png]

   we choose image because this is the type of data that we are trying to
   predict.
   [1*ysjjirgjmrarf2acao6zvg.png]

   after you click design you will have your first dl model available to
   customize and analyze:
   [1*_4mz4ptv2rlaom5bbpkdog.png]

   the model looks like this:
   [1*wgamcl7aqe7lg7wn3wsc4g.png]

   so you can see that all the complexity of modeling for deep learning
   and coding has been simplified a lot with this great platform.

   if you want you can also code in a jupyter notevook inside the
   platform, with all the necessary installations already done for you:
   [1*mnmlcyuo2u-kzrvysuj-cw.png]

   the reason is that neural networks are notoriously difficult to
   configure and there are a lot of parameters that need to be set.
   hyperparameter tuning is the hardest in neural network in comparison to
   any other machine learning algorithm.

   but with deep cognition this can be done really easy and in a very
   flexible way, in the hyperparameters tab you can choose from several
   id168s and optimizers to tune your parameters.
   [1*mygcugxprjhxx3xwcaww1q.png]

   now the funny part. training your model. in the training tab you can
   choose from different types of instances (with cpu and gpu) support to
   to this. it will also help you monitor your traning process and create
   a loss and accuracy graph for you:
   [1*s94lexcc8fhumexqiifyaw.png]

   iframe: [23]/media/1bc95fdc47907a2f478651c912dfaab9?postid=403fbe445351

   above there is an small gif of the training process.

   the results your traninig can be found in the results tab. you will
   have there all your runs.
   [1*n95v_riuj8dt_h5berjgvg.png]

   and finally you can use this model you have trained for the testing and
   validation set (or other you can upload) and see how well it performs
   when predicting the digit from an image.
   [1*f34t6jsqo0y0hdh9adgzrg.png]

the blackbox problem

   something that will come yo your mind is: ok i   m doing deep learning
   but i have no idea how.

   because of that you can actually download the code that produced the
   predictions, and as you will see it is written in keras. you can then
   upload the code and test it with the notebook that the system provides.

   the automl features have the best of keras and other dl frameworks in a
   simple click, and the good thing about it is that it chooses the best
   practices for dl for you, and if you are not completely happy with the
   choices you can change them really easy in the ui or interact with the
   notebook.

   this system is built with the premise of making ai easy for everyone,
   you don   t have to be an expert when creating this complex models, but
   my recommendation is that is good that you have an idea of what you are
   doing, read some of the tensorflow or keras documentation, watch some
   videos and be informed. if you are an expert in the subject great! this
   will make your life much easier and you can still apply your expertise
   when building the models.

   remember checking the references for more information about deep
   learning and ai.

about favio v  zquez

   physicist and computer engineer. he holds a master   s degree in physical
   sciences from unam. he works in big data, data science, machine
   learning and computational cosmology. since 2015, he has been part of
   the collaboration of apache spark in the core and mllib library.

   he   s chief data scientist at [24]iron performing distributed
   processing, data analysis, machine learning and directing data projects
   for the company. in addition, he works at [25]bbva data & analytics as
   a data scientist performing machine learning, doing data analysis,
   maintaining the life cycles of the projects and models with apache
   spark.

references

   [26]tensorflow 101: understanding tensors and graphs to get you started
   in deep learning
   introduction tensorflow is one of the most popular libraries in deep
   learning. when i started with tensorflow it
   felt   www.analyticsvidhya.com
   [27]deep learning with python
   the clearest explanation of deep learning i have come across...it was a
   joy to read.www.manning.com
   [28]leriomaggio/deep-learning-keras-tensorflow
   deep-learning-keras-tensorflow - introduction to deep neural networks
   with keras and tensorflowgithub.com
   [29]mnist for ml beginners | tensorflow
   we know that every image in mnist is of a handwritten digit between
   zero and nine. so there are only ten possible   www.tensorflow.org
   [30]tutorial: optimizing neural networks using keras (with image
   recognition case study)
   introduction in my previous article, i discussed the implementation of
   neural networks using tensorflow. continuing
   the   www.analyticsvidhya.com
   [31]packtpublishing/deep-learning-with-keras
   deep-learning-with-keras - code repository for deep learning with keras
   published by packtgithub.com
   [32]     latest deep learning ocr with keras and supervisely in 15 minutes
   tutorial on how to build your own state-of-the art text recognition
   systemhackernoon.com

   iframe: [33]/media/c43026df6fee7cdb1aab8aaf916125ea?postid=403fbe445351

   [34][1*2f7oqe2ajk1ksrhkmd9zmw.png]
   [35][1*v-ppfkswhbvlwwamsvhhwg.png]
   [36][1*wt2auqisieaozxj-i7brdq.png]

     * [37]machine learning
     * [38]deep cognition
     * [39]deep learning
     * [40]artificial intelligence
     * [41]ai

   (button)
   (button)
   (button) 517 claps
   (button) (button) (button) 3 (button) (button)

     (button) blockedunblock (button) followfollowing
   go to the profile of favio v  zquez

[42]favio v  zquez

   medium member since nov 2018

   data scientist, physicist and computer engineer. love sharing ideas,
   thoughts and contributing to open source in machine learning and deep
   learning ;).

     (button) follow
   [43]becoming human: artificial intelligence magazine

[44]becoming human: artificial intelligence magazine

   latest news, info and tutorials on artificial intelligence, machine
   learning, deep learning, big data and what it means for humanity.

     * (button)
       (button) 517
     * (button)
     *
     *

   [45]becoming human: artificial intelligence magazine
   never miss a story from becoming human: artificial intelligence
   magazine, when you sign up for medium. [46]learn more
   never miss a story from becoming human: artificial intelligence
   magazine
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://becominghuman.ai/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/403fbe445351
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://becominghuman.ai/deep-learning-made-easy-with-deep-cognition-403fbe445351&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://becominghuman.ai/deep-learning-made-easy-with-deep-cognition-403fbe445351&source=--------------------------nav_reg&operation=register
   8. https://becominghuman.ai/?source=logo-lo_zrnabsuxxlna---5e5bef33608a
   9. https://becominghuman.ai/artificial-intelligence-software-developers-af09386dc05d
  10. https://becominghuman.ai/tagged/tutorial
  11. https://becominghuman.ai/write-for-us-48270209de63
  12. https://becominghuman.ai/artificial-intelligence-communities-c305f28e674c
  13. http://m.me/becominghumanai
  14. https://becominghuman.ai/@faviovazquez
  15. http://deepcognition.ai/
  16. https://github.com/tensorflow/tensorflow
  17. https://github.com/microsoft/cntk
  18. https://github.com/theano/theano
  19. https://www.tensorflow.org/api_docs/python/tf/contrib/keras
  20. https://www.linkedin.com/feed/update/urn:li:activity:6344255087057211393
  21. http://deepcognition.ai/desktop/
  22. http://deepcognition.ai/
  23. https://becominghuman.ai/media/1bc95fdc47907a2f478651c912dfaab9?postid=403fbe445351
  24. https://iron-ai.com/
  25. https://www.bbvadata.com/
  26. https://www.analyticsvidhya.com/blog/2017/03/tensorflow-understanding-tensors-and-graphs/
  27. https://www.manning.com/books/deep-learning-with-python
  28. https://github.com/leriomaggio/deep-learning-keras-tensorflow
  29. https://www.tensorflow.org/get_started/mnist/beginners
  30. https://www.analyticsvidhya.com/blog/2016/10/tutorial-optimizing-neural-networks-using-keras-with-image-recognition-case-study/#six
  31. https://github.com/packtpublishing/deep-learning-with-keras
  32. https://hackernoon.com/latest-deep-learning-ocr-with-keras-and-supervisely-in-15-minutes-34aecd630ed8
  33. https://becominghuman.ai/media/c43026df6fee7cdb1aab8aaf916125ea?postid=403fbe445351
  34. https://becominghuman.ai/artificial-intelligence-communities-c305f28e674c
  35. https://upscri.be/8f5f8b
  36. https://becominghuman.ai/write-for-us-48270209de63
  37. https://becominghuman.ai/tagged/machine-learning?source=post
  38. https://becominghuman.ai/tagged/deep-cognition?source=post
  39. https://becominghuman.ai/tagged/deep-learning?source=post
  40. https://becominghuman.ai/tagged/artificial-intelligence?source=post
  41. https://becominghuman.ai/tagged/ai?source=post
  42. https://becominghuman.ai/@faviovazquez
  43. https://becominghuman.ai/?source=footer_card
  44. https://becominghuman.ai/?source=footer_card
  45. https://becominghuman.ai/
  46. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  48. https://becominghuman.ai/@faviovazquez?source=post_header_lockup
  49. https://www.analyticsvidhya.com/blog/2017/03/tensorflow-understanding-tensors-and-graphs/
  50. https://www.manning.com/books/deep-learning-with-python
  51. https://github.com/leriomaggio/deep-learning-keras-tensorflow
  52. https://www.tensorflow.org/get_started/mnist/beginners
  53. https://www.analyticsvidhya.com/blog/2016/10/tutorial-optimizing-neural-networks-using-keras-with-image-recognition-case-study/#six
  54. https://github.com/packtpublishing/deep-learning-with-keras
  55. https://hackernoon.com/latest-deep-learning-ocr-with-keras-and-supervisely-in-15-minutes-34aecd630ed8
  56. https://medium.com/p/403fbe445351/share/twitter
  57. https://medium.com/p/403fbe445351/share/facebook
  58. https://becominghuman.ai/@faviovazquez?source=footer_card
  59. https://medium.com/p/403fbe445351/share/twitter
  60. https://medium.com/p/403fbe445351/share/facebook
