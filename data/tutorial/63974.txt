   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]udacity inc
     * [9]ai
     * [10]autonomous systems
     * [11]business
     * [12]data science
     * [13]programming
     * [14]the official udacity blog
     __________________________________________________________________

shannon id178, information gain, and picking balls from buckets

   [15]go to the profile of luis serrano
   [16]luis serrano (button) blockedunblock (button) followfollowing
   nov 5, 2017

   i   m a curriculum developer for the [17]machine learning nanodegree
   program at udacity. given our promise to students that they   ll always
   be learning the most valuable and the most cutting-edge skills, it   s
   incumbent upon me to always be looking for ways to upgrade our content.
   after all, we can   t possibly teach the most modern and transformative
   technologies with static content that never changes! machine learning
   is an exciting and ever-changing space, and our program must mirror
   that if we   re to fulfill our obligation to our students. so, i spend a
   lot of my time researching and studying new opportunities to bring the
   latest skills, trends, and technologies to our classrooms, and right
   now, i   m working on something really exciting for an upcoming launch.

   id178 and information gain are super important in many areas of
   machine learning, in particular, in the training of id90. my
   goal is to really understand the concept of id178, and i always try
   to explain complicated concepts using fun games, so that   s what i do in
   this post. enjoy!

   in his 1948 paper    [18]a mathematical theory of communication   , claude
   shannon introduced the revolutionary notion of information id178.
   [1*7yltgsvrcgmpa8wnrpylqa.png]
   claude shannon
     __________________________________________________________________

   this blog post is a more detailed version of this video:

   iframe: [19]/media/217a17af755ad344b06dbedb9ac4f80e?postid=5810d35d54b4

id178 in physics

   id178, so far, had been a concept in physics. namely, it is the (log
   of the) number of microstates or microscopic configurations. in
   colloquial terms, if the particles inside a system have many possible
   positions to move around, then the system has high id178, and if they
   have to stay rigid, then the system has low id178.

   for example, water in its three states, solid, liquid, and gas, has
   different entropies. the molecules in ice have to stay in a lattice, as
   it is a rigid system, so ice has low id178. the molecules in water
   have more positions to move around, so water in liquid state has medium
   id178. the molecules inside water vapor can pretty much go anywhere
   they want, so water vapor has high id178.
   [0*lwoapnwcaw27e5cv.]
   water in its three states, and their respective entropies

   but what does this have to do with id205? well, the answer
   for this is by studying the relationships between knowledge and
   id203.

id178 and knowledge

   to introduce the notion of id178 in id203, we   ll use an example
   throughout this whole article. let   s say we have 3 buckets with 4 balls
   each. the balls have the following colors:
    1. bucket 1: 4 red balls
    2. bucket 2: 3 red balls, and 1 blue ball
    3. bucket 3: 2 red balls, and 2 blue balls

   [1*_epn0wclzjs4cypi1cmiwq.png]
   the buckets

   and we   ll judge these three options by how much information we have on
   the color of a ball drawn at random. in this case, we have the
   following:
    1. in the first bucket, we   ll know for sure that the ball coming out
       is red.
    2. in the second bucket, we know with 75% certainty that the ball is
       red, and with 25% certainty that it   s blue.
    3. in the third bucket, we know with 50% certainty that the ball is
       red, and with the same certainty that it   s blue.

   so it makes sense to say that bucket 1 gives us the most amount of
      knowledge    about what ball we   ll draw (because we know for sure it   s
   red), that bucket 2 gives us some knowledge, and that bucket 3 will
   give us the least amount of knowledge. well, id178 is in some way,
   the opposite of knowledge. so we   ll say that bucket 1 has the least
   amount of id178, bucket 2 has medium id178, and bucket 3 has the
   greatest amount of id178.
   [0*kvgucliyuvud7q6n.]
   id178 and information are opposites

   but we want a formula for id178, so in order to find that formula,
   we   ll use id203.

id178 and id203

   so now the question is, how do we cook up a formula which gives us a
   low number for a bucket with 4 red balls, a high number for a bucket
   with 2 red and 2 blue balls, and a medium number for a bucket with 3
   red and 1 blue balls? well, as a first attempt, let   s remember the
   definition of id178: if molecules have many possible rearrangements,
   then the system has high id178, and if they have very few
   rearrangements, then the system has low id178. so a first attempt
   would be to count the number of rearrangements of these balls. in this
   case, we have 1 possible rearrangement for bucket 1, 4 for bucket 2,
   and 6 for bucket 3, this number given by the binomial coefficient.
   [1*c06nx9nwnjxyafxmppnmnq.png]
   number of rearrangements for the balls in each bucket

   this number of arrangements won   t be part of the formula for id178,
   but it gives us an idea, that if there are many arrangements, then
   id178 is large, and if there are very few arrangements, then id178
   is low. in the next section, we   ll cook up a formula for id178. the
   idea is, to consider the id203 of drawing the balls in a certain
   way, from each bucket.

id178 and an interesting game show

   so, in order to cook up a formula, we   ll consider the following game.
   the spoiler is the following: the id203 of winning this game,
   will help us get the formula for id178.

   in this game, we   re given, again, the three buckets to choose. the
   rules go as follows:
    1. we choose one of the three buckets.
    2. we are shown the balls in the bucket, in some order. then, the
       balls go back in the bucket.
    3. we then pick one ball out of the bucket, at a time, record the
       color, and return the ball back to the bucket.
    4. if the colors recorded make the same sequence than the sequence of
       balls that we were shown at the beginning, then we win 1,000,000
       dollars. if not, then we lose.

   this may sound complicated, but it   s actually very simple. let   s say
   for example that we   ve picked bucket 2, which has 3 red balls, and 1
   blue ball. we   re shown the balls in the bucket in some order, so let   s
   say, they   re shown to us in that precise order, red, red, red, blue.
   now, let   s try to draw the balls to get that sequence, red, red, red,
   blue. what   s the id203 of this happening? well   
    1. in order for the first ball to be red, the id203 is 3/4, or
       0.75.
    2. for the second ball to be red, the id203 is again 3/4.
       (remember that we put the first ball back in the bucket after
       looking at its color.)
    3. for the third ball to be red, the id203 is again 3/4.
    4. for the fourth ball to be blue, the id203 is now 1/4, or
       0.25.

   as these are independent events, then the id203 of the 4 of them
   to happen, is (3/4)*(3/4)*(3/4)*(1/4) = 27/256, or 0.105. this is not
   very likely. in the figures below, we can see the probabilities of
   winning if we pick each of the three buckets.

   for exposition, the following three figures show the probabilities of
   winning with each of the buckets. for bucket 1, the id203 is 1,
   for bucket 2, the id203 is 0.105, and for bucket 3, the
   id203 is 0.0625.
   [1*1pwuh5vz4762kntrua486g.png]
   probabillity of winning with bucket 1 is 1
   [1*c4vctzxvp5zlwk9gcblnsg.png]
   probabillity of winning with bucket 2 is 0.105
   [1*gznfthcifql4llybfvzhmg.png]
   probabillity of winning with bucket 3 is 0.0625

   or, as summarized in the following table:
   [1*dsw-c4p43jqynfxwoytxow.png]

   ok, now we have some measure that gives us different values for the
   three buckets. the id203 of winning at this game, gives us:
    1. 1.0 for bucket 1
    2. 0.105 for bucket 2
    3. 0.0625 for bucket 3

   in order to build the id178 formula, we want the opposite, some
   measure that gives us a low number for bucket 1, a medium number for
   bucket 2, and a high number for bucket 3. no problem, this is where
   logarithms will come to save our life.

turning products into sums

   the following is a very simple trick, yet used very widely,
   particularly in machine learning. see, products are never very good.
   here we have a product of 4 numbers, which is not bad, but imagine if
   we had a million data points. how would the product of a million small
   probabilities (between 0 and 1) would look? it would be a ridiculously
   tiny number. in general we want to avoid products as much as we can.
   what   s better than a product? well, a sum! and how do we turn products
   into sums? exactly, using the logarithm function, since the following
   identity will be very helpful:
   [0*v6hxtslvczuibani.]
   logarithm identity

   so, what do we do? well, we have a product of four things, we take the
   logarithm, and that becomes the sum of four things. in the case of
   bucket 2 (3 red balls, 1 blue ball), we have the following:
   [0*iuqjaxte3smjhfgw.]

   and taking the logarithm (in this case, we   ll take the logarithm, and
   multiply by -1, to make things positive), we get:
   [0*lmdzu3w1mm5xso1g.]
   for purposes of this post, we   ll take logarithm base 2, we   ll see later
   why (hint: id205)

   now, as a final step, we take the average, in order to normalize. and
   that   s it, that   s the id178! for bucket 2, it   s 0.811:
   [0*b7n3or62e6n6m_rf.]
   id178 for bucket 2

   if we calculate the id178 for bucket 1 (4 red balls), we get:
   [0*1cd3frrrpkywgbre.]
   id178 for bucket 1

   and for bucket 3 (2 red balls, 2 blue balls), we get:
   [0*_p9ijo-9jvbjsovv.]
   id178 for bucket 3

   so we have our formula for id178, the negative logarithm of the
   id203 of winning at our game. notice that this is low for bucket
   1, high for bucket 3, and medium for bucket 2. in summary, we have the
   following:
   [1*ggteylmgyf2pbrnoxv-aza.png]
   entropies for the different buckets.

   for the formula lovers out there, the general formula is as follows. if
   our bucket has m red balls, and n blue balls, the formula is as
   follows:
   [1*dwhamsxwzemgnq5dwnvjca.png]
   [0*i9mfmtxeqrinv9io.]
   general formula for id178

multi-class id178

   so far we   ve been dealing with two classes, red and blue. in order to
   relate id178 with id205, we need to look at id178 with
   several classes. let   s switch to letters, to make this more clear. we
   have the following three buckets, with 8 letters each. bucket 1 has the
   letters aaaaaaaa, bucket 2 has the letters aaaabbcd, and bucket 3 has
   the letters aabbccdd. while it   s straightforward to see that bucket 1
   has the least amount of id178, the difference between bucket 2 and
   bucket 3 is not obvious. we   ll see below that bucket 3 has the highest
   id178 of the three, while bucket 2 has medium
   [1*wvzz_-xydtetst_ka-gdig.png]
   multi-class id178 example

   the formula for id178 generalizes very easily to more classes. this
   is the general formula:
   [0*kj5lj7vznl7ppdlb.]
   general formula for multi-class id178

   where there are n classes, and p_i is the id203 an object from
   the i-th class appearing. for our three buckets, we have the following:

   in this case, since bucket 1 has only one class (the letter a), and the
   id203 of it appearing is 1, then the id178 is:
   [0*ax4zd553efqmq-zh.]
   id178 for bucket 1

   for bucket 2, since we have 4 classes (the letters a, b, c, and d), and
   the id203 of a appearing is 4/8, for b it   s 2/8, for c it   s 1/8,
   and for d it   s 1/8, then the id178 is:
   [0*h2wnp7cazvwgceu8.]
   id178 for bucket 2

   and finally for bucket 3, since we have 4 classes (the letters a, b, c,
   and d), and the id203 of each appearing is 1/4, then the id178
   is:
   [0*iqdv7qun0ftsei3x.]
   id178 for bucket 3

   ok, so we   ve calculated the id178 for our three buckets.
   [1*64yy7nyunvpesaoluscp6a.png]
   id178 for the three buckets

   but something much more interesting is happening, which is where
   id205 finally comes into play.

id205

   here   s another way to see id178. let   s say we want to draw a random
   letter from one of the buckets. on average, how many questions do we
   need to ask to find out what letter it is?

   first, let   s get the easy case out of the way. if the bucket is bucket
   1, we know for sure that the letter is an a. so right there, we know
   that for bucket 1, we need to ask 0 questions on average, to guess what
   letter we got. for the sake of redundancy, let   s put it in a formula:
   [0*0-wiwp8ykfmzlned.]
   average number of questions to find out the letter drawn out of
   bucket 1

   now, for buckets 2 and 3, naively, one would think that 4 questions is
   enough to find out any letter. namely, the following four questions
   would be enough:
    1. is the letter an a?
    2. is the letter a b?
    3. is the letter a c?
    4. is the letter a d?

   so, first off, the fourth question is redundant, since if the answer to
   all the previous ones is    no   , then we know for sure that the letter is
   a d. so three questions is enough. now, can we do better than that?
   well, our questions don   t need to be independent. we can tailor our
   question 2 based on the answer to question 1, as follows:
    1. is the letter a or b?
    2. a) if the answer to question 1 is    yes   : is the letter a? if the
       answer to question 1 is    no   : is the letter c?

   and that will actually do it, because based on the two answers, we get
   the following:
    1.    yes    and    yes   : letter is a
    2.    yes    and    no   : letter is b
    3.    no    and    yes   : letter is c
    4.    no    and    no   : letter is d

   this tree of questions can be seen in the following image:
   [1*jkbjb38t7sygp6pqyygrxa.png]
   tree of questions

   now, for bucket 3, each letter appears with id203 1/4, since
   there are 8 letters, and 2 of each. thus, the average number of
   questions to find out the letter drawn out of bucket 2 is precisely 2,
   as the next formula states:
   [0*tgr41vy4m9pffusj.]
   average number of questions to guess the letter drawn out of bucket 2

   now, let   s look at bucket 1. of course, if we use the same question
   tree as we used for bucket 2, we can see that the average number of
   questions is 2. but we can do a bit better. actually, let   s use the
   first attempt. first asking if the letter is a, then b, then c. that   s
   the following tree:
   [1*2mpfdr6dzpdajmxp2yld9g.png]
   tree of questions for bucket 2

   in this case, we have the following:
    1. if the letter is a, we found out in 1 question.
    2. if the letter is b, we found out in 2 questions.
    3. if the letter is c or d, we found out in 3 questions.

   now the trick is the following. a appears much more often than c and d,
   so on average, we may be doing much better. how much better? well,
   recall that bucket 2 has the letters aaaabbcd, so a appears 1/2 the
   time, b appears 1/4 of the time, and c and d appear each 1/8 of the
   time. so the average number of questions is:
   [0*xyylefvkm0kbem0h.]
   average number of questions to find out a letter drawn out of bucket 2

   so, in terms of average number of questions asked to find out a letter
   drawn out of each of the buckets, we have the following:
   [1*spr3anwnf1_ji_ol7epqna.png]
   average number of questions

   well, that   s exactly the id178! here   s the connection between id178
   and id205. if we want to find out a letter drawn out of a
   bucket, the average number of questions we must ask to find out (if we
   ask our questions in the smartest possible way), is at least the
   id178 of the set. this means, the id178 of the set is a lower bound
   on the number of questions we must ask in average to find out. in the
   cases we saw above, the number of questions is exactly the id178. in
   general, this won   t happen, we may need to ask more questions than the
   id178. but we will never be able to do it with less questions than
   the id178 of the set.

   of course, one huge question arises: how did we know that the way we
   asked the questions was the best possible? this is not obvious, and
   needs some thinking.

acknowledgements

     * i would like to thank [20]timothy man for his clarification and
       thorough explanation of the concept of id178 in physics.
     * also, i   d like to thank hector plata for valuable corrections.

   suggestions? corrections? please e-mail me at luis.serrano@udacity.com.

   and if you like what you saw, please feel free to check our nanodegree
   programs at [21]udacity!
     * deep learning:
       [22]www.udacity.com/course/deep-learning-nanodegree-foundation--nd1
       01
     * machine learning: [23]www.udacity.com/ml
     * artificial intelligence: [24]www.udacity.com/ai

     * [25]machine learning
     * [26]id203
     * [27]statistics
     * [28]id178
     * [29]mathematics

   (button)
   (button)
   (button) 1.6k claps
   (button) (button) (button) 8 (button) (button)

     (button) blockedunblock (button) followfollowing
   [30]go to the profile of luis serrano

[31]luis serrano

   curriculum lead at the artificial intelligence team at udacity.
   previously a software engineer at google (youtube), and a phd in
   mathematics.

     (button) follow
   [32]udacity inc

[33]udacity inc

   learning for the jobs of today, tomorrow, and beyond

     * (button)
       (button) 1.6k
     * (button)
     *
     *

   [34]udacity inc
   never miss a story from udacity inc, when you sign up for medium.
   [35]learn more
   never miss a story from udacity inc
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/5810d35d54b4
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://medium.com/udacity/shannon-id178-information-gain-and-picking-balls-from-buckets-5810d35d54b4&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://medium.com/udacity/shannon-id178-information-gain-and-picking-balls-from-buckets-5810d35d54b4&source=--------------------------nav_reg&operation=register
   8. https://medium.com/udacity?source=logo-lo_kjejkrebyhnp---b7bbc4597459
   9. https://medium.com/udacity/tagged/artificial-intelligence
  10. https://medium.com/udacity/tagged/autonomous-vehicles
  11. https://medium.com/udacity/tagged/digital-marketing
  12. https://medium.com/udacity/tagged/data-science
  13. https://medium.com/udacity/tagged/programming
  14. https://blog.udacity.com/
  15. https://medium.com/@luis.serrano?source=post_header_lockup
  16. https://medium.com/@luis.serrano
  17. http://www.udacity.com/ml
  18. http://sites.google.com/site/parthochoudhury/amtoc_cshannon.pdf
  19. https://medium.com/media/217a17af755ad344b06dbedb9ac4f80e?postid=5810d35d54b4
  20. https://medium.com/@timothyman
  21. http://www.udacity.com/
  22. https://www.udacity.com/course/deep-learning-nanodegree-foundation--nd101
  23. http://www.udacity.com/ml
  24. http://www.udacity.com/ai
  25. https://medium.com/tag/machine-learning?source=post
  26. https://medium.com/tag/id203?source=post
  27. https://medium.com/tag/statistics?source=post
  28. https://medium.com/tag/id178?source=post
  29. https://medium.com/tag/mathematics?source=post
  30. https://medium.com/@luis.serrano?source=footer_card
  31. https://medium.com/@luis.serrano
  32. https://medium.com/udacity?source=footer_card
  33. https://medium.com/udacity?source=footer_card
  34. https://medium.com/udacity
  35. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  37. https://medium.com/p/5810d35d54b4/share/twitter
  38. https://medium.com/p/5810d35d54b4/share/facebook
  39. https://medium.com/p/5810d35d54b4/share/twitter
  40. https://medium.com/p/5810d35d54b4/share/facebook
