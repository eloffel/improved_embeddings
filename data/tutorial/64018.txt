   #[1]github [2]recent commits to tensorcomprehensions:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]103
     * [35]star [36]1,449
     * [37]fork [38]154

[39]facebookresearch/[40]tensorcomprehensions

   [41]code [42]issues 58 [43]pull requests 27 [44]projects 1 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a domain specific language to express machine learning workloads.
   [47]https://facebookresearch.github.io/te   
   [48]machine-learning [49]domain-specific-language
     * [50]1,411 commits
     * [51]45 branches
     * [52]1 release
     * [53]fetching contributors
     * [54]apache-2.0

    1. [55]c++ 92.6%
    2. [56]python 3.9%
    3. [57]cmake 2.3%
    4. [58]shell 1.1%
    5. other 0.1%

   (button) c++ python cmake shell other
   branch: master (button) new pull request
   [59]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/f
   [60]download zip

downloading...

   want to be notified of new releases in
   facebookresearch/tensorcomprehensions?
   [61]sign in [62]sign up

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [65]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [66]download the github extension for visual studio
   and try again.

   (button) go back
   [67]@skimo-openhub
   [68]skimo-openhub [69]merge pull request [70]#601 [71]from
   facebookresearch/pr/pre-template (button)    
scheduletreemapping::scheduletreemapping: drop redundant initialization

   latest commit [72]220b590 aug 31, 2018
   [73]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [74].circleci
   [75].github [76]move to trunk llvm jul 11, 2018
   [77].jenkins
   [78]cmake
   [79]conda_recipes [80]move to trunk llvm jul 11, 2018
   [81]docs [82]update installation.rst aug 9, 2018
   [83]external/isl [84]bump isl for schedule_nonneg_var_coefficient
   option jul 18, 2018
   [85]isl_interface
   [86]python [87]generate ptx with nvcc jul 24, 2018
   [88]tc
   [89]tensor_comprehensions [90]generate ptx with nvcc jul 24, 2018
   [91]test [92]test_cuda_mapper.cc: drop removal of user pointers from
   isl_id objects aug 8, 2018
   [93]third-party [94]bump isl for merge of c++ bindings aug 9, 2018
   [95].clang-format
   [96].gitignore
   [97].gitmodules
   [98]build.md
   [99]cmakelists.txt
   [100]code_of_conduct.md
   [101]contributing.md [102]locally generate and store isl c++ interface
   jun 19, 2018
   [103]codeowners.md
   [104]codingconventions.md
   [105]license
   [106]readme.md
   [107]build.sh
   [108]check_and_fix_format.sh
   [109]check_format.sh
   [110]setup.py
   [111]test.sh
   [112]test_cpu.sh

readme.md

[113]tensor comprehensions

   tensor comprehensions (tc) is a fully-functional c++ library to
   automatically synthesize high-performance machine learning kernels
   using [114]halide, [115]isl and nvrtc or llvm. tc additionally provides
   basic integration with caffe2 and pytorch. we provide more details in
   our paper on [116]arxiv.

   this library is designed to be highly portable,
   machine-learning-framework agnostic and only requires a simple tensor
   library with memory allocation, offloading and synchronization
   capabilities.

   for now, we have integrated tc with [117]caffe2 and [118]pytorch.

a simple example

   the following illustrates a short but powerful feature of the library:
   the capacity to jit-compile high-performance machine learning kernels
   on demand, for specific sizes.
import tensor_comprehensions as tc
import torch
lang = """
def tensordot(float(n, c1, c2, h, w) i0, float(n, c2, c3, h, w) i1) -> (o) {
    o(n, c1, c3, h, w) +=! i0(n, c1, c2, h, w) * i1(n, c2, c3, h, w)
}
"""
n, c1, c2, c3, h, w = 32, 512, 8, 2, 28, 28
tensordot = tc.define(lang, name="tensordot")
i0, i1 = torch.randn(n, c1, c2, h, w).cuda(), torch.randn(n, c2, c3, h, w).cuda(
)
best_options = tensordot.autotune(i0, i1, cache=true)
out = tensordot(i0, i1, options=best_options)

   after a few generations of autotuning on a 2-gpu p100 system, we see
   results resembling:

   [119]autotuning sample

   in c++ a minimal autotuning example resembles the [120]following:
test(tensordot, simpleautotune) {
  // 1. define and setup the tc compilation unit with cuda memory
  // management backed by aten tensors.
  std::string tc = r"tc(
def tensordot(float(n, c1, c2, h, w) i0,
              float(n, c2, c3, h, w) i1)  -> (o)
{
    o(n, c1, c3, h, w) +=! i0(n, c1, r_c2, h, w) * i1(n, r_c2, c3, h, w)
}
  )tc";

  // 2. allocate tensors with random data.
  at::tensor i0 = at::cuda(at::kfloat).rand({32,  8, 16, 17, 25});
  at::tensor i1 = at::cuda(at::kfloat).rand({32, 16, 2, 17, 25});

  // 3. run autotuning with evolutionary search starting from a naive option.
  auto naiveoptions = backend::mappingoptionstype::makenaivemappingoptions();
  tc::aten::atenautotuner<tc::cudabackend, tc::autotune::geneticsearch>
      geneticautotuneaten(tc);
  auto bestoption =
      geneticautotuneaten.tune("tensordot", {i0, i1}, {naiveoptions});

  // 4. compile and run the tc with the best option after allocating output
  //    tensors.
  auto pexecutor =
      tc::aten::compile<backend>(tc, "tensordot", {i0, i1}, bestoption[0]);
  auto outputs = tc::aten::prepareoutputs(tc, "tensordot", {i0, i1});
  auto timings = tc::aten::profile(*pexecutor, {i0, i1}, outputs);
  std::cout << "tensordot size i0: " << i0.sizes() << ", "
            << "size i1: " << i1.sizes()
            << " ran in: " << timings.kernelruntime.tomicroseconds() << "us\n";
}

   note that we only need to autotune a tc once to obtain reasonable
   mapping options that can translate to other problem sizes for a given
   tc as the following snippet illustrates:
// 5. reuse bestoptions from autotuning on another kernel
for (auto sizes : std::vector<std::pair<at::intlist, at::intlist>>{
         {{4, 9, 7, 16, 14}, {4, 7, 3, 16, 14}},
         {{8, 5, 11, 10, 10}, {8, 11, 16, 10, 10}},
     }) {
  at::tensor i0 = makeatentensor<backend>(sizes.first);
  at::tensor i1 = makeatentensor<backend>(sizes.second);
  auto pexecutor =
      tc::aten::compile<backend>(tc, "tensordot", {i0, i1}, bestoption[0]);
  auto outputs = tc::aten::prepareoutputs(tc, "tensordot", {i0, i1});
  auto timings = tc::aten::profile(*pexecutor, {i0, i1}, outputs);
  std::cout << "tensordot size i0: " << i0.sizes() << ", "
            << "size i1: " << i1.sizes()
            << " ran in: " << timings.kernelruntime.tomicroseconds()
            << "us\n";
}

   putting it all together, one may see:
> build$ ./examples/example_simple
[==========] running 1 test from 1 test case.
[----------] global test environment set-up.
[----------] 1 test from tensordot
[ run      ] tensordot.simpleautotune
generation 0    jobs(compiled, gpu)/total  (10, 10)/10   (best/median/worst)us:
226/4238/7345
generation 1    jobs(compiled, gpu)/total  (10, 10)/10   (best/median/worst)us:
220/221/233
generation 2    jobs(compiled, gpu)/total  (10, 10)/10   (best/median/worst)us:
220/221/234
tensordot size i0: [16, 8, 16, 17, 25], size i1: [16, 16, 2, 17, 25] ran in: 239
us
tensordot size i0: [4, 9, 7, 16, 14], size i1: [4, 7, 3, 16, 14] ran in: 56us
tensordot size i0: [8, 5, 11, 10, 10], size i1: [8, 11, 16, 10, 10] ran in: 210u
s
[       ok ] tensordot.simpleautotune (27812 ms)
[----------] 1 test from tensordot (27812 ms total)

[----------] global test environment tear-down
[==========] 1 test from 1 test case ran. (27812 ms total)
[  passed  ] 1 test.

   we have not yet characterized the precise fraction of peak performance
   we obtain but it is not uncommon to obtain 80%+ of peak shared memory
   bandwidth after autotuning. solid register-level optimizations are
   still in the work but tc in its current form already addresses the
   productivity gap between the needs of research and the needs of
   production. which is why we are excited to share it with the entire
   community and bring this collaborative effort in the open.

documentation

   general: you can find detailed information about tensor comprehensions
   [121]here.

   c++ api: we also provide documentation for our c++ api which can can be
   found [122]here

installation

binaries

   we provide conda package for making it easy to install and use tc
   binary. please refer to our documentation [123]here for instructions.

from source

   you can find documentation [124]here which contains instructions for
   building tc via docker, conda packages or in non-conda environment.

communication

     * email: [125]tensorcomp@fb.com
     * github issues: bug reports, feature requests, install issues, rfcs,
       thoughts, etc.
     * slack: for discussion around framework integration, build support,
       collaboration, etc. join our slack channel
       [126]https://tensorcomprehensions.herokuapp.com/.

code of conduct

   see the [127]code_of_conduct.md file for more details.

license

   tensor comprehensions is distributed under a permissive apache v2.0
   license, see the [128]license file for more details.

contributing

   see the [129]contributing.md file for more details.

     *    2019 github, inc.
     * [130]terms
     * [131]privacy
     * [132]security
     * [133]status
     * [134]help

     * [135]contact github
     * [136]pricing
     * [137]api
     * [138]training
     * [139]blog
     * [140]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [141]reload to refresh your
   session. you signed out in another tab or window. [142]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/facebookresearch/tensorcomprehensions/commits/master.atom
   3. https://github.com/facebookresearch/tensorcomprehensions#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/facebookresearch/tensorcomprehensions
  32. https://github.com/join
  33. https://github.com/login?return_to=/facebookresearch/tensorcomprehensions
  34. https://github.com/facebookresearch/tensorcomprehensions/watchers
  35. https://github.com/login?return_to=/facebookresearch/tensorcomprehensions
  36. https://github.com/facebookresearch/tensorcomprehensions/stargazers
  37. https://github.com/login?return_to=/facebookresearch/tensorcomprehensions
  38. https://github.com/facebookresearch/tensorcomprehensions/network/members
  39. https://github.com/facebookresearch
  40. https://github.com/facebookresearch/tensorcomprehensions
  41. https://github.com/facebookresearch/tensorcomprehensions
  42. https://github.com/facebookresearch/tensorcomprehensions/issues
  43. https://github.com/facebookresearch/tensorcomprehensions/pulls
  44. https://github.com/facebookresearch/tensorcomprehensions/projects
  45. https://github.com/facebookresearch/tensorcomprehensions/pulse
  46. https://github.com/join?source=prompt-code
  47. https://facebookresearch.github.io/tensorcomprehensions/
  48. https://github.com/topics/machine-learning
  49. https://github.com/topics/domain-specific-language
  50. https://github.com/facebookresearch/tensorcomprehensions/commits/master
  51. https://github.com/facebookresearch/tensorcomprehensions/branches
  52. https://github.com/facebookresearch/tensorcomprehensions/releases
  53. https://github.com/facebookresearch/tensorcomprehensions/graphs/contributors
  54. https://github.com/facebookresearch/tensorcomprehensions/blob/master/license
  55. https://github.com/facebookresearch/tensorcomprehensions/search?l=c++
  56. https://github.com/facebookresearch/tensorcomprehensions/search?l=python
  57. https://github.com/facebookresearch/tensorcomprehensions/search?l=cmake
  58. https://github.com/facebookresearch/tensorcomprehensions/search?l=shell
  59. https://github.com/facebookresearch/tensorcomprehensions/find/master
  60. https://github.com/facebookresearch/tensorcomprehensions/archive/master.zip
  61. https://github.com/login?return_to=https://github.com/facebookresearch/tensorcomprehensions
  62. https://github.com/join?return_to=/facebookresearch/tensorcomprehensions
  63. https://desktop.github.com/
  64. https://desktop.github.com/
  65. https://developer.apple.com/xcode/
  66. https://visualstudio.github.com/
  67. https://github.com/skimo-openhub
  68. https://github.com/facebookresearch/tensorcomprehensions/commits?author=skimo-openhub
  69. https://github.com/facebookresearch/tensorcomprehensions/commit/220b5902645886fc2feac61770018419ca5411bc
  70. https://github.com/facebookresearch/tensorcomprehensions/pull/601
  71. https://github.com/facebookresearch/tensorcomprehensions/commit/220b5902645886fc2feac61770018419ca5411bc
  72. https://github.com/facebookresearch/tensorcomprehensions/commit/220b5902645886fc2feac61770018419ca5411bc
  73. https://github.com/facebookresearch/tensorcomprehensions/tree/220b5902645886fc2feac61770018419ca5411bc
  74. https://github.com/facebookresearch/tensorcomprehensions/tree/master/.circleci
  75. https://github.com/facebookresearch/tensorcomprehensions/tree/master/.github
  76. https://github.com/facebookresearch/tensorcomprehensions/commit/7dbb65b622d03e5d3a36578e81e781f1c9ad8d6c
  77. https://github.com/facebookresearch/tensorcomprehensions/tree/master/.jenkins
  78. https://github.com/facebookresearch/tensorcomprehensions/tree/master/cmake
  79. https://github.com/facebookresearch/tensorcomprehensions/tree/master/conda_recipes
  80. https://github.com/facebookresearch/tensorcomprehensions/commit/7dbb65b622d03e5d3a36578e81e781f1c9ad8d6c
  81. https://github.com/facebookresearch/tensorcomprehensions/tree/master/docs
  82. https://github.com/facebookresearch/tensorcomprehensions/commit/6865ad897d27db931d4f3f76160bccee6c80dee6
  83. https://github.com/facebookresearch/tensorcomprehensions/tree/master/external/isl
  84. https://github.com/facebookresearch/tensorcomprehensions/commit/99c0043f0cfadd484a4fbde1ead3a209765b03c1
  85. https://github.com/facebookresearch/tensorcomprehensions/tree/master/isl_interface
  86. https://github.com/facebookresearch/tensorcomprehensions/tree/master/python
  87. https://github.com/facebookresearch/tensorcomprehensions/commit/ecd85a193b10541ed1761dae8f6320d9a1899891
  88. https://github.com/facebookresearch/tensorcomprehensions/tree/master/tc
  89. https://github.com/facebookresearch/tensorcomprehensions/tree/master/tensor_comprehensions
  90. https://github.com/facebookresearch/tensorcomprehensions/commit/ecd85a193b10541ed1761dae8f6320d9a1899891
  91. https://github.com/facebookresearch/tensorcomprehensions/tree/master/test
  92. https://github.com/facebookresearch/tensorcomprehensions/commit/5eef9d7b1f4fa8b6f290f5dc1590541b82749ce7
  93. https://github.com/facebookresearch/tensorcomprehensions/tree/master/third-party
  94. https://github.com/facebookresearch/tensorcomprehensions/commit/5281e66e321255eb3161187eefd1809be139dabd
  95. https://github.com/facebookresearch/tensorcomprehensions/blob/master/.clang-format
  96. https://github.com/facebookresearch/tensorcomprehensions/blob/master/.gitignore
  97. https://github.com/facebookresearch/tensorcomprehensions/blob/master/.gitmodules
  98. https://github.com/facebookresearch/tensorcomprehensions/blob/master/build.md
  99. https://github.com/facebookresearch/tensorcomprehensions/blob/master/cmakelists.txt
 100. https://github.com/facebookresearch/tensorcomprehensions/blob/master/code_of_conduct.md
 101. https://github.com/facebookresearch/tensorcomprehensions/blob/master/contributing.md
 102. https://github.com/facebookresearch/tensorcomprehensions/commit/24d9a67ab1a52d136d1bbbccf19ef02f7a24ecba
 103. https://github.com/facebookresearch/tensorcomprehensions/blob/master/codeowners.md
 104. https://github.com/facebookresearch/tensorcomprehensions/blob/master/codingconventions.md
 105. https://github.com/facebookresearch/tensorcomprehensions/blob/master/license
 106. https://github.com/facebookresearch/tensorcomprehensions/blob/master/readme.md
 107. https://github.com/facebookresearch/tensorcomprehensions/blob/master/build.sh
 108. https://github.com/facebookresearch/tensorcomprehensions/blob/master/check_and_fix_format.sh
 109. https://github.com/facebookresearch/tensorcomprehensions/blob/master/check_format.sh
 110. https://github.com/facebookresearch/tensorcomprehensions/blob/master/setup.py
 111. https://github.com/facebookresearch/tensorcomprehensions/blob/master/test.sh
 112. https://github.com/facebookresearch/tensorcomprehensions/blob/master/test_cpu.sh
 113. https://github.com/facebookresearch/tensorcomprehensions/blob/master/docs/source/_static/img/tc-logo-full-color-with-text-2.png
 114. https://github.com/halide/halide
 115. http://isl.gforge.inria.fr/
 116. https://arxiv.org/abs/1802.04730
 117. https://github.com/caffe2/caffe2
 118. https://github.com/pytorch/pytorch/
 119. https://github.com/facebookresearch/tensorcomprehensions/blob/master/docs/source/_static/img/autotuning.png
 120. https://github.com/facebookresearch/tensorcomprehensions/blob/master/tc/examples/tensordot.cc
 121. https://facebookresearch.github.io/tensorcomprehensions/
 122. https://facebookresearch.github.io/tensorcomprehensions/api/
 123. https://facebookresearch.github.io/tensorcomprehensions/framework/pytorch_integration/getting_started.html
 124. https://facebookresearch.github.io/tensorcomprehensions/
 125. mailto:tensorcomp@fb.com
 126. https://tensorcomprehensions.herokuapp.com/
 127. https://github.com/facebookresearch/tensorcomprehensions/blob/master/code_of_conduct.md
 128. https://github.com/facebookresearch/tensorcomprehensions/blob/master/license
 129. https://github.com/facebookresearch/tensorcomprehensions/blob/master/contributing.md
 130. https://github.com/site/terms
 131. https://github.com/site/privacy
 132. https://github.com/security
 133. https://githubstatus.com/
 134. https://help.github.com/
 135. https://github.com/contact
 136. https://github.com/pricing
 137. https://developer.github.com/
 138. https://training.github.com/
 139. https://github.blog/
 140. https://github.com/about
 141. https://github.com/facebookresearch/tensorcomprehensions
 142. https://github.com/facebookresearch/tensorcomprehensions

   hidden links:
 144. https://github.com/
 145. https://github.com/facebookresearch/tensorcomprehensions
 146. https://github.com/facebookresearch/tensorcomprehensions
 147. https://github.com/facebookresearch/tensorcomprehensions
 148. https://help.github.com/articles/which-remote-url-should-i-use
 149. https://github.com/facebookresearch/tensorcomprehensions
 150. https://github.com/facebookresearch/tensorcomprehensions#a-simple-example
 151. https://github.com/facebookresearch/tensorcomprehensions#documentation
 152. https://github.com/facebookresearch/tensorcomprehensions#installation
 153. https://github.com/facebookresearch/tensorcomprehensions#binaries
 154. https://github.com/facebookresearch/tensorcomprehensions#from-source
 155. https://github.com/facebookresearch/tensorcomprehensions#communication
 156. https://github.com/facebookresearch/tensorcomprehensions#code-of-conduct
 157. https://github.com/facebookresearch/tensorcomprehensions#license
 158. https://github.com/facebookresearch/tensorcomprehensions#contributing
 159. https://github.com/
