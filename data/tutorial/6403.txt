   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]towards data science
     * [9]data science
     * [10]machine learning
     * [11]programming
     * [12]visualization
     * [13]ai
     * [14]data journalism
     * [15]contribute
     __________________________________________________________________

multiple sequence alignment using clustal omega and t-coffee

sequence alignment of 3 or more biological sequences

   [16]go to the profile of vijini mallawaarachchi
   [17]vijini mallawaarachchi (button) blockedunblock (button)
   followfollowing
   sep 22, 2017

   have you wondered how scientists identify regions of similarity in
   three or more biological sequences? as described in my [18]previous
   article, sequence alignment is a method of arranging sequences of dna,
   rna, or protein to identify regions of similarity. in my latest article
   on bioinformatics, i have discussed about [19]pairwise sequence
   alignment. make sure to check them out as well. multiple sequence
   alignment is quite similar to pairwise sequence alignment, but it uses
   three or more sequences instead of only two sequences.

   in this article, i will be walking you through multiple sequence
   alignment. furthermore, we will be trying out some examples with
   clustal omega and t-coffee whicle checking out some coding examples
   with biopython.
   [1*cpnlejxfw3j2oau9kv9oyg.png]
   figure 1: results from t-coffee

what is multiple sequence alignment?

   in multiple sequence alignment (msa) we try to align three or more
   related sequences so as to achieve maximal matching between them. the
   goal of msa is to arrange a set of sequences in such a way that as many
   characters from each sequence are matched according to some scoring
   function.
   [0*bkaomvm5ln1kllao.png]
   figure 2: image source:
   [20]https://openi.nlm.nih.gov/detailedresult.php?img=pmc2921379_1756-05
   00-3-199-1&req=4

scoring

   the scoring process of msa is based on the sum of the scores of all
   possible pairs of sequences in the multiple alignment according to some
   scoring matrix. you can refer my [21]previous article to learn about
   the different scoring matrices and how to match them.

     score of multiple alignment =     score(a, b)

   where score(a, b) = pair-wise alignment score of a, b.

example

sequence 1:    g   k   n
sequence 2:    t   r   n
sequence 3:    s   h   e
sum of pairs: -1 + 1 + 6 = 6

   sum of 2nd col = score (k, r) + score (r, h) + score (k, h) = 2+0+-1 =
   1

   the goal of msa is to achieve the maximum sum of pairs.

types of multiple sequence alignment

   aligning three or more sequences can be difficult and are almost always
   time-consuming to align manually. hence computational algorithms are
   used to produce and analyze these alignments. most msa algorithms use
   [22]id145 and [23]heuristic methods.

   given below are msa techniques which use heuristic methods.
    1. progressive alignment construction
    2. iterative alignment construction
    3. block-base alignment

   these methods can find solutions among all possible solutions, but they
   do not guarantee that the best solution will be found. hence they are
   considered as approximations but we can easily find a solution close to
   the actual one within a short time.

progressive alignment construction

   this method, also known as the hierarchical or tree method, was
   developed by paulien hogeweg and ben hesper in 1984. it builds up a
   final msa by combining pairwise alignments beginning with the most
   similar pair and progressing to the most distantly related pair.

   two of the popular progressive alignment methods used at present are,
    1. [24]clustal omega
    2. [25]t-coffee

iterative alignment construction

   this method consists of a set of methods to produce msas while reducing
   the errors inherent in progressive methods. they work similarly to
   progressive methods, but repeatedly realign the initial sequences as
   well as add new sequences to the growing msa.

   the software package [26]prrn/prrp is based on a [27]hill-climbing
   algorithm to optimize its msa alignment score.

block-base alignment

   this method divides the sequences into blocks and tries to identify
   blocks of un-gapped alignments shared by many sequences.

   [28]dialign2 is a popular block-base alignment approach .

time to practice

   the time you have been waiting for has arrived. it is time to try out
   some tools and examples. i will be using [29]clustal omega and
   [30]t-coffee to show you a few examples of msa. you can try out these
   tools online.

clustal omega

   go to [31]http://www.ebi.ac.uk/tools/msa/clustalo/.
   [1*btz6gnh_768javtcqze7gq.png]
   figure 3: clustal omega

   you will get a page to select the type of data (protein, dna or rna),
   enter the sequences (or upload a file of a supported format) and set
   the output format.

   i will be using the following 10 genome sequences (dna) of acanthaster
   planci (commonly known as [32]crown-of-thorns starfish) for this
   demonstration. you can download the complete genome for an organism
   from [33]here, in .fsa format.

     an fsa file (.fsa) is a fragment analysis data file created by dna
     sequencers and analyzers.

   iframe: [34]/media/eaac94d4d8dec85c0d75177800365820?postid=3cc662b1ea82

   10 sequences from the genome of acanthaster planci (commonly known as
   crown-of-thorns starfish)

   after entering the sequences and selecting the parameters, you can
   submit your job. the results of the job can be viewed as follows. you
   can check the results for this example from [35]here.
   [1*usoicksuuyhvhfdl67hpsa.png]
   figure 4: results of the job on clustal omega

   you can download the results as an alignment file with the .aln
   extension by clicking on the download alignment file button.

t-coffee

   go to [36]http://tcoffee.crg.cat/apps/tcoffee/index.html.
   [1*aooksdlragwvsefm2wtntg.png]
   figure 5: t-coffee

   for this demonstration, i have selected combine popular aligners
   (m-coffee) under dna section. then you will get a page to enter the
   sequences (or upload a file of supported format).
   [1*cl3zby0m6rzzmo2f_xuqeg.png]
   figure 6: m-coffee input page

   i will be using the same file i used to demonstrate clustal omega.
   after entering the sequences, you can submit your job. the results of
   the job can be viewed as follows. you can check the results for this
   example from [37]here.
   [1*8lfp2vmpxgottkc22mfxgw.png]
   figure 7: results for the job on t-coffee

biopython wrappers for clustal omega and t-coffee

   [38]biopython, which i had introduced in my [39]previous article,
   consists of command line wrappers for clustal omega, t-coffee and many
   other tools such as clustalw and dialign. you can check out all the
   wrappers and sample code from [40]here. i will show how to use the
   clustal omega wrapper in the next example.

   to run the clustal omega wrapper, first you should download its
   precompiled binaries. you can download them from [41]here. a binary
   file will be downloaded. you can make it an executable using the
   command given below. the name of the binary file may vary according to
   the binary file version you have downloaded. in my machine it was
   downloaded as clustal-omega-1.2.3-macosx.
chmod 777 clustal-omega-1.2.3-macosx

   i will be using the same .fsa file used before, for this example as
   well.

   the following code uses the clustal omega wrapper to develop msa for
   the given input .fsa file. it will be easy if you have the .fsa
   file, .py file and the executable binary in the same location.

   iframe: [42]/media/11c3f32e876631db6a3cb92163991384?postid=3cc662b1ea82

   after running this python code you will get a command as output. the
   path may change according to where you put your files.
clustalo -i /users/vijinimallawaarachchi/documents/python/acanthaster_planci_gno
mon.fsa -o aligned.fasta     auto -v

   [1*9mid122ujbmdbvqu7ibeqjqg.png]
   figure 8: output command

   now execute the downloaded binary file with the shown command as
   follows. make sure to replace clustalo by ./clustal-omega-1.2.3-macosx
./clustal-omega-1.2.3-macosx -i /users/vijinimallawaarachchi/documents/python/ac
anthaster_planci_gnomon.fsa -o aligned.fasta --auto -v

   you will get the following results saying that progressive alignment
   has been done.
   [1*da7el-5lcxazkdlgqf8k1w.png]
   figure 9: final result

   now you can see that a file named as aligned.fasta has been formed in
   the same location as your files are. once you open it, you can see the
   alignments in fasta format.

     fasta format is a text-based format for representing either
     nucleotide sequences or peptide sequences, in which nucleotides or
     amino acids are represented using single-letter codes. the format
     also allows for sequence names and comments to precede the
     sequences. the format originates from the [43]fasta software
     package, but has now become a standard in the field of
     bioinformatics.

   [1*tdeycfxksswbgr30pxekdq.png]
   figure 10: output file in fasta format
     __________________________________________________________________

   hope you enjoyed reading this article and learned something useful and
   interesting.

   since i   m still very new to this field, i would like to hear your
   advice.     

   thanks for reading        

     * [44]bioinformatics
     * [45]science
     * [46]data science
     * [47]algorithms
     * [48]towards data science

   (button)
   (button)
   (button) 247 claps
   (button) (button) (button) 5 (button) (button)

     (button) blockedunblock (button) followfollowing
   [49]go to the profile of vijini mallawaarachchi

[50]vijini mallawaarachchi

   phd student at australian national university | loves bioinformatics,
   data science, music & astronomy

     (button) follow
   [51]towards data science

[52]towards data science

   sharing concepts, ideas, and codes.

     * (button)
       (button) 247
     * (button)
     *
     *

   [53]towards data science
   never miss a story from towards data science, when you sign up for
   medium. [54]learn more
   never miss a story from towards data science
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://towardsdatascience.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/3cc662b1ea82
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://towardsdatascience.com/multiple-sequence-alignment-using-clustal-omega-and-t-coffee-3cc662b1ea82&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://towardsdatascience.com/multiple-sequence-alignment-using-clustal-omega-and-t-coffee-3cc662b1ea82&source=--------------------------nav_reg&operation=register
   8. https://towardsdatascience.com/?source=logo-lo_im8guatlnp8b---7f60cf5620c9
   9. https://towardsdatascience.com/data-science/home
  10. https://towardsdatascience.com/machine-learning/home
  11. https://towardsdatascience.com/programming/home
  12. https://towardsdatascience.com/data-visualization/home
  13. https://towardsdatascience.com/artificial-intelligence/home
  14. https://towardsdatascience.com/data-journalism/home
  15. https://towardsdatascience.com/contribute/home
  16. https://towardsdatascience.com/@vijinimallawaarachchi?source=post_header_lockup
  17. https://towardsdatascience.com/@vijinimallawaarachchi
  18. https://medium.com/towards-data-science/dna-sequence-data-analysis-starting-off-in-bioinformatics-3dba4cea04f
  19. https://medium.com/towards-data-science/pairwise-sequence-alignment-using-biopython-d1a9d0ba861f
  20. https://openi.nlm.nih.gov/detailedresult.php?img=pmc2921379_1756-0500-3-199-1&req=4
  21. https://medium.com/towards-data-science/pairwise-sequence-alignment-using-biopython-d1a9d0ba861f
  22. https://en.wikipedia.org/wiki/dynamic_programming
  23. https://en.wikipedia.org/wiki/heuristic
  24. http://www.ebi.ac.uk/tools/msa/clustalo/
  25. http://tcoffee.crg.cat/apps/tcoffee/index.html
  26. http://www.genome.jp/tools/prrn/
  27. https://en.wikipedia.org/wiki/hill-climbing_algorithm
  28. https://www.ncbi.nlm.nih.gov/pubmed/10222408
  29. http://www.ebi.ac.uk/tools/msa/clustalo/
  30. http://tcoffee.crg.cat/
  31. http://www.ebi.ac.uk/tools/msa/clustalo/
  32. https://en.wikipedia.org/wiki/crown-of-thorns_starfish
  33. https://www.ncbi.nlm.nih.gov/guide/howto/dwn-genome/
  34. https://towardsdatascience.com/media/eaac94d4d8dec85c0d75177800365820?postid=3cc662b1ea82
  35. http://www.ebi.ac.uk/tools/services/web/toolresult.ebi?jobid=clustalo-i20170922-134518-0538-73689021-p2m
  36. http://tcoffee.crg.cat/apps/tcoffee/index.html
  37. http://tcoffee.crg.cat/apps/tcoffee/result?rid=3666c6c4
  38. http://biopython.org/
  39. https://medium.com/towards-data-science/pairwise-sequence-alignment-using-biopython-d1a9d0ba861f
  40. http://biopython.org/dist/docs/api/bio.align-module.html
  41. http://www.clustal.org/omega/
  42. https://towardsdatascience.com/media/11c3f32e876631db6a3cb92163991384?postid=3cc662b1ea82
  43. https://en.wikipedia.org/wiki/fasta
  44. https://towardsdatascience.com/tagged/bioinformatics?source=post
  45. https://towardsdatascience.com/tagged/science?source=post
  46. https://towardsdatascience.com/tagged/data-science?source=post
  47. https://towardsdatascience.com/tagged/algorithms?source=post
  48. https://towardsdatascience.com/tagged/towards-data-science?source=post
  49. https://towardsdatascience.com/@vijinimallawaarachchi?source=footer_card
  50. https://towardsdatascience.com/@vijinimallawaarachchi
  51. https://towardsdatascience.com/?source=footer_card
  52. https://towardsdatascience.com/?source=footer_card
  53. https://towardsdatascience.com/
  54. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  56. https://medium.com/p/3cc662b1ea82/share/twitter
  57. https://medium.com/p/3cc662b1ea82/share/facebook
  58. https://medium.com/p/3cc662b1ea82/share/twitter
  59. https://medium.com/p/3cc662b1ea82/share/facebook
