   #[1]github [2]recent commits to ntp:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]5
     * [35]star [36]42
     * [37]fork [38]10

[39]uclmr/[40]ntp

   [41]code [42]issues 1 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   end-to-end differentiable proving
   [47]tensorflow [48]nips-2017 [49]deep-learning [50]prolog
     * [51]7 commits
     * [52]1 branch
     * [53]0 releases
     * [54]fetching contributors
     * [55]apache-2.0

    1. [56]newlisp 83.1%
    2. [57]python 16.9%

   (button) newlisp python
   branch: master (button) new pull request
   [58]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/u
   [59]download zip

downloading...

   want to be notified of new releases in uclmr/ntp?
   [60]sign in [61]sign up

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [64]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [65]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [66]permalink
   type         name         latest commit message commit time
        failed to load latest commit information.
        [67]conf
        [68]data
        [69]docs
        [70]models
        [71]ntp
        [72]tests
        [73].gitignore
        [74]license
        [75]readme.md
        [76]requirements.txt

readme.md

end-to-end differentiable proving

   this is an implementation of the paper [77]end-to-end differentiable
   proving. for a high-level introduction, see the [78]nips oral,
   [79]slides and [80]poster.

disclaimer

   please note that this software is not maintained. it is
   highly-experimental research code, not well documented and we provide
   no warranty of any kind. use at your own risk!

data format

   data for the ntp is in nl format - basically prolog syntax:
ntp$ head data/countries/countries.nl
locatedin(palau,micronesia).
locatedin(palau,oceania).
locatedin(maldives,southern_asia).
locatedin(maldives,asia).
locatedin(brunei,south-eastern_asia).
locatedin(brunei,asia).
neighborof(brunei,malaysia).
locatedin(japan,eastern_asia).
locatedin(japan,asia).
locatedin(netherlands,western_europe).

     * *.nl files represent facts and rules (example of a rule: isa(x,y)
       :- isa(x,z), isa(z,y))
     * *.nlt files represent rule templates (example of a rule template:
       #1(x,y) :- #2(x,z), #3(z,y))

ntp$ cat data/ntp/simpsons.nlt
5   #1(x, y) :- #2(x, y).

5   #1(x, y) :- #1(y, x).

5   #1(x, y) :-
    #2(x, z),
    #2(z, y).

running

   the main file for running ntp is ntp/experiments/learn.py which takes
   the path to a configuration file as argument.

code structure

   the core implementation of the ntp can be found [81]here.

   the base models (neural link predictors) are implemented [82]here.

   imortant "modules" are [83]unify, [84]this one and [85]this one. it
   should pretty much reflect the pseudocode in the paper.

   the tricky part is the tiling of batched representations for batch
   proving - check out [86]this.

   however, this tiling needs to happen at various points in the code,
   e.g. [87]here

   implementation of tiling (and multiplexing) [88]here and [89]here.

   an important trick in ntp for proving in larger kbs and usin complex
   rules, is the kmax heuristic, implemented [90]here.

   there is a symbolic prover implementation [91]here
     * it is probably worthwile to look at it first, and compare to ntp.

test

nosetests

contributors

     * [92]tim rockt  schel
     * [93]sebastian riedel
     * [94]pasquale minervini
     * [95]matko bosnjak
     * [96]johannes welbl

citation

@inproceedings{rocktaschel2017end,
  author    = {tim rockt{\"{a}}schel and
               sebastian riedel},
  title     = {end-to-end differentiable proving},
  booktitle = {advances in neural information processing systems 30: annual conf
erence
               on neural information processing systems 2017, 4-9 december 2017,
               long beach, ca, {usa}},
  pages     = {3791--3803},
  year      = {2017},
  url       = {http://papers.nips.cc/paper/6969-end-to-end-differentiable-provin
g},
}

     *    2019 github, inc.
     * [97]terms
     * [98]privacy
     * [99]security
     * [100]status
     * [101]help

     * [102]contact github
     * [103]pricing
     * [104]api
     * [105]training
     * [106]blog
     * [107]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [108]reload to refresh your
   session. you signed out in another tab or window. [109]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/uclmr/ntp/commits/master.atom
   3. https://github.com/uclmr/ntp#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/uclmr/ntp
  32. https://github.com/join
  33. https://github.com/login?return_to=/uclmr/ntp
  34. https://github.com/uclmr/ntp/watchers
  35. https://github.com/login?return_to=/uclmr/ntp
  36. https://github.com/uclmr/ntp/stargazers
  37. https://github.com/login?return_to=/uclmr/ntp
  38. https://github.com/uclmr/ntp/network/members
  39. https://github.com/uclmr
  40. https://github.com/uclmr/ntp
  41. https://github.com/uclmr/ntp
  42. https://github.com/uclmr/ntp/issues
  43. https://github.com/uclmr/ntp/pulls
  44. https://github.com/uclmr/ntp/projects
  45. https://github.com/uclmr/ntp/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/tensorflow
  48. https://github.com/topics/nips-2017
  49. https://github.com/topics/deep-learning
  50. https://github.com/topics/prolog
  51. https://github.com/uclmr/ntp/commits/master
  52. https://github.com/uclmr/ntp/branches
  53. https://github.com/uclmr/ntp/releases
  54. https://github.com/uclmr/ntp/graphs/contributors
  55. https://github.com/uclmr/ntp/blob/master/license
  56. https://github.com/uclmr/ntp/search?l=newlisp
  57. https://github.com/uclmr/ntp/search?l=python
  58. https://github.com/uclmr/ntp/find/master
  59. https://github.com/uclmr/ntp/archive/master.zip
  60. https://github.com/login?return_to=https://github.com/uclmr/ntp
  61. https://github.com/join?return_to=/uclmr/ntp
  62. https://desktop.github.com/
  63. https://desktop.github.com/
  64. https://developer.apple.com/xcode/
  65. https://visualstudio.github.com/
  66. https://github.com/uclmr/ntp/tree/23687f5ccbb089ed78b4bcef5d055091408ee8d2
  67. https://github.com/uclmr/ntp/tree/master/conf
  68. https://github.com/uclmr/ntp/tree/master/data
  69. https://github.com/uclmr/ntp/tree/master/docs
  70. https://github.com/uclmr/ntp/tree/master/models
  71. https://github.com/uclmr/ntp/tree/master/ntp
  72. https://github.com/uclmr/ntp/tree/master/tests
  73. https://github.com/uclmr/ntp/blob/master/.gitignore
  74. https://github.com/uclmr/ntp/blob/master/license
  75. https://github.com/uclmr/ntp/blob/master/readme.md
  76. https://github.com/uclmr/ntp/blob/master/requirements.txt
  77. http://papers.nips.cc/paper/6969-end-to-end-differentiable-proving.pdf
  78. https://www.youtube.com/watch?v=wwwqxtb_69c&t=1700s
  79. https://rockt.github.io/pdf/rocktaschel2017end-slides.pdf
  80. https://rockt.github.io/pdf/rocktaschel2017end-poster.pdf
  81. https://github.com/uclmr/ntp/blob/master/ntp/prover.py
  82. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l253
  83. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l195
  84. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l195
  85. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l470
  86. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l160
  87. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l492
  88. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l319
  89. https://github.com/uclmr/ntp/blob/master/ntp/prover.py#l346
  90. https://github.com/uclmr/ntp/blob/master/ntp/kmax.py
  91. https://github.com/uclmr/ntp/blob/master/ntp/tp.py
  92. https://rockt.github.com/
  93. http://www.riedelcastro.org/
  94. http://www.neuralnoise.com/
  95. http://matko.info/
  96. https://jowel.gitlab.io/welbl/
  97. https://github.com/site/terms
  98. https://github.com/site/privacy
  99. https://github.com/security
 100. https://githubstatus.com/
 101. https://help.github.com/
 102. https://github.com/contact
 103. https://github.com/pricing
 104. https://developer.github.com/
 105. https://training.github.com/
 106. https://github.blog/
 107. https://github.com/about
 108. https://github.com/uclmr/ntp
 109. https://github.com/uclmr/ntp

   hidden links:
 111. https://github.com/
 112. https://github.com/uclmr/ntp
 113. https://github.com/uclmr/ntp
 114. https://github.com/uclmr/ntp
 115. https://help.github.com/articles/which-remote-url-should-i-use
 116. https://github.com/uclmr/ntp#end-to-end-differentiable-proving
 117. https://github.com/uclmr/ntp#disclaimer
 118. https://github.com/uclmr/ntp#data-format
 119. https://github.com/uclmr/ntp#running
 120. https://github.com/uclmr/ntp#code-structure
 121. https://github.com/uclmr/ntp#test
 122. https://github.com/uclmr/ntp#contributors
 123. https://github.com/uclmr/ntp#citation
 124. https://github.com/
