   #[1]github [2]recent commits to pysc2:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]375
     * [35]star [36]5,872
     * [37]fork [38]852

[39]deepmind/[40]pysc2

   [41]code [42]issues 38 [43]pull requests 2 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   starcraft ii learning environment
   [47]reinforcement-learning [48]machine-learning [49]starcraft-ii
   [50]starcraft-ii-replays [51]deepmind [52]blizzard-api
     * [53]297 commits
     * [54]2 branches
     * [55]6 releases
     * [56]fetching contributors
     * [57]apache-2.0

    1. [58]python 100.0%

   (button) python
   branch: master (button) new pull request
   [59]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/d
   [60]download zip

downloading...

   want to be notified of new releases in deepmind/pysc2?
   [61]sign in [62]sign up

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [65]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [66]download the github extension for visual studio
   and try again.

   (button) go back
   [67]@tewalds
   [68]tewalds [69]bump the current version to 2.0.2. it's been released
   for a few month    (button)    
   s, so give it an official release on pypi before pushing fresh code with bug fi
xes, new features and of course, potential new bugs.

piperorigin-revid: 235572060

   latest commit [70]df4cc4b feb 25, 2019
   [71]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [72]docs [73]add an index with easier access to information may 29,
   2018
   [74]pysc2
   [75].gitignore
   [76]contributing.md
   [77]license [78]initial commit. aug 9, 2017
   [79]readme.md [80]add a script to run the tests. jan 31, 2018
   [81]setup.py

readme.md

    [82]deepmind open source pysc2 toolset for starcraft ii [83]starcraft
    ii 'mini games' for ai research [84]trained and untrained agents play
                          starcraft ii 'mini-game'

pysc2 - starcraft ii learning environment

   [85]pysc2 is [86]deepmind's python component of the starcraft ii
   learning environment (sc2le). it exposes [87]blizzard entertainment's
   [88]starcraft ii machine learning api as a python rl environment. this
   is a collaboration between deepmind and blizzard to develop starcraft
   ii into a rich environment for rl research. pysc2 provides an interface
   for rl agents to interact with starcraft 2, getting observations and
   sending actions.

   we have published an accompanying [89]blogpost and [90]paper, which
   outlines our motivation for using starcraft ii for deeprl research, and
   some initial research results using the environment.

about

   disclaimer: this is not an official google product.

   if you use the starcraft ii machine learning api and/or pysc2 in your
   research, please cite the [91]starcraft ii paper

   you can reach us at [92]pysc2@deepmind.com.

quick start guide

get pysc2

pypi

   the easiest way to get pysc2 is to use pip:
$ pip install pysc2

   that will install the pysc2 package along with all the required
   dependencies. [93]virtualenv can help manage your dependencies. you may
   also need to upgrade pip: pip install --upgrade pip for the pysc2
   install to work. if you're running on an older system you may need to
   install libsdl libraries for the pygame dependency.

   pip will install a few of the binaries to your bin directory.
   pysc2_play can be used as a shortcut to python -m pysc2.bin.play.

git

   alternatively you can install pysc2 with git. first clone the pysc2
   repo, then install the dependencies and pysc2 package:
$ git clone https://github.com/deepmind/pysc2.git
$ pip install pysc2/

get starcraft ii

   pysc2 depends on the full starcraft ii game and only works with
   versions that include the api, which is 3.16.1 and above.

linux

   follow blizzard's [94]documentation to get the linux version. by
   default, pysc2 expects the game to live in ~/starcraftii/. you can
   override this path by setting the sc2path environment variable or
   creating your own run_config.

windows/macos

   install of the game as normal from [95]battle.net. even the [96]starter
   edition will work. if you used the default install location pysc2
   should find the latest binary. if you changed the install location, you
   might need to set the sc2path environment variable with the correct
   location.

   pysc2 should work on macos and windows systems running python 2.7+ or
   3.4+, but has only been thoroughly tested on linux. we welcome
   suggestions and patches for better compatibility with other systems.

get the maps

   pysc2 has many maps pre-configured, but they need to be downloaded into
   the sc2 maps directory before they can be played.

   download the [97]ladder maps and the [98]mini games and extract them to
   your starcraftii/maps/ directory.

run an agent

   you can run an agent to test the environment. the ui shows you the
   actions of the agent and is helpful for debugging and visualization
   purposes.
$ python -m pysc2.bin.agent --map simple64

   it runs a random agent by default, but you can specify others if you'd
   like, including your own.
$ python -m pysc2.bin.agent --map collectmineralshards --agent pysc2.agents.scri
pted_agent.collectmineralshards

   you can also run two agents against each other.
$ python -m pysc2.bin.agent --map simple64 --agent2 pysc2.agents.random_agent.ra
ndomagent

   to specify the agent's race, the opponent's difficulty, and more, you
   can pass additional flags. run with --help to see what you can change.

play the game as a human

   there is a human agent interface which is mainly used for debugging,
   but it can also be used to play the game. the ui is fairly simple and
   incomplete, but it's enough to understand the basics of the game. also,
   it runs on linux.
$ python -m pysc2.bin.play --map simple64

   in the ui, hit ? for a list of the hotkeys. the most basic ones are: f4
   to quit, f5 to restart, f9 to save a replay, and pgup/pgdn to control
   the speed of the game. otherwise use the mouse for selection and
   keyboard for commands listed on the left.

   the left side is a basic rendering. the right side is the feature
   layers that the agent receives, with some coloring to make it more
   useful to us. you can enable or disable rgb or feature layer rendering
   and their resolutions with command-line flags.

watch a replay

   running an agent and playing as a human save a replay by default. you
   can watch that replay by running:
$ python -m pysc2.bin.play --replay <path-to-replay>

   this works for any replay as long as the map can be found by the game.

   the same controls work as for playing the game, so f4 to exit,
   pgup/pgdn to control the speed, etc.

   you can save a video of the replay with the --video flag.

list the maps

   [99]maps need to be configured before they're known to the environment.
   you can see the list of known maps by running:
$ python -m pysc2.bin.map_list

run the tests

   if you want to submit a pull request, please make sure the tests pass
   on both python 2 and 3.
$ python -m pysc2.bin.run_tests

environment details

   for a full description of the specifics of how the environment is
   configured, the observations and action spaces work read the
   [100]environment documentation.

mini-game maps

   the mini-game map files referenced in the paper are stored under
   pysc2/maps/ but must be installed in $sc2path/maps. make sure to follow
   the download instructions above.

   maps are configured in the python files in pysc2/maps/. the configs can
   set player and time limits, whether to use the game outcome or
   curriculum score, and a handful of other things. for more information
   about the maps, and how to configure your own, read the [101]maps
   documentation.

replays

   a replay lets you review what happened during a game. you can see the
   actions and observations that each player made as they played.

   blizzard is releasing a large number of anonymized 1v1 replays played
   on the ladder. you can find instructions for how to get the [102]replay
   files on their site. you can also review your own replays.

   replays can be played back to get the observations and actions made
   during that game. the observations are rendered at the resolution you
   request, so may differ from what the human actually saw. similarly the
   actions specify a point, which could reflect a different pixel on the
   human's screen, so may not have an exact match in our observations,
   though they should be fairly similar.

   replays are version dependent, so a 3.16 replay will fail in a 3.16.1
   or 3.17 binary.

   you can visualize the replays with the full game, or with
   pysc2.bin.play. alternatively you can run pysc2.bin.replay_actions to
   process many replays in parallel.

     *    2019 github, inc.
     * [103]terms
     * [104]privacy
     * [105]security
     * [106]status
     * [107]help

     * [108]contact github
     * [109]pricing
     * [110]api
     * [111]training
     * [112]blog
     * [113]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [114]reload to refresh your
   session. you signed out in another tab or window. [115]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/deepmind/pysc2/commits/master.atom
   3. https://github.com/deepmind/pysc2#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/deepmind/pysc2
  32. https://github.com/join
  33. https://github.com/login?return_to=/deepmind/pysc2
  34. https://github.com/deepmind/pysc2/watchers
  35. https://github.com/login?return_to=/deepmind/pysc2
  36. https://github.com/deepmind/pysc2/stargazers
  37. https://github.com/login?return_to=/deepmind/pysc2
  38. https://github.com/deepmind/pysc2/network/members
  39. https://github.com/deepmind
  40. https://github.com/deepmind/pysc2
  41. https://github.com/deepmind/pysc2
  42. https://github.com/deepmind/pysc2/issues
  43. https://github.com/deepmind/pysc2/pulls
  44. https://github.com/deepmind/pysc2/projects
  45. https://github.com/deepmind/pysc2/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/reinforcement-learning
  48. https://github.com/topics/machine-learning
  49. https://github.com/topics/starcraft-ii
  50. https://github.com/topics/starcraft-ii-replays
  51. https://github.com/topics/deepmind
  52. https://github.com/topics/blizzard-api
  53. https://github.com/deepmind/pysc2/commits/master
  54. https://github.com/deepmind/pysc2/branches
  55. https://github.com/deepmind/pysc2/releases
  56. https://github.com/deepmind/pysc2/graphs/contributors
  57. https://github.com/deepmind/pysc2/blob/master/license
  58. https://github.com/deepmind/pysc2/search?l=python
  59. https://github.com/deepmind/pysc2/find/master
  60. https://github.com/deepmind/pysc2/archive/master.zip
  61. https://github.com/login?return_to=https://github.com/deepmind/pysc2
  62. https://github.com/join?return_to=/deepmind/pysc2
  63. https://desktop.github.com/
  64. https://desktop.github.com/
  65. https://developer.apple.com/xcode/
  66. https://visualstudio.github.com/
  67. https://github.com/tewalds
  68. https://github.com/deepmind/pysc2/commits?author=tewalds
  69. https://github.com/deepmind/pysc2/commit/df4cc4b00f07a2242be9ba153d4a7f4ad2017897
  70. https://github.com/deepmind/pysc2/commit/df4cc4b00f07a2242be9ba153d4a7f4ad2017897
  71. https://github.com/deepmind/pysc2/tree/df4cc4b00f07a2242be9ba153d4a7f4ad2017897
  72. https://github.com/deepmind/pysc2/tree/master/docs
  73. https://github.com/deepmind/pysc2/commit/961f8226406c7656a8378600285d1847dd8c9bc5
  74. https://github.com/deepmind/pysc2/tree/master/pysc2
  75. https://github.com/deepmind/pysc2/blob/master/.gitignore
  76. https://github.com/deepmind/pysc2/blob/master/contributing.md
  77. https://github.com/deepmind/pysc2/blob/master/license
  78. https://github.com/deepmind/pysc2/commit/b21d365c0a169518c63219156c667a4ac7f26c18
  79. https://github.com/deepmind/pysc2/blob/master/readme.md
  80. https://github.com/deepmind/pysc2/commit/63fbc917dcf0e95754062900a1e9b32a0233dedf
  81. https://github.com/deepmind/pysc2/blob/master/setup.py
  82. https://www.youtube.com/watch?v=-fkuyt14g-8
  83. https://www.youtube.com/watch?v=6l448yg0sm0
  84. https://www.youtube.com/watch?v=weozide5xfc
  85. https://github.com/deepmind/pysc2
  86. http://deepmind.com/
  87. http://blizzard.com/
  88. https://github.com/blizzard/s2client-proto
  89. https://deepmind.com/blog/deepmind-and-blizzard-open-starcraft-ii-ai-research-environment/
  90. https://arxiv.org/abs/1708.04782
  91. https://arxiv.org/abs/1708.04782
  92. mailto:pysc2@deepmind.com
  93. https://pypi.python.org/pypi/virtualenv
  94. https://github.com/blizzard/s2client-proto#downloads
  95. https://battle.net/
  96. http://battle.net/sc2/en/legacy-of-the-void/
  97. https://github.com/blizzard/s2client-proto#downloads
  98. https://github.com/deepmind/pysc2/releases/download/v1.2/mini_games.zip
  99. https://github.com/deepmind/pysc2/blob/master/docs/maps.md
 100. https://github.com/deepmind/pysc2/blob/master/docs/environment.md
 101. https://github.com/deepmind/pysc2/blob/master/docs/maps.md
 102. https://github.com/blizzard/s2client-proto#downloads
 103. https://github.com/site/terms
 104. https://github.com/site/privacy
 105. https://github.com/security
 106. https://githubstatus.com/
 107. https://help.github.com/
 108. https://github.com/contact
 109. https://github.com/pricing
 110. https://developer.github.com/
 111. https://training.github.com/
 112. https://github.blog/
 113. https://github.com/about
 114. https://github.com/deepmind/pysc2
 115. https://github.com/deepmind/pysc2

   hidden links:
 117. https://github.com/
 118. https://github.com/deepmind/pysc2
 119. https://github.com/deepmind/pysc2
 120. https://github.com/deepmind/pysc2
 121. https://help.github.com/articles/which-remote-url-should-i-use
 122. https://github.com/deepmind/pysc2#pysc2---starcraft-ii-learning-environment
 123. https://github.com/deepmind/pysc2#about
 124. https://github.com/deepmind/pysc2#quick-start-guide
 125. https://github.com/deepmind/pysc2#get-pysc2
 126. https://github.com/deepmind/pysc2#pypi
 127. https://github.com/deepmind/pysc2#git
 128. https://github.com/deepmind/pysc2#get-starcraft-ii
 129. https://github.com/deepmind/pysc2#linux
 130. https://github.com/deepmind/pysc2#windowsmacos
 131. https://github.com/deepmind/pysc2#get-the-maps
 132. https://github.com/deepmind/pysc2#run-an-agent
 133. https://github.com/deepmind/pysc2#play-the-game-as-a-human
 134. https://github.com/deepmind/pysc2#watch-a-replay
 135. https://github.com/deepmind/pysc2#list-the-maps
 136. https://github.com/deepmind/pysc2#run-the-tests
 137. https://github.com/deepmind/pysc2#environment-details
 138. https://github.com/deepmind/pysc2#mini-game-maps
 139. https://github.com/deepmind/pysc2#replays
 140. https://github.com/
