   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]towards data science
     * [9]data science
     * [10]machine learning
     * [11]programming
     * [12]visualization
     * [13]ai
     * [14]data journalism
     * [15]contribute
     __________________________________________________________________

   [1*wdfcpuigtu_54xhqhrvorw.png]

visualize world trends using seaborn in python

   [16]go to the profile of sambit mahapatra
   [17]sambit mahapatra (button) blockedunblock (button) followfollowing
   feb 18, 2018

   study and analysis of the data is the very first step of any data
   science work. you need to get the general information about the nature
   and distribution of the data to plan your workflow accordingly. this is
   where visualization comes in as we say    a picture says thousand words   .
   with informative plots, it is easier to gain insights from the data and
   also to convey the insights to others.

   in this post, we will see how to gain insights about world trends data
   using rich visualization. the data-set contains the country names, with
   country codes, stats of internet users, birth rates and life expectancy
   in 1960 and 2013. the data set and codes can be found in the github
   link-
   [18]sambit9238/datascience
   contribute to datascience development by creating an account on
   github.github.com

   before analyzing data, we need to import all the required dependencies
   first. for rich visualization, we will use seaborn here which works on
   the matplotlib library to give fancier and informative plots.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

   here i am using python 3.5, numpy 1.13, pandas 0.18, matplotlib 1.5,
   seaborn 0.8 and statsmodel 0.8.0 . while doing anything i always face a
   problem of so many deprecation warnings due to some updates in the
   packages or for version compatibility etc. these may look so
   frustrating while coding. let   s ignore all the warnings, so that it
   won   t display on the screen.
import warnings
warnings.filterwarnings("ignore")

   now first load the data to a data frame using the read_csv function of
   pandas.
df = pd.read_csv("world_trend_survey.csv")
df.head() #to show top 5 rows

output-

   [1*cqu9jqulr3zem-h2dlyhaa.png]

   we can have a look on the data distribution of number of internet
   users, birth rate, average life expectancy in 1960 and average life
   expectancy in 2013 using the distribution plot of seaborn. to have the
   two plots side by side, we can crate a subplot frame for two subplots
   to be plotted.
f, ax = plt.subplots(2,2,figsize=(8,4))
vis1 = sns.distplot(df["internet users"],bins=10, ax= ax[0][0])
vis2 = sns.distplot(df["birth rate"],bins=10, ax=ax[0][1])
vis3 = sns.distplot(df["lifeexp1960"],bins=10, ax=ax[1][0])
vis4 = sns.distplot(df["lifeexp2013"],bins=10, ax=ax[1][1])

   the plot looks like-
   [1*hvvyhc2zhrgxh7rr65x7ew.png]

   an interesting distribution can be seen at average life expectancy. in
   1960, data distribution is uniform where as in 2013, it resembles with
   normal distribution. also, we can plot box plots between income groups
   and internet users to get the co-relation between them. the plotted
   figure can be saved to local file to by making it a figure object
   first.
vis5 = sns.boxplot(data = df, x = "income group", y = "birth rate")
fig = vis5.get_figure()
fig.savefig("fig1.png")

   the plot looks like-
   [1*-zx4lzgjszqciynthhifgg.png]
   income group vs internet users

   from the plot it is quite clear that the using of internet increase
   with the income of a person. similar insights can be derived by
   plotting income group vs birth rate, country region vs internet users,
   country region vs birth rate.
   [1*sdr9veqrmckapl0cnejz9a.png]
   country region vs internet users

   after plotting all these 4 plots, it seems there is a relation between
   number of internet users and birth rate. let   s plot a joint plot to see
   their relation.
vis6 = sns.jointplot(data = df, x = "internet users", y = "birth rate", kind='kd
e') #here kde means kernel density plots

   here, pearson coefficient -0.82 means its a linear relationship with
   negative slope. [19]the p value<0.001 means the information are
   statistically highly significant.
   [1*wdfcpuigtu_54xhqhrvorw.png]
   internet users vs birth rate

   from the plot it seems, when people uses internet more they perhaps
   don   t get much time to have kids :-d. also we had seen that high income
   group has people uses internet more. so, high income group people have
   less birthrate which is quite intuitive as they would have more
   awareness. similar other insights also can be concluded from these
   plots. to make these conclusions stronger let   s plot 2d linear plots:
vis7 = sns.lmplot(data = df, x = "internet users", y = "birth rate",fit_reg=fals
e, hue = "income group",size = 6, aspect=1.5, scatter_kws = {'s':200}, )

   [20]here,    hue    is used to color the markers differently for different
   categories supplied,    aspect    is the aspect ration between length and
   width and    scatter_kws    is the key word arguments for scatter plot
   which is called from matplotlib.    s    means the marker size is set to
   200 here to make the plot more informative.
   [1*dw_qymnc_btmakyvga1orq.png]
   internet users vs birth rate

   as it is very clear from here, low income group has high birth rate and
   less internet usage. this is quite opposite for high income group.
   where as, for lower middle income group and upper middle income group
   the results are quite diversified. perhaps country region factor also
   plays a role here. let   s plot the stats against the country region
   then.
vis8= sns.lmplot(data = df, x = "internet users", y = "birth rate",fit_reg=false
,\
                  hue = "country region",\
                 size = 6, aspect=1.5, scatter_kws = {'s':200}, )

   [1*jexv2mbivnhfz-q5oynm7w.png]
   internet users vs birth rate

   as it can be seen here, country region plays an important role on birth
   rate. in europe region, the internet usages vary but birth rate is
   quite same. in the african region most of the countries have very high
   birth rate and very low internet usage. the most interesting results
   are obtained in asia region. here, results are highly diversified as it
   was for middle income group. it can be imagined that perhaps most of
   the population in asian region belongs to middle income group. so,
   let   s plot count plot to know the income group distribution across
   country region.
sns.countplot(y="income group", hue="country region", data=df);

   [1*ojms0nkf-am5gouk1jerka.png]
   income group

   from the above plot, it can be seen that the contribution of africa is
   nearly null for high income group while it it is maximum for low income
   group, which is exactly opposite in europe   s case. the most interesting
   scenario is of the asia region. the income group seem to be nearly
   uniformly distributed.

   now to see the life expectancy status across different demography,
   let   s use the swarm plots.
vis9 = sns.swarmplot(x="lifeexp1960", y="country region", hue="income group", da
ta=df)
vis9.legend_.remove()
plt.legend(loc="upper left", bbox_to_anchor=(1,1))
plt.show()

   [1*ofismjcxo3rtclr-pnzhrw.png]
   life expectancy at 1960 vs country region

   from the above graph, it   s visible that in 1960 income is a big factor
   for life expectancy rate. higher the income, higher the life
   expectancy. but country region also plays a big role. as can be seen in
   middle east and oceania, high income group people also have lower life
   expectancy. let   s see the change in trend in 2013.
vis10 = sns.swarmplot(x="lifeexp2013", y="country region", hue="income group", d
ata=df)
vis10.legend_.remove()
plt.legend(loc="upper left", bbox_to_anchor=(1,1))
plt.show()

   [1*vgoizwx-sngewwuxme3ghg.png]
   life expectancy at 2013 vs country region

   at 2013, the situation seems to be little different from 1960. the life
   expectancy has been improved in every region especially for high income
   group and upper middle income group. but african region is still seems
   to be under privileged.

     * [21]data science
     * [22]data visualization
     * [23]exploratory data analysis
     * [24]data analysis
     * [25]python

   (button)
   (button)
   (button) 280 claps
   (button) (button) (button) (button)

     (button) blockedunblock (button) followfollowing
   [26]go to the profile of sambit mahapatra

[27]sambit mahapatra

   ai and ml practitioner ([28]sambit9238@gmail.com)

     (button) follow
   [29]towards data science

[30]towards data science

   sharing concepts, ideas, and codes.

     * (button)
       (button) 280
     * (button)
     *
     *

   [31]towards data science
   never miss a story from towards data science, when you sign up for
   medium. [32]learn more
   never miss a story from towards data science
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://towardsdatascience.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/2e563e7d35da
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://towardsdatascience.com/visualize-world-trends-using-seaborn-in-python-2e563e7d35da&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://towardsdatascience.com/visualize-world-trends-using-seaborn-in-python-2e563e7d35da&source=--------------------------nav_reg&operation=register
   8. https://towardsdatascience.com/?source=logo-lo_nxddvaddr7oe---7f60cf5620c9
   9. https://towardsdatascience.com/data-science/home
  10. https://towardsdatascience.com/machine-learning/home
  11. https://towardsdatascience.com/programming/home
  12. https://towardsdatascience.com/data-visualization/home
  13. https://towardsdatascience.com/artificial-intelligence/home
  14. https://towardsdatascience.com/data-journalism/home
  15. https://towardsdatascience.com/contribute/home
  16. https://towardsdatascience.com/@sambit9238?source=post_header_lockup
  17. https://towardsdatascience.com/@sambit9238
  18. https://github.com/sambit9238/datascience/blob/master/seabornplotsonworldtrendsurvey.ipynb
  19. https://www.statsdirect.com/help/basics/p_values.htm
  20. https://seaborn.pydata.org/generated/seaborn.lmplot.html
  21. https://towardsdatascience.com/tagged/data-science?source=post
  22. https://towardsdatascience.com/tagged/data-visualization?source=post
  23. https://towardsdatascience.com/tagged/exploratory-data-analysis?source=post
  24. https://towardsdatascience.com/tagged/data-analysis?source=post
  25. https://towardsdatascience.com/tagged/python?source=post
  26. https://towardsdatascience.com/@sambit9238?source=footer_card
  27. https://towardsdatascience.com/@sambit9238
  28. mailto:sambit9238@gmail.com
  29. https://towardsdatascience.com/?source=footer_card
  30. https://towardsdatascience.com/?source=footer_card
  31. https://towardsdatascience.com/
  32. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  34. https://github.com/sambit9238/datascience/blob/master/seabornplotsonworldtrendsurvey.ipynb
  35. https://medium.com/p/2e563e7d35da/share/twitter
  36. https://medium.com/p/2e563e7d35da/share/facebook
  37. https://medium.com/p/2e563e7d35da/share/twitter
  38. https://medium.com/p/2e563e7d35da/share/facebook
