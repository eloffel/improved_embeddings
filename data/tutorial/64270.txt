   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]hacker noon
     * [9]latest
     * [10]editors' choice
     * [11]terms faq
     * [12]sign up for 2.0
     * [13]future of search
     __________________________________________________________________

id23         part 4

openai gym         1

   [14]go to the profile of prakhar mishra
   [15]prakhar mishra (button) blockedunblock (button) followfollowing
   nov 24, 2017
   [1*pcuvtmignzuhi94bl-m65q.jpeg]
   [16][source]

   before you read this blog, i would recommend you to go through the
   series on the same so that you grasp fast.

   read on: [17]part 1 / [18]part 2 /[19] part 3
     __________________________________________________________________

introduction

   openai is a non-profit organization founded in 2015. one major
   contribution that openai made to the machine learning world was
   developing both the gym and universe software platforms       . i will not
   be talking about [20]openai rather would be discussing their immense
   useful contribution gym. if you have any idea of id23
   then you should be knowing that this kind of learning doesn   t just need
   the data but they also need an environment with which the agent
   interacts.

   gym at rescue        . gym is a collection of environments designed for
   testing and developing id23 algorithms. gym is in
   python and supports a collection of [21]environments.

installation

   installing it in your system is as simple as
$ pip install --upgrade pip
$ apt-get install cmake
$ pip install gym[all]  #if you prefer to import it as package

   else you can follow the full procedure [22]here.

basics

   to start with anything else, we first need an environment where our
   agent will play. it is as simple as invoking make method with
   environment name.
>>> import gym
>>> environment = gym.make('cartpole-v0')
>>> environment.reset()    #required to initialize the environment
>>> environment.render()
     * environment.reset() returns the initial state of the environment.
       it can be an integer or array of floats.
     * environment.render() renders the environment on screen.

>>> from gym import envs
>>> print envs.registry.all()
[envspec(pong-ram-v4), envspec(amidar-ramdeterministic-v4),..]

   above command returns the list of all the environment supported by gym.

   now that we have our environment loaded, we would like to know the
   possible actions that our agent can perform.
>>> environment.action_space.n
2

   this shows us there are a total of two actions available i.e. left and
   right.

   we can make our agent take action at every step by calling the step
   function.
>>> environment.step(0)    # 0/1 are two possible moves
(array([-0.00267055,  0.19246759, -0.00903723, -0.25002809]), 1.0, false, {})

   gym environment will always return these four variables after any
   action.
     * state: new state achieved after taking action.
     * reward: reward achieved.
     * done: boolean stating whether the environment is terminated or done
     * info: used for debugging.

   [1*jw1dhuwscmzqwktchsl_qw.png]
   [[23]source]

   in this loop, agent takes some action on the environment and discovers
   a new state and receives a reward.
     __________________________________________________________________

   now that we have basics of gym covered, we will be building something
   interesting in the future blogs.

     * [24]machine learning
     * [25]id23
     * [26]deep learning
     * [27]artificial intelligence
     * [28]openai

   (button)
   (button)
   (button) 31 claps
   (button) (button) (button) (button)

     (button) blockedunblock (button) followfollowing
   [29]go to the profile of prakhar mishra

[30]prakhar mishra

   moving from medium to [31]https://prakhartechviz.blogspot.com/

     (button) follow
   [32]hacker noon

[33]hacker noon

   how hackers start their afternoons.

     * (button)
       (button) 31
     * (button)
     *
     *

   [34]hacker noon
   never miss a story from hacker noon, when you sign up for medium.
   [35]learn more
   never miss a story from hacker noon
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://hackernoon.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/5cb408a4b368
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://hackernoon.com/reinforcement-learning-part-4-5cb408a4b368&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://hackernoon.com/reinforcement-learning-part-4-5cb408a4b368&source=--------------------------nav_reg&operation=register
   8. https://hackernoon.com/?source=logo-lo_xmwhduy1eot2---3a8144eabfe3
   9. https://hackernoon.com/latest-tech-stories/home
  10. https://hackernoon.com/editors-top-tech-stories/home
  11. https://hackernoon.com/your-most-frequently-asked-questions-about-our-terms-of-service-how-to-opt-out-and-more-66abf239a151
  12. https://hackernoon.com/sign-up-for-hacker-noon-2-0-9ff1ea0b60cc
  13. https://community.hackernoon.com/t/what-will-replace-google-search/992/14
  14. https://hackernoon.com/@prakhar.mishra?source=post_header_lockup
  15. https://hackernoon.com/@prakhar.mishra
  16. https://cdn.vox-cdn.com/thumbor/rv5rjtglsc_9db4poaurmnpt86i=/33x0:993x640/1200x800/filters:focal(33x0:993x640)/cdn.vox-cdn.com/uploads/chorus_image/image/49418363/3381036206_3c0ecb4255_b.0.0.jpg
  17. https://medium.com/@prakhar.mishra/reinforcement-learning-part-1-9b20c4f24901
  18. https://medium.com/@prakhar.mishra/reinforcement-learning-part-2-152fb510cc54
  19. https://medium.com/@prakhar.mishra/reinforcement-learning-part-3-38ca74a0bde4
  20. http://openai.com/
  21. https://gym.openai.com/envs/
  22. https://gym.openai.com/docs/
  23. https://raw.githubusercontent.com/torch/torch.github.io/master/blog/_posts/images/action-perception.png
  24. https://hackernoon.com/tagged/machine-learning?source=post
  25. https://hackernoon.com/tagged/reinforcement-learning?source=post
  26. https://hackernoon.com/tagged/deep-learning?source=post
  27. https://hackernoon.com/tagged/artificial-intelligence?source=post
  28. https://hackernoon.com/tagged/openai?source=post
  29. https://hackernoon.com/@prakhar.mishra?source=footer_card
  30. https://hackernoon.com/@prakhar.mishra
  31. https://prakhartechviz.blogspot.com/
  32. https://hackernoon.com/?source=footer_card
  33. https://hackernoon.com/?source=footer_card
  34. https://hackernoon.com/
  35. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  37. https://medium.com/p/5cb408a4b368/share/twitter
  38. https://medium.com/p/5cb408a4b368/share/facebook
  39. https://medium.com/p/5cb408a4b368/share/twitter
  40. https://medium.com/p/5cb408a4b368/share/facebook
