   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]deep math machine learning.ai
   [7]deep math machine learning.ai
   [8]sign in[9]get started
     __________________________________________________________________

chapter 9 : natural language processing.

   [10]go to the profile of madhu sanjeevi ( mady )
   [11]madhu sanjeevi ( mady ) (button) blockedunblock (button)
   followfollowing
   oct 17, 2017

   so far we have talked about machine learning and deep learning
   algorithms which can be used in any field. one of the main fields where
   ml/dl algorithms are used is natural language processing(nlp) so from
   now onwards lets talk about the nlp.
   [1*dysnjcgn8tgxywo5naykbw.jpeg]

   nlp is a big area, probably bigger than machine learning cause the
   concept of language is really intense so we are not gonna focus on it
   completely but we focus on the small area where it meets machine
   learning and deep learning.
   [1*pflmwkzu6olwl2swlkcucq.jpeg]

   let   s understand the natural language processing in our space.

     natural language processing

   the main goal here is , we wanna make the computer understand the
   language as we do and we wanna make the computer respond as we do.

   we can break that into 2 sections
    1. natural language understanding:

   the system should be able to understand the language(parts of speech,
   context , syntax , semantics, interpretation and etc   )

   this can typically be done with the help of machine learning( although
   problems are there).

   not much difficult to do and gives good accuracy results.

   2. id86:

   the system should be able to respond / generate text (text planning,
   sentence planning, producing meaningful phrases and etc   )

   this can be done with the help of deep learning as deep understanding
   is required( although problems are there).

   much difficult to do and the results may not be accurate.

     so where do we use ml in nlp???

   these are the couple of applications where we focus
    1. text classification and id91
    2. information retrieval and extraction
    3. machine translation(one language to another)
    4. question and answering system
    5. spelling and grammar checking
    6. id96 and id31
    7. id103

   i will try to explain and complete all the topics in next following
   stories , in this story we learn the basic fundamentals for
   text/document which is common for many applications.

   note: assume now that text , data, document,sentence and paragraph all
   are same.

     what is a text ??

   a text is a set words sequentially written.

   each word in the text has a meaning where the text may or may not have
   a meaning.

   in machine leaning we take features right? so here each word is a
   feature(unique).

   ex :

   text : i love programming     i , love, programming are the features for
   this input.

     how do we derive the features??

   first apply id121 (a text is divided into token), we can use
   open source tools like nltk to get tokens from the text.
   [1*_ork5odvrssuu9evk6y4ga.jpeg]

   checkout this example
   [1*1ftn2rlq3qobqc5fwoohaw.jpeg]

   so here we have the programming repeated twice as tokens but we only
   take once so the features for this text are     i , love, programming,
   and, also, loves, me.

   but wait the words love and loves mean same , these are called
   inflectional forms. we need to remove these

   removing these inflectional endings is called lemmatization
   [1*8rqbpisqoiz0_qpygoii9a.jpeg]

   so now the features for this text are     i , love, programming, and,
   also,me.

   we can even think deep and say the word programming is similar to the
   word program

   there is a concept called steeming
   [1*_bkx4zboe-ns1uyds2xpbg.jpeg]
   [12]pythonspot.com(picture)

   so if we apply steeming then
   [1*uup-vb3ljbeqc3g7yisvdw.jpeg]

   so now the features for this text are     i , love, program, and,
   also,me.

   there are couple of words which occur very frequently in every language
   and don   t have much meaning , these words are called stop words.

   the stop words in english are
   [1*qv3lgwxvt8nr6e4kethanw.jpeg]

   so stop words should be removed from our text

   note: we covert the text into lower case before id121 to avoid
   duplicates.
   [1*gwxldk6vbfu5ql2oydijtw.jpeg]

   the final features for this text are     love, program, also.

   that   s understandable and cool.
   [1*vnj2hhohfxofew30hcm1wg.jpeg]

   here we get a clean text so we work on it and generate the features but
   in real world we don   t get the clean data , we always get the raw data
   which has a lot of unwanted things(symbols, links, hashtags, numbers,
   spaces and etc..)

   we need to clean the clean the data, this process can be called data
   id172.

   let   s take a tweet from twitter as it is a real world data and apply
   tweet id172
   [1*wrg703zmzu_30bd_fybqcg.jpeg]

   this text contains a bit of noise like punctuation   s, a link and etc..
   check the below images for comparison
   [1*mycmkchyeiivyljzaicqpg.jpeg]

   text features comparison
   [1*d3ihqahf-wdpneftzr7mrg.jpeg]

     so how can original tweet be normalized???

   we remove the unwanted things in data using regular expression.
   [1*d3lvw_sx2hkvdc8aolvpgg.jpeg]

   these are a small set of statements, there can be many more , depending
   upon the data we need to normalize the text to a certain extent.
   [1*uuqitq3cnvhjnnxqn-chtg.png]

   let   s take a toy dataset which has 2 training examples
   (documents/texts)

   1     i love programming

   2     programming also loves me
   [1*dtnb2mggdtvf0_zs2evnuw.jpeg]

   after id172, lemmatization, and stopwords,

   our features are gonna be love, programming, also. we can store them in
   a file and call it a dictionary or a lexicon.

   okay we got the features from text. features values are = words

   we can not feed the words to the computer / model / ml algorithm, the
   features values must be numbers.

   so we take the count for every word in every document as a value.
   [1*yxy_txtmtttw85vv05jdrq.jpeg]
   note: these numbers are after changing the documents.

   so instead of feeding    i love programming    or    love programming    [after
   changing] , we feed [1 1 0] as a vector.

   i call this process document vectorization.
   x
x1 x2 x3
1  1  0 --> just like our previous ml data and we can do what ever
1  1  1     we wanna do.

   here is the code for this
   [1*qnuysafegiytnj2vtvy-5q.jpeg]

   we just converted each document into a vector.

   6th cell is a count vectorization, it gives the count of how many times
   a word appeared in the entire dataset.

   we can achieve the same results using scikit learn count vectorizer.
   [1*a2tvetbjxse3cetoem4chw.jpeg]

   the most appeared words called the top bag of words.

   hope you understand the code.

   there is still a lot of things to learn and point here , in the next
   story i will cover the remaing topics which are tfidf and id97.

   let me know your thoughts/suggestions/questions.

   that   s it for this story, we will see next time until then seeeeeee
   yaaaaaaaa!

   full code is on my [13]github.

     * [14]machine learning
     * [15]naturallanguageprocessing
     * [16]artificial intelligence
     * [17]nlp
     * [18]vector

   (button)
   (button)
   (button) 342 claps
   (button) (button) (button) 1 (button) (button)

     (button) blockedunblock (button) followfollowing
   [19]go to the profile of madhu sanjeevi ( mady )

[20]madhu sanjeevi ( mady )

   writes about technology (ai, ml, dl) | writes about human mind and
   computer mind. interested in ||programming || science || psychology ||
   neuroscience || math

     (button) follow
   [21]deep math machine learning.ai

[22]deep math machine learning.ai

   this is all about machine learning and deep learning (topics cover
   math,theory and programming)

     * (button)
       (button) 342
     * (button)
     *
     *

   [23]deep math machine learning.ai
   never miss a story from deep math machine learning.ai, when you sign up
   for medium. [24]learn more
   never miss a story from deep math machine learning.ai
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/14bbeb8edc79
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/deep-math-machine-learning-ai?source=avatar-lo_igzmvlf76s3a-dedce56b468f
   7. https://medium.com/deep-math-machine-learning-ai?source=logo-lo_igzmvlf76s3a---dedce56b468f
   8. https://medium.com/m/signin?redirect=https://medium.com/deep-math-machine-learning-ai/chapter-9-natural-language-processing-14bbeb8edc79&source=--------------------------nav_reg&operation=login
   9. https://medium.com/m/signin?redirect=https://medium.com/deep-math-machine-learning-ai/chapter-9-natural-language-processing-14bbeb8edc79&source=--------------------------nav_reg&operation=register
  10. https://medium.com/@madhusanjeevi.ai?source=post_header_lockup
  11. https://medium.com/@madhusanjeevi.ai
  12. https://pythonspot.com/en/nltk-id30/
  13. https://github.com/madhu009/deep-math-machine-learning.ai/tree/master/nlp
  14. https://medium.com/tag/machine-learning?source=post
  15. https://medium.com/tag/naturallanguageprocessing?source=post
  16. https://medium.com/tag/artificial-intelligence?source=post
  17. https://medium.com/tag/nlp?source=post
  18. https://medium.com/tag/vector?source=post
  19. https://medium.com/@madhusanjeevi.ai?source=footer_card
  20. https://medium.com/@madhusanjeevi.ai
  21. https://medium.com/deep-math-machine-learning-ai?source=footer_card
  22. https://medium.com/deep-math-machine-learning-ai?source=footer_card
  23. https://medium.com/deep-math-machine-learning-ai
  24. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  26. https://medium.com/p/14bbeb8edc79/share/twitter
  27. https://medium.com/p/14bbeb8edc79/share/facebook
  28. https://medium.com/p/14bbeb8edc79/share/twitter
  29. https://medium.com/p/14bbeb8edc79/share/facebook
