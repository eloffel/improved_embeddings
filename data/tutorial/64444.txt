   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]deep math machine learning.ai
   [7]deep math machine learning.ai
   [8]sign in[9]get started
     __________________________________________________________________

chapter 8 .0: convolutional neural networks for deep learning.

   [10]go to the profile of madhu sanjeevi ( mady )
   [11]madhu sanjeevi ( mady ) (button) blockedunblock (button)
   followfollowing
   oct 15, 2017

   last story we talked about ordinary [12]neural networks which are basic
   building blocks for deep learning, this story i wanna talk about
   convolutional neural networks or convnets.
   [1*dejzgp8yk_qu9hm656cbuq.jpeg]

   the convnets have been the major breakthroughs in the field of deep
   learning and they perform really well for image recognition, we can
   also use id98   s for natural language processing and speech analysis. in
   this story i focus on id161(image recognition). let   s get
   started!!!!!!
   [1*iex4-iuahylfi9vkzpviua.jpeg]

   i follow [13]simon sinek , he says always start with why,how and
   finally what

     why id98   s ??? over ordinary neural networks ??

   let   s say we are training a classifier to identify a cat using an
   ordinary neural net(where we have input, hidden and output layers)

   an ordinary neural networks typically takes features as inputs, for
   this problem we take image array as inputs, so we have a vector, size
   of (image width*height) as an input.
   [1*s8soaxqml8crbndzfezyra.jpeg]
   note: i took just 10*10 grid here for understanding, but the image
   array size = width*height*color.

   we feed it to the model and train it (back propagation) for many images
   for many iterations.

   once the network is trained then we can give another cat picture to
   predict (to get the score) to see if it gives the result as cat(high
   id203 score).

   well, it works, but wait..

   what if i gave the test pictures like these for prediction.
   [1*vwc_k7breyswb2bhu8vb3a.jpeg]

   the ordinary network may not predict well(or not get much score for the
   cat) and what if i gave b/w pictures as test images(assume the train
   set does not have b/w images)

   the network might fail to give the highest id203 score as this
   type of features(b/w) we did not train.

   so what is happening here??

   what we feed is what we get.

   the network understands the mapping between x and y but not the
   patterns in x.

   for above 3 test images the id98 is gonna be able to predict well for
   cats.

   convnets are used mainly to look for patterns in an image, we don   t
   need to give features, the id98 understands the right features by itself
   as it goes deep.this is one of the reasons why we need id98   s. period.
   [1*zluaxm1dpzfbvafx_ezpmq.jpeg]

   and another reason is, ordinary neural networks don   t scale well for
   full sized images , let   s say that input images size =100(width) * 100
   (height) * 3 (rgb).

   then we need to have 30,000 neurons which is very expensive in the
   network.

   hence we need to learn id98.

     okay so how does it work???

   for every image , it creates many images by applying some filters (
   just like photo editing tools )

   these filters, we can call weights , kernels or features

   they are initialized randomly first then during the training these
   weights will get updated (the network learns these weights)

   let   s take an example, suppose we have an image of 5x5 size like this
   and filters are like this,

   note : for sake of understanding i assume that 5 x 5 array is full
   image and the values are pixel values, otherwise it would be a big
   table of matrix and the values can be anything 0 and 1 or continuous
   value (- to +).
   [1*ti6nbj2cysej6pbupqo2fg.jpeg]

   we have 3 filters which we initialize randomly (we define the filter
   size).

   note: here i took 0 or 1 to make the math easy , usually these are
   continuous values.

   if we run each filter all over the image we will get the output images
   like these.
   [1*iyh0th-dilrkauchujxqew.jpeg]

   how did we get the output like these???

   here is how
   [1*ibzebdn-pxwyfrumd0uj4q.jpeg]

   this is for only one filter, we take a local receptive field in the
   image and we apply the dot product to a scalar value then we move the
   window by the stride and repeat the same process for the entire image.

   this process is called convolution.

   so step1 : apply convolution to all the filters for the input image.

   step 2 : apply pooling concept for the generate output images

   for example, for the first image,
   [1*9is4ke-jnrzuinvfiq6txw.jpeg]

   the main goal of pooling is to reduce the size of an image by taking
   the max values in the window, and padding is not necessary here, but
   for padding explanation purpose only i added here.

   step 3 : id172, this is the step when you apply an activation
   function, the most used function here is relu (rectified linear unit)

   a rectified linear unit has output 0 if the input is less than 0, and
   raw output otherwise. that is, if the input is greater than 0, the
   output is equal to the input.

   here we don   t have any negative values so don   t need to apply , if we
   assume we have, then it will be,
   [1*aq6kw_jurvymxavwwtl7mq.jpeg]

   step 4 : feed these values to fully connected neural network(we talked
   in the last story)
   [1*tovv6gryjhbl7iwyfgjeqq.png]

   this process i already covered before here, so i don   t talk about it
   now.

   we train the model for all the images in the training set for certain
   no of epochs, and during training we update the weights using back
   propagation.

   so this is how it works.
   [1*0-hm8xa4h0vhwwipdvkwsw.jpeg]
   love you man!

     so now what is a convolutional neural network????

   a convolution neural network is a network of different types of layers
   sequentially connected together.

   types of layers
    1. convolution layer where the convolution process happens.
    2. pooling layer where the pooling process happens.
    3. id172 layer where the activation (relu) process happens.
    4. fully connected layer (dense)

   a id98 can typically have multiple convolution, pooling, id172
   layers and not necessarily following the order.

   here are the examples
   [1*w5vrdsar2cu_tj5-t5wq5w.png]
   [1*n1w_euyh9bfmlijsnjycia.jpeg]
   hirokatsukataoka.net(picture)
   [1*2swb6cmxzbpzijmevfbe-g.jpeg]
   cs231n [14]stanford.edu(picture)

   okay now let   s make that cat follow all the steps, we will see how it
   looks like.

   after one layer of convolution and pooling, it will look like this
   [1*lsorcfnbexoaqtqztirvbg.jpeg]

   i hope you get the idea how an image transforms and goes to network for
   training.

   here i defined 3 x 3 filter size with 3 filters and pooling size = 2 x
   2

   anyway coding is not in scope in this story.

   we need to define the network architecture and some parameters, then we
   train the model for all the images in the training set for certain no
   of epochs, and during training we update the weights using back
   propagation.

   once the training is done , just like ordinary neural networks we feed
   forward the test image into the network, at the end we get the
   probabilities scores.

   cool! right?

   that   s it for this story , in the next story i will build the
   convolution neural network from scratch/tensorflow/keras/caffe using
   the above steps.

   until then

   see ya!

     * [15]machine learning
     * [16]neural networks
     * [17]convolutional
     * [18]id161
     * [19]artificial intelligence

   (button)
   (button)
   (button) 419 claps
   (button) (button) (button) 2 (button) (button)

     (button) blockedunblock (button) followfollowing
   [20]go to the profile of madhu sanjeevi ( mady )

[21]madhu sanjeevi ( mady )

   writes about technology (ai, ml, dl) | writes about human mind and
   computer mind. interested in ||programming || science || psychology ||
   neuroscience || math

     (button) follow
   [22]deep math machine learning.ai

[23]deep math machine learning.ai

   this is all about machine learning and deep learning (topics cover
   math,theory and programming)

     * (button)
       (button) 419
     * (button)
     *
     *

   [24]deep math machine learning.ai
   never miss a story from deep math machine learning.ai, when you sign up
   for medium. [25]learn more
   never miss a story from deep math machine learning.ai
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/364971e34ab2
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/deep-math-machine-learning-ai?source=avatar-lo_isphsjndizjq-dedce56b468f
   7. https://medium.com/deep-math-machine-learning-ai?source=logo-lo_isphsjndizjq---dedce56b468f
   8. https://medium.com/m/signin?redirect=https://medium.com/deep-math-machine-learning-ai/chapter-8-0-convolutional-neural-networks-for-deep-learning-364971e34ab2&source=--------------------------nav_reg&operation=login
   9. https://medium.com/m/signin?redirect=https://medium.com/deep-math-machine-learning-ai/chapter-8-0-convolutional-neural-networks-for-deep-learning-364971e34ab2&source=--------------------------nav_reg&operation=register
  10. https://medium.com/@madhusanjeevi.ai?source=post_header_lockup
  11. https://medium.com/@madhusanjeevi.ai
  12. https://medium.com/deep-math-machine-learning-ai/chapter-7-artificial-neural-networks-with-math-bb711169481b
  13. https://en.wikipedia.org/wiki/simon_sinek
  14. mailto:karpathy@cs.stanford.edu
  15. https://medium.com/tag/machine-learning?source=post
  16. https://medium.com/tag/neural-networks?source=post
  17. https://medium.com/tag/convolutional?source=post
  18. https://medium.com/tag/computer-vision?source=post
  19. https://medium.com/tag/artificial-intelligence?source=post
  20. https://medium.com/@madhusanjeevi.ai?source=footer_card
  21. https://medium.com/@madhusanjeevi.ai
  22. https://medium.com/deep-math-machine-learning-ai?source=footer_card
  23. https://medium.com/deep-math-machine-learning-ai?source=footer_card
  24. https://medium.com/deep-math-machine-learning-ai
  25. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  27. https://medium.com/p/364971e34ab2/share/twitter
  28. https://medium.com/p/364971e34ab2/share/facebook
  29. https://medium.com/p/364971e34ab2/share/twitter
  30. https://medium.com/p/364971e34ab2/share/facebook
