springer texts in statistics

series editors:
g. casella
s. fienberg
i. olkin

for further volumes:
http://www.springer.com/series/417

gareth james     daniela witten     trevor hastie
robert tibshirani

an introduction to
statistical learning

with applications in r

123

gareth james
department of information and

operations management

university of southern california
los angeles, ca, usa

trevor hastie
department of statistics
stanford university
stanford, ca, usa

daniela witten
department of biostatistics
university of washington
seattle, wa, usa

robert tibshirani
department of statistics
stanford university
stanford, ca, usa

issn 1431-875x
isbn 978-1-4614-7137-0
doi 10.1007/978-1-4614-7138-7
springer new york heidelberg dordrecht london

isbn 978-1-4614-7138-7 (ebook)

library of congress control number: 2013936251

   springer science+business media new york 2013 (corrected at 6th printing 2015)
this work is subject to copyright. all rights are reserved by the publisher, whether the whole or part
of the material is concerned, speci   cally the rights of translation, reprinting, reuse of illustrations,
recitation, broadcasting, reproduction on micro   lms or in any other physical way, and transmission or
information storage and retrieval, electronic adaptation, computer software, or by similar or dissim-
ilar methodology now known or hereafter developed. exempted from this legal reservation are brief
excerpts in connection with reviews or scholarly analysis or material supplied speci   cally for the pur-
pose of being entered and executed on a computer system, for exclusive use by the purchaser of the
work. duplication of this publication or parts thereof is permitted only under the provisions of the
copyright law of the publisher   s location, in its current version, and permission for use must always
be obtained from springer. permissions for use may be obtained through rightslink at the copyright
clearance center. violations are liable to prosecution under the respective copyright law.
the use of general descriptive names, registered names, trademarks, service marks, etc. in this publi-
cation does not imply, even in the absence of a speci   c statement, that such names are exempt from
the relevant protective laws and regulations and therefore free for general use.
while the advice and information in this book are believed to be true and accurate at the date of
publication, neither the authors nor the editors nor the publisher can accept any legal responsibility for
any errors or omissions that may be made. the publisher makes no warranty, express or implied, with
respect to the material contained herein.

printed on acid-free paper

springer is part of springer science+business media (www.springer.com)

to our parents:

alison and michael james

chiara nappi and edward witten

valerie and patrick hastie

vera and sami tibshirani

and to our families:

michael, daniel, and catherine

tessa and ari

samantha, timothy, and lynda

charlie, ryan, julie, and cheryl

preface

statistical learning refers to a set of tools for modeling and understanding
complex datasets. it is a recently developed area in statistics and blends
with parallel developments in computer science and, in particular, machine
learning. the    eld encompasses many methods such as the lasso and sparse
regression, classi   cation and regression trees, and boosting and support
vector machines.

with the explosion of    big data    problems, statistical learning has be-
come a very hot    eld in many scienti   c areas as well as marketing,    nance,
and other business disciplines. people with statistical learning skills are in
high demand.

one of the    rst books in this area   the elements of statistical learning
(esl) (hastie, tibshirani, and friedman)   was published in 2001, with a
second edition in 2009. esl has become a popular text not only in statis-
tics but also in related    elds. one of the reasons for esl   s popularity is
its relatively accessible style. but esl is intended for individuals with ad-
vanced training in the mathematical sciences. an introduction to statistical
learning (isl) arose from the perceived need for a broader and less tech-
nical treatment of these topics. in this new book, we cover many of the
same topics as esl, but we concentrate more on the applications of the
methods and less on the mathematical details. we have created labs illus-
trating how to implement each of the statistical learning methods using the
popular statistical software package r. these labs provide the reader with
valuable hands-on experience.

this book is appropriate for advanced undergraduates or master   s stu-
dents in statistics or related quantitative    elds or for individuals in other

vii

viii

preface

disciplines who wish to use statistical learning tools to analyze their data.
it can be used as a textbook for a course spanning one or two semesters.

we would like to thank several readers for valuable comments on prelim-
inary drafts of this book: pallavi basu, alexandra chouldechova, patrick
danaher, will fithian, luella fu, sam gross, max grazier g   sell, court-
ney paulson, xinghao qiao, elisa sheng, noah simon, kean ming tan,
and xin lu tan.

it   s tough to make predictions, especially about the future.

los angeles, usa
seattle, usa
palo alto, usa
palo alto, usa

-yogi berra

gareth james
daniela witten
trevor hastie
robert tibshirani

contents

preface

1 introduction

2 statistical learning

2.1 what is statistical learning? . . . . . . . . . . . . . . . . .
2.1.1 why estimate f ? . . . . . . . . . . . . . . . . . . . .
2.1.2 how do we estimate f ?
. . . . . . . . . . . . . . .
2.1.3 the trade-o    between prediction accuracy

and model interpretability . . . . . . . . . . . . . .
2.1.4
supervised versus unsupervised learning . . . . . .
2.1.5 regression versus classi   cation problems . . . . . .
2.2 assessing model accuracy . . . . . . . . . . . . . . . . . . .
2.2.1 measuring the quality of fit
. . . . . . . . . . . . .
2.2.2 the bias-variance trade-o    . . . . . . . . . . . . .
2.2.3 the classi   cation setting . . . . . . . . . . . . . . .
2.3 lab: introduction to r . . . . . . . . . . . . . . . . . . . . .
2.3.1 basic commands . . . . . . . . . . . . . . . . . . . .
2.3.2 graphics
. . . . . . . . . . . . . . . . . . . . . . . .
indexing data . . . . . . . . . . . . . . . . . . . . .
2.3.3
2.3.4 loading data . . . . . . . . . . . . . . . . . . . . . .
2.3.5 additional graphical and numerical summaries
. .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .

2.4 exercises

vii

1

15
15
17
21

24
26
28
29
29
33
37
42
42
45
47
48
49
52

ix

x

contents

3 id75

3.1 simple id75 . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . .

3.1.1 estimating the coe   cients
3.1.2 assessing the accuracy of the coe   cient

59
61
61

some important questions

estimates . . . . . . . . . . . . . . . . . . . . . . . .
3.1.3 assessing the accuracy of the model . . . . . . . . .
3.2 multiple id75 . . . . . . . . . . . . . . . . . .
3.2.1 estimating the regression coe   cients . . . . . . . .
3.2.2
. . . . . . . . . . . . . .
3.3 other considerations in the regression model . . . . . . . .
3.3.1 qualitative predictors . . . . . . . . . . . . . . . . .
3.3.2 extensions of the linear model . . . . . . . . . . . .
3.3.3 potential problems . . . . . . . . . . . . . . . . . . .

63
68
71
72
75
82
82
86
92
3.4 the marketing plan . . . . . . . . . . . . . . . . . . . . . . 102
3.5 comparison of id75 with k-nearest

neighbors . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
3.6 lab: id75 . . . . . . . . . . . . . . . . . . . . . 109
3.6.1 libraries . . . . . . . . . . . . . . . . . . . . . . . . . 109
3.6.2
simple id75 . . . . . . . . . . . . . . . 110
3.6.3 multiple id75 . . . . . . . . . . . . . . 113
3.6.4
. . . . . . . . . . . . . . . . . . . 115
3.6.5 non-linear transformations of the predictors . . . . 115
3.6.6 qualitative predictors . . . . . . . . . . . . . . . . . 117
3.6.7 writing functions
. . . . . . . . . . . . . . . . . . . 119
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 120

interaction terms

3.7 exercises

4 classi   cation

127
4.1 an overview of classi   cation . . . . . . . . . . . . . . . . . 128
4.2 why not id75? . . . . . . . . . . . . . . . . . 129
4.3 id28 . . . . . . . . . . . . . . . . . . . . . . . 130
4.3.1 the logistic model . . . . . . . . . . . . . . . . . . . 131
4.3.2 estimating the regression coe   cients . . . . . . . . 133
4.3.3 making predictions . . . . . . . . . . . . . . . . . . . 134
4.3.4 multiple id28 . . . . . . . . . . . . . . 135
4.3.5 id28 for >2 response classes . . . . . 137
4.4 id156 . . . . . . . . . . . . . . . . . 138
4.4.1 using bayes    theorem for classi   cation . . . . . . . 138
4.4.2 id156 for p = 1 . . . . . . . . 139
4.4.3 id156 for p >1 . . . . . . . . 142
4.4.4 quadratic discriminant analysis . . . . . . . . . . . 149
4.5 a comparison of classi   cation methods . . . . . . . . . . . 151
4.6 lab: id28, lda, qda, and knn . . . . . . 154
4.6.1 the stock market data . . . . . . . . . . . . . . . . 154
4.6.2 id28 . . . . . . . . . . . . . . . . . . . 156
4.6.3 id156 . . . . . . . . . . . . . 161

contents

xi

4.6.4 quadratic discriminant analysis . . . . . . . . . . . 163
4.6.5 k-nearest neighbors . . . . . . . . . . . . . . . . . . 163
4.6.6 an application to caravan insurance data . . . . . 165
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 168

4.7 exercises

5 resampling methods

175
5.1 cross-validation . . . . . . . . . . . . . . . . . . . . . . . . 176
5.1.1 the validation set approach . . . . . . . . . . . . . 176
5.1.2 leave-one-out cross-validation . . . . . . . . . . . 178
k-fold cross-validation . . . . . . . . . . . . . . . . 181
5.1.3
5.1.4 bias-variance trade-o    for k-fold

cross-validation . . . . . . . . . . . . . . . . . . . . 183
5.1.5 cross-validation on classi   cation problems . . . . . 184
5.2 the bootstrap . . . . . . . . . . . . . . . . . . . . . . . . . 187
5.3 lab: cross-validation and the bootstrap . . . . . . . . . . . 190
5.3.1 the validation set approach . . . . . . . . . . . . . 191
5.3.2 leave-one-out cross-validation . . . . . . . . . . . 192
k-fold cross-validation . . . . . . . . . . . . . . . . 193
5.3.3
5.3.4 the bootstrap . . . . . . . . . . . . . . . . . . . . . 194
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 197

5.4 exercises

6 linear model selection and id173

6.3 dimension reduction methods

203
6.1 subset selection . . . . . . . . . . . . . . . . . . . . . . . . 205
6.1.1 best subset selection . . . . . . . . . . . . . . . . . 205
stepwise selection . . . . . . . . . . . . . . . . . . . 207
6.1.2
6.1.3 choosing the optimal model
. . . . . . . . . . . . . 210
6.2 shrinkage methods . . . . . . . . . . . . . . . . . . . . . . . 214
6.2.1 ridge regression . . . . . . . . . . . . . . . . . . . . 215
6.2.2 the lasso . . . . . . . . . . . . . . . . . . . . . . . . 219
selecting the tuning parameter . . . . . . . . . . . . 227
6.2.3
. . . . . . . . . . . . . . . . 228
6.3.1 principal components regression . . . . . . . . . . . 230
. . . . . . . . . . . . . . . . . 237
6.3.2 partial least squares
6.4 considerations in high dimensions . . . . . . . . . . . . . . 238
6.4.1 high-dimensional data . . . . . . . . . . . . . . . . 238
6.4.2 what goes wrong in high dimensions? . . . . . . . 239
6.4.3 regression in high dimensions . . . . . . . . . . . . 241
6.4.4
interpreting results in high dimensions . . . . . . . 243
6.5 lab 1: subset selection methods . . . . . . . . . . . . . . . 244
6.5.1 best subset selection . . . . . . . . . . . . . . . . . 244
6.5.2 forward and backward stepwise selection . . . . . . 247
6.5.3 choosing among models using the validation

set approach and cross-validation . . . . . . . . . . 248

xii

contents

6.6 lab 2: ridge regression and the lasso . . . . . . . . . . . . 251
6.6.1 ridge regression . . . . . . . . . . . . . . . . . . . . 251
6.6.2 the lasso . . . . . . . . . . . . . . . . . . . . . . . . 255
6.7 lab 3: pcr and pls regression . . . . . . . . . . . . . . . 256
6.7.1 principal components regression . . . . . . . . . . . 256
6.7.2 partial least squares
. . . . . . . . . . . . . . . . . 258
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 259

6.8 exercises

7 moving beyond linearity

265
7.1 polynomial regression . . . . . . . . . . . . . . . . . . . . . 266
7.2 step functions
. . . . . . . . . . . . . . . . . . . . . . . . . 268
7.3 basis functions . . . . . . . . . . . . . . . . . . . . . . . . . 270
7.4 regression splines
. . . . . . . . . . . . . . . . . . . . . . . 271
7.4.1 piecewise polynomials . . . . . . . . . . . . . . . . . 271
7.4.2 constraints and splines . . . . . . . . . . . . . . . . 271
7.4.3 the spline basis representation . . . . . . . . . . . 273
7.4.4 choosing the number and locations

of the knots

7.5 smoothing splines

. . . . . . . . . . . . . . . . . . . . . . 274
7.4.5 comparison to polynomial regression . . . . . . . . 276
. . . . . . . . . . . . . . . . . . . . . . . 277
7.5.1 an overview of smoothing splines . . . . . . . . . . 277
7.5.2 choosing the smoothing parameter    . . . . . . . . 278
7.6 local regression . . . . . . . . . . . . . . . . . . . . . . . . 280
7.7 generalized additive models
. . . . . . . . . . . . . . . . . 282
7.7.1 gams for regression problems . . . . . . . . . . . . 283
. . . . . . . . . . 286
7.7.2 gams for classi   cation problems
7.8 lab: non-linear modeling . . . . . . . . . . . . . . . . . . . 287
. . . . . 288
7.8.1 polynomial regression and step functions
splines . . . . . . . . . . . . . . . . . . . . . . . . . . 293
7.8.2
7.8.3 gams . . . . . . . . . . . . . . . . . . . . . . . . . . 294
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 297

7.9 exercises

8 tree-based methods

8.1 the basics of id90

303
. . . . . . . . . . . . . . . . . 303
8.1.1 regression trees . . . . . . . . . . . . . . . . . . . . 304
8.1.2 classi   cation trees . . . . . . . . . . . . . . . . . . . 311
8.1.3 trees versus linear models . . . . . . . . . . . . . . 314
8.1.4 advantages and disadvantages of trees
. . . . . . . 315
8.2 id112, id79s, boosting . . . . . . . . . . . . . 316
8.2.1 id112 . . . . . . . . . . . . . . . . . . . . . . . . . 316
8.2.2 id79s
. . . . . . . . . . . . . . . . . . . . 319
8.2.3 boosting . . . . . . . . . . . . . . . . . . . . . . . . . 321
8.3 lab: id90 . . . . . . . . . . . . . . . . . . . . . . . 323
8.3.1 fitting classi   cation trees
. . . . . . . . . . . . . . 323
8.3.2 fitting regression trees . . . . . . . . . . . . . . . . 327

8.3.3 id112 and id79s . . . . . . . . . . . . . 328
8.3.4 boosting . . . . . . . . . . . . . . . . . . . . . . . . . 330
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 332

8.4 exercises

contents

xiii

9 support vector machines

337
9.1 maximal margin classi   er . . . . . . . . . . . . . . . . . . . 338
9.1.1 what is a hyperplane? . . . . . . . . . . . . . . . . 338
9.1.2 classi   cation using a separating hyperplane . . . . 339
9.1.3 the maximal margin classi   er . . . . . . . . . . . . 341
9.1.4 construction of the maximal margin classi   er . . . 342
9.1.5 the non-separable case . . . . . . . . . . . . . . . . 343
9.2 support vector classi   ers . . . . . . . . . . . . . . . . . . . 344
9.2.1 overview of the support vector classi   er . . . . . . 344
9.2.2 details of the support vector classi   er
. . . . . . . 345
. . . . . . . . . . . . . . . . . . . 349

9.3 support vector machines

9.3.1 classi   cation with non-linear decision

boundaries

. . . . . . . . . . . . . . . . . . . . . . . 349
9.3.2 the support vector machine . . . . . . . . . . . . . 350
9.3.3 an application to the heart disease data . . . . . . 354
9.4 id166s with more than two classes . . . . . . . . . . . . . . 355
9.4.1 one-versus-one classi   cation . . . . . . . . . . . . . 355
9.4.2 one-versus-all classi   cation . . . . . . . . . . . . . 356
9.5 relationship to id28 . . . . . . . . . . . . . . 356
9.6 lab: support vector machines
. . . . . . . . . . . . . . . . 359
support vector classi   er
. . . . . . . . . . . . . . . 359
9.6.1
support vector machine . . . . . . . . . . . . . . . . 363
9.6.2
. . . . . . . . . . . . . . . . . . . . . . 365
9.6.3 roc curves
id166 with multiple classes . . . . . . . . . . . . . . 366
9.6.4
9.6.5 application to gene expression data . . . . . . . . 366
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 368

9.7 exercises

10 unsupervised learning

373
10.1 the challenge of unsupervised learning . . . . . . . . . . . 373
10.2 principal components analysis . . . . . . . . . . . . . . . . 374
10.2.1 what are principal components? . . . . . . . . . . 375
10.2.2 another interpretation of principal components . . 379
10.2.3 more on pca . . . . . . . . . . . . . . . . . . . . . . 380
10.2.4 other uses for principal components
. . . . . . . . 385
10.3 id91 methods . . . . . . . . . . . . . . . . . . . . . . . 385
10.3.1 id116 id91 . . . . . . . . . . . . . . . . . . 386
10.3.2 hierarchical id91 . . . . . . . . . . . . . . . . . 390
10.3.3 practical issues in id91 . . . . . . . . . . . . . 399
10.4 lab 1: principal components analysis . . . . . . . . . . . . 401

xiv

contents

10.5 lab 2: id91 . . . . . . . . . . . . . . . . . . . . . . . . 404
10.5.1 id116 id91 . . . . . . . . . . . . . . . . . . 404
10.5.2 hierarchical id91 . . . . . . . . . . . . . . . . . 406
. . . . . . . . . . . . . . . . . 407
10.6.1 pca on the nci60 data
. . . . . . . . . . . . . . . 408
10.6.2 id91 the observations of the nci60 data . . . 410
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 413

10.6 lab 3: nci60 data example

10.7 exercises

index

419

1
introduction

an overview of statistical learning

statistical learning refers to a vast set of tools for understanding data. these
tools can be classi   ed as supervised or unsupervised. broadly speaking,
supervised statistical learning involves building a statistical model for pre-
dicting, or estimating, an output based on one or more inputs. problems of
this nature occur in    elds as diverse as business, medicine, astrophysics, and
public policy. with unsupervised statistical learning, there are inputs but
no supervising output; nevertheless we can learn relationships and struc-
ture from such data. to provide an illustration of some applications of
statistical learning, we brie   y discuss three real-world data sets that are
considered in this book.

wage data

in this application (which we refer to as the wage data set throughout this
book), we examine a number of factors that relate to wages for a group of
males from the atlantic region of the united states. in particular, we wish
to understand the association between an employee   s age and education, as
well as the calendar year, on his wage. consider, for example, the left-hand
panel of figure 1.1, which displays wage versus age for each of the individu-
als in the data set. there is evidence that wage increases with age but then
decreases again after approximately age 60. the blue line, which provides
an estimate of the average wage for a given age, makes this trend clearer.

g. james et al., an introduction to statistical learning: with applications in r,
springer texts in statistics, doi 10.1007/978-1-4614-7138-7 1,
   springer science+business media new york 2013

1

2

1. introduction

e
g
a
w

0
0
3

0
0
2

0
0
1

0
5

e
g
a
w

0
0
3

0
0
2

0
0
1

0
5

e
g
a
w

0
0
3

0
0
2

0
0
1

0
5

20

40

60

80

2003

2006

2009

age

year

1

2

3

4

5

education level

figure 1.1. wage data, which contains income survey information for males
from the central atlantic region of the united states. left: wage as a function of
age. on average, wage increases with age until about 60 years of age, at which
point it begins to decline. center: wage as a function of year. there is a slow
but steady increase of approximately $10,000 in the average wage between 2003
and 2009. right: boxplots displaying wage as a function of education, with 1
indicating the lowest level (no high school diploma) and 5 the highest level (an
advanced graduate degree). on average, wage increases with the level of education.

given an employee   s age, we can use this curve to predict his wage. however,
it is also clear from figure 1.1 that there is a signi   cant amount of vari-
ability associated with this average value, and so age alone is unlikely to
provide an accurate prediction of a particular man   s wage.

we also have information regarding each employee   s education level and
the year in which the wage was earned. the center and right-hand panels of
figure 1.1, which display wage as a function of both year and education, in-
dicate that both of these factors are associated with wage. wages increase
by approximately $10,000, in a roughly linear (or straight-line) fashion,
between 2003 and 2009, though this rise is very slight relative to the vari-
ability in the data. wages are also typically greater for individuals with
higher education levels: men with the lowest education level (1) tend to
have substantially lower wages than those with the highest education level
(5). clearly, the most accurate prediction of a given man   s wage will be
obtained by combining his age, his education, and the year. in chapter 3,
we discuss id75, which can be used to predict wage from this
data set. ideally, we should predict wage in a way that accounts for the
non-linear relationship between wage and age. in chapter 7, we discuss a
class of approaches for addressing this problem.

stock market data

the wage data involves predicting a continuous or quantitative output value.
this is often referred to as a regression problem. however, in certain cases
we may instead wish to predict a non-numerical value   that is, a categorical

yesterday

two days previous

three days previous

1. introduction

3

6

4

2

0

2
   

4
   

p
&
s
n

 

i
 

e
g
n
a
h
c
 
e
g
a
n
e
c
r
e
p

t

6

4

2

0

2
   

4
   

p
&
s
n

 

i
 

e
g
n
a
h
c
 
e
g
a

t

n
e
c
r
e
p

6

4

2

0

2
   

4
   

p
&
s
n

 

i
 

e
g
n
a
h
c
 
e
g
a
n
e
c
r
e
p

t

down

up

today   s direction

down

up

today   s direction

down

up

today   s direction

figure 1.2. left: boxplots of the previous day   s percentage change in the s&p
index for the days for which the market increased or decreased, obtained from the
smarket data. center and right: same as left panel, but the percentage changes
for 2 and 3 days previous are shown.

or qualitative output. for example, in chapter 4 we examine a stock mar-
ket data set that contains the daily movements in the standard & poor   s
500 (s&p) stock index over a 5-year period between 2001 and 2005. we
refer to this as the smarket data. the goal is to predict whether the index
will increase or decrease on a given day using the past 5 days    percentage
changes in the index. here the statistical learning problem does not in-
volve predicting a numerical value. instead it involves predicting whether
a given day   s stock market performance will fall into the up bucket or the
down bucket. this is known as a classi   cation problem. a model that could
accurately predict the direction in which the market will move would be
very useful!

the left-hand panel of figure 1.2 displays two boxplots of the previous
day   s percentage changes in the stock index: one for the 648 days for which
the market increased on the subsequent day, and one for the 602 days for
which the market decreased. the two plots look almost identical, suggest-
ing that there is no simple strategy for using yesterday   s movement in the
s&p to predict today   s returns. the remaining panels, which display box-
plots for the percentage changes 2 and 3 days previous to today, similarly
indicate little association between past and present returns. of course, this
lack of pattern is to be expected: in the presence of strong correlations be-
tween successive days    returns, one could adopt a simple trading strategy
to generate pro   ts from the market. nevertheless, in chapter 4, we explore
these data using several di   erent statistical learning methods. interestingly,
there are hints of some weak trends in the data that suggest that, at least
for this 5-year period, it is possible to correctly predict the direction of
movement in the market approximately 60% of the time (figure 1.3).

4

1. introduction

y
t
i
l
i

b
a
b
o
r
p
d
e

 

i

t
c
d
e
r
p

2
5

.

0

0
5

.

0

8
4

.

0

6
4

.

0

down

up

today   s direction

figure 1.3. we    t a quadratic discriminant analysis model to the subset
of the smarket data corresponding to the 2001   2004 time period, and predicted
the id203 of a stock market decrease using the 2005 data. on average, the
predicted id203 of decrease is higher for the days in which the market does
decrease. based on these results, we are able to correctly predict the direction of
movement in the market 60% of the time.

gene expression data

the previous two applications illustrate data sets with both input and
output variables. however, another important class of problems involves
situations in which we only observe input variables, with no corresponding
output. for example, in a marketing setting, we might have demographic
information for a number of current or potential customers. we may wish to
understand which types of customers are similar to each other by grouping
individuals according to their observed characteristics. this is known as a
id91 problem. unlike in the previous examples, here we are not trying
to predict an output variable.

we devote chapter 10 to a discussion of statistical learning methods
for problems in which no natural output variable is available. we consider
the nci60 data set, which consists of 6,830 gene expression measurements
for each of 64 cancer cell lines. instead of predicting a particular output
variable, we are interested in determining whether there are groups, or
clusters, among the cell lines based on their gene expression measurements.
this is a di   cult question to address, in part because there are thousands
of gene expression measurements per cell line, making it hard to visualize
the data.

the left-hand panel of figure 1.4 addresses this problem by represent-
ing each of the 64 cell lines using just two numbers, z1 and z2. these
are the    rst two principal components of the data, which summarize the
6, 830 expression measurements for each cell line down to two numbers or
dimensions. while it is likely that this dimension reduction has resulted in

1. introduction

5

2
z

0
2

0

0
2
   

0
4
   

0
6
   

2
z

0
2

0

0
2
   

0
4
   

0
6
   

   40

   20

0

20

40

60

   40

   20

0

20

40

60

z1

z1

figure 1.4. left: representation of the nci60 gene expression data set in
a two-dimensional space, z1 and z2. each point corresponds to one of the 64
cell lines. there appear to be four groups of cell lines, which we have represented
using di   erent colors. right: same as left panel except that we have represented
each of the 14 di   erent types of cancer using a di   erent colored symbol. cell lines
corresponding to the same cancer type tend to be nearby in the two-dimensional
space.

some loss of information, it is now possible to visually examine the data for
evidence of id91. deciding on the number of clusters is often a di   -
cult problem. but the left-hand panel of figure 1.4 suggests at least four
groups of cell lines, which we have represented using separate colors. we
can now examine the cell lines within each cluster for similarities in their
types of cancer, in order to better understand the relationship between
gene expression levels and cancer.

in this particular data set, it turns out that the cell lines correspond
to 14 di   erent types of cancer. (however, this information was not used
to create the left-hand panel of figure 1.4.) the right-hand panel of fig-
ure 1.4 is identical to the left-hand panel, except that the 14 cancer types
are shown using distinct colored symbols. there is clear evidence that cell
lines with the same cancer type tend to be located near each other in this
two-dimensional representation. in addition, even though the cancer infor-
mation was not used to produce the left-hand panel, the id91 obtained
does bear some resemblance to some of the actual cancer types observed
in the right-hand panel. this provides some independent veri   cation of the
accuracy of our id91 analysis.

a brief history of statistical learning

though the term statistical learning is fairly new, many of the concepts
that underlie the    eld were developed long ago. at the beginning of the
nineteenth century, legendre and gauss published papers on the method

6

1. introduction

of least squares, which implemented the earliest form of what is now known
as id75. the approach was    rst successfully applied to problems
in astronomy. id75 is used for predicting quantitative values,
such as an individual   s salary. in order to predict qualitative values, such as
whether a patient survives or dies, or whether the stock market increases
or decreases, fisher proposed id156 in 1936. in the
1940s, various authors put forth an alternative approach, id28.
in the early 1970s, nelder and wedderburn coined the term generalized
linear models for an entire class of statistical learning methods that include
both linear and id28 as special cases.

by the end of the 1970s, many more techniques for learning from data
were available. however, they were almost exclusively linear methods, be-
cause    tting non-linear relationships was computationally infeasible at the
time. by the 1980s, computing technology had    nally improved su   ciently
that non-linear methods were no longer computationally prohibitive. in mid
1980s breiman, friedman, olshen and stone introduced classi   cation and
regression trees, and were among the    rst to demonstrate the power of a
detailed practical implementation of a method, including cross-validation
for model selection. hastie and tibshirani coined the term generalized addi-
tive models in 1986 for a class of non-linear extensions to generalized linear
models, and also provided a practical software implementation.

since that time, inspired by the advent of machine learning and other
disciplines, statistical learning has emerged as a new sub   eld in statistics,
focused on supervised and unsupervised modeling and prediction. in recent
years, progress in statistical learning has been marked by the increasing
availability of powerful and relatively user-friendly software, such as the
popular and freely available r system. this has the potential to continue
the transformation of the    eld from a set of techniques used and developed
by statisticians and computer scientists to an essential toolkit for a much
broader community.

this book

the elements of statistical learning (esl) by hastie, tibshirani, and
friedman was    rst published in 2001. since that time, it has become an
important reference on the fundamentals of statistical machine learning.
its success derives from its comprehensive and detailed treatment of many
important topics in statistical learning, as well as the fact that (relative to
many upper-level statistics textbooks) it is accessible to a wide audience.
however, the greatest factor behind the success of esl has been its topical
nature. at the time of its publication, interest in the    eld of statistical

1. introduction

7

learning was starting to explode. esl provided one of the    rst accessible
and comprehensive introductions to the topic.

since esl was    rst published, the    eld of statistical learning has con-
tinued to    ourish. the    eld   s expansion has taken two forms. the most
obvious growth has involved the development of new and improved statis-
tical learning approaches aimed at answering a range of scienti   c questions
across a number of    elds. however, the    eld of statistical learning has
also expanded its audience. in the 1990s, increases in computational power
generated a surge of interest in the    eld from non-statisticians who were
eager to use cutting-edge statistical tools to analyze their data. unfortu-
nately, the highly technical nature of these approaches meant that the user
community remained primarily restricted to experts in statistics, computer
science, and related    elds with the training (and time) to understand and
implement them.

in recent years, new and improved software packages have signi   cantly
eased the implementation burden for many statistical learning methods.
at the same time, there has been growing recognition across a number of
   elds, from business to health care to genetics to the social sciences and
beyond, that statistical learning is a powerful tool with important practical
applications. as a result, the    eld has moved from one of primarily academic
interest to a mainstream discipline, with an enormous potential audience.
this trend will surely continue with the increasing availability of enormous
quantities of data and the software to analyze it.

the purpose of an introduction to statistical learning (isl) is to facili-
tate the transition of statistical learning from an academic to a mainstream
   eld. isl is not intended to replace esl, which is a far more comprehen-
sive text both in terms of the number of approaches considered and the
depth to which they are explored. we consider esl to be an important
companion for professionals (with graduate degrees in statistics, machine
learning, or related    elds) who need to understand the technical details
behind statistical learning approaches. however, the community of users of
statistical learning techniques has expanded to include individuals with a
wider range of interests and backgrounds. therefore, we believe that there
is now a place for a less technical and more accessible version of esl.

in teaching these topics over the years, we have discovered that they are
of interest to master   s and phd students in    elds as disparate as business
administration, biology, and computer science, as well as to quantitatively-
oriented upper-division undergraduates. it is important for this diverse
group to be able to understand the models, intuitions, and strengths and
weaknesses of the various approaches. but for this audience, many of the
technical details behind statistical learning methods, such as optimiza-
tion algorithms and theoretical properties, are not of primary interest.
we believe that these students do not need a deep understanding of these
aspects in order to become informed users of the various methodologies, and

8

1. introduction

in order to contribute to their chosen    elds through the use of statistical
learning tools.

islr is based on the following four premises.

1. many statistical learning methods are relevant and useful in a wide
range of academic and non-academic disciplines, beyond just the sta-
tistical sciences. we believe that many contemporary statistical learn-
ing procedures should, and will, become as widely available and used
as is currently the case for classical methods such as linear regres-
sion. as a result, rather than attempting to consider every possible
approach (an impossible task), we have concentrated on presenting
the methods that we believe are most widely applicable.

2. statistical learning should not be viewed as a series of black boxes. no
single approach will perform well in all possible applications. with-
out understanding all of the cogs inside the box, or the interaction
between those cogs, it is impossible to select the best box. hence, we
have attempted to carefully describe the model, intuition, assump-
tions, and trade-o   s behind each of the methods that we consider.

3. while it is important to know what job is performed by each cog, it
is not necessary to have the skills to construct the machine inside the
box! thus, we have minimized discussion of technical details related
to    tting procedures and theoretical properties. we assume that the
reader is comfortable with basic mathematical concepts, but we do
not assume a graduate degree in the mathematical sciences. for in-
stance, we have almost completely avoided the use of matrix algebra,
and it is possible to understand the entire book without a detailed
knowledge of matrices and vectors.

4. we presume that the reader is interested in applying statistical learn-
ing methods to real-world problems. in order to facilitate this, as well
as to motivate the techniques discussed, we have devoted a section
within each chapter to r computer labs. in each lab, we walk the
reader through a realistic application of the methods considered in
that chapter. when we have taught this material in our courses,
we have allocated roughly one-third of classroom time to working
through the labs, and we have found them to be extremely useful.
many of the less computationally-oriented students who were ini-
tially intimidated by r   s command level interface got the hang of
things over the course of the quarter or semester. we have used r
because it is freely available and is powerful enough to implement all
of the methods discussed in the book. it also has optional packages
that can be downloaded to implement literally thousands of addi-
tional methods. most importantly, r is the language of choice for
academic statisticians, and new approaches often become available in

1. introduction

9

r years before they are implemented in commercial packages. how-
ever, the labs in isl are self-contained, and can be skipped if the
reader wishes to use a di   erent software package or does not wish to
apply the methods discussed to real-world problems.

who should read this book?

this book is intended for anyone who is interested in using modern statis-
tical methods for modeling and prediction from data. this group includes
scientists, engineers, data analysts, or quants, but also less technical indi-
viduals with degrees in non-quantitative    elds such as the social sciences or
business. we expect that the reader will have had at least one elementary
course in statistics. background in id75 is also useful, though
not required, since we review the key concepts behind id75 in
chapter 3. the mathematical level of this book is modest, and a detailed
knowledge of matrix operations is not required. this book provides an in-
troduction to the statistical programming language r. previous exposure
to a programming language, such as matlab or python, is useful but not
required.

we have successfully taught material at this level to master   s and phd
students in business, computer science, biology, earth sciences, psychology,
and many other areas of the physical and social sciences. this book could
also be appropriate for advanced undergraduates who have already taken
a course on id75. in the context of a more mathematically
rigorous course in which esl serves as the primary textbook, isl could
be used as a supplementary text for teaching computational aspects of the
various approaches.

notation and simple matrix algebra

choosing notation for a textbook is always a di   cult task. for the most
part we adopt the same notational conventions as esl.

we will use n to represent the number of distinct data points, or observa-
tions, in our sample. we will let p denote the number of variables that are
available for use in making predictions. for example, the wage data set con-
sists of 12 variables for 3,000 people, so we have n = 3,000 observations and
p = 12 variables (such as year, age, wage, and more). note that throughout
this book, we indicate variable names using colored font: variable name.

in some examples, p might be quite large, such as on the order of thou-
sands or even millions; this situation arises quite often, for example, in the
analysis of modern biological data or web-based advertising data.

10

1. introduction

in general, we will let xij represent the value of the jth variable for the
ith observation, where i = 1, 2, . . . , n and j = 1, 2, . . . , p. throughout this
book, i will be used to index the samples or observations (from 1 to n) and
j will be used to index the variables (from 1 to p). we let x denote a n   p
matrix whose (i, j)th element is xij. that is,

   

            

x =

   

             .

x11
x12
x21
x22
...
...
xn1 xn2

. . . x1p
. . . x2p
...
. . .
. . . xnp

for readers who are unfamiliar with matrices, it is useful to visualize x as
a spreadsheet of numbers with n rows and p columns.

at times we will be interested in the rows of x, which we write as
x1, x2, . . . , xn. here xi is a vector of length p, containing the p variable
measurements for the ith observation. that is,

   

             .

   

            

xi1
xi2
...
xip

xi =

(1.1)

(vectors are by default represented as columns.) for example, for the wage
data, xi is a vector of length 12, consisting of year, age, wage, and other
values for the ith individual. at other times we will instead be interested
in the columns of x, which we write as x1, x2, . . . , xp. each is a vector of
length n. that is,

   

             .

   

            

x1j
x2j
...
xnj

xj =

for example, for the wage data, x1 contains the n = 3,000 values for year.

using this notation, the matrix x can be written as

x =

or

(cid:8)
x1 x2

       xp

(cid:9)

,

   

             .

            

   
xt
1
xt
2
...
xt
n

x =

1. introduction

11

the t notation denotes the transpose of a matrix or vector. so, for example,

   

            

xt =

   

             ,

x11 x21
x12 x22
...
...
x1p x2p

. . . xn1
. . . xn2
...
. . . xnp

while

(cid:8)
xi1 xi2

      

(cid:9)

.

xip

xt
i =

we use yi to denote the ith observation of the variable on which we
wish to make predictions, such as wage. hence, we write the set of all n
observations in vector form as

   

             .

   

            

y1
y2
...
yn

y =

then our observed data consists of {(x1, y1), (x2, y2), . . . , (xn, yn)}, where
each xi is a vector of length p. (if p = 1, then xi is simply a scalar.)

in this text, a vector of length n will always be denoted in lower case

bold ; e.g.

   

             .

   

            

a1
a2
...
an

a =

however, vectors that are not of length n (such as feature vectors of length
p, as in (1.1)) will be denoted in lower case normal font, e.g. a. scalars will
also be denoted in lower case normal font, e.g. a. in the rare cases in which
these two uses for lower case normal font lead to ambiguity, we will clarify
which use is intended. matrices will be denoted using bold capitals, such
as a. random variables will be denoted using capital normal font, e.g. a,
regardless of their dimensions.
occasionally we will want to indicate the dimension of a particular ob-
ject. to indicate that an object is a scalar, we will use the notation a     r.
to indicate that it is a vector of length k, we will use a     rk (or a     rn
if it is of length n). we will indicate that an object is a r    s matrix using
a     rr  s.

we have avoided using matrix algebra whenever possible. however, in
a few instances it becomes too cumbersome to avoid it entirely. in these
rare instances it is important to understand the concept of multiplying
two matrices. suppose that a     rr  d and b     rd  s. then the product

12

1. introduction

of a and b is denoted ab. the (i, j)th element of ab is computed by
multiplying each element of the ith row of a by the corresponding element
d
of the jth column of b. that is, (ab)ij =
k=1 aikbkj. as an example,
(cid:11)
consider
5
7

(cid:11)
1 2
3 4

(cid:12)
6
8

and b =

a =

(cid:10)

(cid:12)

.

then

(cid:11)
1 2
3 4

(cid:12)(cid:11)

(cid:12)

5 6
7 8

(cid:11)
1    5 + 2    7 1    6 + 2    8
3    5 + 4    7 3    6 + 4    8

=

ab =
.
note that this operation produces an r    s matrix. it is only possible to
compute ab if the number of columns of a is the same as the number of
rows of b.

=

(cid:12)
19 22
43 50

(cid:12)

(cid:11)

organization of this book

chapter 2 introduces the basic terminology and concepts behind statisti-
cal learning. this chapter also presents the k-nearest neighbor classi   er, a
very simple method that works surprisingly well on many problems. chap-
ters 3 and 4 cover classical linear methods for regression and classi   cation.
in particular, chapter 3 reviews id75, the fundamental start-
ing point for all regression methods. in chapter 4 we discuss two of the
most important classical classi   cation methods, id28 and lin-
ear discriminant analysis.

a central problem in all statistical learning situations involves choosing
the best method for a given application. hence, in chapter 5 we intro-
duce cross-validation and the bootstrap, which can be used to estimate the
accuracy of a number of di   erent methods in order to choose the best one.
much of the recent research in statistical learning has concentrated on
non-linear methods. however, linear methods often have advantages over
their non-linear competitors in terms of interpretability and sometimes also
accuracy. hence, in chapter 6 we consider a host of linear methods, both
classical and more modern, which o   er potential improvements over stan-
dard id75. these include stepwise selection, ridge regression,
principal components regression, partial least squares, and the lasso.

the remaining chapters move into the world of non-linear statistical
learning. we    rst introduce in chapter 7 a number of non-linear methods
that work well for problems with a single input variable. we then show how
these methods can be used to    t non-linear additive models for which there
is more than one input. in chapter 8, we investigate tree-based methods,
including id112, boosting, and id79s. support vector machines,
a set of approaches for performing both linear and non-linear classi   cation,

1. introduction

13

are discussed in chapter 9. finally, in chapter 10, we consider a setting
in which we have input variables but no output variable. in particular, we
present principal components analysis, id116 id91, and hierarchi-
cal id91.

at the end of each chapter, we present one or more r lab sections in
which we systematically work through applications of the various meth-
ods discussed in that chapter. these labs demonstrate the strengths and
weaknesses of the various approaches, and also provide a useful reference
for the syntax required to implement the various methods. the reader may
choose to work through the labs at his or her own pace, or the labs may
be the focus of group sessions as part of a classroom environment. within
each r lab, we present the results that we obtained when we performed
the lab at the time of writing this book. however, new versions of r are
continuously released, and over time, the packages called in the labs will be
updated. therefore, in the future, it is possible that the results shown in
the lab sections may no longer correspond precisely to the results obtained
by the reader who performs the labs. as necessary, we will post updates to
the labs on the book website.

we use the

symbol to denote sections or exercises that contain more
challenging concepts. these can be easily skipped by readers who do not
wish to delve as deeply into the material, or who lack the mathematical
background.

data sets used in labs and exercises

in this textbook, we illustrate statistical learning methods using applica-
tions from marketing,    nance, biology, and other areas. the islr package
available on the book website contains a number of data sets that are
required in order to perform the labs and exercises associated with this
book. one other data set is contained in the mass library, and yet another
is part of the base r distribution. table 1.1 contains a summary of the data
sets required to perform the labs and exercises. a couple of these data sets
are also available as text    les on the book website, for use in chapter 2.

book website

the website for this book is located at

www.statlearning.com

14

1. introduction

description

gas mileage, horsepower, and other information for cars.
housing values and other information about boston suburbs.
information about individuals o   ered caravan insurance.
information about car seat sales in 400 stores.
demographic characteristics, tuition, and more for usa colleges.
customer default records for a credit card company.
records and salaries for baseball players.
gene expression measurements for four cancer types.
gene expression measurements for 64 cancer cell lines.
sales information for citrus hill and minute maid orange juice.

name
auto
boston
caravan
carseats
college
default
hitters
khan
nci60
oj
portfolio past values of    nancial assets, for use in portfolio allocation.
daily percentage returns for s&p 500 over a 5-year period.
smarket
usarrests crime statistics per 100,000 residents in 50 states of usa.
wage
weekly

income survey data for males in central atlantic region of usa.
1,089 weekly stock market returns for 21 years.

table 1.1. a list of data sets needed to perform the labs and exercises in this
textbook. all data sets are available in the islr library, with the exception of
boston (part of mass) and usarrests (part of the base r distribution).

it contains a number of resources, including the r package associated with
this book, and some additional data sets.

acknowledgements

a few of the plots in this book were taken from esl: figures 6.7, 8.3,
and 10.12. all other plots are new to this book.

2
statistical learning

2.1 what is statistical learning?

in order to motivate our study of statistical learning, we begin with a
simple example. suppose that we are statistical consultants hired by a
client to provide advice on how to improve sales of a particular product. the
advertising data set consists of the sales of that product in 200 di   erent
markets, along with advertising budgets for the product in each of those
markets for three di   erent media: tv, radio, and newspaper. the data are
displayed in figure 2.1. it is not possible for our client to directly increase
sales of the product. on the other hand, they can control the advertising
expenditure in each of the three media. therefore, if we determine that
there is an association between advertising and sales, then we can instruct
our client to adjust advertising budgets, thereby indirectly increasing sales.
in other words, our goal is to develop an accurate model that can be used
to predict sales on the basis of the three media budgets.

in this setting, the advertising budgets are input variables while sales
is an output variable. the input variables are typically denoted using the
symbol x, with a subscript to distinguish them. so x1 might be the tv
budget, x2 the radio budget, and x3 the newspaper budget. the inputs
go by di   erent names, such as predictors, independent variables, features,
or sometimes just variables. the output variable   in this case, sales   is
often called the response or dependent variable, and is typically denoted
using the symbol y . throughout this book, we will use all of these terms
interchangeably.

g. james et al., an introduction to statistical learning: with applications in r,
springer texts in statistics, doi 10.1007/978-1-4614-7138-7 2,
   springer science+business media new york 2013

15

input
variable
output
variable

predictor

independent
variable
feature
variable
response

dependent
variable

16

2. statistical learning

5
2

0
2

5
1

0
1

5

l

s
e
a
s

5
2

0
2

5
1

0
1

5

l

s
e
a
s

5
2

0
2

5
1

0
1

5

l

s
e
a
s

0

50 100

200

300

0

10

20

30

40

50

0

20

40

60

80

100

tv

radio

newspaper

figure 2.1. the advertising data set. the plot displays sales, in thousands
of units, as a function of tv, radio, and newspaper budgets, in thousands of
dollars, for 200 di   erent markets. in each plot we show the simple least squares
   t of sales to that variable, as described in chapter 3. in other words, each blue
line represents a simple model that can be used to predict sales using tv, radio,
and newspaper, respectively.

more generally, suppose that we observe a quantitative response y and p
di   erent predictors, x1, x2, . . . , xp. we assume that there is some
relationship between y and x = (x1, x2, . . . , xp), which can be written
in the very general form

y = f (x) +  .

(2.1)

here f is some    xed but unknown function of x1, . . . , xp, and   is a random
error term, which is independent of x and has mean zero. in this formula-
tion, f represents the systematic information that x provides about y .

as another example, consider the left-hand panel of figure 2.2, a plot of
income versus years of education for 30 individuals in the income data set.
the plot suggests that one might be able to predict income using years of
education. however, the function f that connects the input variable to the
output variable is in general unknown. in this situation one must estimate
f based on the observed points. since income is a simulated data set, f is
known and is shown by the blue curve in the right-hand panel of figure 2.2.
the vertical lines represent the error terms  . we note that some of the
30 observations lie above the blue curve and some lie below it; overall, the
errors have approximately mean zero.

in general, the function f may involve more than one input variable.
in figure 2.3 we plot income as a function of years of education and
seniority. here f is a two-dimensional surface that must be estimated
based on the observed data.

error term

systematic

2.1 what is statistical learning?

17

0
8

0
7

0
6

0
5

0
4

0
3

0
2

e
m
o
c
n

i

0
8

0
7

0
6

0
5

0
4

0
3

0
2

e
m
o
c
n

i

10

12

14

16

18

20

22

10

12

14

16

18

20

22

years of education

years of education

figure 2.2. the income data set. left: the red dots are the observed values
of income (in tens of thousands of dollars) and years of education for 30 indi-
viduals. right: the blue curve represents the true underlying relationship between
income and years of education, which is generally unknown (but is known in
this case because the data were simulated). the black lines represent the error
associated with each observation. note that some errors are positive (if an ob-
servation lies above the blue curve) and some are negative (if an observation lies
below the curve). overall, these errors have approximately mean zero.

in essence, statistical learning refers to a set of approaches for estimating
f . in this chapter we outline some of the key theoretical concepts that arise
in estimating f , as well as tools for evaluating the estimates obtained.

2.1.1 why estimate f ?

there are two main reasons that we may wish to estimate f : prediction
and id136. we discuss each in turn.

prediction

in many situations, a set of inputs x are readily available, but the output
y cannot be easily obtained. in this setting, since the error term averages
to zero, we can predict y using

  y =   f (x),

(2.2)

where   f represents our estimate for f , and   y represents the resulting pre-
diction for y . in this setting,   f is often treated as a black box, in the sense
that one is not typically concerned with the exact form of   f , provided that
it yields accurate predictions for y .

18

2. statistical learning

i

n

c

o

m

e

ye

ars of e

d

ucatio

n

seniority

figure 2.3. the plot displays income as a function of years of education
and seniority in the income data set. the blue surface represents the true un-
derlying relationship between income and years of education and seniority,
which is known since the data are simulated. the red dots indicate the observed
values of these quantities for 30 individuals.

as an example, suppose that x1, . . . , xp are characteristics of a patient   s
blood sample that can be easily measured in a lab, and y is a variable
encoding the patient   s risk for a severe adverse reaction to a particular
drug. it is natural to seek to predict y using x, since we can then avoid
giving the drug in question to patients who are at high risk of an adverse
reaction   that is, patients for whom the estimate of y is high.

the accuracy of   y as a prediction for y depends on two quantities,
which we will call the reducible error and the irreducible error. in general,
  f will not be a perfect estimate for f , and this inaccuracy will introduce
some error. this error is reducible because we can potentially improve the
accuracy of   f by using the most appropriate statistical learning technique to
estimate f . however, even if it were possible to form a perfect estimate for
f , so that our estimated response took the form   y = f (x), our prediction
would still have some error in it! this is because y is also a function of
 , which, by de   nition, cannot be predicted using x. therefore, variability
associated with   also a   ects the accuracy of our predictions. this is known
as the irreducible error, because no matter how well we estimate f , we
cannot reduce the error introduced by  .

why is the irreducible error larger than zero? the quantity   may con-
tain unmeasured variables that are useful in predicting y : since we don   t
measure them, f cannot use them for its prediction. the quantity   may
also contain unmeasurable variation. for example, the risk of an adverse
reaction might vary for a given patient on a given day, depending on

reducible
error
irreducible
error

2.1 what is statistical learning?

19

manufacturing variation in the drug itself or the patient   s general feeling
of well-being on that day.

consider a given estimate   f and a set of predictors x, which yields the
prediction   y =   f (x). assume for a moment that both   f and x are    xed.
then, it is easy to show that

e(y       y )2 = e[f (x) +         f (x)]2

= [f (x)       f (x)]2
(cid:16)

(cid:14)(cid:15)

(cid:13)

(cid:13) (cid:14)(cid:15) (cid:16)
+ var( )

,

(2.3)

expected
value

variance

reducible

irreducible

where e(y       y )2 represents the average, or expected value, of the squared
di   erence between the predicted and actual value of y , and var( ) repre-
sents the variance associated with the error term  .

the focus of this book is on techniques for estimating f with the aim of
minimizing the reducible error. it is important to keep in mind that the
irreducible error will always provide an upper bound on the accuracy of
our prediction for y . this bound is almost always unknown in practice.

id136

we are often interested in understanding the way that y is a   ected as
x1, . . . , xp change. in this situation we wish to estimate f , but our goal is
not necessarily to make predictions for y . we instead want to understand
the relationship between x and y , or more speci   cally, to understand how
y changes as a function of x1, . . . , xp. now   f cannot be treated as a black
box, because we need to know its exact form. in this setting, one may be
interested in answering the following questions:

    which predictors are associated with the response? it is often the case
that only a small fraction of the available predictors are substantially
associated with y . identifying the few important predictors among a
large set of possible variables can be extremely useful, depending on
the application.

    what is the relationship between the response and each predictor?
some predictors may have a positive relationship with y , in the sense
that increasing the predictor is associated with increasing values of
y . other predictors may have the opposite relationship. depending
on the complexity of f , the relationship between the response and a
given predictor may also depend on the values of the other predictors.
    can the relationship between y and each predictor be adequately sum-
marized using a linear equation, or is the relationship more compli-
cated? historically, most methods for estimating f have taken a linear
form. in some situations, such an assumption is reasonable or even de-
sirable. but often the true relationship is more complicated, in which
case a linear model may not provide an accurate representation of
the relationship between the input and output variables.

20

2. statistical learning

in this book, we will see a number of examples that fall into the prediction

setting, the id136 setting, or a combination of the two.

for instance, consider a company that is interested in conducting a
direct-marketing campaign. the goal is to identify individuals who will
respond positively to a mailing, based on observations of demographic vari-
ables measured on each individual. in this case, the demographic variables
serve as predictors, and response to the marketing campaign (either pos-
itive or negative) serves as the outcome. the company is not interested
in obtaining a deep understanding of the relationships between each in-
dividual predictor and the response; instead, the company simply wants
an accurate model to predict the response using the predictors. this is an
example of modeling for prediction.

in contrast, consider the advertising data illustrated in figure 2.1. one

may be interested in answering questions such as:

    which media contribute to sales?

    which media generate the biggest boost in sales? or

    how much increase in sales is associated with a given increase in tv

advertising?

this situation falls into the id136 paradigm. another example involves
modeling the brand of a product that a customer might purchase based on
variables such as price, store location, discount levels, competition price,
and so forth. in this situation one might really be most interested in how
each of the individual variables a   ects the id203 of purchase. for
instance, what e   ect will changing the price of a product have on sales?
this is an example of modeling for id136.

finally, some modeling could be conducted both for prediction and infer-
ence. for example, in a real estate setting, one may seek to relate values of
homes to inputs such as crime rate, zoning, distance from a river, air qual-
ity, schools, income level of community, size of houses, and so forth. in this
case one might be interested in how the individual input variables a   ect
the prices   that is, how much extra will a house be worth if it has a view
of the river? this is an id136 problem. alternatively, one may simply
be interested in predicting the value of a home given its characteristics: is
this house under- or over-valued? this is a prediction problem.

depending on whether our ultimate goal is prediction, id136, or a
combination of the two, di   erent methods for estimating f may be appro-
priate. for example, linear models allow for relatively simple and inter-
pretable id136, but may not yield as accurate predictions as some other
approaches. in contrast, some of the highly non-linear approaches that we
discuss in the later chapters of this book can potentially provide quite accu-
rate predictions for y , but this comes at the expense of a less interpretable
model for which id136 is more challenging.

linear model

2.1 what is statistical learning?

21

2.1.2 how do we estimate f ?

throughout this book, we explore many linear and non-linear approaches
for estimating f . however, these methods generally share certain charac-
teristics. we provide an overview of these shared characteristics in this
section. we will always assume that we have observed a set of n di   erent
data points. for example in figure 2.2 we observed n = 30 data points.
these observations are called the training data because we will use these
observations to train, or teach, our method how to estimate f . let xij
represent the value of the jth predictor, or input, for observation i, where
i = 1, 2, . . . , n and j = 1, 2, . . . , p. correspondingly, let yi represent the
response variable for the ith observation. then our training data consist of
{(x1, y1), (x2, y2), . . . , (xn, yn)} where xi = (xi1, xi2, . . . , xip)t .

our goal is to apply a statistical learning method to the training data
in order to estimate the unknown function f . in other words, we want to
   nd a function   f such that y       f (x) for any observation (x, y ). broadly
speaking, most statistical learning methods for this task can be character-
ized as either parametric or non-parametric. we now brie   y discuss these
two types of approaches.

parametric methods

parametric methods involve a two-step model-based approach.

1. first, we make an assumption about the functional form, or shape,
of f . for example, one very simple assumption is that f is linear in
x:

f (x) =   0 +   1x1 +   2x2 + . . . +   pxp.

(2.4)

this is a linear model, which will be discussed extensively in chap-
ter 3. once we have assumed that f is linear, the problem of estimat-
ing f is greatly simpli   ed. instead of having to estimate an entirely
arbitrary p-dimensional function f (x), one only needs to estimate
the p + 1 coe   cients   0,   1, . . . ,   p.

training data

parametric
non-
parametric

2. after a model has been selected, we need a procedure that uses the
training data to    t or train the model. in the case of the linear model
(2.4), we need to estimate the parameters   0,   1, . . . ,   p. that is, we
want to    nd values of these parameters such that

y       0 +   1x1 +   2x2 + . . . +   pxp.

   t
train

the most common approach to    tting the model (2.4) is referred to
as (ordinary) least squares, which we discuss in chapter 3. however,
least squares is one of many possible ways to    t the linear model. in
chapter 6, we discuss other approaches for estimating the parameters
in (2.4).

least squares

the model-based approach just described is referred to as parametric;
it reduces the problem of estimating f down to one of estimating a set of

22

2. statistical learning

i

n

c

o

m

e

ye

ars of e

d

ucatio

n

seniority

figure 2.4. a linear model    t by least squares to the income data from fig-
ure 2.3. the observations are shown in red, and the yellow plane indicates the
least squares    t to the data.

parameters. assuming a parametric form for f simpli   es the problem of
estimating f because it is generally much easier to estimate a set of pa-
rameters, such as   0,   1, . . . ,   p in the linear model (2.4), than it is to    t
an entirely arbitrary function f . the potential disadvantage of a paramet-
ric approach is that the model we choose will usually not match the true
unknown form of f . if the chosen model is too far from the true f , then
our estimate will be poor. we can try to address this problem by choos-
ing    exible models that can    t many di   erent possible functional forms
for f . but in general,    tting a more    exible model requires estimating a
greater number of parameters. these more complex models can lead to a
phenomenon known as over   tting the data, which essentially means they
follow the errors, or noise, too closely. these issues are discussed through-
out this book.

figure 2.4 shows an example of the parametric approach applied to the

income data from figure 2.3. we have    t a linear model of the form

income       0 +   1    education +   2    seniority.

since we have assumed a linear relationship between the response and the
two predictors, the entire    tting problem reduces to estimating   0,   1, and
  2, which we do using least squares id75. comparing figure 2.3
to figure 2.4, we can see that the linear    t given in figure 2.4 is not quite
right: the true f has some curvature that is not captured in the linear    t.
however, the linear    t still appears to do a reasonable job of capturing the
positive relationship between years of education and income, as well as the

   exible

over   tting

noise

2.1 what is statistical learning?

23

seniority

i

n

c

o

m

e

ye

ars of e

d

ucatio

n

figure 2.5. a smooth thin-plate spline    t to the income data from figure 2.3
is shown in yellow; the observations are displayed in red. splines are discussed in
chapter 7.

slightly less positive relationship between seniority and income. it may be
that with such a small number of observations, this is the best we can do.

non-parametric methods

non-parametric methods do not make explicit assumptions about the func-
tional form of f . instead they seek an estimate of f that gets as close to the
data points as possible without being too rough or wiggly. such approaches
can have a major advantage over parametric approaches: by avoiding the
assumption of a particular functional form for f , they have the potential
to accurately    t a wider range of possible shapes for f . any parametric
approach brings with it the possibility that the functional form used to
estimate f is very di   erent from the true f , in which case the resulting
model will not    t the data well. in contrast, non-parametric approaches
completely avoid this danger, since essentially no assumption about the
form of f is made. but non-parametric approaches do su   er from a major
disadvantage: since they do not reduce the problem of estimating f to a
small number of parameters, a very large number of observations (far more
than is typically needed for a parametric approach) is required in order to
obtain an accurate estimate for f .

an example of a non-parametric approach to    tting the income data is
shown in figure 2.5. a thin-plate spline is used to estimate f . this ap-
proach does not impose any pre-speci   ed model on f . it instead attempts
to produce an estimate for f that is as close as possible to the observed
data, subject to the    t   that is, the yellow surface in figure 2.5   being

thin-plate
spline

24

2. statistical learning

i

n

c

o

m

e

ye

ars of e

d

ucatio

n

seniority

figure 2.6. a rough thin-plate spline    t to the income data from figure 2.3.
this    t makes zero errors on the training data.

smooth. in this case, the non-parametric    t has produced a remarkably ac-
curate estimate of the true f shown in figure 2.3. in order to    t a thin-plate
spline, the data analyst must select a level of smoothness. figure 2.6 shows
the same thin-plate spline    t using a lower level of smoothness, allowing
for a rougher    t. the resulting estimate    ts the observed data perfectly!
however, the spline    t shown in figure 2.6 is far more variable than the
true function f , from figure 2.3. this is an example of over   tting the
data, which we discussed previously. it is an undesirable situation because
the    t obtained will not yield accurate estimates of the response on new
observations that were not part of the original training data set. we dis-
cuss methods for choosing the correct amount of smoothness in chapter 5.
splines are discussed in chapter 7.

as we have seen, there are advantages and disadvantages to parametric
and non-parametric methods for statistical learning. we explore both types
of methods throughout this book.

2.1.3 the trade-o    between prediction accuracy and model

interpretability

of the many methods that we examine in this book, some are less    exible,
or more restrictive, in the sense that they can produce just a relatively
small range of shapes to estimate f . for example, id75 is a
relatively in   exible approach, because it can only generate linear functions
such as the lines shown in figure 2.1 or the plane shown in figure 2.4.

2.1 what is statistical learning?

25

h
g
h

i

subset selection

lasso

y
t
i
l
i

b
a
t
e
r
p
r
e
t
n
i

w
o
l

low

least squares

generalized additive models

trees

id112, boosting

support vector machines

flexibility

high

figure 2.7. a representation of the tradeo    between    exibility and inter-
pretability, using di   erent statistical learning methods. in general, as the    exibil-
ity of a method increases, its interpretability decreases.

other methods, such as the thin plate splines shown in figures 2.5 and 2.6,
are considerably more    exible because they can generate a much wider
range of possible shapes to estimate f .

one might reasonably ask the following question: why would we ever
choose to use a more restrictive method instead of a very    exible approach?
there are several reasons that we might prefer a more restrictive model.
if we are mainly interested in id136, then restrictive models are much
more interpretable. for instance, when id136 is the goal, the linear
model may be a good choice since it will be quite easy to understand
the relationship between y and x1, x2, . . . , xp. in contrast, very    exible
approaches, such as the splines discussed in chapter 7 and displayed in
figures 2.5 and 2.6, and the boosting methods discussed in chapter 8, can
lead to such complicated estimates of f that it is di   cult to understand
how any individual predictor is associated with the response.

figure 2.7 provides an illustration of the trade-o    between    exibility and
interpretability for some of the methods that we cover in this book. least
squares id75, discussed in chapter 3, is relatively in   exible but
is quite interpretable. the lasso, discussed in chapter 6, relies upon the
linear model (2.4) but uses an alternative    tting procedure for estimating
the coe   cients   0,   1, . . . ,   p. the new procedure is more restrictive in es-
timating the coe   cients, and sets a number of them to exactly zero. hence
in this sense the lasso is a less    exible approach than id75.
it is also more interpretable than id75, because in the    nal
model the response variable will only be related to a small subset of the
predictors   namely, those with nonzero coe   cient estimates. generalized

lasso

generalized
additive
model

id112

boosting

support
vector
machine

26

2. statistical learning

additive models (gams), discussed in chapter 7, instead extend the lin-
ear model (2.4) to allow for certain non-linear relationships. consequently,
gams are more    exible than id75. they are also somewhat
less interpretable than id75, because the relationship between
each predictor and the response is now modeled using a curve. finally, fully
non-linear methods such as id112, boosting, and support vector machines
with non-linear kernels, discussed in chapters 8 and 9, are highly    exible
approaches that are harder to interpret.

we have established that when id136 is the goal, there are clear ad-
vantages to using simple and relatively in   exible statistical learning meth-
ods. in some settings, however, we are only interested in prediction, and
the interpretability of the predictive model is simply not of interest. for
instance, if we seek to develop an algorithm to predict the price of a
stock, our sole requirement for the algorithm is that it predict accurately   
interpretability is not a concern. in this setting, we might expect that it
will be best to use the most    exible model available. surprisingly, this is
not always the case! we will often obtain more accurate predictions using
a less    exible method. this phenomenon, which may seem counterintuitive
at    rst glance, has to do with the potential for over   tting in highly    exible
methods. we saw an example of over   tting in figure 2.6. we will discuss
this very important concept further in section 2.2 and throughout this
book.

2.1.4 supervised versus unsupervised learning

most statistical learning problems fall into one of two categories: supervised
or unsupervised. the examples that we have discussed so far in this chap-
ter all fall into the supervised learning domain. for each observation of the
predictor measurement(s) xi, i = 1, . . . , n there is an associated response
measurement yi. we wish to    t a model that relates the response to the
predictors, with the aim of accurately predicting the response for future
observations (prediction) or better understanding the relationship between
the response and the predictors (id136). many classical statistical learn-
ing methods such as id75 and id28 (chapter 4), as
well as more modern approaches such as gam, boosting, and support vec-
tor machines, operate in the supervised learning domain. the vast majority
of this book is devoted to this setting.

in contrast, unsupervised learning describes the somewhat more chal-
lenging situation in which for every observation i = 1, . . . , n, we observe
a vector of measurements xi but no associated response yi. it is not pos-
sible to    t a id75 model, since there is no response variable
to predict. in this setting, we are in some sense working blind; the sit-
uation is referred to as unsupervised because we lack a response vari-
able that can supervise our analysis. what sort of statistical analysis is

supervised

unsupervised

logistic
regression

2.1 what is statistical learning?

27

2
1

0
1

8

6

4

2

8

6

4

2

0

2

4

6

8

10

12

0

2

4

6

figure 2.8. a id91 data set involving three groups. each group is shown
using a di   erent colored symbol. left: the three groups are well-separated. in
this setting, a id91 approach should successfully identify the three groups.
right: there is some overlap among the groups. now the id91 task is more
challenging.

possible? we can seek to understand the relationships between the variables
or between the observations. one statistical learning tool that we may use
in this setting is cluster analysis, or id91. the goal of cluster analysis
is to ascertain, on the basis of x1, . . . , xn, whether the observations fall into
relatively distinct groups. for example, in a market segmentation study we
might observe multiple characteristics (variables) for potential customers,
such as zip code, family income, and shopping habits. we might believe
that the customers fall into di   erent groups, such as big spenders versus
low spenders. if the information about each customer   s spending patterns
were available, then a supervised analysis would be possible. however, this
information is not available   that is, we do not know whether each poten-
tial customer is a big spender or not. in this setting, we can try to cluster
the customers on the basis of the variables measured, in order to identify
distinct groups of potential customers. identifying such groups can be of
interest because it might be that the groups di   er with respect to some
property of interest, such as spending habits.

figure 2.8 provides a simple illustration of the id91 problem. we
have plotted 150 observations with measurements on two variables, x1
and x2. each observation corresponds to one of three distinct groups. for
illustrative purposes, we have plotted the members of each group using
di   erent colors and symbols. however, in practice the group memberships
are unknown, and the goal is to determine the group to which each ob-
servation belongs. in the left-hand panel of figure 2.8, this is a relatively
easy task because the groups are well-separated. in contrast, the right-hand
panel illustrates a more challenging problem in which there is some overlap

cluster
analysis

28

2. statistical learning

between the groups. a id91 method could not be expected to assign
all of the overlapping points to their correct group (blue, green, or orange).
in the examples shown in figure 2.8, there are only two variables, and
so one can simply visually inspect the scatterplots of the observations in
order to identify clusters. however, in practice, we often encounter data
sets that contain many more than two variables. in this case, we cannot
easily plot the observations. for instance, if there are p variables in our
data set, then p(p     1)/2 distinct scatterplots can be made, and visual
inspection is simply not a viable way to identify clusters. for this reason,
automated id91 methods are important. we discuss id91 and
other unsupervised learning approaches in chapter 10.

many problems fall naturally into the supervised or unsupervised learn-
ing paradigms. however, sometimes the question of whether an analysis
should be considered supervised or unsupervised is less clear-cut. for in-
stance, suppose that we have a set of n observations. for m of the observa-
tions, where m < n, we have both predictor measurements and a response
measurement. for the remaining n     m observations, we have predictor
measurements but no response measurement. such a scenario can arise if
the predictors can be measured relatively cheaply but the corresponding
responses are much more expensive to collect. we refer to this setting as
a semi-supervised learning problem. in this setting, we wish to use a sta-
tistical learning method that can incorporate the m observations for which
response measurements are available as well as the n     m observations for
which they are not. although this is an interesting topic, it is beyond the
scope of this book.

semi-
supervised
learning

2.1.5 regression versus classi   cation problems

variables can be characterized as either quantitative or qualitative (also
known as categorical). quantitative variables take on numerical values.
examples include a person   s age, height, or income, the value of a house,
and the price of a stock. in contrast, qualitative variables take on val-
ues in one of k di   erent classes, or categories. examples of qualitative
variables include a person   s gender (male or female), the brand of prod-
uct purchased (brand a, b, or c), whether a person defaults on a debt
(yes or no), or a cancer diagnosis (acute myelogenous leukemia, acute
lymphoblastic leukemia, or no leukemia). we tend to refer to problems
with a quantitative response as regression problems, while those involv-
ing a qualitative response are often referred to as classi   cation problems.
however, the distinction is not always that crisp. least squares linear re-
gression (chapter 3) is used with a quantitative response, whereas logistic
regression (chapter 4) is typically used with a qualitative (two-class, or
binary) response. as such it is often used as a classi   cation method. but
since it estimates class probabilities, it can be thought of as a regression

quantitative

qualitative

categorical

class

regression

classi   cation

binary

2.2 assessing model accuracy

29

method as well. some statistical methods, such as k-nearest neighbors
(chapters 2 and 4) and boosting (chapter 8), can be used in the case of
either quantitative or qualitative responses.

we tend to select statistical learning methods on the basis of whether
the response is quantitative or qualitative; i.e. we might use linear regres-
sion when quantitative and id28 when qualitative. however,
whether the predictors are qualitative or quantitative is generally consid-
ered less important. most of the statistical learning methods discussed in
this book can be applied regardless of the predictor variable type, provided
that any qualitative predictors are properly coded before the analysis is
performed. this is discussed in chapter 3.

2.2 assessing model accuracy

one of the key aims of this book is to introduce the reader to a wide range
of statistical learning methods that extend far beyond the standard linear
regression approach. why is it necessary to introduce so many di   erent
statistical learning approaches, rather than just a single best method? there
is no free lunch in statistics: no one method dominates all others over all
possible data sets. on a particular data set, one speci   c method may work
best, but some other method may work better on a similar but di   erent
data set. hence it is an important task to decide for any given set of data
which method produces the best results. selecting the best approach can
be one of the most challenging parts of performing statistical learning in
practice.

in this section, we discuss some of the most important concepts that
arise in selecting a statistical learning procedure for a speci   c data set. as
the book progresses, we will explain how the concepts presented here can
be applied in practice.

2.2.1 measuring the quality of fit

in order to evaluate the performance of a statistical learning method on
a given data set, we need some way to measure how well its predictions
actually match the observed data. that is, we need to quantify the extent
to which the predicted response value for a given observation is close to
the true response value for that observation. in the regression setting, the
most commonly-used measure is the mean squared error (mse), given by mean

m se =

1
n

n(cid:17)

i=1

(yi       f (xi))2,

squared
error

(2.5)

30

2. statistical learning

where   f (xi) is the prediction that   f gives for the ith observation. the mse
will be small if the predicted responses are very close to the true responses,
and will be large if for some of the observations, the predicted and true
responses di   er substantially.

the mse in (2.5) is computed using the training data that was used to
   t the model, and so should more accurately be referred to as the training
mse. but in general, we do not really care how well the method works
on the training data. rather, we are interested in the accuracy of the pre-
dictions that we obtain when we apply our method to previously unseen
test data. why is this what we care about? suppose that we are interested
in developing an algorithm to predict a stock   s price based on previous
stock returns. we can train the method using stock returns from the past
6 months. but we don   t really care how well our method predicts last week   s
stock price. we instead care about how well it will predict tomorrow   s price
or next month   s price. on a similar note, suppose that we have clinical
measurements (e.g. weight, blood pressure, height, age, family history of
disease) for a number of patients, as well as information about whether each
patient has diabetes. we can use these patients to train a statistical learn-
ing method to predict risk of diabetes based on clinical measurements. in
practice, we want this method to accurately predict diabetes risk for future
patients based on their clinical measurements. we are not very interested
in whether or not the method accurately predicts diabetes risk for patients
used to train the model, since we already know which of those patients
have diabetes.

to state it more mathematically, suppose that we    t our statistical learn-

ing method on our training observations {(x1, y1), (x2, y2), . . . , (xn, yn)},
and we obtain the estimate   f . we can then compute   f (x1),   f (x2), . . . ,   f (xn).
if these are approximately equal to y1, y2, . . . , yn, then the training mse
given by (2.5) is small. however, we are really not interested in whether
  f (xi)     yi; instead, we want to know whether   f (x0) is approximately equal
to y0, where (x0, y0) is a previously unseen test observation not used to train
the statistical learning method. we want to choose the method that gives
the lowest test mse, as opposed to the lowest training mse. in other words,
if we had a large number of test observations, we could compute

ave(y0       f (x0))2,

(2.6)

the average squared prediction error for these test observations (x0, y0).
we   d like to select the model for which the average of this quantity   the
test mse   is as small as possible.

how can we go about trying to select a method that minimizes the test
mse? in some settings, we may have a test data set available   that is,
we may have access to a set of observations that were not used to train
the statistical learning method. we can then simply evaluate (2.6) on the
test observations, and select the learning method for which the test mse is

training
mse

test data

test mse

2.2 assessing model accuracy

31

y

2
1

0
1

8

6

4

2

r
o
r
r

 

e
d
e
r
a
u
q
s
n
a
e
m

 

5

.

2

0

.

2

5

.

1

0

.

1

5

.

0

0

.

0

0

20

40

60

80

100

2

5

10

20

x

flexibility

figure 2.9. left: data simulated from f , shown in black. three estimates of
f are shown: the id75 line (orange curve), and two smoothing spline
   ts (blue and green curves). right: training mse (grey curve), test mse (red
curve), and minimum possible test mse over all methods (dashed line). squares
represent the training and test mses for the three    ts shown in the left-hand
panel.

smallest. but what if no test observations are available? in that case, one
might imagine simply selecting a statistical learning method that minimizes
the training mse (2.5). this seems like it might be a sensible approach,
since the training mse and the test mse appear to be closely related.
unfortunately, there is a fundamental problem with this strategy: there
is no guarantee that the method with the lowest training mse will also
have the lowest test mse. roughly speaking, the problem is that many
statistical methods speci   cally estimate coe   cients so as to minimize the
training set mse. for these methods, the training set mse can be quite
small, but the test mse is often much larger.

figure 2.9 illustrates this phenomenon on a simple example. in the left-
hand panel of figure 2.9, we have generated observations from (2.1) with
the true f given by the black curve. the orange, blue and green curves illus-
trate three possible estimates for f obtained using methods with increasing
levels of    exibility. the orange line is the id75    t, which is rela-
tively in   exible. the blue and green curves were produced using smoothing
splines, discussed in chapter 7, with di   erent levels of smoothness. it is
clear that as the level of    exibility increases, the curves    t the observed
data more closely. the green curve is the most    exible and matches the
data very well; however, we observe that it    ts the true f (shown in black)
poorly because it is too wiggly. by adjusting the level of    exibility of the
smoothing spline    t, we can produce many di   erent    ts to this data.

smoothing
spline

degrees of
freedom

32

2. statistical learning

we now move on to the right-hand panel of figure 2.9. the grey curve
displays the average training mse as a function of    exibility, or more for-
mally the degrees of freedom, for a number of smoothing splines. the de-
grees of freedom is a quantity that summarizes the    exibility of a curve; it
is discussed more fully in chapter 7. the orange, blue and green squares
indicate the mses associated with the corresponding curves in the left-
hand panel. a more restricted and hence smoother curve has fewer degrees
of freedom than a wiggly curve   note that in figure 2.9, id75
is at the most restrictive end, with two degrees of freedom. the training
mse declines monotonically as    exibility increases. in this example the
true f is non-linear, and so the orange linear    t is not    exible enough to
estimate f well. the green curve has the lowest training mse of all three
methods, since it corresponds to the most    exible of the three curves    t in
the left-hand panel.

in this example, we know the true function f , and so we can also com-
pute the test mse over a very large test set, as a function of    exibility. (of
course, in general f is unknown, so this will not be possible.) the test mse
is displayed using the red curve in the right-hand panel of figure 2.9. as
with the training mse, the test mse initially declines as the level of    ex-
ibility increases. however, at some point the test mse levels o    and then
starts to increase again. consequently, the orange and green curves both
have high test mse. the blue curve minimizes the test mse, which should
not be surprising given that visually it appears to estimate f the best in the
left-hand panel of figure 2.9. the horizontal dashed line indicates var( ),
the irreducible error in (2.3), which corresponds to the lowest achievable
test mse among all possible methods. hence, the smoothing spline repre-
sented by the blue curve is close to optimal.

in the right-hand panel of figure 2.9, as the    exibility of the statistical
learning method increases, we observe a monotone decrease in the training
mse and a u-shape in the test mse. this is a fundamental property of
statistical learning that holds regardless of the particular data set at hand
and regardless of the statistical method being used. as model    exibility
increases, training mse will decrease, but the test mse may not. when
a given method yields a small training mse but a large test mse, we are
said to be over   tting the data. this happens because our statistical learning
procedure is working too hard to    nd patterns in the training data, and
may be picking up some patterns that are just caused by random chance
rather than by true properties of the unknown function f . when we over   t
the training data, the test mse will be very large because the supposed
patterns that the method found in the training data simply don   t exist
in the test data. note that regardless of whether or not over   tting has
occurred, we almost always expect the training mse to be smaller than
the test mse because most statistical learning methods either directly or
indirectly seek to minimize the training mse. over   tting refers speci   cally
to the case in which a less    exible model would have yielded a smaller
test mse.

2.2 assessing model accuracy

33

y

2
1

0
1

8

6

4

2

r
o
r
r

 

e
d
e
r
a
u
q
s
n
a
e
m

 

5

.

2

0

.

2

5

.

1

0

.

1

5

.

0

0

.

0

0

20

40

60

80

100

2

5

10

20

x

flexibility

figure 2.10. details are as in figure 2.9, using a di   erent true f that is
much closer to linear. in this setting, id75 provides a very good    t to
the data.

figure 2.10 provides another example in which the true f is approxi-
mately linear. again we observe that the training mse decreases mono-
tonically as the model    exibility increases, and that there is a u-shape in
the test mse. however, because the truth is close to linear, the test mse
only decreases slightly before increasing again, so that the orange least
squares    t is substantially better than the highly    exible green curve. fi-
nally, figure 2.11 displays an example in which f is highly non-linear. the
training and test mse curves still exhibit the same general patterns, but
now there is a rapid decrease in both curves before the test mse starts to
increase slowly.

in practice, one can usually compute the training mse with relative
ease, but estimating test mse is considerably more di   cult because usually
no test data are available. as the previous three examples illustrate, the
   exibility level corresponding to the model with the minimal test mse can
vary considerably among data sets. throughout this book, we discuss a
variety of approaches that can be used in practice to estimate this minimum
point. one important method is cross-validation (chapter 5), which is a cross-
method for estimating test mse using the training data.

validation

2.2.2 the bias-variance trade-o   

the u-shape observed in the test mse curves (figures 2.9   2.11) turns out
to be the result of two competing properties of statistical learning methods.
though the mathematical proof is beyond the scope of this book, it is
possible to show that the expected test mse, for a given value x0, can

34

2. statistical learning

y

0
2

0
1

0

0
1
   

r
o
r
r

 

e
d
e
r
a
u
q
s
n
a
e
m

 

0
2

5
1

0
1

5

0

0

20

40

60

80

100

2

5

10

20

x

flexibility

figure 2.11. details are as in figure 2.9, using a di   erent f that is far from
linear. in this setting, id75 provides a very poor    t to the data.

always be decomposed into the sum of three fundamental quantities: the
variance of   f (x0), the squared bias of   f (x0) and the variance of the error
terms  . that is,

= var(   f (x0)) + [bias(   f (x0))]2 + var( ).

(2.7)

e

(cid:18)

(cid:19)2
y0       f (x0)
(cid:18)

(cid:19)2
y0       f (x0)

here the notation e
de   nes the expected test mse, and refers
to the average test mse that we would obtain if we repeatedly estimated
f using a large number of training sets, and tested each at x0. the overall

(cid:19)2
(cid:18)
y0       f (x0)

over all

expected test mse can be computed by averaging e
possible values of x0 in the test set.

equation 2.7 tells us that in order to minimize the expected test error,
we need to select a statistical learning method that simultaneously achieves
low variance and low bias. note that variance is inherently a nonnegative
quantity, and squared bias is also nonnegative. hence, we see that the
expected test mse can never lie below var( ), the irreducible error from
(2.3).

what do we mean by the variance and bias of a statistical learning
method? variance refers to the amount by which   f would change if we
estimated it using a di   erent training data set. since the training data
are used to    t the statistical learning method, di   erent training data sets
will result in a di   erent   f . but ideally the estimate for f should not vary
too much between training sets. however, if a method has high variance
then small changes in the training data can result in large changes in   f . in
general, more    exible statistical methods have higher variance. consider the

variance
bias

expected
test mse

2.2 assessing model accuracy

35

green and orange curves in figure 2.9. the    exible green curve is following
the observations very closely. it has high variance because changing any
one of these data points may cause the estimate   f to change considerably.
in contrast, the orange least squares line is relatively in   exible and has low
variance, because moving any single observation will likely cause only a
small shift in the position of the line.

on the other hand, bias refers to the error that is introduced by approxi-
mating a real-life problem, which may be extremely complicated, by a much
simpler model. for example, id75 assumes that there is a linear
relationship between y and x1, x2, . . . , xp. it is unlikely that any real-life
problem truly has such a simple linear relationship, and so performing lin-
ear regression will undoubtedly result in some bias in the estimate of f . in
figure 2.11, the true f is substantially non-linear, so no matter how many
training observations we are given, it will not be possible to produce an
accurate estimate using id75. in other words, id75
results in high bias in this example. however, in figure 2.10 the true f is
very close to linear, and so given enough data, it should be possible for
id75 to produce an accurate estimate. generally, more    exible
methods result in less bias.

as a general rule, as we use more    exible methods, the variance will
increase and the bias will decrease. the relative rate of change of these
two quantities determines whether the test mse increases or decreases. as
we increase the    exibility of a class of methods, the bias tends to initially
decrease faster than the variance increases. consequently, the expected
test mse declines. however, at some point increasing    exibility has little
impact on the bias but starts to signi   cantly increase the variance. when
this happens the test mse increases. note that we observed this pattern
of decreasing test mse followed by increasing test mse in the right-hand
panels of figures 2.9   2.11.

the three plots in figure 2.12 illustrate equation 2.7 for the examples in
figures 2.9   2.11. in each case the blue solid curve represents the squared
bias, for di   erent levels of    exibility, while the orange curve corresponds to
the variance. the horizontal dashed line represents var( ), the irreducible
error. finally, the red curve, corresponding to the test set mse, is the sum
of these three quantities. in all three cases, the variance increases and the
bias decreases as the method   s    exibility increases. however, the    exibility
level corresponding to the optimal test mse di   ers considerably among the
three data sets, because the squared bias and variance change at di   erent
rates in each of the data sets. in the left-hand panel of figure 2.12, the
bias initially decreases rapidly, resulting in an initial sharp decrease in the
expected test mse. on the other hand, in the center panel of figure 2.12
the true f is close to linear, so there is only a small decrease in bias as    ex-
ibility increases, and the test mse only declines slightly before increasing
rapidly as the variance increases. finally, in the right-hand panel of fig-
ure 2.12, as    exibility increases, there is a dramatic decline in bias because

36

2. statistical learning

5

.

2

0

.

2

5

.

1

0

.

1

5

.

0

0

.

0

5

.

2

0

.

2

5

.

1

0

.

1

5

.

0

0

.

0

mse
bias
var

0
2

5
1

0
1

5

0

2

5

10

20

2

5

10

20

2

5

10

20

flexibility

flexibility

flexibility

figure 2.12. squared bias (blue curve), variance (orange curve), var( )
(dashed line), and test mse (red curve) for the three data sets in figures 2.9   2.11.
the vertical dotted line indicates the    exibility level corresponding to the smallest
test mse.

the true f is very non-linear. there is also very little increase in variance
as    exibility increases. consequently, the test mse declines substantially
before experiencing a small increase as model    exibility increases.

the relationship between bias, variance, and test set mse given in equa-
tion 2.7 and displayed in figure 2.12 is referred to as the bias-variance
trade-o   . good test set performance of a statistical learning method re-
quires low variance as well as low squared bias. this is referred to as a
trade-o    because it is easy to obtain a method with extremely low bias but
high variance (for instance, by drawing a curve that passes through every
single training observation) or a method with very low variance but high
bias (by    tting a horizontal line to the data). the challenge lies in    nding
a method for which both the variance and the squared bias are low. this
trade-o    is one of the most important recurring themes in this book.

in a real-life situation in which f is unobserved, it is generally not pos-
sible to explicitly compute the test mse, bias, or variance for a statistical
learning method. nevertheless, one should always keep the bias-variance
trade-o    in mind. in this book we explore methods that are extremely
   exible and hence can essentially eliminate bias. however, this does not
guarantee that they will outperform a much simpler method such as linear
regression. to take an extreme example, suppose that the true f is linear.
in this situation id75 will have no bias, making it very hard
for a more    exible method to compete. in contrast, if the true f is highly
non-linear and we have an ample number of training observations, then
we may do better using a highly    exible approach, as in figure 2.11. in
chapter 5 we discuss cross-validation, which is a way to estimate the test
mse using the training data.

bias-variance
trade-o   

2.2 assessing model accuracy

37

2.2.3 the classi   cation setting

thus far, our discussion of model accuracy has been focused on the regres-
sion setting. but many of the concepts that we have encountered, such
as the bias-variance trade-o   , transfer over to the classi   cation setting
with only some modi   cations due to the fact that yi is no longer numer-
ical. suppose that we seek to estimate f on the basis of training obser-
vations {(x1, y1), . . . , (xn, yn)}, where now y1, . . . , yn are qualitative. the
most common approach for quantifying the accuracy of our estimate   f is
the training error rate, the proportion of mistakes that are made if we apply
our estimate   f to the training observations:

n(cid:17)

i=1

1
n

i(yi (cid:4)=   yi).

(2.8)

here   yi is the predicted class label for the ith observation using   f . and
i(yi (cid:4)=   yi) is an indicator variable that equals 1 if yi (cid:4)=   yi and zero if yi =   yi.
if i(yi (cid:4)=   yi) = 0 then the ith observation was classi   ed correctly by our

classi   cation method; otherwise it was misclassi   ed. hence equation 2.8
computes the fraction of incorrect classi   cations.

equation 2.8 is referred to as the training error rate because it is com-
puted based on the data that was used to train our classi   er. as in the
regression setting, we are most interested in the error rates that result from
applying our classi   er to test observations that were not used in training.
the test error rate associated with a set of test observations of the form
(x0, y0) is given by

ave (i(y0 (cid:4)=   y0)) ,

(2.9)

error rate

indicator
variable

training
error

test error

where   y0 is the predicted class label that results from applying the classi   er
to the test observation with predictor x0. a good classi   er is one for which
the test error (2.9) is smallest.

the bayes classi   er

it is possible to show (though the proof is outside of the scope of this
book) that the test error rate given in (2.9) is minimized, on average, by a
very simple classi   er that assigns each observation to the most likely class,
given its predictor values. in other words, we should simply assign a test
observation with predictor vector x0 to the class j for which

pr(y = j|x = x0)

(2.10)

is largest. note that (2.10) is a id155: it is the id203
that y = j, given the observed predictor vector x0. this very simple clas-
si   er is called the bayes classi   er. in a two-class problem where there are
only two possible response values, say class 1 or class 2, the bayes classi   er

conditional
id203

bayes
classi   er

38

2. statistical learning

o
o

o

o

o
o
o
o
o
o
o
o
o

o

o

o
o
o
o
o

o
o
o
o
o
o
o
o
o
o
o
o
o
oo o
o
o
o
o

o

o

o

o
o
o
o
o
o
o
o

o

o

o

o
o
o
o
o
oo
o
o
o
o
o
o
o
o
o
o
o
o

o
o
o
o
o
o
o
o
o
o
o

o
o
o
o

o

o

o
o
o

o

o
o

o

o

o

o
o
o
o
o
o
oo
o
o
o
o
o
o
oo
o
o
o
o
o
o
o
o
o
o o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o

o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o

o
o
o
oo
o
o

o

o
o
o

o

o

o
o

o

o

o

o
o

o

o

o

o

figure 2.13. a simulated data set consisting of 100 observations in each of
two groups, indicated in blue and in orange. the purple dashed line represents
the bayes decision boundary. the orange background grid indicates the region
in which a test observation will be assigned to the orange class, and the blue
background grid indicates the region in which a test observation will be assigned
to the blue class.

corresponds to predicting class one if pr(y = 1|x = x0) > 0.5, and class

two otherwise.

figure 2.13 provides an example using a simulated data set in a two-
dimensional space consisting of predictors x1 and x2. the orange and
blue circles correspond to training observations that belong to two di   erent
classes. for each value of x1 and x2, there is a di   erent id203 of the
response being orange or blue. since this is simulated data, we know how
the data were generated and we can calculate the conditional probabilities
for each value of x1 and x2. the orange shaded region re   ects the set of
points for which pr(y = orange|x) is greater than 50 %, while the blue
shaded region indicates the set of points for which the id203 is below
50 %. the purple dashed line represents the points where the id203
is exactly 50 %. this is called the bayes decision boundary. the bayes
classi   er   s prediction is determined by the bayes decision boundary; an
observation that falls on the orange side of the boundary will be assigned
to the orange class, and similarly an observation on the blue side of the
boundary will be assigned to the blue class.

the bayes classi   er produces the lowest possible test error rate, called
the bayes error rate. since the bayes classi   er will always choose the class

for which (2.10) is largest, the error rate at x = x0 will be 1   maxj pr(y =
j|x = x0). in general, the overall bayes error rate is given by

(cid:11)
max

(cid:12)
pr(y = j|x)

1     e

j

,

(2.11)

bayes
decision
boundary

bayes error
rate

k-nearest
neighbors

2.2 assessing model accuracy

39

where the expectation averages the id203 over all possible values of
x. for our simulated data, the bayes error rate is 0.1304. it is greater than
zero, because the classes overlap in the true population so maxj pr(y =
j|x = x0) < 1 for some values of x0. the bayes error rate is analogous to

the irreducible error, discussed earlier.

k-nearest neighbors

in theory we would always like to predict qualitative responses using the
bayes classi   er. but for real data, we do not know the conditional distri-
bution of y given x, and so computing the bayes classi   er is impossi-
ble. therefore, the bayes classi   er serves as an unattainable gold standard
against which to compare other methods. many approaches attempt to
estimate the conditional distribution of y given x, and then classify a
given observation to the class with highest estimated id203. one such
method is the k-nearest neighbors (knn) classi   er. given a positive in-
teger k and a test observation x0, the knn classi   er    rst identi   es the
k points in the training data that are closest to x0, represented by n0.
points in n0 whose response values equal j:

it then estimates the id155 for class j as the fraction of

pr(y = j|x = x0) =

(cid:17)

i   n0

1
k

i(yi = j).

(2.12)

finally, knn applies bayes rule and classi   es the test observation x0 to
the class with the largest id203.

figure 2.14 provides an illustrative example of the knn approach. in
the left-hand panel, we have plotted a small training data set consisting of
six blue and six orange observations. our goal is to make a prediction for
the point labeled by the black cross. suppose that we choose k = 3. then
knn will    rst identify the three observations that are closest to the cross.
this neighborhood is shown as a circle. it consists of two blue points and
one orange point, resulting in estimated probabilities of 2/3 for the blue
class and 1/3 for the orange class. hence knn will predict that the black
cross belongs to the blue class. in the right-hand panel of figure 2.14 we
have applied the knn approach with k = 3 at all of the possible values for
x1 and x2, and have drawn in the corresponding knn decision boundary.
despite the fact that it is a very simple approach, knn can often pro-
duce classi   ers that are surprisingly close to the optimal bayes classi   er.
figure 2.15 displays the knn decision boundary, using k = 10, when ap-
plied to the larger simulated data set from figure 2.13. notice that even
though the true distribution is not known by the knn classi   er, the knn
decision boundary is very close to that of the bayes classi   er. the test error
rate using knn is 0.1363, which is close to the bayes error rate of 0.1304.

40

2. statistical learning

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

o

figure 2.14. the knn approach, using k = 3, is illustrated in a simple
situation with six blue observations and six orange observations. left: a test ob-
servation at which a predicted class label is desired is shown as a black cross. the
three closest points to the test observation are identi   ed, and it is predicted that
the test observation belongs to the most commonly-occurring class, in this case
blue. right: the knn decision boundary for this example is shown in black. the
blue grid indicates the region in which a test observation will be assigned to the
blue class, and the orange grid indicates the region in which it will be assigned to
the orange class.

the choice of k has a drastic e   ect on the knn classi   er obtained.
figure 2.16 displays two knn    ts to the simulated data from figure 2.13,
using k = 1 and k = 100. when k = 1, the decision boundary is overly
   exible and    nds patterns in the data that don   t correspond to the bayes
decision boundary. this corresponds to a classi   er that has low bias but
very high variance. as k grows, the method becomes less    exible and
produces a decision boundary that is close to linear. this corresponds to
a low-variance but high-bias classi   er. on this simulated data set, neither
k = 1 nor k = 100 give good predictions: they have test error rates of
0.1695 and 0.1925, respectively.

just as in the regression setting, there is not a strong relationship be-
tween the training error rate and the test error rate. with k = 1, the
knn training error rate is 0, but the test error rate may be quite high. in
general, as we use more    exible classi   cation methods, the training error
rate will decline but the test error rate may not. in figure 2.17, we have
plotted the knn test and training errors as a function of 1/k. as 1/k in-
creases, the method becomes more    exible. as in the regression setting, the
training error rate consistently declines as the    exibility increases. however,
the test error exhibits a characteristic u-shape, declining at    rst (with a
minimum at approximately k = 10) before increasing again when the
method becomes excessively    exible and over   ts.

2.2 assessing model accuracy

41

knn: k=10

o

o

o
o
o
o
o

o

o

o

o
o
o
o
o
o
o
o

o

o

o

o
o

o

o

o
o
o
o
o
o
o
o
o

o
o
o
o
o
o
o
o
o
o
o
o
o
oo o
o
o
o
o

o
o
o
o
o
oo
o
o
o
o
o
o
o
o
o
o
o
o

o

o
o
o
oo
o
o

o
o

o

o
o
o
o
o
o
oo
o
o
o
o
o
o
oo
o
o
o
o
o
o
o
o
o
o o
o
o
o
o
o

o

o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o

o

o
o
o

o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o

o

o

o
o
o
o
o
o
o
o

o
o
o

o
o
o
o

o

o

o
o
o

o

o
o

o

o

o

o
o

o

o

o

o

figure 2.15. the black curve indicates the knn decision boundary on the
data from figure 2.13, using k = 10. the bayes decision boundary is shown as
a purple dashed line. the knn and bayes decision boundaries are very similar.

knn: k=1

knn: k=100

o

o

o

o

o

o

o
o
o
o
o

o
o

o

o

o
o
o
o
o
o
o
o

o

o

o

o

o
o

o
o
o
o
o
o
o
o

o

o

o
o
o
o
o
o
o
o

o
o
o
o
o
o
oo o
o
o
o
o

o
o
o
o
o
oo
o
o
o
o
o
o
o
o
o
o
o
o

o
o

o
o
o
o
o
o

o

o
o
o
o
o
o
o

o

o
o
o

o
o

o

o

o
o
o

o

o

o

o
o
o
o
o
o
oo
o
o
o
o
o
o
o

o
o

o

o

o

o
o
o
o
o
o o
o
o
o
o

o

o
o
o
o

o
o

o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o

o

o
o
o

o

o
o
o
o
o
o
o
o
o
o
o
o
o

o

o

o
o

o

o

o

o
o

o

o

o

o

o

o

o

o

o

o

o
o
o
o
o

o
o

o

o

o
o
o
o
o
o
o
o

o

o

o

o

o
o

o
o
o
o
o
o
o
o

o

o

o
o
o
o
o
o
o
o

o
o
o
o
o
o
oo o
o
o
o
o

o
o
o
o
o
oo
o
o
o
o
o
o
o
o
o
o
o
o

o
o

o
o
o
o
o
o

o

o
o
o
o
o
o
o

o

o
o
o

o
o

o

o

o
o
o

o

o

o

o
o
o
o
o
o
oo
o
o
o
o
o
o
o

o
o

o

o

o

o
o
o
o
o
o o
o
o
o
o

o

o
o
o
o

o
o

o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o
o

o

o
o
o

o

o
o
o
o
o
o
o
o
o
o
o
o
o

o

o

o
o

o

o

o

o
o

o

o

o

o

figure 2.16. a comparison of the knn decision boundaries (solid black
curves) obtained using k = 1 and k = 100 on the data from figure 2.13. with
k = 1, the decision boundary is overly    exible, while with k = 100 it is not
su   ciently    exible. the bayes decision boundary is shown as a purple dashed
line.

42

2. statistical learning

e

t

a
r

 
r
o
r
r

e

0
2

.

0

5
1

.

0

0
1
.
0

5
0

.

0

0
0

.

0

training errors
test errors

0.01

0.02

0.05

0.20

0.50

1.00

0.10

1/k

figure 2.17. the knn training error rate (blue, 200 observations) and test
error rate (orange, 5,000 observations) on the data from figure 2.13, as the
level of    exibility (assessed using 1/k) increases, or equivalently as the number
of neighbors k decreases. the black dashed line indicates the bayes error rate.
the jumpiness of the curves is due to the small size of the training data set.

in both the regression and classi   cation settings, choosing the correct
level of    exibility is critical to the success of any statistical learning method.
the bias-variance tradeo   , and the resulting u-shape in the test error, can
make this a di   cult task. in chapter 5, we return to this topic and discuss
various methods for estimating test error rates and thereby choosing the
optimal level of    exibility for a given statistical learning method.

2.3 lab: introduction to r

in this lab, we will introduce some simple r commands. the best way to
learn a new language is to try out the commands. r can be downloaded from

http://cran.r-project.org/

2.3.1 basic commands

r uses functions to perform operations. to run a function called funcname,
we type funcname(input1, input2), where the inputs (or arguments) input1

function

argument

2.3 lab: introduction to r

43

and input2 tell r how to run the function. a function can have any number
of inputs. for example, to create a vector of numbers, we use the function
c() (for concatenate). any numbers inside the parentheses are joined to-
gether. the following command instructs r to join together the numbers
1, 3, 2, and 5, and to save them as a vector named x. when we type x, it
gives us back the vector.

c()

vector

> x <- c (1 ,3 ,2 ,5)
> x
[1] 1 3 2 5

note that the > is not part of the command; rather, it is printed by r to
indicate that it is ready for another command to be entered. we can also
save things using = rather than <-:

> x = c (1 ,6 ,2)
> x
[1] 1 6 2
> y = c (1 ,4 ,3)

hitting the up arrow multiple times will display the previous commands,
which can then be edited. this is useful since one often wishes to repeat
a similar command. in addition, typing ?funcname will always cause r to
open a new help    le window with additional information about the function
funcname.

we can tell r to add two sets of numbers together. it will then add the
   rst number from x to the    rst number from y, and so on. however, x and
y should be the same length. we can check their length using the length()
function.

length()

> length ( x )
[1] 3
> length ( y )
[1] 3
> x + y
[1]

2 10

5

the ls() function allows us to look at a list of all of the objects, such
as data and functions, that we have saved so far. the rm() function can be
used to delete any that we don   t want.

ls()

rm()

> ls ()
[1] " x " " y "
> rm (x , y )
> ls ()
character (0)

it   s also possible to remove all objects at once:

> rm ( list = ls () )

44

2. statistical learning

the matrix() function can be used to create a matrix of numbers. before

we use the matrix() function, we can learn more about it:

matrix()

> ? matrix

the help    le reveals that the matrix() function takes a number of inputs,
but for now we focus on the    rst three: the data (the entries in the matrix),
the number of rows, and the number of columns. first, we create a simple
matrix.

> x = matrix ( data = c (1 ,2 ,3 ,4) , nrow =2 , ncol =2)
> x

[ ,1] [ ,2]
3
4

1
2

[1 ,]
[2 ,]

note that we could just as well omit typing data=, nrow=, and ncol= in the
matrix() command above: that is, we could just type

> x = matrix ( c (1 ,2 ,3 ,4) ,2 ,2)

and this would have the same e   ect. however, it can sometimes be useful to
specify the names of the arguments passed in, since otherwise r will assume
that the function arguments are passed into the function in the same order
that is given in the function   s help    le. as this example illustrates, by
default r creates matrices by successively    lling in columns. alternatively,
the byrow=true option can be used to populate the matrix in order of the
rows.

> matrix ( c (1 ,2 ,3 ,4) ,2 ,2 , byrow = true )

[ ,1] [ ,2]
2
4

1
3

[1 ,]
[2 ,]

notice that in the above command we did not assign the matrix to a value
such as x. in this case the matrix is printed to the screen but is not saved
for future calculations. the sqrt() function returns the square root of each
element of a vector or matrix. the command x^2 raises each element of x
to the power 2; any powers are possible, including fractional or negative
powers.

sqrt()

> sqrt ( x )

[ ,1] [ ,2]
[1 ,] 1.00 1.73
[2 ,] 1.41 2.00
> x ^2

[ ,1] [ ,2]
9
16

1
4

[1 ,]
[2 ,]

the rnorm() function generates a vector of random normal variables,
with    rst argument n the sample size. each time we call this function, we
will get a di   erent answer. here we create two correlated sets of numbers,
x and y, and use the cor() function to compute the correlation between
them.

rnorm()

cor()

2.3 lab: introduction to r

45

> x = rnorm (50)
> y = x + rnorm (50 , mean =50 , sd =.1)
> cor ( x , y )
[1] 0.995

by default, rnorm() creates standard normal random variables with a mean
of 0 and a standard deviation of 1. however, the mean and standard devi-
ation can be altered using the mean and sd arguments, as illustrated above.
sometimes we want our code to reproduce the exact same set of random
numbers; we can use the set.seed() function to do this. the set.seed()
function takes an (arbitrary) integer argument.

set.seed()

> set . seed (1303)
> rnorm (50)
[1] -1.1440
. . .

1.3421

2.1854

0.5364

0.0632

0.5022 -0.0004

we use set.seed() throughout the labs whenever we perform calculations
involving random quantities. in general this should allow the user to re-
produce our results. however, it should be noted that as new versions of
r become available it is possible that some small discrepancies may form
between the book and the output from r.

the mean() and var() functions can be used to compute the mean and
variance of a vector of numbers. applying sqrt() to the output of var()
will give the standard deviation. or we can simply use the sd() function.

mean()

var()

sd()

> set . seed (3)
> y = rnorm (100)
> mean ( y )
[1] 0.0110
> var ( y )
[1] 0.7329
> sqrt ( var ( y ) )
[1] 0.8561
> sd ( y )
[1] 0.8561

2.3.2 graphics

the plot() function is the primary way to plot data in r. for instance,
plot(x,y) produces a scatterplot of the numbers in x versus the numbers
in y. there are many additional options that can be passed in to the plot()
function. for example, passing in the argument xlab will result in a label
on the x-axis. to    nd out more information about the plot() function,
type ?plot.

plot()

> x = rnorm (100)
> y = rnorm (100)
> plot (x , y )
> plot (x ,y , xlab =" this is the x - axis " , ylab =" this is the y - axis " ,

main =" plot of x vs y ")

46

2. statistical learning

we will often want to save the output of an r plot. the command that we
use to do this will depend on the    le type that we would like to create. for
instance, to create a pdf, we use the pdf() function, and to create a jpeg,
we use the jpeg() function.

pdf()

jpeg()

> pdf (" figure . pdf ")
> plot (x ,y , col =" green ")
> dev . off ()
null device
1

the function dev.off() indicates to r that we are done creating the plot.
alternatively, we can simply copy the plot window and paste it into an
appropriate    le type, such as a word document.

the function seq() can be used to create a sequence of numbers. for
instance, seq(a,b) makes a vector of integers between a and b. there are
many other options: for instance, seq(0,1,length=10) makes a sequence of
10 numbers that are equally spaced between 0 and 1. typing 3:11 is a
shorthand for seq(3,11) for integer arguments.

dev.off()

seq()

> x = seq (1 ,10)
> x

[1]

1

2

3

4

5

6

7

8

9 10

> x =1:10
> x

[1]

7
> x = seq ( - pi , pi , length =50)

1

2

3

4

5

6

8

9 10

we will now create some more sophisticated plots. the contour() func-
tion produces a contour plot in order to represent three-dimensional data;
it is like a topographical map. it takes three arguments:

contour()

contour plot

1. a vector of the x values (the    rst dimension),

2. a vector of the y values (the second dimension), and

3. a matrix whose elements correspond to the z value (the third dimen-

sion) for each pair of (x,y) coordinates.

as with the plot() function, there are many other inputs that can be used
to    ne-tune the output of the contour() function. to learn more about
these, take a look at the help    le by typing ?contour.

> y = x
> f = outer (x ,y , function (x , y ) cos ( y ) /(1+ x ^2) )
> contour (x ,y , f )
> contour (x ,y ,f , nlevels =45 , add = t )
> fa =( f - t ( f ) ) /2
> contour (x ,y , fa , nlevels =15)

the image() function works the same way as contour(), except that it
produces a color-coded plot whose colors depend on the z value. this is

image()

2.3 lab: introduction to r

47

known as a heatmap, and is sometimes used to plot temperature in weather
forecasts. alternatively, persp() can be used to produce a three-dimensional
plot. the arguments theta and phi control the angles at which the plot is
viewed.

heatmap

persp()

> image (x ,y , fa )
> persp (x ,y , fa )
> persp (x ,y , fa , theta =30)
> persp (x ,y , fa , theta =30 , phi =20)
> persp (x ,y , fa , theta =30 , phi =70)
> persp (x ,y , fa , theta =30 , phi =40)

2.3.3 indexing data

we often wish to examine part of a set of data. suppose that our data is
stored in the matrix a.

> a = matrix (1:16 ,4 ,4)
> a

[ ,1] [ ,2] [ ,3] [ ,4]
13
14
15
16

9
10
11
12

1
2
3
4

5
6
7
8

[1 ,]
[2 ,]
[3 ,]
[4 ,]

then, typing

> a [2 ,3]
[1] 10

will select the element corresponding to the second row and the third col-
umn. the    rst number after the open-bracket symbol [ always refers to
the row, and the second number always refers to the column. we can also
select multiple rows and columns at a time, by providing vectors as the
indices.

> a [ c (1 ,3) , c (2 ,4) ]

[ ,1] [ ,2]
13
15

[1 ,]
[2 ,]
> a [1:3 ,2:4]

5
7

[ ,1] [ ,2] [ ,3]
13
14
15

9
10
11

[1 ,]
5
[2 ,]
6
[3 ,]
7
> a [1:2 ,]

[ ,1] [ ,2] [ ,3] [ ,4]
13
14

9
10

5
6

1
[1 ,]
[2 ,]
2
> a [ ,1:2]

[ ,1] [ ,2]
5
6

1
2

[1 ,]
[2 ,]

48

2. statistical learning

[3 ,]
[4 ,]

3
4

7
8

the last two examples include either no index for the columns or no index
for the rows. these indicate that r should include all columns or all rows,
respectively. r treats a single row or column of a matrix as a vector.

> a [1 ,]
[1]

1

5

9 13

the use of a negative sign - in the index tells r to keep all rows or columns
except those indicated in the index.

> a [ - c (1 ,3) ,]

[ ,1] [ ,2] [ ,3] [ ,4]
14
16

[1 ,]
[2 ,]
> a [ - c (1 ,3) ,-c (1 ,3 ,4) ]
[1] 6 8

10
12

2
4

6
8

the dim() function outputs the number of rows followed by the number of
columns of a given matrix.

dim()

> dim ( a )
[1] 4 4

2.3.4 loading data

for most analyses, the    rst step involves importing a data set into r. the
read.table() function is one of the primary ways to do this. the help    le
contains details about how to use this function. we can use the function
write.table() to export data.

before attempting to load a data set, we must make sure that r knows
to search for the data in the proper directory. for example on a windows
system one could select the directory using the change dir. . . option under
the file menu. however, the details of how to do this depend on the op-
erating system (e.g. windows, mac, unix) that is being used, and so we
do not give further details here. we begin by loading in the auto data set.
this data is part of the islr library (we discuss libraries in chapter 3) but
to illustrate the read.table() function we load it now from a text    le. the
following command will load the auto.data    le into r and store it as an
object called auto, in a format referred to as a data frame. (the text    le
can be obtained from this book   s website.) once the data has been loaded,
the fix() function can be used to view it in a spreadsheet like window.
however, the window must be closed before further r commands can be
entered.

read.table()

write.
table()

data frame

> auto = read . table (" auto . data ")
> fix ( auto )

2.3 lab: introduction to r

49

note that auto.data is simply a text    le, which you could alternatively
open on your computer using a standard text editor. it is often a good idea
to view a data set using a text editor or other software such as excel before
loading it into r.

this particular data set has not been loaded correctly, because r has
assumed that the variable names are part of the data and so has included
them in the    rst row. the data set also includes a number of missing
observations, indicated by a question mark ?. missing values are a common
occurrence in real data sets. using the option header=t (or header=true) in
the read.table() function tells r that the    rst line of the    le contains the
variable names, and using the option na.strings tells r that any time it
sees a particular character or set of characters (such as a question mark),
it should be treated as a missing element of the data matrix.

> auto = read . table (" auto . data " , header =t , na . strings ="?")
> fix ( auto )

excel is a common-format data storage program. an easy way to load such
data into r is to save it as a csv (comma separated value)    le and then use
the read.csv() function to load it in.

> auto = read . csv (" auto . csv " , header =t , na . strings ="?")
> fix ( auto )
> dim ( auto )
[1] 397 9
> auto [1:4 ,]

the dim() function tells us that the data has 397 observations, or rows, and
nine variables, or columns. there are various ways to deal with the missing
data. in this case, only    ve of the rows contain missing observations, and
so we choose to use the na.omit() function to simply remove these rows.

> auto = na . omit ( auto )
> dim ( auto )
[1] 392
9

once the data are loaded correctly, we can use names() to check the

variable names.

> names ( auto )
[1] " mpg "
[5] " weight "
[9] " name "

" cylinders "
" a c c e l e r a t i o n " " year "

" d i s p l a c e m e n t " " horsepower "

" origin "

dim()

na.omit()

names()

2.3.5 additional graphical and numerical summaries

we can use the plot() function to produce scatterplots of the quantitative
variables. however, simply typing the variable names will produce an error
message, because r does not know to look in the auto data set for those
variables.

scatterplot

50

2. statistical learning

> plot ( cylinders , mpg )
error in plot ( cylinders , mpg ) : object     cylinders     not found

to refer to a variable, we must type the data set and the variable name
joined with a $ symbol. alternatively, we can use the attach() function in
order to tell r to make the variables in this data frame available by name.

attach()

> plot ( auto$cylinders , auto$mpg )
> attach ( auto )
> plot ( cylinders , mpg )

the cylinders variable is stored as a numeric vector, so r has treated it
as quantitative. however, since there are only a small number of possible
values for cylinders, one may prefer to treat it as a qualitative variable.
the as.factor() function converts quantitative variables into qualitative
variables.

as.factor()

> cylinders = as . factor ( cylinders )

if the variable plotted on the x-axis is categorial, then boxplots will
automatically be produced by the plot() function. as usual, a number
of options can be speci   ed in order to customize the plots.

boxplot

> plot ( cylinders , mpg )
> plot ( cylinders , mpg , col =" red ")
> plot ( cylinders , mpg , col =" red " , varwidth = t )
> plot ( cylinders , mpg , col =" red " , varwidth =t , horizontal = t )
> plot ( cylinders , mpg , col =" red " , varwidth =t , xlab =" cylinders " ,

ylab =" mpg ")

the hist() function can be used to plot a histogram. note that col=2

has the same e   ect as col="red".

> hist ( mpg )
> hist ( mpg , col =2)
> hist ( mpg , col =2 , breaks =15)

hist()
histogram

the pairs() function creates a scatterplot matrix i.e. a scatterplot for every
pair of variables for any given data set. we can also produce scatterplots
for just a subset of the variables.

scatterplot
matrix

> pairs ( auto )

> pairs (    mpg + d i s p l a c e m e n t + horsepowe r + weight +

acceleration , auto )

in conjunction with the plot() function, identify() provides a useful
interactive method for identifying the value for a particular variable for
points on a plot. we pass in three arguments to identify(): the x-axis
variable, the y-axis variable, and the variable whose values we would like
to see printed for each point. then clicking on a given point in the plot
will cause r to print the value of the variable of interest. right-clicking on
the plot will exit the identify() function (control-click on a mac). the
numbers printed under the identify() function correspond to the rows for
the selected points.

identify()

> plot ( horsepower , mpg )
> identify ( horsepower , mpg , name )

2.3 lab: introduction to r

51

the summary() function produces a numerical summary of each variable in
a particular data set.

summary()

> summary ( auto )

mpg

min .
: 9.00
1 st qu .:17.00
median :22.75
mean
:23.45
3 rd qu .:29.00
:46.60
max .

horsepower

min .
: 46.0
1 st qu .: 75.0
median : 93.5
mean
:104.5
3 rd qu .:126.0
max .
:230.0

cylinders

min .
:3.000
1 st qu .:4.000
median :4.000
mean
:5.472
3 rd qu .:8.000
:8.000
max .

d i s p l a c e m e n t
min .
: 68.0
1 st qu .:105.0
median :151.0
mean
:194.4
3 rd qu .:275.8
:455.0
max .

weight

min .
:1613
1 st qu .:2225
median :2804
mean
:2978
3 rd qu .:3615
max .
:5140

a c c e l e r a t i o n
min .
: 8.00
1 st qu .:13.78
median :15.50
mean
:15.54
3 rd qu .:17.02
max .
:24.80

year

origin

name

min .
:70.00
1 st qu .:73.00
median :76.00
mean
:75.98
3 rd qu .:79.00
max .
:82.00

min .
:1.000
1 st qu .:1.000
median :1.000
mean
:1.577
3 rd qu .:2.000
max .
:3.000

:
amc matador
:
ford pinto
:
toyota corolla
:
amc gremlin
amc hornet
:
chevrolet chevette :
( other )

5
5
5
4
4
4
:365

for qualitative variables such as name, r will list the number of observations
that fall in each category. we can also produce a summary of just a single
variable.

> summary ( mpg )

min . 1 st qu .
9.00
17.00

median
22.75

mean 3 rd qu .
29.00

23.45

max .
46.60

once we have    nished using r, we type q() in order to shut it down, or
quit. when exiting r, we have the option to save the current workspace so
that all objects (such as data sets) that we have created in this r session
will be available next time. before exiting r, we may want to save a record
of all of the commands that we typed in the most recent session; this can
be accomplished using the savehistory() function. next time we enter r,
we can load that history using the loadhistory() function.

q()

workspace

savehistory()

loadhistory()

52

2. statistical learning

2.4 exercises

conceptual

1. for each of parts (a) through (d), indicate whether we would generally
expect the performance of a    exible statistical learning method to be
better or worse than an in   exible method. justify your answer.

(a) the sample size n is extremely large, and the number of predic-

tors p is small.

(b) the number of predictors p is extremely large, and the number

of observations n is small.

(c) the relationship between the predictors and response is highly

non-linear.

(d) the variance of the error terms, i.e.   2 = var( ), is extremely

high.

2. explain whether each scenario is a classi   cation or regression prob-
lem, and indicate whether we are most interested in id136 or pre-
diction. finally, provide n and p.

(a) we collect a set of data on the top 500    rms in the us. for each
   rm we record pro   t, number of employees, industry and the
ceo salary. we are interested in understanding which factors
a   ect ceo salary.

(b) we are considering launching a new product and wish to know
whether it will be a success or a failure. we collect data on 20
similar products that were previously launched. for each prod-
uct we have recorded whether it was a success or failure, price
charged for the product, marketing budget, competition price,
and ten other variables.

(c) we are interesting in predicting the % change in the us dollar in
relation to the weekly changes in the world stock markets. hence
we collect weekly data for all of 2012. for each week we record
the % change in the dollar, the % change in the us market,
the % change in the british market, and the % change in the
german market.

3. we now revisit the bias-variance decomposition.

(a) provide a sketch of typical (squared) bias, variance, training er-
ror, test error, and bayes (or irreducible) error curves, on a sin-
gle plot, as we go from less    exible statistical learning methods
towards more    exible approaches. the x-axis should represent

2.4 exercises

53

the amount of    exibility in the method, and the y-axis should
represent the values for each curve. there should be    ve curves.
make sure to label each one.

(b) explain why each of the    ve curves has the shape displayed in

part (a).

4. you will now think of some real-life applications for statistical learn-

ing.

(a) describe three real-life applications in which classi   cation might
be useful. describe the response, as well as the predictors. is the
goal of each application id136 or prediction? explain your
answer.

(b) describe three real-life applications in which regression might
be useful. describe the response, as well as the predictors. is the
goal of each application id136 or prediction? explain your
answer.

(c) describe three real-life applications in which cluster analysis

might be useful.

5. what are the advantages and disadvantages of a very    exible (versus
a less    exible) approach for regression or classi   cation? under what
circumstances might a more    exible approach be preferred to a less
   exible approach? when might a less    exible approach be preferred?

6. describe the di   erences between a parametric and a non-parametric
statistical learning approach. what are the advantages of a para-
metric approach to regression or classi   cation (as opposed to a non-
parametric approach)? what are its disadvantages?

7. the table below provides a training data set containing six observa-

tions, three predictors, and one qualitative response variable.

y

obs. x1 x2 x3
1
2
3
4
5
6

0
2
0
0
   1
1

3
0
1
1
0
1

0 red
0 red
3 red
2 green
1 green
1 red

suppose we wish to use this data set to make a prediction for y when
x1 = x2 = x3 = 0 using k-nearest neighbors.

(a) compute the euclidean distance between each observation and

the test point, x1 = x2 = x3 = 0.

54

2. statistical learning

(b) what is our prediction with k = 1? why?

(c) what is our prediction with k = 3? why?

(d) if the bayes decision boundary in this problem is highly non-
linear, then would we expect the best value for k to be large or
small? why?

applied

8. this exercise relates to the college data set, which can be found in
the    le college.csv. it contains a number of variables for 777 di   erent
universities and colleges in the us. the variables are

    private : public/private indicator
    apps : number of applications received
    accept : number of applicants accepted
    enroll : number of new students enrolled
    top10perc : new students from top 10 % of high school class
    top25perc : new students from top 25 % of high school class
    f.undergrad : number of full-time undergraduates
    p.undergrad : number of part-time undergraduates
    outstate : out-of-state tuition
    room.board : room and board costs
    books : estimated book costs
    personal : estimated personal spending
    phd : percent of faculty with ph.d.   s
    terminal : percent of faculty with terminal degree
    s.f.ratio : student/faculty ratio
    perc.alumni : percent of alumni who donate
    expend : instructional expenditure per student
    grad.rate : graduation rate

before reading the data into r, it can be viewed in excel or a text
editor.

(a) use the read.csv() function to read the data into r. call the
loaded data college. make sure that you have the directory set
to the correct location for the data.

(b) look at the data using the fix() function. you should notice
that the    rst column is just the name of each university. we don   t
really want r to treat this as data. however, it may be handy to
have these names for later. try the following commands:

2.4 exercises

55

> rownames ( college ) = college [ ,1]
> fix ( college )

you should see that there is now a row.names column with the
name of each university recorded. this means that r has given
each row a name corresponding to the appropriate university. r
will not try to perform calculations on the row names. however,
we still need to eliminate the    rst column in the data where the
names are stored. try

> college = college [ , -1]
> fix ( college )

now you should see that the    rst data column is private. note
that another column labeled row.names now appears before the
private column. however, this is not a data column but rather
the name that r is giving to each row.

(c)

i. use the summary() function to produce a numerical summary

of the variables in the data set.

ii. use the pairs() function to produce a scatterplot matrix of
the    rst ten columns or variables of the data. recall that
you can reference the    rst ten columns of a matrix a using
a[,1:10].

iii. use the plot() function to produce side-by-side boxplots of

outstate versus private.

iv. create a new qualitative variable, called elite, by binning
the top10perc variable. we are going to divide universities
into two groups based on whether or not the proportion
of students coming from the top 10 % of their high school
classes exceeds 50 %.

> elite = rep (" no " , nrow ( college ) )
> elite [ college$top1 0 pe rc >50]=" yes "
> elite = as . factor ( elite )
> college = data . frame ( college , elite )

use the summary() function to see how many elite univer-
sities there are. now use the plot() function to produce
side-by-side boxplots of outstate versus elite.

v. use the hist() function to produce some histograms with
di   ering numbers of bins for a few of the quantitative vari-
ables. you may    nd the command par(mfrow=c(2,2)) useful:
it will divide the print window into four regions so that four
plots can be made simultaneously. modifying the arguments
to this function will divide the screen in other ways.

vi. continue exploring the data, and provide a brief summary

of what you discover.

56

2. statistical learning

9. this exercise involves the auto data set studied in the lab. make sure

that the missing values have been removed from the data.

(a) which of the predictors are quantitative, and which are quali-

tative?

(b) what is the range of each quantitative predictor? you can an-

swer this using the range() function.

(c) what is the mean and standard deviation of each quantitative

range()

predictor?

(d) now remove the 10th through 85th observations. what is the
range, mean, and standard deviation of each predictor in the
subset of the data that remains?

(e) using the full data set, investigate the predictors graphically,
using scatterplots or other tools of your choice. create some plots
highlighting the relationships among the predictors. comment
on your    ndings.

(f) suppose that we wish to predict gas mileage (mpg) on the basis
of the other variables. do your plots suggest that any of the
other variables might be useful in predicting mpg? justify your
answer.

10. this exercise involves the boston housing data set.

(a) to begin, load in the boston data set. the boston data set is

part of the mass library in r.

> library ( mass )

now the data set is contained in the object boston.

> boston

read about the data set:

> ? boston

how many rows are in this data set? how many columns? what
do the rows and columns represent?

(b) make some pairwise scatterplots of the predictors (columns) in

this data set. describe your    ndings.

(c) are any of the predictors associated with per capita crime rate?

if so, explain the relationship.

(d) do any of the suburbs of boston appear to have particularly
high crime rates? tax rates? pupil-teacher ratios? comment on
the range of each predictor.

(e) how many of the suburbs in this data set bound the charles

river?

2.4 exercises

57

(f) what is the median pupil-teacher ratio among the towns in this

data set?

(g) which suburb of boston has lowest median value of owner-
occupied homes? what are the values of the other predictors
for that suburb, and how do those values compare to the overall
ranges for those predictors? comment on your    ndings.

(h) in this data set, how many of the suburbs average more than
seven rooms per dwelling? more than eight rooms per dwelling?
comment on the suburbs that average more than eight rooms
per dwelling.

3
id75

this chapter is about id75, a very simple approach for
supervised learning. in particular, id75 is a useful tool for pre-
dicting a quantitative response. id75 has been around for a
long time and is the topic of innumerable textbooks. though it may seem
somewhat dull compared to some of the more modern statistical learning
approaches described in later chapters of this book, id75 is still
a useful and widely used statistical learning method. moreover, it serves
as a good jumping-o    point for newer approaches: as we will see in later
chapters, many fancy statistical learning approaches can be seen as gener-
alizations or extensions of id75. consequently, the importance
of having a good understanding of id75 before studying more
complex learning methods cannot be overstated. in this chapter, we review
some of the key ideas underlying the id75 model, as well as the
least squares approach that is most commonly used to    t this model.

recall the advertising data from chapter 2. figure 2.1 displays sales
(in thousands of units) for a particular product as a function of advertis-
ing budgets (in thousands of dollars) for tv, radio, and newspaper media.
suppose that in our role as statistical consultants we are asked to suggest,
on the basis of this data, a marketing plan for next year that will result in
high product sales. what information would be useful in order to provide
such a recommendation? here are a few important questions that we might
seek to address:

1. is there a relationship between advertising budget and sales?

our    rst goal should be to determine whether the data provide

g. james et al., an introduction to statistical learning: with applications in r,
springer texts in statistics, doi 10.1007/978-1-4614-7138-7 3,
   springer science+business media new york 2013

59

60

3. id75

evidence of an association between advertising expenditure and sales.
if the evidence is weak, then one might argue that no money should
be spent on advertising!

2. how strong is the relationship between advertising budget and sales?
assuming that there is a relationship between advertising and sales,
we would like to know the strength of this relationship. in other
words, given a certain advertising budget, can we predict sales with
a high level of accuracy? this would be a strong relationship. or is
a prediction of sales based on advertising expenditure only slightly
better than a random guess? this would be a weak relationship.

3. which media contribute to sales?

do all three media   tv, radio, and newspaper   contribute to sales,
or do just one or two of the media contribute? to answer this question,
we must    nd a way to separate out the individual e   ects of each
medium when we have spent money on all three media.

4. how accurately can we estimate the e   ect of each medium on sales?
for every dollar spent on advertising in a particular medium, by
what amount will sales increase? how accurately can we predict this
amount of increase?

5. how accurately can we predict future sales?

for any given level of television, radio, or newspaper advertising, what
is our prediction for sales, and what is the accuracy of this prediction?

6. is the relationship linear?

if there is approximately a straight-line relationship between advertis-
ing expenditure in the various media and sales, then id75
is an appropriate tool. if not, then it may still be possible to trans-
form the predictor or the response so that id75 can be
used.

7. is there synergy among the advertising media?

perhaps spending $50,000 on television advertising and $50,000 on
radio advertising results in more sales than allocating $100,000 to
either television or radio individually. in marketing, this is known as
a synergy e   ect, while in statistics it is called an interaction e   ect.

it turns out that id75 can be used to answer each of these
questions. we will    rst discuss all of these questions in a general context,
and then return to them in this speci   c context in section 3.4.

synergy

interaction

3.1 simple id75

3.1 simple id75

61

simple id75 lives up to its name: it is a very straightforward
approach for predicting a quantitative response y on the basis of a sin-
gle predictor variable x. it assumes that there is approximately a linear
relationship between x and y . mathematically, we can write this linear
relationship as

(3.1)
you might read           as    is approximately modeled as   . we will sometimes
describe (3.1) by saying that we are regressing y on x (or y onto x).
for example, x may represent tv advertising and y may represent sales.
then we can regress sales onto tv by    tting the model

y       0 +   1x.

sales       0 +   1    tv.

simple linear
regression

in equation 3.1,   0 and   1 are two unknown constants that represent
the intercept and slope terms in the linear model. together,   0 and   1 are
known as the model coe   cients or parameters. once we have used our
training data to produce estimates     0 and     1 for the model coe   cients, we
can predict future sales on the basis of a particular value of tv advertising
by computing

intercept

slope

coe   cient
parameter

  y =     0 +     1x,

(3.2)

where   y indicates a prediction of y on the basis of x = x. here we use a
hat symbol,    , to denote the estimated value for an unknown parameter
or coe   cient, or to denote the predicted value of the response.

3.1.1 estimating the coe   cients

in practice,   0 and   1 are unknown. so before we can use (3.1) to make
predictions, we must use data to estimate the coe   cients. let

(x1, y1), (x2, y2), . . . , (xn, yn)

represent n observation pairs, each of which consists of a measurement
of x and a measurement of y . in the advertising example, this data
set consists of the tv advertising budget and product sales in n = 200
di   erent markets. (recall that the data are displayed in figure 2.1.) our
goal is to obtain coe   cient estimates     0 and     1 such that the linear model
(3.1)    ts the available data well   that is, so that yi         0 +     1xi for i =
1, . . . , n. in other words, we want to    nd an intercept     0 and a slope     1 such
that the resulting line is as close as possible to the n = 200 data points.
there are a number of ways of measuring closeness. however, by far the
most common approach involves minimizing the least squares criterion,
and we take that approach in this chapter. alternative approaches will be
considered in chapter 6.

least squares

62

3. id75

5
2

0
2

5
1

0
1

5

l

s
e
a
s

0

50

100

150

tv

200

250

300

figure 3.1. for the advertising data, the least squares    t for the regression
of sales onto tv is shown. the    t is found by minimizing the sum of squared
errors. each grey line segment represents an error, and the    t makes a compro-
mise by averaging their squares. in this case a linear    t captures the essence of
the relationship, although it is somewhat de   cient in the left of the plot.

let   yi =     0 +     1xi be the prediction for y based on the ith value of x.
then ei = yi       yi represents the ith residual   this is the di   erence between

the ith observed response value and the ith response value that is predicted
by our linear model. we de   ne the residual sum of squares (rss) as

rss = e2

1 + e2

2 +        + e2
n,

or equivalently as

residual

residual sum
of squares

rss = (y1        0        1x1)2 + (y2        0        1x2)2 + . . .+ (yn        0        1xn)2. (3.3)
the least squares approach chooses     0 and     1 to minimize the rss. using
some calculus, one can show that the minimizers are

(cid:10)

n

i=1(xi       x)(yi       y)
(cid:10)
    1 =
i=1(xi       x)2
    0 =   y         1   x,
(cid:10)

n

,

(3.4)

(cid:10)

where   y     1
n
i=1 xi are the sample means. in other
words, (3.4) de   nes the least squares coe   cient estimates for simple linear
regression.

i=1 yi and   x     1

n

n

n

figure 3.1 displays the simple id75    t to the advertising
data, where     0 = 7.03 and     1 = 0.0475. in other words, according to

3.1 simple id75

63

 3 

 3 

1

  

6
0

.

0

5
0

.

0

4
0

.

0

3
0

.

0

 3 

5

6

 2.5 

 2.15 

 2.2 

 2.3 

7
  0

r

s

s

 3 

8

9

  0

  1

figure 3.2. contour and three-dimensional plots of
the rss on the
advertising data, using sales as the response and tv as the predictor. the
red dots correspond to the least squares estimates     0 and     1, given by (3.4).

this approximation, an additional $1,000 spent on tv advertising is asso-
ciated with selling approximately 47.5 additional units of the product. in
figure 3.2, we have computed rss for a number of values of   0 and   1,
using the advertising data with sales as the response and tv as the predic-
tor. in each plot, the red dot represents the pair of least squares estimates
(     0,     1) given by (3.4). these values clearly minimize the rss.

3.1.2 assessing the accuracy of the coe   cient estimates

recall from (2.1) that we assume that the true relationship between x and
y takes the form y = f (x) +   for some unknown function f , where  
is a mean-zero random error term. if f is to be approximated by a linear
function, then we can write this relationship as

y =   0 +   1x +  .

(3.5)

here   0 is the intercept term   that is, the expected value of y when x = 0,
and   1 is the slope   the average increase in y associated with a one-unit
increase in x. the error term is a catch-all for what we miss with this
simple model: the true relationship is probably not linear, there may be
other variables that cause variation in y , and there may be measurement
error. we typically assume that the error term is independent of x.

the model given by (3.5) de   nes the population regression line, which
is the best linear approximation to the true relationship between x and
y .1 the least squares regression coe   cient estimates (3.4) characterize the
least squares line (3.2). the left-hand panel of figure 3.3 displays these

1the assumption of linearity is often a useful working model. however, despite what

many textbooks might tell us, we seldom believe that the true relationship is linear.

population
regression
line

least squares
line

64

3. id75

y

0
1

5

0

5
   

0
1
   

y

0
1

5

0

5
   

0
1
   

   2

   1

0

x

1

2

   2

   1

1

2

0

x

figure 3.3. a simulated data set. left: the red line represents the true rela-
tionship, f (x) = 2 + 3x, which is known as the population regression line. the
blue line is the least squares line; it is the least squares estimate for f (x) based
on the observed data, shown in black. right: the population regression line is
again shown in red, and the least squares line in dark blue. in light blue, ten least
squares lines are shown, each computed on the basis of a separate random set of
observations. each least squares line is di   erent, but on average, the least squares
lines are quite close to the population regression line.

two lines in a simple simulated example. we created 100 random xs, and
generated 100 corresponding y s from the model

y = 2 + 3x +  ,

(3.6)

where   was generated from a normal distribution with mean zero. the
red line in the left-hand panel of figure 3.3 displays the true relationship,
f (x) = 2 + 3x, while the blue line is the least squares estimate based
on the observed data. the true relationship is generally not known for
real data, but the least squares line can always be computed using the
coe   cient estimates given in (3.4). in other words, in real applications,
we have access to a set of observations from which we can compute the
least squares line; however, the population regression line is unobserved.
in the right-hand panel of figure 3.3 we have generated ten di   erent data
sets from the model given by (3.6) and plotted the corresponding ten least
squares lines. notice that di   erent data sets generated from the same true
model result in slightly di   erent least squares lines, but the unobserved
population regression line does not change.

at    rst glance, the di   erence between the population regression line and
the least squares line may seem subtle and confusing. we only have one
data set, and so what does it mean that two di   erent lines describe the
relationship between the predictor and the response? fundamentally, the

3.1 simple id75

65

concept of these two lines is a natural extension of the standard statistical
approach of using information from a sample to estimate characteristics of a
large population. for example, suppose that we are interested in knowing
the population mean    of some random variable y . unfortunately,    is
unknown, but we do have access to n observations from y , which we can
write as y1, . . . , yn, and which we can use to estimate   . a reasonable
n
estimate is      =   y, where   y = 1
i=1 yi is the sample mean. the sample
n
mean and the population mean are di   erent, but in general the sample
mean will provide a good estimate of the population mean. in the same
way, the unknown coe   cients   0 and   1 in id75 de   ne the
population regression line. we seek to estimate these unknown coe   cients
using     0 and     1 given in (3.4). these coe   cient estimates de   ne the least
squares line.

(cid:10)

the analogy between id75 and estimation of the mean of a
random variable is an apt one based on the concept of bias. if we use the
sample mean      to estimate   , this estimate is unbiased, in the sense that
on average, we expect      to equal   . what exactly does this mean? it means
that on the basis of one particular set of observations y1, . . . , yn,      might
overestimate   , and on the basis of another set of observations,      might
underestimate   . but if we could average a huge number of estimates of
   obtained from a huge number of sets of observations, then this average
would exactly equal   . hence, an unbiased estimator does not systematically
over- or under-estimate the true parameter. the property of unbiasedness
holds for the least squares coe   cient estimates given by (3.4) as well: if
we estimate   0 and   1 on the basis of a particular data set, then our
estimates won   t be exactly equal to   0 and   1. but if we could average
the estimates obtained over a huge number of data sets, then the average
of these estimates would be spot on! in fact, we can see from the right-
hand panel of figure 3.3 that the average of many least squares lines, each
estimated from a separate data set, is pretty close to the true population
regression line.

we continue the analogy with the estimation of the population mean
   of a random variable y . a natural question is as follows: how accurate
is the sample mean      as an estimate of   ? we have established that the
average of        s over many data sets will be very close to   , but that a
single estimate      may be a substantial underestimate or overestimate of   .
how far o    will that single estimate of      be? in general, we answer this
question by computing the standard error of     , written as se(    ). we have
the well-known formula

bias

unbiased

standard
error

var(    ) = se(    )2 =

  2
n

,

(3.7)

66

3. id75

(cid:21)

(cid:20)

where    is the standard deviation of each of the realizations yi of y .2
roughly speaking, the standard error tells us the average amount that this
estimate      di   ers from the actual value of   . equation 3.7 also tells us how
this deviation shrinks with n   the more observations we have, the smaller
the standard error of     . in a similar vein, we can wonder how close     0
and     1 are to the true values   0 and   1. to compute the standard errors
associated with     0 and     1, we use the following formulas:

,

n

n

=

+

  x2

  2

1
n

=   2

2
se(     0)

2
se(     1)

(cid:10)
i=1(xi       x)2

(cid:10)
i=1(xi       x)2 , (3.8)
where   2 = var( ). for these formulas to be strictly valid, we need to as-
sume that the errors  i for each observation are uncorrelated with common
variance   2. this is clearly not true in figure 3.1, but the formula still
turns out to be a good approximation. notice in the formula that se(     1) is
smaller when the xi are more spread out; intuitively we have more leverage
to estimate a slope when this is the case. we also see that se(     0) would be
the same as se(    ) if   x were zero (in which case     0 would be equal to   y). in
general,   2 is not known, but can be estimated from the data. the estimate
of    is known as the residual standard error, and is given by the formula
rss/(n     2). strictly speaking, when   2 is estimated from the
rse =
data we should write (cid:23)se(     1) to indicate that an estimate has been made,

(cid:22)

but for simplicity of notation we will drop this extra    hat   .

standard errors can be used to compute con   dence intervals. a 95 %
con   dence interval is de   ned as a range of values such that with 95 %
id203, the range will contain the true unknown value of the parameter.
the range is de   ned in terms of lower and upper limits computed from the
sample of data. for id75, the 95 % con   dence interval for   1
approximately takes the form

that is, there is approximately a 95 % chance that the interval

(cid:24)

(cid:25)
    1     2    se(     1),     1 + 2    se(     1)

will contain the true value of   1.3 similarly, a con   dence interval for   0
approximately takes the form

    1    2    se(     1).

    0    2    se(     0).

(3.9)

(3.10)

(3.11)

2this formula holds provided that the n observations are uncorrelated.
3approximately for several reasons. equation 3.10 relies on the assumption that the
errors are gaussian. also, the factor of 2 in front of the se(     1) term will vary slightly
depending on the number of observations n in the id75. to be precise, rather
than the number 2, (3.10) should contain the 97.5 % quantile of a t-distribution with
n   2 degrees of freedom. details of how to compute the 95 % con   dence interval precisely
in r will be provided later in this chapter.

residual
standard
error

con   dence
interval

3.1 simple id75

67

in the case of the advertising data, the 95 % con   dence interval for   0
is [6.130, 7.935] and the 95 % con   dence interval for   1 is [0.042, 0.053].
therefore, we can conclude that in the absence of any advertising, sales will,
on average, fall somewhere between 6,130 and 7,940 units. furthermore,
for each $1,000 increase in television advertising, there will be an average
increase in sales of between 42 and 53 units.

standard errors can also be used to perform hypothesis tests on the
coe   cients. the most common hypothesis test involves testing the null
hypothesis of

h0 : there is no relationship between x and y

(3.12)

versus the alternative hypothesis

ha : there is some relationship between x and y .

(3.13)

hypothesis
test

null
hypothesis

alternative
hypothesis

mathematically, this corresponds to testing

versus

h0 :   1 = 0

ha :   1 (cid:4)= 0,

since if   1 = 0 then the model (3.5) reduces to y =   0 +  , and x is
not associated with y . to test the null hypothesis, we need to determine
whether     1, our estimate for   1, is su   ciently far from zero that we can
be con   dent that   1 is non-zero. how far is far enough? this of course
depends on the accuracy of     1   that is, it depends on se(     1). if se(     1) is
small, then even relatively small values of     1 may provide strong evidence
that   1 (cid:4)= 0, and hence that there is a relationship between x and y . in
contrast, if se(     1) is large, then     1 must be large in absolute value in order
for us to reject the null hypothesis. in practice, we compute a t-statistic,
given by

    1     0
se(     1)

t =

,

(3.14)

t-statistic

which measures the number of standard deviations that     1 is away from
0. if there really is no relationship between x and y , then we expect
that (3.14) will have a t-distribution with n     2 degrees of freedom. the t-
distribution has a bell shape and for values of n greater than approximately
30 it is quite similar to the normal distribution. consequently, it is a simple
matter to compute the id203 of observing any value equal to |t| or
larger, assuming   1 = 0. we call this id203 the p-value. roughly
speaking, we interpret the p-value as follows: a small p-value indicates that
it is unlikely to observe such a substantial association between the predictor
and the response due to chance, in the absence of any real association
between the predictor and the response. hence, if we see a small p-value,

p-value

68

3. id75

then we can infer that there is an association between the predictor and the
response. we reject the null hypothesis   that is, we declare a relationship
to exist between x and y    if the p-value is small enough. typical p-value
cuto   s for rejecting the null hypothesis are 5 or 1 %. when n = 30, these
correspond to t-statistics (3.14) of around 2 and 2.75, respectively.

intercept
tv

coe   cient
7.0325
0.0475

std. error
0.4578
0.0027

t-statistic

p-value
15.36 < 0.0001
17.67 < 0.0001

table 3.1. for the advertising data, coe   cients of the least squares model
for the regression of number of units sold on tv advertising budget. an increase
of $1,000 in the tv advertising budget is associated with an increase in sales by
around 50 units (recall that the sales variable is in thousands of units, and the
tv variable is in thousands of dollars).

table 3.1 provides details of the least squares model for the regression of
number of units sold on tv advertising budget for the advertising data.
notice that the coe   cients for     0 and     1 are very large relative to their
standard errors, so the t-statistics are also large; the probabilities of seeing
such values if h0 is true are virtually zero. hence we can conclude that
  0 (cid:4)= 0 and   1 (cid:4)= 0.4

3.1.3 assessing the accuracy of the model

once we have rejected the null hypothesis (3.12) in favor of the alternative
hypothesis (3.13), it is natural to want to quantify the extent to which the
model    ts the data. the quality of a id75    t is typically assessed
using two related quantities: the residual standard error (rse) and the r2
statistic.

table 3.2 displays the rse, the r2 statistic, and the f-statistic (to be
described in section 3.2.2) for the id75 of number of units sold
on tv advertising budget.

r2

residual standard error

recall from the model (3.5) that associated with each observation is an
error term  . due to the presence of these error terms, even if we knew the
true regression line (i.e. even if   0 and   1 were known), we would not be
able to perfectly predict y from x. the rse is an estimate of the standard

4in table 3.1, a small p-value for the intercept indicates that we can reject the null
hypothesis that   0 = 0, and a small p-value for tv indicates that we can reject the null
hypothesis that   1 = 0. rejecting the latter null hypothesis allows us to conclude that
there is a relationship between tv and sales. rejecting the former allows us to conclude
that in the absence of tv expenditure, sales are non-zero.

3.1 simple id75

69

quantity
residual standard error
r2
f-statistic

value
3.26
0.612
312.1

table 3.2. for the advertising data, more information about the least squares
model for the regression of number of units sold on tv advertising budget.

deviation of  . roughly speaking, it is the average amount that the response
will deviate from the true regression line. it is computed using the formula

(cid:26)

rse =

1
n     2

rss =

(cid:27)(cid:28)(cid:28)(cid:29) 1
n     2

n(cid:17)

i=1

(yi       yi)2.

(3.15)

note that rss was de   ned in section 3.1.1, and is given by the formula

n(cid:17)

rss =

i=1

(yi       yi)2.

(3.16)

in the case of the advertising data, we see from the id75
output in table 3.2 that the rse is 3.26. in other words, actual sales in
each market deviate from the true regression line by approximately 3,260
units, on average. another way to think about this is that even if the
model were correct and the true values of the unknown coe   cients   0
and   1 were known exactly, any prediction of sales on the basis of tv
advertising would still be o    by about 3,260 units on average. of course,
whether or not 3,260 units is an acceptable prediction error depends on the
problem context. in the advertising data set, the mean value of sales over
all markets is approximately 14,000 units, and so the percentage error is
3,260/14,000 = 23 %.

the rse is considered a measure of the lack of    t of the model (3.5) to
the data. if the predictions obtained using the model are very close to the

true outcome values   that is, if   yi     yi for i = 1, . . . , n   then (3.15) will

be small, and we can conclude that the model    ts the data very well. on
the other hand, if   yi is very far from yi for one or more observations, then
the rse may be quite large, indicating that the model doesn   t    t the data
well.

r2 statistic

the rse provides an absolute measure of lack of    t of the model (3.5)
to the data. but since it is measured in the units of y , it is not always
clear what constitutes a good rse. the r2 statistic provides an alternative
measure of    t. it takes the form of a proportion   the proportion of variance
explained   and so it always takes on a value between 0 and 1, and is
independent of the scale of y .

70

3. id75

(3.17)

to calculate r2, we use the formula
tss     rss

r2 =

tss

= 1     rss
tss

(cid:10)

(yi       y)2 is the total sum of squares, and rss is de   ned

where tss =
in (3.16). tss measures the total variance in the response y , and can be
thought of as the amount of variability inherent in the response before the
regression is performed. in contrast, rss measures the amount of variability
that is left unexplained after performing the regression. hence, tss    rss
measures the amount of variability in the response that is explained (or
removed) by performing the regression, and r2 measures the proportion
of variability in y that can be explained using x. an r2 statistic that is
close to 1 indicates that a large proportion of the variability in the response
has been explained by the regression. a number near 0 indicates that the
regression did not explain much of the variability in the response; this might
occur because the linear model is wrong, or the inherent error   2 is high,
or both. in table 3.2, the r2 was 0.61, and so just under two-thirds of the
variability in sales is explained by a id75 on tv.

total sum of
squares

the r2 statistic (3.17) has an interpretational advantage over the rse
(3.15), since unlike the rse, it always lies between 0 and 1. however, it can
still be challenging to determine what is a good r2 value, and in general,
this will depend on the application. for instance, in certain problems in
physics, we may know that the data truly comes from a linear model with
a small residual error. in this case, we would expect to see an r2 value that
is extremely close to 1, and a substantially smaller r2 value might indicate a
serious problem with the experiment in which the data were generated. on
the other hand, in typical applications in biology, psychology, marketing,
and other domains, the linear model (3.5) is at best an extremely rough
approximation to the data, and residual errors due to other unmeasured
factors are often very large. in this setting, we would expect only a very
small proportion of the variance in the response to be explained by the
predictor, and an r2 value well below 0.1 might be more realistic!

the r2 statistic is a measure of the linear relationship between x and

y . recall that correlation, de   ned as
(cid:10)
i=1(xi     x)2

cor(x, y ) =

(cid:22)(cid:10)

n

n

i=1(xi     x)(yi     y)

(cid:22)(cid:10)

n

i=1(yi     y)2

correlation

,

(3.18)

is also a measure of the linear relationship between x and y .5 this sug-
gests that we might be able to use r = cor(x, y ) instead of r2 in order to
assess the    t of the linear model. in fact, it can be shown that in the simple
id75 setting, r2 = r2. in other words, the squared correlation

5we note that in fact, the right-hand side of (3.18) is the sample correlation; thus,
it would be more correct to write (cid:2)cor(x, y ); however, we omit the    hat    for ease of
notation.

3.2 multiple id75

71

and the r2 statistic are identical. however, in the next section we will
discuss the multiple id75 problem, in which we use several pre-
dictors simultaneously to predict the response. the concept of correlation
between the predictors and the response does not extend automatically to
this setting, since correlation quanti   es the association between a single
pair of variables rather than between a larger number of variables. we will
see that r2    lls this role.

3.2 multiple id75

simple id75 is a useful approach for predicting a response on the
basis of a single predictor variable. however, in practice we often have more
than one predictor. for example, in the advertising data, we have examined
the relationship between sales and tv advertising. we also have data for
the amount of money spent advertising on the radio and in newspapers,
and we may want to know whether either of these two media is associated
with sales. how can we extend our analysis of the advertising data in order
to accommodate these two additional predictors?

one option is to run three separate simple id75s, each of
which uses a di   erent advertising medium as a predictor. for instance,
we can    t a simple id75 to predict sales on the basis of the
amount spent on radio advertisements. results are shown in table 3.3 (top
table). we    nd that a $1,000 increase in spending on radio advertising is
associated with an increase in sales by around 203 units. table 3.3 (bottom
table) contains the least squares coe   cients for a simple id75 of
sales onto newspaper advertising budget. a $1,000 increase in newspaper
advertising budget is associated with an increase in sales by approximately
55 units.

however, the approach of    tting a separate simple id75 model
for each predictor is not entirely satisfactory. first of all, it is unclear how to
make a single prediction of sales given levels of the three advertising media
budgets, since each of the budgets is associated with a separate regression
equation. second, each of the three regression equations ignores the other
two media in forming estimates for the regression coe   cients. we will see
shortly that if the media budgets are correlated with each other in the 200
markets that constitute our data set, then this can lead to very misleading
estimates of the individual media e   ects on sales.

instead of    tting a separate simple id75 model for each pre-
dictor, a better approach is to extend the simple id75 model
(3.5) so that it can directly accommodate multiple predictors. we can do
this by giving each predictor a separate slope coe   cient in a single model.
in general, suppose that we have p distinct predictors. then the multiple
id75 model takes the form

y =   0 +   1x1 +   2x2 +        +   pxp +  ,

(3.19)

72

3. id75

simple regression of sales on radio

intercept
radio

coe   cient
9.312
0.203

std. error
0.563
0.020

t-statistic

p-value
16.54 < 0.0001
9.92 < 0.0001

simple regression of sales on newspaper

intercept
newspaper

coe   cient
12.351
0.055

std. error
0.621
0.017

t-statistic

p-value
19.88 < 0.0001
3.30 < 0.0001

table 3.3. more simple id75 models for the advertising data. co-
e   cients of the simple id75 model for number of units sold on top:
radio advertising budget and bottom: newspaper advertising budget. a $1,000 in-
crease in spending on radio advertising is associated with an average increase in
sales by around 203 units, while the same increase in spending on newspaper ad-
vertising is associated with an average increase in sales by around 55 units (note
that the sales variable is in thousands of units, and the radio and newspaper
variables are in thousands of dollars).

where xj represents the jth predictor and   j quanti   es the association
between that variable and the response. we interpret   j as the average
e   ect on y of a one unit increase in xj, holding all other predictors    xed.
in the advertising example, (3.19) becomes

sales =   0 +   1    tv +   2    radio +   3    newspaper +  .

(3.20)

3.2.1 estimating the regression coe   cients

as was the case in the simple id75 setting, the regression coef-
   cients   0,   1, . . . ,   p in (3.19) are unknown, and must be estimated. given
estimates     0,     1, . . . ,     p, we can make predictions using the formula

  y =     0 +     1x1 +     2x2 +        +     pxp.

(3.21)

the parameters are estimated using the same least squares approach that
we saw in the context of simple id75. we choose   0,   1, . . . ,   p
to minimize the sum of squared residuals

n(cid:17)

rss =

i=1

n(cid:17)

i=1

=

(yi       yi)2

(yi         0         1xi1         2xi2                    pxip)2.

(3.22)

3.2 multiple id75

73

y

x2

x1

figure 3.4. in a three-dimensional setting, with two predictors and one re-
sponse, the least squares regression line becomes a plane. the plane is chosen
to minimize the sum of the squared vertical distances between each observation
(shown in red) and the plane.

the values     0,     1, . . . ,     p that minimize (3.22) are the multiple least squares
regression coe   cient estimates. unlike the simple linear
regression
estimates given in (3.4), the multiple regression coe   cient estimates have
somewhat complicated forms that are most easily represented using ma-
trix algebra. for this reason, we do not provide them here. any statistical
software package can be used to compute these coe   cient estimates, and
later in this chapter we will show how this can be done in r. figure 3.4
illustrates an example of the least squares    t to a toy data set with p = 2
predictors.

table 3.4 displays the multiple regression coe   cient estimates when tv,
radio, and newspaper advertising budgets are used to predict product sales
using the advertising data. we interpret these results as follows: for a given
amount of tv and newspaper advertising, spending an additional $1,000
on radio advertising leads to an increase in sales by approximately 189
units. comparing these coe   cient estimates to those displayed in tables 3.1
and 3.3, we notice that the multiple regression coe   cient estimates for
tv and radio are pretty similar to the simple id75 coe   cient
estimates. however, while the newspaper regression coe   cient estimate in
table 3.3 was signi   cantly non-zero, the coe   cient estimate for newspaper
in the multiple regression model is close to zero, and the corresponding
p-value is no longer signi   cant, with a value around 0.86. this illustrates

74

3. id75

intercept
tv
radio
newspaper

coe   cient
2.939
0.046
0.189
   0.001

std. error
0.3119
0.0014
0.0086
0.0059

t-statistic

p-value
9.42 < 0.0001
32.81 < 0.0001
21.89 < 0.0001
   0.18
0.8599

table 3.4. for the advertising data, least squares coe   cient estimates of the
multiple id75 of number of units sold on radio, tv, and newspaper
advertising budgets.

that the simple and multiple regression coe   cients can be quite di   erent.
this di   erence stems from the fact that in the simple regression case, the
slope term represents the average e   ect of a $1,000 increase in newspaper
advertising, ignoring other predictors such as tv and radio. in contrast, in
the multiple regression setting, the coe   cient for newspaper represents the
average e   ect of increasing newspaper spending by $1,000 while holding tv
and radio    xed.

does it make sense for the multiple regression to suggest no relationship
between sales and newspaper while the simple id75 implies the
opposite? in fact it does. consider the correlation matrix for the three
predictor variables and response variable, displayed in table 3.5. notice
that the correlation between radio and newspaper is 0.35. this reveals a
tendency to spend more on newspaper advertising in markets where more
is spent on radio advertising. now suppose that the multiple regression is
correct and newspaper advertising has no direct impact on sales, but radio
advertising does increase sales. then in markets where we spend more
on radio our sales will tend to be higher, and as our correlation matrix
shows, we also tend to spend more on newspaper advertising in those same
markets. hence, in a simple id75 which only examines sales
versus newspaper, we will observe that higher values of newspaper tend to be
associated with higher values of sales, even though newspaper advertising
does not actually a   ect sales. so newspaper sales are a surrogate for radio
advertising; newspaper gets    credit    for the e   ect of radio on sales.

this slightly counterintuitive result is very common in many real life
situations. consider an absurd example to illustrate the point. running
a regression of shark attacks versus ice cream sales for data collected at
a given beach community over a period of time would show a positive
relationship, similar to that seen between sales and newspaper. of course
no one (yet) has suggested that ice creams should be banned at beaches
to reduce shark attacks. in reality, higher temperatures cause more people
to visit the beach, which in turn results in more ice cream sales and more
shark attacks. a multiple regression of attacks versus ice cream sales and
temperature reveals that, as intuition implies, the former predictor is no
longer signi   cant after adjusting for temperature.

3.2 multiple id75

75

tv
radio
newspaper
sales

tv

1.0000

radio
0.0548
1.0000

newspaper

0.0567
0.3541
1.0000

sales
0.7822
0.5762
0.2283
1.0000

table 3.5. correlation matrix for tv, radio, newspaper, and sales for the
advertising data.

3.2.2 some important questions

when we perform multiple id75, we usually are interested in
answering a few important questions.

1. is at least one of the predictors x1, x2, . . . , xp useful in predicting

the response?

2. do all the predictors help to explain y , or is only a subset of the

predictors useful?

3. how well does the model    t the data?

4. given a set of predictor values, what response value should we predict,

and how accurate is our prediction?

we now address each of these questions in turn.

one: is there a relationship between the response and predictors?

recall that in the simple id75 setting, in order to determine
whether there is a relationship between the response and the predictor we
can simply check whether   1 = 0. in the multiple regression setting with p
predictors, we need to ask whether all of the regression coe   cients are zero,
i.e. whether   1 =   2 =        =   p = 0. as in the simple id75

setting, we use a hypothesis test to answer this question. we test the null
hypothesis,

h0 :   1 =   2 =        =   p = 0

versus the alternative

ha : at least one   j is non-zero.

this hypothesis test is performed by computing the f-statistic,

(tss     rss)/p
rss/(n     p     1)

,

f =

f-statistic

(3.23)

76

3. id75

quantity
residual standard error
r2
f-statistic

value
1.69
0.897
570

table 3.6. more information about the least squares model for the regression
of number of units sold on tv, newspaper, and radio advertising budgets in the
advertising data. other information about this model was displayed in table 3.4.
(cid:10)
where, as with simple id75, tss =

(yi       y)2 and rss =
(yi      yi)2. if the linear model assumptions are correct, one can show that

(cid:10)

e{rss/(n     p     1)} =   2

and that, provided h0 is true,

e{(tss     rss)/p} =   2.

hence, when there is no relationship between the response and predictors,
one would expect the f-statistic to take on a value close to 1. on the other

hand, if ha is true, then e{(tss     rss)/p} >   2, so we expect f to be

greater than 1.

the f-statistic for the multiple id75 model obtained by re-
gressing sales onto radio, tv, and newspaper is shown in table 3.6. in this
example the f-statistic is 570. since this is far larger than 1, it provides
compelling evidence against the null hypothesis h0. in other words, the
large f-statistic suggests that at least one of the advertising media must
be related to sales. however, what if the f-statistic had been closer to
1? how large does the f-statistic need to be before we can reject h0 and
conclude that there is a relationship? it turns out that the answer depends
on the values of n and p. when n is large, an f-statistic that is just a
little larger than 1 might still provide evidence against h0. in contrast,
a larger f-statistic is needed to reject h0 if n is small. when h0 is true
and the errors  i have a normal distribution, the f-statistic follows an
f-distribution.6 for any given value of n and p, any statistical software
package can be used to compute the p-value associated with the f-statistic
using this distribution. based on this p-value, we can determine whether
or not to reject h0. for the advertising data, the p-value associated with
the f-statistic in table 3.6 is essentially zero, so we have extremely strong
evidence that at least one of the media is associated with increased sales.
in (3.23) we are testing h0 that all the coe   cients are zero. sometimes
we want to test that a particular subset of q of the coe   cients are zero.
this corresponds to a null hypothesis

h0 :

  p   q+1 =   p   q+2 = . . . =   p = 0,

6even if the errors are not normally-distributed, the f-statistic approximately follows

an f-distribution provided that the sample size n is large.

3.2 multiple id75

77

where for convenience we have put the variables chosen for omission at the
end of the list. in this case we    t a second model that uses all the variables
except those last q. suppose that the residual sum of squares for that model
is rss0. then the appropriate f-statistic is

(rss0     rss)/q
rss/(n     p     1)

.

f =

(3.24)

notice that in table 3.4, for each individual predictor a t-statistic and
a p-value were reported. these provide information about whether each
individual predictor is related to the response, after adjusting for the other
predictors. it turns out that each of these are exactly equivalent7 to the
f-test that omits that single variable from the model, leaving all the others
in   i.e. q=1 in (3.24). so it reports the partial e   ect of adding that variable
to the model. for instance, as we discussed earlier, these p-values indicate
that tv and radio are related to sales, but that there is no evidence that
newspaper is associated with sales, in the presence of these two.

given these individual p-values for each variable, why do we need to look
at the overall f-statistic? after all, it seems likely that if any one of the
p-values for the individual variables is very small, then at least one of the
predictors is related to the response. however, this logic is    awed, especially
when the number of predictors p is large.

for instance, consider an example in which p = 100 and h0 :   1 =   2 =
. . . =   p = 0 is true, so no variable is truly associated with the response. in
this situation, about 5 % of the p-values associated with each variable (of
the type shown in table 3.4) will be below 0.05 by chance. in other words,
we expect to see approximately    ve small p-values even in the absence of
any true association between the predictors and the response. in fact, we
are almost guaranteed that we will observe at least one p-value below 0.05
by chance! hence, if we use the individual t-statistics and associated p-
values in order to decide whether or not there is any association between
the variables and the response, there is a very high chance that we will
incorrectly conclude that there is a relationship. however, the f-statistic
does not su   er from this problem because it adjusts for the number of
predictors. hence, if h0 is true, there is only a 5 % chance that the f-
statistic will result in a p-value below 0.05, regardless of the number of
predictors or the number of observations.

the approach of using an f-statistic to test for any association between
the predictors and the response works when p is relatively small, and cer-
tainly small compared to n. however, sometimes we have a very large num-
ber of variables. if p > n then there are more coe   cients   j to estimate
than observations from which to estimate them. in this case we cannot
even    t the multiple id75 model using least squares, so the

7the square of each t-statistic is the corresponding f-statistic.

78

3. id75

f-statistic cannot be used, and neither can most of the other concepts that
we have seen so far in this chapter. when p is large, some of the approaches
discussed in the next section, such as forward selection, can be used. this
high-dimensional setting is discussed in greater detail in chapter 6.

high-
dimensional

two: deciding on important variables

as discussed in the previous section, the    rst step in a multiple regression
analysis is to compute the f-statistic and to examine the associated p-
value. if we conclude on the basis of that p-value that at least one of the
predictors is related to the response, then it is natural to wonder which are
the guilty ones! we could look at the individual p-values as in table 3.4,
but as discussed, if p is large we are likely to make some false discoveries.
it is possible that all of the predictors are associated with the response,
but it is more often the case that the response is only related to a subset of
the predictors. the task of determining which predictors are associated with
the response, in order to    t a single model involving only those predictors,
is referred to as variable selection. the variable selection problem is studied
extensively in chapter 6, and so here we will provide only a brief outline
of some classical approaches.

ideally, we would like to perform variable selection by trying out a lot of
di   erent models, each containing a di   erent subset of the predictors. for
instance, if p = 2, then we can consider four models: (1) a model contain-
ing no variables, (2) a model containing x1 only, (3) a model containing
x2 only, and (4) a model containing both x1 and x2. we can then se-
lect the best model out of all of the models that we have considered. how
do we determine which model is best? various statistics can be used to
judge the quality of a model. these include mallow   s cp, akaike informa-
tion criterion (aic), bayesian information criterion (bic), and adjusted
r2. these are discussed in more detail in chapter 6. we can also deter-
mine which model is best by plotting various model outputs, such as the
residuals, in order to search for patterns.

unfortunately, there are a total of 2p models that contain subsets of p
variables. this means that even for moderate p, trying out every possible
subset of the predictors is infeasible. for instance, we saw that if p = 2, then
there are 22 = 4 models to consider. but if p = 30, then we must consider
230 = 1,073,741,824 models! this is not practical. therefore, unless p is very
small, we cannot consider all 2p models, and instead we need an automated
and e   cient approach to choose a smaller set of models to consider. there
are three classical approaches for this task:

variable
selection

mallow   s cp

akaike
information
criterion
bayesian
information
criterion
adjusted r2

    forward selection. we begin with the null model   a model that con-
tains an intercept but no predictors. we then    t p simple linear re-
gressions and add to the null model the variable that results in the
lowest rss. we then add to that model the variable that results

forward
selection
null model

3.2 multiple id75

79

in the lowest rss for the new two-variable model. this approach is
continued until some stopping rule is satis   ed.

    backward selection. we start with all variables in the model, and
remove the variable with the largest p-value   that is, the variable
that is the least statistically signi   cant. the new (p     1)-variable
model is    t, and the variable with the largest p-value is removed. this
procedure continues until a stopping rule is reached. for instance, we
may stop when all remaining variables have a p-value below some
threshold.

    mixed selection. this is a combination of forward and backward se-
lection. we start with no variables in the model, and as with forward
selection, we add the variable that provides the best    t. we con-
tinue to add variables one-by-one. of course, as we noted with the
advertising example, the p-values for variables can become larger as
new predictors are added to the model. hence, if at any point the
p-value for one of the variables in the model rises above a certain
threshold, then we remove that variable from the model. we con-
tinue to perform these forward and backward steps until all variables
in the model have a su   ciently low p-value, and all variables outside
the model would have a large p-value if added to the model.

backward
selection

mixed
selection

backward selection cannot be used if p > n, while forward selection can
always be used. forward selection is a greedy approach, and might include
variables early that later become redundant. mixed selection can remedy
this.

three: model fit

two of the most common numerical measures of model    t are the rse and
r2, the fraction of variance explained. these quantities are computed and
interpreted in the same fashion as for simple id75.

recall that in simple regression, r2 is the square of the correlation of the
response and the variable. in multiple id75, it turns out that it
equals cor(y,   y )2, the square of the correlation between the response and
the    tted linear model; in fact one property of the    tted linear model is
that it maximizes this correlation among all possible linear models.

an r2 value close to 1 indicates that the model explains a large portion
of the variance in the response variable. as an example, we saw in table 3.6
that for the advertising data, the model that uses all three advertising me-
dia to predict sales has an r2 of 0.8972. on the other hand, the model that
uses only tv and radio to predict sales has an r2 value of 0.89719. in other
words, there is a small increase in r2 if we include newspaper advertising
in the model that already contains tv and radio advertising, even though
we saw earlier that the p-value for newspaper advertising in table 3.4 is not
signi   cant. it turns out that r2 will always increase when more variables

80

3. id75

are added to the model, even if those variables are only weakly associated
with the response. this is due to the fact that adding another variable to
the least squares equations must allow us to    t the training data (though
not necessarily the testing data) more accurately. thus, the r2 statistic,
which is also computed on the training data, must increase. the fact that
adding newspaper advertising to the model containing only tv and radio
advertising leads to just a tiny increase in r2 provides additional evidence
that newspaper can be dropped from the model. essentially, newspaper pro-
vides no real improvement in the model    t to the training samples, and its
inclusion will likely lead to poor results on independent test samples due
to over   tting.

in contrast, the model containing only tv as a predictor had an r2 of 0.61
(table 3.2). adding radio to the model leads to a substantial improvement
in r2. this implies that a model that uses tv and radio expenditures to
predict sales is substantially better than one that uses only tv advertis-
ing. we could further quantify this improvement by looking at the p-value
for the radio coe   cient in a model that contains only tv and radio as
predictors.

the model that contains only tv and radio as predictors has an rse
of 1.681, and the model that also contains newspaper as a predictor has
an rse of 1.686 (table 3.6). in contrast, the model that contains only tv
has an rse of 3.26 (table 3.2). this corroborates our previous conclusion
that a model that uses tv and radio expenditures to predict sales is much
more accurate (on the training data) than one that only uses tv spending.
furthermore, given that tv and radio expenditures are used as predictors,
there is no point in also using newspaper spending as a predictor in the
model. the observant reader may wonder how rse can increase when
newspaper is added to the model given that rss must decrease. in general
rse is de   ned as

(cid:26)

rse =

1

n     p     1

rss,

(3.25)

which simpli   es to (3.15) for a simple id75. thus, models with
more variables can have higher rse if the decrease in rss is small relative
to the increase in p.

in addition to looking at the rse and r2 statistics just discussed, it
can be useful to plot the data. graphical summaries can reveal problems
with a model that are not visible from numerical statistics. for example,
figure 3.5 displays a three-dimensional plot of tv and radio versus sales.
we see that some observations lie above and some observations lie below
the least squares regression plane. in particular, the linear model seems to
overestimate sales for instances in which most of the advertising money
was spent exclusively on either tv or radio. it underestimates sales for
instances where the budget was split between the two media. this pro-
nounced non-linear pattern cannot be modeled accurately using linear re-

sales

3.2 multiple id75

81

tv

radio

figure 3.5. for the advertising data, a id75    t to sales using
tv and radio as predictors. from the pattern of the residuals, we can see that
there is a pronounced non-linear relationship in the data. the positive residuals
(those visible above the surface), tend to lie along the 45-degree line, where tv
and radio budgets are split evenly. the negative residuals (most not visible), tend
to lie away from this line, where budgets are more lopsided.

gression. it suggests a synergy or interaction e   ect between the advertising
media, whereby combining the media together results in a bigger boost to
sales than using any single medium. in section 3.3.2, we will discuss ex-
tending the linear model to accommodate such synergistic e   ects through
the use of interaction terms.

four: predictions

once we have    t the multiple regression model, it is straightforward to
apply (3.21) in order to predict the response y on the basis of a set of
values for the predictors x1, x2, . . . , xp. however, there are three sorts of
uncertainty associated with this prediction.

1. the coe   cient estimates     0,     1, . . . ,     p are estimates for   0,   1, . . . ,   p.

that is, the least squares plane

  y =     0 +     1x1 +        +     pxp

is only an estimate for the true population regression plane

f (x) =   0 +   1x1 +        +   pxp.

the inaccuracy in the coe   cient estimates is related to the reducible
error from chapter 2. we can compute a con   dence interval in order
to determine how close   y will be to f (x).

82

3. id75

2. of course, in practice assuming a linear model for f (x) is almost
always an approximation of reality, so there is an additional source of
potentially reducible error which we call model bias. so when we use a
linear model, we are in fact estimating the best linear approximation
to the true surface. however, here we will ignore this discrepancy,
and operate as if the linear model were correct.

3. even if we knew f (x)   that is, even if we knew the true values
for   0,   1, . . . ,   p   the response value cannot be predicted perfectly
because of the random error   in the model (3.21). in chapter 2, we
referred to this as the irreducible error. how much will y vary from
  y ? we use prediction intervals to answer this question. prediction
intervals are always wider than con   dence intervals, because they
incorporate both the error in the estimate for f (x) (the reducible
error) and the uncertainty as to how much an individual point will
di   er from the population regression plane (the irreducible error).

we use a con   dence interval to quantify the uncertainty surrounding
the average sales over a large number of cities. for example, given that
$100,000 is spent on tv advertising and $20,000 is spent on radio advertising
in each city, the 95 % con   dence interval is [10,985, 11,528]. we interpret
this to mean that 95 % of intervals of this form will contain the true value of
f (x).8 on the other hand, a prediction interval can be used to quantify the
uncertainty surrounding sales for a particular city. given that $100,000 is
spent on tv advertising and $20,000 is spent on radio advertising in that city
the 95 % prediction interval is [7,930, 14,580]. we interpret this to mean
that 95 % of intervals of this form will contain the true value of y for this
city. note that both intervals are centered at 11,256, but that the prediction
interval is substantially wider than the con   dence interval, re   ecting the
increased uncertainty about sales for a given city in comparison to the
average sales over many locations.

con   dence
interval

prediction
interval

3.3 other considerations in the regression model

3.3.1 qualitative predictors

in our discussion so far, we have assumed that all variables in our linear
regression model are quantitative. but in practice, this is not necessarily
the case; often some predictors are qualitative.

8in other words, if we collect a large number of data sets like the advertising data
set, and we construct a con   dence interval for the average sales on the basis of each
data set (given $100,000 in tv and $20,000 in radio advertising), then 95 % of these
con   dence intervals will contain the true value of average sales.

3.3 other considerations in the regression model

83

for example, the credit data set displayed in figure 3.6 records balance
(average credit card debt for a number of individuals) as well as several
quantitative predictors: age, cards (number of credit cards), education
(years of education), income (in thousands of dollars), limit (credit limit),
and rating (credit rating). each panel of figure 3.6 is a scatterplot for a
pair of variables whose identities are given by the corresponding row and
column labels. for example, the scatterplot directly to the right of the word
   balance    depicts balance versus age, while the plot directly to the right
of    age    corresponds to age versus cards. in addition to these quantitative
variables, we also have four qualitative variables: gender, student (student
status), status (marital status), and ethnicity (caucasian, african amer-
ican or asian).

20 40 60 80 100

5

10

15

20

2000

8000 14000

balance

age

cards

0
0
1

0
8

0
6

0
4

0
2

0
2

5
1

0
1

5

0
0
0
4
1

0
0
0
8

0
0
0
2

0
0
5
1

0
0
5

0

8

6

4

2

0
5
1

0
0
1

0
5

0
0
0
1

0
0
6

0
0
2

education

income

limit

rating

0 500

1500

2

4

6

8

50 100 150

200

600

1000

figure 3.6. the credit data set contains information about balance, age,
cards, education, income, limit, and rating for a number of potential cus-
tomers.

84

3. id75

intercept
gender[female]

coe   cient
509.80
19.73

std. error
33.13
46.05

t-statistic

p-value
15.389 < 0.0001
0.6690

0.429

table 3.7. least squares coe   cient estimates associated with the regression of
balance onto gender in the credit data set. the linear model is given in (3.27).
that is, gender is encoded as a dummy variable, as in (3.26).

predictors with only two levels

suppose that we wish to investigate di   erences in credit card balance be-
tween males and females, ignoring the other variables for the moment. if a
qualitative predictor (also known as a factor) only has two levels, or possi-
ble values, then incorporating it into a regression model is very simple. we
simply create an indicator or dummy variable that takes on two possible
numerical values. for example, based on the gender variable, we can create
a new variable that takes the form

(cid:30)

factor
level

dummy
variable

xi =

1
0

if ith person is female
if ith person is male,

(3.26)

and use this variable as a predictor in the regression equation. this results
in the model

(cid:30)

yi =   0 +   1xi +  i =

  0 +   1 +  i
  0 +  i

if ith person is female
if ith person is male.

(3.27)

now   0 can be interpreted as the average credit card balance among males,
  0 +   1 as the average credit card balance among females, and   1 as the
average di   erence in credit card balance between females and males.

table 3.7 displays the coe   cient estimates and other information asso-
ciated with the model (3.27). the average credit card debt for males is
estimated to be $509.80, whereas females are estimated to carry $19.73 in
additional debt for a total of $509.80 + $19.73 = $529.53. however, we
notice that the p-value for the dummy variable is very high. this indicates
that there is no statistical evidence of a di   erence in average credit card
balance between the genders.

the decision to code females as 1 and males as 0 in (3.27) is arbitrary, and
has no e   ect on the regression    t, but does alter the interpretation of the
coe   cients. if we had coded males as 1 and females as 0, then the estimates
for   0 and   1 would have been 529.53 and    19.73, respectively, leading once
again to a prediction of credit card debt of $529.53     $19.73 = $509.80 for
males and a prediction of $529.53 for females. alternatively, instead of a
0/1 coding scheme, we could create a dummy variable

3.3 other considerations in the regression model

(cid:30)

85

xi =

1
   1

if ith person is female
if ith person is male

and use this variable in the regression equation. this results in the model

yi =   0 +   1xi +  i =

(cid:30)
  0 +   1 +  i
  0       1 +  i

if ith person is female
if ith person is male.

now   0 can be interpreted as the overall average credit card balance (ig-
noring the gender e   ect), and   1 is the amount that females are above the
average and males are below the average. in this example, the estimate for
  0 would be $519.665, halfway between the male and female averages of
$509.80 and $529.53. the estimate for   1 would be $9.865, which is half of
$19.73, the average di   erence between females and males. it is important to
note that the    nal predictions for the credit balances of males and females
will be identical regardless of the coding scheme used. the only di   erence
is in the way that the coe   cients are interpreted.

qualitative predictors with more than two levels

when a qualitative predictor has more than two levels, a single dummy
variable cannot represent all possible values. in this situation, we can create
additional dummy variables. for example, for the ethnicity variable we
create two dummy variables. the    rst could be

(cid:30)

xi1 =

1
0

if ith person is asian
if ith person is not asian,

and the second could be
(cid:30)

xi2 =

1
0

if ith person is caucasian
if ith person is not caucasian.

(3.28)

(3.29)

then both of these variables can be used in the regression equation, in
order to obtain the model

yi =   0+  1xi1+  2xi2+ i =

   
      

      

  0+  1+ i
  0+  2+ i
  0+ i

if ith person is asian
if ith person is caucasian
if ith person is african american.

(3.30)
now   0 can be interpreted as the average credit card balance for african
americans,   1 can be interpreted as the di   erence in the average balance
between the asian and african american categories, and   2 can be inter-
preted as the di   erence in the average balance between the caucasian and

86

3. id75

intercept
ethnicity[asian]
ethnicity[caucasian]

coe   cient
531.00
   18.69
   12.50

std. error
46.32
65.02
56.68

t-statistic
p-value
11.464 < 0.0001
   0.287
0.7740
   0.221
0.8260

table 3.8. least squares coe   cient estimates associated with the regression
of balance onto ethnicity in the credit data set. the linear model is given in
(3.30). that is, ethnicity is encoded via two dummy variables (3.28) and (3.29).

african american categories. there will always be one fewer dummy vari-
able than the number of levels. the level with no dummy variable   african
american in this example   is known as the baseline.

from table 3.8, we see that the estimated balance for the baseline,
african american, is $531.00. it is estimated that the asian category will
have $18.69 less debt than the african american category, and that the
caucasian category will have $12.50 less debt than the african american
category. however, the p-values associated with the coe   cient estimates for
the two dummy variables are very large, suggesting no statistical evidence
of a real di   erence in credit card balance between the ethnicities. once
again, the level selected as the baseline category is arbitrary, and the    nal
predictions for each group will be the same regardless of this choice. how-
ever, the coe   cients and their p-values do depend on the choice of dummy
variable coding. rather than rely on the individual coe   cients, we can use
an f-test to test h0 :   1 =   2 = 0; this does not depend on the coding.
this f-test has a p-value of 0.96, indicating that we cannot reject the null
hypothesis that there is no relationship between balance and ethnicity.

using this dummy variable approach presents no di   culties when in-
corporating both quantitative and qualitative predictors. for example, to
regress balance on both a quantitative variable such as income and a qual-
itative variable such as student, we must simply create a dummy variable
for student and then    t a multiple regression model using income and the
dummy variable as predictors for credit card balance.

there are many di   erent ways of coding qualitative variables besides
the dummy variable approach taken here. all of these approaches lead to
equivalent model    ts, but the coe   cients are di   erent and have di   erent
interpretations, and are designed to measure particular contrasts. this topic
is beyond the scope of the book, and so we will not pursue it further.

3.3.2 extensions of the linear model

the standard id75 model (3.19) provides interpretable results
and works quite well on many real-world problems. however, it makes sev-
eral highly restrictive assumptions that are often violated in practice. two
of the most important assumptions state that the relationship between the
predictors and response are additive and linear. the additive assumption

baseline

contrast

additive
linear

3.3 other considerations in the regression model

87

means that the e   ect of changes in a predictor xj on the response y is
independent of the values of the other predictors. the linear assumption
states that the change in the response y due to a one-unit change in xj is
constant, regardless of the value of xj. in this book, we examine a number
of sophisticated methods that relax these two assumptions. here, we brie   y
examine some common classical approaches for extending the linear model.

removing the additive assumption

in our previous analysis of the advertising data, we concluded that both tv
and radio seem to be associated with sales. the linear models that formed
the basis for this conclusion assumed that the e   ect on sales of increasing
one advertising medium is independent of the amount spent on the other
media. for example, the linear model (3.20) states that the average e   ect
on sales of a one-unit increase in tv is always   1, regardless of the amount
spent on radio.

however, this simple model may be incorrect. suppose that spending
money on radio advertising actually increases the e   ectiveness of tv ad-
vertising, so that the slope term for tv should increase as radio increases.
in this situation, given a    xed budget of $100,000, spending half on radio
and half on tv may increase sales more than allocating the entire amount
to either tv or to radio. in marketing, this is known as a synergy e   ect,
and in statistics it is referred to as an interaction e   ect. figure 3.5 sug-
gests that such an e   ect may be present in the advertising data. notice
that when levels of either tv or radio are low, then the true sales are lower
than predicted by the linear model. but when advertising is split between
the two media, then the model tends to underestimate sales.

consider the standard id75 model with two variables,

y =   0 +   1x1 +   2x2 +  .

according to this model, if we increase x1 by one unit, then y will increase
by an average of   1 units. notice that the presence of x2 does not alter
this statement   that is, regardless of the value of x2, a one-unit increase
in x1 will lead to a   1-unit increase in y . one way of extending this model
to allow for interaction e   ects is to include a third predictor, called an
interaction term, which is constructed by computing the product of x1
and x2. this results in the model

y =   0 +   1x1 +   2x2 +   3x1x2 +  .

(3.31)

how does inclusion of this interaction term relax the additive assumption?
notice that (3.31) can be rewritten as

y =   0 + (  1 +   3x2)x1 +   2x2 +  

(3.32)

=   0 +     1x1 +   2x2 +  

88

3. id75

intercept
tv
radio

tv  radio

coe   cient
6.7502
0.0191
0.0289
0.0011

std. error
0.248
0.002
0.009
0.000

t-statistic

p-value
27.23 < 0.0001
12.70 < 0.0001
3.24
0.0014
20.73 < 0.0001

table 3.9. for the advertising data, least squares coe   cient estimates asso-
ciated with the regression of sales onto tv and radio, with an interaction term,
as in (3.33).

where     1 =   1 +   3x2. since     1 changes with x2, the e   ect of x1 on y is
no longer constant: adjusting x2 will change the impact of x1 on y .

for example, suppose that we are interested in studying the productiv-
ity of a factory. we wish to predict the number of units produced on the
basis of the number of production lines and the total number of workers.
it seems likely that the e   ect of increasing the number of production lines
will depend on the number of workers, since if no workers are available
to operate the lines, then increasing the number of lines will not increase
production. this suggests that it would be appropriate to include an inter-
action term between lines and workers in a linear model to predict units.
suppose that when we    t the model, we obtain
units     1.2 + 3.4    lines + 0.22    workers + 1.4    (lines    workers)

= 1.2 + (3.4 + 1.4    workers)    lines + 0.22    workers.

in other words, adding an additional line will increase the number of units
produced by 3.4 + 1.4    workers. hence the more workers we have, the
stronger will be the e   ect of lines.

we now return to the advertising example. a linear model that uses
radio, tv, and an interaction between the two to predict sales takes the
form

sales =   0 +   1    tv +   2    radio +   3    (radio    tv) +  

=   0 + (  1 +   3    radio)    tv +   2    radio +  .

(3.33)

we can interpret   3 as the increase in the e   ectiveness of tv advertising
for a one unit increase in radio advertising (or vice-versa). the coe   cients
that result from    tting the model (3.33) are given in table 3.9.

the results in table 3.9 strongly suggest that the model that includes the
interaction term is superior to the model that contains only main e   ects.
the p-value for the interaction term, tv  radio, is extremely low, indicating
that there is strong evidence for ha :   3 (cid:4)= 0. in other words, it is clear that
the true relationship is not additive. the r2 for the model (3.33) is 96.8 %,
compared to only 89.7 % for the model that predicts sales using tv and
radio without an interaction term. this means that (96.8     89.7)/(100    
89.7) = 69 % of the variability in sales that remains after    tting the ad-
ditive model has been explained by the interaction term. the coe   cient

main e   ect

3.3 other considerations in the regression model

89

estimates in table 3.9 suggest that an increase in tv advertising of $1,000 is

associated with increased sales of (     1 +     3  radio)  1,000 = 19+1.1  radio
an increase in sales of (     2 +     3    tv)    1,000 = 29 + 1.1    tv units.

units. and an increase in radio advertising of $1,000 will be associated with

in this example, the p-values associated with tv, radio, and the interac-
tion term all are statistically signi   cant (table 3.9), and so it is obvious
that all three variables should be included in the model. however, it is
sometimes the case that an interaction term has a very small p-value, but
the associated main e   ects (in this case, tv and radio) do not. the hier-
archical principle states that if we include an interaction in a model, we
should also include the main e   ects, even if the p-values associated with
their coe   cients are not signi   cant. in other words, if the interaction be-
tween x1 and x2 seems important, then we should include both x1 and
x2 in the model even if their coe   cient estimates have large p-values. the
rationale for this principle is that if x1    x2 is related to the response,
then whether or not the coe   cients of x1 or x2 are exactly zero is of lit-
tle interest. also x1    x2 is typically correlated with x1 and x2, and so

leaving them out tends to alter the meaning of the interaction.

hierarchical
principle

in the previous example, we considered an interaction between tv and
radio, both of which are quantitative variables. however, the concept of
interactions applies just as well to qualitative variables, or to a combination
of quantitative and qualitative variables. in fact, an interaction between
a qualitative variable and a quantitative variable has a particularly nice
interpretation. consider the credit data set from section 3.3.1, and suppose
that we wish to predict balance using the income (quantitative) and student
(qualitative) variables. in the absence of an interaction term, the model
takes the form

(cid:30)

balancei       0 +   1    incomei +

  2
0

if ith person is a student
if ith person is not a student

(cid:30)

=   1    incomei +

  0 +   2
  0

if ith person is a student
if ith person is not a student.

(3.34)

notice that this amounts to    tting two parallel lines to the data, one for
students and one for non-students. the lines for students and non-students
have di   erent intercepts,   0 +   2 versus   0, but the same slope,   1. this
is illustrated in the left-hand panel of figure 3.7. the fact that the lines
are parallel means that the average e   ect on balance of a one-unit increase
in income does not depend on whether or not the individual is a student.
this represents a potentially serious limitation of the model, since in fact a
change in income may have a very di   erent e   ect on the credit card balance
of a student versus a non-student.

this limitation can be addressed by adding an interaction variable, cre-
ated by multiplying income with the dummy variable for student. our

90

3. id75

e
c
n
a
a
b

l

0
0
4
1

0
0
0
1

0
0
6

0
0
2

student
non   student

e
c
n
a
a
b

l

0
0
4
1

0
0
0
1

0
0
6

0
0
2

0

50

100

150

0

50

100

150

income

income

figure 3.7. for the credit data, the least squares lines are shown for pre-
diction of balance from income for students and non-students. left: the model
(3.34) was    t. there is no interaction between income and student. right: the
model (3.35) was    t. there is an interaction term between income and student.

model now becomes

balancei       0 +   1    incomei +

(cid:30)

  2 +   3    incomei

0

if student
if not student

(cid:30)

=

(  0 +   2) + (  1 +   3)    incomei
  0 +   1    incomei

if student
if not student

(3.35)

once again, we have two di   erent regression lines for the students and
the non-students. but now those regression lines have di   erent intercepts,
  0+  2 versus   0, as well as di   erent slopes,   1+  3 versus   1. this allows for
the possibility that changes in income may a   ect the credit card balances
of students and non-students di   erently. the right-hand panel of figure 3.7
shows the estimated relationships between income and balance for students
and non-students in the model (3.35). we note that the slope for students
is lower than the slope for non-students. this suggests that increases in
income are associated with smaller increases in credit card balance among
students as compared to non-students.

non-linear relationships

as discussed previously, the id75 model (3.19) assumes a linear
relationship between the response and predictors. but in some cases, the
true relationship between the response and the predictors may be non-
linear. here we present a very simple way to directly extend the linear model
to accommodate non-linear relationships, using polynomial regression. in
later chapters, we will present more complex approaches for performing
non-linear    ts in more general settings.

consider figure 3.8, in which the mpg (gas mileage in miles per gallon)
versus horsepower is shown for a number of cars in the auto data set. the

polynomial
regression

3.3 other considerations in the regression model

91

linear
degree 2
degree 5

0
5

0
4

0
3

0
2

0
1

n
o

l
l

a
g

 
r
e
p
 
s
e

l
i

m

50

100

150

200

horsepower

figure 3.8. the auto data set. for a number of cars, mpg and horsepower are
shown. the id75    t is shown in orange. the id75    t for a
2 is shown as a blue curve. the id75
model that includes horsepower
   t for a model that includes all polynomials of horsepower up to    fth-degree is
shown in green.

orange line represents the id75    t. there is a pronounced rela-
tionship between mpg and horsepower, but it seems clear that this relation-
ship is in fact non-linear: the data suggest a curved relationship. a simple
approach for incorporating non-linear associations in a linear model is to
include transformed versions of the predictors in the model. for example,
the points in figure 3.8 seem to have a quadratic shape, suggesting that a
model of the form

mpg =   0 +   1    horsepower +   2    horsepower

2 +  

(3.36)

quadratic

may provide a better    t. equation 3.36 involves predicting mpg using a
non-linear function of horsepower. but it is still a linear model! that is,
(3.36) is simply a multiple id75 model with x1 = horsepower
2. so we can use standard id75 software to
and x2 = horsepower
estimate   0,   1, and   2 in order to produce a non-linear    t. the blue curve
in figure 3.8 shows the resulting quadratic    t to the data. the quadratic
   t appears to be substantially better than the    t obtained when just the
linear term is included. the r2 of the quadratic    t is 0.688, compared to
0.606 for the linear    t, and the p-value in table 3.10 for the quadratic term
is highly signi   cant.

if including horsepower

not include horsepower

2 led to such a big improvement in the model, why
5? the green curve

4, or even horsepower

3, horsepower

92

3. id75

intercept
horsepower
2
horsepower

coe   cient
56.9001
   0.4662
0.0012

std. error
1.8004
0.0311
0.0001

t-statistic

p-value
31.6 < 0.0001
   15.0 < 0.0001
10.1 < 0.0001

table 3.10. for the auto data set, least squares coe   cient estimates associated
with the regression of mpg onto horsepower and horsepower

2.

in figure 3.8 displays the    t that results from including all polynomials up
to    fth degree in the model (3.36). the resulting    t seems unnecessarily
wiggly   that is, it is unclear that including the additional terms really has
led to a better    t to the data.

the approach that we have just described for extending the linear model
to accommodate non-linear relationships is known as polynomial regres-
sion, since we have included polynomial functions of the predictors in the
regression model. we further explore this approach and other non-linear
extensions of the linear model in chapter 7.

3.3.3 potential problems

when we    t a id75 model to a particular data set, many prob-
lems may occur. most common among these are the following:

1. non-linearity of the response-predictor relationships.

2. correlation of error terms.

3. non-constant variance of error terms.

4. outliers.

5. high-leverage points.

6. collinearity.

in practice, identifying and overcoming these problems is as much an
art as a science. many pages in countless books have been written on this
topic. since the id75 model is not our primary focus here, we
will provide only a brief summary of some key points.

1. non-linearity of the data

the id75 model assumes that there is a straight-line relation-
ship between the predictors and the response. if the true relationship is
far from linear, then virtually all of the conclusions that we draw from the
   t are suspect. in addition, the prediction accuracy of the model can be
signi   cantly reduced.

residual plots are a useful graphical tool for identifying non-linearity.
given a simple id75 model, we can plot the residuals, ei =
yi       yi, versus the predictor xi. in the case of a multiple regression model,

residual plot

3.3 other considerations in the regression model

93

residual plot for linear fit

residual plot for quadratic fit

l

s
a
u
d
s
e
r

i

323
330

334

0
2

5
1

0
1

5

0

5
   

0
1
   

5
1
   

l

s
a
u
d
s
e
r

i

5
1

0
1

5

0

5
   

0
1
   

5
1
   

334

323

155

   tted

5

10

15

20

25

30

15

20

25

30

35

fitted values

fitted values

figure 3.9. plots of residuals versus predicted (or    tted) values for the auto
data set. in each plot, the red line is a smooth    t to the residuals, intended to make
it easier to identify a trend. left: a id75 of mpg on horsepower. a
strong pattern in the residuals indicates non-linearity in the data. right: a linear
2. there is little pattern in the
regression of mpg on horsepower and horsepower
residuals.

since there are multiple predictors, we instead plot the residuals versus
the predicted (or    tted) values   yi. ideally, the residual plot will show no
discernible pattern. the presence of a pattern may indicate a problem with
some aspect of the linear model.

the left panel of figure 3.9 displays a residual plot from the linear
regression of mpg onto horsepower on the auto data set that was illustrated
in figure 3.8. the red line is a smooth    t to the residuals, which is displayed
in order to make it easier to identify any trends. the residuals exhibit a
clear u-shape, which provides a strong indication of non-linearity in the
data. in contrast, the right-hand panel of figure 3.9 displays the residual
plot that results from the model (3.36), which contains a quadratic term.
there appears to be little pattern in the residuals, suggesting that the
quadratic term improves the    t to the data.

if the residual plot indicates that there are non-linear associations in the
data, then a simple approach is to use non-linear transformations of the
x, and x 2, in the regression model. in the
predictors, such as log x,
later chapters of this book, we will discuss other more advanced non-linear
approaches for addressing this issue.

   

2. correlation of error terms

an important assumption of the id75 model is that the error
terms,  1,  2, . . . ,  n, are uncorrelated. what does this mean? for instance,
if the errors are uncorrelated, then the fact that  i is positive provides
little or no information about the sign of  i+1. the standard errors that
are computed for the estimated regression coe   cients or the    tted values

94

3. id75

are based on the assumption of uncorrelated error terms. if in fact there
is correlation among the error terms, then the estimated standard errors
will tend to underestimate the true standard errors. as a result, con   -
dence and prediction intervals will be narrower than they should be. for
example, a 95 % con   dence interval may in reality have a much lower prob-
ability than 0.95 of containing the true value of the parameter. in addition,
p-values associated with the model will be lower than they should be; this
could cause us to erroneously conclude that a parameter is statistically
signi   cant. in short, if the error terms are correlated, we may have an
unwarranted sense of con   dence in our model.

as an extreme example, suppose we accidentally doubled our data, lead-
ing to observations and error terms identical in pairs. if we ignored this, our
standard error calculations would be as if we had a sample of size 2n, when
in fact we have only n samples. our estimated parameters would be the
same for the 2n samples as for the n samples, but the con   dence intervals
would be narrower by a factor of

   
2!

why might correlations among the error terms occur? such correlations
frequently occur in the context of time series data, which consists of ob-
servations for which measurements are obtained at discrete points in time.
in many cases, observations that are obtained at adjacent time points will
have positively correlated errors. in order to determine if this is the case for
a given data set, we can plot the residuals from our model as a function of
time. if the errors are uncorrelated, then there should be no discernible pat-
tern. on the other hand, if the error terms are positively correlated, then
we may see tracking in the residuals   that is, adjacent residuals may have
similar values. figure 3.10 provides an illustration. in the top panel, we see
the residuals from a id75    t to data generated with uncorre-
lated errors. there is no evidence of a time-related trend in the residuals.
in contrast, the residuals in the bottom panel are from a data set in which
adjacent errors had a correlation of 0.9. now there is a clear pattern in the
residuals   adjacent residuals tend to take on similar values. finally, the
center panel illustrates a more moderate case in which the residuals had a
correlation of 0.5. there is still evidence of tracking, but the pattern is less
clear.

many methods have been developed to properly take account of corre-
lations in the error terms in time series data. correlation among the error
terms can also occur outside of time series data. for instance, consider a
study in which individuals    heights are predicted from their weights. the
assumption of uncorrelated errors could be violated if some of the individ-
uals in the study are members of the same family, or eat the same diet,
or have been exposed to the same environmental factors. in general, the
assumption of uncorrelated errors is extremely important for linear regres-
sion as well as for other statistical methods, and good experimental design
is crucial in order to mitigate the risk of such correlations.

time series

tracking

l

i

a
u
d
s
e
r

l

i

a
u
d
s
e
r

l

i

a
u
d
s
e
r

3

2

1

0

1
   

3
   

2

1

0

2
   

4
   

5
1

.

.

5
0

.

5
0
   

.

5
1
   

0

0

0

3.3 other considerations in the regression model

95

  =0.0

20

40

60

80

100

  =0.5

20

40

60

80

100

  =0.9

20

40

60

80

100

observation

figure 3.10. plots of residuals from simulated time series data sets generated
with di   ering levels of correlation    between error terms for adjacent time points.

3. non-constant variance of error terms

another important assumption of the id75 model is that the
error terms have a constant variance, var( i) =   2. the standard errors,
con   dence intervals, and hypothesis tests associated with the linear model
rely upon this assumption.

unfortunately, it is often the case that the variances of the error terms are
non-constant. for instance, the variances of the error terms may increase
with the value of the response. one can identify non-constant variances in
the errors, or heteroscedasticity, from the presence of a funnel shape in
the residual plot. an example is shown in the left-hand panel of figure 3.11,
in which the magnitude of the residuals tends to increase with the    tted
   
values. when faced with this problem, one possible solution is to trans-
y . such
form the response y using a concave function such as log y or
a transformation results in a greater amount of shrinkage of the larger re-
sponses, leading to a reduction in heteroscedasticity. the right-hand panel
of figure 3.11 displays the residual plot after transforming the response

heterosceda-
sticity

96

3. id75

response y

response log(y)

l

s
a
u
d
s
e
r

i

998
975

845

5
1

0
1

5

0

5
   

0
1
   

l

s
a
u
d
s
e
r

i

4
.
0

2
.
0

0
.
0

2
.
0
   

4
.
0
   

6

.

0
   

8

.

0
   

605

671

437

10

15

20

25

30

2.4

2.6

2.8

3.0

3.2

3.4

fitted values

fitted values

figure 3.11. residual plots. in each plot, the red line is a smooth    t to the
residuals, intended to make it easier to identify a trend. the blue lines track the
outer quantiles of the residuals, and emphasize patterns. left: the funnel shape
indicates heteroscedasticity. right: the response has been log transformed, and
there is now no evidence of heteroscedasticity.

using log y . the residuals now appear to have constant variance, though
there is some evidence of a slight non-linear relationship in the data.

sometimes we have a good idea of the variance of each response. for
example, the ith response could be an average of ni raw observations. if
each of these raw observations is uncorrelated with variance   2, then their
average has variance   2
i =   2/ni. in this case a simple remedy is to    t our
model by weighted least squares, with weights proportional to the inverse
variances   i.e. wi = ni in this case. most id75 software allows
for observation weights.

4. outliers

an outlier is a point for which yi is far from the value predicted by the
model. outliers can arise for a variety of reasons, such as incorrect recording
of an observation during data collection.

the red point (observation 20) in the left-hand panel of figure 3.12
illustrates a typical outlier. the red solid line is the least squares regression
   t, while the blue dashed line is the least squares    t after removal of the
outlier. in this case, removing the outlier has little e   ect on the least squares
line: it leads to almost no change in the slope, and a miniscule reduction
in the intercept. it is typical for an outlier that does not have an unusual
predictor value to have little e   ect on the least squares    t. however, even
if an outlier does not have much e   ect on the least squares    t, it can cause
other problems. for instance, in this example, the rse is 1.09 when the
outlier is included in the regression, but it is only 0.77 when the outlier
is removed. since the rse is used to compute all con   dence intervals and

weighted
least squares

outlier

3.3 other considerations in the regression model

97

20

20

6

4

y

2

0

2
   

4
   

l

s
a
u
d
s
e
r

i

4

3

2

1

0

1
   

20

6

4

2

0

l

i

s
a
u
d
s
e
r
d
e
z
i
t

 

n
e
d
u
s

t

   2

   1

0

1

2

   2

0

2

4

6

   2

0

2

4

6

x

fitted values

fitted values

figure 3.12. left: the least squares regression line is shown in red, and the
regression line after removing the outlier is shown in blue. center: the residual
plot clearly identi   es the outlier. right: the outlier has a studentized residual of
6; typically we expect values between    3 and 3.

p-values, such a dramatic increase caused by a single data point can have
implications for the interpretation of the    t. similarly, inclusion of the
outlier causes the r2 to decline from 0.892 to 0.805.

residual plots can be used to identify outliers. in this example, the out-
lier is clearly visible in the residual plot illustrated in the center panel of
figure 3.12. but in practice, it can be di   cult to decide how large a resid-
ual needs to be before we consider the point to be an outlier. to address
this problem, instead of plotting the residuals, we can plot the studentized
residuals, computed by dividing each residual ei by its estimated standard
error. observations whose studentized residuals are greater than 3 in abso-
lute value are possible outliers. in the right-hand panel of figure 3.12, the
outlier   s studentized residual exceeds 6, while all other observations have
studentized residuals between    2 and 2.

if we believe that an outlier has occurred due to an error in data collec-
tion or recording, then one solution is to simply remove the observation.
however, care should be taken, since an outlier may instead indicate a
de   ciency with the model, such as a missing predictor.

5. high leverage points

we just saw that outliers are observations for which the response yi is
unusual given the predictor xi. in contrast, observations with high leverage
have an unusual value for xi. for example, observation 41 in the left-hand
panel of figure 3.13 has high leverage, in that the predictor value for this
observation is large relative to the other observations. (note that the data
displayed in figure 3.13 are the same as the data displayed in figure 3.12,
but with the addition of a single high leverage observation.) the red solid
line is the least squares    t to the data, while the blue dashed line is the
   t produced when observation 41 is removed. comparing the left-hand
panels of figures 3.12 and 3.13, we observe that removing the high leverage
observation has a much more substantial impact on the least squares line

studentized
residual

high leverage

98

3. id75

0
1

y

5

0

41

20

2
x

2

1

0

1
   

2
   

20

41

5

4

3

2

1

0

1
   

l

i

s
a
u
d
s
e
r
d
e
z
i
t

 

n
e
d
u
s

t

   2

   1

0

1

x

2

3

4

   2

   1

0

x1

1

2

0.00 0.05 0.10 0.15 0.20 0.25

leverage

figure 3.13. left: observation 41 is a high leverage point, while 20 is not.
the red line is the    t to all the data, and the blue line is the    t with observation
41 removed. center: the red observation is not unusual in terms of its x1 value
or its x2 value, but still falls outside the bulk of the data, and hence has high
leverage. right: observation 41 has a high leverage and a high residual.

than removing the outlier. in fact, high leverage observations tend to have
a sizable impact on the estimated regression line. it is cause for concern if
the least squares line is heavily a   ected by just a couple of observations,
because any problems with these points may invalidate the entire    t. for
this reason, it is important to identify high leverage observations.

in a simple id75, high leverage observations are fairly easy to
identify, since we can simply look for observations for which the predictor
value is outside of the normal range of the observations. but in a multiple
id75 with many predictors, it is possible to have an observation
that is well within the range of each individual predictor   s values, but that
is unusual in terms of the full set of predictors. an example is shown in
the center panel of figure 3.13, for a data set with two predictors, x1 and
x2. most of the observations    predictor values fall within the blue dashed
ellipse, but the red observation is well outside of this range. but neither its
value for x1 nor its value for x2 is unusual. so if we examine just x1 or
just x2, we will fail to notice this high leverage point. this problem is more
pronounced in multiple regression settings with more than two predictors,
because then there is no simple way to plot all dimensions of the data
simultaneously.

in order to quantify an observation   s leverage, we compute the leverage
statistic. a large value of this statistic indicates an observation with high
leverage. for a simple id75,

hi =

(cid:10)

+

1
n

(xi       x)2
i(cid:2)=1(xi(cid:2)       x)2 .

n

(3.37)

it is clear from this equation that hi increases with the distance of xi from   x.
there is a simple extension of hi to the case of multiple predictors, though
we do not provide the formula here. the leverage statistic hi is always
between 1/n and 1, and the average leverage for all the observations is
always equal to (p + 1)/n. so if a given observation has a leverage statistic

leverage
statistic

3.3 other considerations in the regression model

99

e
g
a

0
8

0
7

0
6

0
5

0
4

0
3

g
n

i
t

a
r

0
0
8

0
0
6

0
0
4

0
0
2

2000 4000 6000 8000

12000

2000 4000 6000 8000

12000

limit

limit

figure 3.14. scatterplots of the observations from the credit data set. left:
a plot of age versus limit. these two variables are not collinear. right: a plot
of rating versus limit. there is high collinearity.

that greatly exceeds (p+ 1)/n, then we may suspect that the corresponding
point has high leverage.

the right-hand panel of figure 3.13 provides a plot of the studentized
residuals versus hi for the data in the left-hand panel of figure 3.13. ob-
servation 41 stands out as having a very high leverage statistic as well as a
high studentized residual. in other words, it is an outlier as well as a high
leverage observation. this is a particularly dangerous combination! this
plot also reveals the reason that observation 20 had relatively little e   ect
on the least squares    t in figure 3.12: it has low leverage.

6. collinearity

collinearity refers to the situation in which two or more predictor variables
are closely related to one another. the concept of collinearity is illustrated
in figure 3.14 using the credit data set. in the left-hand panel of fig-
ure 3.14, the two predictors limit and age appear to have no obvious rela-
tionship. in contrast, in the right-hand panel of figure 3.14, the predictors
limit and rating are very highly correlated with each other, and we say
that they are collinear. the presence of collinearity can pose problems in
the regression context, since it can be di   cult to separate out the indi-
vidual e   ects of collinear variables on the response. in other words, since
limit and rating tend to increase or decrease together, it can be di   cult to
determine how each one separately is associated with the response, balance.

collinearity

figure 3.15 illustrates some of the di   culties that can result from collinear-

ity. the left-hand panel of figure 3.15 is a contour plot of the rss (3.22)
associated with di   erent possible coe   cient estimates for the regression
of balance on limit and age. each ellipse represents a set of coe   cients
that correspond to the same rss, with ellipses nearest to the center tak-
ing on the lowest values of rss. the black dots and associated dashed

100

3. id75

e
g
a
  

0

1
   

2
   

3
   

4
   

5
   

 21.8 

 21.5 

 21.25 

 2
1.8 

 2
1.5 

g
n
i
t
a
r
  

5

4

3

2

1

0

0.16

0.17

0.18

0.19

  limit

   0.1

0.0
  limit

0.1

0.2

figure 3.15. contour plots for the rss values as a function of the parameters
   for various regressions involving the credit data set. in each plot, the black
dots represent the coe   cient values corresponding to the minimum rss. left:
a contour plot of rss for the regression of balance onto age and limit. the
minimum value is well de   ned. right: a contour plot of rss for the regression
of balance onto rating and limit. because of the collinearity, there are many
pairs (  limit,   rating) with a similar value for rss.

lines represent the coe   cient estimates that result in the smallest possible
rss   in other words, these are the least squares estimates. the axes for
limit and age have been scaled so that the plot includes possible coe   -
cient estimates that are up to four standard errors on either side of the
least squares estimates. thus the plot includes all plausible values for the
coe   cients. for example, we see that the true limit coe   cient is almost
certainly somewhere between 0.15 and 0.20.

in contrast, the right-hand panel of figure 3.15 displays contour plots
of the rss associated with possible coe   cient estimates for the regression
of balance onto limit and rating, which we know to be highly collinear.
now the contours run along a narrow valley; there is a broad range of
values for the coe   cient estimates that result in equal values for rss.
hence a small change in the data could cause the pair of coe   cient values
that yield the smallest rss   that is, the least squares estimates   to move
anywhere along this valley. this results in a great deal of uncertainty in the
coe   cient estimates. notice that the scale for the limit coe   cient now runs
from roughly    0.2 to 0.2; this is an eight-fold increase over the plausible
range of the limit coe   cient in the regression with age. interestingly, even
though the limit and rating coe   cients now have much more individual
uncertainty, they will almost certainly lie somewhere in this contour valley.
for example, we would not expect the true value of the limit and rating
coe   cients to be    0.1 and 1 respectively, even though such a value is
plausible for each coe   cient individually.

3.3 other considerations in the regression model

101

model 1

model 2

intercept
age
limit
intercept
rating
limit

coe   cient
   173.411
   2.292
0.173
   377.537
2.202
0.025

std. error
43.828
0.672
0.005
45.254
0.952
0.064

t-statistic
p-value
   3.957 < 0.0001
   3.407
0.0007
34.496 < 0.0001
   8.343 < 0.0001
0.0213
2.312
0.384
0.7012

table 3.11. the results for two multiple regression models involving the
credit data set are shown. model 1 is a regression of balance on age and limit,
and model 2 a regression of balance on rating and limit. the standard error
of     limit increases 12-fold in the second regression, due to collinearity.

since collinearity reduces the accuracy of the estimates of the regression
coe   cients, it causes the standard error for     j to grow. recall that the
t-statistic for each predictor is calculated by dividing     j by its standard
error. consequently, collinearity results in a decline in the t-statistic. as a
result, in the presence of collinearity, we may fail to reject h0 :   j = 0. this
means that the power of the hypothesis test   the id203 of correctly power
detecting a non-zero coe   cient   is reduced by collinearity.

table 3.11 compares the coe   cient estimates obtained from two separate
multiple regression models. the    rst is a regression of balance on age and
limit, and the second is a regression of balance on rating and limit. in the
   rst regression, both age and limit are highly signi   cant with very small p-
values. in the second, the collinearity between limit and rating has caused
the standard error for the limit coe   cient estimate to increase by a factor
of 12 and the p-value to increase to 0.701. in other words, the importance
of the limit variable has been masked due to the presence of collinearity.
to avoid such a situation, it is desirable to identify and address potential
collinearity problems while    tting the model.

a simple way to detect collinearity is to look at the correlation matrix
of the predictors. an element of this matrix that is large in absolute value
indicates a pair of highly correlated variables, and therefore a collinearity
problem in the data. unfortunately, not all collinearity problems can be
detected by inspection of the correlation matrix: it is possible for collinear-
ity to exist between three or more variables even if no pair of variables
has a particularly high correlation. we call this situation multicollinearity.
instead of inspecting the correlation matrix, a better way to assess multi-
collinearity is to compute the variance in   ation factor (vif). the vif is
the ratio of the variance of     j when    tting the full model divided by the
variance of     j if    t on its own. the smallest possible value for vif is 1,
which indicates the complete absence of collinearity. typically in practice
there is a small amount of collinearity among the predictors. as a rule of
thumb, a vif value that exceeds 5 or 10 indicates a problematic amount of

multi-
collinearity

variance
in   ation
factor

102

3. id75

collinearity. the vif for each variable can be computed using the formula

vif(     j ) =

1
1     r2
xj|x   j

,

xj|x   j

where r2
predictors. if r2
the vif will be large.

is the r2 from a regression of xj onto all of the other
xj|x   j is close to one, then collinearity is present, and so

in the credit data, a regression of balance on age, rating, and limit
indicates that the predictors have vif values of 1.01, 160.67, and 160.59.
as we suspected, there is considerable collinearity in the data!

when faced with the problem of collinearity, there are two simple solu-
tions. the    rst is to drop one of the problematic variables from the regres-
sion. this can usually be done without much compromise to the regression
   t, since the presence of collinearity implies that the information that this
variable provides about the response is redundant in the presence of the
other variables. for instance, if we regress balance onto age and limit,
without the rating predictor, then the resulting vif values are close to
the minimum possible value of 1, and the r2 drops from 0.754 to 0.75.
so dropping rating from the set of predictors has e   ectively solved the
collinearity problem without compromising the    t. the second solution is
to combine the collinear variables together into a single predictor. for in-
stance, we might take the average of standardized versions of limit and
rating in order to create a new variable that measures credit worthiness.

3.4 the marketing plan

we now brie   y return to the seven questions about the advertising data
that we set out to answer at the beginning of this chapter.

1. is there a relationship between advertising sales and budget?

this question can be answered by    tting a multiple regression model
of sales onto tv, radio, and newspaper, as in (3.20), and testing the
hypothesis h0 :   tv =   radio =   newspaper = 0. in section 3.2.2,
we showed that the f-statistic can be used to determine whether or
not we should reject this null hypothesis. in this case the p-value
corresponding to the f-statistic in table 3.6 is very low, indicating
clear evidence of a relationship between advertising and sales.

2. how strong is the relationship?

we discussed two measures of model accuracy in section 3.1.3. first,
the rse estimates the standard deviation of the response from the
population regression line. for the advertising data, the rse is 1,681

3.4 the marketing plan

103

units while the mean value for the response is 14,022, indicating a
percentage error of roughly 12 %. second, the r2 statistic records
the percentage of variability in the response that is explained by
the predictors. the predictors explain almost 90 % of the variance in
sales. the rse and r2 statistics are displayed in table 3.6.

3. which media contribute to sales?

to answer this question, we can examine the p-values associated with
each predictor   s t-statistic (section 3.1.2). in the multiple linear re-
gression displayed in table 3.4, the p-values for tv and radio are low,
but the p-value for newspaper is not. this suggests that only tv and
radio are related to sales. in chapter 6 we explore this question in
greater detail.

4. how large is the e   ect of each medium on sales?

we saw in section 3.1.2 that the standard error of     j can be used
to construct con   dence intervals for   j. for the advertising data,
the 95 % con   dence intervals are as follows: (0.043, 0.049) for tv,
(0.172, 0.206) for radio, and (   0.013, 0.011) for newspaper. the con   -
dence intervals for tv and radio are narrow and far from zero, provid-
ing evidence that these media are related to sales. but the interval
for newspaper includes zero, indicating that the variable is not statis-
tically signi   cant given the values of tv and radio.

we saw in section 3.3.3 that collinearity can result in very wide stan-
dard errors. could collinearity be the reason that the con   dence in-
terval associated with newspaper is so wide? the vif scores are 1.005,
1.145, and 1.145 for tv, radio, and newspaper, suggesting no evidence
of collinearity.

in order to assess the association of each medium individually on
sales, we can perform three separate simple id75s. re-
sults are shown in tables 3.1 and 3.3. there is evidence of an ex-
tremely strong association between tv and sales and between radio
and sales. there is evidence of a mild association between newspaper
and sales, when the values of tv and radio are ignored.

5. how accurately can we predict future sales?

the response can be predicted using (3.21). the accuracy associ-
ated with this estimate depends on whether we wish to predict an
individual response, y = f (x) +  , or the average response, f (x)
(section 3.2.2). if the former, we use a prediction interval, and if the
latter, we use a con   dence interval. prediction intervals will always
be wider than con   dence intervals because they account for the un-
certainty associated with  , the irreducible error.

104

3. id75

6. is the relationship linear?

in section 3.3.3, we saw that residual plots can be used in order to
identify non-linearity. if the relationships are linear, then the residual
plots should display no pattern. in the case of the advertising data,
we observe a non-linear e   ect in figure 3.5, though this e   ect could
also be observed in a residual plot. in section 3.3.2, we discussed the
inclusion of transformations of the predictors in the id75
model in order to accommodate non-linear relationships.

7. is there synergy among the advertising media?

the standard id75 model assumes an additive relation-
ship between the predictors and the response. an additive model is
easy to interpret because the e   ect of each predictor on the response is
unrelated to the values of the other predictors. however, the additive
assumption may be unrealistic for certain data sets. in section 3.3.2,
we showed how to include an interaction term in the regression model
in order to accommodate non-additive relationships. a small p-value
associated with the interaction term indicates the presence of such
relationships. figure 3.5 suggested that the advertising data may
not be additive. including an interaction term in the model results in
a substantial increase in r2, from around 90 % to almost 97 %.

3.5 comparison of id75

with k-nearest neighbors

as discussed in chapter 2, id75 is an example of a parametric
approach because it assumes a linear functional form for f (x). parametric
methods have several advantages. they are often easy to    t, because one
need estimate only a small number of coe   cients. in the case of linear re-
gression, the coe   cients have simple interpretations, and tests of statistical
signi   cance can be easily performed. but parametric methods do have a
disadvantage: by construction, they make strong assumptions about the
form of f (x). if the speci   ed functional form is far from the truth, and
prediction accuracy is our goal, then the parametric method will perform
poorly. for instance, if we assume a linear relationship between x and y
but the true relationship is far from linear, then the resulting model will
provide a poor    t to the data, and any conclusions drawn from it will be
suspect.

in contrast, non-parametric methods do not explicitly assume a para-
metric form for f (x), and thereby provide an alternative and more    exi-
ble approach for performing regression. we discuss various non-parametric
methods in this book. here we consider one of the simplest and best-known
non-parametric methods, k-nearest neighbors regression (knn regression).

k-nearest
neighbors
regression

3.5 comparison of id75 with k-nearest neighbors

105

y

y

x2

x2

x1

x1

figure 3.16. plots of   f (x) using knn regression on a two-dimensional data
set with 64 observations (orange dots). left: k = 1 results in a rough step func-
tion    t. right: k = 9 produces a much smoother    t.

the knn regression method is closely related to the knn classi   er dis-
cussed in chapter 2. given a value for k and a prediction point x0, knn
regression    rst identi   es the k training observations that are closest to
x0, represented by n0. it then estimates f (x0) using the average of all the
training responses in n0. in other words,
(cid:17)

  f (x0) =

1
k

yi.

xi   n0

figure 3.16 illustrates two knn    ts on a data set with p = 2 predictors.
the    t with k = 1 is shown in the left-hand panel, while the right-hand
panel corresponds to k = 9. we see that when k = 1, the knn    t perfectly
interpolates the training observations, and consequently takes the form of
a step function. when k = 9, the knn    t still is a step function, but
averaging over nine observations results in much smaller regions of constant
prediction, and consequently a smoother    t. in general, the optimal value
for k will depend on the bias-variance tradeo   , which we introduced in
chapter 2. a small value for k provides the most    exible    t, which will
have low bias but high variance. this variance is due to the fact that the
prediction in a given region is entirely dependent on just one observation.
in contrast, larger values of k provide a smoother and less variable    t; the
prediction in a region is an average of several points, and so changing one
observation has a smaller e   ect. however, the smoothing may cause bias by
masking some of the structure in f (x). in chapter 5, we introduce several
approaches for estimating test error rates. these methods can be used to
identify the optimal value of k in knn regression.

106

3. id75

in what setting will a parametric approach such as least squares linear re-
gression outperform a non-parametric approach such as knn regression?
the answer is simple: the parametric approach will outperform the non-
parametric approach if the parametric form that has been selected is close
to the true form of f . figure 3.17 provides an example with data generated
from a one-dimensional id75 model. the black solid lines rep-
resent f (x), while the blue curves correspond to the knn    ts using k = 1
and k = 9. in this case, the k = 1 predictions are far too variable, while
the smoother k = 9    t is much closer to f (x). however, since the true
relationship is linear, it is hard for a non-parametric approach to compete
with id75: a non-parametric approach incurs a cost in variance
that is not o   set by a reduction in bias. the blue dashed line in the left-
hand panel of figure 3.18 represents the id75    t to the same
data. it is almost perfect. the right-hand panel of figure 3.18 reveals that
id75 outperforms knn for this data. the green solid line, plot-
ted as a function of 1/k, represents the test set mean squared error (mse)
for knn. the knn errors are well above the black dashed line, which is
the test mse for id75. when the value of k is large, then knn
performs only a little worse than least squares regression in terms of mse.
it performs far worse when k is small.

in practice, the true relationship between x and y is rarely exactly lin-
ear. figure 3.19 examines the relative performances of least squares regres-
sion and knn under increasing levels of non-linearity in the relationship
between x and y . in the top row, the true relationship is nearly linear.
in this case we see that the test mse for id75 is still superior
to that of knn for low values of k. however, for k     4, knn out-
performs id75. the second row illustrates a more substantial
deviation from linearity. in this situation, knn substantially outperforms
id75 for all values of k. note that as the extent of non-linearity
increases, there is little change in the test set mse for the non-parametric
knn method, but there is a large increase in the test set mse of linear
regression.

figures 3.18 and 3.19 display situations in which knn performs slightly
worse than id75 when the relationship is linear, but much better
than id75 for non-linear situations. in a real life situation in
which the true relationship is unknown, one might draw the conclusion that
knn should be favored over id75 because it will at worst be
slightly inferior than id75 if the true relationship is linear, and
may give substantially better results if the true relationship is non-linear.
but in reality, even when the true relationship is highly non-linear, knn
may still provide inferior results to id75. in particular, both
figures 3.18 and 3.19 illustrate settings with p = 1 predictor. but in higher
dimensions, knn often performs worse than id75.

figure 3.20 considers the same strongly non-linear situation as in the
second row of figure 3.19, except that we have added additional noise

3.5 comparison of id75 with k-nearest neighbors

107

4

3

y

2

1

4

3

y

2

1

   1.0

   0.5

0.0
x

0.5

1.0

   1.0

   0.5

0.5

1.0

0.0
x

figure 3.17. plots of   f (x) using knn regression on a one-dimensional data
set with 100 observations. the true relationship is given by the black solid line.
left: the blue curve corresponds to k = 1 and interpolates (i.e. passes directly
through) the training data. right: the blue curve corresponds to k = 9, and
represents a smoother    t.

4

3

y

2

1

r
o
r
r

e
 
d
e
r
a
u
q
s
 
n
a
e
m

5
1
.
0

0
1
0

.

5
0
.
0

0
0
0

.

   1.0

   0.5

0.0
x

0.5

1.0

0.2

0.5

1.0

1/k

figure 3.18. the same data set shown in figure 3.17 is investigated further.
left: the blue dashed line is the least squares    t to the data. since f (x) is in
fact linear (displayed as the black line), the least squares regression line provides
a very good estimate of f (x). right: the dashed horizontal line represents the
least squares test set mse, while the green solid line corresponds to the mse
for knn as a function of 1/k (on the log scale). id75 achieves a
lower test mse than does knn regression, since f (x) is in fact linear. for knn
regression, the best results occur with a very large value of k, corresponding to a
small value of 1/k.

108

3. id75

   1.0

   0.5

0.5

1.0

0.0
x

y

y

5
3

.

0
3

.

5
2

.

0

.

2

5
1

.

0

.

1

5

.

0

5

.

3

0

.

3

5

.

2

0
2

.

5

.

1

0

.

1

r
o
r
r

 

e
d
e
r
a
u
q
s
n
a
e
m

 

r
o
r
r

 

e
d
e
r
a
u
q
s
n
a
e
m

 

0.2

0.5

1.0

1/k

8
0
0

.

6
0

.

0

4
0

.

0

2
0
0

.

0
0

.

0

5
1

.

0

0
1
0

.

5
0
0

.

0
0

.

0

   1.0

   0.5

0.0
x

0.5

1.0

0.2

0.5

1.0

1/k

figure 3.19. top left: in a setting with a slightly non-linear relationship
between x and y (solid black line), the knn    ts with k = 1 (blue) and k = 9
(red) are displayed. top right: for the slightly non-linear data, the test set mse
for least squares regression (horizontal black) and kn n with various values of
1/k (green) are displayed. bottom left and bottom right: as in the top panel,
but with a strongly non-linear relationship between x and y .

predictors that are not associated with the response. when p = 1 or p = 2,
knn outperforms id75. but for p = 3 the results are mixed,
and for p     4 id75 is superior to knn. in fact, the increase in
dimension has only caused a small deterioration in the id75 test
set mse, but it has caused more than a ten-fold increase in the mse for
knn. this decrease in performance as the dimension increases is a common
problem for knn, and results from the fact that in higher dimensions
there is e   ectively a reduction in sample size. in this data set there are
100 training observations; when p = 1, this provides enough information to
accurately estimate f (x). however, spreading 100 observations over p = 20
dimensions results in a phenomenon in which a given observation has no
nearby neighbors   this is the so-called curse of dimensionality. that is,
the k observations that are nearest to a given test observation x0 may be
very far away from x0 in p-dimensional space when p is large, leading to a

curse of di-
mensionality

3.6 lab: id75

109

p=1

p=2

p=3

p=4

p=10

p=20

0

.

1

8

.

0

6

.

0

4

.

0

2

.

0

0

.

0

0

.

1

8

.

0

6

.

0

4

.

0

2

.

0

0
.
0

0

.

1

8

.

0

6

.

0

4

.

0

2

.

0

0
.
0

0

.

1

8

.

0

6

.

0

4

.

0

2

.

0

0
.
0

0

.

1

8

.

0

6

.

0

4

.

0

2

.

0

0
.
0

0

.

1

8

.

0

6

.

0

4

.

0

2

.

0

0
.
0

r
o
r
r

 

e
d
e
r
a
u
q
s
n
a
e
m

 

0.2

0.5 1.0

0.2

0.5 1.0

0.2

0.5 1.0

0.2

0.5 1.0

0.2

0.5 1.0

0.2

0.5 1.0

1/k

figure 3.20. test mse for id75 (black dashed lines) and knn
(green curves) as the number of variables p increases. the true function is non   
linear in the    rst variable, as in the lower panel in figure 3.19, and does not
depend on the additional variables. the performance of id75 deteri-
orates slowly in the presence of these additional noise variables, whereas knn   s
performance degrades much more quickly as p increases.

very poor prediction of f (x0) and hence a poor knn    t. as a general rule,
parametric methods will tend to outperform non-parametric approaches
when there is a small number of observations per predictor.

even in problems in which the dimension is small, we might prefer linear
regression to knn from an interpretability standpoint. if the test mse
of knn is only slightly lower than that of id75, we might be
willing to forego a little bit of prediction accuracy for the sake of a simple
model that can be described in terms of just a few coe   cients, and for
which p-values are available.

3.6 lab: id75

3.6.1 libraries

the library() function is used to load libraries, or groups of functions and
data sets that are not included in the base r distribution. basic functions
that perform least squares id75 and other simple analyses come
standard with the base distribution, but more exotic functions require ad-
ditional libraries. here we load the mass package, which is a very large
collection of data sets and functions. we also load the islr package, which
includes the data sets associated with this book.

library()

> library ( mass )
> library ( islr )

if you receive an error message when loading any of these libraries, it
likely indicates that the corresponding library has not yet been installed
on your system. some libraries, such as mass, come with r and do not need to
be separately installed on your computer. however, other packages, such as

110

3. id75

islr, must be downloaded the    rst time they are used. this can be done di-
rectly from within r. for example, on a windows system, select the install
package option under the packages tab. after you select any mirror site, a
list of available packages will appear. simply select the package you wish to
install and r will automatically download the package. alternatively, this
can be done at the r command line via install.packages("islr"). this in-
stallation only needs to be done the    rst time you use a package. however,
the library() function must be called each time you wish to use a given
package.

3.6.2 simple id75

the mass library contains the boston data set, which records medv (median
house value) for 506 neighborhoods around boston. we will seek to predict
medv using 13 predictors such as rm (average number of rooms per house),
age (average age of houses), and lstat (percent of households with low
socioeconomic status).

> fix ( boston )
> names ( boston )

[1] " crim "
[8] " dis "

" zn "
" rad "

" indus "
" tax "

" chas "

" nox "
" ptratio " " black "

" rm "

" lstat "

" age "
" medv "

to    nd out more about the data set, we can type ?boston.

we will start by using the lm() function to    t a simple id75
model, with medv as the response and lstat as the predictor. the basic
syntax is lm(y   x,data), where y is the response, x is the predictor, and
data is the data set in which these two variables are kept.
> lm . fit = lm ( medv   lstat )

error in eval ( expr , envir , enclos ) : object " medv " not found

lm()

the command causes an error because r does not know where to    nd
the variables medv and lstat. the next line tells r that the variables are
in boston. if we attach boston, the    rst line works    ne because r now
recognizes the variables.
> lm . fit = lm ( medv   lstat , data = boston )
> lm . fit = lm ( medv   lstat )

> attach ( boston )

if we type lm.fit, some basic information about the model is output.
for more detailed information, we use summary(lm.fit). this gives us p-
values and standard errors for the coe   cients, as well as the r2 statistic
and f-statistic for the model.

> lm . fit

call :

lm ( formula = medv     lstat )

3.6 lab: id75

111

c o e f f i c i e n t s :
( intercept )
34.55

lstat
-0.95

> summary ( lm . fit )

call :

lm ( formula = medv     lstat )

residuals :

min
-15.17

1 q median
-1.32

-3.99

3 q
2.03

max
24.50

c o e f f i c i e n t s :

estimate std . error t value pr ( >| t |)

( intercept )
lstat
---
signif . codes :

34.5538
-0.9500

0.5626
0.0387

61.4
-24.5

<2e -16 ***
<2e -16 ***

0 *** 0.001 ** 0.01 * 0.05 . 0.1

1

residual standard error : 6.22 on 504 degrees of freedom
multiple r - squared : 0.544 ,
f - statistic :

602 on 1 and 504 df ,

adjusted r - squared : 0.543

p - value : <2e -16

we can use the names() function in order to    nd out what other pieces
of information are stored in lm.fit. although we can extract these quan-
tities by name   e.g. lm.fit$coefficients   it is safer to use the extractor
functions like coef() to access them.

names()

coef()

> names ( lm . fit )

[1] " c o e f f i c i e n t s "
[4] " rank "
[7] " qr "

[10] " call "
> coef ( lm . fit )
( intercept )
34.55

lstat
-0.95

" effects "

" residuals "
" fitted . values " " assign "
" df . residual "
" terms "

" xlevels "
" model "

in order to obtain a con   dence interval for the coe   cient estimates, we can
use the confint() command.

confint()

> confint ( lm . fit )

2.5 % 97.5 %
( intercept ) 33.45 35.659
lstat
-1.03 -0.874

the predict() function can be used to produce con   dence intervals and
prediction intervals for the prediction of medv for a given value of lstat.

predict()

> predict ( lm . fit , data . frame ( lstat = c (5 ,10 ,15) ) ,

interval =" confidenc e ")

lwr

fit

upr
1 29.80 29.01 30.60
2 25.05 24.47 25.63
3 20.30 19.73 20.87

112

3. id75

> predict ( lm . fit , data . frame ( lstat = c (5 ,10 ,15) ) ,

interval =" predictio n ")

lwr

fit

upr
1 29.80 17.566 42.04
2 25.05 12.828 37.28
8.078 32.53
3 20.30

for instance, the 95 % con   dence interval associated with a lstat value of
10 is (24.47, 25.63), and the 95 % prediction interval is (12.828, 37.28). as
expected, the con   dence and prediction intervals are centered around the
same point (a predicted value of 25.05 for medv when lstat equals 10), but
the latter are substantially wider.

we will now plot medv and lstat along with the least squares regression

line using the plot() and abline() functions.

abline()

> plot ( lstat , medv )
> abline ( lm . fit )

there is some evidence for non-linearity in the relationship between lstat
and medv. we will explore this issue later in this lab.

the abline() function can be used to draw any line, not just the least
squares regression line. to draw a line with intercept a and slope b, we
type abline(a,b). below we experiment with some additional settings for
plotting lines and points. the lwd=3 command causes the width of the
regression line to be increased by a factor of 3; this works for the plot()
and lines() functions also. we can also use the pch option to create di   erent
plotting symbols.

> abline ( lm . fit , lwd =3)
> abline ( lm . fit , lwd =3 , col =" red ")
> plot ( lstat , medv , col =" red ")
> plot ( lstat , medv , pch =20)
> plot ( lstat , medv , pch ="+")
> plot (1:20 ,1:20 , pch =1:20)

next we examine some diagnostic plots, several of which were discussed
in section 3.3.3. four diagnostic plots are automatically produced by ap-
plying the plot() function directly to the output from lm(). in general, this
command will produce one plot at a time, and hitting enter will generate
the next plot. however, it is often convenient to view all four plots together.
we can achieve this by using the par() function, which tells r to split the
display screen into separate panels so that multiple plots can be viewed si-
multaneously. for example, par(mfrow=c(2,2)) divides the plotting region
into a 2    2 grid of panels.

par()

> par ( mfrow = c (2 ,2) )
> plot ( lm . fit )

alternatively, we can compute the residuals from a id75    t
using the residuals() function. the function rstudent() will return the
studentized residuals, and we can use this function to plot the residuals
against the    tted values.

residuals()

rstudent()

3.6 lab: id75

113

> plot ( predict ( lm . fit ) , residuals ( lm . fit ) )
> plot ( predict ( lm . fit ) , rstudent ( lm . fit ) )

on the basis of the residual plots, there is some evidence of non-linearity.
leverage statistics can be computed for any number of predictors using the
hatvalues() function.

hatvalues()

> plot ( hatvalues ( lm . fit ) )
> which . max ( hatvalues ( lm . fit ) )
375

the which.max() function identi   es the index of the largest element of a
vector. in this case, it tells us which observation has the largest leverage
statistic.

which.max()

3.6.3 multiple id75

in order to    t a multiple id75 model using least squares, we
again use the lm() function. the syntax lm(y   x1+x2+x3) is used to    t a
model with three predictors, x1, x2, and x3. the summary() function now
outputs the regression coe   cients for all the predictors.
> lm . fit = lm ( medv   lstat + age , data = boston )

> summary ( lm . fit )

call :

lm ( formula = medv     lstat + age , data = boston )

residuals :

min
-15.98

1 q median
-1.28

-3.98

3 q
1.97

max
23.16

c o e f f i c i e n t s :

estimate std . error t value pr ( >| t |)

( intercept )
lstat
age
---
signif . codes :

33.2228
-1.0321
0.0345

0.7308
0.0482
0.0122

45.46
-21.42
2.83

<2e -16 ***
<2e -16 ***
0.0049 **

0 *** 0.001 ** 0.01 * 0.05 . 0.1

1

residual standard error : 6.17 on 503 degrees of freedom
multiple r - squared : 0.551 ,
f - statistic :

309 on 2 and 503 df ,

adjusted r - squared : 0.549

p - value : <2e -16

the boston data set contains 13 variables, and so it would be cumbersome
to have to type all of these in order to perform a regression using all of the
predictors. instead, we can use the following short-hand:
> lm . fit = lm ( medv   . , data = boston )

> summary ( lm . fit )

call :

lm ( formula = medv     . , data = boston )

114

3. id75

residuals :

min
-15.594

1 q
-2.730

median
-0.518

3 q
1.777

max
26.199

c o e f f i c i e n t s :

estimate std . error t value pr ( >| t |)

( intercept )
crim
zn
indus
chas
nox
rm
age
dis
rad
tax
ptratio
black
lstat
---
signif . codes :

3.646 e +01
-1.080 e -01
4.642 e -02
2.056 e -02
2.687 e +00
-1.777 e +01
3.810 e +00
6.922 e -04
-1.476 e +00
3.060 e -01
-1.233 e -02
-9.527 e -01
9.312 e -03
-5.248 e -01

5.103 e +00
3.286 e -02
1.373 e -02
6.150 e -02
8.616 e -01
3.820 e +00
4.179 e -01
1.321 e -02
1.995 e -01
6.635 e -02
3.761 e -03
1.308 e -01
2.686 e -03
5.072 e -02 -10.347

7.144 3.28 e -12 ***

-3.287 0.001087 **

3.382 0.000778 ***
0.334 0.738288
3.118 0.001925 **

-4.651 4.25 e -06 ***
< 2e -16 ***

9.116
0.052 0.958229

-7.398 6.01 e -13 ***
4.613 5.07 e -06 ***

-3.280 0.001112 **
-7.283 1.31 e -12 ***
3.467 0.000573 ***
< 2e -16 ***

0    ***     0.001    **     0.01    *     0.05    .     0.1         1

residual standard error : 4.745 on 492 degrees of freedom
multiple r - squared : 0.7406 ,
f - statistic : 108.1 on 13 and 492 df ,

adjusted r - squared : 0.7338

p - value : < 2.2 e -16

we can access the individual components of a summary object by name
(type ?summary.lm to see what is available). hence summary(lm.fit)$r.sq
gives us the r2, and summary(lm.fit)$sigma gives us the rse. the vif()
function, part of the car package, can be used to compute variance in   ation
factors. most vif   s are low to moderate for this data. the car package is
not part of the base r installation so it must be downloaded the    rst time
you use it via the install.packages option in r.

vif()

> library ( car )
> vif ( lm . fit )

crim
1.79
dis
3.96

zn
2.30
rad
7.48

indus
3.99

chas
1.07
tax ptratio
1.80

9.01

nox
4.39
black
1.35

rm
1.93
lstat
2.94

age
3.10

what if we would like to perform a regression using all of the variables but
one? for example, in the above regression output, age has a high p-value.
so we may wish to run a regression excluding this predictor. the following
syntax results in a regression using all predictors except age.
> lm . fit1 = lm ( medv   . - age , data = boston )

> summary ( lm . fit1 )
...

alternatively, the update() function can be used.

update()

3.6 lab: id75

115

> lm . fit1 = update ( lm . fit ,    . - age )

3.6.4 interaction terms

it is easy to include interaction terms in a linear model using the lm() func-
tion. the syntax lstat:black tells r to include an interaction term between
lstat and black. the syntax lstat*age simultaneously includes lstat, age,
and the interaction term lstat  age as predictors; it is a shorthand for
lstat+age+lstat:age.
> summary ( lm ( medv   lstat * age , data = boston ) )

call :

lm ( formula = medv     lstat * age , data = boston )

residuals :

min
-15.81

1 q median
-1.33

-4.04

3 q
2.08

max
27.55

c o e f f i c i e n t s :

estimate std . error t value pr ( >| t |)

( intercept ) 36.088536
lstat
-1.392117
-0.000721
age
lstat : age
0.004156
---
signif . codes :

1.469835
0.167456
0.019879
0.001852

24.55
-8.31
-0.04
2.24

< 2e -16 ***
8.8 e -16 ***

0.971
0.025 *

0    ***     0.001    **     0.01    *     0.05    .     0.1         1

residual standard error : 6.15 on 502 degrees of freedom
multiple r - squared : 0.556 ,
f - statistic :

adjusted r - squared : 0.553

209 on 3 and 502 df ,

p - value : <2e -16

3.6.5 non-linear transformations of the predictors

the lm() function can also accommodate non-linear transformations of the
predictors. for instance, given a predictor x, we can create a predictor x 2
using i(x^2). the function i() is needed since the ^ has a special meaning
in a formula; wrapping as we do allows the standard usage in r, which is
to raise x to the power 2. we now perform a regression of medv onto lstat
and lstat
> lm . fit2 = lm ( medv   lstat + i ( lstat ^2) )

2.

i()

> summary ( lm . fit2 )

call :

lm ( formula = medv     lstat + i ( lstat ^2) )

residuals :

min
-15.28

1 q median
-0.53

-3.83

3 q
2.31

max
25.41

116

3. id75

c o e f f i c i e n t s :

estimate std . error t value pr ( >| t |)

( intercept ) 42.86201
lstat
-2.33282
i ( lstat ^2)
0.04355
---
signif . codes :

0.87208
0.12380
0.00375

49.1
-18.8
11.6

<2e -16 ***
<2e -16 ***
<2e -16 ***

0    ***     0.001    **     0.01    *     0.05    .     0.1         1

residual standard error : 5.52 on 503 degrees of freedom
multiple r - squared : 0.641 ,
f - statistic :

adjusted r - squared : 0.639

449 on 2 and 503 df ,

p - value : <2e -16

the near-zero p-value associated with the quadratic term suggests that
it leads to an improved model. we use the anova() function to further
quantify the extent to which the quadratic    t is superior to the linear    t.
> lm . fit = lm ( medv   lstat )

anova()

> anova ( lm . fit , lm . fit2 )
analysis of variance table

model 1: medv     lstat
model 2: medv     lstat + i ( lstat ^2)

res . df

rss df sum of sq

f pr ( > f )

504 19472
503 15347

1
2
---
signif . codes :

1

4125 135 <2e -16 ***

0    ***     0.001    **     0.01    *     0.05    .     0.1         1

here model 1 represents the linear submodel containing only one predictor,
lstat, while model 2 corresponds to the larger quadratic model that has two
2. the anova() function performs a hypothesis
predictors, lstat and lstat
test comparing the two models. the null hypothesis is that the two models
   t the data equally well, and the alternative hypothesis is that the full
model is superior. here the f-statistic is 135 and the associated p-value is
virtually zero. this provides very clear evidence that the model containing
2 is far superior to the model that only
the predictors lstat and lstat
contains the predictor lstat. this is not surprising, since earlier we saw
evidence for non-linearity in the relationship between medv and lstat. if we
type

> par ( mfrow = c (2 ,2) )
> plot ( lm . fit2 )

then we see that when the lstat
little discernible pattern in the residuals.

2 term is included in the model, there is

in order to create a cubic    t, we can include a predictor of the form
i(x^3). however, this approach can start to get cumbersome for higher-
order polynomials. a better approach involves using the poly() function
to create the polynomial within lm(). for example, the following command
produces a    fth-order polynomial    t:

poly()

3.6 lab: id75

117

> lm . fit5 = lm ( medv   poly ( lstat ,5) )

> summary ( lm . fit5 )

call :

lm ( formula = medv     poly ( lstat , 5) )

residuals :

min
-13.543

1 q
-3.104

median
-0.705

3 q
2.084

max
27.115

c o e f f i c i e n t s :

estimate std . error t value pr ( >| t |)

( intercept )
22.533
poly ( lstat , 5) 1 -152.460
poly ( lstat , 5) 2
64.227
-27.051
poly ( lstat , 5) 3
25.452
poly ( lstat , 5) 4
poly ( lstat , 5) 5
-19.252
---
signif . codes :

0.232
5.215
5.215
5.215
5.215
5.215

97.20
-29.24
12.32
-5.19
4.88
-3.69

< 2e -16 ***
< 2e -16 ***
< 2e -16 ***
3.1 e -07 ***
1.4 e -06 ***
0.00025 ***

0    ***     0.001    **     0.01    *     0.05    .     0.1         1

residual standard error : 5.21 on 500 degrees of freedom
multiple r - squared : 0.682 ,
f - statistic :

adjusted r - squared : 0.679

214 on 5 and 500 df ,

p - value : <2e -16

this suggests that including additional polynomial terms, up to    fth order,
leads to an improvement in the model    t! however, further investigation of
the data reveals that no polynomial terms beyond    fth order have signi   -
cant p-values in a regression    t.

of course, we are in no way restricted to using polynomial transforma-

tions of the predictors. here we try a log transformation.
> summary ( lm ( medv   log ( rm ) , data = boston ) )

...

3.6.6 qualitative predictors

we will now examine the carseats data, which is part of the islr library.
we will attempt to predict sales (child car seat sales) in 400 locations
based on a number of predictors.

> fix ( carseats )
> names ( carseats )

[1] " sales "
[5] " population "
[9] " education "

" compprice "
" price "
" urban "

" income "
" shelveloc "
" us "

" advertisi n g "
" age "

the carseats data includes qualitative predictors such as shelveloc, an in-
dicator of the quality of the shelving location   that is, the space within
a store in which the car seat is displayed   at each location. the pre-
dictor shelveloc takes on three possible values, bad, medium, and good.

118

3. id75

given a qualitative variable such as shelveloc, r generates dummy variables
automatically. below we    t a multiple regression model that includes some
interaction terms.
> lm . fit = lm ( sales   .+ income : advertisi ng + price : age , data = carseats )

> summary ( lm . fit )

call :

lm ( formula = sales     . + income : advertisin g + price : age , data =

carseats )

residuals :

min

-2.921 -0.750

1 q median
0.018

3 q
0.675

max
3.341

c o e f f i c i e n t s :

( intercept )
compprice
income
advertis i ng
populatio n
price
s h e l v e l o c g o o d
s h e l v e l o c m e d i u m
age
education
urbanyes
usyes
income : advertisi n g
price : age
---
signif . codes :

estimate std . error t value pr ( >| t |)
6.575565
0.092937
0.010894
0.070246
0.000159
-0.100806
4.848676
1.953262
-0.057947
-0.020852
0.140160
-0.157557
0.000751
0.000107

1.008747
0.004118
0.002604
0.022609
0.000368
0.007440
0.152838
0.125768
0.015951
0.019613
0.112402
0.148923
0.000278
0.000133

2.2 e -10 ***
< 2e -16 ***
3.6 e -05 ***
0.00203 **
0.66533
< 2e -16 ***
< 2e -16 ***
< 2e -16 ***
0.00032 ***
0.28836
0.21317
0.29073
0.00729 **
0.42381

6.52
22.57
4.18
3.11
0.43
-13.55
31.72
15.53
-3.63
-1.06
1.25
-1.06
2.70
0.80

0    ***     0.001    **     0.01    *     0.05    .     0.1         1

residual standard error : 1.01 on 386 degrees of freedom
multiple r - squared : 0.876 ,
f - statistic :

210 on 13 and 386 df ,

adjusted r - squared : 0.872

p - value : <2e -16

the contrasts() function returns the coding that r uses for the dummy
variables.

contrasts()

> attach ( carseats )
> contrasts ( shelveloc )

bad
good
medium

good medium
0
0
1

0
1
0

use ?contrasts to learn about other contrasts, and how to set them.

r has created a shelvelocgood dummy variable that takes on a value of
1 if the shelving location is good, and 0 otherwise. it has also created a
shelvelocmedium dummy variable that equals 1 if the shelving location is
medium, and 0 otherwise. a bad shelving location corresponds to a zero
for each of the two dummy variables. the fact that the coe   cient for

3.6 lab: id75

119

shelvelocgood in the regression output is positive indicates that a good
shelving location is associated with high sales (relative to a bad location).
and shelvelocmedium has a smaller positive coe   cient, indicating that a
medium shelving location leads to higher sales than a bad shelving location
but lower sales than a good shelving location.

3.6.7 writing functions

as we have seen, r comes with many useful functions, and still more func-
tions are available by way of r libraries. however, we will often be inter-
ested in performing an operation for which no function is available. in this
setting, we may want to write our own function. for instance, below we
provide a simple function that reads in the islr and mass libraries, called
loadlibraries(). before we have created the function, r returns an error if
we try to call it.

> l o a d l i b r a r i e s
error : object     loadlibraries     not found
> l o a d l i b r a r i e s ()
error : could not find function " l o a d l i b r a r i e s "

we now create the function. note that the + symbols are printed by r and
should not be typed in. the { symbol informs r that multiple commands
are about to be input. hitting enter after typing { will cause r to print the
+ symbol. we can then input as many commands as we wish, hitting enter
after each one. finally the } symbol informs r that no further commands
will be entered.

> l o a d l i b r a r i e s = function () {
+ library ( islr )
+ library ( mass )
+ print (" the libraries have been loaded .")
+ }

now if we type in loadlibraries, r will tell us what is in the function.

> l o a d l i b r a r i e s
function () {
library ( islr )
library ( mass )
print (" the libraries have been loaded .")
}

if we call the function, the libraries are loaded in and the print statement
is output.

> l o a d l i b r a r i e s ()
[1] " the libraries have been loaded ."

120

3. id75

3.7 exercises

conceptual

1. describe the null hypotheses to which the p-values given in table 3.4
correspond. explain what conclusions you can draw based on these
p-values. your explanation should be phrased in terms of sales, tv,
radio, and newspaper, rather than in terms of the coe   cients of the
linear model.

2. carefully explain the di   erences between the knn classi   er and knn

regression methods.

3. suppose we have a data set with    ve predictors, x1 = gpa, x2 = iq,
x3 = gender (1 for female and 0 for male), x4 = interaction between
gpa and iq, and x5 = interaction between gpa and gender. the
response is starting salary after graduation (in thousands of dollars).
suppose we use least squares to    t the model, and get     0 = 50,     1 =
20,     2 = 0.07,     3 = 35,     4 = 0.01,     5 =    10.

(a) which answer is correct, and why?

i. for a    xed value of iq and gpa, males earn more on average

than females.

ii. for a    xed value of iq and gpa, females earn more on

average than males.

iii. for a    xed value of iq and gpa, males earn more on average

than females provided that the gpa is high enough.

iv. for a    xed value of iq and gpa, females earn more on
average than males provided that the gpa is high enough.

(b) predict the salary of a female with iq of 110 and a gpa of 4.0.

(c) true or false: since the coe   cient for the gpa/iq interaction
term is very small, there is very little evidence of an interaction
e   ect. justify your answer.

4. i collect a set of data (n = 100 observations) containing a single
predictor and a quantitative response. i then    t a id75
model to the data, as well as a separate cubic regression, i.e. y =
  0 +   1x +   2x 2 +   3x 3 +  .

(a) suppose that the true relationship between x and y is linear,
i.e. y =   0 +   1x +  . consider the training residual sum of
squares (rss) for the id75, and also the training
rss for the cubic regression. would we expect one to be lower
than the other, would we expect them to be the same, or is there
not enough information to tell? justify your answer.

3.7 exercises

121

(b) answer (a) using test rather than training rss.

(c) suppose that the true relationship between x and y is not linear,
but we don   t know how far it is from linear. consider the training
rss for the id75, and also the training rss for the
cubic regression. would we expect one to be lower than the
other, would we expect them to be the same, or is there not
enough information to tell? justify your answer.

(d) answer (c) using test rather than training rss.

5. consider the    tted values that result from performing linear regres-
sion without an intercept. in this setting, the ith    tted value takes
the form

where

  yi = xi     ,
(cid:31)

 

n(cid:17)

xiyi

/

i(cid:2)=1

(cid:31)

n(cid:17)

i=1

 

x2
i(cid:2)

.

     =

(3.38)

show that we can write

n(cid:17)

i(cid:2)=1

  yi =

ai(cid:2)yi(cid:2) .

what is ai(cid:2) ?

note: we interpret this result by saying that the    tted values from
id75 are linear combinations of the response values.

6. using (3.4), argue that in the case of simple id75, the

least squares line always passes through the point (  x,   y).

7. it is claimed in the text that in the case of simple id75
of y onto x, the r2 statistic (3.17)
is equal to the square of the
correlation between x and y (3.18). prove that this is the case. for
simplicity, you may assume that   x =   y = 0.

applied

8. this question involves the use of simple id75 on the auto

data set.

(a) use the lm() function to perform a simple id75 with
mpg as the response and horsepower as the predictor. use the
summary() function to print the results. comment on the output.
for example:

122

3. id75

i. is there a relationship between the predictor and the re-

sponse?

ii. how strong is the relationship between the predictor and

the response?

iii. is the relationship between the predictor and the response

positive or negative?

iv. what is the predicted mpg associated with a horsepower of
98? what are the associated 95 % con   dence and prediction
intervals?

(b) plot the response and the predictor. use the abline() function

to display the least squares regression line.

(c) use the plot() function to produce diagnostic plots of the least
squares regression    t. comment on any problems you see with
the    t.

9. this question involves the use of multiple id75 on the

auto data set.

(a) produce a scatterplot matrix which includes all of the variables

in the data set.

(b) compute the matrix of correlations between the variables using
the function cor(). you will need to exclude the name variable,
which is qualitative.

cor()

(c) use the lm() function to perform a multiple id75
with mpg as the response and all other variables except name as
the predictors. use the summary() function to print the results.
comment on the output. for instance:

i. is there a relationship between the predictors and the re-

sponse?

ii. which predictors appear to have a statistically signi   cant

relationship to the response?

iii. what does the coe   cient for the year variable suggest?

(d) use the plot() function to produce diagnostic plots of the linear
regression    t. comment on any problems you see with the    t.
do the residual plots suggest any unusually large outliers? does
the leverage plot identify any observations with unusually high
leverage?

(e) use the * and : symbols to    t id75 models with
interaction e   ects. do any interactions appear to be statistically
signi   cant?
   
x, x 2. comment on your    ndings.

(f) try a few di   erent transformations of the variables, such as

log(x),

10. this question should be answered using the carseats data set.

3.7 exercises

123

(a) fit a multiple regression model to predict sales using price,

urban, and us.

(b) provide an interpretation of each coe   cient in the model. be

careful   some of the variables in the model are qualitative!

(c) write out the model in equation form, being careful to handle

the qualitative variables properly.

(d) for which of the predictors can you reject the null hypothesis

h0 :   j = 0?

(e) on the basis of your response to the previous question,    t a
smaller model that only uses the predictors for which there is
evidence of association with the outcome.

(f) how well do the models in (a) and (e)    t the data?
(g) using the model from (e), obtain 95 % con   dence intervals for

the coe   cient(s).

(h) is there evidence of outliers or high leverage observations in the

model from (e)?

11. in this problem we will investigate the t-statistic for the null hypoth-
esis h0 :    = 0 in simple id75 without an intercept. to
begin, we generate a predictor x and a response y as follows.

> set . seed (1)
> x = rnorm (100)
> y =2* x + rnorm (100)

(a) perform a simple id75 of y onto x, without an in-
tercept. report the coe   cient estimate     , the standard error of
this coe   cient estimate, and the t-statistic and p-value associ-
ated with the null hypothesis h0 :    = 0. comment on these
results. (you can perform regression without an intercept using
the command lm(y   x+0).)

(b) now perform a simple id75 of x onto y without an
intercept, and report the coe   cient estimate, its standard error,
and the corresponding t-statistic and p-values associated with
the null hypothesis h0 :    = 0. comment on these results.

(c) what is the relationship between the results obtained in (a) and

(b)?

(d) for the regression of y onto x without an intercept, the t-
statistic for h0 :    = 0 takes the form     /se(     ), where      is
given by (3.38), and where

!(cid:10)
(n     1)

i=1(yi     xi     )2
n
i(cid:2)=1 x2
i(cid:2)

(cid:10)

n

.

se(     ) =

124

3. id75

(these formulas are slightly di   erent from those given in sec-
tions 3.1.1 and 3.1.2, since here we are performing regression
without an intercept.) show algebraically, and con   rm numeri-
cally in r, that the t-statistic can be written as

   
n     1)
(cid:10)
(
n
n
i(cid:2)=1 y2
i=1 x2
i )(

(cid:10)
n
(cid:10)
i=1 xiyi
i(cid:2) )     (
n
i(cid:2)=1 xi(cid:2) yi(cid:2) )2

.

(cid:22)
(cid:10)
(

(e) using the results from (d), argue that the t-statistic for the re-
gression of y onto x is the same as the t-statistic for the regression
of x onto y.

(f) in r, show that when regression is performed with an intercept,
the t-statistic for h0 :   1 = 0 is the same for the regression of y
onto x as it is for the regression of x onto y.

12. this problem involves simple id75 without an intercept.

(a) recall that the coe   cient estimate      for the id75 of
y onto x without an intercept is given by (3.38). under what
circumstance is the coe   cient estimate for the regression of x
onto y the same as the coe   cient estimate for the regression of
y onto x?

(b) generate an example in r with n = 100 observations in which
the coe   cient estimate for the regression of x onto y is di   erent
from the coe   cient estimate for the regression of y onto x.

(c) generate an example in r with n = 100 observations in which
the coe   cient estimate for the regression of x onto y is the
same as the coe   cient estimate for the regression of y onto x.

13. in this exercise you will create some simulated data and will    t simple
id75 models to it. make sure to use set.seed(1) prior to
starting part (a) to ensure consistent results.

(a) using the rnorm() function, create a vector, x, containing 100
observations drawn from a n (0, 1) distribution. this represents
a feature, x.

(b) using the rnorm() function, create a vector, eps, containing 100
observations drawn from a n (0, 0.25) distribution i.e. a normal
distribution with mean zero and variance 0.25.

(c) using x and eps, generate a vector y according to the model

y =    1 + 0.5x +  .

(3.39)

what is the length of the vector y? what are the values of   0
and   1 in this linear model?

3.7 exercises

125

(d) create a scatterplot displaying the relationship between x and

y. comment on what you observe.

(e) fit a least squares linear model to predict y using x. comment
on the model obtained. how do     0 and     1 compare to   0 and
  1?

(f) display the least squares line on the scatterplot obtained in (d).
draw the population regression line on the plot, in a di   erent
color. use the legend() command to create an appropriate leg-
end.

(g) now    t a polynomial regression model that predicts y using x
and x2. is there evidence that the quadratic term improves the
model    t? explain your answer.

(h) repeat (a)   (f) after modifying the data generation process in
such a way that there is less noise in the data. the model (3.39)
should remain the same. you can do this by decreasing the vari-
ance of the normal distribution used to generate the error term
  in (b). describe your results.

(i) repeat (a)   (f) after modifying the data generation process in
such a way that there is more noise in the data. the model
(3.39) should remain the same. you can do this by increasing
the variance of the normal distribution used to generate the
error term   in (b). describe your results.

(j) what are the con   dence intervals for   0 and   1 based on the
original data set, the noisier data set, and the less noisy data
set? comment on your results.

14. this problem focuses on the collinearity problem.

(a) perform the following commands in r:

> set . seed (1)
> x1 = runif (100)
> x2 =0.5* x1 + rnorm (100) /10
> y =2+2* x1 +0.3* x2 + rnorm (100)

the last line corresponds to creating a linear model in which y is
a function of x1 and x2. write out the form of the linear model.
what are the regression coe   cients?

(b) what is the correlation between x1 and x2? create a scatterplot

displaying the relationship between the variables.

(c) using this data,    t a least squares regression to predict y using
x1 and x2. describe the results obtained. what are     0,     1, and
    2? how do these relate to the true   0,   1, and   2? can you
reject the null hypothesis h0 :   1 = 0? how about the null
hypothesis h0 :   2 = 0?

126

3. id75

(d) now    t a least squares regression to predict y using only x1.
comment on your results. can you reject the null hypothesis
h0 :   1 = 0?

(e) now    t a least squares regression to predict y using only x2.
comment on your results. can you reject the null hypothesis
h0 :   1 = 0?

(f) do the results obtained in (c)   (e) contradict each other? explain

your answer.

(g) now suppose we obtain one additional observation, which was

unfortunately mismeasured.

> x1 = c ( x1 , 0.1)
> x2 = c ( x2 , 0.8)
> y = c (y ,6)

re-   t the linear models from (c) to (e) using this new data. what
e   ect does this new observation have on the each of the models?
in each model, is this observation an outlier? a high-leverage
point? both? explain your answers.

15. this problem involves the boston data set, which we saw in the lab
for this chapter. we will now try to predict per capita crime rate
using the other variables in this data set. in other words, per capita
crime rate is the response, and the other variables are the predictors.

(a) for each predictor,    t a simple id75 model to predict
the response. describe your results. in which of the models is
there a statistically signi   cant association between the predictor
and the response? create some plots to back up your assertions.

(b) fit a multiple regression model to predict the response using
all of the predictors. describe your results. for which predictors
can we reject the null hypothesis h0 :   j = 0?

(c) how do your results from (a) compare to your results from (b)?
create a plot displaying the univariate regression coe   cients
from (a) on the x-axis, and the multiple regression coe   cients
from (b) on the y-axis. that is, each predictor is displayed as a
single point in the plot. its coe   cient in a simple linear regres-
sion model is shown on the x-axis, and its coe   cient estimate
in the multiple id75 model is shown on the y-axis.

(d) is there evidence of non-linear association between any of the
predictors and the response? to answer this question, for each
predictor x,    t a model of the form

y =   0 +   1x +   2x 2 +   3x 3 +  .

4
classi   cation

the id75 model discussed in chapter 3 assumes that the re-
sponse variable y is quantitative. but in many situations, the response
variable is instead qualitative. for example, eye color is qualitative, taking
on values blue, brown, or green. often qualitative variables are referred
to as categorical ; we will use these terms interchangeably. in this chapter,
we study approaches for predicting qualitative responses, a process that
is known as classi   cation. predicting a qualitative response for an obser-
vation can be referred to as classifying that observation, since it involves
assigning the observation to a category, or class. on the other hand, often
the methods used for classi   cation    rst predict the id203 of each of
the categories of a qualitative variable, as the basis for making the classi-
   cation. in this sense they also behave like regression methods.

there are many possible classi   cation techniques, or classi   ers, that one
might use to predict a qualitative response. we touched on some of these
in sections 2.1.5 and 2.2.3. in this chapter we discuss three of the most
widely-used classi   ers: id28, id156, and
k-nearest neighbors. we discuss more computer-intensive methods in later
chapters, such as generalized additive models (chapter 7), trees, random
forests, and boosting (chapter 8), and support vector machines (chap-
ter 9).

qualitative

classi   cation

classi   er

logistic
regression

linear
discriminant
analysis

k-nearest
neighbors

g. james et al., an introduction to statistical learning: with applications in r,
springer texts in statistics, doi 10.1007/978-1-4614-7138-7 4,
   springer science+business media new york 2013

127

128

4. classi   cation

4.1 an overview of classi   cation

classi   cation problems occur often, perhaps even more so than regression
problems. some examples include:

1. a person arrives at the emergency room with a set of symptoms
that could possibly be attributed to one of three medical conditions.
which of the three conditions does the individual have?

2. an online banking service must be able to determine whether or not
a transaction being performed on the site is fraudulent, on the basis
of the user   s ip address, past transaction history, and so forth.

3. on the basis of dna sequence data for a number of patients with
and without a given disease, a biologist would like to    gure out which
dna mutations are deleterious (disease-causing) and which are not.

just as in the regression setting, in the classi   cation setting we have a
set of training observations (x1, y1), . . . , (xn, yn) that we can use to build
a classi   er. we want our classi   er to perform well not only on the training
data, but also on test observations that were not used to train the classi   er.
in this chapter, we will illustrate the concept of classi   cation using the
simulated default data set. we are interested in predicting whether an
individual will default on his or her credit card payment, on the basis of
annual income and monthly credit card balance. the data set is displayed
in figure 4.1. we have plotted annual income and monthly credit card
balance for a subset of 10, 000 individuals. the left-hand panel of figure 4.1
displays individuals who defaulted in a given month in orange, and those
who did not in blue. (the overall default rate is about 3 %, so we have
plotted only a fraction of the individuals who did not default.) it appears
that individuals who defaulted tended to have higher credit card balances
than those who did not. in the right-hand panel of figure 4.1, two pairs
of boxplots are shown. the    rst shows the distribution of balance split by
the binary default variable; the second is a similar plot for income. in this
chapter, we learn how to build a model to predict default (y ) for any
given value of balance (x1) and income (x2). since y is not quantitative,
the simple id75 model of chapter 3 is not appropriate.

it is worth noting that figure 4.1 displays a very pronounced relation-
ship between the predictor balance and the response default. in most real
applications, the relationship between the predictor and the response will
not be nearly so strong. however, for the sake of illustrating the classi   ca-
tion procedures discussed in this chapter, we use an example in which the
relationship between the predictor and the response is somewhat exagger-
ated.

e
m
o
c
n
i

0
0
0
0
6

0
0
0
0
4

0
0
0
0
2

0

4.2 why not id75?

129

e
c
n
a
a
b

l

0
0
5
2

0
0
0
2

0
0
5
1

0
0
0
1

0
0
5

0

e
m
o
c
n
i

0
0
0
0
6

0
0
0
0
4

0
0
0
0
2

0

0

500

1000

1500
balance

2000

2500

yes
no
default

yes
no
default

figure 4.1. the default data set. left: the annual incomes and monthly
credit card balances of a number of individuals. the individuals who defaulted on
their credit card payments are shown in orange, and those who did not are shown
in blue. center: boxplots of balance as a function of default status. right:
boxplots of income as a function of default status.

4.2 why not id75?

we have stated that id75 is not appropriate in the case of a
qualitative response. why not?

suppose that we are trying to predict the medical condition of a patient
in the emergency room on the basis of her symptoms. in this simpli   ed
example, there are three possible diagnoses: stroke, drug overdose, and
epileptic seizure. we could consider encoding these values as a quantita-
tive response variable, y , as follows:

         
      

y =

1 if stroke;
2 if drug overdose;
3 if epileptic seizure.

using this coding, least squares could be used to    t a id75 model
to predict y on the basis of a set of predictors x1, . . . , xp. unfortunately,
this coding implies an ordering on the outcomes, putting drug overdose in
between stroke and epileptic seizure, and insisting that the di   erence
between stroke and drug overdose is the same as the di   erence between
drug overdose and epileptic seizure. in practice there is no particular
reason that this needs to be the case. for instance, one could choose an
equally reasonable coding,

         
      

y =

1 if epileptic seizure;
2 if stroke;
3 if drug overdose.

130

4. classi   cation

which would imply a totally di   erent relationship among the three condi-
tions. each of these codings would produce fundamentally di   erent linear
models that would ultimately lead to di   erent sets of predictions on test
observations.

if the response variable   s values did take on a natural ordering, such as
mild, moderate, and severe, and we felt the gap between mild and moderate
was similar to the gap between moderate and severe, then a 1, 2, 3 coding
would be reasonable. unfortunately, in general there is no natural way to
convert a qualitative response variable with more than two levels into a
quantitative response that is ready for id75.

for a binary (two level) qualitative response, the situation is better. for
instance, perhaps there are only two possibilities for the patient   s med-
ical condition: stroke and drug overdose. we could then potentially use
the dummy variable approach from section 3.3.1 to code the response as
follows:

(cid:30)

binary

y =

0 if stroke;
1 if drug overdose.

we could then    t a id75 to this binary response, and predict
drug overdose if   y > 0.5 and stroke otherwise. in the binary case it is not
hard to show that even if we    ip the above coding, id75 will
produce the same    nal predictions.

for a binary response with a 0/1 coding as above, regression by least
squares does make sense; it can be shown that the x      obtained using linear
regression is in fact an estimate of pr(drug overdose|x) in this special
case. however, if we use id75, some of our estimates might be
outside the [0, 1] interval (see figure 4.2), making them hard to interpret
as probabilities! nevertheless, the predictions provide an ordering and can
be interpreted as crude id203 estimates. curiously, it turns out that
the classi   cations that we get if we use id75 to predict a binary
response will be the same as for the id156 (lda)
procedure we discuss in section 4.4.

however, the dummy variable approach cannot be easily extended to
accommodate qualitative responses with more than two levels. for these
reasons, it is preferable to use a classi   cation method that is truly suited
for qualitative response values, such as the ones presented next.

4.3 id28

consider again the default data set, where the response default falls into
one of two categories, yes or no. rather than modeling this response y
directly, id28 models the id203 that y belongs to a par-
ticular category.

