   also check out same gui
   demo with id166s [1]here.
   also check out same gui
   demo with neural networks [2]here.

id79 demo in javascript

   find code on [3]github
   find me on twitter [4]@karpathy

   mouse click: add red data point
   shift + mouse click: add green data point
   'r': retrain
   browser not supported for canvas. get a real browser.

   number of trees = 100 (set this high for smoother and more regularized
   final prediction. higher = always better, but slower.)
   max depth = 4 (depth of each tree in the forest. set this higher when
   more complicated decision boundaries are needed (but runs exponentially
   slower and can be more prone to overfitting if not enough trees).
   usually if you can afford many trees and resources you want to set this
   higher.)
   hypotheses / node = 10 (number of random hypotheses considered at each
   node during training. setting this too high puts you in danger of
   overfitting your data because nodes in the forest lose variety.)
   (button) toggle type: 1d or 2d decisions. (button) toggle drawing: hard
   or soft assignment.

   a bit of explanation: id79s are a collection of independent
   trees. each tree is made up of nodes arranged in tree structure. every
   node receives data from the top, and splits it to its 2 children based
   on some very simple decision (such as if x-coordinate > 3). to get the
   decision, during training a few random splitting rules are generated at
   each node and the "best" one is kept.

   speaking of machine learning in javascript, you may also be interested
   in [5]convnetjs.com. unlike id79s, neural nets are trained via
   a global objective, not greedy heuristics and actually transform input
   representation instead of just partitioning the original input space
   and assigning histograms to bins. the methodology is strictly more
   powerful and flexible :)

references

   1. http://cs.stanford.edu/~karpathy/id166js/demo/
   2. http://cs.stanford.edu/~karpathy/id166js/demo/demonn.html
   3. https://github.com/karpathy/forestjs
   4. https://twitter.com/karpathy
   5. http://convnetjs.com/
