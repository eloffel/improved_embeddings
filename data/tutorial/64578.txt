   #[1]github [2]recent commits to capsnet-tensorflow:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]265
     * [35]star [36]3,342
     * [37]fork [38]1,098

[39]naturomics/[40]capsnet-tensorflow

   [41]code [42]issues 24 [43]pull requests 2 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a tensorflow implementation of capsnet(capsules net) in hinton's paper
   dynamic routing between capsules
   [47]capsnet [48]tensorflow [49]capsule [50]hinton [51]capsule-network
   [52]routing-algorithm [53]dynamic-routing
     * [54]148 commits
     * [55]1 branch
     * [56]1 release
     * [57]fetching contributors
     * [58]apache-2.0

    1. [59]python 98.2%
    2. [60]r 1.8%

   (button) python r
   branch: master (button) new pull request
   [61]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/n
   [62]download zip

downloading...

   want to be notified of new releases in naturomics/capsnet-tensorflow?
   [63]sign in [64]sign up

launching github desktop...

   if nothing happens, [65]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [66]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [67]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [68]download the github extension for visual studio
   and try again.

   (button) go back
   [69]@naturomics
   [70]naturomics [71]replaced constant variables that only for mnist task
   latest commit [72]5b464ca sep 14, 2018
   [73]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [74]dist_version [75]update results nov 18, 2017
   [76]imgs [77]update the capsule vs. neuron picture feb 19, 2018
   [78]results [79]update readme dec 20, 2017
   [80].gitignore
   [81]contributing.md
   [82]license
   [83]readme.md
   [84]capslayer.py
   [85]capsnet.py
   [86]config.py
   [87]download_data.py
   [88]main.py
   [89]plot_acc.r
   [90]utils.py

readme.md

capsnet-tensorflow

   [91]contributions welcome [92]license [93]gitter

   a tensorflow implementation of capsnet based on geoffrey hinton's paper
   [94]dynamic routing between capsules

   [95]capsvsneuron

     notes:
    1. the current version supports [96]mnist and [97]fashion-mnist
       datasets. the current test accuracy for mnist is 99.64%, and
       fashion-mnist 90.60%, see details in the [98]results section
    2. see [99]dist_version for multi-gpu support
    3. [100]here(      ) is an article explaining my understanding of the
       paper. it may be helpful in understanding the code.

     important:

     if you need to apply capsnet model to your own datasets or build up
     a new model with the basic block of capsnet, please follow my new
     project [101]capslayer, which is an advanced library for capsule
     theory, aiming to integrate capsule-relevant technologies, provide
     relevant analysis tools, develop related application examples, and
     promote the development of capsule theory. for example, you can use
     capsule layer block in your code easily with the api
     capslayer.layers.fully_connected and capslayer.layers.conv2d

requirements

     * python
     * numpy
     * [102]tensorflow>=1.3
     * tqdm (for displaying training progress info)
     * scipy (for saving images)

usage

   step 1. download this repository with git or click the [103]download
   zip button.
$ git clone https://github.com/naturomics/capsnet-tensorflow.git
$ cd capsnet-tensorflow

   step 2. download [104]mnist or [105]fashion-mnist dataset. in this
   step, you have two choices:
     * a) automatic downloading with download_data.py script

$ python download_data.py   (for mnist dataset)
$ python download_data.py --dataset fashion-mnist --save_to data/fashion-mnist (
for fashion-mnist dataset)

     * b) manual downloading with wget or other tools, move and extract
       dataset into data/mnist or data/fashion-mnist directory, for
       example:

$ mkdir -p data/mnist
$ wget -c -p data/mnist http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte
.gz
$ wget -c -p data/mnist http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte
.gz
$ wget -c -p data/mnist http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.
gz
$ wget -c -p data/mnist http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.
gz
$ gunzip data/mnist/*.gz

   step 3. start the training(using the mnist dataset by default):
$ python main.py
$ # or training for fashion-mnist dataset
$ python main.py --dataset fashion-mnist
$ # if you need to monitor the training process, open tensorboard with this comm
and
$ tensorboard --logdir=logdir
$ # or use `tail` command on linux system
$ tail -f results/val_acc.csv

   step 4. calculate test accuracy
$ python main.py --is_training=false
$ # for fashion-mnist dataset
$ python main.py --dataset fashion-mnist --is_training=false

     note: the default parameters of batch size is 128, and epoch 50. you
     may need to modify the config.py file or use command line parameters
     to suit your case, e.g. set batch size to 64 and do once test
     summary every 200 steps: python main.py --test_sum_freq=200
     --batch_size=48

results

   the pictures here are plotted by tensorboard and my tool plot_acc.r
     * training loss

   [106]total_loss [107]margin_loss [108]reconstruction_loss

   here are the models i trained and my talk and something else:

   [109]baidu netdisk(password:ahjs)
     * the best val error(using reconstruction)

   routing iteration  1    3   4
   val error         0.36 0.36 0.41
   paper             0.29 0.25 -

   [110]test_acc

     my simple comments for capsule
    1. a new version neural unit(vector in vector out, not scalar in
       scalar out)
    2. the routing algorithm is similar to attention mechanism
    3. anyway, a great potential work, a lot to be built upon

my wechat:

   [111]my_wechat

reference

     * [112]xifengguo/capsnet-keras: referred for some code optimizations

     *    2019 github, inc.
     * [113]terms
     * [114]privacy
     * [115]security
     * [116]status
     * [117]help

     * [118]contact github
     * [119]pricing
     * [120]api
     * [121]training
     * [122]blog
     * [123]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [124]reload to refresh your
   session. you signed out in another tab or window. [125]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/naturomics/capsnet-tensorflow/commits/master.atom
   3. https://github.com/naturomics/capsnet-tensorflow#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/naturomics/capsnet-tensorflow
  32. https://github.com/join
  33. https://github.com/login?return_to=/naturomics/capsnet-tensorflow
  34. https://github.com/naturomics/capsnet-tensorflow/watchers
  35. https://github.com/login?return_to=/naturomics/capsnet-tensorflow
  36. https://github.com/naturomics/capsnet-tensorflow/stargazers
  37. https://github.com/login?return_to=/naturomics/capsnet-tensorflow
  38. https://github.com/naturomics/capsnet-tensorflow/network/members
  39. https://github.com/naturomics
  40. https://github.com/naturomics/capsnet-tensorflow
  41. https://github.com/naturomics/capsnet-tensorflow
  42. https://github.com/naturomics/capsnet-tensorflow/issues
  43. https://github.com/naturomics/capsnet-tensorflow/pulls
  44. https://github.com/naturomics/capsnet-tensorflow/projects
  45. https://github.com/naturomics/capsnet-tensorflow/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/capsnet
  48. https://github.com/topics/tensorflow
  49. https://github.com/topics/capsule
  50. https://github.com/topics/hinton
  51. https://github.com/topics/capsule-network
  52. https://github.com/topics/routing-algorithm
  53. https://github.com/topics/dynamic-routing
  54. https://github.com/naturomics/capsnet-tensorflow/commits/master
  55. https://github.com/naturomics/capsnet-tensorflow/branches
  56. https://github.com/naturomics/capsnet-tensorflow/releases
  57. https://github.com/naturomics/capsnet-tensorflow/graphs/contributors
  58. https://github.com/naturomics/capsnet-tensorflow/blob/master/license
  59. https://github.com/naturomics/capsnet-tensorflow/search?l=python
  60. https://github.com/naturomics/capsnet-tensorflow/search?l=r
  61. https://github.com/naturomics/capsnet-tensorflow/find/master
  62. https://github.com/naturomics/capsnet-tensorflow/archive/master.zip
  63. https://github.com/login?return_to=https://github.com/naturomics/capsnet-tensorflow
  64. https://github.com/join?return_to=/naturomics/capsnet-tensorflow
  65. https://desktop.github.com/
  66. https://desktop.github.com/
  67. https://developer.apple.com/xcode/
  68. https://visualstudio.github.com/
  69. https://github.com/naturomics
  70. https://github.com/naturomics/capsnet-tensorflow/commits?author=naturomics
  71. https://github.com/naturomics/capsnet-tensorflow/commit/5b464caab361ec402c1b17acb9bc2680e5fbb7de
  72. https://github.com/naturomics/capsnet-tensorflow/commit/5b464caab361ec402c1b17acb9bc2680e5fbb7de
  73. https://github.com/naturomics/capsnet-tensorflow/tree/5b464caab361ec402c1b17acb9bc2680e5fbb7de
  74. https://github.com/naturomics/capsnet-tensorflow/tree/master/dist_version
  75. https://github.com/naturomics/capsnet-tensorflow/commit/b147ee46e0ad7c705f48bbbbf5a386aa6efce9a9
  76. https://github.com/naturomics/capsnet-tensorflow/tree/master/imgs
  77. https://github.com/naturomics/capsnet-tensorflow/commit/d9163687fa59ae7500b742c694a54dc07212df04
  78. https://github.com/naturomics/capsnet-tensorflow/tree/master/results
  79. https://github.com/naturomics/capsnet-tensorflow/commit/4330ffb4a0adcc4cf756ba1fd879bccb8174acb5
  80. https://github.com/naturomics/capsnet-tensorflow/blob/master/.gitignore
  81. https://github.com/naturomics/capsnet-tensorflow/blob/master/contributing.md
  82. https://github.com/naturomics/capsnet-tensorflow/blob/master/license
  83. https://github.com/naturomics/capsnet-tensorflow/blob/master/readme.md
  84. https://github.com/naturomics/capsnet-tensorflow/blob/master/capslayer.py
  85. https://github.com/naturomics/capsnet-tensorflow/blob/master/capsnet.py
  86. https://github.com/naturomics/capsnet-tensorflow/blob/master/config.py
  87. https://github.com/naturomics/capsnet-tensorflow/blob/master/download_data.py
  88. https://github.com/naturomics/capsnet-tensorflow/blob/master/main.py
  89. https://github.com/naturomics/capsnet-tensorflow/blob/master/plot_acc.r
  90. https://github.com/naturomics/capsnet-tensorflow/blob/master/utils.py
  91. https://github.com/naturomics/capsnet-tensorflow/blob/master/contributing.md
  92. https://opensource.org/licenses/apache-2.0
  93. https://gitter.im/capsnet-tensorflow/lobby
  94. https://arxiv.org/abs/1710.09829
  95. https://github.com/naturomics/capsnet-tensorflow/blob/master/imgs/capsulevsneuron.png
  96. http://yann.lecun.com/exdb/mnist/
  97. https://github.com/zalandoresearch/fashion-mnist
  98. https://github.com/naturomics/capsnet-tensorflow#results
  99. https://github.com/naturomics/capsnet-tensorflow/blob/master/dist_version
 100. https://zhihu.com/question/67287444/answer/251460831
 101. https://github.com/naturomics/capslayer
 102. https://github.com/tensorflow/tensorflow
 103. https://github.com/naturomics/capsnet-tensorflow/archive/master.zip
 104. http://yann.lecun.com/exdb/mnist/
 105. https://github.com/zalandoresearch/fashion-mnist
 106. https://github.com/naturomics/capsnet-tensorflow/blob/master/results/total_loss.png
 107. https://github.com/naturomics/capsnet-tensorflow/blob/master/results/margin_loss.png
 108. https://github.com/naturomics/capsnet-tensorflow/blob/master/results/reconstruction_loss.png
 109. https://pan.baidu.com/s/1plp8fdl
 110. https://github.com/naturomics/capsnet-tensorflow/blob/master/results/routing_trials.png
 111. https://github.com/naturomics/capsnet-tensorflow/blob/master/imgs/my_wechat_qr.png
 112. https://github.com/xifengguo/capsnet-keras
 113. https://github.com/site/terms
 114. https://github.com/site/privacy
 115. https://github.com/security
 116. https://githubstatus.com/
 117. https://help.github.com/
 118. https://github.com/contact
 119. https://github.com/pricing
 120. https://developer.github.com/
 121. https://training.github.com/
 122. https://github.blog/
 123. https://github.com/about
 124. https://github.com/naturomics/capsnet-tensorflow
 125. https://github.com/naturomics/capsnet-tensorflow

   hidden links:
 127. https://github.com/
 128. https://github.com/naturomics/capsnet-tensorflow
 129. https://github.com/naturomics/capsnet-tensorflow
 130. https://github.com/naturomics/capsnet-tensorflow
 131. https://help.github.com/articles/which-remote-url-should-i-use
 132. https://github.com/naturomics/capsnet-tensorflow#capsnet-tensorflow
 133. https://github.com/naturomics/capsnet-tensorflow#requirements
 134. https://github.com/naturomics/capsnet-tensorflow#usage
 135. https://github.com/naturomics/capsnet-tensorflow#results
 136. https://github.com/naturomics/capsnet-tensorflow#my-wechat
 137. https://github.com/naturomics/capsnet-tensorflow#reference
 138. https://github.com/
