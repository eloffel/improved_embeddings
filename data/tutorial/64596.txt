   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]tensorflow
     * [9]announcements
     * [10]keras
     * [11]tensorflow.js
     * [12]mobile
     * [13]responsible ai
     * [14]all stories
     * [15]tensorflow.org
     __________________________________________________________________

introducing tensorflow hub: a library for reusable machine learning modules
in tensorflow

   go to the profile of tensorflow
   [16]tensorflow (button) blockedunblock (button) followfollowing
   mar 30, 2018

   posted by [17]josh gordon, developer advocate for tensorflow

   one of the things that   s so fundamental in software development that
   it   s easy to overlook is the idea of a repository of shared code. as
   programmers, libraries immediately make us more effective. in a sense,
   they change the problem solving process of programming. when using a
   library, we often think of programming in terms of building blocks         or
   modules         that can be tied together.

   how might a library look for a machine learning developer? of course,
   in addition to sharing code, we   d also like to share pretrained models.
   sharing a pretrained model makes it possible for a developer to
   customize it for their domain, without having access to the computing
   resources or the data used to train the model originally on hand. for
   example, [18]nasnet took thousands of gpu-hours to train. by sharing
   the learned weights, a model developer can make it easier for others to
   reuse and build upon their work.
   [0*iof29hlvkfk0un6n.]
      ingredients    of a machine learning model that can be packaged and
   shared through [19]tensorflow hub. in a sense, sharing a pre-trained
   model also shares the compute time and dataset used to develop the
   model, in addition to architecture itself.

   it   s the idea of a library for machine learning developers that
   inspired [20]tensorflow hub, and today we   re happy to share it with the
   community. tensorflow hub is a platform to publish, discover, and reuse
   parts of machine learning modules in tensorflow. by a module, we mean a
   self-contained piece of a tensorflow graph, along with its weights,
   that can be reused across other, similar tasks. by reusing a module, a
   developer can train a model using a smaller dataset, improve
   generalization, or simply speed up training. let   s look at a couple
   examples to make this concrete.

image retraining

   as a first example, let   s look at a technique you can use to train an
   image classifier, starting from only a small amount of training data.
   modern image recognition models have millions of parameters, and of
   course, training one from scratch requires a large amount of labeled
   data and computing power. using a technique called [21]image
   retraining, you can train a model using a much smaller amount of data,
   and much less computing time. here   s how this looks in tensorflow hub.

   iframe: [22]/media/0730b0daaeaab89a6ac9d69f75d3d136?postid=cdee41fa18f9

   the basic idea is to reuse an existing image recognition module to
   extract features from your images, and then train a new classifier on
   top of these. as you can see above, tensorflow hub modules can be
   instantiated from a url (or, from a filesystem path) while a tensorflow
   graph is being constructed. there are variety of [23]modules on
   tensorflow hub for you to choose from, including various flavors of
   nasnet, [24]mobilenet (including its recent v2), inception, resnet, and
   others. to use a module, you [25]import tensorflow hub, then copy/paste
   the module   s url into your code.
   [0*00s77xkzfpfzat-b.]
   some of the image [26]modules available on tensorflow hub.

   each module has a defined interface that allows it to be used in a
   replaceable way, with little or no knowledge of its internals. in this
   case, this module has a method that you can use to retrieve the
   expected image size. as a developer, you need only provide a batch of
   images in the correct shape, and call the module on them to retrieve
   the feature representation. this module takes care of preprocessing
   your images for you, so you can go directly from a batch of images to a
   feature representation in a single step. from here, you can learn a
   linear model, or other type of classifier, on top of these.

   in this case, notice the module we   re using is hosted by google, and is
   versioned (so you can rely on the module not changing as you work on
   your experiments). modules can be applied like an ordinary python
   function to build part of the graph. once exported to disk, modules are
   self-contained, and can be used by others without access to the code
   and data used to create and train it (though of course you can publish
   those, too).

text classification

   let   s take a look at a second example. imagine you   d like to train a
   model to classify movie reviews as positive or negative, starting with
   only a small amount of training data (say, on the order of several
   hundred positive and negative movie reviews). since you have a limited
   number of examples, you decide to leverage a dataset of word
   embeddings, previously trained on a much larger corpus. here   s how this
   looks using a tensorflow hub.

   iframe: [27]/media/e59ac41ec0a917c314427169eefac668?postid=cdee41fa18f9

   as before, we start by selecting a [28]module. tensorflow hub has a
   variety of text modules for you to explore, including neural network
   language models in a variety of languages (en, jp, de, and es), as well
   as id97 trained on wikipedia, and nnlm embeddings trained on google
   news.
   [0*a9kwtkqoji3vftmi.]
   some of the text [29]modules shared on tensorflow hub.

   in this case, we   ll use a module for id27s. the code above
   downloads a module, uses it to preprocess a sentence, then retrieves
   the embeddings for each token. this means you can go directly from a
   sentence in your dataset to a format suitable for a classifier in a
   single step. the module takes care of tokenizing the sentence, and
   other logic like handling out-of-vocabulary words. both the
   preprocessing logic and the embeddings are encapsulated in a module,
   making it easier to experiment with various datasets of word
   embeddings, or different preprocessing strategies, without having to
   substantially change your code.
   [0*hcpzrkenidxhooas.]
   a text classification [30]tutorial using tensorflow hub.

   if you   d like to try this out, use this [31]tutorial to take it for a
   spin, and to learn how tensorflow hub modules work with tensorflow
   estimators.

universal sentence encoder

   we   ve also shared a tensorflow hub module for something new! below is
   an example using the universal sentence encoder. it   s a sentence-level
   embedding module trained on a wide variety of datasets (in other words,
      universal   ). some of the things it   s good at are semantic similarity,
   custom text classification, and id91.
   [1*ack_mbsyp96g3yu5yhlurq.png]
   [32]this notebook shows how to train a simple binary text classifier on
   top of any tf-hub module that can embed sentences.

   as in image retraining, relatively little labeled data is required to
   adapt the module to your own task. let   s try it on a restaurant
   reviews, for example.

   iframe: [33]/media/6e1639610a0476b6be5dea8ba07f884f?postid=cdee41fa18f9

   check out the this [34]tutorial to learn more.

other modules

   tensorflow hub is about more than image and text classification. on the
   website, you   ll also find a couple [35]modules for progressive gan and
   [36]google landmarks deep local features.

considerations

   there are a couple of important considerations when using tensorflow
   hub modules. first, remember that modules contain runnable code. always
   use modules from a trusted source. second, as in all of machine
   learning, [37]fairness is an [38]important consideration. both of the
   examples we   ve shown above leverage large pre-trained datasets. when
   reusing such a dataset, it   s important to be mindful of what data it
   contains (and whether there are any existing biases there), and how
   these might impact the product you are building, and its users.

next steps

   we hope you find tensorflow hub useful in your projects! to get
   started, head to [39]tensorflow.org/hub. if you run into any bugs, you
   can file an [40]issue on github. to stay in touch, you can star the
   [41]github project, and follow tensorflow on [42]twitter. thanks for
   reading!

     * [43]machine learning
     * [44]tensorflow
     * [45]tensorflow hub
     * [46]tfhub
     * [47]hub

   (button)
   (button)
   (button) 2.4k claps
   (button) (button) (button) 2 (button) (button)

     (button) blockedunblock (button) followfollowing
   go to the profile of tensorflow

[48]tensorflow

   medium member since jan 2018

   tensorflow is a fast, flexible, and scalable open-source machine
   learning library for research and production.

     (button) follow
   [49]tensorflow

[50]tensorflow

   tensorflow is a fast, flexible, and scalable open-source machine
   learning library for research and production.

     * (button)
       (button) 2.4k
     * (button)
     *
     *

   [51]tensorflow
   never miss a story from tensorflow, when you sign up for medium.
   [52]learn more
   never miss a story from tensorflow
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/cdee41fa18f9
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://medium.com/tensorflow/introducing-tensorflow-hub-a-library-for-reusable-machine-learning-modules-in-tensorflow-cdee41fa18f9&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://medium.com/tensorflow/introducing-tensorflow-hub-a-library-for-reusable-machine-learning-modules-in-tensorflow-cdee41fa18f9&source=--------------------------nav_reg&operation=register
   8. https://medium.com/tensorflow?source=logo-lo_82scjric8iqx---dca47aab201b
   9. https://medium.com/tensorflow/tagged/announcements
  10. https://medium.com/tensorflow/tagged/keras
  11. https://medium.com/tensorflow/tagged/javascript
  12. https://medium.com/tensorflow/tagged/mobile
  13. https://medium.com/tensorflow/tagged/responsible-ai
  14. https://medium.com/tensorflow/archive
  15. http://tensorflow.org/
  16. https://medium.com/@tensorflow
  17. http://twitter.com/random_forests
  18. https://research.googleblog.com/2017/11/automl-for-large-scale-image.html
  19. http://tensorflow.org/hub
  20. http://tensorflow.org/hub
  21. https://www.tensorflow.org/tutorials/image_retraining
  22. https://medium.com/media/0730b0daaeaab89a6ac9d69f75d3d136?postid=cdee41fa18f9
  23. http://tensorflow.org/hub/modules
  24. https://research.googleblog.com/2017/06/mobilenets-open-source-models-for.html
  25. http://tensorflow.org/hub/installation
  26. http://tensorflow.org/hub/modules
  27. https://medium.com/media/e59ac41ec0a917c314427169eefac668?postid=cdee41fa18f9
  28. http://tensorflow.org/hub/modules/text
  29. http://tensorflow.org/hub/modules/text
  30. http://tensorflow.org/tutorials/text_classification_with_tf_hub
  31. http://tensorflow.org/tutorials/text_classification_with_tf_hub
  32. https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/text_classification_with_tf_hub.ipynb
  33. https://medium.com/media/6e1639610a0476b6be5dea8ba07f884f?postid=cdee41fa18f9
  34. http://tensorflow.org/tutorials/text_classification_with_tf_hub
  35. http://tensorflow.org/hub/modules/other
  36. https://github.com/tensorflow/models/tree/master/research/delf
  37. http://ml-fairness.com/
  38. https://research.googleblog.com/2016/10/equality-of-opportunity-in-machine.html
  39. http://tensorflow.org/hub
  40. https://github.com/tensorflow/hub/issues
  41. https://github.com/tensorflow/hub
  42. http://twitter.com/tensorflow
  43. https://medium.com/tag/machine-learning?source=post
  44. https://medium.com/tag/tensorflow?source=post
  45. https://medium.com/tag/tensorflow-hub?source=post
  46. https://medium.com/tag/tfhub?source=post
  47. https://medium.com/tag/hub?source=post
  48. https://medium.com/@tensorflow
  49. https://medium.com/tensorflow?source=footer_card
  50. https://medium.com/tensorflow?source=footer_card
  51. https://medium.com/tensorflow
  52. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  54. https://medium.com/@tensorflow?source=post_header_lockup
  55. https://medium.com/p/cdee41fa18f9/share/twitter
  56. https://medium.com/p/cdee41fa18f9/share/facebook
  57. https://medium.com/@tensorflow?source=footer_card
  58. https://medium.com/p/cdee41fa18f9/share/twitter
  59. https://medium.com/p/cdee41fa18f9/share/facebook
