   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]towards data science
     * [9]data science
     * [10]machine learning
     * [11]programming
     * [12]visualization
     * [13]ai
     * [14]data journalism
     * [15]contribute
     __________________________________________________________________

intro to data science

   [16]go to the profile of tiffany souterre
   [17]tiffany souterre (button) blockedunblock (button) followfollowing
   mar 19, 2018

part 1: numpy and pandas

     * [18]part 2: data wrangling
     * [19]part 3: data analysis

   [1*nmkfbiiruhs2fih3l1h4pw.jpeg]
   photo by geralt on pixabay

   as a scientist, data is omnipresent in my day to day life. but the way
   to analyze data can be an art on its own. in    intro to data science   , i
   synthetized a course from [20]udacity where you will find all the
   basics an aspiring data scientist should know.

   in this part 1, we   ll see how to create and manipulate arrays with
   numpy and also series and data frames with pandas. at the end you will
   be able to :
     * create, index, slice, manipulate numpy arrays
     * create a matrix with a 2d numpy array
     * apply arithmetics to numpy arrays
     * apply mathematical function to numpy arrays (mean and dot product)
     * create, index, slice, manipulate pandas series
     * create a pandas data frame
     * select data frame rows through slicing, individual index (iloc or
       loc), boolean indexing

tools commonly used in data science : numpy and pandas

numpy

   numpy is popular for adding support for multidimensional arrays and
   matrices. it also adds a lot of mathematical functions that base python
   lacks. those functions are useful for statistical analysis (mean,
   median, standard deviation of an array   ). the array object class is the
   foundation of numpy, and numpy arrays are like lists in python, except
   that every thing inside an array must be of the same type, like int or
   float.

   iframe: [21]/media/63669f87935a4bc59529c266058dcab4?postid=49d98740661b

>>> [1. 4. 5. 8.]
>>>[[1. 2. 3.]
    [4. 5. 6.]]

   you can index, slice, and manipulate a numpy array much like you would
   with a python list.

   iframe: [22]/media/75e2d3e69614e97680da7972ed8a9ef4?postid=49d98740661b

>>> [1. 4. 5. 8.]
>>> 4.0
>>> [1. 4.]
>>> 5.0

   matrix indexing and slicing in action.

   iframe: [23]/media/f52ff76a17a08926aa04a73286902c9d?postid=49d98740661b

>>> [[1. 2. 3.]
     [4. 5. 6.]]
>>> 5.0
>>> [4. 5. 6.]
>>> [3. 6.]

   here are some arithmetic operations that you can do with numpy arrays.

   iframe: [24]/media/f7fc5a7daa27dc6482f3ab97fcf0d90d?postid=49d98740661b

>>> [6. 4. 9.]
>>> [-4.  0. -3.]
>>> [ 5.  4. 18.]

   same arithmetics operations but with matrices this time.

   iframe: [25]/media/696995f3b841de2e24980eb03093dc1f?postid=49d98740661b

>>> [[ 6.  8.]  [10. 12.]]
>>> [[-4. -4.]  [-4. -4.]]
>>> [[ 5. 12.]  [21. 32.]]

   in addition to the standard arthimetic operations, numpy also has a
   range of
   other mathematical operations that you can apply to numpy arrays, such
   as
   mean and dot product.

   iframe: [26]/media/6ee97d36637b56904b87122fe64c126b?postid=49d98740661b

>>> 2.0
>>> 7.0
>>> [44.]

pandas

   pandas on the other hand allows to structure and manipulate our data in
   ways that are suited for data analysis. pandas also takes a lot of the
   best elements from r and implements them in python. we are going to see
   to main concepts on pandas, series and data frames.

   you can think of series as an one-dimensional object that is similar to
   an array, list, or column in a database. by default, it will assign an
   index label to each item in the series ranging from 0 to n, where n is
   the number of items in the series minus one.

   iframe: [27]/media/e605c0ffdcce6aa55953c7eb624ac870?postid=49d98740661b

0           dave
1      cheng-han
2        udacity
3             42
4    -1789710578

   you can also manually assign indices to the items in the series when
   creating the series and use index to select specific items from the
   series.

   iframe: [28]/media/56c106013beaf9dca77ac7b61f4b533c?postid=49d98740661b

>>>
instructor               dave
curriculum manager    cheng-han
course number               359
power level                9001
>>> dave
>>>
instructor                 dave
curriculum manager    cheng-han
course number               359

   you can also use boolean operators to select specific items from the
   series

   iframe: [29]/media/842afca42e61e73a9e2ec238c3dddf50?postid=49d98740661b

>>>
cockroach    1
fish         2
mini pig     3
puppy        4
kitten       5
>>>
cockroach    false
fish         false
mini pig     false
puppy         true
kitten        true
>>>
puppy     4
kitten    5

   often, data in pandas is contained in a structure called data frame. a
   data frame is a 2d labeled data structure with column which can be
   different types if necessary (string, int, float, or boolean). for
   example :

   iframe: [30]/media/6a4de23983074f9f285ba8c3ab27d545?postid=49d98740661b

   to create a dataframe, you can pass a dictionary of lists to the
   dataframe
   constructor:
   1) the key of the dictionary will be the column name
   2) the associating list will be the values within that column.

   iframe: [31]/media/b2a5c5f3fbd5d58a60139ac8a0af4298?postid=49d98740661b

>>>
   losses     team  wins  year
0       5    bears    11  2010
1       8    bears     8  2011
2       6    bears    10  2012
3       1  packers    15  2011
4       5  packers    11  2012
5      10    lions     6  2010
6       6    lions    10  2011
7      12    lions     4  2012

   pandas also has various functions that will help you understand some
   basic
   information about your data frame. some of these functions above
   mentioned on the code are:
   1) dtypes: to get the datatype for each column
   2) describe: useful for seeing basic statistics of the dataframe   s
   numerical
    columns
   3) head: displays the first five rows of the dataset
   4) tail: displays the last five rows of the dataset
>>>
losses     int64
team      object
wins       int64
year       int64
dtype: object
>>>
          losses       wins         year
count   8.000000   8.000000     8.000000
mean    6.625000   9.375000  2011.125000
std     3.377975   3.377975     0.834523
min     1.000000   4.000000  2010.000000
25%     5.000000   7.500000  2010.750000
50%     6.000000  10.000000  2011.000000
75%     8.500000  11.000000  2012.000000
max    12.000000  15.000000  2012.000000
>>>
   losses     team  wins  year
0       5    bears    11  2010
1       8    bears     8  2011
2       6    bears    10  2012
3       1  packers    15  2011
4       5  packers    11  2012
>>>
   losses     team  wins  year
3       1  packers    15  2011
4       5  packers    11  2012
5      10    lions     6  2010
6       6    lions    10  2011
7      12    lions     4  2012

   note that :
   1) selecting a single column from the dataframe will return a series
   2) selecting multiple columns from the dataframe will return a
   dataframe

   iframe: [32]/media/ae6e1195d29a3804ea34e0f788c297f3?postid=49d98740661b

>>>
0    2010
1    2011
2    2012
3    2011
4    2012
5    2010
6    2011
7    2012
name: year, dtype: int64
>>> ... same as above
>>>
   year  wins  losses
0  2010    11       5
1  2011     8       8
2  2012    10       6
3  2011    15       1
4  2012    11       5
5  2010     6      10
6  2011    10       6
7  2012     4      12

   row selection can be done through multiple ways. some of the basic and
   common methods are:
    1) slicing
    2) an individual index (through the functions iloc or loc)
    3) boolean indexing

   you can also combine multiple selection requirements through boolean
   operators like & (and) or | (or)

   iframe: [33]/media/d210ad2ef049c89503d2a9d5fb87edaa?postid=49d98740661b

>>>
   losses   team  wins  year
0       5  bears    11  2010
>>>
   losses   team  wins  year
0       5  bears    11  2010
>>>
   losses     team  wins  year
3       1  packers    15  2011
4       5  packers    11  2012
>>>
   losses     team  wins  year
0       5    bears    11  2010
3       1  packers    15  2011
4       5  packers    11  2012
>>>
   losses     team  wins  year
3       1  packers    15  2011
4       5  packers    11  2012

   the following course will be about [34]data wrangling.

     * [35]data science
     * [36]numpy
     * [37]python pandas
     * [38]udacity
     * [39]introduction

   (button)
   (button)
   (button) 382 claps
   (button) (button) (button) 3 (button) (button)

     (button) blockedunblock (button) followfollowing
   [40]go to the profile of tiffany souterre

[41]tiffany souterre

   ph.d.     i like to understand things clearly and convey concepts
   efficiently     [42]https://amagash.github.io

     (button) follow
   [43]towards data science

[44]towards data science

   sharing concepts, ideas, and codes.

     * (button)
       (button) 382
     * (button)
     *
     *

   [45]towards data science
   never miss a story from towards data science, when you sign up for
   medium. [46]learn more
   never miss a story from towards data science
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://towardsdatascience.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/49d98740661b
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://towardsdatascience.com/intro-to-data-science-part-1-numpy-and-pandas-49d98740661b&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://towardsdatascience.com/intro-to-data-science-part-1-numpy-and-pandas-49d98740661b&source=--------------------------nav_reg&operation=register
   8. https://towardsdatascience.com/?source=logo-lo_i2aupzmeewzr---7f60cf5620c9
   9. https://towardsdatascience.com/data-science/home
  10. https://towardsdatascience.com/machine-learning/home
  11. https://towardsdatascience.com/programming/home
  12. https://towardsdatascience.com/data-visualization/home
  13. https://towardsdatascience.com/artificial-intelligence/home
  14. https://towardsdatascience.com/data-journalism/home
  15. https://towardsdatascience.com/contribute/home
  16. https://towardsdatascience.com/@tiffanysouterre?source=post_header_lockup
  17. https://towardsdatascience.com/@tiffanysouterre
  18. https://medium.com/@tiffanysouterre/intro-to-data-science-part-2-data-wrangling-75835b9129b4
  19. https://towardsdatascience.com/intro-to-data-science-part-3-data-analysis-71a566c3a8c3
  20. https://eu.udacity.com/course/intro-to-data-science--ud359
  21. https://towardsdatascience.com/media/63669f87935a4bc59529c266058dcab4?postid=49d98740661b
  22. https://towardsdatascience.com/media/75e2d3e69614e97680da7972ed8a9ef4?postid=49d98740661b
  23. https://towardsdatascience.com/media/f52ff76a17a08926aa04a73286902c9d?postid=49d98740661b
  24. https://towardsdatascience.com/media/f7fc5a7daa27dc6482f3ab97fcf0d90d?postid=49d98740661b
  25. https://towardsdatascience.com/media/696995f3b841de2e24980eb03093dc1f?postid=49d98740661b
  26. https://towardsdatascience.com/media/6ee97d36637b56904b87122fe64c126b?postid=49d98740661b
  27. https://towardsdatascience.com/media/e605c0ffdcce6aa55953c7eb624ac870?postid=49d98740661b
  28. https://towardsdatascience.com/media/56c106013beaf9dca77ac7b61f4b533c?postid=49d98740661b
  29. https://towardsdatascience.com/media/842afca42e61e73a9e2ec238c3dddf50?postid=49d98740661b
  30. https://towardsdatascience.com/media/6a4de23983074f9f285ba8c3ab27d545?postid=49d98740661b
  31. https://towardsdatascience.com/media/b2a5c5f3fbd5d58a60139ac8a0af4298?postid=49d98740661b
  32. https://towardsdatascience.com/media/ae6e1195d29a3804ea34e0f788c297f3?postid=49d98740661b
  33. https://towardsdatascience.com/media/d210ad2ef049c89503d2a9d5fb87edaa?postid=49d98740661b
  34. https://medium.com/@tiffanysouterre/intro-to-data-science-part-2-data-wrangling-75835b9129b4
  35. https://towardsdatascience.com/tagged/data-science?source=post
  36. https://towardsdatascience.com/tagged/numpy?source=post
  37. https://towardsdatascience.com/tagged/python-pandas?source=post
  38. https://towardsdatascience.com/tagged/udacity?source=post
  39. https://towardsdatascience.com/tagged/introduction?source=post
  40. https://towardsdatascience.com/@tiffanysouterre?source=footer_card
  41. https://towardsdatascience.com/@tiffanysouterre
  42. https://amagash.github.io/
  43. https://towardsdatascience.com/?source=footer_card
  44. https://towardsdatascience.com/?source=footer_card
  45. https://towardsdatascience.com/
  46. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  48. https://medium.com/p/49d98740661b/share/twitter
  49. https://medium.com/p/49d98740661b/share/facebook
  50. https://medium.com/p/49d98740661b/share/twitter
  51. https://medium.com/p/49d98740661b/share/facebook
