 

(r) a make-shift code (1/4) [15 points] 

alice and bob belong to a secret organization called people avoiding really sinister eavesdroppers (parse). 
unfortunately for them, all of their messages are intercepted by an enemy named eve (who loves to  
eavesdrop), so alice and bob come up with a scheme for encrypting their messages to prevent eve from 
reading them.  
 
their scheme is based on a device called a shift-reduce parser. this device makes use of a set of rules (below, 
left) and a table of part-of-speech tags (below, right): 

 

  

vp 

np 

np 

v 
  
n 

det 

  
np 

prep 

  

adj 

adv 

  

sent 

    

  

  

    

  

    

  

    

  

    

  
  

vp 
  
  
  

np 
  
  
  
pp 
  
  
  

adj 

  

  

  
  
  

  
  
  

  
  
  
  
  
  

  

pp 

np 
  
pp 

vp 

  
n 

adj 

  

cp 

v 
  
v 

adv 

    

  

    

  

    

  

    

  

    

  
np 
  
  
  
vp 
  
  
  
n 
  
  
  
vp 
  
  
  
v 
  

  

  
  
  

  
  
  

  
  
  
  
  
  

  

sent 

    

comp 

  

  

rel 

    

  

np 
  

srel 

    

comp 

  
v 

np 
  

  

    

  

adj2 

     

n 

  
cp 
  
  
  
np 
  
  
  

tag 

words that can have that tag 

np 

salvador 

n 

giraffe, glass, saw,  
orange, felt, spots 

v 

saw, felt, heard 

comp  that 

rel 

det  the 

adj  glass, soft, orange 

adj2  extraordinaire 

adv  really 

prep  on 

pp 

here 

  
  
  

srel 

  
  
  
n  
  

 

the shift-reduce parser has two segments, called the stack and the buffer, and it takes a series of words as its 
input. to run the device, you first input the words, assign a tag from the part-of-speech tag table (above, 
right) to each word, and then move these tags (in order) onto the buffer. if the machine had the input se-
quence    the giraffe saw salvador   , these pre-processing steps would look like this: 
 

pre-start 

pre-start 

 

  

  

  

  

pre-start 
   
 
  
 
 
 
 
 

  
  

  

   

  
 
 

buffer 

  

  

  

  

buffer 

  
  
 
  
  
 
the giraffe saw salvador 

det    n     v     np 

  

  

  

  

 
 
 
 
 
        
 
 
  stack 

  

  

  

  

buffer 

det    n     v     np 

  

  

  
  
  
  
the giraffe saw salvador 

  

  

  

  

  

    
 
 
 
 
 
 

 

 
   

 

 
  
 
       stack 

 
 
 
 
 

 
 
 
 
 
 
 
 
 
 
 
 

    
    
 
 
 
 
 
 

 

 the giraffe saw salvador 

 

    stack 

note that there might be more than one option for a word   s tag   for example,    saw    could be n or v. 

 

 

 

(r) a make-shift code (2/4) 

now the main operation of the machine begins. at each step of its processing, the machine performs one op-
eration, which is either a shift operation or a reduce operation. these two operations are defined as follows: 

 

     shift: take the first item in the buffer and place it on top of the stack. 
     reduce: combine the top two items in the stack using one of the rules from the rule set. 

 

if the machine reaches a point where all the words have been removed from the buffer, and the only thing 
remaining on the stack is sent, then the machine has created a successful parse for its input sentence. for 
our example, the shift-reduce processing would look as follows (we will use the abbreviations s for shift and 
r for reduce): 
 
 start 
 

step 2 

step 1 

buffer 

buffer 

buffer 

   

  

 
 

  

  

  

  

  

  
 
 

  

  

  
det    n     v    np 

  

steps performed so far: 

 

 

  

  

 
 
 
 
 
        

 

 

 

  

  

    n     v    np 

  

  
  
 
 

steps performed so far: 

 

s 

  

  

  

  

         v    np 

  

  
  
 
 

 

 

n 

det 

steps performed so far: 

 

ss 

    
 
 
 
 
 
 

 

 
   

 
 
 

  

  

  

  

   
  
 
 
 
 
 
 
 
 
  stack 

  
  
 
 

  

 

   
 
  
 
 
 
 
 
 

  

 
 
 
 
 
 
 
 
   

np 

 
   stack 

 
 
 

det 

  stack 

step 4 

buffer 

          v     np 

 step 3 

  

  

  

  
  

 

 

 

steps performed so far: 

 

ssr 

   

  
 
 

  

  

  

 
 
 
 
 
        

 

 

v 

  

  

  

buffer 

              np 

  
  
 
 

steps performed so far: 

 

ssrs 

buffer 

                

 step 6 

  

  

  

  
  

 

 

vp 

steps performed so far: 

 

ssrssr 

  

 

   
 
  
 
 
 
 
 
 

  

 
 
 
 

np 

 
   
  stack 

 
 
 

   

np 

    stack 

end 

   

  
 
 

  

  

  

  

 
 
 
 
 
        
 
   stack 

sent 

 

 

 

  
  
 
 

 

  

  

buffer 

               

steps performed so far: 

 

ssrssrr 

  

  

 

  

  

 

  

  

  

  

       stack 

step 5 

  

  

  

buffer 

                

steps performed so far: 

 

ssrss 

  
  
 
 

 

np 

v 

np 

  

  

  

    
 
 
 
 
 
 

 

 
   

 
 
 
   

      stack 

    
 
 
 
 
 
 

 
 
 
       

  

  

  

  

 

 

(r) a make-shift code (3/4) 

l = srrss 

c = ssrss 

u = sssss 

g = ssssr 

f = rrrss 

z = rrsrs 

p = rrssr 

k = rrrrs 

b = rrrsr 

a = rrrrr 

because the parser ends up with nothing in the buffer and with only sent in the stack, this was a successful 
parse of the input sentence. note that the parser was not guaranteed to succeed in this case--if it had shifted 
at step 3 instead of reducing, it would have failed. 
 
the way that alice and bob use this device to send messages is based on the sequence of shift and reduce 
operations that the shift-reduce parser performs (in the diagrams, this sequence is listed under    steps per-
formed so far   ). specifically, they break the final sequence of steps into chunks of 5 and then decode those 
chunks of 5 based on the following code: 
 
 
 
 
 
 
 
 
 
 
 
 
therefore, the example worked out above would not actually yield a complete message because its final se-
quence of steps is ssrssrr, so alice or bob could interpret the first 5 characters (ssrss) as c, but there would 
still be two characters (rr) left dangling. 
 
with this code, alice and bob successfully sent many messages to each other, where each message would 
name the country where their organization   s next meeting would be. eve continued to intercept these mes-
sages, and after years of careful analysis she managed to crack the code.  
 
r1. the first message eve intercepted after she broke the code was this sentence: 
 

r = ssrrs  w = rrsrr 

h = sssrs  m = rssss 

o = srrrr 

d = srsrr 

q = ssrsr 

n = srssr 

x = rsrrs 

t = ssrrr 

y = srrsr 

v = srsrs 

e = sssrr 

s = rrsss 

j = rssrr 

i = srrrs 

 

 

 

 

salvador saw the orange spots on the giraffe 

a. what did eve think the message said? 

 
with mounting excitement, she decoded the message...but was utterly perplexed at the result. does this 
mean that parse owns some sort of spaceship?!?!, she wondered to herself as she threw away the useless 
message. 
 
 
 
  b. where were alice and bob actually meeting? 
 
 

 

 

 

 

(r) a make-shift code (4/4) 

r2. a few weeks later, eve intercepted a second message between alice and bob: 
 

the glass saw that the really soft orange felt really heard the giraffe 

once again, she decoded the message, and this time it actually made sense! as soon as she figured it out, she 
hopped on a plane to the country it named and waited there for alice and bob, but they never showed up! at 
least the trip wasn   t a total waste--it was eve   s first visit to africa. 

 

a.  where had eve gone?   

 

 

 

b. 

where were alice and bob actually meeting? 

 

 

 

 
 
 
 

r3. it   s time for alice to choose a new place to meet. when she and bob last met, it took them a long time to 
find each other because all that alice knew was the country where bob wanted to meet, and countries are 
pretty big. to fix this, alice has decided to send bob the name of a city instead of a country. she   s made a list 
of the six cities she most wants to visit: ottawa, quito, oslo, fez, irkutsk, and perth. the map below shows 
where these cities are located:  
 
 
 
 
 
 
 
 

 
 

 

it turns out that only one of these six cities is a possible place for alice and bob to meet.   

 
 
 

a.  which of these six cities is the one where they can meet?  

b.  why wouldn   t the other five cities work? 

 

 

 

c. write a sentence that alice could send to bob to represent the name of the city that would work. 

 
 
 
 

 

 
 
note: the id132 algorithm is used in the real world to parse both human languages and programming languages. a parsing algo-
rithm (such as this one) that builds up an analysis of a sequence by putting together individual units of the sequence is known as a bottom-up 
parsing algorithm. the opposite type of strategy, namely starting with the sent symbol and trying to expand it until the desired sequence is creat-
ed, is known as top-down parsing. 

 

