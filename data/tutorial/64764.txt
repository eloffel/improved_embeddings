   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]heartbeat
     * [9]mobile
     * [10]machine learning
     * [11]newsletter
     * [12]community
     * [13]contribute
     * [14]all
     * [15]about fritz
     __________________________________________________________________

some essential hacks and tricks for machine learning with python

we describe some essential hacks and tricks for practicing machine learning
with python.

   go to the profile of tirthajyoti sarkar
   [16]tirthajyoti sarkar (button) blockedunblock (button) followfollowing
   apr 19, 2018
   [1*osj-w0xzuaoqni_nbpfcbw.png]

   i am a student of computer science/engineering. how do i get into the field
of machine learning/deep learning/ai?   

   it   s never been easier to get started with machine learning. in
   addition to structured moocs, there is also a huge number of
   incredible, free resources available around the web. here are just a
   few that have helped me:
    1. start with some cool videos on youtube. read a couple of good books
       or articles. for example, have you read    [17]the master algorithm:
       how the quest for the ultimate learning machine will remake our
       world   ? and i can guarantee you   ll fall in love with [18]this cool
       interactive page about machine learning?
    2. learn to clearly differentiate between buzzwords first         machine
       learning, artificial intelligence, deep learning, data science,
       id161, robotics. read or listen to the talks, given by
       experts, on each of them. [19]watch this amazing video by brandon
       rohrer, an influential data scientist. or this [20]video about the
       clear definition and difference of various roles associated with
       data science.
    3. have your goal clearly set for what you want to learn. and then, go
       and take that coursera course. or take the [21]other one from univ.
       of washington, which is pretty good too.
    4. 1. follow some good blogs: [22]kdnuggets, [23]mark meloon   s blog
       about data science career, [24]brandon rohrer   s blog, [25]open ai   s
       blog about their research, and of course, [26]heartbeat
    5. if you are enthusiastic about taking online moocs, [27]check out
       this article for guidance.
    6. most of all, develop a feel for it. join some good social forums,
       but resist the temptation to latch onto sensationalized headlines
       and news bytes posted. do your own reading, understand what it is
       and what it is not, where it might go, and what possibilities it
       can open up. then sit back and think about how you can apply
       machine learning or imbue data science principles into your daily
       work. build a simple [28]regression model to predict the cost of
       your next lunch or download your electricity usage data from your
       energy provider and do a simple time-series plot in excel to
       discover some pattern of usage. and after you are thoroughly
       enamored with machine learning, you can watch this video.

   iframe: [29]/media/93f905162330102277112e259f9c92fe?postid=5478bc6593f2

is python a good language of choice for machine learning/ai?

   familiarity and moderate expertise in at least one high-level
   programming language is useful for beginners in machine learning.
   unless you are a ph.d. researcher working on a purely theoretical proof
   of some complex algorithm, you are expected to mostly use the existing
   machine learning algorithms and apply them in solving novel problems.
   this requires you to put on a programming hat.

   there   s a lot of debate on the    best language for data science    (in
   fact, here   s a take on why [30]data scientists should learn swift).

   while the debate rages on, grab a coffee and [31]read this insightful
   article to get an idea and see your choices. or, check out [32]this
   post on kdnuggets. for now, it   s widely believed that python helps
   developers to be more productive from development to deployment and
   maintenance. python   s syntax is simpler and of a higher level when
   compared to java, c, and c++. it has a vibrant community, open-source
   culture, hundreds of high-quality libraries focused on machine
   learning, and a huge support base from big names in the industry (e.g.
   google, dropbox, airbnb, etc.).

     this article will focus on some essential hacks and tricks in python
     focused on machine learning.

fundamental libraries to know and master

   there are few core python packages/libraries you need to master for
   practicing machine learning effectively. very brief description of
   those are given below,

numpy

   short for [33]numerical python, numpy is the fundamental package
   required for high performance scientific computing and data analysis in
   the python ecosystem. it   s the foundation on which nearly all of the
   higher-level tools such as [34]pandas and [35]scikit-learn are built.
   [36]tensorflow uses numpy arrays as the fundamental building block on
   top of which they built their tensor objects and graphflow for deep
   learning tasks. many numpy operations are implemented in c, making them
   super fast. for data science and modern machine learning tasks, this is
   an invaluable advantage.
   [1*qvsmwawod4cfett-57fuha.jpeg]

pandas

   this is the most popular library in the scientific python ecosystem for
   doing general-purpose data analysis. pandas is built upon numpy array
   thereby preserving the feature of fast execution speed and offering
   many data engineering features including:
     * reading/writing many different data formats
     * selecting subsets of data
     * calculating across rows and down columns
     * finding and filling missing data
     * applying operations to independent groups within the data
     * reshaping data into different forms
     * combing multiple datasets together
     * advanced time-series functionality
     * visualization through matplotlib and [37]seaborn

   [1*mm_2l0tbedht_4ftq3gg1q.png]

matplotlib and seaborn

   data visualization and storytelling with your data are essential skills
   that every data scientist needs to communicate insights gained from
   analyses effectively to any audience out there. this is equally
   critical in pursuit of machine learning mastery too as often in your ml
   pipeline, you need to perform exploratory analysis of the data set
   before deciding to apply particular ml algorithm.

   matplotlib is the most widely used 2-d python visualization library
   equipped with a dazzling array of commands and interfaces for producing
   publication-quality graphics from your data. [38]here is an amazingly
   detailed and rich article on getting you started on matplotlib.
   [1*zbyenyic4ysgwbfgp1kb0q.png]

   seaborn is another great visualization library focused on statistical
   plotting. it   s worth learning for machine learning practitioners.
   seaborn provides an api (with flexible choices for plot style and color
   defaults) on top of matplotlib, defines simple high-level functions for
   common statistical plot types, and integrates with the functionality
   provided by pandas. [39]here is a great tutorial on seaborn for
   beginners.
   [1*grxulemn0fkh3248z2cnxg.png]
   example of seaborn plots

scikit-learn

   scikit-learn is the most important general machine learning python
   package you must master. it features various [40]classification,
   [41]regression, and [42]id91 algorithms, including [43]support
   vector machines, [44]id79s, [45]gradient boosting,
   [46]id116, and [47]dbscan, and is designed to inter-operate with the
   python numerical and scientific libraries [48]numpy and [49]scipy. it
   provides a range of supervised and unsupervised learning algorithms via
   a consistent interface. the vision for the library has a level of
   robustness and support required for use in production systems. this
   means a deep focus on concerns such as ease of use, code quality,
   collaboration, documentation, and performance. [50]look at this gentle
   introduction to machine learning vocabulary as used in the scikit-learn
   universe. [51]here is another article demonstrating a simple machine
   learning pipeline method using scikit-learn.

   iframe: [52]/media/05616eaceabf5537ffbda5b6811c367c?postid=5478bc6593f2

some hidden gems of scikit-learn

   scikit-learn is a great package to master for machine learning
   beginners and seasoned professionals alike. however, even experienced
   ml practitioners may not be aware of all the hidden gems of this
   package which can aid in their task significantly. i am trying to list
   few of these relatively lesser known methods/interfaces available in
   scikit-learn.

   pipeline: this can be used to chain multiple estimators into one. this
   is useful as there is often a fixed sequence of steps in processing the
   data, for example feature selection, id172 and classification.
   [53]here is more info about it.

   grid-search: hyper-parameters are parameters that are not directly
   learnt within estimators. in scikit-learn they are passed as arguments
   to the constructor of the estimator classes. it is possible and
   recommended to search the hyper-parameter space for the best [54]cross
   validation score. any parameter provided when constructing an estimator
   may be optimized in this manner. [55]read more about it here.

   validation curves: every estimator has its advantages and drawbacks.
   its generalization error can be decomposed in terms of bias, variance
   and noise. the bias of an estimator is its average error for different
   training sets. the variance of an estimator indicates how sensitive it
   is to varying training sets. noise is a property of the data. it is
   very helpful to plot the influence of a single [56]hyperparameter on
   the training score and the validation score to find out whether the
   estimator is overfitting or underfitting for some hyperparameter
   values. [57]scikit-learn has a built-in method to help here.
   [1*94pw-u1fk7lodcnkgmmbsw.png]

   one-hot encoding of categorial data: it is an extremely common data
   preprocessing task to transform input categorical features in one-in-k
   binary encodings for using in classification or prediction tasks (e.g.
   id28 with mixed numerical and text features).
   scikit-learn offers [58]powerful yet simple methods to accomplish this.
   they operate directly on pandas dataframe or numpy arrays thereby
   freeing the user to write any special map/apply function for these
   transformations.

   polynomial feature generation: for countless regression modeling tasks,
   often it is useful to add complexity to the model by considering
   nonlinear features of the input data. a simple and common method to use
   is polynomial features, which can get features    high-order and
   interaction terms. [59]scikit-learn has a ready-made function to
   generate such higher-order cross-terms from a given feature set and
   user   s choice of highest degree of polynomial.

   dataset generators: scikit-learn includes various random sample
   generators that can be used to build artificial datasets of controlled
   size and complexity. [60]it has functions for classification,
   id91, regression, matrix decomposition, and manifold testing.
   [1*6-6-1-k5q8_zn7rrkl8_tw.png]

practicing interactive machine learning

   project jupyter was born out of the [61]ipython project in 2014 and
   evolved rapidly to support interactive data science and scientific
   computing across all major programming languages. there is no doubt
   that it has left one of the biggest degrees of impact on how a data
   scientist can quickly test and prototype his/her idea and showcase the
   work to peers and open-source community.

   however, learning and experimenting with data become truly immersive
   when the user can interactively control the parameters of the model and
   see the effect (almost) real-time. most of the common rendering in
   jupyter are static.

     but you want more control, you want to change variables at the
     simple swipe of your mouse, not by writing a for-loop. what should
     you do? you can use ipython widget.

   widgets are eventful python objects that have a representation in the
   browser, often as a control like a slider, text box, etc., through a
   front-end (html/javascript) rendering channel.

   in [62]this article, i demonstrate a simple curve fitting exercise
   using basic widget controls. in a follow-up article, that is
   [63]extended further in the realm of interactive machine learning
   techniques.

   iframe: [64]/media/7c26daa3ffb826b87368ef034967d290?postid=5478bc6593f2

deep learning frameworks (and courses to get you started)

   this article gloss over some essential tips for jump-starting your
   journey to the fascinating world of machine learning with python. it
   does not cover deep learning frameworks like [65]tensorflow, [66]keras,
   or [67]pytorch as they merit deep discussion about themselves
   exclusively. you can read some great articles about them here but we
   may come back later with a dedicated discussion about these amazing
   frameworks.
     * [68]7 great articles on tensorflow (datascience central)
     * [69]datacamp tutorial on neural nets and keras example
     * [70]analyticsvidhya tutorial on pytorch

   you can also try the following,

   [71]deep learning course (with tensorflow) by simplilearn: this course
   has been crafted by industry experts and been aligned with the latest
   best practices. you will learn foundational concepts and the tensorflow
   open source framework, implement the most popular deep learning
   architectures, and traverse layers of data abstraction to understand
   the power of data.

   [72]google   s cloud-based tensorflow specialization (coursera): this
   5-course specialization focuses on advanced machine learning topics
   using google cloud platform where you will get hands-on experience
   optimizing, deploying, and scaling production ml models of various
   types in hands-on labs.

summary

   thanks for reading this article. machine learning is currently one of
   the most exciting and promising intellectual fields, with applications
   ranging from e-commerce to healthcare and virtually everything in
   between. there are hypes and hyperbole, but there is also solid
   research and best practices. if properly learned and applied, this
   field of study can bring immense intellectual and practical rewards to
   the practitioner and to her/his professional task.

   it   s impossible to cover even a small fraction of machine learning
   topics in the space of one (or ten) articles. but hopefully, the
   current article has piqued your interest in the field and given you
   solid pointers on some of the powerful frameworks, already available in
   the python ecosystem, to start your machine learning tasks.
     __________________________________________________________________

   if you have any questions or ideas to share, please contact the author
   at [73]tirthajyoti[at]gmail.com. also you can check author   s [74]github
   repositories for other fun code snippets in python, r, or matlab and
   machine learning resources. if you are, like me, passionate about
   machine learning/data science, please feel free to [75]add me on
   linkedin or [76]follow me on twitter.

   discuss the post on [77]hacker news.
     __________________________________________________________________

   ready to dive into some code? check out[78] fritz on github. you   ll
   find open source, mobile-friendly implementations of popular machine
   and deep learning models along with training scripts, project
   templates, and tools for building your own ml-powered ios and android
   apps.

   and follow us on [79]twitter and [80]linkedin for the all the latest
   content, news, and more from the mobile machine learning world.

   iframe: [81]/media/05616eaceabf5537ffbda5b6811c367c?postid=5478bc6593f2

     * [82]machine learning
     * [83]python
     * [84]artificial intelligence
     * [85]heartbeat
     * [86]machine learning tools

   (button)
   (button)
   (button) 1.6k claps
   (button) (button) (button) 1 (button) (button)

     (button) blockedunblock (button) followfollowing
   go to the profile of tirthajyoti sarkar

[87]tirthajyoti sarkar

   medium member since aug 2018

   sr. principal engineer | ph.d. in ee (u. of iilinois)| ai/ml
   certification (stanford, mit) | data science author | open-source
   contributor| ai in semiconductors

     (button) follow
   [88]heartbeat

[89]heartbeat

   the latest on mobile machine learning.

     * (button)
       (button) 1.6k
     * (button)
     *
     *

   [90]heartbeat
   never miss a story from heartbeat, when you sign up for medium.
   [91]learn more
   never miss a story from heartbeat
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://heartbeat.fritz.ai/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/5478bc6593f2
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://heartbeat.fritz.ai/some-essential-hacks-and-tricks-for-machine-learning-with-python-5478bc6593f2&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://heartbeat.fritz.ai/some-essential-hacks-and-tricks-for-machine-learning-with-python-5478bc6593f2&source=--------------------------nav_reg&operation=register
   8. https://heartbeat.fritz.ai/?source=logo-lo_yhd0vyxrgbqy---680eee12c50d
   9. https://heartbeat.fritz.ai/mobile-ml/home
  10. https://heartbeat.fritz.ai/machine-learning/home
  11. https://heartbeat.fritz.ai/heartbeat-fritz-ai-newsletter/home
  12. https://heartbeat.fritz.ai/heartbeat-fritz-ai-community/home
  13. https://heartbeat.fritz.ai/call-for-contributors-october-2018-update-fee7f5b80f3e
  14. https://heartbeat.fritz.ai/archive
  15. http://fritz.ai/
  16. https://heartbeat.fritz.ai/@tirthajyoti
  17. https://www.goodreads.com/book/show/24612233-the-master-algorithm
  18. http://www.r2d3.us/visual-intro-to-machine-learning-part-1/
  19. https://www.youtube.com/watch?v=tka0zdddaqk
  20. https://www.youtube.com/watch?v=ura_ioocpqi
  21. https://www.coursera.org/specializations/machine-learning
  22. https://www.kdnuggets.com/
  23. http://www.markmeloon.com/
  24. https://brohrer.github.io/blog.html
  25. https://blog.openai.com/
  26. http://heartbeat.fritz.ai/
  27. https://towardsdatascience.com/how-to-choose-effective-moocs-for-machine-learning-and-data-science-8681700ed83f
  28. https://heartbeat.fritz.ai/5-regression-loss-functions-all-machine-learners-should-know-4fb140e9d4b0
  29. https://heartbeat.fritz.ai/media/93f905162330102277112e259f9c92fe?postid=5478bc6593f2
  30. https://heartbeat.fritz.ai/why-data-scientists-should-start-learning-swift-66c3643e0d0d
  31. https://medium.freecodecamp.org/which-languages-should-you-learn-for-data-science-e806ba55a81f
  32. https://www.kdnuggets.com/2017/09/python-vs-r-data-science-machine-learning.html
  33. http://numpy.org/
  34. https://pandas.pydata.org/
  35. http://scikit-learn.org/
  36. https://www.tensorflow.org/
  37. https://seaborn.pydata.org/
  38. https://heartbeat.fritz.ai/introduction-to-matplotlib-data-visualization-in-python-d9143287ae39
  39. https://www.datacamp.com/community/tutorials/seaborn-python-tutorial
  40. https://en.wikipedia.org/wiki/statistical_classification
  41. https://en.wikipedia.org/wiki/regression_analysis
  42. https://en.wikipedia.org/wiki/cluster_analysis
  43. https://en.wikipedia.org/wiki/support_vector_machine
  44. https://en.wikipedia.org/wiki/random_forests
  45. https://en.wikipedia.org/wiki/gradient_boosting
  46. https://en.wikipedia.org/wiki/id116_id91
  47. https://en.wikipedia.org/wiki/dbscan
  48. https://en.wikipedia.org/wiki/numpy
  49. https://en.wikipedia.org/wiki/scipy
  50. http://scikit-learn.org/stable/tutorial/basic/tutorial.html
  51. https://towardsdatascience.com/machine-learning-with-python-easy-and-robust-method-to-fit-nonlinear-data-19e8a1ddbd49
  52. https://heartbeat.fritz.ai/media/05616eaceabf5537ffbda5b6811c367c?postid=5478bc6593f2
  53. http://scikit-learn.org/stable/modules/pipeline.html
  54. http://scikit-learn.org/stable/modules/cross_validation.html#cross-validation
  55. http://scikit-learn.org/stable/modules/grid_search.html#grid-search
  56. https://heartbeat.fritz.ai/tuning-machine-learning-hyperparameters-40265a35c9b8
  57. http://scikit-learn.org/stable/modules/learning_curve.html
  58. http://scikit-learn.org/stable/modules/preprocessing.html#encoding-categorical-features
  59. http://scikit-learn.org/stable/modules/preprocessing.html#generating-polynomial-features
  60. http://scikit-learn.org/stable/datasets/index.html#sample-generators
  61. https://ipython.org/
  62. https://towardsdatascience.com/a-very-simple-demo-of-interactive-controls-on-jupyter-notebook-4429cf46aabd
  63. https://towardsdatascience.com/interactive-machine-learning-make-python-lively-again-a96aec7e1627
  64. https://heartbeat.fritz.ai/media/7c26daa3ffb826b87368ef034967d290?postid=5478bc6593f2
  65. https://www.tensorflow.org/
  66. https://keras.io/
  67. http://pytorch.org/
  68. https://www.datasciencecentral.com/profiles/blogs/9-great-articles-about-tensorflow
  69. https://www.datacamp.com/community/tutorials/deep-learning-python
  70. https://www.analyticsvidhya.com/blog/2018/02/pytorch-tutorial/
  71. https://www.simplilearn.com/deep-learning-course-with-tensorflow-training
  72. https://www.coursera.org/specializations/advanced-machine-learning-tensorflow-gcp
  73. mailto:tirthajyoti@gmail.com
  74. https://github.com/tirthajyoti?tab=repositories
  75. https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/
  76. https://twitter.com/tirthajyotis
  77. https://news.ycombinator.com/newest
  78. https://github.com/fritzlabs
  79. https://twitter.com/fritzlabs
  80. https://www.linkedin.com/company/fritz-labs-inc/
  81. https://heartbeat.fritz.ai/media/05616eaceabf5537ffbda5b6811c367c?postid=5478bc6593f2
  82. https://heartbeat.fritz.ai/tagged/machine-learning?source=post
  83. https://heartbeat.fritz.ai/tagged/python?source=post
  84. https://heartbeat.fritz.ai/tagged/artificial-intelligence?source=post
  85. https://heartbeat.fritz.ai/tagged/heartbeat?source=post
  86. https://heartbeat.fritz.ai/tagged/machine-learning-tools?source=post
  87. https://heartbeat.fritz.ai/@tirthajyoti
  88. https://heartbeat.fritz.ai/?source=footer_card
  89. https://heartbeat.fritz.ai/?source=footer_card
  90. https://heartbeat.fritz.ai/
  91. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  93. https://heartbeat.fritz.ai/@tirthajyoti?source=post_header_lockup
  94. https://medium.com/p/5478bc6593f2/share/twitter
  95. https://medium.com/p/5478bc6593f2/share/facebook
  96. https://heartbeat.fritz.ai/@tirthajyoti?source=footer_card
  97. https://medium.com/p/5478bc6593f2/share/twitter
  98. https://medium.com/p/5478bc6593f2/share/facebook
