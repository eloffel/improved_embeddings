   #[1]google developers blog - atom [2]google developers blog - rss
   [3]google developers blog - atom

   [4][w55ib4qoq6b-l6hop-rnd-cxwb4t_m3hc797pbozam4qi9sqbnao8ta3cxhbvouh5a4
   kxa-w1wfoy66qvf8zcxjn-ndf6wnbye8tp-oayas=s0-d]
   blog of our latest news, updates, and stories for developers

[5]introducing tensorflow feature columns

   monday, november 20, 2017
   posted by the tensorflow team

   welcome to part 2 of a blog series that introduces tensorflow datasets
   and estimators. we're devoting this article to feature columns   a data
   structure describing the features that an estimator requires for
   training and id136. as you'll see, feature columns are very rich,
   enabling you to represent a diverse range of data.

   in [6]part 1, we used the pre-made estimator dnnclassifier to train a
   model to predict different types of iris flowers from four input
   features. that example created only numerical feature columns (of type
   tf.feature_column.numeric_column). although those feature columns were
   sufficient to model the lengths of petals and sepals, real world data
   sets contain all kinds of non-numerical features. for example:
   [7][1.jpg]

figure 1. non-numerical features.

   how can we represent non-numerical feature types? that's exactly what
   this blogpost is all about.

input to a deep neural network

   let's start by asking what kind of data can we actually feed into a
   deep neural network? the answer is, of course, numbers (for example,
   tf.float32). after all, every neuron in a neural network performs
   multiplication and addition operations on weights and input data.
   real-life input data, however, often contains non-numerical
   (categorical) data. for example, consider a product_class feature that
   can contain the following three non-numerical values:
     * kitchenware
     * electronics
     * sports

   ml models generally represent categorical values as simple vectors in
   which a 1 represents the presence of a value and a 0 represents the
   absence of a value. for example, when product_class is set to sports,
   an ml model would usually represent product_class as [0, 0, 1],
   meaning:
     * 0: kitchenware is absent
     * 0: electronics is absent
     * 1: sports: is present

   so, although raw data can be numerical or categorical, an ml model
   represents all features as either a number or a vector of numbers.

introducing feature columns

   as figure 2 suggests, you specify the input to a model through the
   feature_columns argument of an estimator (dnnclassifier for iris).
   feature columns bridge input data (as returned by input_fn) with your
   model.
   [8][2.jpg]

figure 2. feature columns bridge raw data with the data your model needs.

   to represent features as a feature column, call functions of the
   [9]tf.feature_column package. this blogpost explains nine of the
   functions in this package. as figure 3 shows, all nine functions return
   either a categorical-column or a dense-column object, except
   bucketized_column which inherits from both classes:
   [10][3.jpg]

figure 3. feature column methods fall into two main categories and one hybrid
category.

   let's look at these functions in more detail.

numeric column

   the iris classifier called [11]tf.numeric_column() for all input
   features: sepallength, sepalwidth, petallength, petalwidth. although
   tf.numeric_column() provides optional arguments, calling the function
   without any arguments is a perfectly easy way to specify a numerical
   value with the default data type (tf.float32) as input to your model.
   for example:
# defaults to a tf.float32 scalar.
numeric_feature_column = tf.feature_column.numeric_column(key="sepallength")

   use the dtype argument to specify a non-default numerical data type.
   for example:
# represent a tf.float64 scalar.
numeric_feature_column = tf.feature_column.numeric_column(key="sepallength",
                                                          dtype=tf.float64)

   by default, a numeric column creates a single value (scalar). use the
   shape argument to specify another shape. for example:
# represent a 10-element vector in which each cell contains a tf.float32.
vector_feature_column = tf.feature_column.numeric_column(key="bowling",
                                                         shape=10)

# represent a 10x5 matrix in which each cell contains a tf.float32.
matrix_feature_column = tf.feature_column.numeric_column(key="mymatrix",
                                                         shape=[10,5])

bucketized column

   often, you don't want to feed a number directly into the model, but
   instead split its value into different categories based on numerical
   ranges. to do so, create a [12]bucketized column. for example, consider
   raw data that represents the year a house was built. instead of
   representing that year as a scalar numeric column, we could split year
   into the following four buckets:
   [13][4.jpg]

figure 4. dividing year data into four buckets.

   the model will represent the buckets as follows:
    date range           represented as...
    < 1960               [1, 0, 0, 0]
    >= 1960 but < 1980   [0, 1, 0, 0]
    >= 1980 but < 2000   [0, 0, 1, 0]
    > 2000               [0, 0, 0, 1]

   why would you want to split a number   a perfectly valid input to our
   model   into a categorical value like this? well, notice that the
   categorization splits a single input number into a four-element vector.
   therefore, the model now can learn four individual weights rather than
   just one. four weights creates a richer model than one. more
   importantly, bucketizing enables the model to clearly distinguish
   between different year categories since only one of the elements is set
   (1) and the other three elements are cleared (0). when we just use a
   single number (a year) as input, the model can't distinguish
   categories. so, bucketing provides the model with additional important
   information that it can use to learn.

   the following code demonstrates how to create a bucketized feature:
# a numeric column for the raw input.
numeric_feature_column = tf.feature_column.numeric_column("year")

# bucketize the numeric column on the years 1960, 1980, and 2000
bucketized_feature_column = tf.feature_column.bucketized_column(
    source_column = numeric_feature_column,
    boundaries = [1960, 1980, 2000])

   note the following:
     * before creating the bucketized column, we first created a numeric
       column to represent the raw year.
     * we passed the numeric column as the first argument to
       [14]tf.feature_column.bucketized_column().
     * specifying a three-element boundaries vector creates a four-element
       bucketized vector.

categorical identity column

   categorical identity columns are a special case of bucketized columns.
   in traditional bucketized columns, each bucket represents a range of
   values (for example, from 1960 to 1979). in a categorical identity
   column, each bucket represents a single, unique integer. for example,
   let's say you want to represent the integer range [0, 4). (that is, you
   want to represent the integers 0, 1, 2, or 3.) in this case, the
   categorical identity mapping looks like this:
   [15][5.jpg]

figure 5. a categorical identity column mapping. note that this is a one-hot
encoding, not a binary numerical encoding.

   so, why would you want to represent values as categorical identity
   columns? as with bucketized columns, a model can learn a separate
   weight for each class in a categorical identity column. for example,
   instead of using a string to represent the product_class, let's
   represent each class with a unique integer value. that is:
     * 0="kitchenware"
     * 1="electronics"
     * 2="sport"

   call [16]tf.feature_column.categorical_column_with_identity() to
   implement a categorical identity column. for example:
# create a categorical output for input "feature_name_from_input_fn",
# which must be of integer type. value is expected to be >= 0 and < num_buckets
identity_feature_column = tf.feature_column.categorical_column_with_identity(
    key='feature_name_from_input_fn',
    num_buckets=4) # values [0, 4)

# the 'feature_name_from_input_fn' above needs to match an integer key that is
# returned from input_fn (see below). so for this case, 'integer_1' or
# 'integer_2' would be valid strings instead of 'feature_name_from_input_fn'.
# for more information, please check out part 1 of this blog series.
def input_fn():
    ...<code>...
    return ({ 'integer_1':[values], ..<etc>.., 'integer_2':[values] },
            [label_values])

categorical vocabulary column

   we cannot input strings directly to a model. instead, we must first map
   strings to numeric or categorical values. categorical vocabulary
   columns provide a good way to represent strings as a one-hot vector.
   for example:
   [17][6.jpg]

figure 6. mapping string values to vocabulary columns.

   as you can see, categorical vocabulary columns are kind of an enum
   version of categorical identity columns. tensorflow provides two
   different functions to create categorical vocabulary columns:
     * [18]tf.feature_column.categorical_column_with_vocabulary_list()
     * [19]tf.feature_column.categorical_column_with_vocabulary_file()

   the [20]tf.feature_column.categorical_column_with_vocabulary_list()
   function maps each string to an integer based on an explicit vocabulary
   list. for example:
# given input "feature_name_from_input_fn" which is a string,
# create a categorical feature to our model by mapping the input to one of
# the elements in the vocabulary list.
vocabulary_feature_column =
    tf.feature_column.categorical_column_with_vocabulary_list(
        key="feature_name_from_input_fn",
        vocabulary_list=["kitchenware", "electronics", "sports"])

   the preceding function has a significant drawback; namely, there's way
   too much typing when the vocabulary list is long. for these cases, call
   [21]tf.feature_column.categorical_column_with_vocabulary_file()
   instead, which lets you place the vocabulary words in a separate file.
   for example:
# given input "feature_name_from_input_fn" which is a string,
# create a categorical feature to our model by mapping the input to one of
# the elements in the vocabulary file
vocabulary_feature_column =
    tf.feature_column.categorical_column_with_vocabulary_file(
        key="feature_name_from_input_fn",
        vocabulary_file="product_class.txt",
        vocabulary_size=3)

# product_class.txt should have one line for vocabulary element, in our case:
kitchenware
electronics
sports

using hash buckets to limit categories

   so far, we've worked with a naively small number of categories. for
   example, our product_class example has only 3 categories. often though,
   the number of categories can be so big that it's not possible to have
   individual categories for each vocabulary word or integer because that
   would consume too much memory. for these cases, we can instead turn the
   question around and ask, "how many categories am i willing to have for
   my input?" in fact, the
   [22]tf.feature_column.categorical_column_with_hash_buckets() function
   enables you to specify the number of categories. for example, the
   following code shows how this function calculates a hash value of the
   input, then puts it into one of the hash_bucket_size categories using
   the modulo operator:
# create categorical output for input "feature_name_from_input_fn".
# category becomes: hash_value("feature_name_from_input_fn") % hash_bucket_size
hashed_feature_column =
    tf.feature_column.categorical_column_with_hash_bucket(
        key = "feature_name_from_input_fn",
        hash_buckets_size = 100) # the number of categories

   at this point, you might rightfully think: "this is crazy!" after all,
   we are forcing the different input values to a smaller set of
   categories. this means that two, probably completely unrelated inputs,
   will be mapped to the same category, and consequently mean the same
   thing to the neural network. figure 7 illustrates this dilemma, showing
   that kitchenware and sports both get assigned to category (hash bucket)
   12:
   [23][7.jpg]

figure 7. representing data in hash buckets.

   as with many counterintuitive phenomena in machine learning, it turns
   out that hashing often works well in practice. that's because hash
   categories provide the model with some separation. the model can use
   additional features to further separate kitchenware from sports.

feature crosses

   the last categorical column we'll cover allows us to combine multiple
   input features into a single one. combining features, better known as
   [24]feature crosses, enables the model to learn separate weights
   specifically for whatever that feature combination means.

   more concretely, suppose we want our model to calculate real estate
   prices in atlanta, ga. real-estate prices within this city vary greatly
   depending on location. representing latitude and longitude as separate
   features isn't very useful in identifying real-estate location
   dependencies; however, crossing latitude and longitude into a single
   feature can pinpoint locations. suppose we represent atlanta as a grid
   of 100x100 rectangular sections, identifying each of the 10,000
   sections by a cross of its latitude and longitude. this cross enables
   the model to pick up on pricing conditions related to each individual
   section, which is a much stronger signal than latitude and longitude
   alone.

   figure 8 shows our plan, with the latitude & longitude values for the
   corners of the city:
   [25][image7.jpg]

figure 8. map of atlanta. imagine this map divided into 10,000 sections of
equal size.

   for the solution, we used a combination of some feature columns we've
   looked at before, as well as the
   [26]tf.feature_columns.crossed_column() function.
# in our input_fn, we convert input longitude and latitude to integer values
# in the range [0, 100)
def input_fn():
    # using datasets, read the input values for longitude and latitude
    latitude = ...   # a tf.float32 value
    longitude = ...  # a tf.float32 value

    # in our example we just return our lat_int, long_int features.
    # the dictionary of a complete program would probably have more keys.
    return { "latitude": latitude, "longitude": longitude, ...}, labels

# as can be see from the map, we want to split the latitude range
# [33.641336, 33.887157] into 100 buckets. to do this we use np.linspace
# to get a list of 99 numbers between min and max of this range.
# using this list we can bucketize latitude into 100 buckets.
latitude_buckets = list(np.linspace(33.641336, 33.887157, 99))
latitude_fc = tf.feature_column.bucketized_column(
    tf.feature_column.numeric_column('latitude'),
    latitude_buckets)

# do the same bucketization for longitude as done for latitude.
longitude_buckets = list(np.linspace(-84.558798, -84.287259, 99))
longitude_fc = tf.feature_column.bucketized_column(
    tf.feature_column.numeric_column('longitude'), longitude_buckets)

# create a feature cross of fc_longitude x fc_latitude.
fc_san_francisco_boxed = tf.feature_column.crossed_column(
    keys=[latitude_fc, longitude_fc],
    hash_bucket_size=1000) # no precise rule, maybe 1000 buckets will be good?

   you may create a feature cross from either of the following:
     * feature names; that is, names from the dict returned from input_fn.
     * any categorical column (see figure 3), except
       categorical_column_with_hash_bucket.

   when feature columns latitude_fc and longitude_fc are crossed,
   tensorflow will create 10,000 combinations of (latitude_fc,
   longitude_fc) organized as follows:
(0,0),(0,1)...  (0,99)
(1,0),(1,1)...  (1,99)
   ,    ,          ...
(99,0),(99,1)...(99, 99)

   the function tf.feature_column.crossed_column performs a hash
   calculation on these combinations and then slots the result into a
   category by performing a modulo operation with hash_bucket_size. as
   discussed before, performing the hash and modulo function will probably
   result in category collisions; that is, multiple (latitude, longitude)
   feature crosses will end up in the same hash bucket. in practice
   though, performing feature crosses still provides significant value to
   the learning capability of your models.

   somewhat counterintuitively, when creating feature crosses, you
   typically still should include the original (uncrossed) features in
   your model. for example, provide not only the (latitude, longitude)
   feature cross but also latitude and longitude as separate features. the
   separate latitude and longitude features help the model separate the
   contents of hash buckets containing different feature crosses.

   see [27]this link for a full code example for this. also, the reference
   section at the end of this post for lots more examples of feature
   crossing.

indicator and embedding columns

   indicator columns and embedding columns never work on features
   directly, but instead take categorical columns as input.

   when using an indicator column, we're telling tensorflow to do exactly
   what we've seen in our categorical product_class example. that is, an
   indicator column treats each category as an element in a [28]one-hot
   vector, where the matching category has value 1 and the rest have 0s:
   [29][6.jpg]

figure 9. representing data in indicator columns.

   here's how you create an [30]indicator column:
categorical_column = ... # create any type of categorical column, see figure 3

# represent the categorical column as an indicator column.
# this means creating a one-hot vector with one element for each category.
indicator_column = tf.feature_column.indicator_column(categorical_column)

   now, suppose instead of having just three possible classes, we have a
   million. or maybe a billion. for a number of reasons (too technical to
   cover here), as the number of categories grow large, it becomes
   infeasible to train a neural network using indicator columns.

   we can use an embedding column to overcome this limitation. instead of
   representing the data as a one-hot vector of many dimensions, an
   embedding column represents that data as a lower-dimensional, ordinary
   vector in which each cell can contain any number, not just 0 or 1. by
   permitting a richer palette of numbers for every cell, an embedding
   column contains far fewer cells than an indicator column.

   let's look at an example comparing indicator and embedding columns.
   suppose our input examples consists of different words from a limited
   palette of only 81 words. further suppose that the data set provides
   the following input words in 4 separate examples:
     * "dog"
     * "spoon"
     * "scissors"
     * "guitar"

   in that case, figure 10 illustrates the processing path for embedding
   columns or indicator columns.
   [31][image9.jpg]

figure 10. an embedding column stores categorical data in a lower-dimensional
vector than an indicator column. (we just placed random numbers into the
embedding vectors; training determines the actual numbers.)

   when an example is processed, one of the categorical_column_with...
   functions maps the example string to a numerical categorical value. for
   example, a function maps "spoon" to [32]. (the 32 comes from our
   imagination   the actual values depend on the mapping function.) you may
   then represent these numerical categorical values in either of the
   following two ways:
     * as an indicator column. a function converts each numeric
       categorical value into an 81-element vector (because our palette
       consists of 81 words), placing a 1 in the index of the categorical
       value (0, 32, 79, 80) and a 0 in all the other positions.
     * as an embedding column. a function uses the numerical categorical
       values (0, 32, 79, 80) as indices to a lookup table. each slot in
       that lookup table contains a 3-element vector.

   how do the values in the embeddings vectors magically get assigned?
   actually, the assignments happen during training. that is, the model
   learns the best way to map your input numeric categorical values to the
   embeddings vector value in order to solve your problem. embedding
   columns increase your model's capabilities, since an embeddings vector
   learns new relationships between categories from the training data.

   why is the embedding vector size 3 in our example? well, the following
   "formula" provides a general rule of thumb about the number of
   embedding dimensions:
embedding_dimensions =  number_of_categories**0.25

   that is, the embedding vector dimension should be the 4th root of the
   number of categories. since our vocabulary size in this example is 81,
   the recommended number of dimensions is 3:
3 =  81**0.25

   note that this is just a general guideline; you can set the number of
   embedding dimensions as you please.

   call [32]tf.feature_column.embedding_column to create an
   [33]embedding_column. the dimension of the embedding vector depends on
   the problem at hand as described above, but common values go as low as
   3 all the way to 300 or even beyond:
categorical_column = ... # create any categorical column shown in figure 3.

# represent the categorical column as an embedding column.
# this means creating a one-hot vector with one element for each category.
embedding_column = tf.feature_column.embedding_column(
    categorical_column=categorical_column,
    dimension=dimension_of_embedding_vector)

   embeddings is a big topic within machine learning. this information was
   just to get you started using them as feature columns. please see the
   end of this post for more information.

passing feature columns to estimators

   still there? i hope so, because we only have a tiny bit left before
   you've graduated from the basics of feature columns.

   as we saw in [34]figure 1, feature columns map your input data
   (described by the feature dictionary returned from input_fn) to values
   fed to your model. you specify feature columns as a list to a
   feature_columns argument of an estimator. note that the feature_columns
   argument(s) vary depending on the estimator:
     * [35]linearclassifier and [36]linearregressor:
          + accept all types of feature column.
     * [37]dnnclassifier and [38]dnnregressor:
          + only accept dense columns, see figure 3. other column types
            must be wrapped in either an indicator_column or
            embedding_column as described earlier.
     * [39]dnnlinearcombinedclassifier and [40]dnnlinearcombinedregressor:
          + the linear_feature_columns argument can accept any column
            type, like the linearclassifier and linearregressor above.
          + the dnn_feature_columns argument however is limited to dense
            columns, like dnnclassifier and dnnregressor above.

   the reason for the above rules are beyond the scope of this
   introductory post, but we will make sure to cover it in a future
   blogpost.

summary

   use feature columns to map your input data to the representations you
   feed your model. we only used numeric_column in [41]part 1 of this
   series , but working with the other functions described in this post,
   you can easily create other feature columns.

   for more details on feature columns, be sure to check out:
     * josh gordon's [42]video on feature engineering
     * and from the same author, a [43]jupyter notebook
     * the tensorflow - [44]wide & deep tutorial
     * [45]examples of dnns and linear models that use feature columns

   if you want to learn more about embeddings:
     * [46]deep learning, nlp, and representations (colah's blog)
     * and checkout the tensorflow [47]embedding projector

   share on twitter share on facebook

   [48]google
   labels: [49]datasets , [50]estimators , [51]tensorflow

4 comments :

    1. [52]bob smith[53]november 20, 2017 at 8:03 pm
       looks like the example jupyter notebook works in colaboratory with
       tensorflow 1.4; no installation or git checkout required --
       [54]https://colab.research.google.com/notebook#fileid=1qhsnbh-wjvgz
       jqjf8u974msol_vagmes
       the external images are missing, but all the code seems to work.
       reply[55]delete
       replies
            reply
    2. [56]windmaple[57]november 21, 2017 at 1:07 am
       great article!
       reply[58]delete
       replies
            reply
    3. [59]nyamukkurus[60]november 26, 2017 at 7:40 am
       owh yeah, thanks feature columns
       [61]download game android gratis
       reply[62]delete
       replies
            reply
    4. [63]antoine merval[64]november 28, 2017 at 2:10 pm
       interesting post. i find the feature crosses (which is equivalent
       to what is usually called factor interaction in more classical
       classification methods such as id28) and hash
       buckets (akin to a 'random-ish grouping') particularly interesting.
       computing interaction terms is not new but it was somewhat limited
       before the advent of deep learning. now we can afford to create a
       variable with, say, 10 thousands levels as in this example!
       however i am surprised by the comments on the bucketised columns
       -that using n weights instead of one creates a richer model. my
       first remark would be that in most cases you have to decide on the
       buckets definition in an arbitrary manner (or, at best, using
       knowledge and intuition about the case). but imagine that in your
       example there was a 'real' underlying grouping of years say, over
       the period 1970-1990, that affects the target. then your
       configuration would struggle to capture it!
       what's more, this method increases the number of input since you're
       creating indicators per level of the bucketised variable. but
       because neural nets are a highly non-linear model -able to capture
       non linear relations- it seems nothing prevents us from simply
       defining one 'numerical' variable (with a finite number of values).
       yes, there would be only one weight associated to this variable,
       but one weight per unit! this is thanks to the large number of
       units that the non linear
       relation will be captured. and note that this apply to categorical
       variables in general.
       last, bucketising numeric variables can have an adverse effect as
       well if the true, underlying effect of the variable on the target
       is actually continuous (say in your example that prices do go up
       every year). by bucketising the variable you will end up averaging
       the effects over the year that are grouped together (like
       transforming a linear function to a step one) and lose some
       accuracy. and again, if the true relation is non-linear, the neural
       model is supposed to be
       able to capture it anyway.
       at the end of the day, the answer is probably that there is no true
       answer. the only option is to try several configurations
       with variables bucketised or not and keep the best model!
       reply[65]delete
       replies
            reply

   add comment
   load more...

   [66]    [67]    [68]   

   ____________________
   [ncccficb87qzqmia5fsjfoui0zmnmrvipu1ormhquxgtxusaccflxjqblbln4uoafglw8b
   katws5ec6cbebwvcshbiivxbkgqrcvbadii4uktabsesvgwgb9ezht3+tnwyo0qa9soiytv
   aqyaqdjhawwemecaaaaasuvork5cyii=]

labels

      
     * [69].app
     * [70].dev
     * [71]#aiy
     * [72]#devfest18 #devfeststories #gdg #googledevelopers #developers
       #community
     * [73]#freeandopen
     * [74]#googleplay #androiddevstory #playstore #developerconsole
       #storelistingexperiments
     * [75]#growwithgoogle
     * [76]#io12
     * [77]#io13
     * [78]#io14
     * [79]#io15
     * [80]#io16
     * [81]#io17
     * [82]#io18
     * [83]#io2012
     * [84]#io2013
     * [85]#io2014
     * [86]+1
     * [87]20% project
     * [88]3d
     * [89]3d face mesh
     * [90]about.com
     * [91]accelerator
     * [92]accessibility
     * [93]actions
     * [94]actions on google
     * [95]actionsongoogle
     * [96]activity
     * [97]administrative apis
     * [98]admob
     * [99]adobe
     * [100]ads
     * [101]adsense
     * [102]advanced
     * [103]advogato
     * [104]adwords
     * [105]africa
     * [106]agency program
     * [107]agpl
     * [108]ai
     * [109]ai principles
     * [110]aiy
     * [111]aiy projects
     * [112]aiyprojects
     * [113]ajax
     * [114]ajax apis
     * [115]ajax search
     * [116]ajax search books news apis
     * [117]all for good
     * [118]amarok
     * [119]amp
     * [120]amp cache
     * [121]analytics
     * [122]and assistant
     * [123]android
     * [124]android developer certification
     * [125]android developers
     * [126]android development
     * [127]android studio
     * [128]android things
     * [129]android wear
     * [130]animation
     * [131]announcement
     * [132]announcements
     * [133]apache
     * [134]api
     * [135]api.ai
     * [136]apis
     * [137]apis console
     * [138]apis explorer
     * [139]apis. charts
     * [140]app
     * [141]app design
     * [142]app dev
     * [143]app development
     * [144]app engine
     * [145]app indexing
     * [146]app indexing api
     * [147]app invites
     * [148]apple
     * [149]application development
     * [150]apps
     * [151]apps script
     * [152]ar
     * [153]arcore
     * [154]area 120
     * [155]artifact management
     * [156]artificial intelligence
     * [157]asia
     * [158]assistant
     * [159]atom publishing protocol
     * [160]audio
     * [161]augmented images
     * [162]augmented reality
     * [163]australia
     * [164]auth
     * [165]authentication
     * [166]authsub
     * [167]automatic id103
     * [168]awards
     * [169]axsjax
     * [170]barcodes
     * [171]beacon
     * [172]beacons
     * [173]belarus
     * [174]bespin
     * [175]best practices
     * [176]beta
     * [177]bigquery
     * [178]bitcoin
     * [179]blockly
     * [180]blogger
     * [181]book search
     * [182]books api
     * [183]bootcamp
     * [184]brazil
     * [185]british english
     * [186]brotli
     * [187]browser
     * [188]build out
     * [189]building ajax apps
     * [190]buildout
     * [191]bulgaria
     * [192]business
     * [193]buzz
     * [194]c++
     * [195]cache
     * [196]caja
     * [197]caldav
     * [198]calendar
     * [199]camino
     * [200]campfire one
     * [201]caption
     * [202]cardboard
     * [203]carddav
     * [204]cast
     * [205]certification
     * [206]certification award
     * [207]channel
     * [208]chinese
     * [209]chrome
     * [210]chrome apps
     * [211]chrome dev summit
     * [212]chrome devtools
     * [213]chrome experiment
     * [214]chrome extensions
     * [215]chrome os
     * [216]chrome web store
     * [217]chromecast
     * [218]chromium
     * [219]chronoscope
     * [220]cifs
     * [221]classes
     * [222]classroom api
     * [223]client libraries
     * [224]closure tools
     * [225]cloud
     * [226]cloud anchor
     * [227]cloud datastore
     * [228]cloud functions for firebase
     * [229]cloud next
     * [230]cloud platform
     * [231]cloud portability
     * [232]cloud services
     * [233]cloud sql
     * [234]cloud storage
     * [235]cms
     * [236]coca cola
     * [237]cocoapods
     * [238]code for educators
     * [239]code jam
     * [240]code review
     * [241]code-in
     * [242]codeedu
     * [243]codelabs
     * [244]coffee with a googler
     * [245]colaboratory
     * [246]collada
     * [247]color
     * [248]colt mcanlis
     * [249]commerce
     * [250]community
     * [251]community connectors
     * [252]competition
     * [253]compilers
     * [254]compression
     * [255]compressorhead
     * [256]id161
     * [257]computing heritage
     * [258]conferences
     * [259]contacts api
     * [260]containers
     * [261]contest
     * [262]contextual gadgets
     * [263]conversation design
     * [264]conversations
     * [265]coral
     * [266]core ml
     * [267]couchdb
     * [268]countdown to i/o 2012
     * [269]courses
     * [270]cpu
     * [271]crash course
     * [272]crash reporting
     * [273]crashlytics
     * [274]creative commons
     * [275]cricket
     * [276]crisis response
     * [277]croatia
     * [278]cryptocurrency
     * [279]cryptography
     * [280]css
     * [281]css3
     * [282]custom search
     * [283]custom search api
     * [284]czechia
     * [285]danish linux forum
     * [286]dart
     * [287]data compression
     * [288]data visualization
     * [289]database
     * [290]databases
     * [291]dataset
     * [292]datasets
     * [293]datastore
     * [294]dataviz
     * [295]daydream
     * [296]deprecation
     * [297]design
     * [298]devart
     * [299]develop
     * [300]developer
     * [301]developer communities
     * [302]developer expert
     * [303]developer features
     * [304]developer keynote
     * [305]developer relations
     * [306]developers
     * [307]developers. meetup
     * [308]devfest
     * [309]devfest developer chrome maps social wave apps
     * [310]devfest18
     * [311]devfeststories
     * [312]dfp
     * [313]dialogflow
     * [314]discovery service
     * [315]diversity
     * [316]django
     * [317]dns
     * [318]do-it-yourself
     * [319]docker
     * [320]docs
     * [321]documentation
     * [322]documents list api
     * [323]dojo
     * [324]domains
     * [325]doodles
     * [326]dot net
     * [327]doubleclick
     * [328]dreamweaver
     * [329]drive
     * [330]drupal
     * [331]dynamic links
     * [332]earn
     * [333]earth
     * [334]eclipse
     * [335]eclipsecon
     * [336]eddystone
     * [337]edge tpu
     * [338]edge tpu accelerator
     * [339]edge tpu dev board
     * [340]educatio
     * [341]education
     * [342]email
     * [343]emea
     * [344]endpoints
     * [345]enterprise
     * [346]entrepreneurs
     * [347]estimator
     * [348]estimators
     * [349]estonia
     * [350]ethics
     * [351]europe
     * [352]event
     * [353]events
     * [354]evolution
     * [355]execution api
     * [356]extensions
     * [357]fabric
     * [358]fairness
     * [359]fairness in machine learning
     * [360]faster web
     * [361]fcm
     * [362]featured
     * [363]feeds
     * [364]finance
     * [365]fintech
     * [366]firebase
     * [367]firebase analytics
     * [368]firebase cloud messaging
     * [369]firebase dynamic links
     * [370]firebug
     * [371]firefox
     * [372]firestore
     * [373]firevox
     * [374]firstbeta
     * [375]fitness
     * [376]flutter
     * [377]flutter 1.2
     * [378]flutter live
     * [379]flutter release preview 1
     * [380]flutter release preview 2
     * [381]font api
     * [382]fonts
     * [383]fosdem
     * [384]freebsd
     * [385]freenet
     * [386]fridaygram
     * [387]fusion tables
     * [388]g suite
     * [389]g+
     * [390]gadgets
     * [391]game developers conference
     * [392]games
     * [393]gaming
     * [394]gcc
     * [395]gci
     * [396]gcp
     * [397]gda
     * [398]gdata
     * [399]gdc17
     * [400]gdd
     * [401]gdd07
     * [402]gdd08
     * [403]gdd09
     * [404]gdd11
     * [405]gde
     * [406]gdg
     * [407]gdl
     * [408]gdl weekly
     * [409]gears
     * [410]geo
     * [411]geolocation
     * [412]geoserver
     * [413]getpaid
     * [414]ghop
     * [415]git
     * [416]github
     * [417]gke
     * [418]gmail
     * [419]gmail apis
     * [420]gmtc
     * [421]gnome
     * [422]gnome women's summer outreach program
     * [423]go
     * [424]goo.gl
     * [425]google
     * [426]google ai
     * [427]google apis
     * [428]google apps
     * [429]google apps api
     * [430]google apps for your domain
     * [431]google apps marketplace
     * [432]google ar
     * [433]google assistant
     * [434]google assistant sdk
     * [435]google brain
     * [436]google buzz
     * [437]google cast
     * [438]google chart api
     * [439]google checkout
     * [440]google chrome
     * [441]google cloud
     * [442]google cloud messaging
     * [443]google cloud platform
     * [444]google cloud storage
     * [445]google code
     * [446]google code project hosting
     * [447]google code search
     * [448]google code university
     * [449]google compute engine
     * [450]google coral
     * [451]google data apis
     * [452]google data protocol
     * [453]google data studio
     * [454]google developer day
     * [455]google developer days
     * [456]google developer scholarship
     * [457]google developers
     * [458]google developers academy
     * [459]google developers certification
     * [460]google developers community groups
     * [461]google developers groups
     * [462]google developers live
     * [463]google developers site
     * [464]google developers university consortium
     * [465]google docs
     * [466]google docs api
     * [467]google doctype
     * [468]google domains
     * [469]google drive
     * [470]google drive sdk
     * [471]google earth
     * [472]google fit
     * [473]google fonts
     * [474]google friend connect
     * [475]google gadgets
     * [476]google gears
     * [477]google grants
     * [478]google groups settings
     * [479]google health
     * [480]google i/o
     * [481]google identity platform
     * [482]google in asia
     * [483]google io
     * [484]google maps
     * [485]google maps platform
     * [486]google mashup editor
     * [487]google noto fonts
     * [488]google photos
     * [489]google platform
     * [490]google play
     * [491]google play developer api
     * [492]google play services
     * [493]google registry
     * [494]google scholarships
     * [495]google science fair
     * [496]google sheets
     * [497]google sheets api
     * [498]google slides
     * [499]google slides api
     * [500]google space
     * [501]google spreadsheets api
     * [502]google storage
     * [503]google summer of code
     * [504]google tech talk
     * [505]google technology
     * [506]google technoloy user groups
     * [507]google tv
     * [508]google visualization api
     * [509]google wallet
     * [510]google wave
     * [511]google web elements
     * [512]google web toolkit
     * [513]google.org
     * [514]google+
     * [515]googleassistant
     * [516]googlecast
     * [517]googledevelopers
     * [518]googleio
     * [519]googlenew
     * [520]googleplay
     * [521]googlewebelements googleio
     * [522]gpe
     * [523]gpgs c++ games
     * [524]gpt
     * [525]green linux
     * [526]groups api
     * [527]grow
     * [528]grow with google
     * [529]gsoc
     * [530]gsuite
     * [531]gtags
     * [532]gtug
     * [533]guest post
     * [534]guice
     * [535]gulp
     * [536]gwsop
     * [537]gwt
     * [538]gzip
     * [539]hackathon
     * [540]hacking
     * [541]hackthon
     * [542]hamilton
     * [543]hangouts
     * [544]hangouts chat
     * [545]hangouts chat api
     * [546]haproxy
     * [547]hg
     * [548]hibernate
     * [549]howto
     * [550]hpux
     * [551]html
     * [552]html5
     * [553]http
     * [554]i/o
     * [555]i/o 17
     * [556]i/o 2017
     * [557]i/o extended
     * [558]i/o live
     * [559]ical
     * [560]identity
     * [561]ietf
     * [562]ignite
     * [563]igoogle
     * [564]iguanas
     * [565]iiw
     * [566]image compression
     * [567]image search
     * [568]imara
     * [569]in-app billing
     * [570]in-app payments
     * [571]in-app purchase
     * [572]incubator
     * [573]india
     * [574]indie
     * [575]indie games accelerator
     * [576]information visualization
     * [577]intelligentwire
     * [578]interactive music
     * [579]internationalization
     * [580]internet explorer
     * [581]internet of things
     * [582]interviews
     * [583]io17
     * [584]io18
     * [585]io2017
     * [586]ios
     * [587]ios sdk
     * [588]iot
     * [589]ipad
     * [590]iphone
     * [591]iphone development
     * [592]israel
     * [593]issue tracker
     * [594]jaiku
     * [595]japanese
     * [596]java
     * [597]javascript
     * [598]jetpack
     * [599]joomla
     * [600]joomladayus2007
     * [601]joomladayusa
     * [602]json
     * [603]karaoke
     * [604]kde
     * [605]kde 4.0
     * [606]keras
     * [607]kernel
     * [608]kernel summit
     * [609]keynote
     * [610]khronos
     * [611]kids
     * [612]kids coding
     * [613]kids coding team
     * [614]kml
     * [615]korean
     * [616]krakow
     * [617]kubernetes
     * [618]labs
     * [619]lanchpad
     * [620]languages
     * [621]latam accelerator
     * [622]latam startups
     * [623]latitude
     * [624]latvia
     * [625]launch
     * [626]launchpad
     * [627]launchpad accelerator
     * [628]launchpad studio
     * [629]lca
     * [630]leadership
     * [631]learning
     * [632]lens
     * [633]lessons
     * [634]licenses
     * [635]linux
     * [636]linux foundation
     * [637]linux summit
     * [638]linux virtual server
     * [639]linuxconf eu
     * [640]lithuania
     * [641]localization
     * [642]loco
     * [643]london
     * [644]mac
     * [645]macfuse
     * [646]machine
     * [647]machine intelligence
     * [648]machine learning
     * [649]machine learning accelerator
     * [650]maker
     * [651]makers
     * [652]malware
     * [653]maps
     * [654]maps apis
     * [655]marketplace
     * [656]material
     * [657]material components
     * [658]material design
     * [659]mdl
     * [660]meetup
     * [661]mercurial
     * [662]mexico startups
     * [663]mit csail
     * [664]mit media lab
     * [665]ml
     * [666]ml kit
     * [667]mlcc
     * [668]mobile
     * [669]mobile app development
     * [670]mobile design
     * [671]mobile development
     * [672]mobile performance
     * [673]mobile sites
     * [674]mobile speed
     * [675]mobile ux
     * [676]mobile web
     * [677]mobile world congress
     * [678]mod_pagespeed
     * [679]moderator
     * [680]monetize
     * [681]mooc
     * [682]mozilla
     * [683]mylar
     * [684]myspace
     * [685]mysql
     * [686]mythtv
     * [687]named
     * [688]narratives
     * [689]native ads
     * [690]native client
     * [691]nearby
     * [692]netbsd
     * [693]non-profit
     * [694]nonsense
     * [695]nosql
     * [696]notifications
     * [697]noto serif cjk
     * [698]nss
     * [699]nvidia
     * [700]o3d
     * [701]oauth
     * [702]oauth playground
     * [703]oauth2
     * [704]objective-c
     * [705]ocaml
     * [706]ocr
     * [707]odf
     * [708]office hours
     * [709]oha
     * [710]ooxml
     * [711]open data
     * [712]open source
     * [713]open source blog
     * [714]open source releases
     * [715]open web
     * [716]openajax alliance
     * [717]opengl
     * [718]openid
     * [719]opensocial
     * [720]openssh
     * [721]openssl
     * [722]optimization
     * [723]oreilly
     * [724]orkut
     * [725]oscon
     * [726]oscon2007
     * [727]osi
     * [728]oss devs
     * [729]ossjam
     * [730]osx
     * [731]pactester
     * [732]page speed
     * [733]pagespeed
     * [734]palette
     * [735]payments
     * [736]peer bonus program
     * [737]performance
     * [738]phone
     * [739]photos
     * [740]picasa
     * [741]picasa web
     * [742]places api
     * [743]play services
     * [744]playground
     * [745]plone
     * [746]plone sprint
     * [747]podcast
     * [748]poland
     * [749]poly
     * [750]polymer
     * [751]polymer summit
     * [752]portugal
     * [753]posix
     * [754]powermeter api
     * [755]prediction api
     * [756]preview
     * [757]prizes
     * [758]programming
     * [759]progressive web app
     * [760]project hosting
     * [761]project loon
     * [762]project tango
     * [763]prototype
     * [764]proximity
     * [765]pubsubhubbub
     * [766]pwa
     * [767]py3k
     * [768]python
     * [769]python sprint
     * [770]rails
     * [771]random hacks of kindness
     * [772]rasberry pi
     * [773]reader
     * [774]releases
     * [775]remote config
     * [776]research
     * [777]reserve seats
     * [778]responsible ai
     * [779]result snippets
     * [780]reto meier
     * [781]rewarded ads
     * [782]rewarded video ads
     * [783]rhino
     * [784]saatchi
     * [785]safety & security
     * [786]safety and security
     * [787]salesforce
     * [788]samba
     * [789]sample dialogs
     * [790]sandbox
     * [791]santa tracker
     * [792]scalability
     * [793]scale-ups
     * [794]sceneform
     * [795]schedule
     * [796]scholarship
     * [797]scholarships
     * [798]scratch
     * [799]screencast
     * [800]sdk
     * [801]sdks
     * [802]search
     * [803]security
     * [804]serbia
     * [805]serif
     * [806]service worker
     * [807]sessions
     * [808]seurat
     * [809]shape
     * [810]sheets api
     * [811]shindig
     * [812]shopping
     * [813]shoreline amphitheatre
     * [814]showcase
     * [815]sidewiki
     * [816]sign-in
     * [817]silverstripe
     * [818]simd
     * [819]sitemaps
     * [820]sites api
     * [821]sixapart
     * [822]sketchup
     * [823]slides api
     * [824]small business
     * [825]small businesses
     * [826]smart lock for passwords
     * [827]soap search api
     * [828]soc
     * [829]social
     * [830]social graph
     * [831]solaris
     * [832]souders
     * [833]spa2007
     * [834]space
     * [835]spdy
     * [836]speakers
     * [837]speech
     * [838]speed
     * [839]speed tracer
     * [840]stable release
     * [841]standards
     * [842]startup
     * [843]startup accelerator
     * [844]startups
     * [845]stem
     * [846]storage
     * [847]street view
     * [848]student programs
     * [849]students
     * [850]stuff
     * [851]style
     * [852]subscribed links
     * [853]subscription
     * [854]subversion
     * [855]summer of code
     * [856]sundar pichai
     * [857]svg
     * [858]sxsw
     * [859]syndication
     * [860]tasks api
     * [861]team drives (new)
     * [862]techmakers
     * [863]templates
     * [864]tensorflow
     * [865]tensorflow dev summit
     * [866]tensorflow lite
     * [867]tensorflow research cloud
     * [868]tensorrt
     * [869]test lab
     * [870]testing
     * [871]text embedding models
     * [872]tfdevsummit
     * [873]tflite
     * [874]themes
     * [875]thought leadership
     * [876]tool
     * [877]tools
     * [878]topp
     * [879]tpu
     * [880]training
     * [881]tranparency
     * [882]transit
     * [883]translate
     * [884]translation
     * [885]tutorials
     * [886]tv
     * [887]ubiquitous computing
     * [888]ubiquity
     * [889]ubucon
     * [890]ubuntu
     * [891]udacity
     * [892]ui
     * [893]ukraine
     * [894]unicode
     * [895]unit test
     * [896]unity
     * [897]universal
     * [898]universal app campaigns
     * [899]university
     * [900]unix
     * [901]url
     * [902]url shortener
     * [903]urls
     * [904]ux
     * [905]video
     * [906]videos
     * [907]vim
     * [908]virtual keyboard
     * [909]virtual reality
     * [910]visualization
     * [911]voice
     * [912]voice kit
     * [913]voice user interface
     * [914]vr
     * [915]vui
     * [916]wattpad
     * [917]wearables
     * [918]weave
     * [919]web
     * [920]web animations api
     * [921]web apps
     * [922]web components
     * [923]web design
     * [924]web designer
     * [925]web development
     * [926]web exponents
     * [927]web fonts
     * [928]web performance
     * [929]web platform docs
     * [930]web registry
     * [931]webfonts
     * [932]webgl
     * [933]webmaster
     * [934]webp
     * [935]website optimizer
     * [936]webvr
     * [937]weekly roundup
     * [938]whitehouse.gov
     * [939]who's at google i/o
     * [940]win
     * [941]windows
     * [942]windows programming
     * [943]winter of code
     * [944]women tech makers
     * [945]women techmakers
     * [946]writing
     * [947]wtm
     * [948]xauth
     * [949]yahoo
     * [950]young makers
     * [951]youtube
     * [952]zlib
     * [953]zurich
     * [954]zxing

      

archive

      
     *     [955]      [956]2019
          + [957]mar
          + [958]feb
          + [959]jan

     *     [960]      [961]2018
          + [962]dec
          + [963]nov
          + [964]oct
          + [965]sep
          + [966]aug
          + [967]jul
          + [968]jun
          + [969]may
          + [970]apr
          + [971]mar
          + [972]feb
          + [973]jan

     *     [974]      [975]2017
          + [976]dec
          + [977]nov
          + [978]oct
          + [979]sep
          + [980]aug
          + [981]jul
          + [982]jun
          + [983]may
          + [984]apr
          + [985]mar
          + [986]feb
          + [987]jan

     *     [988]      [989]2016
          + [990]dec
          + [991]nov
          + [992]oct
          + [993]sep
          + [994]aug
          + [995]jul
          + [996]jun
          + [997]may
          + [998]apr
          + [999]mar
          + [1000]feb
          + [1001]jan

     *     [1002]      [1003]2015
          + [1004]dec
          + [1005]nov
          + [1006]oct
          + [1007]sep
          + [1008]aug
          + [1009]jul
          + [1010]jun
          + [1011]may
          + [1012]apr
          + [1013]mar
          + [1014]feb

     *     [1015]      [1016]2014
          + [1017]dec
          + [1018]nov
          + [1019]oct
          + [1020]sep
          + [1021]aug
          + [1022]jul
          + [1023]jun
          + [1024]may
          + [1025]apr
          + [1026]mar
          + [1027]feb
          + [1028]jan

     *     [1029]      [1030]2013
          + [1031]dec
          + [1032]nov
          + [1033]oct
          + [1034]sep
          + [1035]aug
          + [1036]jul
          + [1037]jun
          + [1038]may
          + [1039]apr
          + [1040]mar
          + [1041]feb
          + [1042]jan

     *     [1043]      [1044]2012
          + [1045]dec
          + [1046]nov
          + [1047]oct
          + [1048]sep
          + [1049]aug
          + [1050]jul
          + [1051]jun
          + [1052]may
          + [1053]apr
          + [1054]mar
          + [1055]feb
          + [1056]jan

     *     [1057]      [1058]2011
          + [1059]dec
          + [1060]nov
          + [1061]oct
          + [1062]sep
          + [1063]aug
          + [1064]jul
          + [1065]jun
          + [1066]may
          + [1067]apr
          + [1068]mar
          + [1069]feb
          + [1070]jan

     *     [1071]      [1072]2010
          + [1073]dec
          + [1074]nov
          + [1075]oct
          + [1076]sep
          + [1077]aug
          + [1078]jul
          + [1079]jun
          + [1080]may
          + [1081]apr
          + [1082]mar
          + [1083]feb
          + [1084]jan

     *     [1085]      [1086]2009
          + [1087]dec
          + [1088]nov
          + [1089]oct
          + [1090]sep
          + [1091]aug
          + [1092]jul
          + [1093]jun
          + [1094]may
          + [1095]apr
          + [1096]mar
          + [1097]feb
          + [1098]jan

     *     [1099]      [1100]2008
          + [1101]dec
          + [1102]nov
          + [1103]oct
          + [1104]sep
          + [1105]aug
          + [1106]jul
          + [1107]jun
          + [1108]may
          + [1109]apr
          + [1110]mar
          + [1111]feb
          + [1112]jan

     *     [1113]      [1114]2007
          + [1115]dec
          + [1116]nov
          + [1117]oct
          + [1118]sep
          + [1119]aug
          + [1120]jul
          + [1121]jun
          + [1122]may
          + [1123]apr
          + [1124]mar
          + [1125]feb
          + [1126]jan

     *     [1127]      [1128]2006
          + [1129]dec
          + [1130]nov
          + [1131]oct
          + [1132]sep
          + [1133]aug
          + [1134]jul
          + [1135]jun
          + [1136]may
          + [1137]apr
          + [1138]mar
          + [1139]feb
          + [1140]jan

     *     [1141]      [1142]2005
          + [1143]dec
          + [1144]nov
          + [1145]oct
          + [1146]sep
          + [1147]aug
          + [1148]jul
          + [1149]jun
          + [1150]may
          + [1151]apr
          + [1152]mar

   [1153][feed-icon.gif] [1154]subscribe
   (button) follow @googledevs
   visit [1155]google developers for docs, event info, and more.

company-wide

     * [1156]official google blog
     * [1157]public policy blog
     * [1158]student blog

products

     * [1159]google for work blog
     * [1160]chrome blog
     * [1161]official android blog

developers

     * [1162]ads developer blog
     * [1163]android developers blog
     * [1164]developers blog

   [1165][p2daydaadwwawgawgg8fgmbgmbopbydd2cf8imaddrgoqte+e9aaaaabjru5erkj
   ggg==]
     * [1166]google
     * [1167]privacy
     * [1168]terms

references

   visible links
   1. https://developers.googleblog.com/feeds/posts/default
   2. https://developers.googleblog.com/feeds/posts/default?alt=rss
   3. https://developers.googleblog.com/feeds/9179239380754962909/comments/default
   4. https://developers.googleblog.com/
   5. https://developers.googleblog.com/2017/11/introducing-tensorflow-feature-columns.html
   6. https://developers.googleblog.com/2017/09/introducing-tensorflow-datasets.html
   7. https://2.bp.blogspot.com/-5qa9uiexmpe/wg4gyatiuyi/aaaaaaaaegk/pusio0ryqlyzmhdiiozlxyv5jxhw2ajdwclcbgas/s1600/1.jpg
   8. https://3.bp.blogspot.com/-3wf_6ben7ge/wg4giq9txdi/aaaaaaaaego/yoliiyjw1c4vh-vfp4vvjuad92rcnvphaclcbgas/s1600/2.jpg
   9. https://www.tensorflow.org/api_docs/python/tf/feature_column
  10. https://4.bp.blogspot.com/-gec5hmnhtto/wg4gsl15_mi/aaaaaaaaegs/a8idgwjnjuasspx_jriooqiykvl_ld7vwclcbgas/s1600/3.jpg
  11. https://www.tensorflow.org/api_docs/python/tf/feature_column/numeric_column
  12. https://developers.google.com/machine-learning/glossary/#bucketi
  13. https://2.bp.blogspot.com/-qrti2zubr7w/wg4g9lwhk5i/aaaaaaaaeg0/v17zqcix1wou5zrptgxaq8jmsbjckmcaaclcbgas/s1600/4.jpg
  14. https://www.tensorflow.org/api_docs/python/tf/feature_column/bucketized_column
  15. https://4.bp.blogspot.com/-cg-gexrkohm/wg4hgyfnwxi/aaaaaaaaeg4/qpzvwnap6pkxddyzuwuyp_wyorca3z7yqclcbgas/s1600/5.jpg
  16. https://www.tensorflow.org/api_docs/python/tf/feature_column/categorical_column_with_identity
  17. https://1.bp.blogspot.com/-tatyn91s0mw/wg4hvjgty6i/aaaaaaaaeg8/i0giwjh0abyswfuybfgwris0shvvgid56gclcbgas/s1600/6.jpg
  18. https://www.tensorflow.org/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list
  19. https://www.tensorflow.org/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list
  20. https://www.tensorflow.org/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list
  21. https://www.tensorflow.org/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list
  22. https://www.tensorflow.org/api_docs/python/tf/feature_column/categorical_column_with_hash_bucket
  23. https://3.bp.blogspot.com/--ihlghs0jye/wg4inl8zoyi/aaaaaaaaehi/q_wl_7jrtymgoxh__m1gag5ilyau_m4tgclcbgas/s1600/7.jpg
  24. https://developers.google.com/machine-learning/glossary/#feature_cross
  25. https://4.bp.blogspot.com/-wsg_pk_xa9k/wg4iz5twjyi/aaaaaaaaehm/-lwbysonzww05xfpru-zzedspwkcz_2caclcbgas/s1600/image7.jpg
  26. https://www.tensorflow.org/api_docs/python/tf/feature_column/crossed_column
  27. https://github.com/tensorflow/models/blob/master/samples/outreach/blogs/housing_prices.ipynb
  28. https://developers.google.com/machine-learning/glossary/#one-hot_encoding
  29. https://4.bp.blogspot.com/-w6qezq65f1o/wg4j6-f6o3i/aaaaaaaaehy/hu8xik8p854ehed8humcke5m0ni7uinsaclcbgas/s1600/6.jpg
  30. https://www.tensorflow.org/api_docs/python/tf/feature_column/indicator_column
  31. https://2.bp.blogspot.com/-q7gll9z95uy/wg4kiyrryyi/aaaaaaaaehc/bckvsxomt1m0qs79d60t2xmv1rfnsd89gclcbgas/s1600/image9.jpg
  32. https://www.tensorflow.org/api_docs/python/tf/feature_column/embedding_column
  33. https://www.tensorflow.org/api_docs/python/tf/feature_column/embedding_column
  34. https://docs.google.com/document/d/1n33tzxsakutyvj7ts3bppo_7fhraj0fafarp4gbt0l0/edit#heading=h.lobcevumno5r
  35. https://www.tensorflow.org/api_docs/python/tf/estimator/linearclassifier
  36. https://www.tensorflow.org/api_docs/python/tf/estimator/linearregressor
  37. https://www.tensorflow.org/api_docs/python/tf/estimator/dnnclassifier
  38. https://www.tensorflow.org/api_docs/python/tf/estimator/dnnregressor
  39. https://www.tensorflow.org/api_docs/python/tf/estimator/dnnlinearcombinedclassifier
  40. https://www.tensorflow.org/api_docs/python/tf/estimator/dnnlinearcombinedregressor
  41. https://developers.googleblog.com/2017/09/introducing-tensorflow-datasets.html
  42. https://www.youtube.com/watch?v=d12ra3b_m-0
  43. https://github.com/random-forests/tensorflow-workshop/blob/master/examples/07_structured_data.ipynb
  44. https://www.tensorflow.org/tutorials/wide_and_deep
  45. https://github.com/tensorflow/models/tree/master/samples/cookbook/regression
  46. http://colah.github.io/posts/2014-07-nlp-id56s-representations/
  47. http://projector.tensorflow.org/
  48. https://plus.google.com/112374322230920073195
  49. https://developers.googleblog.com/search/label/datasets
  50. https://developers.googleblog.com/search/label/estimators
  51. https://developers.googleblog.com/search/label/tensorflow
  52. https://www.blogger.com/profile/07876447089524658155
  53. https://developers.googleblog.com/2017/11/introducing-tensorflow-feature-columns.html?showcomment=1511237001910#c6424606491875741705
  54. https://colab.research.google.com/notebook#fileid=1qhsnbh-wjvgzjqjf8u974msol_vagmes
  55. https://www.blogger.com/delete-comment.g?blogid=596098824972435195&postid=6424606491875741705
  56. https://www.blogger.com/profile/00812875055976543364
  57. https://developers.googleblog.com/2017/11/introducing-tensorflow-feature-columns.html?showcomment=1511255260069#c4330085007963553489
  58. https://www.blogger.com/delete-comment.g?blogid=596098824972435195&postid=4330085007963553489
  59. https://www.blogger.com/profile/01968380996569329541
  60. https://developers.googleblog.com/2017/11/introducing-tensorflow-feature-columns.html?showcomment=1511710843534#c3944303712392337621
  61. http://www.nyamukkurus.org/
  62. https://www.blogger.com/delete-comment.g?blogid=596098824972435195&postid=3944303712392337621
  63. https://www.blogger.com/profile/10633093894550427972
  64. https://developers.googleblog.com/2017/11/introducing-tensorflow-feature-columns.html?showcomment=1511907046803#c7668146801439536818
  65. https://www.blogger.com/delete-comment.g?blogid=596098824972435195&postid=7668146801439536818
  66. https://developers.googleblog.com/
  67. https://developers.googleblog.com/2017/11/introducing-container-diff-tool-for.html
  68. https://developers.googleblog.com/2017/11/introducing-our-new-developer-youtube.html
  69. https://developers.googleblog.com/search/label/.app
  70. https://developers.googleblog.com/search/label/.dev
  71. https://developers.googleblog.com/search/label/#aiy
  72. https://developers.googleblog.com/search/label/#devfest18 #devfeststories #gdg #googledevelopers #developers #community
  73. https://developers.googleblog.com/search/label/#freeandopen
  74. https://developers.googleblog.com/search/label/#googleplay #androiddevstory #playstore #developerconsole #storelistingexperiments
  75. https://developers.googleblog.com/search/label/#growwithgoogle
  76. https://developers.googleblog.com/search/label/#io12
  77. https://developers.googleblog.com/search/label/#io13
  78. https://developers.googleblog.com/search/label/#io14
  79. https://developers.googleblog.com/search/label/#io15
  80. https://developers.googleblog.com/search/label/#io16
  81. https://developers.googleblog.com/search/label/#io17
  82. https://developers.googleblog.com/search/label/#io18
  83. https://developers.googleblog.com/search/label/#io2012
  84. https://developers.googleblog.com/search/label/#io2013
  85. https://developers.googleblog.com/search/label/#io2014
  86. https://developers.googleblog.com/search/label/+1
  87. https://developers.googleblog.com/search/label/20% project
  88. https://developers.googleblog.com/search/label/3d
  89. https://developers.googleblog.com/search/label/3d face mesh
  90. https://developers.googleblog.com/search/label/about.com
  91. https://developers.googleblog.com/search/label/accelerator
  92. https://developers.googleblog.com/search/label/accessibility
  93. https://developers.googleblog.com/search/label/actions
  94. https://developers.googleblog.com/search/label/actions on google
  95. https://developers.googleblog.com/search/label/actionsongoogle
  96. https://developers.googleblog.com/search/label/activity
  97. https://developers.googleblog.com/search/label/administrative apis
  98. https://developers.googleblog.com/search/label/admob
  99. https://developers.googleblog.com/search/label/adobe
 100. https://developers.googleblog.com/search/label/ads
 101. https://developers.googleblog.com/search/label/adsense
 102. https://developers.googleblog.com/search/label/advanced
 103. https://developers.googleblog.com/search/label/advogato
 104. https://developers.googleblog.com/search/label/adwords
 105. https://developers.googleblog.com/search/label/africa
 106. https://developers.googleblog.com/search/label/agency program
 107. https://developers.googleblog.com/search/label/agpl
 108. https://developers.googleblog.com/search/label/ai
 109. https://developers.googleblog.com/search/label/ai principles
 110. https://developers.googleblog.com/search/label/aiy
 111. https://developers.googleblog.com/search/label/aiy projects
 112. https://developers.googleblog.com/search/label/aiyprojects
 113. https://developers.googleblog.com/search/label/ajax
 114. https://developers.googleblog.com/search/label/ajax apis
 115. https://developers.googleblog.com/search/label/ajax search
 116. https://developers.googleblog.com/search/label/ajax search books news apis
 117. https://developers.googleblog.com/search/label/all for good
 118. https://developers.googleblog.com/search/label/amarok
 119. https://developers.googleblog.com/search/label/amp
 120. https://developers.googleblog.com/search/label/amp cache
 121. https://developers.googleblog.com/search/label/analytics
 122. https://developers.googleblog.com/search/label/and assistant
 123. https://developers.googleblog.com/search/label/android
 124. https://developers.googleblog.com/search/label/android developer certification
 125. https://developers.googleblog.com/search/label/android developers
 126. https://developers.googleblog.com/search/label/android development
 127. https://developers.googleblog.com/search/label/android studio
 128. https://developers.googleblog.com/search/label/android things
 129. https://developers.googleblog.com/search/label/android wear
 130. https://developers.googleblog.com/search/label/animation
 131. https://developers.googleblog.com/search/label/announcement
 132. https://developers.googleblog.com/search/label/announcements
 133. https://developers.googleblog.com/search/label/apache
 134. https://developers.googleblog.com/search/label/api
 135. https://developers.googleblog.com/search/label/api.ai
 136. https://developers.googleblog.com/search/label/apis
 137. https://developers.googleblog.com/search/label/apis console
 138. https://developers.googleblog.com/search/label/apis explorer
 139. https://developers.googleblog.com/search/label/apis. charts
 140. https://developers.googleblog.com/search/label/app
 141. https://developers.googleblog.com/search/label/app design
 142. https://developers.googleblog.com/search/label/app dev
 143. https://developers.googleblog.com/search/label/app development
 144. https://developers.googleblog.com/search/label/app engine
 145. https://developers.googleblog.com/search/label/app indexing
 146. https://developers.googleblog.com/search/label/app indexing api
 147. https://developers.googleblog.com/search/label/app invites
 148. https://developers.googleblog.com/search/label/apple
 149. https://developers.googleblog.com/search/label/application development
 150. https://developers.googleblog.com/search/label/apps
 151. https://developers.googleblog.com/search/label/apps script
 152. https://developers.googleblog.com/search/label/ar
 153. https://developers.googleblog.com/search/label/arcore
 154. https://developers.googleblog.com/search/label/area 120
 155. https://developers.googleblog.com/search/label/artifact management
 156. https://developers.googleblog.com/search/label/artificial intelligence
 157. https://developers.googleblog.com/search/label/asia
 158. https://developers.googleblog.com/search/label/assistant
 159. https://developers.googleblog.com/search/label/atom publishing protocol
 160. https://developers.googleblog.com/search/label/audio
 161. https://developers.googleblog.com/search/label/augmented images
 162. https://developers.googleblog.com/search/label/augmented reality
 163. https://developers.googleblog.com/search/label/australia
 164. https://developers.googleblog.com/search/label/auth
 165. https://developers.googleblog.com/search/label/authentication
 166. https://developers.googleblog.com/search/label/authsub
 167. https://developers.googleblog.com/search/label/automatic id103
 168. https://developers.googleblog.com/search/label/awards
 169. https://developers.googleblog.com/search/label/axsjax
 170. https://developers.googleblog.com/search/label/barcodes
 171. https://developers.googleblog.com/search/label/beacon
 172. https://developers.googleblog.com/search/label/beacons
 173. https://developers.googleblog.com/search/label/belarus
 174. https://developers.googleblog.com/search/label/bespin
 175. https://developers.googleblog.com/search/label/best practices
 176. https://developers.googleblog.com/search/label/beta
 177. https://developers.googleblog.com/search/label/bigquery
 178. https://developers.googleblog.com/search/label/bitcoin
 179. https://developers.googleblog.com/search/label/blockly
 180. https://developers.googleblog.com/search/label/blogger
 181. https://developers.googleblog.com/search/label/book search
 182. https://developers.googleblog.com/search/label/books api
 183. https://developers.googleblog.com/search/label/bootcamp
 184. https://developers.googleblog.com/search/label/brazil
 185. https://developers.googleblog.com/search/label/british english
 186. https://developers.googleblog.com/search/label/brotli
 187. https://developers.googleblog.com/search/label/browser
 188. https://developers.googleblog.com/search/label/build out
 189. https://developers.googleblog.com/search/label/building ajax apps
 190. https://developers.googleblog.com/search/label/buildout
 191. https://developers.googleblog.com/search/label/bulgaria
 192. https://developers.googleblog.com/search/label/business
 193. https://developers.googleblog.com/search/label/buzz
 194. https://developers.googleblog.com/search/label/c++
 195. https://developers.googleblog.com/search/label/cache
 196. https://developers.googleblog.com/search/label/caja
 197. https://developers.googleblog.com/search/label/caldav
 198. https://developers.googleblog.com/search/label/calendar
 199. https://developers.googleblog.com/search/label/camino
 200. https://developers.googleblog.com/search/label/campfire one
 201. https://developers.googleblog.com/search/label/caption
 202. https://developers.googleblog.com/search/label/cardboard
 203. https://developers.googleblog.com/search/label/carddav
 204. https://developers.googleblog.com/search/label/cast
 205. https://developers.googleblog.com/search/label/certification
 206. https://developers.googleblog.com/search/label/certification award
 207. https://developers.googleblog.com/search/label/channel
 208. https://developers.googleblog.com/search/label/chinese
 209. https://developers.googleblog.com/search/label/chrome
 210. https://developers.googleblog.com/search/label/chrome apps
 211. https://developers.googleblog.com/search/label/chrome dev summit
 212. https://developers.googleblog.com/search/label/chrome devtools
 213. https://developers.googleblog.com/search/label/chrome experiment
 214. https://developers.googleblog.com/search/label/chrome extensions
 215. https://developers.googleblog.com/search/label/chrome os
 216. https://developers.googleblog.com/search/label/chrome web store
 217. https://developers.googleblog.com/search/label/chromecast
 218. https://developers.googleblog.com/search/label/chromium
 219. https://developers.googleblog.com/search/label/chronoscope
 220. https://developers.googleblog.com/search/label/cifs
 221. https://developers.googleblog.com/search/label/classes
 222. https://developers.googleblog.com/search/label/classroom api
 223. https://developers.googleblog.com/search/label/client libraries
 224. https://developers.googleblog.com/search/label/closure tools
 225. https://developers.googleblog.com/search/label/cloud
 226. https://developers.googleblog.com/search/label/cloud anchor
 227. https://developers.googleblog.com/search/label/cloud datastore
 228. https://developers.googleblog.com/search/label/cloud functions for firebase
 229. https://developers.googleblog.com/search/label/cloud next
 230. https://developers.googleblog.com/search/label/cloud platform
 231. https://developers.googleblog.com/search/label/cloud portability
 232. https://developers.googleblog.com/search/label/cloud services
 233. https://developers.googleblog.com/search/label/cloud sql
 234. https://developers.googleblog.com/search/label/cloud storage
 235. https://developers.googleblog.com/search/label/cms
 236. https://developers.googleblog.com/search/label/coca cola
 237. https://developers.googleblog.com/search/label/cocoapods
 238. https://developers.googleblog.com/search/label/code for educators
 239. https://developers.googleblog.com/search/label/code jam
 240. https://developers.googleblog.com/search/label/code review
 241. https://developers.googleblog.com/search/label/code-in
 242. https://developers.googleblog.com/search/label/codeedu
 243. https://developers.googleblog.com/search/label/codelabs
 244. https://developers.googleblog.com/search/label/coffee with a googler
 245. https://developers.googleblog.com/search/label/colaboratory
 246. https://developers.googleblog.com/search/label/collada
 247. https://developers.googleblog.com/search/label/color
 248. https://developers.googleblog.com/search/label/colt mcanlis
 249. https://developers.googleblog.com/search/label/commerce
 250. https://developers.googleblog.com/search/label/community
 251. https://developers.googleblog.com/search/label/community connectors
 252. https://developers.googleblog.com/search/label/competition
 253. https://developers.googleblog.com/search/label/compilers
 254. https://developers.googleblog.com/search/label/compression
 255. https://developers.googleblog.com/search/label/compressorhead
 256. https://developers.googleblog.com/search/label/id161
 257. https://developers.googleblog.com/search/label/computing heritage
 258. https://developers.googleblog.com/search/label/conferences
 259. https://developers.googleblog.com/search/label/contacts api
 260. https://developers.googleblog.com/search/label/containers
 261. https://developers.googleblog.com/search/label/contest
 262. https://developers.googleblog.com/search/label/contextual gadgets
 263. https://developers.googleblog.com/search/label/conversation design
 264. https://developers.googleblog.com/search/label/conversations
 265. https://developers.googleblog.com/search/label/coral
 266. https://developers.googleblog.com/search/label/core ml
 267. https://developers.googleblog.com/search/label/couchdb
 268. https://developers.googleblog.com/search/label/countdown to i/o 2012
 269. https://developers.googleblog.com/search/label/courses
 270. https://developers.googleblog.com/search/label/cpu
 271. https://developers.googleblog.com/search/label/crash course
 272. https://developers.googleblog.com/search/label/crash reporting
 273. https://developers.googleblog.com/search/label/crashlytics
 274. https://developers.googleblog.com/search/label/creative commons
 275. https://developers.googleblog.com/search/label/cricket
 276. https://developers.googleblog.com/search/label/crisis response
 277. https://developers.googleblog.com/search/label/croatia
 278. https://developers.googleblog.com/search/label/cryptocurrency
 279. https://developers.googleblog.com/search/label/cryptography
 280. https://developers.googleblog.com/search/label/css
 281. https://developers.googleblog.com/search/label/css3
 282. https://developers.googleblog.com/search/label/custom search
 283. https://developers.googleblog.com/search/label/custom search api
 284. https://developers.googleblog.com/search/label/czechia
 285. https://developers.googleblog.com/search/label/danish linux forum
 286. https://developers.googleblog.com/search/label/dart
 287. https://developers.googleblog.com/search/label/data compression
 288. https://developers.googleblog.com/search/label/data visualization
 289. https://developers.googleblog.com/search/label/database
 290. https://developers.googleblog.com/search/label/databases
 291. https://developers.googleblog.com/search/label/dataset
 292. https://developers.googleblog.com/search/label/datasets
 293. https://developers.googleblog.com/search/label/datastore
 294. https://developers.googleblog.com/search/label/dataviz
 295. https://developers.googleblog.com/search/label/daydream
 296. https://developers.googleblog.com/search/label/deprecation
 297. https://developers.googleblog.com/search/label/design
 298. https://developers.googleblog.com/search/label/devart
 299. https://developers.googleblog.com/search/label/develop
 300. https://developers.googleblog.com/search/label/developer
 301. https://developers.googleblog.com/search/label/developer communities
 302. https://developers.googleblog.com/search/label/developer expert
 303. https://developers.googleblog.com/search/label/developer features
 304. https://developers.googleblog.com/search/label/developer keynote
 305. https://developers.googleblog.com/search/label/developer relations
 306. https://developers.googleblog.com/search/label/developers
 307. https://developers.googleblog.com/search/label/developers. meetup
 308. https://developers.googleblog.com/search/label/devfest
 309. https://developers.googleblog.com/search/label/devfest developer chrome maps social wave apps
 310. https://developers.googleblog.com/search/label/devfest18
 311. https://developers.googleblog.com/search/label/devfeststories
 312. https://developers.googleblog.com/search/label/dfp
 313. https://developers.googleblog.com/search/label/dialogflow
 314. https://developers.googleblog.com/search/label/discovery service
 315. https://developers.googleblog.com/search/label/diversity
 316. https://developers.googleblog.com/search/label/django
 317. https://developers.googleblog.com/search/label/dns
 318. https://developers.googleblog.com/search/label/do-it-yourself
 319. https://developers.googleblog.com/search/label/docker
 320. https://developers.googleblog.com/search/label/docs
 321. https://developers.googleblog.com/search/label/documentation
 322. https://developers.googleblog.com/search/label/documents list api
 323. https://developers.googleblog.com/search/label/dojo
 324. https://developers.googleblog.com/search/label/domains
 325. https://developers.googleblog.com/search/label/doodles
 326. https://developers.googleblog.com/search/label/dot net
 327. https://developers.googleblog.com/search/label/doubleclick
 328. https://developers.googleblog.com/search/label/dreamweaver
 329. https://developers.googleblog.com/search/label/drive
 330. https://developers.googleblog.com/search/label/drupal
 331. https://developers.googleblog.com/search/label/dynamic links
 332. https://developers.googleblog.com/search/label/earn
 333. https://developers.googleblog.com/search/label/earth
 334. https://developers.googleblog.com/search/label/eclipse
 335. https://developers.googleblog.com/search/label/eclipsecon
 336. https://developers.googleblog.com/search/label/eddystone
 337. https://developers.googleblog.com/search/label/edge tpu
 338. https://developers.googleblog.com/search/label/edge tpu accelerator
 339. https://developers.googleblog.com/search/label/edge tpu dev board
 340. https://developers.googleblog.com/search/label/educatio
 341. https://developers.googleblog.com/search/label/education
 342. https://developers.googleblog.com/search/label/email
 343. https://developers.googleblog.com/search/label/emea
 344. https://developers.googleblog.com/search/label/endpoints
 345. https://developers.googleblog.com/search/label/enterprise
 346. https://developers.googleblog.com/search/label/entrepreneurs
 347. https://developers.googleblog.com/search/label/estimator
 348. https://developers.googleblog.com/search/label/estimators
 349. https://developers.googleblog.com/search/label/estonia
 350. https://developers.googleblog.com/search/label/ethics
 351. https://developers.googleblog.com/search/label/europe
 352. https://developers.googleblog.com/search/label/event
 353. https://developers.googleblog.com/search/label/events
 354. https://developers.googleblog.com/search/label/evolution
 355. https://developers.googleblog.com/search/label/execution api
 356. https://developers.googleblog.com/search/label/extensions
 357. https://developers.googleblog.com/search/label/fabric
 358. https://developers.googleblog.com/search/label/fairness
 359. https://developers.googleblog.com/search/label/fairness in machine learning
 360. https://developers.googleblog.com/search/label/faster web
 361. https://developers.googleblog.com/search/label/fcm
 362. https://developers.googleblog.com/search/label/featured
 363. https://developers.googleblog.com/search/label/feeds
 364. https://developers.googleblog.com/search/label/finance
 365. https://developers.googleblog.com/search/label/fintech
 366. https://developers.googleblog.com/search/label/firebase
 367. https://developers.googleblog.com/search/label/firebase analytics
 368. https://developers.googleblog.com/search/label/firebase cloud messaging
 369. https://developers.googleblog.com/search/label/firebase dynamic links
 370. https://developers.googleblog.com/search/label/firebug
 371. https://developers.googleblog.com/search/label/firefox
 372. https://developers.googleblog.com/search/label/firestore
 373. https://developers.googleblog.com/search/label/firevox
 374. https://developers.googleblog.com/search/label/firstbeta
 375. https://developers.googleblog.com/search/label/fitness
 376. https://developers.googleblog.com/search/label/flutter
 377. https://developers.googleblog.com/search/label/flutter 1.2
 378. https://developers.googleblog.com/search/label/flutter live
 379. https://developers.googleblog.com/search/label/flutter release preview 1
 380. https://developers.googleblog.com/search/label/flutter release preview 2
 381. https://developers.googleblog.com/search/label/font api
 382. https://developers.googleblog.com/search/label/fonts
 383. https://developers.googleblog.com/search/label/fosdem
 384. https://developers.googleblog.com/search/label/freebsd
 385. https://developers.googleblog.com/search/label/freenet
 386. https://developers.googleblog.com/search/label/fridaygram
 387. https://developers.googleblog.com/search/label/fusion tables
 388. https://developers.googleblog.com/search/label/g suite
 389. https://developers.googleblog.com/search/label/g+
 390. https://developers.googleblog.com/search/label/gadgets
 391. https://developers.googleblog.com/search/label/game developers conference
 392. https://developers.googleblog.com/search/label/games
 393. https://developers.googleblog.com/search/label/gaming
 394. https://developers.googleblog.com/search/label/gcc
 395. https://developers.googleblog.com/search/label/gci
 396. https://developers.googleblog.com/search/label/gcp
 397. https://developers.googleblog.com/search/label/gda
 398. https://developers.googleblog.com/search/label/gdata
 399. https://developers.googleblog.com/search/label/gdc17
 400. https://developers.googleblog.com/search/label/gdd
 401. https://developers.googleblog.com/search/label/gdd07
 402. https://developers.googleblog.com/search/label/gdd08
 403. https://developers.googleblog.com/search/label/gdd09
 404. https://developers.googleblog.com/search/label/gdd11
 405. https://developers.googleblog.com/search/label/gde
 406. https://developers.googleblog.com/search/label/gdg
 407. https://developers.googleblog.com/search/label/gdl
 408. https://developers.googleblog.com/search/label/gdl weekly
 409. https://developers.googleblog.com/search/label/gears
 410. https://developers.googleblog.com/search/label/geo
 411. https://developers.googleblog.com/search/label/geolocation
 412. https://developers.googleblog.com/search/label/geoserver
 413. https://developers.googleblog.com/search/label/getpaid
 414. https://developers.googleblog.com/search/label/ghop
 415. https://developers.googleblog.com/search/label/git
 416. https://developers.googleblog.com/search/label/github
 417. https://developers.googleblog.com/search/label/gke
 418. https://developers.googleblog.com/search/label/gmail
 419. https://developers.googleblog.com/search/label/gmail apis
 420. https://developers.googleblog.com/search/label/gmtc
 421. https://developers.googleblog.com/search/label/gnome
 422. https://developers.googleblog.com/search/label/gnome women's summer outreach program
 423. https://developers.googleblog.com/search/label/go
 424. https://developers.googleblog.com/search/label/goo.gl
 425. https://developers.googleblog.com/search/label/google
 426. https://developers.googleblog.com/search/label/google ai
 427. https://developers.googleblog.com/search/label/google apis
 428. https://developers.googleblog.com/search/label/google apps
 429. https://developers.googleblog.com/search/label/google apps api
 430. https://developers.googleblog.com/search/label/google apps for your domain
 431. https://developers.googleblog.com/search/label/google apps marketplace
 432. https://developers.googleblog.com/search/label/google ar
 433. https://developers.googleblog.com/search/label/google assistant
 434. https://developers.googleblog.com/search/label/google assistant sdk
 435. https://developers.googleblog.com/search/label/google brain
 436. https://developers.googleblog.com/search/label/google buzz
 437. https://developers.googleblog.com/search/label/google cast
 438. https://developers.googleblog.com/search/label/google chart api
 439. https://developers.googleblog.com/search/label/google checkout
 440. https://developers.googleblog.com/search/label/google chrome
 441. https://developers.googleblog.com/search/label/google cloud
 442. https://developers.googleblog.com/search/label/google cloud messaging
 443. https://developers.googleblog.com/search/label/google cloud platform
 444. https://developers.googleblog.com/search/label/google cloud storage
 445. https://developers.googleblog.com/search/label/google code
 446. https://developers.googleblog.com/search/label/google code project hosting
 447. https://developers.googleblog.com/search/label/google code search
 448. https://developers.googleblog.com/search/label/google code university
 449. https://developers.googleblog.com/search/label/google compute engine
 450. https://developers.googleblog.com/search/label/google coral
 451. https://developers.googleblog.com/search/label/google data apis
 452. https://developers.googleblog.com/search/label/google data protocol
 453. https://developers.googleblog.com/search/label/google data studio
 454. https://developers.googleblog.com/search/label/google developer day
 455. https://developers.googleblog.com/search/label/google developer days
 456. https://developers.googleblog.com/search/label/google developer scholarship
 457. https://developers.googleblog.com/search/label/google developers
 458. https://developers.googleblog.com/search/label/google developers academy
 459. https://developers.googleblog.com/search/label/google developers certification
 460. https://developers.googleblog.com/search/label/google developers community groups
 461. https://developers.googleblog.com/search/label/google developers groups
 462. https://developers.googleblog.com/search/label/google developers live
 463. https://developers.googleblog.com/search/label/google developers site
 464. https://developers.googleblog.com/search/label/google developers university consortium
 465. https://developers.googleblog.com/search/label/google docs
 466. https://developers.googleblog.com/search/label/google docs api
 467. https://developers.googleblog.com/search/label/google doctype
 468. https://developers.googleblog.com/search/label/google domains
 469. https://developers.googleblog.com/search/label/google drive
 470. https://developers.googleblog.com/search/label/google drive sdk
 471. https://developers.googleblog.com/search/label/google earth
 472. https://developers.googleblog.com/search/label/google fit
 473. https://developers.googleblog.com/search/label/google fonts
 474. https://developers.googleblog.com/search/label/google friend connect
 475. https://developers.googleblog.com/search/label/google gadgets
 476. https://developers.googleblog.com/search/label/google gears
 477. https://developers.googleblog.com/search/label/google grants
 478. https://developers.googleblog.com/search/label/google groups settings
 479. https://developers.googleblog.com/search/label/google health
 480. https://developers.googleblog.com/search/label/google i/o
 481. https://developers.googleblog.com/search/label/google identity platform
 482. https://developers.googleblog.com/search/label/google in asia
 483. https://developers.googleblog.com/search/label/google io
 484. https://developers.googleblog.com/search/label/google maps
 485. https://developers.googleblog.com/search/label/google maps platform
 486. https://developers.googleblog.com/search/label/google mashup editor
 487. https://developers.googleblog.com/search/label/google noto fonts
 488. https://developers.googleblog.com/search/label/google photos
 489. https://developers.googleblog.com/search/label/google platform
 490. https://developers.googleblog.com/search/label/google play
 491. https://developers.googleblog.com/search/label/google play developer api
 492. https://developers.googleblog.com/search/label/google play services
 493. https://developers.googleblog.com/search/label/google registry
 494. https://developers.googleblog.com/search/label/google scholarships
 495. https://developers.googleblog.com/search/label/google science fair
 496. https://developers.googleblog.com/search/label/google sheets
 497. https://developers.googleblog.com/search/label/google sheets api
 498. https://developers.googleblog.com/search/label/google slides
 499. https://developers.googleblog.com/search/label/google slides api
 500. https://developers.googleblog.com/search/label/google space
 501. https://developers.googleblog.com/search/label/google spreadsheets api
 502. https://developers.googleblog.com/search/label/google storage
 503. https://developers.googleblog.com/search/label/google summer of code
 504. https://developers.googleblog.com/search/label/google tech talk
 505. https://developers.googleblog.com/search/label/google technology
 506. https://developers.googleblog.com/search/label/google technoloy user groups
 507. https://developers.googleblog.com/search/label/google tv
 508. https://developers.googleblog.com/search/label/google visualization api
 509. https://developers.googleblog.com/search/label/google wallet
 510. https://developers.googleblog.com/search/label/google wave
 511. https://developers.googleblog.com/search/label/google web elements
 512. https://developers.googleblog.com/search/label/google web toolkit
 513. https://developers.googleblog.com/search/label/google.org
 514. https://developers.googleblog.com/search/label/google+
 515. https://developers.googleblog.com/search/label/googleassistant
 516. https://developers.googleblog.com/search/label/googlecast
 517. https://developers.googleblog.com/search/label/googledevelopers
 518. https://developers.googleblog.com/search/label/googleio
 519. https://developers.googleblog.com/search/label/googlenew
 520. https://developers.googleblog.com/search/label/googleplay
 521. https://developers.googleblog.com/search/label/googlewebelements googleio
 522. https://developers.googleblog.com/search/label/gpe
 523. https://developers.googleblog.com/search/label/gpgs c++ games
 524. https://developers.googleblog.com/search/label/gpt
 525. https://developers.googleblog.com/search/label/green linux
 526. https://developers.googleblog.com/search/label/groups api
 527. https://developers.googleblog.com/search/label/grow
 528. https://developers.googleblog.com/search/label/grow with google
 529. https://developers.googleblog.com/search/label/gsoc
 530. https://developers.googleblog.com/search/label/gsuite
 531. https://developers.googleblog.com/search/label/gtags
 532. https://developers.googleblog.com/search/label/gtug
 533. https://developers.googleblog.com/search/label/guest post
 534. https://developers.googleblog.com/search/label/guice
 535. https://developers.googleblog.com/search/label/gulp
 536. https://developers.googleblog.com/search/label/gwsop
 537. https://developers.googleblog.com/search/label/gwt
 538. https://developers.googleblog.com/search/label/gzip
 539. https://developers.googleblog.com/search/label/hackathon
 540. https://developers.googleblog.com/search/label/hacking
 541. https://developers.googleblog.com/search/label/hackthon
 542. https://developers.googleblog.com/search/label/hamilton
 543. https://developers.googleblog.com/search/label/hangouts
 544. https://developers.googleblog.com/search/label/hangouts chat
 545. https://developers.googleblog.com/search/label/hangouts chat api
 546. https://developers.googleblog.com/search/label/haproxy
 547. https://developers.googleblog.com/search/label/hg
 548. https://developers.googleblog.com/search/label/hibernate
 549. https://developers.googleblog.com/search/label/howto
 550. https://developers.googleblog.com/search/label/hpux
 551. https://developers.googleblog.com/search/label/html
 552. https://developers.googleblog.com/search/label/html5
 553. https://developers.googleblog.com/search/label/http
 554. https://developers.googleblog.com/search/label/i/o
 555. https://developers.googleblog.com/search/label/i/o 17
 556. https://developers.googleblog.com/search/label/i/o 2017
 557. https://developers.googleblog.com/search/label/i/o extended
 558. https://developers.googleblog.com/search/label/i/o live
 559. https://developers.googleblog.com/search/label/ical
 560. https://developers.googleblog.com/search/label/identity
 561. https://developers.googleblog.com/search/label/ietf
 562. https://developers.googleblog.com/search/label/ignite
 563. https://developers.googleblog.com/search/label/igoogle
 564. https://developers.googleblog.com/search/label/iguanas
 565. https://developers.googleblog.com/search/label/iiw
 566. https://developers.googleblog.com/search/label/image compression
 567. https://developers.googleblog.com/search/label/image search
 568. https://developers.googleblog.com/search/label/imara
 569. https://developers.googleblog.com/search/label/in-app billing
 570. https://developers.googleblog.com/search/label/in-app payments
 571. https://developers.googleblog.com/search/label/in-app purchase
 572. https://developers.googleblog.com/search/label/incubator
 573. https://developers.googleblog.com/search/label/india
 574. https://developers.googleblog.com/search/label/indie
 575. https://developers.googleblog.com/search/label/indie games accelerator
 576. https://developers.googleblog.com/search/label/information visualization
 577. https://developers.googleblog.com/search/label/intelligentwire
 578. https://developers.googleblog.com/search/label/interactive music
 579. https://developers.googleblog.com/search/label/internationalization
 580. https://developers.googleblog.com/search/label/internet explorer
 581. https://developers.googleblog.com/search/label/internet of things
 582. https://developers.googleblog.com/search/label/interviews
 583. https://developers.googleblog.com/search/label/io17
 584. https://developers.googleblog.com/search/label/io18
 585. https://developers.googleblog.com/search/label/io2017
 586. https://developers.googleblog.com/search/label/ios
 587. https://developers.googleblog.com/search/label/ios sdk
 588. https://developers.googleblog.com/search/label/iot
 589. https://developers.googleblog.com/search/label/ipad
 590. https://developers.googleblog.com/search/label/iphone
 591. https://developers.googleblog.com/search/label/iphone development
 592. https://developers.googleblog.com/search/label/israel
 593. https://developers.googleblog.com/search/label/issue tracker
 594. https://developers.googleblog.com/search/label/jaiku
 595. https://developers.googleblog.com/search/label/japanese
 596. https://developers.googleblog.com/search/label/java
 597. https://developers.googleblog.com/search/label/javascript
 598. https://developers.googleblog.com/search/label/jetpack
 599. https://developers.googleblog.com/search/label/joomla
 600. https://developers.googleblog.com/search/label/joomladayus2007
 601. https://developers.googleblog.com/search/label/joomladayusa
 602. https://developers.googleblog.com/search/label/json
 603. https://developers.googleblog.com/search/label/karaoke
 604. https://developers.googleblog.com/search/label/kde
 605. https://developers.googleblog.com/search/label/kde 4.0
 606. https://developers.googleblog.com/search/label/keras
 607. https://developers.googleblog.com/search/label/kernel
 608. https://developers.googleblog.com/search/label/kernel summit
 609. https://developers.googleblog.com/search/label/keynote
 610. https://developers.googleblog.com/search/label/khronos
 611. https://developers.googleblog.com/search/label/kids
 612. https://developers.googleblog.com/search/label/kids coding
 613. https://developers.googleblog.com/search/label/kids coding team
 614. https://developers.googleblog.com/search/label/kml
 615. https://developers.googleblog.com/search/label/korean
 616. https://developers.googleblog.com/search/label/krakow
 617. https://developers.googleblog.com/search/label/kubernetes
 618. https://developers.googleblog.com/search/label/labs
 619. https://developers.googleblog.com/search/label/lanchpad
 620. https://developers.googleblog.com/search/label/languages
 621. https://developers.googleblog.com/search/label/latam accelerator
 622. https://developers.googleblog.com/search/label/latam startups
 623. https://developers.googleblog.com/search/label/latitude
 624. https://developers.googleblog.com/search/label/latvia
 625. https://developers.googleblog.com/search/label/launch
 626. https://developers.googleblog.com/search/label/launchpad
 627. https://developers.googleblog.com/search/label/launchpad accelerator
 628. https://developers.googleblog.com/search/label/launchpad studio
 629. https://developers.googleblog.com/search/label/lca
 630. https://developers.googleblog.com/search/label/leadership
 631. https://developers.googleblog.com/search/label/learning
 632. https://developers.googleblog.com/search/label/lens
 633. https://developers.googleblog.com/search/label/lessons
 634. https://developers.googleblog.com/search/label/licenses
 635. https://developers.googleblog.com/search/label/linux
 636. https://developers.googleblog.com/search/label/linux foundation
 637. https://developers.googleblog.com/search/label/linux summit
 638. https://developers.googleblog.com/search/label/linux virtual server
 639. https://developers.googleblog.com/search/label/linuxconf eu
 640. https://developers.googleblog.com/search/label/lithuania
 641. https://developers.googleblog.com/search/label/localization
 642. https://developers.googleblog.com/search/label/loco
 643. https://developers.googleblog.com/search/label/london
 644. https://developers.googleblog.com/search/label/mac
 645. https://developers.googleblog.com/search/label/macfuse
 646. https://developers.googleblog.com/search/label/machine
 647. https://developers.googleblog.com/search/label/machine intelligence
 648. https://developers.googleblog.com/search/label/machine learning
 649. https://developers.googleblog.com/search/label/machine learning accelerator
 650. https://developers.googleblog.com/search/label/maker
 651. https://developers.googleblog.com/search/label/makers
 652. https://developers.googleblog.com/search/label/malware
 653. https://developers.googleblog.com/search/label/maps
 654. https://developers.googleblog.com/search/label/maps apis
 655. https://developers.googleblog.com/search/label/marketplace
 656. https://developers.googleblog.com/search/label/material
 657. https://developers.googleblog.com/search/label/material components
 658. https://developers.googleblog.com/search/label/material design
 659. https://developers.googleblog.com/search/label/mdl
 660. https://developers.googleblog.com/search/label/meetup
 661. https://developers.googleblog.com/search/label/mercurial
 662. https://developers.googleblog.com/search/label/mexico startups
 663. https://developers.googleblog.com/search/label/mit csail
 664. https://developers.googleblog.com/search/label/mit media lab
 665. https://developers.googleblog.com/search/label/ml
 666. https://developers.googleblog.com/search/label/ml kit
 667. https://developers.googleblog.com/search/label/mlcc
 668. https://developers.googleblog.com/search/label/mobile
 669. https://developers.googleblog.com/search/label/mobile app development
 670. https://developers.googleblog.com/search/label/mobile design
 671. https://developers.googleblog.com/search/label/mobile development
 672. https://developers.googleblog.com/search/label/mobile performance
 673. https://developers.googleblog.com/search/label/mobile sites
 674. https://developers.googleblog.com/search/label/mobile speed
 675. https://developers.googleblog.com/search/label/mobile ux
 676. https://developers.googleblog.com/search/label/mobile web
 677. https://developers.googleblog.com/search/label/mobile world congress
 678. https://developers.googleblog.com/search/label/mod_pagespeed
 679. https://developers.googleblog.com/search/label/moderator
 680. https://developers.googleblog.com/search/label/monetize
 681. https://developers.googleblog.com/search/label/mooc
 682. https://developers.googleblog.com/search/label/mozilla
 683. https://developers.googleblog.com/search/label/mylar
 684. https://developers.googleblog.com/search/label/myspace
 685. https://developers.googleblog.com/search/label/mysql
 686. https://developers.googleblog.com/search/label/mythtv
 687. https://developers.googleblog.com/search/label/named
 688. https://developers.googleblog.com/search/label/narratives
 689. https://developers.googleblog.com/search/label/native ads
 690. https://developers.googleblog.com/search/label/native client
 691. https://developers.googleblog.com/search/label/nearby
 692. https://developers.googleblog.com/search/label/netbsd
 693. https://developers.googleblog.com/search/label/non-profit
 694. https://developers.googleblog.com/search/label/nonsense
 695. https://developers.googleblog.com/search/label/nosql
 696. https://developers.googleblog.com/search/label/notifications
 697. https://developers.googleblog.com/search/label/noto serif cjk
 698. https://developers.googleblog.com/search/label/nss
 699. https://developers.googleblog.com/search/label/nvidia
 700. https://developers.googleblog.com/search/label/o3d
 701. https://developers.googleblog.com/search/label/oauth
 702. https://developers.googleblog.com/search/label/oauth playground
 703. https://developers.googleblog.com/search/label/oauth2
 704. https://developers.googleblog.com/search/label/objective-c
 705. https://developers.googleblog.com/search/label/ocaml
 706. https://developers.googleblog.com/search/label/ocr
 707. https://developers.googleblog.com/search/label/odf
 708. https://developers.googleblog.com/search/label/office hours
 709. https://developers.googleblog.com/search/label/oha
 710. https://developers.googleblog.com/search/label/ooxml
 711. https://developers.googleblog.com/search/label/open data
 712. https://developers.googleblog.com/search/label/open source
 713. https://developers.googleblog.com/search/label/open source blog
 714. https://developers.googleblog.com/search/label/open source releases
 715. https://developers.googleblog.com/search/label/open web
 716. https://developers.googleblog.com/search/label/openajax alliance
 717. https://developers.googleblog.com/search/label/opengl
 718. https://developers.googleblog.com/search/label/openid
 719. https://developers.googleblog.com/search/label/opensocial
 720. https://developers.googleblog.com/search/label/openssh
 721. https://developers.googleblog.com/search/label/openssl
 722. https://developers.googleblog.com/search/label/optimization
 723. https://developers.googleblog.com/search/label/oreilly
 724. https://developers.googleblog.com/search/label/orkut
 725. https://developers.googleblog.com/search/label/oscon
 726. https://developers.googleblog.com/search/label/oscon2007
 727. https://developers.googleblog.com/search/label/osi
 728. https://developers.googleblog.com/search/label/oss devs
 729. https://developers.googleblog.com/search/label/ossjam
 730. https://developers.googleblog.com/search/label/osx
 731. https://developers.googleblog.com/search/label/pactester
 732. https://developers.googleblog.com/search/label/page speed
 733. https://developers.googleblog.com/search/label/pagespeed
 734. https://developers.googleblog.com/search/label/palette
 735. https://developers.googleblog.com/search/label/payments
 736. https://developers.googleblog.com/search/label/peer bonus program
 737. https://developers.googleblog.com/search/label/performance
 738. https://developers.googleblog.com/search/label/phone
 739. https://developers.googleblog.com/search/label/photos
 740. https://developers.googleblog.com/search/label/picasa
 741. https://developers.googleblog.com/search/label/picasa web
 742. https://developers.googleblog.com/search/label/places api
 743. https://developers.googleblog.com/search/label/play services
 744. https://developers.googleblog.com/search/label/playground
 745. https://developers.googleblog.com/search/label/plone
 746. https://developers.googleblog.com/search/label/plone sprint
 747. https://developers.googleblog.com/search/label/podcast
 748. https://developers.googleblog.com/search/label/poland
 749. https://developers.googleblog.com/search/label/poly
 750. https://developers.googleblog.com/search/label/polymer
 751. https://developers.googleblog.com/search/label/polymer summit
 752. https://developers.googleblog.com/search/label/portugal
 753. https://developers.googleblog.com/search/label/posix
 754. https://developers.googleblog.com/search/label/powermeter api
 755. https://developers.googleblog.com/search/label/prediction api
 756. https://developers.googleblog.com/search/label/preview
 757. https://developers.googleblog.com/search/label/prizes
 758. https://developers.googleblog.com/search/label/programming
 759. https://developers.googleblog.com/search/label/progressive web app
 760. https://developers.googleblog.com/search/label/project hosting
 761. https://developers.googleblog.com/search/label/project loon
 762. https://developers.googleblog.com/search/label/project tango
 763. https://developers.googleblog.com/search/label/prototype
 764. https://developers.googleblog.com/search/label/proximity
 765. https://developers.googleblog.com/search/label/pubsubhubbub
 766. https://developers.googleblog.com/search/label/pwa
 767. https://developers.googleblog.com/search/label/py3k
 768. https://developers.googleblog.com/search/label/python
 769. https://developers.googleblog.com/search/label/python sprint
 770. https://developers.googleblog.com/search/label/rails
 771. https://developers.googleblog.com/search/label/random hacks of kindness
 772. https://developers.googleblog.com/search/label/rasberry pi
 773. https://developers.googleblog.com/search/label/reader
 774. https://developers.googleblog.com/search/label/releases
 775. https://developers.googleblog.com/search/label/remote config
 776. https://developers.googleblog.com/search/label/research
 777. https://developers.googleblog.com/search/label/reserve seats
 778. https://developers.googleblog.com/search/label/responsible ai
 779. https://developers.googleblog.com/search/label/result snippets
 780. https://developers.googleblog.com/search/label/reto meier
 781. https://developers.googleblog.com/search/label/rewarded ads
 782. https://developers.googleblog.com/search/label/rewarded video ads
 783. https://developers.googleblog.com/search/label/rhino
 784. https://developers.googleblog.com/search/label/saatchi
 785. https://developers.googleblog.com/search/label/safety & security
 786. https://developers.googleblog.com/search/label/safety and security
 787. https://developers.googleblog.com/search/label/salesforce
 788. https://developers.googleblog.com/search/label/samba
 789. https://developers.googleblog.com/search/label/sample dialogs
 790. https://developers.googleblog.com/search/label/sandbox
 791. https://developers.googleblog.com/search/label/santa tracker
 792. https://developers.googleblog.com/search/label/scalability
 793. https://developers.googleblog.com/search/label/scale-ups
 794. https://developers.googleblog.com/search/label/sceneform
 795. https://developers.googleblog.com/search/label/schedule
 796. https://developers.googleblog.com/search/label/scholarship
 797. https://developers.googleblog.com/search/label/scholarships
 798. https://developers.googleblog.com/search/label/scratch
 799. https://developers.googleblog.com/search/label/screencast
 800. https://developers.googleblog.com/search/label/sdk
 801. https://developers.googleblog.com/search/label/sdks
 802. https://developers.googleblog.com/search/label/search
 803. https://developers.googleblog.com/search/label/security
 804. https://developers.googleblog.com/search/label/serbia
 805. https://developers.googleblog.com/search/label/serif
 806. https://developers.googleblog.com/search/label/service worker
 807. https://developers.googleblog.com/search/label/sessions
 808. https://developers.googleblog.com/search/label/seurat
 809. https://developers.googleblog.com/search/label/shape
 810. https://developers.googleblog.com/search/label/sheets api
 811. https://developers.googleblog.com/search/label/shindig
 812. https://developers.googleblog.com/search/label/shopping
 813. https://developers.googleblog.com/search/label/shoreline amphitheatre
 814. https://developers.googleblog.com/search/label/showcase
 815. https://developers.googleblog.com/search/label/sidewiki
 816. https://developers.googleblog.com/search/label/sign-in
 817. https://developers.googleblog.com/search/label/silverstripe
 818. https://developers.googleblog.com/search/label/simd
 819. https://developers.googleblog.com/search/label/sitemaps
 820. https://developers.googleblog.com/search/label/sites api
 821. https://developers.googleblog.com/search/label/sixapart
 822. https://developers.googleblog.com/search/label/sketchup
 823. https://developers.googleblog.com/search/label/slides api
 824. https://developers.googleblog.com/search/label/small business
 825. https://developers.googleblog.com/search/label/small businesses
 826. https://developers.googleblog.com/search/label/smart lock for passwords
 827. https://developers.googleblog.com/search/label/soap search api
 828. https://developers.googleblog.com/search/label/soc
 829. https://developers.googleblog.com/search/label/social
 830. https://developers.googleblog.com/search/label/social graph
 831. https://developers.googleblog.com/search/label/solaris
 832. https://developers.googleblog.com/search/label/souders
 833. https://developers.googleblog.com/search/label/spa2007
 834. https://developers.googleblog.com/search/label/space
 835. https://developers.googleblog.com/search/label/spdy
 836. https://developers.googleblog.com/search/label/speakers
 837. https://developers.googleblog.com/search/label/speech
 838. https://developers.googleblog.com/search/label/speed
 839. https://developers.googleblog.com/search/label/speed tracer
 840. https://developers.googleblog.com/search/label/stable release
 841. https://developers.googleblog.com/search/label/standards
 842. https://developers.googleblog.com/search/label/startup
 843. https://developers.googleblog.com/search/label/startup accelerator
 844. https://developers.googleblog.com/search/label/startups
 845. https://developers.googleblog.com/search/label/stem
 846. https://developers.googleblog.com/search/label/storage
 847. https://developers.googleblog.com/search/label/street view
 848. https://developers.googleblog.com/search/label/student programs
 849. https://developers.googleblog.com/search/label/students
 850. https://developers.googleblog.com/search/label/stuff
 851. https://developers.googleblog.com/search/label/style
 852. https://developers.googleblog.com/search/label/subscribed links
 853. https://developers.googleblog.com/search/label/subscription
 854. https://developers.googleblog.com/search/label/subversion
 855. https://developers.googleblog.com/search/label/summer of code
 856. https://developers.googleblog.com/search/label/sundar pichai
 857. https://developers.googleblog.com/search/label/svg
 858. https://developers.googleblog.com/search/label/sxsw
 859. https://developers.googleblog.com/search/label/syndication
 860. https://developers.googleblog.com/search/label/tasks api
 861. https://developers.googleblog.com/search/label/team drives (new)
 862. https://developers.googleblog.com/search/label/techmakers
 863. https://developers.googleblog.com/search/label/templates
 864. https://developers.googleblog.com/search/label/tensorflow
 865. https://developers.googleblog.com/search/label/tensorflow dev summit
 866. https://developers.googleblog.com/search/label/tensorflow lite
 867. https://developers.googleblog.com/search/label/tensorflow research cloud
 868. https://developers.googleblog.com/search/label/tensorrt
 869. https://developers.googleblog.com/search/label/test lab
 870. https://developers.googleblog.com/search/label/testing
 871. https://developers.googleblog.com/search/label/text embedding models
 872. https://developers.googleblog.com/search/label/tfdevsummit
 873. https://developers.googleblog.com/search/label/tflite
 874. https://developers.googleblog.com/search/label/themes
 875. https://developers.googleblog.com/search/label/thought leadership
 876. https://developers.googleblog.com/search/label/tool
 877. https://developers.googleblog.com/search/label/tools
 878. https://developers.googleblog.com/search/label/topp
 879. https://developers.googleblog.com/search/label/tpu
 880. https://developers.googleblog.com/search/label/training
 881. https://developers.googleblog.com/search/label/tranparency
 882. https://developers.googleblog.com/search/label/transit
 883. https://developers.googleblog.com/search/label/translate
 884. https://developers.googleblog.com/search/label/translation
 885. https://developers.googleblog.com/search/label/tutorials
 886. https://developers.googleblog.com/search/label/tv
 887. https://developers.googleblog.com/search/label/ubiquitous computing
 888. https://developers.googleblog.com/search/label/ubiquity
 889. https://developers.googleblog.com/search/label/ubucon
 890. https://developers.googleblog.com/search/label/ubuntu
 891. https://developers.googleblog.com/search/label/udacity
 892. https://developers.googleblog.com/search/label/ui
 893. https://developers.googleblog.com/search/label/ukraine
 894. https://developers.googleblog.com/search/label/unicode
 895. https://developers.googleblog.com/search/label/unit test
 896. https://developers.googleblog.com/search/label/unity
 897. https://developers.googleblog.com/search/label/universal
 898. https://developers.googleblog.com/search/label/universal app campaigns
 899. https://developers.googleblog.com/search/label/university
 900. https://developers.googleblog.com/search/label/unix
 901. https://developers.googleblog.com/search/label/url
 902. https://developers.googleblog.com/search/label/url shortener
 903. https://developers.googleblog.com/search/label/urls
 904. https://developers.googleblog.com/search/label/ux
 905. https://developers.googleblog.com/search/label/video
 906. https://developers.googleblog.com/search/label/videos
 907. https://developers.googleblog.com/search/label/vim
 908. https://developers.googleblog.com/search/label/virtual keyboard
 909. https://developers.googleblog.com/search/label/virtual reality
 910. https://developers.googleblog.com/search/label/visualization
 911. https://developers.googleblog.com/search/label/voice
 912. https://developers.googleblog.com/search/label/voice kit
 913. https://developers.googleblog.com/search/label/voice user interface
 914. https://developers.googleblog.com/search/label/vr
 915. https://developers.googleblog.com/search/label/vui
 916. https://developers.googleblog.com/search/label/wattpad
 917. https://developers.googleblog.com/search/label/wearables
 918. https://developers.googleblog.com/search/label/weave
 919. https://developers.googleblog.com/search/label/web
 920. https://developers.googleblog.com/search/label/web animations api
 921. https://developers.googleblog.com/search/label/web apps
 922. https://developers.googleblog.com/search/label/web components
 923. https://developers.googleblog.com/search/label/web design
 924. https://developers.googleblog.com/search/label/web designer
 925. https://developers.googleblog.com/search/label/web development
 926. https://developers.googleblog.com/search/label/web exponents
 927. https://developers.googleblog.com/search/label/web fonts
 928. https://developers.googleblog.com/search/label/web performance
 929. https://developers.googleblog.com/search/label/web platform docs
 930. https://developers.googleblog.com/search/label/web registry
 931. https://developers.googleblog.com/search/label/webfonts
 932. https://developers.googleblog.com/search/label/webgl
 933. https://developers.googleblog.com/search/label/webmaster
 934. https://developers.googleblog.com/search/label/webp
 935. https://developers.googleblog.com/search/label/website optimizer
 936. https://developers.googleblog.com/search/label/webvr
 937. https://developers.googleblog.com/search/label/weekly roundup
 938. https://developers.googleblog.com/search/label/whitehouse.gov
 939. https://developers.googleblog.com/search/label/who's at google i/o
 940. https://developers.googleblog.com/search/label/win
 941. https://developers.googleblog.com/search/label/windows
 942. https://developers.googleblog.com/search/label/windows programming
 943. https://developers.googleblog.com/search/label/winter of code
 944. https://developers.googleblog.com/search/label/women tech makers
 945. https://developers.googleblog.com/search/label/women techmakers
 946. https://developers.googleblog.com/search/label/writing
 947. https://developers.googleblog.com/search/label/wtm
 948. https://developers.googleblog.com/search/label/xauth
 949. https://developers.googleblog.com/search/label/yahoo
 950. https://developers.googleblog.com/search/label/young makers
 951. https://developers.googleblog.com/search/label/youtube
 952. https://developers.googleblog.com/search/label/zlib
 953. https://developers.googleblog.com/search/label/zurich
 954. https://developers.googleblog.com/search/label/zxing
 955. javascript:void(0)
 956. https://developers.googleblog.com/2019/
 957. https://developers.googleblog.com/2019/03/
 958. https://developers.googleblog.com/2019/02/
 959. https://developers.googleblog.com/2019/01/
 960. javascript:void(0)
 961. https://developers.googleblog.com/2018/
 962. https://developers.googleblog.com/2018/12/
 963. https://developers.googleblog.com/2018/11/
 964. https://developers.googleblog.com/2018/10/
 965. https://developers.googleblog.com/2018/09/
 966. https://developers.googleblog.com/2018/08/
 967. https://developers.googleblog.com/2018/07/
 968. https://developers.googleblog.com/2018/06/
 969. https://developers.googleblog.com/2018/05/
 970. https://developers.googleblog.com/2018/04/
 971. https://developers.googleblog.com/2018/03/
 972. https://developers.googleblog.com/2018/02/
 973. https://developers.googleblog.com/2018/01/
 974. javascript:void(0)
 975. https://developers.googleblog.com/2017/
 976. https://developers.googleblog.com/2017/12/
 977. https://developers.googleblog.com/2017/11/
 978. https://developers.googleblog.com/2017/10/
 979. https://developers.googleblog.com/2017/09/
 980. https://developers.googleblog.com/2017/08/
 981. https://developers.googleblog.com/2017/07/
 982. https://developers.googleblog.com/2017/06/
 983. https://developers.googleblog.com/2017/05/
 984. https://developers.googleblog.com/2017/04/
 985. https://developers.googleblog.com/2017/03/
 986. https://developers.googleblog.com/2017/02/
 987. https://developers.googleblog.com/2017/01/
 988. javascript:void(0)
 989. https://developers.googleblog.com/2016/
 990. https://developers.googleblog.com/2016/12/
 991. https://developers.googleblog.com/2016/11/
 992. https://developers.googleblog.com/2016/10/
 993. https://developers.googleblog.com/2016/09/
 994. https://developers.googleblog.com/2016/08/
 995. https://developers.googleblog.com/2016/07/
 996. https://developers.googleblog.com/2016/06/
 997. https://developers.googleblog.com/2016/05/
 998. https://developers.googleblog.com/2016/04/
 999. https://developers.googleblog.com/2016/03/
1000. https://developers.googleblog.com/2016/02/
1001. https://developers.googleblog.com/2016/01/
1002. javascript:void(0)
1003. https://developers.googleblog.com/2015/
1004. https://developers.googleblog.com/2015/12/
1005. https://developers.googleblog.com/2015/11/
1006. https://developers.googleblog.com/2015/10/
1007. https://developers.googleblog.com/2015/09/
1008. https://developers.googleblog.com/2015/08/
1009. https://developers.googleblog.com/2015/07/
1010. https://developers.googleblog.com/2015/06/
1011. https://developers.googleblog.com/2015/05/
1012. https://developers.googleblog.com/2015/04/
1013. https://developers.googleblog.com/2015/03/
1014. https://developers.googleblog.com/2015/02/
1015. javascript:void(0)
1016. https://developers.googleblog.com/2014/
1017. https://developers.googleblog.com/2014/12/
1018. https://developers.googleblog.com/2014/11/
1019. https://developers.googleblog.com/2014/10/
1020. https://developers.googleblog.com/2014/09/
1021. https://developers.googleblog.com/2014/08/
1022. https://developers.googleblog.com/2014/07/
1023. https://developers.googleblog.com/2014/06/
1024. https://developers.googleblog.com/2014/05/
1025. https://developers.googleblog.com/2014/04/
1026. https://developers.googleblog.com/2014/03/
1027. https://developers.googleblog.com/2014/02/
1028. https://developers.googleblog.com/2014/01/
1029. javascript:void(0)
1030. https://developers.googleblog.com/2013/
1031. https://developers.googleblog.com/2013/12/
1032. https://developers.googleblog.com/2013/11/
1033. https://developers.googleblog.com/2013/10/
1034. https://developers.googleblog.com/2013/09/
1035. https://developers.googleblog.com/2013/08/
1036. https://developers.googleblog.com/2013/07/
1037. https://developers.googleblog.com/2013/06/
1038. https://developers.googleblog.com/2013/05/
1039. https://developers.googleblog.com/2013/04/
1040. https://developers.googleblog.com/2013/03/
1041. https://developers.googleblog.com/2013/02/
1042. https://developers.googleblog.com/2013/01/
1043. javascript:void(0)
1044. https://developers.googleblog.com/2012/
1045. https://developers.googleblog.com/2012/12/
1046. https://developers.googleblog.com/2012/11/
1047. https://developers.googleblog.com/2012/10/
1048. https://developers.googleblog.com/2012/09/
1049. https://developers.googleblog.com/2012/08/
1050. https://developers.googleblog.com/2012/07/
1051. https://developers.googleblog.com/2012/06/
1052. https://developers.googleblog.com/2012/05/
1053. https://developers.googleblog.com/2012/04/
1054. https://developers.googleblog.com/2012/03/
1055. https://developers.googleblog.com/2012/02/
1056. https://developers.googleblog.com/2012/01/
1057. javascript:void(0)
1058. https://developers.googleblog.com/2011/
1059. https://developers.googleblog.com/2011/12/
1060. https://developers.googleblog.com/2011/11/
1061. https://developers.googleblog.com/2011/10/
1062. https://developers.googleblog.com/2011/09/
1063. https://developers.googleblog.com/2011/08/
1064. https://developers.googleblog.com/2011/07/
1065. https://developers.googleblog.com/2011/06/
1066. https://developers.googleblog.com/2011/05/
1067. https://developers.googleblog.com/2011/04/
1068. https://developers.googleblog.com/2011/03/
1069. https://developers.googleblog.com/2011/02/
1070. https://developers.googleblog.com/2011/01/
1071. javascript:void(0)
1072. https://developers.googleblog.com/2010/
1073. https://developers.googleblog.com/2010/12/
1074. https://developers.googleblog.com/2010/11/
1075. https://developers.googleblog.com/2010/10/
1076. https://developers.googleblog.com/2010/09/
1077. https://developers.googleblog.com/2010/08/
1078. https://developers.googleblog.com/2010/07/
1079. https://developers.googleblog.com/2010/06/
1080. https://developers.googleblog.com/2010/05/
1081. https://developers.googleblog.com/2010/04/
1082. https://developers.googleblog.com/2010/03/
1083. https://developers.googleblog.com/2010/02/
1084. https://developers.googleblog.com/2010/01/
1085. javascript:void(0)
1086. https://developers.googleblog.com/2009/
1087. https://developers.googleblog.com/2009/12/
1088. https://developers.googleblog.com/2009/11/
1089. https://developers.googleblog.com/2009/10/
1090. https://developers.googleblog.com/2009/09/
1091. https://developers.googleblog.com/2009/08/
1092. https://developers.googleblog.com/2009/07/
1093. https://developers.googleblog.com/2009/06/
1094. https://developers.googleblog.com/2009/05/
1095. https://developers.googleblog.com/2009/04/
1096. https://developers.googleblog.com/2009/03/
1097. https://developers.googleblog.com/2009/02/
1098. https://developers.googleblog.com/2009/01/
1099. javascript:void(0)
1100. https://developers.googleblog.com/2008/
1101. https://developers.googleblog.com/2008/12/
1102. https://developers.googleblog.com/2008/11/
1103. https://developers.googleblog.com/2008/10/
1104. https://developers.googleblog.com/2008/09/
1105. https://developers.googleblog.com/2008/08/
1106. https://developers.googleblog.com/2008/07/
1107. https://developers.googleblog.com/2008/06/
1108. https://developers.googleblog.com/2008/05/
1109. https://developers.googleblog.com/2008/04/
1110. https://developers.googleblog.com/2008/03/
1111. https://developers.googleblog.com/2008/02/
1112. https://developers.googleblog.com/2008/01/
1113. javascript:void(0)
1114. https://developers.googleblog.com/2007/
1115. https://developers.googleblog.com/2007/12/
1116. https://developers.googleblog.com/2007/11/
1117. https://developers.googleblog.com/2007/10/
1118. https://developers.googleblog.com/2007/09/
1119. https://developers.googleblog.com/2007/08/
1120. https://developers.googleblog.com/2007/07/
1121. https://developers.googleblog.com/2007/06/
1122. https://developers.googleblog.com/2007/05/
1123. https://developers.googleblog.com/2007/04/
1124. https://developers.googleblog.com/2007/03/
1125. https://developers.googleblog.com/2007/02/
1126. https://developers.googleblog.com/2007/01/
1127. javascript:void(0)
1128. https://developers.googleblog.com/2006/
1129. https://developers.googleblog.com/2006/12/
1130. https://developers.googleblog.com/2006/11/
1131. https://developers.googleblog.com/2006/10/
1132. https://developers.googleblog.com/2006/09/
1133. https://developers.googleblog.com/2006/08/
1134. https://developers.googleblog.com/2006/07/
1135. https://developers.googleblog.com/2006/06/
1136. https://developers.googleblog.com/2006/05/
1137. https://developers.googleblog.com/2006/04/
1138. https://developers.googleblog.com/2006/03/
1139. https://developers.googleblog.com/2006/02/
1140. https://developers.googleblog.com/2006/01/
1141. javascript:void(0)
1142. https://developers.googleblog.com/2005/
1143. https://developers.googleblog.com/2005/12/
1144. https://developers.googleblog.com/2005/11/
1145. https://developers.googleblog.com/2005/10/
1146. https://developers.googleblog.com/2005/09/
1147. https://developers.googleblog.com/2005/08/
1148. https://developers.googleblog.com/2005/07/
1149. https://developers.googleblog.com/2005/06/
1150. https://developers.googleblog.com/2005/05/
1151. https://developers.googleblog.com/2005/04/
1152. https://developers.googleblog.com/2005/03/
1153. http://googledevelopers.blogspot.com/atom.xml
1154. http://googledevelopers.blogspot.com/atom.xml
1155. http://developers.google.com/
1156. https://googleblog.blogspot.com/
1157. https://googlepublicpolicy.blogspot.com/
1158. https://googleforstudents.blogspot.com/
1159. https://googleforwork.blogspot.com/
1160. https://chrome.blogspot.com/
1161. https://officialandroid.blogspot.com/
1162. https://googleadsdeveloper.blogspot.com/
1163. https://android-developers.blogspot.com/
1164. https://googledevelopers.blogspot.com/
1165. https://www.google.com/
1166. https://www.google.com/
1167. https://www.google.com/policies/privacy/
1168. https://www.google.com/policies/terms/

   hidden links:
1170. https://www.blogger.com/comment-iframe.g?blogid=596098824972435195&postid=9179239380754962909
1171. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=html&widgetid=html7&action=editwidget&sectionid=sidebar-top
1172. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=label&widgetid=label1&action=editwidget&sectionid=sidebar
1173. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=blogarchive&widgetid=blogarchive1&action=editwidget&sectionid=sidebar
1174. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=html&widgetid=html6&action=editwidget&sectionid=sidebar
1175. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=html&widgetid=html1&action=editwidget&sectionid=sidebar-bottom
1176. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=html&widgetid=html9&action=editwidget&sectionid=sidebar-bottom
1177. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=html&widgetid=html2&action=editwidget&sectionid=footer-1
1178. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=html&widgetid=html3&action=editwidget&sectionid=footer-2
1179. https://www.blogger.com/rearrange?blogid=596098824972435195&widgettype=html&widgetid=html4&action=editwidget&sectionid=footer-3
