   #[1]github [2]recent commits to newsroom:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]10
     * [35]star [36]83
     * [37]fork [38]12

[39]clic-lab/[40]newsroom

   [41]code [42]issues 6 [43]pull requests 0 [44]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [45]sign up
   tools for downloading and analyzing summaries and evaluating
   summarization systems. [46]https://summari.es/
     * [47]4 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors
     * [51]view license

    1. [52]python 87.2%
    2. [53]html 11.6%
    3. other 1.2%

   (button) python html other
   branch: master (button) new pull request
   [54]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/c
   [55]download zip

downloading...

   want to be notified of new releases in clic-lab/newsroom?
   [56]sign in [57]sign up

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [60]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [61]download the github extension for visual studio
   and try again.

   (button) go back
   [62]@yoavartzi
   [63]yoavartzi [64]update readme.markdown
   latest commit [65]37858b6 apr 2, 2019
   [66]permalink
   type         name        latest commit message  commit time
        failed to load latest commit information.
        [67]example
        [68]humaneval
        [69]newsroom        [70]initial           apr 27, 2018
        [71]tests
        [72]license
        [73]readme.markdown
        [74]setup.py

readme.markdown

installation instructions

   newsroom requires python 3 and can be installed using pip:
pip install -e git+git://github.com/clic-lab/newsroom.git#egg=newsroom

getting the data

   there are two ways to obtain the summaries dataset. you may use the
   scripts described below to scrape the web pages used in the dataset and
   extract the summaries. alternatively, the data is also available from
   [75]https://summari.es/download/.

data processing tools

   newsroom contains two scripts for downloading and processing data
   downloaded from archive.org. first, download the "thin" data from
   [76]summari.es:
wget https://summari.es/files/thin.tar
tar xvf thin.tar

   both the newsroom-scrape and newsroom-extract tools described below
   have argument help pages accessed with the --help command line option.

data scraping

   the thin directory will contain three files, train.jsonl.gz,
   dev.jsonl.gz and test.jsonl.gz. to begin downloading the development
   set from archive.org, run the following:
newsroom-scrape --thin thin/dev.jsonl.gz --archive dev.archive

   estimated download time is indicated with a progress bar. if errors
   occur during downloading, you may need to re-run the script later to
   capture the missing articles. this process is network bound and depends
   mostly on archive.org, save your cpu cycles for the extraction stage!

   the downloading process can be stopped at any time with control-c and
   resumed later. it is also possible to perform extraction of a partially
   downloaded dataset with newsroom-extract before continuing to download
   the full version.

data extraction

   the newsroom-extract tool extracts summaries and article text from the
   data downloaded by newsroom-scrape. this tool produces a new file that
   does not modify the original output file of newsroom-scrape, and can be
   run with:
newsroom-extract --archive dev.archive --dataset dev.data

   the script automatically parallelizes extraction across your cpu cores.
   to disable this or reduce the number of cores used, use the --workers
   option. like scraping, the extraction process can be stopped at any
   point with control-c and resumed later.

reading and analyzing the data

   all data are represented using [77]gzip-compressed json lines. the
   newsroom package provides an easy tool to read an write these files    
   and do so up to 20x faster than the standard python gz and json
   packages!
from newsroom import jsonl

# read entire file:

with jsonl.open("train.data", gzip = true) as train_file:
    train = train_file.read()

# read file entry by entry:

with jsonl.open("train.data", gzip = true) as train_file:
    for entry in train_file:
        print(entry["summary"], entry["text"])

extraction analysis

   the newsroom package also contains scripts for identifying extractive
   fragments and computing metrics described in the paper: coverage,
   density, and compression.
import random

from newsroom import jsonl
from newsroom.analyze import fragments

with jsonl.open("train.data", gzip = true) as train_file:
    train = train_file.read()

# compute stats on random training example:

entry = random.choice(train)
summary, text = train[0]["summary"], train[0]["text"]
fragments = fragments(summary, text)

# print paper metrics:

print("coverage:",    fragments.coverage())
print("density:",     fragments.density())
print("compression:", fragments.compression())

# extractive fragments oracle:

print("list of extractive fragments:")
print(fragments.strings())

evaluation tools

   available soon!

     *    2019 github, inc.
     * [78]terms
     * [79]privacy
     * [80]security
     * [81]status
     * [82]help

     * [83]contact github
     * [84]pricing
     * [85]api
     * [86]training
     * [87]blog
     * [88]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [89]reload to refresh your
   session. you signed out in another tab or window. [90]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/clic-lab/newsroom/commits/master.atom
   3. https://github.com/clic-lab/newsroom#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/clic-lab/newsroom
  32. https://github.com/join
  33. https://github.com/login?return_to=/clic-lab/newsroom
  34. https://github.com/clic-lab/newsroom/watchers
  35. https://github.com/login?return_to=/clic-lab/newsroom
  36. https://github.com/clic-lab/newsroom/stargazers
  37. https://github.com/login?return_to=/clic-lab/newsroom
  38. https://github.com/clic-lab/newsroom/network/members
  39. https://github.com/clic-lab
  40. https://github.com/clic-lab/newsroom
  41. https://github.com/clic-lab/newsroom
  42. https://github.com/clic-lab/newsroom/issues
  43. https://github.com/clic-lab/newsroom/pulls
  44. https://github.com/clic-lab/newsroom/pulse
  45. https://github.com/join?source=prompt-code
  46. https://summari.es/
  47. https://github.com/clic-lab/newsroom/commits/master
  48. https://github.com/clic-lab/newsroom/branches
  49. https://github.com/clic-lab/newsroom/releases
  50. https://github.com/clic-lab/newsroom/graphs/contributors
  51. https://github.com/clic-lab/newsroom/blob/master/license
  52. https://github.com/clic-lab/newsroom/search?l=python
  53. https://github.com/clic-lab/newsroom/search?l=html
  54. https://github.com/clic-lab/newsroom/find/master
  55. https://github.com/clic-lab/newsroom/archive/master.zip
  56. https://github.com/login?return_to=https://github.com/clic-lab/newsroom
  57. https://github.com/join?return_to=/clic-lab/newsroom
  58. https://desktop.github.com/
  59. https://desktop.github.com/
  60. https://developer.apple.com/xcode/
  61. https://visualstudio.github.com/
  62. https://github.com/yoavartzi
  63. https://github.com/clic-lab/newsroom/commits?author=yoavartzi
  64. https://github.com/clic-lab/newsroom/commit/37858b6a704bbc284396e8d1da55c7808f2dcb20
  65. https://github.com/clic-lab/newsroom/commit/37858b6a704bbc284396e8d1da55c7808f2dcb20
  66. https://github.com/clic-lab/newsroom/tree/37858b6a704bbc284396e8d1da55c7808f2dcb20
  67. https://github.com/clic-lab/newsroom/tree/master/example
  68. https://github.com/clic-lab/newsroom/tree/master/humaneval
  69. https://github.com/clic-lab/newsroom/tree/master/newsroom
  70. https://github.com/clic-lab/newsroom/commit/e0d77c0fd46d5de860481100a15ad5f6aa16f9bb
  71. https://github.com/clic-lab/newsroom/tree/master/tests
  72. https://github.com/clic-lab/newsroom/blob/master/license
  73. https://github.com/clic-lab/newsroom/blob/master/readme.markdown
  74. https://github.com/clic-lab/newsroom/blob/master/setup.py
  75. https://summari.es/download/
  76. https://summari.es/
  77. http://jsonlines.org/
  78. https://github.com/site/terms
  79. https://github.com/site/privacy
  80. https://github.com/security
  81. https://githubstatus.com/
  82. https://help.github.com/
  83. https://github.com/contact
  84. https://github.com/pricing
  85. https://developer.github.com/
  86. https://training.github.com/
  87. https://github.blog/
  88. https://github.com/about
  89. https://github.com/clic-lab/newsroom
  90. https://github.com/clic-lab/newsroom

   hidden links:
  92. https://github.com/
  93. https://github.com/clic-lab/newsroom
  94. https://github.com/clic-lab/newsroom
  95. https://github.com/clic-lab/newsroom
  96. https://help.github.com/articles/which-remote-url-should-i-use
  97. https://github.com/clic-lab/newsroom#installation-instructions
  98. https://github.com/clic-lab/newsroom#getting-the-data
  99. https://github.com/clic-lab/newsroom#data-processing-tools
 100. https://github.com/clic-lab/newsroom#data-scraping
 101. https://github.com/clic-lab/newsroom#data-extraction
 102. https://github.com/clic-lab/newsroom#reading-and-analyzing-the-data
 103. https://github.com/clic-lab/newsroom#extraction-analysis
 104. https://github.com/clic-lab/newsroom#evaluation-tools
 105. https://github.com/
