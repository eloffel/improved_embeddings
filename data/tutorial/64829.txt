   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]sicara's blog
     * [9]machine learning
     * [10]id161
     * [11]data engineering
     * [12]dataviz
     * [13]best of ai
     * [14]about sicara
     __________________________________________________________________

python: how to train your own model with nltk and stanford ner tagger? (for
english, french, german   )

   [15]go to the profile of charles bochet
   [16]charles bochet (button) blockedunblock (button) followfollowing
   apr 25, 2018
   [1*kfzppokeis3hys4ivlhjfa.png]

   this guide shows how to use ner tagging for english and non-english
   languages with nltk and standford ner tagger (python). you can also use
   it to improve the stanford ner tagger.
     __________________________________________________________________

a short introduction to named-entities recognition

   first and foremost, a few explanations: [17]natural language processing
   (nlp) is a field of machine learning that seek to understand human
   languages. it   s one of the most difficult challenges artificial
   intelligence has to face. nlp covers several problematic from speech
   recognition, language generation, to information extraction.

   nlp provides specific tools to help programmers extract pieces of
   information in a given corpus. here is a short list of most common
   algorithms: tokenizing, part-of-speech tagging, id30, sentiment
   analysis, topic segmentation, and id39.

   [18]nltk (natural language toolkit) is a wonderful python package that
   provides a set of natural languages corpora and apis to an impressing
   diversity of nlp algorithms. it   s easy to use, complete, and well
   documented. of course, it   s free, open-source and community-driven.
     __________________________________________________________________

   let   s dive into id39 (ner). ner is about locating
   and classifying named entities in texts in order to recognize places,
   people, dates, values, organizations. as an example:

     twenty miles east of reno, nev., where packs of wild mustangs roam
     free through the parched landscape, tesla gigafactory 1 sprawls near
     interstate 80. [   ] the gigafactory, whose construction began in june
     2014, is not only outrageously large but also on its way to becoming
     the biggest manufacturing plant on earth. now 30 percent complete,
     its square footage already equals about 35 costco stores. [   ] (ny
     times, november 2017)

   this guide will show you how to implement ner tagging for non-english
   languages using nltk. enjoy reading!
     __________________________________________________________________

a step-by-step guide to non-english ner with nltk

   at sicara, i recently had to build algorithms to extract names and
   organization from a french corpus. as nltk comes along with the
   efficient stanford named entities tagger, i thought that nltk would do
   the work for me, out of the box.

   but i was wrong: i forgot my corpus was french and stanford ner tagger
   is designed for english language only.

   the only way to get it done is to train your own ner model. use cases :
     * you are working with a non-english corpus too (french, german and
       dutch   ) ;
     * you want to improve stanford english model.

   i hope this step-by-step guide will help you.
     __________________________________________________________________

step 1: implementing ner with stanford ner / nltk

   let   s start!

   because stanford ner tagger is written in java, you are going to need a
   proper java virtual machine to be installed on your computer.

   to do so, install java jre 8 or higher. you can install java jdk
   (developer kit) if you want because it contains jre. for linux users,
   you will find all needed information on this guide on [19]how to
   install java with apt-get on ubuntu 16.04. for other users, please have
   a look at [20]java official documentation.

   once installed, make sure your $java_home environment is set:
echo $java_home

   mine is /user/lib/jvm/java-8-oracle . that   s it for java!

   if you haven   t done it yet, create a virtual environment to work on:
mkvirtualenv .venv-ner --python=/usr/bin/python3
workon .venv-ner

   download nltk:
pip install nltk

   get stanford ner tagger. download zip file stanford-ner-xxxx-xx-xx.zip:
   see    download    section from [21]the stanford nlp website.

   unzip it and move ner-tagger ner-tagger.jar and gzipped english model
   english.all.3class.distsim.crf.ser.gz to your application folder:
cd /home/charles/downloads/
unzip stanford-ner-2017-06-09.zip
mv stanford-ner-2017-06-09/ner-tagger.jar {yourappfolder}/stanford-ner-tagger/ne
r-tagger.jar
mv stanford-ner-2017-06-09/classifiers/english.all.3class.distsim.crf.ser.gz {yo
urappfolder}/stanford-ner-tagger/ner-model-english.ser.gz

   we now have two files in our stanford-ner-tagger folder:
     * ner-tagger.jar: ner tagger engine properly said ;
     * ner-model-english.ser.gz : ner model trained on an english
       corpus.gi

   copy the following ner_english.py script to perform english named
   entities recognition:

   iframe: [22]/media/308373750c5ac9558bcc1bfb00b79fb2?postid=6d90573a9486

   run it:
python ner_english.py

   output should be:
[('twenty', 'o'), ('miles', 'o'), ('east', 'o'), ('of', 'o'), ('reno', 'organiza
tion'), (',', 'o'), ('nev.', 'location'), (',', 'o'), ('where', 'o'), ('packs',
'o'), ('of', 'o'), ('wild', 'o'), ('mustangs', 'o'), ('roam', 'o'), ('free', 'o'
), ('through', 'o'), ('the', 'o'), ('parched', 'o'), ('landscape', 'o'), (',', '
o'), ('tesla', 'organization'), ('gigafactory', 'organization'), ('1', 'organiza
tion'), ('sprawls', 'o'), ('near', 'o'), ('interstate', 'location'), ('80', 'loc
ation'), ('.', 'o'), ('the', 'o'), ('gigafactory', 'o'), (',', 'o'), ('whose', '
o'), ('construction', 'o'), ('began', 'o'), ('in', 'o'), ('june', 'date'), ('201
4', 'date'), (',', 'o'), ('is', 'o'), ('not', 'o'), ('only', 'o'), ('outrageousl
y', 'o'), ('large', 'o'), ('but', 'o'), ('also', 'o'), ('on', 'o'), ('its', 'o')
, ('way', 'o'), ('to', 'o'), ('becoming', 'o'), ('the', 'o'), ('biggest', 'o'),
('manufacturing', 'o'), ('plant', 'o'), ('on', 'o'), ('earth', 'o'), ('.', 'o'),
 ('now', 'o'), ('30', 'percent'), ('percent', 'percent'), ('complete', 'o'), (',
', 'o'), ('its', 'o'), ('square', 'o'), ('footage', 'o'), ('already', 'o'), ('eq
uals', 'o'), ('about', 'o'), ('35', 'o'), ('costco', 'organization'), ('stores',
 'o'), ('.', 'o')]

   not bad at all! however, it is not perfect :
     * it does not detect all values : but these can be easily extracted
       using regex ;
     * if does not detect all named entities : if you want to go further,
       you will have to train a more complete (or dataset specific) model.
     __________________________________________________________________

step 2: training our own (french) model

   now, you know how to run ner on an english corpus. what about other
   languages like french?

   you need to train your own model. to do so, create a
   dummy-french-corpus.tsv file in
   {yourappfolder}/stanford-ner-tagger/train with the following syntax:
en o
2017 date
, o
une o
intelligence o
artificielle o
est o
en o
mesure o
de o
d  velopper o
par o
elle-m  me o
super person
mario person
bros person
. o
sans o
avoir o
eu o
acc  s o
au o
code o
du o
jeu o
, o
elle o
a o
r  cr  e o
ce o
hit o
des o
consoles o
nintendo organization
. o
des o
chercheurs o
de o
l'institut organization
de organization
technologie organization
de o
g  orgie location
, o
aux o
etats-unis location
, o
viennent o
de o
la o
mettre o
   o
l'  preuve o
. o

   create a prop.txt file in the same folder too:
trainfile = train/dummy-french-corpus.tsv
serializeto = dummy-ner-model-french.ser.gz
map = word=0,answer=1
useclassfeature=true
useword=true
usengrams=true
nomidngrams=true
maxngraid113ng=6
useprev=true
usenext=true
usesequences=true
useprevsequences=true
maxleft=1
usetypeseqs=true
usetypeseqs2=true
usetypeysequences=true
wordshape=chris2uselc
usedisjunctive=true

   train it, using:
cd stanford-ner-tagger/
java -cp "stanford-ner.jar:lib/*" -mx4g edu.stanford.nlp.ie.crf.crfclassifier -p
rop train/prop.txt

   this should output dummy-ner-model-french.ser.gz file. create a new
   ner_french.py script to use it:

   iframe: [23]/media/0f2dc3fce8451f783ed71dfc5c6b4d8b?postid=6d90573a9486

   run it:
python ner_french.py

   the output seems to be right:
[('en', 'o'), ('2017', 'date'), (',', 'o'), ('une', 'o'), ('intelligence', 'o'),
 ('artificielle', 'o'), ('est', 'o'), ('en', 'o'), ('mesure', 'o'), ('de', 'o'),
 ('d  velopper', 'o'), ('par', 'o'), ('elle-m  me', 'o'), ('super', 'person'), ('m
ario', 'person'), ('bros.', 'o'), ('sans', 'o'), ('avoir', 'o'), ('eu', 'o'), ('
acc  s', 'o'), ('au', 'o'), ('code', 'o'), ('du', 'o'), ('jeu', 'o'), (',', 'o'),
 ('elle', 'o'), ('a', 'o'), ('r  cr  e', 'o'), ('ce', 'o'), ('hit', 'o'), ('des',
'o'), ('consoles', 'o'), ('nintendo', 'organization'), ('.', 'o'), ('des', 'o'),
 ('chercheurs', 'o'), ('de', 'o'), ("l'institut", 'organization'), ('de', 'organ
ization'), ('technologie', 'organization'), ('de', 'o'), ('g  orgie', 'location')
, (',', 'o'), ('aux', 'o'), ('etats-unis', 'location'), (',', 'o'), ('viennent',
 'o'), ('de', 'o'), ('la', 'o'), ('mettre', 'o'), ('  ', 'o'), ("l'  preuve", 'o')
, ('.', 'o')]

   congratulations, your model is trained! of course, as the corpus we
   trained it on is ridiculous, you won   t succeed on a different text:

   iframe: [24]/media/832f2922644343d88ea2aa368a565ee7?postid=6d90573a9486

   as you can see, none of the name entities have been caught:
[(   la   ,    o   ), (   premi  re   ,    o   ), (   falcon   ,    o   ), (   heavy   ,    o   ), (   de   ,    o   ), (
   l   entreprise   ,    o   ), (   spacex   ,    o   ), (   ,   ,    o   ), (   la   ,    o   ), (   plus   ,    o   ), (
   puissante   ,    o   ), (   fus  e   ,    o   ), (   am  ricaine   ,    o   ), (   jamais   ,    o   ), (   lanc
  e   ,    o   ), (   depuis   ,    o   ), (   plus   ,    o   ), (   de   ,    o   ), (   quarante   ,    o   ), (   ans
   ,    o   ), (   ,   ,    o   ), (   devrait   ,    o   ), (   bien   ,    o   ), (   emporter   ,    o   ), (   le   ,
   o   ), (   roadster   ,    o   ), (   de   ,    o   ), (   l   entrepreneur   ,    o   ), (   am  ricain   ,    o
   ), (   ,   ,    o   ), (   mais   ,    o   ), (   sur   ,    o   ), (   une   ,    o   ), (   orbite   ,    o   ), (   bi
en   ,    o   ), (   diff  rente   ,    o   ), (   .   ,    o   ), (   elon   ,    o   ), (   musk   ,    o   ), (   a   ,
   o   ), (   le   ,    o   ), (   sens   ,    o   ), (   du   ,    o   ), (   spectacle   ,    o   ), (   .   ,    o   )]

   you will need a bigger dataset to train on.
     __________________________________________________________________

step 3: performing ner on french article

   two solutions:
     * you face a custom use case (you have specialized vocabulary or you
       are looking for high accuracy), and you write your own corpus.tsv
       file by labeling a big corpus by yourself;
     * you want to perform regular ner and you use an existing labeled
       corpus.

   i have found this nice dataset (fr, de, nl) that you can use :
   [25]https://github.com/europeananewspapers/ner-corpora

   download [26]enp_fr.bnf.bio file into your train folder. adjust
   trainfile = train/enp_fr.bnf.bio and
   serializedto=trained-ner-model-french-ser.giz in prop.txt file and
   train your model again (that may last 10 minutes or more) :
cd stanford-ner-tagger/
java -cp "stanford-ner.jar:lib/*" -mx4g edu.stanford.nlp.ie.crf.crfclassifier -p
rop train/prop.txt

   run ner_french.py again:
[('la', 'o'), ('premi  re', 'o'), ('falcon', 'i-per'), ('heavy', 'i-per'), ('de',
 'o'), ("l'entreprise", 'o'), ('spacex', 'o'), (',', 'o'), ('la', 'o'), ('plus',
 'o'), ('puissante', 'o'), ('fus  e', 'o'), ('des', 'o'), ('etats-unis', 'i-loc')
, ('jamais', 'o'), ('lanc  e', 'o'), ('depuis', 'o'), ('plus', 'o'), ('de', 'o'),
 ('quarante', 'o'), ('ans', 'o'), (',', 'o'), ('devrait', 'o'), ('bien', 'o'), (
'emporter', 'o'), ('le', 'o'), ('roadster', 'o'), ('de', 'o'), ("l'entrepreneur"
, 'o'), ('am  ricain', 'o'), (',', 'o'), ('mais', 'o'), ('sur', 'o'), ('une', 'o'
), ('orbite', 'o'), ('bien', 'o'), ('diff  rente', 'o'), ('.', 'o'), ('elon', 'i-
per'), ('musk', 'i-per'), ('a', 'o'), ('le', 'o'), ('sens', 'o'), ('du', 'o'), (
'spectacle', 'o'), ('.', 'o')]

   now, it looks better, while not perfect !

   note: output shows    i-per    instead of    person   . it depends on how your
   initial corpus is labeled.

conclusions

   after a few hours on the internet, looking for tools or packages that
   could handle french ner tagging, i had to resign myself. the only
   software i found is freeling, which seems great but it seems rather
   hard to install and c++ written.

   neither nltk, spacy, nor scipy handles french ner tagging
   out-of-the-box. hopefully, you can train models for new languages but
   respective documentations are really light on that point.

   iframe: [27]/media/bdf60366e8957495a88a3a2569f89af7?postid=6d90573a9486

   did you like this article? feel free to comment or [28]contact me.
     __________________________________________________________________

useful links

     * [29]freeling: an nlp tool written in c++ that works for many
       languages including english, french, german, spanish, russian,
       italian, norwegian ;
     * [30]spacy: really good nlp python package with a nice
       documentation. here is a link to [31]add new language in spacy.
     * [32]nltk (natural language toolkit) is a wonderful python package
       that provides a set of natural languages corpora and apis to an
       impressing diversity of nlp algorithms
     * [33]stanford ner tagger: ner tagger you can use with nltk
       open-sourced by stanford engineers and used in this tutorial.

   thanks to [34]flavian hautbois and [35]pierre-henri cumenge.
     * [36]machine learning
     * [37]nlp
     * [38]data science
     * [39]nltk
     * [40]computer science

   (button)
   (button)
   (button) 386 claps
   (button) (button) (button) 14 (button) (button)

     (button) blockedunblock (button) followfollowing
   [41]go to the profile of charles bochet

[42]charles bochet

   [43]@charlesbochet cto [44]@luckeyhomes

     (button) follow
   [45]sicara's blog

[46]sicara's blog

   we build tailor-made ai and big data solutions for amazing clients

     * (button)
       (button) 386
     * (button)
     *
     *

   [47]sicara's blog
   never miss a story from sicara's blog, when you sign up for medium.
   [48]learn more
   never miss a story from sicara's blog
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://blog.sicara.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/6d90573a9486
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://blog.sicara.com/train-ner-model-with-nltk-stanford-tagger-english-french-german-6d90573a9486&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://blog.sicara.com/train-ner-model-with-nltk-stanford-tagger-english-french-german-6d90573a9486&source=--------------------------nav_reg&operation=register
   8. https://blog.sicara.com/?source=logo-lo_77iirieevqbf---fd4c083fbb93
   9. https://blog.sicara.com/machine-learning/home
  10. https://blog.sicara.com/computer-vision/home
  11. https://blog.sicara.com/data-engineering/home
  12. https://blog.sicara.com/data-visualization/home
  13. https://blog.sicara.com/best-of-ai/home
  14. https://www.sicara.com/en
  15. https://blog.sicara.com/@charlesb_55383?source=post_header_lockup
  16. https://blog.sicara.com/@charlesb_55383
  17. https://blog.algorithmia.com/introduction-natural-language-processing-nlp/
  18. http://www.nltk.org/
  19. https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04
  20. https://java.com/en/download/help/download_options.xml
  21. https://nlp.stanford.edu/software/crf-ner.shtml
  22. https://blog.sicara.com/media/308373750c5ac9558bcc1bfb00b79fb2?postid=6d90573a9486
  23. https://blog.sicara.com/media/0f2dc3fce8451f783ed71dfc5c6b4d8b?postid=6d90573a9486
  24. https://blog.sicara.com/media/832f2922644343d88ea2aa368a565ee7?postid=6d90573a9486
  25. https://github.com/europeananewspapers/ner-corpora
  26. https://github.com/europeananewspapers/ner-corpora/tree/master/enp_fr.bnf.bio
  27. https://blog.sicara.com/media/bdf60366e8957495a88a3a2569f89af7?postid=6d90573a9486
  28. https://www.sicara.com/contact-2/?utm_source=blog&utm_campaign=train-ner-model-with-nltk-and-stanford-ner-tagger-english-french-german-6d90573a9486
  29. http://nlp.lsi.upc.edu/freeling/demo/demo.php
  30. https://spacy.io/
  31. https://spacy.io/usage/adding-languages
  32. http://www.nltk.org/
  33. https://nlp.stanford.edu/software/crf-ner.html
  34. https://medium.com/@flavianhautbois?source=post_page
  35. https://medium.com/@pierrehenric?source=post_page
  36. https://blog.sicara.com/tagged/machine-learning?source=post
  37. https://blog.sicara.com/tagged/nlp?source=post
  38. https://blog.sicara.com/tagged/data-science?source=post
  39. https://blog.sicara.com/tagged/nltk?source=post
  40. https://blog.sicara.com/tagged/computer-science?source=post
  41. https://blog.sicara.com/@charlesb_55383?source=footer_card
  42. https://blog.sicara.com/@charlesb_55383
  43. http://twitter.com/charlesbochet
  44. http://twitter.com/luckeyhomes
  45. https://blog.sicara.com/?source=footer_card
  46. https://blog.sicara.com/?source=footer_card
  47. https://blog.sicara.com/
  48. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  50. https://medium.com/p/6d90573a9486/share/twitter
  51. https://medium.com/p/6d90573a9486/share/facebook
  52. https://medium.com/p/6d90573a9486/share/twitter
  53. https://medium.com/p/6d90573a9486/share/facebook
