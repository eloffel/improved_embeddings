   #[1]github [2]recent commits to numerical-linear-algebra:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]282
     * [35]star [36]4,824
     * [37]fork [38]1,161

[39]fastai/[40]numerical-linear-algebra

   [41]code [42]issues 5 [43]pull requests 2 [44]projects 0 [45]insights
   [46]permalink
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [47]sign up
   branch: master
   [48]numerical-linear-algebra/readme.md
   [49]find file copy path
   [50]@racheltho [51]racheltho [52]update readme.md [53]694453e jul 28,
   2017
   3 contributors
   (button)

users who have contributed to this file

     * [54]racheltho
     * [55]killthekitten
     * [56]anshbansal

   [57]@racheltho [58]@killthekitten [59]@anshbansal
   104 lines (82 sloc) 16.7 kb
   [60]raw [61]blame [62]history
   (button) (button)

computational id202 for coders

   this course is focused on the question: how do we do matrix
   computations with acceptable speed and acceptable accuracy?

   this course was taught in the [63]university of san francisco's masters
   of science in analytics program, summer 2017 (for graduate students
   studying to become data scientists). the course is taught in python
   with jupyter notebooks, using libraries such as scikit-learn and numpy
   for most lessons, as well as numba (a library that compiles python to c
   for faster performance) and pytorch (an alternative to numpy for the
   gpu) in a few lessons.

   accompanying the notebooks is a [64]playlist of lecture videos,
   available on youtube. if you are ever confused by a lecture or it goes
   too quickly, check out the beginning of the next video, where i review
   concepts from the previous lecture, often explaining things from a new
   perspective or with different illustrations, and answer questions.

getting help

   you can ask questions or share your thoughts and resources using the
   [65]computational id202 category on our fast.ai discussion
   forums.

table of contents

   the following listing links to the notebooks in this repository,
   rendered through the [66]nbviewer service. topics covered:

[67]0. course logistics ([68]video 1)

     * [69]my background
     * [70]teaching approach
     * [71]importance of technical writing
     * [72]list of excellent technical blogs
     * [73]id202 review resources

[74]1. why are we here? ([75]video 1)

   we start with a high level overview of some foundational concepts in
   numerical id202.
     * [76]matrix and tensor products
     * [77]matrix decompositions
     * [78]accuracy
     * [79]memory use
     * [80]speed
     * [81]parallelization & vectorization

[82]2. id96 with nmf and svd ([83]video 2 and [84]video 3)

   we will use the newsgroups dataset to try to identify the topics of
   different posts. we use a term-document matrix that represents the
   frequency of the vocabulary in the documents. we factor it using nmf,
   and then with svd.
     * [85]topic frequency-inverse document frequency (tf-idf)
     * [86]singular value decomposition (svd)
     * [87]non-negative id105 (nmf)
     * [88]stochastic id119 (sgd)
     * [89]intro to pytorch
     * [90]truncated svd

[91]3. background removal with robust pca ([92]video 3, [93]video 4, and
[94]video 5)

   another application of svd is to identify the people and remove the
   background of a surveillance video. we will cover robust pca, which
   uses randomized svd. and randomized svd uses the lu factorization.
     * [95]load and view video data
     * [96]svd
     * [97]principal component analysis (pca)
     * [98]l1 norm induces sparsity
     * [99]robust pca
     * [100]lu factorization
     * [101]stability of lu
     * [102]lu factorization with pivoting
     * [103]history of gaussian elimination
     * [104]block id127

[105]4. compressed sensing with robust regression ([106]video 6 and
[107]video 7)

   compressed sensing is critical to allowing ct scans with lower
   radiation-- the image can be reconstructed with less data. here we will
   learn the technique and apply it to ct images.
     * [108]broadcasting
     * [109]sparse matrices
     * [110]ct scans and compressed sensing
     * [111]l1 and l2 regression

[112]5. predicting health outcomes with id75s ([113]video 8)

     * [114]id75 in sklearn
     * [115]polynomial features
     * [116]speeding up with numba
     * [117]id173 and noise

[118]6. how to implement id75([119]video 8)

     * [120]how did scikit learn do it?
     * [121]naive solution
     * [122]normal equations and cholesky factorization
     * [123]qr factorization
     * [124]svd
     * [125]timing comparison
     * [126]conditioning & stability
     * [127]full vs reduced factorizations
     * [128]matrix inversion is unstable

[129]7. id95 with eigen decompositions ([130]video 9 and [131]video 10)

   we have applied svd to id96, background removal, and linear
   regression. svd is intimately connected to the eigen decomposition, so
   we will now learn how to calculate eigenvalues for a large matrix. we
   will use dbpedia data, a large dataset of wikipedia links, because here
   the principal eigenvector gives the relative importance of different
   wikipedia pages (this is the basic idea of google's id95
   algorithm). we will look at 3 different methods for calculating
   eigenvectors, of increasing complexity (and increasing usefulness!).
     * [132]svd
     * [133]dbpedia dataset
     * [134]power method
     * [135]qr algorithm
     * [136]two-phase approach to finding eigenvalues
     * [137]arnoldi iteration

[138]8. implementing qr factorization ([139]video 10)

     * [140]gram-schmidt
     * [141]householder
     * [142]stability examples
     __________________________________________________________________

why is this course taught in such a weird order?

   this course is structured with a top-down teaching method, which is
   different from how most math courses operate. typically, in a bottom-up
   approach, you first learn all the separate components you will be
   using, and then you gradually build them up into more complex
   structures. the problems with this are that students often lose
   motivation, don't have a sense of the "big picture", and don't know
   what they'll need.

   harvard professor david perkins has a book, [143]making learning whole
   in which he uses baseball as an analogy. we don't require kids to
   memorize all the rules of baseball and understand all the technical
   details before we let them play the game. rather, they start playing
   with a just general sense of it, and then gradually learn more
   rules/details as time goes on.

   if you took the fast.ai deep learning course, that is what we used. you
   can hear more about my teaching philosophy [144]in this blog post or
   [145]this talk i gave at the san francisco machine learning meetup.

   all that to say, don't worry if you don't understand everything at
   first! you're not supposed to. we will start using some "black boxes"
   or matrix decompositions that haven't yet been explained, and then
   we'll dig into the lower level details later.

   to start, focus on what things do, not what they are.
   ____________________ (button) go

     *    2019 github, inc.
     * [146]terms
     * [147]privacy
     * [148]security
     * [149]status
     * [150]help

     * [151]contact github
     * [152]pricing
     * [153]api
     * [154]training
     * [155]blog
     * [156]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [157]reload to refresh your
   session. you signed out in another tab or window. [158]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/fastai/numerical-linear-algebra/commits/master.atom
   3. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/fastai/numerical-linear-algebra/blob/master/readme.md
  32. https://github.com/join
  33. https://github.com/login?return_to=/fastai/numerical-linear-algebra
  34. https://github.com/fastai/numerical-linear-algebra/watchers
  35. https://github.com/login?return_to=/fastai/numerical-linear-algebra
  36. https://github.com/fastai/numerical-linear-algebra/stargazers
  37. https://github.com/login?return_to=/fastai/numerical-linear-algebra
  38. https://github.com/fastai/numerical-linear-algebra/network/members
  39. https://github.com/fastai
  40. https://github.com/fastai/numerical-linear-algebra
  41. https://github.com/fastai/numerical-linear-algebra
  42. https://github.com/fastai/numerical-linear-algebra/issues
  43. https://github.com/fastai/numerical-linear-algebra/pulls
  44. https://github.com/fastai/numerical-linear-algebra/projects
  45. https://github.com/fastai/numerical-linear-algebra/pulse
  46. https://github.com/fastai/numerical-linear-algebra/blob/694453e105b2a8f96b62b62d44d234c561eba268/readme.md
  47. https://github.com/join?source=prompt-blob-show
  48. https://github.com/fastai/numerical-linear-algebra
  49. https://github.com/fastai/numerical-linear-algebra/find/master
  50. https://github.com/racheltho
  51. https://github.com/racheltho
  52. https://github.com/fastai/numerical-linear-algebra/commit/694453e105b2a8f96b62b62d44d234c561eba268
  53. https://github.com/fastai/numerical-linear-algebra/commit/694453e105b2a8f96b62b62d44d234c561eba268
  54. https://github.com/racheltho
  55. https://github.com/killthekitten
  56. https://github.com/anshbansal
  57. https://github.com/fastai/numerical-linear-algebra/commits/master/readme.md?author=racheltho
  58. https://github.com/fastai/numerical-linear-algebra/commits/master/readme.md?author=killthekitten
  59. https://github.com/fastai/numerical-linear-algebra/commits/master/readme.md?author=anshbansal
  60. https://github.com/fastai/numerical-linear-algebra/raw/master/readme.md
  61. https://github.com/fastai/numerical-linear-algebra/blame/master/readme.md
  62. https://github.com/fastai/numerical-linear-algebra/commits/master/readme.md
  63. https://www.usfca.edu/arts-sciences/graduate-programs/analytics
  64. https://www.youtube.com/playlist?list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
  65. http://forums.fast.ai/c/lin-alg
  66. http://nbviewer.jupyter.org/
  67. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/0. course logistics.ipynb
  68. https://www.youtube.com/watch?v=8igzbmboa0i&index=1&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
  69. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/0. course logistics.ipynb#intro
  70. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/0. course logistics.ipynb#teaching
  71. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/0. course logistics.ipynb#writing-assignment
  72. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/0. course logistics.ipynb#excellent-technical-blogs
  73. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/0. course logistics.ipynb#linear-algebra
  74. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/1. why are we here.ipynb
  75. https://www.youtube.com/watch?v=8igzbmboa0i&index=1&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
  76. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/1. why are we here.ipynb#matrix-and-tensor-products
  77. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/1. why are we here.ipynb#matrix-decompositions
  78. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/1. why are we here.ipynb#accuracy
  79. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/1. why are we here.ipynb#memory-use
  80. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/1. why are we here.ipynb#speed
  81. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/1. why are we here.ipynb#scalability-/-parallelization
  82. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/2. id96 with nmf and svd.ipynb
  83. https://www.youtube.com/watch?v=kgd40idt8yy&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy&index=2
  84. https://www.youtube.com/watch?v=c8ketrwjjyo&index=3&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
  85. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/2. id96 with nmf and svd.ipynb#tf-idf
  86. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/2. id96 with nmf and svd.ipynb#singular-value-decomposition-(svd)
  87. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/2. id96 with nmf and svd.ipynb#non-negative-matrix-factorization-(nmf)
  88. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/2. id96 with nmf and svd.ipynb#gradient-descent
  89. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/2. id96 with nmf and svd.ipynb#pytorch
  90. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/2. id96 with nmf and svd.ipynb#truncated-svd
  91. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb
  92. https://www.youtube.com/watch?v=c8ketrwjjyo&index=3&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
  93. https://www.youtube.com/watch?v=ys8r2nutoak&index=4&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
  94. https://www.youtube.com/watch?v=o2x5kpjr5ag&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy&index=5
  95. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#load-and-view-the-data
  96. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#svd
  97. https://github.com/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb
  98. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#l1-norm-induces-sparsity
  99. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#robust-pca-(via-primary-component-pursuit)
 100. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#lu-factorization
 101. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#stability
 102. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#lu-factorization-with-partial-pivoting
 103. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#history-of-gaussian-elimination
 104. https://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/3. background removal with robust pca.ipynb#block-matrices
 105. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/4. compressed sensing of ct scans with robust regression.ipynb#4.-compressed-sensing-of-ct-scans-with-robust-regression
 106. https://www.youtube.com/watch?v=yy9_eynj5ty&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy&index=6
 107. https://www.youtube.com/watch?v=zugkvim6ehm&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy&index=7
 108. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/4. compressed sensing of ct scans with robust regression.ipynb#broadcasting
 109. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/4. compressed sensing of ct scans with robust regression.ipynb#sparse-matrices-(in-scipy)
 110. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/4. compressed sensing of ct scans with robust regression.ipynb#sparse-matrices-(in-scipy)
 111. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/4. compressed sensing of ct scans with robust regression.ipynb#regresssion
 112. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/5. health outcomes with id75.ipynb
 113. https://www.youtube.com/watch?v=sjx55v8zdxi&index=8&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
 114. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/5. health outcomes with id75.ipynb#linear-regression-in-scikit-learn
 115. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/5. health outcomes with id75.ipynb#polynomial-features
 116. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/5. health outcomes with id75.ipynb#speeding-up-feature-generation
 117. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/5. health outcomes with id75.ipynb#id173-and-noise
 118. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb
 119. https://www.youtube.com/watch?v=sjx55v8zdxi&index=8&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
 120. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#how-did-sklearn-do-it?
 121. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#naive-solution
 122. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#normal-equations-(cholesky)
 123. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#qr-factorization
 124. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#svd
 125. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#timing-comparison
 126. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#conditioning-&-stability
 127. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#full-vs-reduced-factorizations
 128. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/6. how to implement id75.ipynb#matrix-inversion-is-unstable
 129. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/7. id95 with eigen decompositions.ipynb
 130. https://www.youtube.com/watch?v=abb-w77yxd0&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy&index=9
 131. https://www.youtube.com/watch?v=1kw8bpa9qmq&index=10&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
 132. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/7. id95 with eigen decompositions.ipynb#motivation
 133. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/7. id95 with eigen decompositions.ipynb#dbpedia
 134. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/7. id95 with eigen decompositions.ipynb#power-method
 135. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/7. id95 with eigen decompositions.ipynb#qr-algorithm
 136. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/7. id95 with eigen decompositions.ipynb#a-two-phase-approach
 137. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/7. id95 with eigen decompositions.ipynb#arnoldi-iteration
 138. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/8. implementing qr factorization.ipynb
 139. https://www.youtube.com/watch?v=1kw8bpa9qmq&index=10&list=pltmwhnx-gukic92m1k0p6bionzb-mg0hy
 140. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/8. implementing qr factorization.ipynb#gram-schmidt
 141. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/8. implementing qr factorization.ipynb#householder
 142. http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/8. implementing qr factorization.ipynb#ex-9.2:-classical-vs-modified-gram-schmidt
 143. https://www.amazon.com/making-learning-whole-principles-transform/dp/0470633719
 144. http://www.fast.ai/2016/10/08/teaching-philosophy/
 145. https://vimeo.com/214233053
 146. https://github.com/site/terms
 147. https://github.com/site/privacy
 148. https://github.com/security
 149. https://githubstatus.com/
 150. https://help.github.com/
 151. https://github.com/contact
 152. https://github.com/pricing
 153. https://developer.github.com/
 154. https://training.github.com/
 155. https://github.blog/
 156. https://github.com/about
 157. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md
 158. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md

   hidden links:
 160. https://github.com/
 161. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md
 162. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md
 163. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md
 164. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#computational-linear-algebra-for-coders
 165. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#getting-help
 166. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#table-of-contents
 167. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#0-course-logistics-video-1
 168. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#1-why-are-we-here-video-1
 169. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#2-topic-modeling-with-nmf-and-svd-video-2-and-video-3
 170. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#3-background-removal-with-robust-pca-video-3-video-4-and-video-5
 171. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#4-compressed-sensing-with-robust-regression-video-6-and-video-7
 172. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#5-predicting-health-outcomes-with-linear-regressions-video-8
 173. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#6-how-to-implement-linear-regressionvideo-8
 174. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#7-id95-with-eigen-decompositions-video-9-and-video-10
 175. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#8-implementing-qr-factorization-video-10
 176. https://github.com/fastai/numerical-linear-algebra/blob/master/readme.md#why-is-this-course-taught-in-such-a-weird-order
 177. https://github.com/
