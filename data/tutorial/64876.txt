   #[1]github [2]recent commits to amr-eager:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]4
     * [35]star [36]28
     * [37]fork [38]13

[39]mdtux89/[40]amr-eager

   [41]code [42]issues 3 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   parser for id15
     * [47]92 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors
     * [51]bsd-2-clause

    1. [52]python 78.1%
    2. [53]lua 20.4%
    3. [54]shell 1.5%

   (button) python lua shell
   branch: master (button) new pull request
   [55]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/m
   [56]download zip

downloading...

   want to be notified of new releases in mdtux89/amr-eager?
   [57]sign in [58]sign up

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [60]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [61]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [62]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [63]permalink
   type            name           latest commit message commit time
        failed to load latest commit information.
        amr-evaluation
        [64]contrib
        [65]nnets
        [66]src
        [67].embs.py.swp
        [68].gitignore
        [69]license.txt
        [70]readme.md
        [71]action.py
        [72]alignments.py
        [73]amr_test.py
        [74]amrdata.py
        [75]buf.py
        [76]buftoken.py
        [77]collect.py
        [78]corenlp.properties
        [79]create_dataset.py     [80]fix tabs          jan 7, 2017
        [81]dependencies.py
        [82]download.sh
        [83]embs.py
        [84]en.out
        [85]en.sentences
        [86]history.py
        [87]hooks.py
        [88]node.py
        [89]oracle.py
        [90]orderedsets.py
        [91]parser.py
        [92]preprocessing.py
        [93]preprocessing.sh
        [94]projectivity.py
        [95]relations.py
        [96]resources.py
        [97]rules.py
        [98]stack.py
        [99]state.py
        [100]subgraph.py
        [101]tostring.py
        [102]train.sh
        [103]transition_system.py
        [104]variables.py

readme.md

amr-eager

   amr-eager [1] is a transition-based parser for abstract meaning
   representation ([105]http://amr.isi.edu/).

installation

     * make sure you have java 8
     * install torch and torch packages dp, nngraph and optim (using
       luarocks, as explained here:
       [106]http://torch.ch/docs/getting-started.html)
     * install the following python dependencies: numpy and pytorch
       ([107]https://github.com/hughperkins/pytorch)
     * run ./download.sh

run the parser with pretrained model

   note: the input file must contain english sentences (one sentence for
   line), see contrib/sample-sentences.txt for example.

   preprocessing:
./preprocessing.sh -s <sentences_file>

   you should get the output files in the same directory as the input
   files, with the prefix <sentences_file> and extensions .out and
   .sentences.
python preprocessing.py -f <sentences_file>

   you should get the output files in the same directory as the input
   files, with the prefix <sentences_file> and extensions .tokens.p,
   .dependencies.p.

   parsing:
python parser.py -f <file> -m <model_dir>

   if you wish to have the list of all nodes and edges in a jamr-like
   format, add option -n. without -m the parser uses the model provided in
   the directory ldc2015e86.

   mac users: the pretrained models seem to have compatibility errors when
   running on mac os x.

evaluation

   we provide id74 to compare amr graphs based on smatch
   ([108]http://amr.isi.edu/evaluation.html). the script computes a set of
   metrics between amr graphs in addition to the traditional smatch code:
     * unlabeled: smatch score computed on the predicted graphs after
       removing all edge labels
     * no wsd. smatch score while ignoring propbank senses (e.g., duck-01
       vs duck-02)
     * named ent. f-score on the id39 (:name roles)
     * wikification. f-score on the wikification (:wiki roles)
     * negations. f-score on the negation detection (:polarity roles)
     * concepts. f-score on the concept identification task
     * reentrancy. smatch computed on reentrant edges only
     * srl. smatch computed on :arg-i roles only

   the different metrics are detailed and explained in [1], which also
   uses them to evaluate several amr parsers. (some of the metrics were
   recently fixed and updated)
cd amrevaluation
./evaluation.sh <file>.parsed <gold_amr_file>

   to use the evaluation script with a different parser, provide the other
   parser's output as the first argument.

train a model

     * install jamr aligner ([109]https://github.com/jflanigan/jamr) and
       set path in preprocessing.sh
     * preprocess training and validation sets:
./preprocessing.sh <amr_file>
python preprocessing.py --amrs -f <amr_file>

     * run the oracle to generate the training data:
python collect.py -t <training_file> -m <model_dir>
python create_dataset.py -t <training_file> -v <validation_file> -m <model_dir>

     * train the three neural networks:
th nnets/actions.lua --model_dir <model_dir>
th nnets/labels.lua --model_dir <model_dir>
th nnets/reentrancies.lua --model_dir <model_dir>

       (use also --cuda if you want to use gpus).
     * finally, move the .dat models generated by torch in
       <model_dir>/actions.dat, <model_dir>/labels.dat and
       <model_dir>/reentrancies.dat.
     * to evaluate the performance of the neural networks run
th nnets/report.lua <model_dir>

     * note: if you used gpus to train the models,you will need to
       uncomment the line require cunn from nnets/classify.lua.

open-source code used:

     * smatch: [110]http://amr.isi.edu/evaluation.html
     * tokenizer: [111]https://github.com/redpony/cdec
     * corenlp: [112]http://stanfordnlp.github.io/corenlp/

references

   [1] "an incremental parser for id15", marco
   damonte, shay b. cohen and giorgio satta. proceedings of eacl (2017).
   url: [113]https://arxiv.org/abs/1608.06111

     *    2019 github, inc.
     * [114]terms
     * [115]privacy
     * [116]security
     * [117]status
     * [118]help

     * [119]contact github
     * [120]pricing
     * [121]api
     * [122]training
     * [123]blog
     * [124]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [125]reload to refresh your
   session. you signed out in another tab or window. [126]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/mdtux89/amr-eager/commits/master.atom
   3. https://github.com/mdtux89/amr-eager#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/mdtux89/amr-eager
  32. https://github.com/join
  33. https://github.com/login?return_to=/mdtux89/amr-eager
  34. https://github.com/mdtux89/amr-eager/watchers
  35. https://github.com/login?return_to=/mdtux89/amr-eager
  36. https://github.com/mdtux89/amr-eager/stargazers
  37. https://github.com/login?return_to=/mdtux89/amr-eager
  38. https://github.com/mdtux89/amr-eager/network/members
  39. https://github.com/mdtux89
  40. https://github.com/mdtux89/amr-eager
  41. https://github.com/mdtux89/amr-eager
  42. https://github.com/mdtux89/amr-eager/issues
  43. https://github.com/mdtux89/amr-eager/pulls
  44. https://github.com/mdtux89/amr-eager/projects
  45. https://github.com/mdtux89/amr-eager/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/mdtux89/amr-eager/commits/master
  48. https://github.com/mdtux89/amr-eager/branches
  49. https://github.com/mdtux89/amr-eager/releases
  50. https://github.com/mdtux89/amr-eager/graphs/contributors
  51. https://github.com/mdtux89/amr-eager/blob/master/license.txt
  52. https://github.com/mdtux89/amr-eager/search?l=python
  53. https://github.com/mdtux89/amr-eager/search?l=lua
  54. https://github.com/mdtux89/amr-eager/search?l=shell
  55. https://github.com/mdtux89/amr-eager/find/master
  56. https://github.com/mdtux89/amr-eager/archive/master.zip
  57. https://github.com/login?return_to=https://github.com/mdtux89/amr-eager
  58. https://github.com/join?return_to=/mdtux89/amr-eager
  59. https://desktop.github.com/
  60. https://desktop.github.com/
  61. https://developer.apple.com/xcode/
  62. https://visualstudio.github.com/
  63. https://github.com/mdtux89/amr-eager/tree/eaa1f68911758384420b02c3aae13ad206f7dfd2
  64. https://github.com/mdtux89/amr-eager/tree/master/contrib
  65. https://github.com/mdtux89/amr-eager/tree/master/nnets
  66. https://github.com/mdtux89/amr-eager/tree/master/src
  67. https://github.com/mdtux89/amr-eager/blob/master/.embs.py.swp
  68. https://github.com/mdtux89/amr-eager/blob/master/.gitignore
  69. https://github.com/mdtux89/amr-eager/blob/master/license.txt
  70. https://github.com/mdtux89/amr-eager/blob/master/readme.md
  71. https://github.com/mdtux89/amr-eager/blob/master/action.py
  72. https://github.com/mdtux89/amr-eager/blob/master/alignments.py
  73. https://github.com/mdtux89/amr-eager/blob/master/amr_test.py
  74. https://github.com/mdtux89/amr-eager/blob/master/amrdata.py
  75. https://github.com/mdtux89/amr-eager/blob/master/buf.py
  76. https://github.com/mdtux89/amr-eager/blob/master/buftoken.py
  77. https://github.com/mdtux89/amr-eager/blob/master/collect.py
  78. https://github.com/mdtux89/amr-eager/blob/master/corenlp.properties
  79. https://github.com/mdtux89/amr-eager/blob/master/create_dataset.py
  80. https://github.com/mdtux89/amr-eager/commit/044198c8a902ddeed2d2cfaa868887cabb833606
  81. https://github.com/mdtux89/amr-eager/blob/master/dependencies.py
  82. https://github.com/mdtux89/amr-eager/blob/master/download.sh
  83. https://github.com/mdtux89/amr-eager/blob/master/embs.py
  84. https://github.com/mdtux89/amr-eager/blob/master/en.out
  85. https://github.com/mdtux89/amr-eager/blob/master/en.sentences
  86. https://github.com/mdtux89/amr-eager/blob/master/history.py
  87. https://github.com/mdtux89/amr-eager/blob/master/hooks.py
  88. https://github.com/mdtux89/amr-eager/blob/master/node.py
  89. https://github.com/mdtux89/amr-eager/blob/master/oracle.py
  90. https://github.com/mdtux89/amr-eager/blob/master/orderedsets.py
  91. https://github.com/mdtux89/amr-eager/blob/master/parser.py
  92. https://github.com/mdtux89/amr-eager/blob/master/preprocessing.py
  93. https://github.com/mdtux89/amr-eager/blob/master/preprocessing.sh
  94. https://github.com/mdtux89/amr-eager/blob/master/projectivity.py
  95. https://github.com/mdtux89/amr-eager/blob/master/relations.py
  96. https://github.com/mdtux89/amr-eager/blob/master/resources.py
  97. https://github.com/mdtux89/amr-eager/blob/master/rules.py
  98. https://github.com/mdtux89/amr-eager/blob/master/stack.py
  99. https://github.com/mdtux89/amr-eager/blob/master/state.py
 100. https://github.com/mdtux89/amr-eager/blob/master/subgraph.py
 101. https://github.com/mdtux89/amr-eager/blob/master/tostring.py
 102. https://github.com/mdtux89/amr-eager/blob/master/train.sh
 103. https://github.com/mdtux89/amr-eager/blob/master/transition_system.py
 104. https://github.com/mdtux89/amr-eager/blob/master/variables.py
 105. http://amr.isi.edu/
 106. http://torch.ch/docs/getting-started.html
 107. https://github.com/hughperkins/pytorch
 108. http://amr.isi.edu/evaluation.html
 109. https://github.com/jflanigan/jamr
 110. http://amr.isi.edu/evaluation.html
 111. https://github.com/redpony/cdec
 112. http://stanfordnlp.github.io/corenlp/
 113. https://arxiv.org/abs/1608.06111
 114. https://github.com/site/terms
 115. https://github.com/site/privacy
 116. https://github.com/security
 117. https://githubstatus.com/
 118. https://help.github.com/
 119. https://github.com/contact
 120. https://github.com/pricing
 121. https://developer.github.com/
 122. https://training.github.com/
 123. https://github.blog/
 124. https://github.com/about
 125. https://github.com/mdtux89/amr-eager
 126. https://github.com/mdtux89/amr-eager

   hidden links:
 128. https://github.com/
 129. https://github.com/mdtux89/amr-eager
 130. https://github.com/mdtux89/amr-eager
 131. https://github.com/mdtux89/amr-eager
 132. https://help.github.com/articles/which-remote-url-should-i-use
 133. https://github.com/mdtux89/amr-eager#amr-eager
 134. https://github.com/mdtux89/amr-eager#installation
 135. https://github.com/mdtux89/amr-eager#run-the-parser-with-pretrained-model
 136. https://github.com/mdtux89/amr-eager#evaluation
 137. https://github.com/mdtux89/amr-eager#train-a-model
 138. https://github.com/mdtux89/amr-eager#open-source-code-used
 139. https://github.com/mdtux89/amr-eager#references
 140. https://github.com/
