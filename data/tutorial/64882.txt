   #[1]github [2]recent commits to umap:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]107
     * [35]star [36]2,655
     * [37]fork [38]238

[39]lmcinnes/[40]umap

   [41]code [42]issues 108 [43]pull requests 5 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   uniform manifold approximation and projection
   [47]umap [48]dimensionality-reduction [49]visualization
   [50]machine-learning [51]topological-data-analysis
     * [52]491 commits
     * [53]10 branches
     * [54]12 releases
     * [55]18 contributors
     * [56]bsd-3-clause

    1. [57]python 99.9%
    2. other 0.1%

   (button) python other
   branch: master (button) new pull request
   [58]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/l
   [59]download zip

downloading...

   want to be notified of new releases in lmcinnes/umap?
   [60]sign in [61]sign up

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [64]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [65]download the github extension for visual studio
   and try again.

   (button) go back
   [66]@lmcinnes
   [67]lmcinnes [68]version bump for patch release
   latest commit [69]9342e43 mar 26, 2019
   [70]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [71].idea [72]code style jun 20, 2018
   [73]ci_scripts [74]disable numba when doing coverage testing jun 4,
   2018
   [75]doc [76]fixed typo in basic usage littl -> little mar 25, 2019
   [77]examples [78]add example with sklearn pipeline aug 23, 2018
   [79]images [80]update mnist example nov 9, 2017
   [81]notebooks [82]add notebook for generating parameter animations apr
   19, 2018
   [83]umap [84]fix for issue [85]#212 mar 25, 2019
   [86].gitattributes
   [87].travis.yml
   [88]code_of_conduct.md [89]add code of conduct apr 11, 2018
   [90]contributing.md [91]create contributing.md aug 22, 2018
   [92]license.txt
   [93]makefile
   [94]readme.rst
   [95]docs_requirements.txt [96]docs build for gh-pages jul 31, 2018
   [97]paper.bib
   [98]paper.md
   [99]requirements.txt
   [100]setup.py

readme.rst

   [101]pypi version [102]conda-forge version [103]downloads from
   conda-forge [104]license [105]travis build status [106]test coverage
   status [107]documentation status [108]joss article for this repository

umap

   uniform manifold approximation and projection (umap) is a dimension
   reduction technique that can be used for visualisation similarly to
   id167, but also for general non-linear dimension reduction. the
   algorithm is founded on three assumptions about the data
    1. the data is uniformly distributed on a riemannian manifold;
    2. the riemannian metric is locally constant (or can be approximated
       as such);
    3. the manifold is locally connected.

   from these assumptions it is possible to model the manifold with a
   fuzzy topological structure. the embedding is found by searching for a
   low dimensional projection of the data that has the closest possible
   equivalent fuzzy topological structure.

   the details for the underlying mathematics can be found in [109]our
   paper on arxiv:

   mcinnes, l, healy, j, umap: uniform manifold approximation and
   projection for dimension reduction, arxiv e-prints 1802.03426, 2018

   the important thing is that you don't need to worry about that -- you
   can use umap right now for dimension reduction and visualisation as
   easily as a drop in replacement for scikit-learn's id167.

   documentation is [110]available via readthedocs.

how to use umap

   the umap package inherits from sklearn classes, and thus drops in
   neatly next to other sklearn transformers with an identical calling
   api.
import umap
from sklearn.datasets import load_digits

digits = load_digits()

embedding = umap.umap().fit_transform(digits.data)

   there are a number of parameters that can be set for the umap class;
   the major ones are as follows:

     * n_neighbors: this determines the number of neighboring points used
       in local approximations of manifold structure. larger values will
       result in more global structure being preserved at the loss of
       detailed local structure. in general this parameter should often be
       in the range 5 to 50, with a choice of 10 to 15 being a sensible
       default.
     * min_dist: this controls how tightly the embedding is allowed
       compress points together. larger values ensure embedded points are
       more evenly distributed, while smaller values allow the algorithm
       to optimise more accurately with regard to local structure.
       sensible values are in the range 0.001 to 0.5, with 0.1 being a
       reasonable default.
     * metric: this determines the choice of metric used to measure
       distance in the input space. a wide variety of metrics are already
       coded, and a user defined function can be passed as long as it has
       been jitd by numba.

   an example of making use of these options:
import umap
from sklearn.datasets import load_digits

digits = load_digits()

embedding = umap.umap(n_neighbors=5,
                      min_dist=0.3,
                      metric='correlation').fit_transform(digits.data)

   umap also supports fitting to sparse matrix data. for more details
   please see [111]the umap documentation

benefits of umap

   umap has a few signficant wins in its current incarnation.

   first of all umap is fast. it can handle large datasets and high
   dimensional data without too much difficulty, scaling beyond what most
   id167 packages can manage.

   second, umap scales well in embedding dimension -- it isn't just for
   visualisation! you can use umap as a general purpose dimension
   reduction technique as a preliminary step to other machine learning
   tasks. with a little care (documentation on how to be careful is
   coming) it partners well with the [112]hdbscan id91 library.

   third, umap often performs better at preserving aspects of global
   structure of the data than id167. this means that it can often provide
   a better "big picture" view of your data as well as preserving local
   neighbor relations.

   fourth, umap supports a wide variety of distance functions, including
   non-metric distance functions such as cosine distance and correlation
   distance. you can finally embed word vectors properly using cosine
   distance!

   fifth, umap supports adding new points to an existing embedding via the
   standard sklearn transform method. this means that umap can be used as
   a preprocessing transformer in sklearn pipelines.

   sixth, umap supports supervised and semi-supervised dimension
   reduction. this means that if you have label information that you wish
   to use as extra information for dimension reduction (even if it is just
   partial labelling) you can do that -- as simply as providing it as the
   y parameter in the fit method.

   finally umap has solid theoretical foundations in manifold learning
   (see [113]our paper on arxiv). this both justifies the approach and
   allows for further extensions that will soon be added to the library
   (embedding dataframes etc.).

performance and examples

   umap is very efficient at embedding large high dimensional datasets. in
   particular it scales well with both input dimension and embedding
   dimension. thus, for a problem such as the 784-dimensional mnist digits
   dataset with 70000 data samples, umap can complete the embedding in
   around 2.5 minutes (as compared with around 45 minutes for most id167
   implementations). despite this runtime efficiency umap still produces
   high quality embeddings.

   the obligatory mnist digits dataset, embedded in 2 minutes and 22
   seconds using a 3.1 ghz intel core i7 processor (n_neighbors=10,
   min_dist=0 .001):

   [114]umap embedding of mnist digits

   the mnist digits dataset is fairly straightforward however. a better
   test is the more recent "fashion mnist" dataset of images of fashion
   items (again 70000 data sample in 784 dimensions). umap produced this
   embedding in 2 minutes exactly (n_neighbors=5, min_dist=0.1):

   [115]umap embedding of "fashion mnist"

   the uci shuttle dataset (43500 sample in 8 dimensions) embeds well
   under correlation distance in 2 minutes and 39 seconds (note the longer
   time required for correlation distance computations):

   [116]umap embedding the uci shuttle dataset

installing

   umap depends upon scikit-learn, and thus scikit-learn's dependencies
   such as numpy and scipy. umap adds a requirement for numba for
   performance reasons. the original version used cython, but the improved
   code clarity, simplicity and performance of numba made the transition
   necessary.

   requirements:
     * numpy
     * scipy
     * scikit-learn
     * numba

   install options

   conda install, via the excellent work of the conda-forge team:
conda install -c conda-forge umap-learn

   the conda-forge packages are available for linux, os x, and windows 64
   bit.

   pypi install, presuming you have numba and sklearn and all its
   requirements (numpy and scipy) installed:
pip install umap-learn

   if pip is having difficulties pulling the dependencies then we'd
   suggest installing the dependencies manually using anaconda followed by
   pulling umap from pip:
conda install numpy scipy
conda install scikit-learn
conda install numba
pip install umap-learn

   for a manual install get this package:
wget https://github.com/lmcinnes/umap/archive/master.zip
unzip master.zip
rm master.zip
cd umap-master

   install the requirements
sudo pip install -r requirements.txt

   or
conda install scikit-learn numba

   install the package
python setup.py install

help and support

   documentation is at [117]readthedocs. the documentation [118]includes a
   faq that may answer your questions. if you still have questions then
   please [119]open an issue and i will try to provide any help and
   guidance that i can.

citation

   if you make use of this software for your work we would appreciate it
   if you would cite the paper from the journal of open source software:
@article{mcinnes2018umap-software,
  title={umap: uniform manifold approximation and projection},
  author={mcinnes, leland and healy, john and saul, nathaniel and grossberger, l
ukas},
  journal={the journal of open source software},
  volume={3},
  number={29},
  pages={861},
  year={2018}
}

   if you would like to cite this algorithm in your work the arxiv paper
   is the current reference:
@article{2018arxivumap,
     author = {{mcinnes}, l. and {healy}, j. and {melville}, j.},
     title = "{umap: uniform manifold approximation
     and projection for dimension reduction}",
     journal = {arxiv e-prints},
     archiveprefix = "arxiv",
     eprint = {1802.03426},
     primaryclass = "stat.ml",
     keywords = {statistics - machine learning,
                 computer science - computational geometry,
                 computer science - learning},
     year = 2018,
     month = feb,
}

license

   the umap package is 3-clause bsd licensed.

   we would like to note that the umap package makes heavy use of numfocus
   sponsored projects, and would not be possible without their support of
   those projects, so please [120]consider contributing to numfocus.

contributing

   contributions are more than welcome! there are lots of opportunities
   for potential projects, so please get in touch if you would like to
   help out. everything from code to notebooks to examples and
   documentation are all equally valuable so please don't feel you can't
   contribute. to contribute please [121]fork the project make your
   changes and submit a pull request. we will do our best to work through
   any issues with you and get your code merged into the main branch.

     *    2019 github, inc.
     * [122]terms
     * [123]privacy
     * [124]security
     * [125]status
     * [126]help

     * [127]contact github
     * [128]pricing
     * [129]api
     * [130]training
     * [131]blog
     * [132]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [133]reload to refresh your
   session. you signed out in another tab or window. [134]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/lmcinnes/umap/commits/master.atom
   3. https://github.com/lmcinnes/umap#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/lmcinnes/umap
  32. https://github.com/join
  33. https://github.com/login?return_to=/lmcinnes/umap
  34. https://github.com/lmcinnes/umap/watchers
  35. https://github.com/login?return_to=/lmcinnes/umap
  36. https://github.com/lmcinnes/umap/stargazers
  37. https://github.com/login?return_to=/lmcinnes/umap
  38. https://github.com/lmcinnes/umap/network/members
  39. https://github.com/lmcinnes
  40. https://github.com/lmcinnes/umap
  41. https://github.com/lmcinnes/umap
  42. https://github.com/lmcinnes/umap/issues
  43. https://github.com/lmcinnes/umap/pulls
  44. https://github.com/lmcinnes/umap/projects
  45. https://github.com/lmcinnes/umap/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/umap
  48. https://github.com/topics/dimensionality-reduction
  49. https://github.com/topics/visualization
  50. https://github.com/topics/machine-learning
  51. https://github.com/topics/topological-data-analysis
  52. https://github.com/lmcinnes/umap/commits/master
  53. https://github.com/lmcinnes/umap/branches
  54. https://github.com/lmcinnes/umap/releases
  55. https://github.com/lmcinnes/umap/graphs/contributors
  56. https://github.com/lmcinnes/umap/blob/master/license.txt
  57. https://github.com/lmcinnes/umap/search?l=python
  58. https://github.com/lmcinnes/umap/find/master
  59. https://github.com/lmcinnes/umap/archive/master.zip
  60. https://github.com/login?return_to=https://github.com/lmcinnes/umap
  61. https://github.com/join?return_to=/lmcinnes/umap
  62. https://desktop.github.com/
  63. https://desktop.github.com/
  64. https://developer.apple.com/xcode/
  65. https://visualstudio.github.com/
  66. https://github.com/lmcinnes
  67. https://github.com/lmcinnes/umap/commits?author=lmcinnes
  68. https://github.com/lmcinnes/umap/commit/9342e43ad56cb93e63089997fb84e6484f8b1f24
  69. https://github.com/lmcinnes/umap/commit/9342e43ad56cb93e63089997fb84e6484f8b1f24
  70. https://github.com/lmcinnes/umap/tree/9342e43ad56cb93e63089997fb84e6484f8b1f24
  71. https://github.com/lmcinnes/umap/tree/master/.idea
  72. https://github.com/lmcinnes/umap/commit/dbe311eb024f7cb8e0182edb121771cc5d1e6d8f
  73. https://github.com/lmcinnes/umap/tree/master/ci_scripts
  74. https://github.com/lmcinnes/umap/commit/d5893274183ad83ff5cda92775f5044925116eb5
  75. https://github.com/lmcinnes/umap/tree/master/doc
  76. https://github.com/lmcinnes/umap/commit/c40517174764cde9d02486baf8272f1fe2fadb71
  77. https://github.com/lmcinnes/umap/tree/master/examples
  78. https://github.com/lmcinnes/umap/commit/7963e426e2d1f58105d8712c0379114d93d32b07
  79. https://github.com/lmcinnes/umap/tree/master/images
  80. https://github.com/lmcinnes/umap/commit/76ea118456fbc409bf59ed1ec77fa88b76619a7e
  81. https://github.com/lmcinnes/umap/tree/master/notebooks
  82. https://github.com/lmcinnes/umap/commit/585c1039e17a669ea03b9ad12bb845e89f838350
  83. https://github.com/lmcinnes/umap/tree/master/umap
  84. https://github.com/lmcinnes/umap/commit/a858c6322a3e682d8daf9c17e13ac023f3e18cfa
  85. https://github.com/lmcinnes/umap/issues/212
  86. https://github.com/lmcinnes/umap/blob/master/.gitattributes
  87. https://github.com/lmcinnes/umap/blob/master/.travis.yml
  88. https://github.com/lmcinnes/umap/blob/master/code_of_conduct.md
  89. https://github.com/lmcinnes/umap/commit/52f42620884bb78e95eff372595b6c44bd6169b9
  90. https://github.com/lmcinnes/umap/blob/master/contributing.md
  91. https://github.com/lmcinnes/umap/commit/c652a31a3eb2e04a962d28da5771990f67a3a956
  92. https://github.com/lmcinnes/umap/blob/master/license.txt
  93. https://github.com/lmcinnes/umap/blob/master/makefile
  94. https://github.com/lmcinnes/umap/blob/master/readme.rst
  95. https://github.com/lmcinnes/umap/blob/master/docs_requirements.txt
  96. https://github.com/lmcinnes/umap/commit/0c5b9f065692a1255ff4ce29d7f789bd57e02f02
  97. https://github.com/lmcinnes/umap/blob/master/paper.bib
  98. https://github.com/lmcinnes/umap/blob/master/paper.md
  99. https://github.com/lmcinnes/umap/blob/master/requirements.txt
 100. https://github.com/lmcinnes/umap/blob/master/setup.py
 101. https://pypi.python.org/pypi/umap-learn/
 102. https://anaconda.org/conda-forge/umap-learn
 103. https://anaconda.org/conda-forge/umap-learn
 104. https://github.com/lmcinnes/umap/blob/master/license.txt
 105. https://travis-ci.org/lmcinnes/umap
 106. https://coveralls.io/github/lmcinnes/umap
 107. https://umap-learn.readthedocs.io/en/latest/?badge=latest
 108. https://doi.org/10.21105/joss.00861
 109. https://arxiv.org/abs/1802.03426
 110. https://umap-learn.readthedocs.io/
 111. https://umap-learn.readthedocs.io/
 112. https://github.com/scikit-learn-contrib/hdbscan
 113. https://arxiv.org/abs/1802.03426
 114. https://github.com/lmcinnes/umap/blob/master/images/umap_example_mnist1.png
 115. https://github.com/lmcinnes/umap/blob/master/images/umap_example_fashion_mnist1.png
 116. https://github.com/lmcinnes/umap/blob/master/images/umap_example_shuttle.png
 117. https://umap-learn.readthedocs.io/
 118. https://umap-learn.readthedocs.io/en/latest/faq.html
 119. https://github.com/lmcinnes/umap/issues/new
 120. https://www.numfocus.org/membership
 121. https://github.com/lmcinnes/umap/issues#fork-destination-box
 122. https://github.com/site/terms
 123. https://github.com/site/privacy
 124. https://github.com/security
 125. https://githubstatus.com/
 126. https://help.github.com/
 127. https://github.com/contact
 128. https://github.com/pricing
 129. https://developer.github.com/
 130. https://training.github.com/
 131. https://github.blog/
 132. https://github.com/about
 133. https://github.com/lmcinnes/umap
 134. https://github.com/lmcinnes/umap

   hidden links:
 136. https://github.com/
 137. https://github.com/lmcinnes/umap
 138. https://github.com/lmcinnes/umap
 139. https://github.com/lmcinnes/umap
 140. https://help.github.com/articles/which-remote-url-should-i-use
 141. https://github.com/lmcinnes/umap#umap
 142. https://github.com/lmcinnes/umap#how-to-use-umap
 143. https://github.com/lmcinnes/umap#benefits-of-umap
 144. https://github.com/lmcinnes/umap#performance-and-examples
 145. https://github.com/lmcinnes/umap#installing
 146. https://github.com/lmcinnes/umap#help-and-support
 147. https://github.com/lmcinnes/umap#citation
 148. https://github.com/lmcinnes/umap#license
 149. https://github.com/lmcinnes/umap#contributing
 150. https://github.com/
