   #[1]github [2]recent commits to syntaxnet_wrapper:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]10
     * [35]star [36]33
     * [37]fork [38]10

[39]livingbio/[40]syntaxnet_wrapper

   [41]code [42]issues 7 [43]pull requests 1 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a python wrapper for google syntaxnet
   [47]nlp [48]syntaxnet [49]python [50]google-syntaxnet
   [51]python-wrapper
     * [52]77 commits
     * [53]3 branches
     * [54]0 releases
     * [55]fetching contributors
     * [56]mit

    1. [57]python 81.3%
    2. [58]makefile 17.4%
    3. [59]shell 1.3%

   (button) python makefile shell
   branch: master (button) new pull request
   [60]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/l
   [61]download zip

downloading...

   want to be notified of new releases in livingbio/syntaxnet_wrapper?
   [62]sign in [63]sign up

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [65]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [66]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [67]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [68]permalink
   type          name         latest commit message commit time
        failed to load latest commit information.
        [69]syntaxnet_wrapper
        [70].gitignore
        [71]dockerfile
        [72]license
        [73]readme.md
        [74]setup.py

readme.md

a python wrapper for google syntaxnet

installation

prerequisites

install openjdk8.

add-apt-repository -y ppa:openjdk-r/ppa
apt-get -y update
apt-get -y install openjdk-8-jdk

install bazel and include bazel in $path.

   note: only bazel 0.4.3 is runnable. bazel 0.4.4 may cause errors.
wget https://github.com/bazelbuild/bazel/releases/download/0.4.3/bazel-0.4.3-ins
taller-linux-x86_64.sh
chmod +x bazel-0.4.3-installer-linux-x86_64.sh
./bazel-0.4.3-installer-linux-x86_64.sh --user
rm bazel-0.4.3-installer-linux-x86_64.sh
export path="$path:$home/bin"

install system package dependencies.

apt-get -y install swig unzip

install python packages

   note: current version of syntaxnet must be used with tensorflow r1.0.
pip install tensorflow protobuf asciitree mock

start installing

pip install git+ssh://git@github.com/livingbio/syntaxnet_wrapper.git#egg=syntaxn
et_wrapper

if installation failed...

   execute [75]test.sh, you should see following outputs:
1       bob     _       propn   nnp     number=sing|fpos=propn++nnp     2
nsubj   _       _
2       brought _       verb    vbd     mood=ind|tense=past|verbform=fin|fpos=ve
rb++vbd 0       root    _ _
3       the     _       det     dt      definite=def|prontype=art|fpos=det++dt
4       det     _       _
4       pizza   _       noun    nn      number=sing|fpos=noun++nn       2
dobj    _       _
5       to      _       adp     in      fpos=adp++in    6       case    _
_
6       alice.  _       propn   nnp     number=sing|fpos=propn++nnp     2
nmod    _       _

1                _       propn   nnp     fpos=propn++nnp 4       nsubj   _       _
2                _       adp     in      fpos=adp++in    3       case    _       _
3                 _       noun    nn      fpos=noun++nn   4       nmod    _       _
4                _       verb    vv      fpos=verb++vv   0       root    _       _
5                 _       verb    vv      fpos=verb++vv   4       mark    _       _

                          

   if the outputs are correct, problems are caused by the wrapper. if the
   outputs are wrong, compilation of syntaxnet may be failed.

usage

from syntaxnet_wrapper import tagger, parser

print tagger['en'].query('this is a good day', returnraw=true)
# 1       this    _       det     dt      _       0       _       _       _
# 2       is      _       verb    vbz     _       0       _       _       _
# 3       a       _       det     dt      _       0       _       _       _
# 4       good    _       adj     jj      _       0       _       _       _
# 5       day     _       noun    nn      _       0       _       _       _
tagger['en'].query('this is a good day')  # in default, return splitted text

print parser['en'].query('alice drove down the street in her car', returnraw=tru
e)
# 1       alice   _       noun    nnp     _       2       nsubj   _       _
# 2       drove   _       verb    vbd     _       0       root    _       _
# 3       down    _       adp     in      _       2       prep    _       _
# 4       the     _       det     dt      _       5       det     _       _
# 5       street  _       noun    nn      _       3       pobj    _       _
# 6       in      _       adp     in      _       2       prep    _       _
# 7       her     _       pron    prp$    _       8       poss    _       _
# 8       car     _       noun    nn      _       6       pobj    _       _

# use chinese model
print tagger['zh'].query(u'                     ', returnraw=true)
# 1                 _       noun    nn      fpos=noun++nn   0       _       _
_
# 2                 _       noun    nn      fpos=noun++nn   0       _       _
_
# 3                _       adv     rb      fpos=adv++rb    0       _       _
 _
# 4                _       adj     jj      fpos=adj++jj    0       _       _
 _

print parser['zh'].query(u'                     ', returnraw=true)
# 1                 _       noun    nn      fpos=noun++nn   4       nmod:tmod
_       _
# 2                 _       noun    nn      fpos=noun++nn   4       nsubj   _
_
# 3                _       adv     rb      fpos=adv++rb    4       advmod  _
 _
# 4                _       adj     jj      fpos=adj++jj    0       root    _
 _

language selection

   the default model is 'english-parsey'. this is [76]announced by google
   on may, 2016. other models, includes 'english', are trained by
   [77]universal dependencies, [78]announced by google on august, 2016.
from syntaxnet_wrapper import language_code_to_model_name
language_code_to_model_name
# {'ar': 'arabic',
#  'bg': 'bulgarian',
#  'ca': 'catalan',
#  'cs': 'czech',
#  'da': 'danish',
#  'de': 'german',
#  'el': 'greek',
#  'en': 'english-parsey',
#  'en-uni': 'english',
#  'es': 'spanish',
#  'et': 'estonian',
#  'eu': 'basque',
#  'fa': 'persian',
#  'fi': 'finnish',
#  'fr': 'french',
#  'ga': 'irish',
#  'gl': 'galician',
#  'hi': 'hindi',
#  'hr': 'croatian',
#  'hu': 'hungarian',
#  'id': 'indonesian',
#  'it': 'italian',
#  'iw': 'hebrew',
#  'kk': 'kazakh',
#  'la': 'latin',
#  'lv': 'latvian',
#  'nl': 'dutch',
#  'no': 'norwegian',
#  'pl': 'polish',
#  'pt': 'portuguese',
#  'ro': 'romanian',
#  'ru': 'russian',
#  'sl': 'slovenian',
#  'sv': 'swedish',
#  'ta': 'tamil',
#  'tr': 'turkish',
#  'zh': 'chinese',
#  'zh-cn': 'chinese',
#  'zh-tw': 'chinese'}

     *    2019 github, inc.
     * [79]terms
     * [80]privacy
     * [81]security
     * [82]status
     * [83]help

     * [84]contact github
     * [85]pricing
     * [86]api
     * [87]training
     * [88]blog
     * [89]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [90]reload to refresh your
   session. you signed out in another tab or window. [91]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/livingbio/syntaxnet_wrapper/commits/master.atom
   3. https://github.com/livingbio/syntaxnet_wrapper#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/livingbio/syntaxnet_wrapper
  32. https://github.com/join
  33. https://github.com/login?return_to=/livingbio/syntaxnet_wrapper
  34. https://github.com/livingbio/syntaxnet_wrapper/watchers
  35. https://github.com/login?return_to=/livingbio/syntaxnet_wrapper
  36. https://github.com/livingbio/syntaxnet_wrapper/stargazers
  37. https://github.com/login?return_to=/livingbio/syntaxnet_wrapper
  38. https://github.com/livingbio/syntaxnet_wrapper/network/members
  39. https://github.com/livingbio
  40. https://github.com/livingbio/syntaxnet_wrapper
  41. https://github.com/livingbio/syntaxnet_wrapper
  42. https://github.com/livingbio/syntaxnet_wrapper/issues
  43. https://github.com/livingbio/syntaxnet_wrapper/pulls
  44. https://github.com/livingbio/syntaxnet_wrapper/projects
  45. https://github.com/livingbio/syntaxnet_wrapper/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/nlp
  48. https://github.com/topics/syntaxnet
  49. https://github.com/topics/python
  50. https://github.com/topics/google-syntaxnet
  51. https://github.com/topics/python-wrapper
  52. https://github.com/livingbio/syntaxnet_wrapper/commits/master
  53. https://github.com/livingbio/syntaxnet_wrapper/branches
  54. https://github.com/livingbio/syntaxnet_wrapper/releases
  55. https://github.com/livingbio/syntaxnet_wrapper/graphs/contributors
  56. https://github.com/livingbio/syntaxnet_wrapper/blob/master/license
  57. https://github.com/livingbio/syntaxnet_wrapper/search?l=python
  58. https://github.com/livingbio/syntaxnet_wrapper/search?l=makefile
  59. https://github.com/livingbio/syntaxnet_wrapper/search?l=shell
  60. https://github.com/livingbio/syntaxnet_wrapper/find/master
  61. https://github.com/livingbio/syntaxnet_wrapper/archive/master.zip
  62. https://github.com/login?return_to=https://github.com/livingbio/syntaxnet_wrapper
  63. https://github.com/join?return_to=/livingbio/syntaxnet_wrapper
  64. https://desktop.github.com/
  65. https://desktop.github.com/
  66. https://developer.apple.com/xcode/
  67. https://visualstudio.github.com/
  68. https://github.com/livingbio/syntaxnet_wrapper/tree/5444875398b8c0e3ee800b12f29df70691af7120
  69. https://github.com/livingbio/syntaxnet_wrapper/tree/master/syntaxnet_wrapper
  70. https://github.com/livingbio/syntaxnet_wrapper/blob/master/.gitignore
  71. https://github.com/livingbio/syntaxnet_wrapper/blob/master/dockerfile
  72. https://github.com/livingbio/syntaxnet_wrapper/blob/master/license
  73. https://github.com/livingbio/syntaxnet_wrapper/blob/master/readme.md
  74. https://github.com/livingbio/syntaxnet_wrapper/blob/master/setup.py
  75. https://github.com/livingbio/syntaxnet_wrapper/blob/master/syntaxnet_wrapper/test.sh
  76. https://research.googleblog.com/2016/05/announcing-syntaxnet-worlds-most.html
  77. http://universaldependencies.org/
  78. https://research.googleblog.com/2016/08/meet-parseys-cousins-syntax-for-40.html
  79. https://github.com/site/terms
  80. https://github.com/site/privacy
  81. https://github.com/security
  82. https://githubstatus.com/
  83. https://help.github.com/
  84. https://github.com/contact
  85. https://github.com/pricing
  86. https://developer.github.com/
  87. https://training.github.com/
  88. https://github.blog/
  89. https://github.com/about
  90. https://github.com/livingbio/syntaxnet_wrapper
  91. https://github.com/livingbio/syntaxnet_wrapper

   hidden links:
  93. https://github.com/
  94. https://github.com/livingbio/syntaxnet_wrapper
  95. https://github.com/livingbio/syntaxnet_wrapper
  96. https://github.com/livingbio/syntaxnet_wrapper
  97. https://help.github.com/articles/which-remote-url-should-i-use
  98. https://github.com/livingbio/syntaxnet_wrapper#a-python-wrapper-for-google-syntaxnet
  99. https://github.com/livingbio/syntaxnet_wrapper#installation
 100. https://github.com/livingbio/syntaxnet_wrapper#prerequisites
 101. https://github.com/livingbio/syntaxnet_wrapper#install-openjdk8
 102. https://github.com/livingbio/syntaxnet_wrapper#install-bazel-and-include-bazel-in-path
 103. https://github.com/livingbio/syntaxnet_wrapper#install-system-package-dependencies
 104. https://github.com/livingbio/syntaxnet_wrapper#install-python-packages
 105. https://github.com/livingbio/syntaxnet_wrapper#start-installing
 106. https://github.com/livingbio/syntaxnet_wrapper#if-installation-failed
 107. https://github.com/livingbio/syntaxnet_wrapper#usage
 108. https://github.com/livingbio/syntaxnet_wrapper#language-selection
 109. https://github.com/
