   #[1]github [2]recent commits to grefenstette-stack-lstm:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]2
     * [35]star [36]20
     * [37]fork [38]7

[39]bdusell/[40]grefenstette-stack-lstm

   [41]code [42]issues 0 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   dynet implementation of id200 experiments by grefenstette et al.
   [47]neural-networks [48]deep-learning [49]nlp [50]nlp-machine-learning
   [51]id56 [52]dynet
     * [53]8 commits
     * [54]1 branch
     * [55]0 releases
     * [56]fetching contributors

    1. [57]python 99.0%
    2. [58]shell 1.0%

   (button) python shell
   branch: master (button) new pull request
   [59]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/b
   [60]download zip

downloading...

   want to be notified of new releases in bdusell/grefenstette-stack-lstm?
   [61]sign in [62]sign up

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [65]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [66]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [67]permalink
   type         name         latest commit message commit time
        failed to load latest commit information.
        [68].gitignore
        [69]readme.md
        [70]layer.py
        [71]requirements.txt
        [72]setup
        [73]stack_lstm.py
        [74]test.py
        [75]train.py
        [76]util.py

readme.md

id200

   this is a python/[77]dynet implementation of the neural id200
   model presented in the following paper:

   grefenstette, edward, karl moritz hermann, mustafa suleyman, and phil
   blunsom. "learning to transduce with unbounded memory." in advances in
   neural information processing systems, pp. 1828-1836. 2015.

   the purpose of this repository is to serve as a reference
   implementation for those who might be interested in reproducing the
   results presented in this paper, as fine-tuning the model to converge
   on algorithmic behavior can prove to be quite challenging. this
   repository includes a script for training a id200 on the sequence
   reversal transduction task.

setup

   this code runs in python 3 and requires a relatively recent (as of
   october 2017) version of dynet. as dynet is under active development,
   it is recommended to use the script ./setup to install the exact
   version of dynet tested with this code into an isolated [78]virtualenv.
./setup

   instructions for installing the virtualenv command can be found
   [79]here.

   in order to run a script inside the virtualenv, first source its
   activate script, then run the python script as usual.
. virtualenv/bin/activate
python train.py

running

   the script train.py can be used to train and test a id200 on the
   sequence reversal transduction task as described in the paper. note
   that it is rather typical for this architecture to get permanently
   stuck in a local minimum during training, so you may need to try more
   than once to get a successful run. using the default values for
   train.py, you should be able to successfully train a model about 80% of
   the time.

   note that the default size of the model is quite large, and the script
   is best run on gpu in this case. if you want to test out a smaller
   version of the model first, try running train.py with smaller values
   for number of hidden units, embedding size, etc. you can control the
   dimensions of the model trained, number of training samples, learning
   rate, and more by passing command line arguments to train.py. you can
   also save the parameters of the trained model to an output file. run
   python train.py --help for more details.

   for example:
python train.py \
    --hidden-units 20 \
    --source-alphabet-size 2 \
    --embedding-size 5 \
    --stack-embedding-size 3 \
    --training-length-range 10,10 \
    --test-length-range 10,10 \
    --test-data-size 10 \
    --output parameters.txt

   the script test.py can be used to run just the test phase on a
   pre-trained model. note that the model dimensions passed to test.py
   need to match those used with train.py.

   as noted by the authors, success during training is extremely sensitive
   to parameter initialization. in my experiments, i have found that
   initializing the parameters for the push and pop signal layers close to
   0 has a marked improvement on success rate, so they are initialized
   with an xavier initialization gain of 0.5 in this implementation, as
   opposed to the recommended value of 4. success is also very sensitive
   to the choice of optimizer (rmsprop in this case) and initial learning
   rate. the set of default values for train.py is one that happens to
   work well. if you deviate from these default values, you will need to
   fiddle a lot with the various arguments to train.py to get an
   experimental setup that succeeds.

   the source code for the model is found in stack_lstm.py.

author

   [80]brian dusell

     *    2019 github, inc.
     * [81]terms
     * [82]privacy
     * [83]security
     * [84]status
     * [85]help

     * [86]contact github
     * [87]pricing
     * [88]api
     * [89]training
     * [90]blog
     * [91]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [92]reload to refresh your
   session. you signed out in another tab or window. [93]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/bdusell/grefenstette-stack-lstm/commits/master.atom
   3. https://github.com/bdusell/grefenstette-stack-lstm#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/bdusell/grefenstette-stack-lstm
  32. https://github.com/join
  33. https://github.com/login?return_to=/bdusell/grefenstette-stack-lstm
  34. https://github.com/bdusell/grefenstette-stack-lstm/watchers
  35. https://github.com/login?return_to=/bdusell/grefenstette-stack-lstm
  36. https://github.com/bdusell/grefenstette-stack-lstm/stargazers
  37. https://github.com/login?return_to=/bdusell/grefenstette-stack-lstm
  38. https://github.com/bdusell/grefenstette-stack-lstm/network/members
  39. https://github.com/bdusell
  40. https://github.com/bdusell/grefenstette-stack-lstm
  41. https://github.com/bdusell/grefenstette-stack-lstm
  42. https://github.com/bdusell/grefenstette-stack-lstm/issues
  43. https://github.com/bdusell/grefenstette-stack-lstm/pulls
  44. https://github.com/bdusell/grefenstette-stack-lstm/projects
  45. https://github.com/bdusell/grefenstette-stack-lstm/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/neural-networks
  48. https://github.com/topics/deep-learning
  49. https://github.com/topics/nlp
  50. https://github.com/topics/nlp-machine-learning
  51. https://github.com/topics/id56
  52. https://github.com/topics/dynet
  53. https://github.com/bdusell/grefenstette-stack-lstm/commits/master
  54. https://github.com/bdusell/grefenstette-stack-lstm/branches
  55. https://github.com/bdusell/grefenstette-stack-lstm/releases
  56. https://github.com/bdusell/grefenstette-stack-lstm/graphs/contributors
  57. https://github.com/bdusell/grefenstette-stack-lstm/search?l=python
  58. https://github.com/bdusell/grefenstette-stack-lstm/search?l=shell
  59. https://github.com/bdusell/grefenstette-stack-lstm/find/master
  60. https://github.com/bdusell/grefenstette-stack-lstm/archive/master.zip
  61. https://github.com/login?return_to=https://github.com/bdusell/grefenstette-stack-lstm
  62. https://github.com/join?return_to=/bdusell/grefenstette-stack-lstm
  63. https://desktop.github.com/
  64. https://desktop.github.com/
  65. https://developer.apple.com/xcode/
  66. https://visualstudio.github.com/
  67. https://github.com/bdusell/grefenstette-stack-lstm/tree/a6ec5ed43c91e3caececf71a86726b567e5dca14
  68. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/.gitignore
  69. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/readme.md
  70. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/layer.py
  71. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/requirements.txt
  72. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/setup
  73. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/stack_lstm.py
  74. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/test.py
  75. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/train.py
  76. https://github.com/bdusell/grefenstette-stack-lstm/blob/master/util.py
  77. https://github.com/clab/dynet
  78. https://virtualenv.pypa.io/en/stable/
  79. https://virtualenv.pypa.io/en/stable/installation/
  80. http://bdusell.com/
  81. https://github.com/site/terms
  82. https://github.com/site/privacy
  83. https://github.com/security
  84. https://githubstatus.com/
  85. https://help.github.com/
  86. https://github.com/contact
  87. https://github.com/pricing
  88. https://developer.github.com/
  89. https://training.github.com/
  90. https://github.blog/
  91. https://github.com/about
  92. https://github.com/bdusell/grefenstette-stack-lstm
  93. https://github.com/bdusell/grefenstette-stack-lstm

   hidden links:
  95. https://github.com/
  96. https://github.com/bdusell/grefenstette-stack-lstm
  97. https://github.com/bdusell/grefenstette-stack-lstm
  98. https://github.com/bdusell/grefenstette-stack-lstm
  99. https://help.github.com/articles/which-remote-url-should-i-use
 100. https://github.com/bdusell/grefenstette-stack-lstm#stack-lstm
 101. https://github.com/bdusell/grefenstette-stack-lstm#setup
 102. https://github.com/bdusell/grefenstette-stack-lstm#running
 103. https://github.com/bdusell/grefenstette-stack-lstm#author
 104. https://github.com/
