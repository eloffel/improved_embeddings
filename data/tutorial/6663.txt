   #[1]github [2]recent commits to gym-super-mario:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]14
     * [35]star [36]200
     * [37]fork [38]72

[39]ppaquette/[40]gym-super-mario

   [41]code [42]issues 14 [43]pull requests 0 [44]projects 0 [45]insights
   branch: master
   (button) create new file [46]find file [47]history
   [48]gym-super-mario/ppaquette_gym_super_mario/
   [49]@jbeemster
   [50]jbeemster [51]harden process for terminating the fceux emulators
   (button)    
now works for multi-threaded systems over hundreds of thousands of runs

   latest commit [52]9f9789e jul 1, 2018
   [53]permalink
   type name latest commit message commit time
   [54]..
   failed to load latest commit information.
   [55]lua [56]not returning rgb data for tiles env - to speed up gameplay
   nov 23, 2016
   [57]roms
   [58]wrappers [59]transfered to gym_super_mario aug 26, 2016
   [60]readme.txt
   [61]__init__.py
   [62]nes_env.py
   [63]package_info.py
   [64]super_mario_bros.py

readme.txt

------------ nes - super mario bros ------------

=====================
  single level
=====================

this environment allows you to play the original super mario bros.

environments:
    - there are 64 environments available, with the following syntax:

        supermariobros-<world_number>-<level_number>-v0
         and
        supermariobros-<world_number>-<level_number>-tiles-v0

        - world_number is a number between 1 and 8
        - level_number is a number between 1 and 4

        e.g. supermariobros-6-1-v0, or supermariobros-3-4-tiles-v0

tiles vs regular:
    - environment with "tiles" in their name will return a 16x13 array
      representation of the screen, where each square can have one of
      the following values:

      - 0: empty space
      - 1: object (e.g. platform, coins, flagpole, etc.)
      - 2: enemy
      - 3: mario

    - environment without "tiles" will return a 256x224 array representation
      of the screen, where each square contains red, blue, and green value (rgb)

actions:
    - the nes controller is composed of 6 buttons (up, left, down, right, a, b)
    - the step function expects an array of 0 and 1 that represents

        - first item -  up
        - second item - left
        - third item -  down
        - fourth item - right
        - fifth item -  a
        - sixth item -  b

    e.g. action = [0, 0, 0, 1, 1, 0]    # [up, left, down, right, a, b]
    would activate right (4th element), and a (5th element)

    - an action of '1' represents a key down, and '0' a key up.
    - to toggle the button, you must issue a key up, then a key down.

initiating the environment:
    - supermariobros can be initiated with:

        import gym
        env = gym.make('supermariobros-1-1-v0')
        env.reset()

    - fceux will be launched when reset() is called

gameplay:
    - the game will automatically close if mario dies or shortly after the flagp
ole is touched
    - the game will only accept inputs after the timer has started to decrease (
i.e. it will automatically move
      through the menus and animations)
    - the total reward is the distance on the x axis.

rendering:
    - render() will not generate a 2nd rendering, because fceux is already doing
 so
    - to disable this behaviour and have render() generate a separate rendering,
 set env.no_render = false

variables:
    - the following variables are available in the info dict

        - distance        # total distance from the start (x-axis)
        - life            # number of lives mario has (3 if mario is alive, 0 is
 mario is dead)
        - score           # the current score
        - coins           # the current number of coins
        - time            # the current time left
        - player_status   # indicates if mario is small (value of 0), big (value
 of 1), or can shoot fireballs (2+)

        - ignore          # will be added with a value of true if the game is st
uck and is terminated early

    - a value of -1 indicates that the value is unknown

configuration:
    after creating the env, you can call env.configure() to configure some param
eters.

    - lock [e.g. env.configure(lock=multiprocessing_lock)]
        supermario requires a multiprocessing lock when running across multiple
processes, otherwise the game might get stuck

        you can either:

        1) [preferred] create a multiprocessing.lock() and pass it as a paramete
r to the configure() method
            [e.g. env.configure(lock=multiprocessing_lock)]

        2) create and close an environment before running your multiprocessing r
outine, this will create
            a singleton lock that will be cached in memory, and be used by all s
upermario environments afterwards
            [e.g. env = gym.make('supermariobros-...'); env.close()]

        3) manually wrap calls to reset() and close() in a multiprocessing.lock(
)

game is stuck:
    - in some cases, it is possible for the game to become stuck. this is likely
 due to a named pipe not working properly.

    - to reduce these issues, try to pass a lock to the configure method (see ab
ove), and try to reduce the number of
      running processes.

    - after 20 seconds, the stuck game will be automatically closed, and step()
will return done=true with an info
      dictionary containing ignore=true. you can simply check if the ignore key
is in the info dictionary, and ignore
      that specific episode.

wrappers:
    you can use wrappers to further customize the environment. wrappers need to
be manually copied from the wrappers folder.

        thewrapperone = wrapperonename(init_options)
        thewrappertwo = wrappertwoname(init_options)
        env = gym.make('ppaquette/supermariobros-1-2-v0')
        env = thewrappertwo(thewrapperone((env))

    - action space:

        you can change the action space by using the todiscrete or tobox wrapper

            wrapper = tobox()
            env = wrapper(env)

        todiscrete will convert the action space to a discrete(14) action space
with the relevant control.
        tobox will convert the action space to a box(6,) action space.

    - control:

        you can play the game manually with the setplayingmode wrapper.

            wrapper = setplayingmode('human')
            env = wrapper(env)

        valid options are 'human' or 'algo' (default)


=====================
  meta level
=====================

goal: 32,000 points
    - pass all levels

scoring:
    - each level score has been standardized on a scale of 0 to 1,000
    - the passing score for a level is 990 (99th percentile)
    - a bonus of 1,600 (50 * 32 levels) is given if all levels are passed
    - the score for a level is the average of the last 3 tries
    - if there has been less than 3 tries for a level, the missing tries will ha
ve a score of 0
      (e.g. if you score 1,000 on the first level on your first try, your level
score will be
      (1,000 + 0 + 0) / 3 = 333.33)
    - the total score is the sum of the level scores, plus the bonus if you pass
ed all levels.

    e.g. list of tries:

    - level 0: 500
    - level 0: 750
    - level 0: 800
    - level 0: 1,000
    - level 1: 100
    - level 1: 200

    level score for level 0 = [1,000 + 800 + 750] / 3 = 850     (average of last
 3 tries)
    level score for level 1 = [200 + 100 + 0] / 3 = 100         (tries not compl
eted have a score of 0)
    level score for levels 2 to 8 = 0
    bonus score for passing all levels = 0
    ------------------------
    total score = 850 + 100 + 0 + 0 = 950

changing level:
    - to unlock the next level, you must achieve a level score (avg of last 3 tr
ies) of at least 600
      (i.e. passing 60% of the last level)
    - there are 2 ways to change level:

    1) manual method

        - obs, reward, is_finished, info = env.step(action)
        - if is_finished is true, you can call env.change_level(level_number) to
 change to an unlocked level
        - level_number is a number from 0 to 31
        - you can see
            the current level with info["level"]
            the list of level score with info["scores"],
            the list of locked levels with info["locked_levels"]
            your total score with info["total_reward"]

        e.g.
            import gym
            env = gym.make('meta-supermariobros-v0')
            env.reset()
            total_score = 0
            while total_score < 32000:
                action = [0] * 6
                obs, reward, is_finished, info = env.step(action)
                env.render()
                total_score = info["total_reward"]
                if is_finished:
                    env.change_level(level_you_want)

    2) automatic change

        - if you don't call change_level() and the level is finished, the system
 will automatically select the
          unlocked level with the lowest level score (which is likely to be the
last unlocked level)

        e.g.
            import gym
            env = gym.make('meta-supermariobros-v0')
            env.reset()
            total_score = 0
            while total_score < 32000:
                action = [0] * 6
                obs, reward, is_finished, info = env.step(action)
                env.render()
                total_score = info["total_reward"]

-----------------------------------------------------

     *    2019 github, inc.
     * [65]terms
     * [66]privacy
     * [67]security
     * [68]status
     * [69]help

     * [70]contact github
     * [71]pricing
     * [72]api
     * [73]training
     * [74]blog
     * [75]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [76]reload to refresh your
   session. you signed out in another tab or window. [77]reload to refresh
   your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/ppaquette/gym-super-mario/commits/master.atom
   3. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario
  32. https://github.com/join
  33. https://github.com/login?return_to=/ppaquette/gym-super-mario
  34. https://github.com/ppaquette/gym-super-mario/watchers
  35. https://github.com/login?return_to=/ppaquette/gym-super-mario
  36. https://github.com/ppaquette/gym-super-mario/stargazers
  37. https://github.com/login?return_to=/ppaquette/gym-super-mario
  38. https://github.com/ppaquette/gym-super-mario/network/members
  39. https://github.com/ppaquette
  40. https://github.com/ppaquette/gym-super-mario
  41. https://github.com/ppaquette/gym-super-mario
  42. https://github.com/ppaquette/gym-super-mario/issues
  43. https://github.com/ppaquette/gym-super-mario/pulls
  44. https://github.com/ppaquette/gym-super-mario/projects
  45. https://github.com/ppaquette/gym-super-mario/pulse
  46. https://github.com/ppaquette/gym-super-mario/find/master
  47. https://github.com/ppaquette/gym-super-mario/commits/master/ppaquette_gym_super_mario
  48. https://github.com/ppaquette/gym-super-mario
  49. https://github.com/jbeemster
  50. https://github.com/ppaquette/gym-super-mario/commits?author=jbeemster
  51. https://github.com/ppaquette/gym-super-mario/commit/9f9789e634c9d1b320c33b89a07a259bff4be983
  52. https://github.com/ppaquette/gym-super-mario/commit/9f9789e634c9d1b320c33b89a07a259bff4be983
  53. https://github.com/ppaquette/gym-super-mario/tree/be8bca6ae279ba0d515883b292f71cdacbf6102b/ppaquette_gym_super_mario
  54. https://github.com/ppaquette/gym-super-mario
  55. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario/lua
  56. https://github.com/ppaquette/gym-super-mario/commit/350c2e149d4406b4ecd169c41c41ad214546a3b9
  57. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario/roms
  58. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario/wrappers
  59. https://github.com/ppaquette/gym-super-mario/commit/4723aa61066beacfa132f1f8f588d75e799c6734
  60. https://github.com/ppaquette/gym-super-mario/blob/master/ppaquette_gym_super_mario/readme.txt
  61. https://github.com/ppaquette/gym-super-mario/blob/master/ppaquette_gym_super_mario/__init__.py
  62. https://github.com/ppaquette/gym-super-mario/blob/master/ppaquette_gym_super_mario/nes_env.py
  63. https://github.com/ppaquette/gym-super-mario/blob/master/ppaquette_gym_super_mario/package_info.py
  64. https://github.com/ppaquette/gym-super-mario/blob/master/ppaquette_gym_super_mario/super_mario_bros.py
  65. https://github.com/site/terms
  66. https://github.com/site/privacy
  67. https://github.com/security
  68. https://githubstatus.com/
  69. https://help.github.com/
  70. https://github.com/contact
  71. https://github.com/pricing
  72. https://developer.github.com/
  73. https://training.github.com/
  74. https://github.blog/
  75. https://github.com/about
  76. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario
  77. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario

   hidden links:
  79. https://github.com/
  80. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario
  81. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario
  82. https://github.com/ppaquette/gym-super-mario/tree/master/ppaquette_gym_super_mario
  83. https://github.com/
