   #[1]github [2]recent commits to factorie:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]71
     * [35]star [36]546
     * [37]fork [38]146

[39]factorie/[40]factorie

   [41]code [42]issues 21 [43]pull requests 3 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   factorie is a toolkit for deployable probabilistic modeling,
   implemented as a software library in scala. it provides its users with
   a succinct language for creating relational factor graphs, estimating
   parameters and performing id136.
     * [47]5,148 commits
     * [48]5 branches
     * [49]23 releases
     * [50]fetching contributors
     * [51]apache-2.0

    1. [52]scala 96.6%
    2. [53]emacs lisp 2.2%
    3. other 1.2%

   (button) scala emacs lisp other
   branch: master (button) new pull request
   [54]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/f
   [55]download zip

downloading...

   want to be notified of new releases in factorie/factorie?
   [56]sign in [57]sign up

launching github desktop...

   if nothing happens, [58]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [59]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [60]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [61]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [62]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [63]bin
   [64]doc
   [65]lib/emacs
   [66]project
   [67]src
   [68].gitignore
   [69].hgignore
   [70].travis.yml
   [71]changelog.txt [72]update changelog nov 17, 2014
   [73]hacking.txt
   [74]license.txt
   [75]makefile
   [76]notice.txt
   [77]readme.md [78]fix broken markdown headings apr 16, 2017
   [79]todo.txt
   [80]bnd.bnd [81]added support for osgi metadata using bnd plugin oct 3,
   2016
   [82]pom.xml
   [83]sbt

readme.md

factorie

   [84]build status

   this directory contains the source of factorie, a toolkit for
   probabilistic modeling based on imperatively-defined factor graphs.
   more information, see [85]the factorie webpage.

installation

   installation relies on maven, version 3. if you don't already have
   maven, install it from [86]http://maven.apache.org/download.html.
   alternatively, you can use [87]sbt as outlined below (a script for
   running sbt comes bundled with factorie).

   to compile type
$ mvn compile

   to accomplish the same with sbt, type
$ ./sbt compile

   you might need additional memory. if so, for sbt type
export sbt_opts="$sbt_opts -xmx1g"

   and for maven type:
export maven_opts="$maven_opts -xmx1g -xx:maxpermsize=128m"

   to create a self-contained .jar, that contains factorie plus all its
   dependencies, including the scala runtime, type
$ mvn -dmaven.test.skip=true package -pjar-with-dependencies

   to accomplish the same with sbt, type
$ ./sbt assembly

   to create a similar self-contained .jar that also contains all
   resources needed for nlp (including our lexicons and pre-trained model
   parameters), type
$ mvn -dmaven.test.skip=true package -pnlp-jar-with-dependencies

   to accomplish the same with sbt, type
$ ./sbt -j-xmx2g with-nlp-resources:assembly


try out a simple example

   to get an idea what a simple factorie program might look like, open one
   of the class files in the tutorial package
$ ls src/main/scala/cc/factorie/tutorial

   to run one of these examples using maven type
$ mvn scala:run -dmainclass=cc.factorie.tutorial.grid

try out implemented nlp models

   then you can run some factorie tools from the command-line. for
   example, you can run many natural language processing tools.
$ bin/fac nlp --wsj-forward-pos --conll-chain-ner

   will launch an nlp server that will perform part-of-speech tagging and
   id39 in its input. the server listens for text on a
   socket, and spawns a parallel document processor on each request. to
   feed it input, type in a separate shell
$ echo "i told mr. smith to take a job at ibm in raleigh." | nc localhost 3228

   you can also run a id44 (lda) topic model.
   assume that "mytextdir" is a directory name containing many plain text
   documents each in its own file. then typing
$ bin/fac lda --read-dirs mytextdir --num-topics 20 --num-iterations 100

   will run 100 iterations of a sparse collapsed id150 on all the
   documents, and print out the results every 10 iterations. factorie's
   lda implementation is faster than mallet's.

   you can also train a document classifier. assume that "sportsdir" and
   "politicsdir" are each directories that contain plan text files in the
   categories sports and politics. typing
$ bin/fac classify --read-text-dirs sportsdir,politicsdir --write-classifier mym
odel.factorie

   will train a log-linear by maximum likelihood (maxent) and save it in
   the file "mymodel.factorie".

   the above are simply a few simple command-line options. internally the
   factorie library contains extensive and general facilities for factor
   graphs: data representation, model structure, id136, learning.

     *    2019 github, inc.
     * [88]terms
     * [89]privacy
     * [90]security
     * [91]status
     * [92]help

     * [93]contact github
     * [94]pricing
     * [95]api
     * [96]training
     * [97]blog
     * [98]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [99]reload to refresh your
   session. you signed out in another tab or window. [100]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/factorie/factorie/commits/master.atom
   3. https://github.com/factorie/factorie#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/factorie/factorie
  32. https://github.com/join
  33. https://github.com/login?return_to=/factorie/factorie
  34. https://github.com/factorie/factorie/watchers
  35. https://github.com/login?return_to=/factorie/factorie
  36. https://github.com/factorie/factorie/stargazers
  37. https://github.com/login?return_to=/factorie/factorie
  38. https://github.com/factorie/factorie/network/members
  39. https://github.com/factorie
  40. https://github.com/factorie/factorie
  41. https://github.com/factorie/factorie
  42. https://github.com/factorie/factorie/issues
  43. https://github.com/factorie/factorie/pulls
  44. https://github.com/factorie/factorie/projects
  45. https://github.com/factorie/factorie/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/factorie/factorie/commits/master
  48. https://github.com/factorie/factorie/branches
  49. https://github.com/factorie/factorie/releases
  50. https://github.com/factorie/factorie/graphs/contributors
  51. https://github.com/factorie/factorie/blob/master/license.txt
  52. https://github.com/factorie/factorie/search?l=scala
  53. https://github.com/factorie/factorie/search?l=emacs-lisp
  54. https://github.com/factorie/factorie/find/master
  55. https://github.com/factorie/factorie/archive/master.zip
  56. https://github.com/login?return_to=https://github.com/factorie/factorie
  57. https://github.com/join?return_to=/factorie/factorie
  58. https://desktop.github.com/
  59. https://desktop.github.com/
  60. https://developer.apple.com/xcode/
  61. https://visualstudio.github.com/
  62. https://github.com/factorie/factorie/tree/eec43bb76f09b9782d4689157c7130e3b31723c0
  63. https://github.com/factorie/factorie/tree/master/bin
  64. https://github.com/factorie/factorie/tree/master/doc
  65. https://github.com/factorie/factorie/tree/master/lib/emacs
  66. https://github.com/factorie/factorie/tree/master/project
  67. https://github.com/factorie/factorie/tree/master/src
  68. https://github.com/factorie/factorie/blob/master/.gitignore
  69. https://github.com/factorie/factorie/blob/master/.hgignore
  70. https://github.com/factorie/factorie/blob/master/.travis.yml
  71. https://github.com/factorie/factorie/blob/master/changelog.txt
  72. https://github.com/factorie/factorie/commit/9df67f01ad4523f3ce8ea2c6dcc99eba7eec44b0
  73. https://github.com/factorie/factorie/blob/master/hacking.txt
  74. https://github.com/factorie/factorie/blob/master/license.txt
  75. https://github.com/factorie/factorie/blob/master/makefile
  76. https://github.com/factorie/factorie/blob/master/notice.txt
  77. https://github.com/factorie/factorie/blob/master/readme.md
  78. https://github.com/factorie/factorie/commit/06044f4252e2271f16912f6f3f74c24f436a7a5d
  79. https://github.com/factorie/factorie/blob/master/todo.txt
  80. https://github.com/factorie/factorie/blob/master/bnd.bnd
  81. https://github.com/factorie/factorie/commit/626cae02ab22136a13d8fda53be79b81870db1dc
  82. https://github.com/factorie/factorie/blob/master/pom.xml
  83. https://github.com/factorie/factorie/blob/master/sbt
  84. https://travis-ci.org/factorie/factorie
  85. http://factorie.cs.umass.edu/
  86. http://maven.apache.org/download.html
  87. http://scala-sbt.org/
  88. https://github.com/site/terms
  89. https://github.com/site/privacy
  90. https://github.com/security
  91. https://githubstatus.com/
  92. https://help.github.com/
  93. https://github.com/contact
  94. https://github.com/pricing
  95. https://developer.github.com/
  96. https://training.github.com/
  97. https://github.blog/
  98. https://github.com/about
  99. https://github.com/factorie/factorie
 100. https://github.com/factorie/factorie

   hidden links:
 102. https://github.com/
 103. https://github.com/factorie/factorie
 104. https://github.com/factorie/factorie
 105. https://github.com/factorie/factorie
 106. https://help.github.com/articles/which-remote-url-should-i-use
 107. https://github.com/factorie/factorie#factorie
 108. https://github.com/factorie/factorie#installation
 109. https://github.com/factorie/factorie#try-out-a-simple-example
 110. https://github.com/factorie/factorie#try-out-implemented-nlp-models
 111. https://github.com/
