   #[1]github [2]recent commits to tensorflow-enet:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]7
     * [35]star [36]171
     * [37]fork [38]83

[39]kwotsin/[40]tensorflow-enet

   [41]code [42]issues 16 [43]pull requests 2 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   tensorflow implementation of enet
   [47]tensorflow [48]computer-vision [49]deep-learning
   [50]machine-learning [51]segmentation
     * [52]29 commits
     * [53]2 branches
     * [54]0 releases
     * [55]fetching contributors
     * [56]mit

    1. [57]python 98.6%
    2. [58]shell 1.4%

   (button) python shell
   branch: master (button) new pull request
   [59]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/k
   [60]download zip

downloading...

   want to be notified of new releases in kwotsin/tensorflow-enet?
   [61]sign in [62]sign up

launching github desktop...

   if nothing happens, [63]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [64]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [65]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [66]download the github extension for visual studio
   and try again.

   (button) go back
   [67]@kwotsin
   [68]kwotsin [69]update enet.py
   latest commit [70]8bb8322 dec 1, 2017
   [71]permalink
   type             name                latest commit message     commit time
        failed to load latest commit information.
        [72]checkpoint              [73]adding new code          jun 29, 2017
        [74]dataset                 [75]adding new code          jun 29, 2017
        [76]visualizations          [77]resized gif              jun 29, 2017
        [78]license
        [79]readme.md
        [80]enet.py
        [81]get_class_weights.py
        [82]predict_segmentation.py
        [83]preprocessing.py
        [84]test.sh                 [85]adding new code          jun 29, 2017
        [86]test_enet.py            [87]formatted tabs to spaces jun 30, 2017
        [88]train.sh                [89]adding new code          jun 29, 2017
        [90]train_enet.py

readme.md

tensorflow-enet

   tensorflow implementation of [91]enet: a deep neural network
   architecture for real-time semantic segmentation.

   this model was tested on the camvid dataset with street scenes taken
   from cambridge, uk. for more information on this dataset, please visit:
   [92]http://mi.eng.cam.ac.uk/research/projects/videorec/camvid/.

   requirements: tensorflow >= r1.2

visualizations

   note that the gifs may be out of sync if the network doesn't load them
   together. you can refresh your page to see them in sync.

test dataset output

   [93]camvid test dataset output [94]camvid test dataset output

tensorboard visualizations

   execute tensorboard --logdir=log on your root directory to monitor your
   training and watch your segmentation output form against the ground
   truth and the original image as you train your model.

contents

code

     * enet.py: the enet model definition, including the argument scope.
     * train_enet.py: the file for training. includes saving of images for
       visualization and tunable hyperparameters.
     * test_enet.py: the file for evaluating on the test dataset. includes
       option to visualize images as well.
     * preprocessing.py: the preprocessing does just image resizing, just
       in case anyone wants to use a smaller image size due to memory
       issues or for other datasets.
     * predict_segmentation.py: obtains the segmentation output for
       visualization purposes. you can create your own gif with these
       outputs.
     * get_class_weights.py: the file to obtain either the median
       frequency balancing class weights, or the custom enet function
       class weights.
     * train.sh: example training script to train the different variations
       of the model.
     * test.sh example testing script to test the different variants you
       trained.

folders

     * dataset: contains 6 folders that holds the original train-val-test
       images and their corresponding ground truth annotations.
     * checkpoint: the checkpoint directory that could be used for
       predicting the segmentation output. the model was trained using the
       default parameters mentioned in the paper, except that it uses
       median frequency balancing to obtain the class weights. the final
       checkpoint model size is under 5mb.
     * visualizations: contains the gif files that were created from the
       output of predict_segmentation.py.

important notes

    1. as the max unpooling layer is not officially available from
       tensorflow, a manual implementation was used to build the decoder
       portion of the network. this was based on the implementation
       suggested in this [95]tensorflow github issue.
    2. batch id172 and 2d spatial dropout are still retained
       during testing for good performance.
    3. class weights are used to tackle the problem of imbalanced classes,
       as certain classes appear more dominantly than others. more
       notably, the background class has weight of 0.0, in order to not
       reward the model for predicting background.
    4. on the labels and colouring scheme: the dataset consists of only 12
       labels, with the road-marking class merged with the road class. the
       last class is the unlabelled class.
    5. no preprocessing is done to the images for enet. (see references
       below on clarifications with author).
    6. once you've fine-tuned to get your best hyperparameters, there's an
       option to combine the training and validation datasets together.
       however, if your training dataset is large enough, this won't make
       a lot of difference.

implementation and architectural changes

    1. skip connections can be added to connect the corresponding encoder
       and decoder portions for better performance.
    2. the number of initial blocks and the depth of stage 2 residual
       bottlenecks are tunable hyperparameters. this allows you to build a
       deeper network if required, since enet is rather lightweight.
    3. fused batch id172 is used over standard batch id172
       for faster computations. see [96]tensorflow's best practices.
    4. to obtain the class weights for computing the weighted loss, median
       frequency balancing (mfb) is used by default instead of the custom
       enet class weighting function. this is due to an observation that
       mfb gives a slightly better performance than the custom function,
       at least on my machine. however, the option of using the enet
       custom class weights is still possible.

references

    1. [97]enet: a deep neural network architecture for real-time semantic
       segmentation
    2. [98]implementation of max unpooling
    3. [99]implementation of prelu
    4. [100]clarifications from enet author
    5. [101]original torch implementation of enet
    6. [102]resnet paper for clarification on residual bottlenecks
    7. [103]colouring scheme

feedback and bugs

   this implementation may not be entirely correct and may contain bugs.
   it would be great if the open source community can spot any bugs and
   raise a github issue/submit a pull request to fix those bugs if any!

     *    2019 github, inc.
     * [104]terms
     * [105]privacy
     * [106]security
     * [107]status
     * [108]help

     * [109]contact github
     * [110]pricing
     * [111]api
     * [112]training
     * [113]blog
     * [114]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [115]reload to refresh your
   session. you signed out in another tab or window. [116]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/kwotsin/tensorflow-enet/commits/master.atom
   3. https://github.com/kwotsin/tensorflow-enet#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/kwotsin/tensorflow-enet
  32. https://github.com/join
  33. https://github.com/login?return_to=/kwotsin/tensorflow-enet
  34. https://github.com/kwotsin/tensorflow-enet/watchers
  35. https://github.com/login?return_to=/kwotsin/tensorflow-enet
  36. https://github.com/kwotsin/tensorflow-enet/stargazers
  37. https://github.com/login?return_to=/kwotsin/tensorflow-enet
  38. https://github.com/kwotsin/tensorflow-enet/network/members
  39. https://github.com/kwotsin
  40. https://github.com/kwotsin/tensorflow-enet
  41. https://github.com/kwotsin/tensorflow-enet
  42. https://github.com/kwotsin/tensorflow-enet/issues
  43. https://github.com/kwotsin/tensorflow-enet/pulls
  44. https://github.com/kwotsin/tensorflow-enet/projects
  45. https://github.com/kwotsin/tensorflow-enet/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/tensorflow
  48. https://github.com/topics/computer-vision
  49. https://github.com/topics/deep-learning
  50. https://github.com/topics/machine-learning
  51. https://github.com/topics/segmentation
  52. https://github.com/kwotsin/tensorflow-enet/commits/master
  53. https://github.com/kwotsin/tensorflow-enet/branches
  54. https://github.com/kwotsin/tensorflow-enet/releases
  55. https://github.com/kwotsin/tensorflow-enet/graphs/contributors
  56. https://github.com/kwotsin/tensorflow-enet/blob/master/license
  57. https://github.com/kwotsin/tensorflow-enet/search?l=python
  58. https://github.com/kwotsin/tensorflow-enet/search?l=shell
  59. https://github.com/kwotsin/tensorflow-enet/find/master
  60. https://github.com/kwotsin/tensorflow-enet/archive/master.zip
  61. https://github.com/login?return_to=https://github.com/kwotsin/tensorflow-enet
  62. https://github.com/join?return_to=/kwotsin/tensorflow-enet
  63. https://desktop.github.com/
  64. https://desktop.github.com/
  65. https://developer.apple.com/xcode/
  66. https://visualstudio.github.com/
  67. https://github.com/kwotsin
  68. https://github.com/kwotsin/tensorflow-enet/commits?author=kwotsin
  69. https://github.com/kwotsin/tensorflow-enet/commit/8bb8322b343f65fa8740f731d31fcb361d8546f7
  70. https://github.com/kwotsin/tensorflow-enet/commit/8bb8322b343f65fa8740f731d31fcb361d8546f7
  71. https://github.com/kwotsin/tensorflow-enet/tree/8bb8322b343f65fa8740f731d31fcb361d8546f7
  72. https://github.com/kwotsin/tensorflow-enet/tree/master/checkpoint
  73. https://github.com/kwotsin/tensorflow-enet/commit/8b3096de06cd310c2848c0a3d4763543ec7e4830
  74. https://github.com/kwotsin/tensorflow-enet/tree/master/dataset
  75. https://github.com/kwotsin/tensorflow-enet/commit/8b3096de06cd310c2848c0a3d4763543ec7e4830
  76. https://github.com/kwotsin/tensorflow-enet/tree/master/visualizations
  77. https://github.com/kwotsin/tensorflow-enet/commit/6c37d67941aacbbcac331653c885ecc7c663258c
  78. https://github.com/kwotsin/tensorflow-enet/blob/master/license
  79. https://github.com/kwotsin/tensorflow-enet/blob/master/readme.md
  80. https://github.com/kwotsin/tensorflow-enet/blob/master/enet.py
  81. https://github.com/kwotsin/tensorflow-enet/blob/master/get_class_weights.py
  82. https://github.com/kwotsin/tensorflow-enet/blob/master/predict_segmentation.py
  83. https://github.com/kwotsin/tensorflow-enet/blob/master/preprocessing.py
  84. https://github.com/kwotsin/tensorflow-enet/blob/master/test.sh
  85. https://github.com/kwotsin/tensorflow-enet/commit/8b3096de06cd310c2848c0a3d4763543ec7e4830
  86. https://github.com/kwotsin/tensorflow-enet/blob/master/test_enet.py
  87. https://github.com/kwotsin/tensorflow-enet/commit/2f7777b5fb308ae947163fdcee55b978340869e0
  88. https://github.com/kwotsin/tensorflow-enet/blob/master/train.sh
  89. https://github.com/kwotsin/tensorflow-enet/commit/8b3096de06cd310c2848c0a3d4763543ec7e4830
  90. https://github.com/kwotsin/tensorflow-enet/blob/master/train_enet.py
  91. https://arxiv.org/pdf/1606.02147.pdf
  92. http://mi.eng.cam.ac.uk/research/projects/videorec/camvid/
  93. https://github.com/kwotsin/tensorflow-enet/blob/master/visualizations/original.gif
  94. https://github.com/kwotsin/tensorflow-enet/blob/master/visualizations/output.gif
  95. https://github.com/tensorflow/tensorflow/issues/2169
  96. https://www.tensorflow.org/performance/performance_guide
  97. https://arxiv.org/pdf/1606.02147.pdf
  98. https://github.com/tensorflow/tensorflow/issues/2169
  99. https://stackoverflow.com/questions/39975676/how-to-implement-prelu-activation-in-tensorflow
 100. https://github.com/e-lab/enet-training/issues/56
 101. https://github.com/e-lab/enet-training
 102. https://arxiv.org/pdf/1512.03385.pdf
 103. https://github.com/alexgkendall/segnet-tutorial/blob/c922cc4a4fcc7ce279dd998fb2d4a8703f34ebd7/scripts/test_segmentation_camvid.py
 104. https://github.com/site/terms
 105. https://github.com/site/privacy
 106. https://github.com/security
 107. https://githubstatus.com/
 108. https://help.github.com/
 109. https://github.com/contact
 110. https://github.com/pricing
 111. https://developer.github.com/
 112. https://training.github.com/
 113. https://github.blog/
 114. https://github.com/about
 115. https://github.com/kwotsin/tensorflow-enet
 116. https://github.com/kwotsin/tensorflow-enet

   hidden links:
 118. https://github.com/
 119. https://github.com/kwotsin/tensorflow-enet
 120. https://github.com/kwotsin/tensorflow-enet
 121. https://github.com/kwotsin/tensorflow-enet
 122. https://help.github.com/articles/which-remote-url-should-i-use
 123. https://github.com/kwotsin/tensorflow-enet#tensorflow-enet
 124. https://github.com/kwotsin/tensorflow-enet#visualizations
 125. https://github.com/kwotsin/tensorflow-enet#test-dataset-output
 126. https://github.com/kwotsin/tensorflow-enet#tensorboard-visualizations
 127. https://github.com/kwotsin/tensorflow-enet#contents
 128. https://github.com/kwotsin/tensorflow-enet#code
 129. https://github.com/kwotsin/tensorflow-enet#folders
 130. https://github.com/kwotsin/tensorflow-enet#important-notes
 131. https://github.com/kwotsin/tensorflow-enet#implementation-and-architectural-changes
 132. https://github.com/kwotsin/tensorflow-enet#references
 133. https://github.com/kwotsin/tensorflow-enet#feedback-and-bugs
 134. https://github.com/
