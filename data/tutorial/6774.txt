   #[1]github [2]recent commits to wammar-utils:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]3
     * [35]star [36]6
     * [37]fork [38]3

[39]wammar/[40]wammar-utils

   [41]code [42]issues 1 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   to be included as a submodule in other projects
     * [47]108 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors

    1. [51]python 75.5%
    2. [52]c++ 11.0%
    3. [53]perl 10.8%
    4. [54]shell 1.9%
    5. [55]matlab 0.3%
    6. [56]newlisp 0.3%
    7. other 0.2%

   (button) python c++ perl shell matlab newlisp other
   branch: master (button) new pull request
   [57]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/w
   [58]download zip

downloading...

   want to be notified of new releases in wammar/wammar-utils?
   [59]sign in [60]sign up

launching github desktop...

   if nothing happens, [61]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [62]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [63]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [64]download the github extension for visual studio
   and try again.

   (button) go back
   fetching latest commit   
   cannot retrieve the latest commit at this time.
   [65]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [66]simulatedannealing
   [67]europarl-tools
   [68]alignmenterrorrate.h
   [69]clusterscomparer.h
   [70]dxdsvd.m
   [71]fstutils.cc
   [72]fstutils.h
   [73]lbfgsutils.h
   [74]readme.md
   [75]samplers.h
   [76]stringutils.h
   [77]wikiextractor.py
   [78]add-prefix-to-conll-column.py
   [79]add-id97-header.py
   [80]align-europarl.sh
   [81]alignments-to-dictionary.py
   [82]american_english.txt
   [83]append-conll-columns.py
   [84]arabic-morphanalyzer.py
   [85]attach-left-parser.py
   [86]attach-right-parser.py
   [87]british_english.txt
   [88]buckwalter2unicode.py
   [89]check-readme.disk.py
   [90]check-token-count.py
   [91]clear-conll-column-k.py
   [92]clip-file-after-kth-match.py
   [93]combine-token-label-in-mrg-file.py
   [94]combine-token-label-in-one-file.py
   [95]common_typos.py
   [96]compose-parallel-corpora.py
   [97]compute-average-embedding.py
   [98]compute-embeddings-coverage.py
   [99]conllx-eval.v1_8.pl
   [100]convert-bitext-many2many-to-one2many.py
   [101]convert-bitext-many2many-to-one2one.py
   [102]convert-bitext-one2one-to-one2many.py
   [103]convert-closure-embeddings-to-word-embeddings.py
   [104]convert-conll-format-to-sent-per-line.py
   [105]convert-conll-to-text.py
   [106]convert-conllu-to-conll06.py
   [107]convert-flat-parses-to-pos-tags.py
   [108]convert-libid166-format-to-arff-format.py
   [109]convert-libid166-sparse-format-to-arff-sparse-format.py
   [110]convert-parallel-sent-per-line-to-one-sent-per-line.py
   [111]convert-sent-per-line-to-conll-format.py
   [112]convert-to-one-target-per-line.py
   [113]copy-conll-columns-to-another-file.py
   [114]copy-conll-columns.py
   [115]create-vocab.py
   [116]decode-corpus.py
   [117]diff-vocab.py
   [118]download-and-process-wikipedia-text.sh
   [119]encode-corpus.py
   [120]eval-labels.py
   [121]extract-wiktionary-translations.py
   [122]filter-irrelevant-params.py
   [123]filter-long-sent-pairs.py
   [124]filter-unused-embeddings.py
   [125]filter-word-alignment-parameters.py
   [126]flip-parallel-corpus.py
   [127]frequently_used_commands.sh
   [128]gardner-et-al-emnlp-2015.py
   [129]generate-crosslingual-punctuation-mappings.py
   [130]head-conll.py
   [131]horizontal-split-parallel-corpus.py
   [132]induce-code-switches-in-conll.py
   [133]induce-typos-in-conll.py
   [134]intersect-vocabs.py
   [135]iso_639_1_codes.py
   [136]letters-to-clusters.py
   [137]literal-translate.py
   [138]log-miner.py
   [139]lowercase-initial.py
   [140]lowercase.py
   [141]map-words-to-transitive-closures.py
   [142]normalize-arabic.py
   [143]normalize-brown-cluster-emission-probs.py
   [144]normalize-embeddings.py
   [145]paste.py
   [146]prefix_lines.py
   [147]prefix_tokens.py
   [148]prepare-data-for-multilingual-embeddings.sh
   [149]preprocess-czech.py
   [150]preprocess-english.py
   [151]preprocess-iris-dataset.py
   [152]preprocess-mnist-dataset.py
   [153]print-corpus-statistics.py
   [154]print-letters-of-unique-words.py
   [155]print-unique-words.py
   [156]process-typology-features.py
   [157]project_foreign_words_to_english_brown_clusters.py
   [158]prune-long-lines.py
   [159]remove-conll-column-k.py
   [160]remove-empty-lines.py
   [161]remove-non-latin-words.py
   [162]remove-sequences-of-different-length.py
   [163]replace-words-in-conll-corpus.py
   [164]replace-words-in-monolingual-corpus.py
   [165]resize-embeddings.py
   [166]score-classes.py
   [167]score-vm.py
   [168]shuffle-lines.py
   [169]split-berg-kirkpatrick-pos-output-into-gold-vs-pred.py
   [170]split-corpus-files.py
   [171]sswl_features.csv
   [172]strip_lines.py
   [173]swap-conll-columns.py
   [174]symmetrize-word-alignment-parameters.py
   [175]task_names.txt
   [176]tokenize-on.py
   [177]tokenize-parallel.py
   [178]train-multilingual-embeddings.sh
   [179]trie-encode-corpus.py
   [180]tuple.h
   [181]uk2us.py
   [182]union-vocab.py
   [183]unordered_map_serialization.hpp
   [184]vertical-split-corpus.py
   [185]vertical-split-parallel-corpus.py
   [186]wals_features.csv
   [187]wiktionary-multilingual-to-bilingual-dictionaries.py
   [188]word-alignments-to-dependency-parses.py

readme.md

wammar-utils

   this repository is designed to be included as a submodule in other
   repositories

description of utilities:

create-vocab.py

   a python script that extracts the types in a text file and give them
   integer ids.

================ encode-corpus.py

   a python script that replaces each type in the input file to a unique
   integer id in the target file. another file is output which contains
   the id:type mappings.

================ decode-corpus.py

   inverse of encode-corpus.py.

========================= filter-long-sent-pairs.py

   a python script that filters out parallel sentences with number of
   tokens.

========================= split-parallel-corpus.py

   a python script that splits a parallel corpus into train/dev/test sets.

========================================= american-english.txt,
british-english.txt

   american vs. british english vocabulary collected from
   [189]http://www.tysto.com/uk-us-spelling-list.html

     *    2019 github, inc.
     * [190]terms
     * [191]privacy
     * [192]security
     * [193]status
     * [194]help

     * [195]contact github
     * [196]pricing
     * [197]api
     * [198]training
     * [199]blog
     * [200]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [201]reload to refresh your
   session. you signed out in another tab or window. [202]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/wammar/wammar-utils/commits/master.atom
   3. https://github.com/wammar/wammar-utils#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/wammar/wammar-utils
  32. https://github.com/join
  33. https://github.com/login?return_to=/wammar/wammar-utils
  34. https://github.com/wammar/wammar-utils/watchers
  35. https://github.com/login?return_to=/wammar/wammar-utils
  36. https://github.com/wammar/wammar-utils/stargazers
  37. https://github.com/login?return_to=/wammar/wammar-utils
  38. https://github.com/wammar/wammar-utils/network/members
  39. https://github.com/wammar
  40. https://github.com/wammar/wammar-utils
  41. https://github.com/wammar/wammar-utils
  42. https://github.com/wammar/wammar-utils/issues
  43. https://github.com/wammar/wammar-utils/pulls
  44. https://github.com/wammar/wammar-utils/projects
  45. https://github.com/wammar/wammar-utils/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/wammar/wammar-utils/commits/master
  48. https://github.com/wammar/wammar-utils/branches
  49. https://github.com/wammar/wammar-utils/releases
  50. https://github.com/wammar/wammar-utils/graphs/contributors
  51. https://github.com/wammar/wammar-utils/search?l=python
  52. https://github.com/wammar/wammar-utils/search?l=c++
  53. https://github.com/wammar/wammar-utils/search?l=perl
  54. https://github.com/wammar/wammar-utils/search?l=shell
  55. https://github.com/wammar/wammar-utils/search?l=matlab
  56. https://github.com/wammar/wammar-utils/search?l=newlisp
  57. https://github.com/wammar/wammar-utils/find/master
  58. https://github.com/wammar/wammar-utils/archive/master.zip
  59. https://github.com/login?return_to=https://github.com/wammar/wammar-utils
  60. https://github.com/join?return_to=/wammar/wammar-utils
  61. https://desktop.github.com/
  62. https://desktop.github.com/
  63. https://developer.apple.com/xcode/
  64. https://visualstudio.github.com/
  65. https://github.com/wammar/wammar-utils/tree/27596528425b014cf3f15ecfbf23a2ff0ba3a173
  66. https://github.com/wammar/wammar-utils/tree/master/simulatedannealing
  67. https://github.com/wammar/wammar-utils/tree/master/europarl-tools
  68. https://github.com/wammar/wammar-utils/blob/master/alignmenterrorrate.h
  69. https://github.com/wammar/wammar-utils/blob/master/clusterscomparer.h
  70. https://github.com/wammar/wammar-utils/blob/master/dxdsvd.m
  71. https://github.com/wammar/wammar-utils/blob/master/fstutils.cc
  72. https://github.com/wammar/wammar-utils/blob/master/fstutils.h
  73. https://github.com/wammar/wammar-utils/blob/master/lbfgsutils.h
  74. https://github.com/wammar/wammar-utils/blob/master/readme.md
  75. https://github.com/wammar/wammar-utils/blob/master/samplers.h
  76. https://github.com/wammar/wammar-utils/blob/master/stringutils.h
  77. https://github.com/wammar/wammar-utils/blob/master/wikiextractor.py
  78. https://github.com/wammar/wammar-utils/blob/master/add-prefix-to-conll-column.py
  79. https://github.com/wammar/wammar-utils/blob/master/add-id97-header.py
  80. https://github.com/wammar/wammar-utils/blob/master/align-europarl.sh
  81. https://github.com/wammar/wammar-utils/blob/master/alignments-to-dictionary.py
  82. https://github.com/wammar/wammar-utils/blob/master/american_english.txt
  83. https://github.com/wammar/wammar-utils/blob/master/append-conll-columns.py
  84. https://github.com/wammar/wammar-utils/blob/master/arabic-morphanalyzer.py
  85. https://github.com/wammar/wammar-utils/blob/master/attach-left-parser.py
  86. https://github.com/wammar/wammar-utils/blob/master/attach-right-parser.py
  87. https://github.com/wammar/wammar-utils/blob/master/british_english.txt
  88. https://github.com/wammar/wammar-utils/blob/master/buckwalter2unicode.py
  89. https://github.com/wammar/wammar-utils/blob/master/check-readme.disk.py
  90. https://github.com/wammar/wammar-utils/blob/master/check-token-count.py
  91. https://github.com/wammar/wammar-utils/blob/master/clear-conll-column-k.py
  92. https://github.com/wammar/wammar-utils/blob/master/clip-file-after-kth-match.py
  93. https://github.com/wammar/wammar-utils/blob/master/combine-token-label-in-mrg-file.py
  94. https://github.com/wammar/wammar-utils/blob/master/combine-token-label-in-one-file.py
  95. https://github.com/wammar/wammar-utils/blob/master/common_typos.py
  96. https://github.com/wammar/wammar-utils/blob/master/compose-parallel-corpora.py
  97. https://github.com/wammar/wammar-utils/blob/master/compute-average-embedding.py
  98. https://github.com/wammar/wammar-utils/blob/master/compute-embeddings-coverage.py
  99. https://github.com/wammar/wammar-utils/blob/master/conllx-eval.v1_8.pl
 100. https://github.com/wammar/wammar-utils/blob/master/convert-bitext-many2many-to-one2many.py
 101. https://github.com/wammar/wammar-utils/blob/master/convert-bitext-many2many-to-one2one.py
 102. https://github.com/wammar/wammar-utils/blob/master/convert-bitext-one2one-to-one2many.py
 103. https://github.com/wammar/wammar-utils/blob/master/convert-closure-embeddings-to-word-embeddings.py
 104. https://github.com/wammar/wammar-utils/blob/master/convert-conll-format-to-sent-per-line.py
 105. https://github.com/wammar/wammar-utils/blob/master/convert-conll-to-text.py
 106. https://github.com/wammar/wammar-utils/blob/master/convert-conllu-to-conll06.py
 107. https://github.com/wammar/wammar-utils/blob/master/convert-flat-parses-to-pos-tags.py
 108. https://github.com/wammar/wammar-utils/blob/master/convert-libid166-format-to-arff-format.py
 109. https://github.com/wammar/wammar-utils/blob/master/convert-libid166-sparse-format-to-arff-sparse-format.py
 110. https://github.com/wammar/wammar-utils/blob/master/convert-parallel-sent-per-line-to-one-sent-per-line.py
 111. https://github.com/wammar/wammar-utils/blob/master/convert-sent-per-line-to-conll-format.py
 112. https://github.com/wammar/wammar-utils/blob/master/convert-to-one-target-per-line.py
 113. https://github.com/wammar/wammar-utils/blob/master/copy-conll-columns-to-another-file.py
 114. https://github.com/wammar/wammar-utils/blob/master/copy-conll-columns.py
 115. https://github.com/wammar/wammar-utils/blob/master/create-vocab.py
 116. https://github.com/wammar/wammar-utils/blob/master/decode-corpus.py
 117. https://github.com/wammar/wammar-utils/blob/master/diff-vocab.py
 118. https://github.com/wammar/wammar-utils/blob/master/download-and-process-wikipedia-text.sh
 119. https://github.com/wammar/wammar-utils/blob/master/encode-corpus.py
 120. https://github.com/wammar/wammar-utils/blob/master/eval-labels.py
 121. https://github.com/wammar/wammar-utils/blob/master/extract-wiktionary-translations.py
 122. https://github.com/wammar/wammar-utils/blob/master/filter-irrelevant-params.py
 123. https://github.com/wammar/wammar-utils/blob/master/filter-long-sent-pairs.py
 124. https://github.com/wammar/wammar-utils/blob/master/filter-unused-embeddings.py
 125. https://github.com/wammar/wammar-utils/blob/master/filter-word-alignment-parameters.py
 126. https://github.com/wammar/wammar-utils/blob/master/flip-parallel-corpus.py
 127. https://github.com/wammar/wammar-utils/blob/master/frequently_used_commands.sh
 128. https://github.com/wammar/wammar-utils/blob/master/gardner-et-al-emnlp-2015.py
 129. https://github.com/wammar/wammar-utils/blob/master/generate-crosslingual-punctuation-mappings.py
 130. https://github.com/wammar/wammar-utils/blob/master/head-conll.py
 131. https://github.com/wammar/wammar-utils/blob/master/horizontal-split-parallel-corpus.py
 132. https://github.com/wammar/wammar-utils/blob/master/induce-code-switches-in-conll.py
 133. https://github.com/wammar/wammar-utils/blob/master/induce-typos-in-conll.py
 134. https://github.com/wammar/wammar-utils/blob/master/intersect-vocabs.py
 135. https://github.com/wammar/wammar-utils/blob/master/iso_639_1_codes.py
 136. https://github.com/wammar/wammar-utils/blob/master/letters-to-clusters.py
 137. https://github.com/wammar/wammar-utils/blob/master/literal-translate.py
 138. https://github.com/wammar/wammar-utils/blob/master/log-miner.py
 139. https://github.com/wammar/wammar-utils/blob/master/lowercase-initial.py
 140. https://github.com/wammar/wammar-utils/blob/master/lowercase.py
 141. https://github.com/wammar/wammar-utils/blob/master/map-words-to-transitive-closures.py
 142. https://github.com/wammar/wammar-utils/blob/master/normalize-arabic.py
 143. https://github.com/wammar/wammar-utils/blob/master/normalize-brown-cluster-emission-probs.py
 144. https://github.com/wammar/wammar-utils/blob/master/normalize-embeddings.py
 145. https://github.com/wammar/wammar-utils/blob/master/paste.py
 146. https://github.com/wammar/wammar-utils/blob/master/prefix_lines.py
 147. https://github.com/wammar/wammar-utils/blob/master/prefix_tokens.py
 148. https://github.com/wammar/wammar-utils/blob/master/prepare-data-for-multilingual-embeddings.sh
 149. https://github.com/wammar/wammar-utils/blob/master/preprocess-czech.py
 150. https://github.com/wammar/wammar-utils/blob/master/preprocess-english.py
 151. https://github.com/wammar/wammar-utils/blob/master/preprocess-iris-dataset.py
 152. https://github.com/wammar/wammar-utils/blob/master/preprocess-mnist-dataset.py
 153. https://github.com/wammar/wammar-utils/blob/master/print-corpus-statistics.py
 154. https://github.com/wammar/wammar-utils/blob/master/print-letters-of-unique-words.py
 155. https://github.com/wammar/wammar-utils/blob/master/print-unique-words.py
 156. https://github.com/wammar/wammar-utils/blob/master/process-typology-features.py
 157. https://github.com/wammar/wammar-utils/blob/master/project_foreign_words_to_english_brown_clusters.py
 158. https://github.com/wammar/wammar-utils/blob/master/prune-long-lines.py
 159. https://github.com/wammar/wammar-utils/blob/master/remove-conll-column-k.py
 160. https://github.com/wammar/wammar-utils/blob/master/remove-empty-lines.py
 161. https://github.com/wammar/wammar-utils/blob/master/remove-non-latin-words.py
 162. https://github.com/wammar/wammar-utils/blob/master/remove-sequences-of-different-length.py
 163. https://github.com/wammar/wammar-utils/blob/master/replace-words-in-conll-corpus.py
 164. https://github.com/wammar/wammar-utils/blob/master/replace-words-in-monolingual-corpus.py
 165. https://github.com/wammar/wammar-utils/blob/master/resize-embeddings.py
 166. https://github.com/wammar/wammar-utils/blob/master/score-classes.py
 167. https://github.com/wammar/wammar-utils/blob/master/score-vm.py
 168. https://github.com/wammar/wammar-utils/blob/master/shuffle-lines.py
 169. https://github.com/wammar/wammar-utils/blob/master/split-berg-kirkpatrick-pos-output-into-gold-vs-pred.py
 170. https://github.com/wammar/wammar-utils/blob/master/split-corpus-files.py
 171. https://github.com/wammar/wammar-utils/blob/master/sswl_features.csv
 172. https://github.com/wammar/wammar-utils/blob/master/strip_lines.py
 173. https://github.com/wammar/wammar-utils/blob/master/swap-conll-columns.py
 174. https://github.com/wammar/wammar-utils/blob/master/symmetrize-word-alignment-parameters.py
 175. https://github.com/wammar/wammar-utils/blob/master/task_names.txt
 176. https://github.com/wammar/wammar-utils/blob/master/tokenize-on.py
 177. https://github.com/wammar/wammar-utils/blob/master/tokenize-parallel.py
 178. https://github.com/wammar/wammar-utils/blob/master/train-multilingual-embeddings.sh
 179. https://github.com/wammar/wammar-utils/blob/master/trie-encode-corpus.py
 180. https://github.com/wammar/wammar-utils/blob/master/tuple.h
 181. https://github.com/wammar/wammar-utils/blob/master/uk2us.py
 182. https://github.com/wammar/wammar-utils/blob/master/union-vocab.py
 183. https://github.com/wammar/wammar-utils/blob/master/unordered_map_serialization.hpp
 184. https://github.com/wammar/wammar-utils/blob/master/vertical-split-corpus.py
 185. https://github.com/wammar/wammar-utils/blob/master/vertical-split-parallel-corpus.py
 186. https://github.com/wammar/wammar-utils/blob/master/wals_features.csv
 187. https://github.com/wammar/wammar-utils/blob/master/wiktionary-multilingual-to-bilingual-dictionaries.py
 188. https://github.com/wammar/wammar-utils/blob/master/word-alignments-to-dependency-parses.py
 189. http://www.tysto.com/uk-us-spelling-list.html
 190. https://github.com/site/terms
 191. https://github.com/site/privacy
 192. https://github.com/security
 193. https://githubstatus.com/
 194. https://help.github.com/
 195. https://github.com/contact
 196. https://github.com/pricing
 197. https://developer.github.com/
 198. https://training.github.com/
 199. https://github.blog/
 200. https://github.com/about
 201. https://github.com/wammar/wammar-utils
 202. https://github.com/wammar/wammar-utils

   hidden links:
 204. https://github.com/
 205. https://github.com/wammar/wammar-utils
 206. https://github.com/wammar/wammar-utils
 207. https://github.com/wammar/wammar-utils
 208. https://help.github.com/articles/which-remote-url-should-i-use
 209. https://github.com/wammar/wammar-utils#wammar-utils
 210. https://github.com/wammar/wammar-utils#description-of-utilities
 211. https://github.com/wammar/wammar-utils#create-vocabpy
 212. https://github.com/wammar/wammar-utils#encode-corpuspy
 213. https://github.com/wammar/wammar-utils#decode-corpuspy
 214. https://github.com/wammar/wammar-utils#filter-long-sent-pairspy
 215. https://github.com/wammar/wammar-utils#split-parallel-corpuspy
 216. https://github.com/wammar/wammar-utils#american-englishtxt-british-englishtxt
 217. https://github.com/
