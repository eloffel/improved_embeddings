   #[1]github [2]recent commits to deep-coref:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]18
     * [35]star [36]183
     * [37]fork [38]51

[39]clarkkev/[40]deep-coref

   [41]code [42]issues 11 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   no description, website, or topics provided.
     * [47]14 commits
     * [48]1 branch
     * [49]0 releases
     * [50]fetching contributors

    1. [51]python 100.0%

   (button) python
   branch: master (button) new pull request
   [52]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/c
   [53]download zip

downloading...

   want to be notified of new releases in clarkkev/deep-coref?
   [54]sign in [55]sign up

launching github desktop...

   if nothing happens, [56]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [57]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [58]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [59]download the github extension for visual studio
   and try again.

   (button) go back
   kevin clark
   kevin clark [60]update readme
   latest commit [61]35f6cc9 jun 27, 2018
   [62]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [63]modified_keras [64]add emnlp 2016 system nov 4, 2016
   [65]readme.md
   [66]build_datasets.py [67]add emnlp 2016 system nov 4, 2016
   [68]id91_learning.py
   [69]id91_models.py
   [70]id91_preprocessing.py
   [71]custom_neural_implementations.py
   [72]datasets.py
   [73]directories.py [74]fix crashes on docs with no mentions apr 25,
   2017
   [75]document.py [76]add emnlp 2016 system nov 4, 2016
   [77]evaluation.py
   [78]model_properties.py [79]add emnlp 2016 system nov 4, 2016
   [80]output_utils.py
   [81]pairwise_learning.py
   [82]pairwise_models.py
   [83]preprocessing.py [84]add emnlp 2016 system nov 4, 2016
   [85]run_all.py [86]more small fixes nov 29, 2016
   [87]timer.py
   [88]utils.py
   [89]word_vectors.py

readme.md

coreference resolution with deep learning

   this repository contains code for training and running the neural
   coreference models decribed in two papers:
     * [90]"deep id23 for mention-ranking coreference
       models", kevin clark and christopher d. manning, emnlp 2016.
     * [91]"improving coreference resolution by learning entity-level
       distributed representations", kevin clark and christopher d.
       manning, acl 2016.

   [92]hugging face built a [93]coreference system based on this one with
   a [94]cool demo. their system is also [95]on github.

requirements

   theano, numpy, and scikit-learn. it also uses a slightly modified
   version of keras 0.2; run python setup.py install in the modified_keras
   directory to install.

usage

running an already-trained model

   the easiest way of doing this is within stanford's [96]corenlp, where
   forward-prop for the models has been implemented in java. example
   usage:
java -xmx5g -cp stanford-corenlp-3.7.0.jar:stanford-corenlp-models-3.7.0.jar:* e
du.stanford.nlp.pipeline.stanfordcorenlp -annotators tokenize,ssplit,pos,lemma,n
er,parse,mention,coref -coref.algorithm neural -file example_file.txt

   see the [97]corefannotator page for more details.

training your own model

   do the following to train and evaluate the neural mention-ranking model
   with reward rescaling (the highest scoring model from the papers).
    1. download the conll training data from [98]here.
    2. download pretrained id27s. we use 50 dimensional id97
       embeddings for english ([99]link) and 64 dimenensional
       [100]polyglot embeddings for chinese ([101]link) in our paper.
    3. run the [102]neuralcorefdataexporter class in the development
       version of stanford's corenlp (you will need to fork from the
       [103]github) using the [104]neural-coref-conll properties file.
       this does mention detection and feature extraction on the conll
       data and then outputs the results as json. the command is

java -xmx2g -cp stanford-corenlp.jar:stanford-corenlp-models-3.7.0.jar:* edu.sta
nford.nlp.coref.neural.neuralcorefdataexporter <properties-file> <output-path>

    4. run run_all.py, preferably on a gpu. training takes roughly 7 days
       on a gtx titan gpu.

   run_all.py also contains methods to train the other models from the
   papers.

   once a model is trained, you can use pairwise_learning.py to evaluate
   the model and output_utils.py to view its predictions.

performance

   following the above instructions will replicate results from the 2016
   emnlp paper (~65.7 conll f1 on the conll 2012 english test set).
   however, we noticed that using rule-based mention filtering from
   stanford's deterministic coreference system is significantly decreasing
   the score. add coref.md.liberalmd=true to the properties file during
   feature extraction (step 3) to disable this filtering and achieve even
   better performance (~66.9 conll f1 on the conll 2012 english test set).

     *    2019 github, inc.
     * [105]terms
     * [106]privacy
     * [107]security
     * [108]status
     * [109]help

     * [110]contact github
     * [111]pricing
     * [112]api
     * [113]training
     * [114]blog
     * [115]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [116]reload to refresh your
   session. you signed out in another tab or window. [117]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/clarkkev/deep-coref/commits/master.atom
   3. https://github.com/clarkkev/deep-coref#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/clarkkev/deep-coref
  32. https://github.com/join
  33. https://github.com/login?return_to=/clarkkev/deep-coref
  34. https://github.com/clarkkev/deep-coref/watchers
  35. https://github.com/login?return_to=/clarkkev/deep-coref
  36. https://github.com/clarkkev/deep-coref/stargazers
  37. https://github.com/login?return_to=/clarkkev/deep-coref
  38. https://github.com/clarkkev/deep-coref/network/members
  39. https://github.com/clarkkev
  40. https://github.com/clarkkev/deep-coref
  41. https://github.com/clarkkev/deep-coref
  42. https://github.com/clarkkev/deep-coref/issues
  43. https://github.com/clarkkev/deep-coref/pulls
  44. https://github.com/clarkkev/deep-coref/projects
  45. https://github.com/clarkkev/deep-coref/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/clarkkev/deep-coref/commits/master
  48. https://github.com/clarkkev/deep-coref/branches
  49. https://github.com/clarkkev/deep-coref/releases
  50. https://github.com/clarkkev/deep-coref/graphs/contributors
  51. https://github.com/clarkkev/deep-coref/search?l=python
  52. https://github.com/clarkkev/deep-coref/find/master
  53. https://github.com/clarkkev/deep-coref/archive/master.zip
  54. https://github.com/login?return_to=https://github.com/clarkkev/deep-coref
  55. https://github.com/join?return_to=/clarkkev/deep-coref
  56. https://desktop.github.com/
  57. https://desktop.github.com/
  58. https://developer.apple.com/xcode/
  59. https://visualstudio.github.com/
  60. https://github.com/clarkkev/deep-coref/commit/35f6cc9492d07a2c06aaec4d91601f93356825ec
  61. https://github.com/clarkkev/deep-coref/commit/35f6cc9492d07a2c06aaec4d91601f93356825ec
  62. https://github.com/clarkkev/deep-coref/tree/35f6cc9492d07a2c06aaec4d91601f93356825ec
  63. https://github.com/clarkkev/deep-coref/tree/master/modified_keras
  64. https://github.com/clarkkev/deep-coref/commit/c47a19700f166e1655c806e22633d4e43e5c0426
  65. https://github.com/clarkkev/deep-coref/blob/master/readme.md
  66. https://github.com/clarkkev/deep-coref/blob/master/build_datasets.py
  67. https://github.com/clarkkev/deep-coref/commit/c47a19700f166e1655c806e22633d4e43e5c0426
  68. https://github.com/clarkkev/deep-coref/blob/master/id91_learning.py
  69. https://github.com/clarkkev/deep-coref/blob/master/id91_models.py
  70. https://github.com/clarkkev/deep-coref/blob/master/id91_preprocessing.py
  71. https://github.com/clarkkev/deep-coref/blob/master/custom_neural_implementations.py
  72. https://github.com/clarkkev/deep-coref/blob/master/datasets.py
  73. https://github.com/clarkkev/deep-coref/blob/master/directories.py
  74. https://github.com/clarkkev/deep-coref/commit/59ba73af534e73c26b0829aee50790bed63fa216
  75. https://github.com/clarkkev/deep-coref/blob/master/document.py
  76. https://github.com/clarkkev/deep-coref/commit/c47a19700f166e1655c806e22633d4e43e5c0426
  77. https://github.com/clarkkev/deep-coref/blob/master/evaluation.py
  78. https://github.com/clarkkev/deep-coref/blob/master/model_properties.py
  79. https://github.com/clarkkev/deep-coref/commit/c47a19700f166e1655c806e22633d4e43e5c0426
  80. https://github.com/clarkkev/deep-coref/blob/master/output_utils.py
  81. https://github.com/clarkkev/deep-coref/blob/master/pairwise_learning.py
  82. https://github.com/clarkkev/deep-coref/blob/master/pairwise_models.py
  83. https://github.com/clarkkev/deep-coref/blob/master/preprocessing.py
  84. https://github.com/clarkkev/deep-coref/commit/c47a19700f166e1655c806e22633d4e43e5c0426
  85. https://github.com/clarkkev/deep-coref/blob/master/run_all.py
  86. https://github.com/clarkkev/deep-coref/commit/c0c6418b008bbd5af0ef634cb843e492ee8bc4cf
  87. https://github.com/clarkkev/deep-coref/blob/master/timer.py
  88. https://github.com/clarkkev/deep-coref/blob/master/utils.py
  89. https://github.com/clarkkev/deep-coref/blob/master/word_vectors.py
  90. http://cs.stanford.edu/people/kevclark/resources/clark-manning-emnlp2016-deep.pdf
  91. http://cs.stanford.edu/people/kevclark/resources/clark-manning-acl16-improving.pdf
  92. https://huggingface.co/
  93. https://medium.com/huggingface/state-of-the-art-neural-coreference-resolution-for-chatbots-3302365dcf30
  94. https://huggingface.co/coref/
  95. https://github.com/huggingface/neuralcoref
  96. https://github.com/stanfordnlp/corenlp
  97. http://stanfordnlp.github.io/corenlp/coref.html
  98. http://conll.cemantix.org/2012/data.html
  99. https://drive.google.com/open?id=0b5y5rz_rukrmdefpcgiwz2xlrw8
 100. https://sites.google.com/site/rmyeid/projects/polyglot
 101. http://bit.ly/19btkes
 102. https://github.com/stanfordnlp/corenlp/blob/master/src/edu/stanford/nlp/coref/neural/neuralcorefdataexporter.java
 103. https://github.com/stanfordnlp/corenlp/
 104. https://github.com/stanfordnlp/corenlp/blob/master/src/edu/stanford/nlp/coref/properties/neural-english-conll.properties
 105. https://github.com/site/terms
 106. https://github.com/site/privacy
 107. https://github.com/security
 108. https://githubstatus.com/
 109. https://help.github.com/
 110. https://github.com/contact
 111. https://github.com/pricing
 112. https://developer.github.com/
 113. https://training.github.com/
 114. https://github.blog/
 115. https://github.com/about
 116. https://github.com/clarkkev/deep-coref
 117. https://github.com/clarkkev/deep-coref

   hidden links:
 119. https://github.com/
 120. https://github.com/clarkkev/deep-coref
 121. https://github.com/clarkkev/deep-coref
 122. https://github.com/clarkkev/deep-coref
 123. https://help.github.com/articles/which-remote-url-should-i-use
 124. https://github.com/clarkkev/deep-coref#coreference-resolution-with-deep-learning
 125. https://github.com/clarkkev/deep-coref#requirements
 126. https://github.com/clarkkev/deep-coref#usage
 127. https://github.com/clarkkev/deep-coref#running-an-already-trained-model
 128. https://github.com/clarkkev/deep-coref#training-your-own-model
 129. https://github.com/clarkkev/deep-coref#performance
 130. https://github.com/
