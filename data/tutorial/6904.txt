   #[1]github [2]recent commits to labelimg:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]280
     * [35]star [36]6,466
     * [37]fork [38]2,269

[39]tzutalin/[40]labelimg

   [41]code [42]issues 93 [43]pull requests 22 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
        labelimg is a graphical image annotation tool and label object
   bounding boxes in images [47]https://youtu.be/p0nr2yscy_u
   [48]python2 [49]python3 [50]annotations [51]tools [52]id163
   [53]deep-learning [54]detection [55]recognition
   [56]image-classification
     * [57]317 commits
     * [58]4 branches
     * [59]21 releases
     * [60]48 contributors
     * [61]mit

    1. [62]python 96.0%
    2. [63]shell 3.7%
    3. [64]makefile 0.3%

   (button) python shell makefile
   branch: master (button) new pull request
   [65]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/t
   [66]download zip

downloading...

   want to be notified of new releases in tzutalin/labelimg?
   [67]sign in [68]sign up

launching github desktop...

   if nothing happens, [69]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [70]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [71]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [72]download the github extension for visual studio
   and try again.

   (button) go back
   [73]@saberd [74]@tzutalin
   [75]saberd and [76]tzutalin [77]readme.md for "difficult" and "verify
   image" (button)    
added documentation to the readme.md for what "difficult" and "verify image"

   latest commit [78]d1d3526 feb 8, 2019
   [79]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [80]build-tools
   [81]data [82]allow opening of directory on launch jan 29, 2018
   [83]demo [84]screenshot of macos high sierra usage added. dec 21, 2017
   [85]libs
   [86]requirements
   [87]resources [88]minor correction in spelling. dec 19, 2018
   [89]tests
   [90].gitignore
   [91].travis.yml [92]fix travis build error oct 29, 2018
   [93]contributing.rst
   [94]history.rst [95]update the version to v1.8.1 dec 3, 2018
   [96]license
   [97]manifest.in
   [98]makefile
   [99]readme.rst [100]readme.md for "difficult" and "verify image" feb 8,
   2019
   [101]__init__.py [102]create new files for pypackage may 3, 2017
   [103]issue_template.md
   [104]labelimg.py [105]rename lib.py to utils.py and add test cases for
   natural sort jan 27, 2019
   [106]resources.qrc [107]move icons to resource folder, fix the unicode
   issue, support zh-tw lang dec 1, 2018
   [108]setup.id18
   [109]setup.py

readme.rst

labelimg

   [110][68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c616
   2656c696d672e737667]
   [111][68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f747a7
   574616c696e2f6c6162656c496d672e737667]

   labelimg is a graphical image annotation tool.

   it is written in python and uses qt for its graphical interface.

   annotations are saved as xml files in pascal voc format, the format
   used by [112]id163. besdies, it also supports yolo format

   [113]demo image

   [114]demo image

   [115]watch a demo video

installation

download prebuilt binaries

     * [116]windows
     * macos. binaries for macos are not yet available. help would be
       appreciated. at present, it must be [117]built from source.

build from source

   linux/ubuntu/mac requires at least [118]python 2.6 and has been tested
   with [119]pyqt 4.8.

ubuntu linux

   python 2 + qt4
sudo apt-get install pyqt4-dev-tools
sudo pip install lxml
make qt4py2
python labelimg.py
python labelimg.py [image_path] [pre-defined class file]

   python 3 + qt5
sudo apt-get install pyqt5-dev-tools
sudo pip3 install -r requirements/requirements-linux-python3.txt
make qt5py3
python3 labelimg.py
python3 labelimg.py [image_path] [pre-defined class file]

macos

   python 2 + qt4
brew install qt qt4
brew install libxml2
make qt4py2
python labelimg.py
python labelimg.py [image_path] [pre-defined class file]

   python 3 + qt5 (works on macos high sierra)
brew install qt  # will install qt-5.x.x
brew install libxml2
make qt5py3
python3 labelimg.py
python3 labelimg.py [image_path] [pre-defined class file]

as a side note, if mssing pyrcc5 or lxml, try
pip3 install pyqt5 lxml

   new python 3 virtualenv + binary this avoids a lot of the qt / python
   version issues, and gives you a nice .app file with a new svg icon in
   your /applications folder. you can consider this script:
   build-tools/build-for-macos.sh
brew install python3
pip install pipenv
pipenv --three
pipenv shell
pip install py2app
pip install pyqt5 lxml
make qt5py3
rm -rf build dist
python setup.py py2app -a
mv "dist/labelimg.app" /applications

windows

   download and setup [120]python 2.6 or later, [121]pyqt4 and
   [122]install lxml.

   open cmd and go to the [123]labelimg directory
pyrcc4 -o resources.py resources.qrc
python labelimg.py
python labelimg.py [image_path] [pre-defined class file]

windows + anaconda

   download and install [124]anaconda (python 3+)

   open the anaconda prompt and go to the [125]labelimg directory
conda install pyqt=5
pyrcc5 -o resources.py resources.qrc
python labelimg.py
python labelimg.py [image_path] [pre-defined class file]

get from pypi

pip install labelimg
labelimg
labelimg [image_path] [pre-defined class file]

   i tested pip on ubuntu 14.04 and 16.04. however, i didn't test pip on
   macos and windows

use docker

docker run -it \
--user $(id -u) \
-e display=unix$display \
--workdir=$(pwd) \
--volume="/home/$user:/home/$user" \
--volume="/etc/group:/etc/group:ro" \
--volume="/etc/passwd:/etc/passwd:ro" \
--volume="/etc/shadow:/etc/shadow:ro" \
--volume="/etc/sudoers.d:/etc/sudoers.d:ro" \
-v /tmp/.x11-unix:/tmp/.x11-unix \
tzutalin/py2qt4

make qt4py2;./labelimg.py

   you can pull the image which has all of the installed and required
   dependencies. [126]watch a demo video

usage

steps (pascalvoc)

    1. build and launch using the instructions above.
    2. click 'change default saved annotation folder' in menu/file
    3. click 'open dir'
    4. click 'create rectbox'
    5. click and release left mouse to select a region to annotate the
       rect box
    6. you can use right mouse to drag the rect box to copy or move it

   the annotation will be saved to the folder you specify.

   you can refer to the below hotkeys to speed up your workflow.

steps (yolo)

    1. in data/predefined_classes.txt define the list of classes that will
       be used for your training.
    2. build and launch using the instructions above.
    3. right below "save" button in toolbar, click "pascalvoc" button to
       switch to yolo format.
    4. you may use open/opendir to process single or multiple images. when
       finished with single image, click save.

   a txt file of yolo format will be saved in the same folder as your
   image with same name. a file named "classes.txt" is saved to that
   folder too. "classes.txt" defines the list of class names that your
   yolo label refers to.

   note:
     * your label list shall not change in the middle of processing a list
       of images. when you save a image, classes.txt will also get
       updated, while previous annotations will not be updated.
     * you shouldn't use "default class" function when saving to yolo
       format, it will not be referred.
     * when saving as yolo format, "difficult" flag is discarded.

create pre-defined classes

   you can edit the [127]data/predefined_classes.txt to load pre-defined
   classes

hotkeys

   ctrl + u load all of the images from a directory
   ctrl + r change the default annotation target dir
   ctrl + s save
   ctrl + d copy the current label and rect box
   space    flag the current image as verified
   w        create a rect box
   d        next image
   a        previous image
   del      delete the selected rect box
   ctrl++   zoom in
   ctrl--   zoom out
                    keyboard arrows to move selected rect box

   verify image:

   when pressing space, the user can flag the image as verified, a green
   background will appear. this is used when creating a dataset
   automatically, the user can then through all the pictures and flag them
   instead of annotate them.

   difficult:

   the difficult field being set to 1 indicates that the object has been
   annotated as "difficult", for example an object which is clearly
   visible but difficult to recognize without substantial use of context.
   according to your deep neural network implementation, you can include
   or exclude difficult objects during training.

how to contribute

   send a pull request

license

   [128]free software: mit license

   citation: tzutalin. labelimg. git code (2015).
   [129]https://github.com/tzutalin/labelimg

related

    1. [130]id163 utils to download image, create a label text for
       machine learning, etc
    2. [131]use docker to run labelimg
    3. [132]generating the pascal voc tfrecord files
    4. app icon based on icon by nick roach (gpl)
       <[133]https://www.elegantthemes.com/>
       <[134]https://www.iconfinder.com/icons/1054978/shop_tag_icon> __

     *    2019 github, inc.
     * [135]terms
     * [136]privacy
     * [137]security
     * [138]status
     * [139]help

     * [140]contact github
     * [141]pricing
     * [142]api
     * [143]training
     * [144]blog
     * [145]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [146]reload to refresh your
   session. you signed out in another tab or window. [147]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/tzutalin/labelimg/commits/master.atom
   3. https://github.com/tzutalin/labelimg#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/tzutalin/labelimg
  32. https://github.com/join
  33. https://github.com/login?return_to=/tzutalin/labelimg
  34. https://github.com/tzutalin/labelimg/watchers
  35. https://github.com/login?return_to=/tzutalin/labelimg
  36. https://github.com/tzutalin/labelimg/stargazers
  37. https://github.com/login?return_to=/tzutalin/labelimg
  38. https://github.com/tzutalin/labelimg/network/members
  39. https://github.com/tzutalin
  40. https://github.com/tzutalin/labelimg
  41. https://github.com/tzutalin/labelimg
  42. https://github.com/tzutalin/labelimg/issues
  43. https://github.com/tzutalin/labelimg/pulls
  44. https://github.com/tzutalin/labelimg/projects
  45. https://github.com/tzutalin/labelimg/pulse
  46. https://github.com/join?source=prompt-code
  47. https://youtu.be/p0nr2yscy_u
  48. https://github.com/topics/python2
  49. https://github.com/topics/python3
  50. https://github.com/topics/annotations
  51. https://github.com/topics/tools
  52. https://github.com/topics/id163
  53. https://github.com/topics/deep-learning
  54. https://github.com/topics/detection
  55. https://github.com/topics/recognition
  56. https://github.com/topics/image-classification
  57. https://github.com/tzutalin/labelimg/commits/master
  58. https://github.com/tzutalin/labelimg/branches
  59. https://github.com/tzutalin/labelimg/releases
  60. https://github.com/tzutalin/labelimg/graphs/contributors
  61. https://github.com/tzutalin/labelimg/blob/master/license
  62. https://github.com/tzutalin/labelimg/search?l=python
  63. https://github.com/tzutalin/labelimg/search?l=shell
  64. https://github.com/tzutalin/labelimg/search?l=makefile
  65. https://github.com/tzutalin/labelimg/find/master
  66. https://github.com/tzutalin/labelimg/archive/master.zip
  67. https://github.com/login?return_to=https://github.com/tzutalin/labelimg
  68. https://github.com/join?return_to=/tzutalin/labelimg
  69. https://desktop.github.com/
  70. https://desktop.github.com/
  71. https://developer.apple.com/xcode/
  72. https://visualstudio.github.com/
  73. https://github.com/saberd
  74. https://github.com/tzutalin
  75. https://github.com/tzutalin/labelimg/commits?author=saberd
  76. https://github.com/tzutalin/labelimg/commits?author=tzutalin
  77. https://github.com/tzutalin/labelimg/commit/d1d3526fe707851ceac4762a8a1d40a9bee0e898
  78. https://github.com/tzutalin/labelimg/commit/d1d3526fe707851ceac4762a8a1d40a9bee0e898
  79. https://github.com/tzutalin/labelimg/tree/d1d3526fe707851ceac4762a8a1d40a9bee0e898
  80. https://github.com/tzutalin/labelimg/tree/master/build-tools
  81. https://github.com/tzutalin/labelimg/tree/master/data
  82. https://github.com/tzutalin/labelimg/commit/d43613d9c4a0fa8acce9157654567176644c000d
  83. https://github.com/tzutalin/labelimg/tree/master/demo
  84. https://github.com/tzutalin/labelimg/commit/43d911c12ec22b2e8284192a5841d414c55dfed7
  85. https://github.com/tzutalin/labelimg/tree/master/libs
  86. https://github.com/tzutalin/labelimg/tree/master/requirements
  87. https://github.com/tzutalin/labelimg/tree/master/resources
  88. https://github.com/tzutalin/labelimg/commit/e18ccf3be165eea1a366dd90de86e434762defe0
  89. https://github.com/tzutalin/labelimg/tree/master/tests
  90. https://github.com/tzutalin/labelimg/blob/master/.gitignore
  91. https://github.com/tzutalin/labelimg/blob/master/.travis.yml
  92. https://github.com/tzutalin/labelimg/commit/40ea8e7801dde05526260b8f3bdc698e396196db
  93. https://github.com/tzutalin/labelimg/blob/master/contributing.rst
  94. https://github.com/tzutalin/labelimg/blob/master/history.rst
  95. https://github.com/tzutalin/labelimg/commit/3f14cbf4517427825183782bfd1afd602a6f47da
  96. https://github.com/tzutalin/labelimg/blob/master/license
  97. https://github.com/tzutalin/labelimg/blob/master/manifest.in
  98. https://github.com/tzutalin/labelimg/blob/master/makefile
  99. https://github.com/tzutalin/labelimg/blob/master/readme.rst
 100. https://github.com/tzutalin/labelimg/commit/d1d3526fe707851ceac4762a8a1d40a9bee0e898
 101. https://github.com/tzutalin/labelimg/blob/master/__init__.py
 102. https://github.com/tzutalin/labelimg/commit/d56ab8cea28abddca8a01ed424d317308140c906
 103. https://github.com/tzutalin/labelimg/blob/master/issue_template.md
 104. https://github.com/tzutalin/labelimg/blob/master/labelimg.py
 105. https://github.com/tzutalin/labelimg/commit/ca28daddec370bd0e5f9f51c35ba86a277de2375
 106. https://github.com/tzutalin/labelimg/blob/master/resources.qrc
 107. https://github.com/tzutalin/labelimg/commit/eaac0314044b7aed9aa256349b23f908d398bb2e
 108. https://github.com/tzutalin/labelimg/blob/master/setup.id18
 109. https://github.com/tzutalin/labelimg/blob/master/setup.py
 110. https://pypi.python.org/pypi/labelimg
 111. https://travis-ci.org/tzutalin/labelimg
 112. http://www.image-net.org/
 113. https://raw.githubusercontent.com/tzutalin/labelimg/master/demo/demo3.jpg
 114. https://raw.githubusercontent.com/tzutalin/labelimg/master/demo/demo.jpg
 115. https://youtu.be/p0nr2yscy_u
 116. https://github.com/tzutalin/labelimg/releases
 117. https://github.com/tzutalin/labelimg#macos
 118. https://www.python.org/getit/
 119. https://www.riverbankcomputing.com/software/pyqt/intro
 120. https://www.python.org/downloads/windows/
 121. https://www.riverbankcomputing.com/software/pyqt/download
 122. http://lxml.de/installation.html
 123. https://github.com/tzutalin/labelimg#labelimg
 124. https://www.anaconda.com/download/#download
 125. https://github.com/tzutalin/labelimg#labelimg
 126. https://youtu.be/nw1gexjzbci
 127. https://github.com/tzutalin/labelimg/blob/master/data/predefined_classes.txt
 128. https://github.com/tzutalin/labelimg/blob/master/license
 129. https://github.com/tzutalin/labelimg
 130. https://github.com/tzutalin/id163_utils
 131. https://hub.docker.com/r/tzutalin/py2qt4
 132. https://github.com/tensorflow/models/blob/4f32535fe7040bb1e429ad0e3c948a492a89482d/research/object_detection/g3doc/preparing_inputs.md#generating-the-pascal-voc-tfrecord-files
 133. https://www.elegantthemes.com/
 134. https://www.iconfinder.com/icons/1054978/shop_tag_icon
 135. https://github.com/site/terms
 136. https://github.com/site/privacy
 137. https://github.com/security
 138. https://githubstatus.com/
 139. https://help.github.com/
 140. https://github.com/contact
 141. https://github.com/pricing
 142. https://developer.github.com/
 143. https://training.github.com/
 144. https://github.blog/
 145. https://github.com/about
 146. https://github.com/tzutalin/labelimg
 147. https://github.com/tzutalin/labelimg

   hidden links:
 149. https://github.com/
 150. https://github.com/tzutalin/labelimg
 151. https://github.com/tzutalin/labelimg
 152. https://github.com/tzutalin/labelimg
 153. https://help.github.com/articles/which-remote-url-should-i-use
 154. https://github.com/tzutalin/labelimg#labelimg
 155. https://github.com/tzutalin/labelimg#installation
 156. https://github.com/tzutalin/labelimg#download-prebuilt-binaries
 157. https://github.com/tzutalin/labelimg#build-from-source
 158. https://github.com/tzutalin/labelimg#ubuntu-linux
 159. https://github.com/tzutalin/labelimg#macos
 160. https://github.com/tzutalin/labelimg#windows
 161. https://github.com/tzutalin/labelimg#windows--anaconda
 162. https://github.com/tzutalin/labelimg#get-from-pypi
 163. https://github.com/tzutalin/labelimg#use-docker
 164. https://github.com/tzutalin/labelimg#usage
 165. https://github.com/tzutalin/labelimg#steps-pascalvoc
 166. https://github.com/tzutalin/labelimg#steps-yolo
 167. https://github.com/tzutalin/labelimg#create-pre-defined-classes
 168. https://github.com/tzutalin/labelimg#hotkeys
 169. https://github.com/tzutalin/labelimg#how-to-contribute
 170. https://github.com/tzutalin/labelimg#license
 171. https://github.com/tzutalin/labelimg#related
 172. https://github.com/
