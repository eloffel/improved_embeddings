   #[1]ehud reiter's blog    feed [2]ehud reiter's blog    comments feed
   [3]ehud reiter's blog    the story of simpleid86 comments feed [4]natural
   language generation and machine learning [5]id86 vs templates: levels of
   sophistication in generating text [6]alternate [7]alternate [8]ehud
   reiter's blog [9]wordpress.com

   [10]skip to content

[11]ehud reiter's blog

ehud's thoughts and observations about id86

   (button) menu
     * [12]home
     * [13]blog index
     * [14]about
     * [15]what is id86
     * [16]publications
     * [17]resources
     * [18]university
     * [19]contact

the story of simpleid86

   [20]december 15, 2016april 25, 2018 [21]ehudreiter

   i thought i   d write a few comments on the history  of
   the [22]simpleid86 open-source package for id86 surface realisation.  i
   occasionally get asked about this, so i thought i would properly write
   down the story.

origins

   simpleid86 started in the late 1990s.  we were working on the [23]stop
   system (using id86 to produce personalised smoking cessation letters).
   we decided to build stop in java (which at the time was still a fairly
   new programming language), and we needed a library or tool to do simple
   id86 surface realisation tasks.  i had just finished a survey of
   existing id86 surface realisers (as part of writing my book on
   [24]building id86 systems), which showed that existing realisers (a)
   would be painful to use from a java system, and (b) mostly (with some
   exceptions) were poorly engineered as software artifacts.  so i decided
   to create my own java library to do simple id86 tasks.

   over the next 10 years, i expanded the library (which was called
   different things at different times), as it was used in several
   research projects (including [25]sumtime and [26]skillsum) and also for
   teaching id86.  and the goal was always to reliably provide    simple    id86
   functionality; ie, focus on doing the simple things well.  but the
   library was still only used and known within aberdeen university.

simpleid86 3

   in 2006 we started the [27]babytalk project; the most challenging id86
   project we (or anyone else) had ever attempted.  babytalk clearly
   needed a good library for surface realisation, so we decided to pull
   together, reorganise, and enhance the existing library, and release
   this to the research community as simpleid86 3 (simpleid86 1 was
   notionally what came out of the work on stop, and simpleid86 2 was
   notionally where the library was at before babytalk).  while still
   maintaining the core principle that the goal was to robustly provide
   simple/basic id86 functionally in a fast, easy-to-use, well documented,
   and in general well engineered java library.  simpleid86 has always been
   inferior to other realisers (such as [28]kpml or [29]openid35) in terms
   of functionality, but then its focus has always been on usability and
   usefulness in building systems, not on providing the most
   functionality.

   i had personally developed earlier versions of simpleid86, but simpleid86
   3 was definitely a team effort, to which numerous people contributed.
   i am especially grateful to [30]albert gatt, who was a research fellow
   on babytalk and put a huge amount of effort into writing code for
   simpleid86; and to [31]chris venour, a phd student who had worked as a
   technical writer, and did a lot to ensure that simpleid86 had a
   high-quality tutorial and documentation as well as good code.

   we released simpleid86 3 to the research community for non-commercial
   use, via a google code site.  we specified non-commercial use because
   [32]john carroll had kindly agreed to let us use his rules for
   morphological generation, but only for non-commercial purposes.  a
   number of people outwith aberdeen started using simpleid86, especially
   after i mentioned it on the relevant [33]wikipedia surface realisation
   page. i wasnt deliberately trying to publicise simpleid86, but i needed
   a simple example to show the concept, and simpleid86 was the obvious
   candidate.

simpleid86 4

   by 2009 increasing usage of simpleid86 3 in many different contexts by
   many different organisations had shown that it had some architectural
   problems.  also, we were getting inquiries from commercial companies
   who wanted to use simpleid86 (and indeed we were looking at setting up
   our own spinout company, data2text, which eventually was absorbed into
   [34]arria id86).  so we decided to rebuild and rearchitect simpleid86,
   based on accumulated feedback, and also replace carroll   s morphology
   rules by a lexicon-based morphology system (using the [35]nih
   specialist lexicon), so that we could release simpleid86 as true open
   source software which could be commercially used.  the result was
   simpleid86 4, which was released in 2010.  we decided that simpleid86 4
   should *not* be backwards compatible with simpleng 3, which caused a
   lot of hassle in the short-term, but gave us much more flexibility in
   rearchitecting the system, which paid off in the longer term.

   simpleid86 4 has been picked up and used by numerous research labs and
   commercial companies, i long ago gave up even trying to keep track.  it
   has also inspired the development of similar realisers in other
   languages, including [36]filipino, [37]french, [38]german (simpleid86
   3), [39]italian, [40]portuguese, [41]spanish, and [42]telugu.  there
   also is a community of people who monitor the mailing list and answer
   questions; i am especially grateful to [43]saad mahamood for his work
   in supporting simpleid86, which now officially resides on [44]github.

   simpleid86 has come a long ways since i threw together some java code
   for surface realisation almost 20 years ago.   although i dont have any
   hard usage data, i believe it is the most widely used open-source id86
   library.  certainly  i keep on running across  people and organisations
   who are using it, often in ways i never anticipated when i created the
   first version almost 20 years ago!


share this:

     * [45]twitter
     * [46]facebook
     *

like this:

   like loading...

related

share this:

     * [47]twitter
     * [48]facebook
     *

like this:

   like loading...

post navigation

   [49]previous post id86 and machine learning
   [50]next post id86 vs templates: levels of sophistication in
   generating text

6 thoughts on    the story of simpleid86   

    1. pingback: [51]good papers are hard to publish     ehud reiter's blog
    2. pingback: [52]how do i build an id86 system: tools?     ehud reiter's
       blog
    3. pingback: [53]why isnt there more open-source id86 software?     ehud
       reiter's blog
    4. pingback: [54]challenges of surface realisation     ehud reiter's
       blog
    5. pingback: [55]how should different id86 components add value?     ehud
       reiter's blog
    6. pingback: [56]skills required to use different id86 technologies    
       ehud reiter's blog

leave a reply [57]cancel reply

   enter your comment here...

   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________
   ____________________________________________________________

   fill in your details below or click an icon to log in:
     *
     *
     *
     *
     *

   [58]gravatar
   email (required) (address never made public)
   ____________________
   name (required)
   ____________________
   website
   ____________________
   wordpress.com logo

   you are commenting using your wordpress.com account. ( [59]log out /
   [60]change )
   google photo

   you are commenting using your google account. ( [61]log out /
   [62]change )
   twitter picture

   you are commenting using your twitter account. ( [63]log out /
   [64]change )
   facebook photo

   you are commenting using your facebook account. ( [65]log out /
   [66]change )
   [67]cancel

   connecting to %s

   [ ] notify me of new comments via email.

   post comment

     * [68]linkedin
     * [69]twitter

top posts & pages

     * [70]skills required to use different id86 technologies
     * [71]how do i build an id86 system: tools?
     * [72]id86 vs templates: levels of sophistication in generating text
     * [73]how do i learn about id86?
     * [74]why i do not want to be a co-author on your paper
     * [75]bad data means bad output
     * [76]how to do an id86 evaluation: metrics
     * [77]why isnt there more open-source id86 software?
     * [78]publications
     * [79]the story of simpleid86

   [80]blog at wordpress.com.

   iframe: [81]likes-master

   %d bloggers like this:

   iframe: [82]likes-master

   %d bloggers like this:

references

   visible links
   1. https://ehudreiter.com/feed/
   2. https://ehudreiter.com/comments/feed/
   3. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/feed/
   4. https://ehudreiter.com/2016/12/12/id86-and-ml/
   5. https://ehudreiter.com/2016/12/18/id86-vs-templates/
   6. https://public-api.wordpress.com/oembed/?format=json&url=https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/&for=wpcom-auto-discovery
   7. https://public-api.wordpress.com/oembed/?format=xml&url=https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/&for=wpcom-auto-discovery
   8. https://ehudreiter.com/osd.xml
   9. https://s1.wp.com/opensearch.xml
  10. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/#content
  11. https://ehudreiter.com/
  12. https://ehudreiter.com/
  13. https://ehudreiter.com/blog-index/
  14. https://ehudreiter.com/about/
  15. https://ehudreiter.com/what-is-id86/
  16. https://ehudreiter.com/publications/
  17. https://ehudreiter.com/resources/
  18. https://ehudreiter.com/university/
  19. https://ehudreiter.com/about/contact/
  20. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/
  21. https://ehudreiter.com/author/ehudreiter/
  22. https://github.com/simpleid86/simpleid86
  23. http://dx.doi.org/10.1016/s0004-3702(02)00370-3
  24. https://books.google.co.uk/books/about/building_natural_language_generation_sys.html?id=qnwqu9c8bdkc
  25. http://dx.doi.org/10.1016/j.artint.2005.06.006
  26. https://doi.org/10.1017/s1351324908004725
  27. http://dx.doi.org/10.1016/j.artint.2008.12.002
  28. http://www.fb10.uni-bremen.de/anglistik/langpro/kpml/readme.html
  29. https://github.com/openid35/openid35
  30. http://staff.um.edu.mt/albert.gatt/
  31. https://www.linkedin.com/in/chrisvenour
  32. http://users.sussex.ac.uk/~johnca/
  33. https://en.wikipedia.org/wiki/realization_(linguistics)
  34. http://www.arria.com/
  35. http://specialist.nlm.nih.gov/lexicon
  36. http://www.aclweb.org/anthology/y11-1006
  37. http://www-etud.iro.umontreal.ca/~vaudrypl/sid86bil/sid86enfr_english.html
  38. http://marcel.bollmann.me/software/simpleid86.html
  39. http://www.aclweb.org/anthology/w/w16/w16-6630.pdf
  40. http://www.aclweb.org/anthology/w14-4412
  41. https://github.com/citiususc/simpleid86-es
  42. http://www.aclweb.org/anthology/w15-4701
  43. http://saad.me.uk/
  44. https://github.com/simpleid86/simpleid86
  45. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/?share=twitter
  46. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/?share=facebook
  47. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/?share=twitter
  48. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/?share=facebook
  49. https://ehudreiter.com/2016/12/12/id86-and-ml/
  50. https://ehudreiter.com/2016/12/18/id86-vs-templates/
  51. https://ehudreiter.com/2016/12/23/good-papers-are-hard-to-publish/
  52. https://ehudreiter.com/2017/01/26/id86-system-tools/
  53. https://ehudreiter.com/2017/03/17/open-source-id86-software/
  54. https://ehudreiter.com/2018/04/30/challenges-of-surface-realisation/
  55. https://ehudreiter.com/2018/05/17/id86-components-add-value/
  56. https://ehudreiter.com/2019/04/04/skills-required-id86-technologies/
  57. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/#respond
  58. https://gravatar.com/site/signup/
  59. javascript:highlandercomments.doexternallogout( 'wordpress' );
  60. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/
  61. javascript:highlandercomments.doexternallogout( 'googleplus' );
  62. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/
  63. javascript:highlandercomments.doexternallogout( 'twitter' );
  64. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/
  65. javascript:highlandercomments.doexternallogout( 'facebook' );
  66. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/
  67. javascript:highlandercomments.cancelexternalwindow();
  68. https://www.linkedin.com/in/ehud-reiter-331b1747
  69. http://www.twitter.com/ehudreiter
  70. https://ehudreiter.com/2019/04/04/skills-required-id86-technologies/
  71. https://ehudreiter.com/2017/01/26/id86-system-tools/
  72. https://ehudreiter.com/2016/12/18/id86-vs-templates/
  73. https://ehudreiter.com/2018/01/16/learn-about-id86/
  74. https://ehudreiter.com/2018/08/09/i-do-not-want-to-be-coauthor/
  75. https://ehudreiter.com/2019/03/20/bad-data-means-bad-output/
  76. https://ehudreiter.com/2017/05/03/metrics-id86-evaluation/
  77. https://ehudreiter.com/2017/03/17/open-source-id86-software/
  78. https://ehudreiter.com/publications/
  79. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/
  80. https://wordpress.com/?ref=footer_blog
  81. https://widgets.wp.com/likes/master.html?ver=20190321#ver=20190321
  82. https://widgets.wp.com/likes/master.html?ver=20190321#ver=20190321

   hidden links:
  84. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/#comment-form-guest
  85. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/#comment-form-load-service:wordpress.com
  86. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/#comment-form-load-service:twitter
  87. https://ehudreiter.com/2016/12/15/the-story-of-simpleid86/#comment-form-load-service:facebook
