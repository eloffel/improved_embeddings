   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]becoming human: artificial intelligence magazine
     * [9]     consulting
     * [10]     tutorials
     * [11]       submit an article
     * [12]     communities
     * [13]     our bot
     __________________________________________________________________

episode 1         genetic algorithm for id23

   [14]go to the profile of moustafa alzantot
   [15]moustafa alzantot (button) blockedunblock (button) followfollowing
   jun 7, 2017
   [1*x3_wrb-dgmdn-5t-xmlirw.jpeg]

   in this article, we describe how genetic algorithm can be used to solve
   id23 problem. we demonstrate this by solving the
      [16]frozen-lake    problem in openai gym.

genetic algorithm

   a genetic algorithm is an example of    evolutionary computation   
   algorithm which is a family of ai algorithms that are inspired by
   biological evolution. these methods are regarded as a meta-heuristic
   optimization method which means that they can be useful for find good
   solutions for optimization (maximization or minimization) problems, but
   they do not provide guarantees of finding the global optimal solution.
   [17]the chatbot conference
   the chatbot conference on september 12, chatbot's life, will host our
   first chatbot conference in san francisco. the   www.eventbrite.com

requirements of genetic algorithm

   solving a problem by using genetic algorithm require representing its
   solution as a string of chromosomes (e.g. array of bits) and requires
   also having a fitness function that can be used to evaluate the
   solutions.

steps of genetic algorithm

   a genetic algorithm works by maintaining a pool of candidate solutions
   (named generation). iteratively, the generation evolved to produce the
   next generation which has candidate solutions with higher fitness
   values than the previous generation. this process is repeated for a
   pre-specified number of generations or until a solution with goal
   fitness value is found.
   [1*hp8jvxljtov14rgljfxeza.png]
   steps of genetic algorithm (image credit: [18]the genetic algorithm
   explained)

   the next generation is created from current generation in a
   biologically inspired manner that consists of 3 steps:
     * selection: we evaluate the fitness of members of the current
       generation, then we select the subset with the best fitness values
       in order to act as parents for the next generation. in short,
       survival for the fittest.
     * crossover: we merge pairs from the selected parents to generate new
       offspring child solution. crossover can happen in different forms,
       simplest form is the one-point crossover which splits the string
       representation of each solutions into two parts at the same
       position, then conctatnate the first part of one solution with the
       second part of the second one to form the offspring solution
       representation.

   [1*_yn_wisk4ltq6r6jih_ing.png]
   image credit : creationwiki:
   [19]http://creationwiki.org/genetic_algorithm
     * mutation: in biology, mutation happens with low id203 where a
       child can have a feature that was not inherited from the parents.
       likewise, in genetic algorithm mutation step perturbs the offspring
       solution with very small id203 (e.g. flipping one bit of the
       bitstring representation of the solution)

frozen lake problem

   now, let   s demonstrate how genetic algorithm can be used to solve the
   frozen-lake problem from the openai gym.

problem description

   imagine you are standing on top of a frozen lake. where the map of the
   surface is described for you as a grid like the following:
sfff       (s: starting point, safe)
fhfh       (f: frozen surface, safe)
fffh       (h: hole, fall to your doom)
hffg       (g: goal, where the frisbee is located)

   your initial position is marked as s and you want to reach the position
   marked by g. however, if you step into any position marked as h you
   will fall into the water and there is no return back. moreover, the
   surface of the lake is slippery so your actions of movement may not get
   executed as you want. for example, when you try to move forward, your
   actual move may be to the right or the left.

   at each step, you get a reward of 0 except when you reach the goal you
   will get a reward = 1.

   remember from our previous article, you can model reinforcement
   learning problems as markov decision process . in this problem, both
   the set of actions and states are discrete sets. the set of states s
   includes the possible locations in the grid (we can number them by
   numbers from 1 to 16). the set of actions a includes possibles moves:
   forward, backward, left or right. we can denote them as 1, 2, 3, 4. the
   reward and next state models are stochastic p(r_t+1 | s_t, a_t),
   p(s_t+1 | s_t, a_t) given that the lake surface is slippery and same
   movement action can lead to different next state and reward values.

   solving this problem requires finding a policy (i.e. which direction to
   move at each state) that can reach the goal more than 78%of times.

random search

   now, lets see if how far can a random search for a good policy achieve
   for this problem.

   in this problem, we have 16 states and 4 possible moves. as a result,
   there exist 4^16=4294967296 possible policies. of course, it is not
   feasible to evaluate all of them, but we can generate a random set of
   solutions and select the best among them.

   the script below generates a set of 2000 random solution and evaluates
   them. the best policy score we get is only around 0.33 which means if
   an agent applies it, then he will be able to reach the goal only 33% of
   times.

   iframe: [20]/media/5a7a4041bdd2a79679e34d7cf299c56a?postid=a38a5612c4dc

genetic algorithm

   to solve this problem by using genetic algorithm, we encode each
   solution as an array of 16 values which each value can be either 0,1,2,
   3 representing the four possible moves at the different 16 positions.

   we generate an initial population of 100random solutions, and we
   iterate through 10 generations by doing selection , crossover , and
   mutation .

   as a result, we can see how the that best score in in the initial
   population is 0.2 but after 20 generations we can find a solution that
   achieves more than 80%score.

   iframe: [21]/media/8653c8bf2488c0d1ae977df49675ab70?postid=a38a5612c4dc

   link of solution on openai gym.
   [22]https://gym.openai.com/evaluations/eval_4vyqbhxmrlmg9y9mqa5epa

   next time, we will explain the methods of value-iteration, and policy
   iteration and demonstrate how they can solve another example of
   id23 problems.

   iframe: [23]/media/c43026df6fee7cdb1aab8aaf916125ea?postid=a38a5612c4dc

   [24][1*2f7oqe2ajk1ksrhkmd9zmw.png]
   [25][1*v-ppfkswhbvlwwamsvhhwg.png]
   [26][1*wt2auqisieaozxj-i7brdq.png]

     * [27]machine learning
     * [28]genetic algorithm
     * [29]id23
     * [30]artificial intelligence
     * [31]ai

   (button)
   (button)
   (button) 527 claps
   (button) (button) (button) 5 (button) (button)

     (button) blockedunblock (button) followfollowing
   [32]go to the profile of moustafa alzantot

[33]moustafa alzantot

   computer science phd student at ucla.
   ([34]http://web.cs.ucla.edu/~malzantot/)

     (button) follow
   [35]becoming human: artificial intelligence magazine

[36]becoming human: artificial intelligence magazine

   latest news, info and tutorials on artificial intelligence, machine
   learning, deep learning, big data and what it means for humanity.

     * (button)
       (button) 527
     * (button)
     *
     *

   [37]becoming human: artificial intelligence magazine
   never miss a story from becoming human: artificial intelligence
   magazine, when you sign up for medium. [38]learn more
   never miss a story from becoming human: artificial intelligence
   magazine
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://becominghuman.ai/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/a38a5612c4dc
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://becominghuman.ai/genetic-algorithm-for-reinforcement-learning-a38a5612c4dc&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://becominghuman.ai/genetic-algorithm-for-reinforcement-learning-a38a5612c4dc&source=--------------------------nav_reg&operation=register
   8. https://becominghuman.ai/?source=logo-lo_aaue1adf0hmt---5e5bef33608a
   9. https://becominghuman.ai/artificial-intelligence-software-developers-af09386dc05d
  10. https://becominghuman.ai/tagged/tutorial
  11. https://becominghuman.ai/write-for-us-48270209de63
  12. https://becominghuman.ai/artificial-intelligence-communities-c305f28e674c
  13. http://m.me/becominghumanai
  14. https://becominghuman.ai/@m.alzantot?source=post_header_lockup
  15. https://becominghuman.ai/@m.alzantot
  16. https://gym.openai.com/envs/frozenlake-v0
  17. https://www.eventbrite.com/e/the-chatbot-conference-tickets-34868758395?aff=cbl
  18. http://techeffigytutorials.blogspot.com/2015/02/the-genetic-algorithm-explained.html
  19. http://creationwiki.org/genetic_algorithm
  20. https://becominghuman.ai/media/5a7a4041bdd2a79679e34d7cf299c56a?postid=a38a5612c4dc
  21. https://becominghuman.ai/media/8653c8bf2488c0d1ae977df49675ab70?postid=a38a5612c4dc
  22. https://gym.openai.com/evaluations/eval_4vyqbhxmrlmg9y9mqa5epa
  23. https://becominghuman.ai/media/c43026df6fee7cdb1aab8aaf916125ea?postid=a38a5612c4dc
  24. https://becominghuman.ai/artificial-intelligence-communities-c305f28e674c
  25. https://upscri.be/8f5f8b
  26. https://becominghuman.ai/write-for-us-48270209de63
  27. https://becominghuman.ai/tagged/machine-learning?source=post
  28. https://becominghuman.ai/tagged/genetic-algorithm?source=post
  29. https://becominghuman.ai/tagged/reinforcement-learning?source=post
  30. https://becominghuman.ai/tagged/artificial-intelligence?source=post
  31. https://becominghuman.ai/tagged/ai?source=post
  32. https://becominghuman.ai/@m.alzantot?source=footer_card
  33. https://becominghuman.ai/@m.alzantot
  34. http://web.cs.ucla.edu/~malzantot/
  35. https://becominghuman.ai/?source=footer_card
  36. https://becominghuman.ai/?source=footer_card
  37. https://becominghuman.ai/
  38. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  40. https://www.eventbrite.com/e/the-chatbot-conference-tickets-34868758395?aff=cbl
  41. https://medium.com/p/a38a5612c4dc/share/twitter
  42. https://medium.com/p/a38a5612c4dc/share/facebook
  43. https://medium.com/p/a38a5612c4dc/share/twitter
  44. https://medium.com/p/a38a5612c4dc/share/facebook
