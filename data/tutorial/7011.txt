   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]ml review
     * [9]       contribute
     * [10]            review.com newsletter
     __________________________________________________________________

10 deep learning projects based on apache mxnet

   [11]go to the profile of julien simon
   [12]julien simon (button) blockedunblock (button) followfollowing
   jul 2, 2017

   [13]apache mxnet is an open source library helping developers build,
   train and run deep learning models. in [14]previous articles, i
   introduced you to its api and its main features.

   in this article, i will focus on 10 open source projects applying mxnet
   to various use cases:
     * deployment using docker containers or lambda functions,
     * face recognition & detection,
     * id164 & classification,
     * id42,
     * machine translation.

     do you feel your project should be on this list?

     get in touch :)
     __________________________________________________________________

deployment

   so far, we ran our mxnet code on amazon ec2 instances, just like any
   other python application. as you may know, there are alternative ways
   to run code on aws and they can be obviously applied to mxnet.

#1         continuous delivery of mxnet apis using code* and amazon ecs

   using a [15]cloudformation template, this project will create an
   automated workflow that will provision, configure and orchestrate a
   pipeline triggering deployment of any changes to your mxnet model or
   application code. you will orchestrate all of the changes into a
   deployment pipeline to achieve continuous delivery using
   [16]codepipeline and [17]codebuild. you can deploy new mxnet apis and
   make those available to your users in just minutes, not days or weeks.
   [18]awslabs/ecs-mxnet-example
   ecs-mxnet-example - an example project to deploy mxnet id136 api
   with docker on amazon ecs. uses codepipeline and   github.com

   more information in the companion blog post:
   [19]deploy deep learning models on amazon ecs | aws ai blog
   in this post, i show you how to connect the workflow between the data
   scientists and devops. using a number of aws   aws.amazon.com

#2         deploying mxnet in a lambda function

   this is a reference application that predicts labels along with their
   probabilities for an image using a pre-trained model with apache mxnet
   deployed on [20]aws lambda. a [21]serverless application model template
   (sam) and instructions are provided to automate the creation of an api
   endpoint.
   [22]awslabs/mxnet-lambda
   mxnet-lambda - reference lambda function that predicts image labels for
   a image using an mxnet-built deep learning   github.com

   you can leverage this package and its precompiled libraries to build
   your prediction pipeline on aws lambda with mxnet. additional models
   can be found in the [23]model zoo

   more information the companion blog post:
   [24]seaid113ssly scale predictions with aws lambda and mxnet | aws
   compute blog
   as previously mentioned, ml model training and validation is just a
   small part of the story. after the model is built   aws.amazon.com
     __________________________________________________________________

face recognition

#3         face detection

   this project performs face and landmark detection.

   it   s based on the following research article:
   k. zhang and z. zhang and z. li and y. qiao joint: [25]face detection
   and alignment using multitask cascaded convolutional networks.
   [1*aidr6zxixixh2vtpxkdnww.png]

#4         face identification & facial features detection

   this project provides features comparable to [26]amazon rekognition. if
   you need the extra flexibility and are ready to dive deep, this could
   be a good starting point.
   [27]tornadomeet/mxnet-face
   mxnet-face - using mxnet for face-related algorithm.github.com

   it   s based on the following research articles:
     * wu x, he r, sun z. [28]a lightened id98 for deep face representation
     * rudd e, g  nther m, boult t. moon: [29]a mixed objective
       optimization network for the recognition of facial attributes
     * jiang h, learned-miller e. [30]face detection with the faster r-id98

   [1*vvcwxc4z1iozrt_-u2iata.png]
     __________________________________________________________________

id164

#5         single shot detector

   this project lets you detect and classify multiple objects in a single
   picture. it   s a reimplementation of an original [31]caffe project.
   [32]zhreshold/mxnet-ssd
   mxnet-ssd - mxnet port of ssd: single shot multibox object detector.
   reimplementation of https://github.com/weiliu89   github.com
   [1*wt5dindkyfacklbzly2tdw.png]

   it is based on the following research article:
   wei liu, dragomir anguelov, dumitru erhan, christian szegedy, scott
   reed, cheng-yang fu, alexander c. berg: [33]single shot multibox
   detectorssd

#6         faster single shot detector

   this projects improves on the previous one by leveraging the multi-gpu
   capabilities of mxnet to speed up training and id136.
   [34]precedenceguo/mx-rid98
   mx-rid98 - faster r-id98, an mxnet implementation with distributed
   implementation and data parallelization.github.com
   [1*69-ldvp5uv3z1kag9xgwqq.png]

   it   s based on the following research papers:
     * ross girshick: [35]fast r-id98
     * shaoqing ren, kaiming he, ross girshick, and jian sun: [36]faster
       r-id98: towards real-time id164 with region proposal
       networks

#7 #8         id164 on smartphones

   these twin projects use a pre-trained [37]inception model to perform
   id164 on ios and android.
   [38]dneprdroid/imagerecognizer-ios
   imagerecognizer-ios - neural network image classifier (inception-bn
   network architecture), developed via mxnetgithub.com
   [39]dneprdroid/imagerecognizer-android
   imagerecognizer-android - [android] neural network image classifier
   (inception-bn network architecture), developed via   github.com
   [1*oc9yknlzp6rwnf7dcxl9tq.gif]
     __________________________________________________________________

id42

#9         reading licence plates

   this project performs license plate recognition at 9 images/second on a
   mac book pro with 81% accuracy. with a little effort, this can surely
   be adapted to other ocr use cases :)
   [40]szad670401/end-to-end-for-chinese-plate-recognition
   end-to-end-for-chinese-plate-recognition -                ,                                    mxnet,
   end-to-end chinese plate recognition base on mxnetgithub.com
     __________________________________________________________________

machine translation

#10         sockeye

   the sockeye project is a sequence-to-sequence framework for neural
   machine translation based on mxnet. it implements the encoder-decoder
   architecture with attention.
   [41]awslabs/sockeye
   sockeye - sequence-to-sequence framework with a focus on neural machine
   translation based on mxnetgithub.com

   this one makes me very curious. i need to find out more ;)
     __________________________________________________________________

   that   s it for today. kudos to all project authors for their fascinating
   work. i hope they will inspire you to get started with deep learning
   and mxnet.

   and once again, thanks a lot for reading!

     * [42]aws
     * [43]artificial intelligence
     * [44]deep learning
     * [45]open source
     * [46]machine learning

   (button)
   (button)
   (button) 215 claps
   (button) (button) (button) 2 (button) (button)

     (button) blockedunblock (button) followfollowing
   [47]go to the profile of julien simon

[48]julien simon

   hacker. headbanger. harley rider. hunter.
   [49]https://aws.amazon.com/evangelists/julien-simon/

     (button) follow
   [50]ml review

[51]ml review

   highlights from machine learning research, projects and learning
   materials. from and for ml scientists, engineers an enthusiasts.

     * (button)
       (button) 215
     * (button)
     *
     *

   [52]ml review
   never miss a story from ml review, when you sign up for medium.
   [53]learn more
   never miss a story from ml review
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/8231109f3f64
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://medium.com/mlreview/10-deep-learning-projects-based-on-apache-mxnet-8231109f3f64&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://medium.com/mlreview/10-deep-learning-projects-based-on-apache-mxnet-8231109f3f64&source=--------------------------nav_reg&operation=register
   8. https://medium.com/mlreview?source=logo-lo_p7eewavctglb---33272dbbd858
   9. https://medium.com/mlreview/publish-with-ml-review-c814c54ca28d
  10. http://mlreview.com/?medium
  11. https://medium.com/@julsimon?source=post_header_lockup
  12. https://medium.com/@julsimon
  13. http://mxnet.io/
  14. https://becominghuman.ai/an-introduction-to-the-mxnet-api-part-1-848febdcf8ab
  15. https://aws.amazon.com/fr/cloudformation/
  16. https://aws.amazon.com/fr/codepipeline/
  17. https://aws.amazon.com/fr/codebuild/
  18. https://github.com/awslabs/ecs-mxnet-example
  19. https://aws.amazon.com/fr/blogs/ai/deploy-deep-learning-models-on-amazon-ecs/
  20. https://aws.amazon.com/lambda
  21. https://docs.aws.amazon.com/lambda/latest/dg/deploying-lambda-apps.html
  22. https://github.com/awslabs/mxnet-lambda
  23. http://data.mxnet.io/models/
  24. https://aws.amazon.com/fr/blogs/compute/seaid113ssly-scale-predictions-with-aws-lambda-and-mxnet/
  25. https://arxiv.org/abs/1604.02878
  26. https://aws.amazon.com/fr/rekognition/
  27. https://github.com/tornadomeet/mxnet-face
  28. https://arxiv.org/abs/1511.02683
  29. https://arxiv.org/abs/1603.07027
  30. https://arxiv.org/abs/1606.03473
  31. http://caffe.berkeleyvision.org/
  32. https://github.com/zhreshold/mxnet-ssd
  33. https://arxiv.org/abs/1512.02325
  34. https://github.com/precedenceguo/mx-rid98
  35. https://arxiv.org/abs/1504.08083
  36. https://arxiv.org/abs/1506.01497
  37. https://arxiv.org/abs/1602.07261
  38. https://github.com/dneprdroid/imagerecognizer-ios
  39. https://github.com/dneprdroid/imagerecognizer-android
  40. https://github.com/szad670401/end-to-end-for-chinese-plate-recognition
  41. https://github.com/awslabs/sockeye
  42. https://medium.com/tag/aws?source=post
  43. https://medium.com/tag/artificial-intelligence?source=post
  44. https://medium.com/tag/deep-learning?source=post
  45. https://medium.com/tag/open-source?source=post
  46. https://medium.com/tag/machine-learning?source=post
  47. https://medium.com/@julsimon?source=footer_card
  48. https://medium.com/@julsimon
  49. https://aws.amazon.com/evangelists/julien-simon/
  50. https://medium.com/mlreview?source=footer_card
  51. https://medium.com/mlreview?source=footer_card
  52. https://medium.com/mlreview
  53. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  55. https://github.com/awslabs/ecs-mxnet-example
  56. https://aws.amazon.com/fr/blogs/ai/deploy-deep-learning-models-on-amazon-ecs/
  57. https://github.com/awslabs/mxnet-lambda
  58. https://aws.amazon.com/fr/blogs/compute/seaid113ssly-scale-predictions-with-aws-lambda-and-mxnet/
  59. https://github.com/tornadomeet/mxnet-face
  60. https://github.com/zhreshold/mxnet-ssd
  61. https://github.com/precedenceguo/mx-rid98
  62. https://github.com/dneprdroid/imagerecognizer-ios
  63. https://github.com/dneprdroid/imagerecognizer-android
  64. https://github.com/szad670401/end-to-end-for-chinese-plate-recognition
  65. https://github.com/awslabs/sockeye
  66. https://medium.com/p/8231109f3f64/share/twitter
  67. https://medium.com/p/8231109f3f64/share/facebook
  68. https://medium.com/p/8231109f3f64/share/twitter
  69. https://medium.com/p/8231109f3f64/share/facebook
