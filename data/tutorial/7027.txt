   #[1]deep ideas    feed [2]deep ideas    comments feed [3]deep ideas   
   deep learning from scratch vi: tensorflow comments feed [4]alternate
   [5]alternate

   [6]facebook[7]twitter[8]email[9]rss[10]linkedin[11]tumblr

   [12]deep ideas logo deep ideas retina logo

a blog on artificial intelligence, deep learning and cognitive science

     * [13]home
     * [14]list of articles
     * [15]about me
     * ____________________
          

   [16]previous [17]next

     * [18]view larger image

deep learning from scratch vi: tensorflow

   this is part 6 of a series of tutorials, in which we develop the
   mathematical and algorithmic underpinnings of deep neural networks from
   scratch and implement our own neural network library in python,
   mimicing the [19]tensorflow api. start with the first part: [20]i:
   computational graphs.
     * [21]part i: computational graphs
     * [22]part ii: id88s
     * [23]part iii: training criterion
     * [24]part iv: id119 and id26
     * [25]part v: multi-layer id88s
     * [26]part vi: tensorflow

tensorflow

   it is now time to say goodbye to our own toy library and start to get
   professional by switching to the actual tensorflow.

   as we   ve learned already, tensorflow conceptually works exactly the
   same as our implementation. so why not just stick to our own
   implementation? there are a couple of reasons:
    1. tensorflow is the product of years of effort in providing efficient
       implementations for all the algorithms relevant to our purposes.
       fortunately, there are experts at google whose everyday job is to
       optimize these implementations. we do not need to know all of these
       details. we only have to know what the algorithms do conceptually
       (which we do now) and how to call them.
    2. tensorflow allows us to train our neural networks on the gpu
       (graphical processing unit), resulting in an enormous speedup
       through massive parallelization.
    3. google is now building [27]tensor processing units, which are
       integrated circuits specifically built to run and train tensorflow
       graphs, resulting in yet more enormous speedup.
    4. tensorflow comes pre-equipped with a lot of neural network
       architectures that would be cumbersome to build on our own.
    5. tensorflow comes with a high-level api called keras that allows us
       to build neural network architectures way easier than by defining
       the computational graph by hand, as we did up until now.

   so let   s get started. installing tensorflow is very easy.
pip install tensorflow

   if we want gpu acceleration, we have to install the
   package tensorflow-gpu:
pip install tensorflow-gpu

   in our code, we import it as follows:
import tensorflow as tf

   since the syntax we are used to from the previous sections mimics the
   tensorflow syntax, we already know how to use tensorflow. we only have
   to make the following changes:
     * add tf. to the front of all our function calls and classes
     * call session.run(tf.global_variables_initializer()) after building
       the graph

   the rest is exactly the same. let   s recreate the multi-layer id88
   from the previous section using tensorflow:

   iframe:
   [28]https://tech.io/playground-widget/d80b4abda28e57248e30868dd8659b0b7
   849/tensorflow/132847/multi-layer%20id88

   in the next lesson, we will learn about keras, which is a high-level
   api on top of tensorflow that allows us to define and train neural
   networks more abstractly     without having to specify the internal
   composition of all the operations everytime. you can
   either [29]subscribe to deep ideas by email or [30]subscribe to my
   facebook page to stay updated.

share this:

     * [31]click to share on twitter (opens in new window)
     * [32]click to share on facebook (opens in new window)
     * [33]click to share on google+ (opens in new window)
     * [34]click to share on skype (opens in new window)
     * [35]click to share on linkedin (opens in new window)
     * [36]click to print (opens in new window)
     * [37]click to share on pocket (opens in new window)
     * [38]click to share on tumblr (opens in new window)
     * [39]click to share on reddit (opens in new window)
     * [40]click to share on telegram (opens in new window)
     * [41]click to share on pinterest (opens in new window)
     * [42]click to share on whatsapp (opens in new window)
     *

related

   by [43]daniel| 2018-10-04t12:30:36+00:00 november 9th,
   2017|[44]artificial intelligence, [45]deep learning, [46]machine
   learning, [47]python, [48]tensorflow|[49]0 comments

stay updated

   subscribe to the mailing list and get updated about new blog posts by
   email.
   ____________________
   [ ] i consent to my submitted data being collected via this form*
   sign up now

   thank you for subscribing.

   something went wrong.

   i respect your privacy and take protecting it seriously

follow me on twitter

   [50]my tweets

   copyright 2017 daniel sabinasz
   [51]facebook[52]twitter[53]email[54]rss[55]linkedin[56]tumblr

references

   visible links
   1. http://www.deepideas.net/feed/
   2. http://www.deepideas.net/comments/feed/
   3. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/feed/
   4. http://www.deepideas.net/wp-json/oembed/1.0/embed?url=http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/
   5. http://www.deepideas.net/wp-json/oembed/1.0/embed?url=http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/&format=xml
   6. http://fb.me/deepideas.net
   7. https://twitter.com/deepideas_net
   8. mailto:daniel@sabinasz.net
   9. http://www.deepideas.net/feed/
  10. https://www.linkedin.com/in/daniel-sabinasz-7b220b100/
  11. https://deepideas.tumblr.com/
  12. http://www.deepideas.net/
  13. http://www.deepideas.net/
  14. http://www.deepideas.net/list-of-articles/
  15. http://www.deepideas.net/about-me/
  16. http://www.deepideas.net/connectionist-models-cognition/
  17. http://www.deepideas.net/building-content-based-search-engine-quantifying-similarity/
  18. https://i2.wp.com/www.deepideas.net/wp-content/uploads/2017/08/neuron.jpg?fit=900,300
  19. http://www.tensorflow.org/
  20. http://www.deepideas.net/deep-learning-from-scratch-i-computational-graphs/
  21. http://www.deepideas.net/deep-learning-from-scratch-i-computational-graphs/
  22. http://www.deepideas.net/deep-learning-from-scratch-ii-id88s/
  23. http://www.deepideas.net/deep-learning-from-scratch-iii-training-criterion/
  24. http://www.deepideas.net/deep-learning-from-scratch-iv-gradient-descent-and-id26/
  25. http://www.deepideas.net/deep-learning-from-scratch-v-multi-layer-id88s/
  26. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/
  27. https://en.wikipedia.org/wiki/tensor_processing_unit
  28. https://tech.io/playground-widget/d80b4abda28e57248e30868dd8659b0b7849/tensorflow/132847/multi-layer id88
  29. https://feedburner.google.com/fb/a/mailverify?uri=deepideas&loc=en_us
  30. https://www.facebook.com/deepideas.net/
  31. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=twitter
  32. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=facebook
  33. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=google-plus-1
  34. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=skype
  35. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=linkedin
  36. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/#print
  37. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=pocket
  38. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=tumblr
  39. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=reddit
  40. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=telegram
  41. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/?share=pinterest
  42. https://api.whatsapp.com/send?text=deep learning from scratch vi: tensorflow http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/
  43. http://www.deepideas.net/author/daniel/
  44. http://www.deepideas.net/category/artificial-intelligence/
  45. http://www.deepideas.net/category/artificial-intelligence/machine-learning/deep-learning/
  46. http://www.deepideas.net/category/artificial-intelligence/machine-learning/
  47. http://www.deepideas.net/category/python/
  48. http://www.deepideas.net/category/artificial-intelligence/machine-learning/tensorflow/
  49. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/#respond
  50. https://twitter.com/deepideas_net
  51. http://fb.me/deepideas.net
  52. https://twitter.com/deepideas_net
  53. mailto:daniel@sabinasz.net
  54. http://www.deepideas.net/feed/
  55. https://www.linkedin.com/in/daniel-sabinasz-7b220b100/
  56. https://deepideas.tumblr.com/

   hidden links:
  58. http://www.deepideas.net/deep-learning-from-scratch-vi-tensorflow/
  59. https://www.facebook.com/deepideas.net/
