   #[1]github [2]recent commits to neuralkart:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]20
     * [35]star [36]615
     * [37]fork [38]49

[39]rameshvarun/[40]neuralkart

   [41]code [42]issues 6 [43]pull requests 0 [44]projects 0 [45]insights
   (button) dismiss

join github today

   github is home to over 31 million developers working together to host
   and review code, manage projects, and build software together.
   [46]sign up
   a real-time mario kart ai using id98s, offline search, and dagger
   [47]machine-learning [48]keras [49]convolutional-neural-networks
   [50]cs231n [51]mario-kart [52]bizhawk [53]deep-learning [54]tensorflow
     * [55]152 commits
     * [56]3 branches
     * [57]0 releases
     * [58]fetching contributors

    1. [59]lua 84.2%
    2. [60]python 15.8%

   (button) lua python
   branch: master (button) new pull request
   [61]find file
   clone or download

clone with https

   use git or checkout with svn using the web url.
   https://github.com/r
   [62]download zip

downloading...

   want to be notified of new releases in rameshvarun/neuralkart?
   [63]sign in [64]sign up

launching github desktop...

   if nothing happens, [65]download github desktop and try again.

   (button) go back

launching github desktop...

   if nothing happens, [66]download github desktop and try again.

   (button) go back

launching xcode...

   if nothing happens, [67]download xcode and try again.

   (button) go back

launching visual studio...

   if nothing happens, [68]download the github extension for visual studio
   and try again.

   (button) go back
   [69]@rameshvarun
   [70]rameshvarun [71]clarify where the downloads should be unzipped.
   latest commit [72]c96abab mar 26, 2018
   [73]permalink
   type name latest commit message commit time
   failed to load latest commit information.
   [74]lualibs [75]updated lua socket. may 20, 2017
   [76]tools
   [77].gitignore
   [78]axistest.lua
   [79]demo.lua
   [80]evaluate.lua [81]more comments + an improved demo script. jun 3,
   2017
   [82]play.lua
   [83]playandsearch.lua
   [84]readme.md
   [85]searchai.lua
   [86]demo.gif
   [87]predict-server.py
   [88]train.py
   [89]util.lua

readme.md

neuralkart - a real-time mario kart ai using id98s, offline search, and dagger

                               [90][demo.gif]
     * [91]explanation video
     * [92]videos of runs
     * [93]class poster
     * [94]class writeup

set-up

   the project currently only works on windows.

install 64-bit python 3

   this project was written for python 3. furthermore, tensorflow requires
   64-bit python.

install python dependencies

   the following python dependencies need to be installed.
     * tensorflow
     * keras
     * pillow
     * matplotlib
     * mkdir_p
     * h5py

get bizhawk (1.12.2)

   our scripts are all written for the bizhawk emulator (tested in version
   1.12.2), which has embedded lua scripting. to get bizhawk you first
   need to install the prerequisites -
   [95]https://github.com/tasvideos/bizhawk-prereqs/releases/tag/1.4. then
   you can download bizhawk (version 1.12.2) and unzip it to any directory
   - [96]https://github.com/tasvideos/bizhawk/releases/tag/1.12.2

download our pre-trained weights and recordings

   these should be unzipped into the folder of the repo.
     * [97]save states - the states should be accessible as
       states/[mode]/[track].state.
     * [98]weights - the weights should be accessible as
       weights/[track].hdf5
     * [99]recordings (optional) - the recordings should be accessible as
       recordings/[track]/[mode]/[recording]/[frame].png.

usage instructions

running a live demo

   these instructions can be used to run a demo of three tracks that the
   ai performs well on.
    1. download the save states and pre-trained weights.
    2. run predict-server.py using python 3 - this starts a server on port
       36296 which actually runs the model.
          + you can pass a --cpu to force tensorflow to run on the cpu.
    3. open bizhawk and load the mariokart 64 rom.
    4. turn off messages (view > display messages).
          + you don't have to do this, but they get in the way.
    5. open the bizhawk lua console (tools > lua console).
    6. load demo.lua

   this should automatically play three tracks in a loop. you can hit esc
   to switch to the next track. you can also hit the arrow keys to
   manually steer the player. this can be used to demonstrate the ai's
   stability.

   note that the clipboard is used to pass frames from the emulator to the
   python script. it's a hack, but it seems to work - just don't try to
   copy or paste anything while the scripts are running.

run the ai on another track

   once you have the demo working, you can use these instructions to play
   on other tracks. note that you can only play on a track if there are
   weights trained for it.

   first, navigate to another track from the menu, or use one of our save
   states (file > load state > load named state). these states are set to
   be the frame after the race starts. then load play.lua from the lua
   console.

training the model on recordings

   once you have the ai running, you probably want to try retraining the
   weights based off our recordings. first download our weights from the
   link above, then run train.py [track]. you can also use --cpu to force
   it to use the cpu.

creating new recordings from the search ai

   load a state and then load searchai.lua in order to generate a
   recording using the search ai. recordings consist of a series of frames
   and a steering.txt file that contains the recorded steering values.

running the iterative improvement loop

   as mentioned in the paper, we ran an iterative improvement loop that
   swaps between playing and generating new recordings. to bootstrap the
   process, you must first generate a recording using the search ai and
   create an initial weights file using train.py. now start
   predict-server.py using the --cpu flag (so that you can train on the
   gpu).

   now you can load a state and run playandsearch.lua which alternates
   between playing and searching. it retrains every other run. you
   probably need to edit the code that calls train.py on line 90 so that
   it works in your environment.

other projects + links

     * [100]tensorkart - the first mariokart deep learning project, which
       we started from as our baseline.
     * [101]deep learning for real-time atari game play using offline
       monte-carlo tree search planning - the idea for using a
       search-based ai for teaching the convnet ai came from this paper.
     * [102]a reduction of imitation learning and id170 to
       no-regret online learning - the dagger algorithm was first
       introduced in this paper.
     * [103]mariokart 64 neat - this ai uses the neat algorithm to
       genetically evolve a shallow neural network
     * [104]weatherton/bizhawkmariokart64 - some mariokart 64 scripts
       which we used as a reference for memory locations.

     *    2019 github, inc.
     * [105]terms
     * [106]privacy
     * [107]security
     * [108]status
     * [109]help

     * [110]contact github
     * [111]pricing
     * [112]api
     * [113]training
     * [114]blog
     * [115]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [116]reload to refresh your
   session. you signed out in another tab or window. [117]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/rameshvarun/neuralkart/commits/master.atom
   3. https://github.com/rameshvarun/neuralkart#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/rameshvarun/neuralkart
  32. https://github.com/join
  33. https://github.com/login?return_to=/rameshvarun/neuralkart
  34. https://github.com/rameshvarun/neuralkart/watchers
  35. https://github.com/login?return_to=/rameshvarun/neuralkart
  36. https://github.com/rameshvarun/neuralkart/stargazers
  37. https://github.com/login?return_to=/rameshvarun/neuralkart
  38. https://github.com/rameshvarun/neuralkart/network/members
  39. https://github.com/rameshvarun
  40. https://github.com/rameshvarun/neuralkart
  41. https://github.com/rameshvarun/neuralkart
  42. https://github.com/rameshvarun/neuralkart/issues
  43. https://github.com/rameshvarun/neuralkart/pulls
  44. https://github.com/rameshvarun/neuralkart/projects
  45. https://github.com/rameshvarun/neuralkart/pulse
  46. https://github.com/join?source=prompt-code
  47. https://github.com/topics/machine-learning
  48. https://github.com/topics/keras
  49. https://github.com/topics/convolutional-neural-networks
  50. https://github.com/topics/cs231n
  51. https://github.com/topics/mario-kart
  52. https://github.com/topics/bizhawk
  53. https://github.com/topics/deep-learning
  54. https://github.com/topics/tensorflow
  55. https://github.com/rameshvarun/neuralkart/commits/master
  56. https://github.com/rameshvarun/neuralkart/branches
  57. https://github.com/rameshvarun/neuralkart/releases
  58. https://github.com/rameshvarun/neuralkart/graphs/contributors
  59. https://github.com/rameshvarun/neuralkart/search?l=lua
  60. https://github.com/rameshvarun/neuralkart/search?l=python
  61. https://github.com/rameshvarun/neuralkart/find/master
  62. https://github.com/rameshvarun/neuralkart/archive/master.zip
  63. https://github.com/login?return_to=https://github.com/rameshvarun/neuralkart
  64. https://github.com/join?return_to=/rameshvarun/neuralkart
  65. https://desktop.github.com/
  66. https://desktop.github.com/
  67. https://developer.apple.com/xcode/
  68. https://visualstudio.github.com/
  69. https://github.com/rameshvarun
  70. https://github.com/rameshvarun/neuralkart/commits?author=rameshvarun
  71. https://github.com/rameshvarun/neuralkart/commit/c96abab9d9e8d909b951c0c864bd87a4a62a254d
  72. https://github.com/rameshvarun/neuralkart/commit/c96abab9d9e8d909b951c0c864bd87a4a62a254d
  73. https://github.com/rameshvarun/neuralkart/tree/c96abab9d9e8d909b951c0c864bd87a4a62a254d
  74. https://github.com/rameshvarun/neuralkart/tree/master/lualibs
  75. https://github.com/rameshvarun/neuralkart/commit/c371c40ddd081280174889e3f6463ea0bcac56e0
  76. https://github.com/rameshvarun/neuralkart/tree/master/tools
  77. https://github.com/rameshvarun/neuralkart/blob/master/.gitignore
  78. https://github.com/rameshvarun/neuralkart/blob/master/axistest.lua
  79. https://github.com/rameshvarun/neuralkart/blob/master/demo.lua
  80. https://github.com/rameshvarun/neuralkart/blob/master/evaluate.lua
  81. https://github.com/rameshvarun/neuralkart/commit/9967d4e0bdc3b982d6a78041a7b5001f62238912
  82. https://github.com/rameshvarun/neuralkart/blob/master/play.lua
  83. https://github.com/rameshvarun/neuralkart/blob/master/playandsearch.lua
  84. https://github.com/rameshvarun/neuralkart/blob/master/readme.md
  85. https://github.com/rameshvarun/neuralkart/blob/master/searchai.lua
  86. https://github.com/rameshvarun/neuralkart/blob/master/demo.gif
  87. https://github.com/rameshvarun/neuralkart/blob/master/predict-server.py
  88. https://github.com/rameshvarun/neuralkart/blob/master/train.py
  89. https://github.com/rameshvarun/neuralkart/blob/master/util.lua
  90. https://github.com/rameshvarun/neuralkart/blob/master/demo.gif
  91. https://www.youtube.com/watch?v=eo07basyq24
  92. https://www.youtube.com/playlist?list=plshd7wb3ai6ks04z7ks_uskyg_uy02ezy
  93. https://drive.google.com/open?id=0b7kscouxhaaqce8wwxzmrvhjx2c
  94. https://drive.google.com/open?id=0b7kscouxhaaqb1fty2wzus1yz0e
  95. https://github.com/tasvideos/bizhawk-prereqs/releases/tag/1.4
  96. https://github.com/tasvideos/bizhawk/releases/tag/1.12.2
  97. https://drive.google.com/open?id=0b7kscouxhaaqagndwei2mlbsrdq
  98. https://drive.google.com/open?id=0b7kscouxhaaqquy3v2dqqjnnbxm
  99. https://drive.google.com/open?id=0b7kscouxhaaqshflrfpcqtbvemm
 100. https://github.com/kevinhughes27/tensorkart
 101. https://papers.nips.cc/paper/5421-deep-learning-for-real-time-atari-game-play-using-offline-monte-carlo-tree-search-planning.pdf
 102. https://www.cs.cmu.edu/~sross1/publications/ross-aistats11-noregret.pdf
 103. https://www.youtube.com/watch?v=tmltm0zhkhw
 104. https://github.com/weatherton/bizhawkmariokart64
 105. https://github.com/site/terms
 106. https://github.com/site/privacy
 107. https://github.com/security
 108. https://githubstatus.com/
 109. https://help.github.com/
 110. https://github.com/contact
 111. https://github.com/pricing
 112. https://developer.github.com/
 113. https://training.github.com/
 114. https://github.blog/
 115. https://github.com/about
 116. https://github.com/rameshvarun/neuralkart
 117. https://github.com/rameshvarun/neuralkart

   hidden links:
 119. https://github.com/
 120. https://github.com/rameshvarun/neuralkart
 121. https://github.com/rameshvarun/neuralkart
 122. https://github.com/rameshvarun/neuralkart
 123. https://help.github.com/articles/which-remote-url-should-i-use
 124. https://github.com/rameshvarun/neuralkart#neuralkart---a-real-time-mario-kart-ai-using-id98s-offline-search-and-dagger
 125. https://github.com/rameshvarun/neuralkart#set-up
 126. https://github.com/rameshvarun/neuralkart#install-64-bit-python-3
 127. https://github.com/rameshvarun/neuralkart#install-python-dependencies
 128. https://github.com/rameshvarun/neuralkart#get-bizhawk-1122
 129. https://github.com/rameshvarun/neuralkart#download-our-pre-trained-weights-and-recordings
 130. https://github.com/rameshvarun/neuralkart#usage-instructions
 131. https://github.com/rameshvarun/neuralkart#running-a-live-demo
 132. https://github.com/rameshvarun/neuralkart#run-the-ai-on-another-track
 133. https://github.com/rameshvarun/neuralkart#training-the-model-on-recordings
 134. https://github.com/rameshvarun/neuralkart#creating-new-recordings-from-the-search-ai
 135. https://github.com/rameshvarun/neuralkart#running-the-iterative-improvement-loop
 136. https://github.com/rameshvarun/neuralkart#other-projects--links
 137. https://github.com/
