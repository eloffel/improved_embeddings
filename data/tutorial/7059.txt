the work, computer age statistical id136, was    rst published by cambridge university press.
c(cid:13) in the work, bradley efron and trevor hastie, 2016.
cambridge university press   s catalogue entry for the work can be found at http: // www. cambridge. org/
9781107149892
nb: the copy of the work, as displayed on this website, can be purchased through cambridge university
press and other standard distribution channels. this copy is made available for personal use only and must
not be adapted, sold or re-distributed.
corrected november 10, 2017.

the twenty-first century has seen a breathtaking expansion of statistical methodology, both in scope and in influence.    big data,       data science,    and    machine learning    have become familiar terms in the news, as statistical methods are brought to bear upon the enormous data sets of modern science and commerce. how did we get here? and where are we going?this book takes us on an exhilarating journey through the revolution in data analysis following the introduction of electronic computation in the 1950s. beginning with classical inferential theories     bayesian, frequentist, fisherian     individual chapters take up a series of influential topics: survival analysis, id28, empirical bayes, the jackknife and bootstrap, id79s, neural networks, id115, id136 after model selection, and dozens more. the distinctly modern approach integrates methodology and algorithms with statistical id136. the book ends with speculation on the future direction of statistics and data science.efron & hastiecomputer age  statistical id136   how and why is computational statistics taking over the world? in this serious work of synthesis that is also fun to read, efron and hastie give their take on the unreasonable effectiveness of statistics and machine learning in the context of a series of clear, historically informed examples.       andrew gelman, columbia university    computer age statistical id136 is written especially for those who want to hear the big ideas, and see them instantiated through the essential mathematics that defines statistical analysis. it makes a great supplement to the traditional curricula for beginning graduate students.       rob kass, carnegie mellon university    this is a terrific book. it gives a clear, accessible, and entertaining account of the interplay between theory and methodological development that has driven statistics in the computer age. the authors succeed brilliantly in locating contemporary algorithmic methodologies for analysis of    big data    within the framework of established statistical theory.       alastair young, imperial college london    this is a guided tour of modern statistics that emphasizes the conceptual and computational advances of the last century. authored by two masters of the field, it offers just the right mix of mathematical analysis and insightful commentary.       hal varian, google    efron and hastie guide us through the maze of breakthrough statistical methodologies following the computing evolution: why they were developed, their properties, and how they are used. highlighting their origins, the book helps us understand each method   s roles in id136 and/or prediction.       galit shmueli, national tsing hua university    a masterful guide to how the inferential bases of classical statistics can provide a principled disciplinary frame for the data science of the twenty-first century.        stephen stigler, university of chicago, author of seven pillars of statistical wisdom    a refreshing view of modern statistics. algorithmics are put on equal footing with intuition, properties, and the abstract arguments behind them. the methods covered are indispensable to practicing statistical analysts in today   s big data and big computing landscape.       robert gramacy, the university of chicago booth school of businessbradley efron is max h. stein professor, professor of statistics, and professor of biomedical data science at stanford university. he has held visiting faculty appointments at harvard, uc berkeley, and imperial college london. efron has worked extensively on theories of statistical id136, and is the inventor of the bootstrap sampling technique. he received the national medal of science in 2005 and the guy medal in gold of the royal statistical society in 2014. trevor hastie is john a. overdeck professor, professor of statistics, and professor of biomedical data science at stanford university. he is coauthor of elements of statistical learning, a key text in the field of modern data analysis. he is also known for his work on generalized additive models and principal curves, and for his contributions to the r computing environment. hastie was awarded the emmanuel and carol parzen prize for statistical innovation in 2014. institute of mathematical statistics monographseditorial board:d. r. cox (university of oxford)b. hambly (university of oxford)s. holmes (stanford university)j. wellner (university of washington)cover illustration: pacific ocean wave, north shore, oahu, hawaii.    brian sytnyk / getty images.cover designed by zoe naylor.printed in the united kingdomcomputer age statistical  id136algorithms, evidence, and data sciencebradley efron trevor hastie9781107149892 efron & hastie jkt c m y kcomputer age statistical id136

algorithms, evidence, and data science

bradley efron

trevor hastie

stanford university

to donna and lynda

viii

contents

preface
acknowledgments
notation

1
1.1
1.2
1.3

2
2.1
2.2
2.3

3
3.1
3.2
3.3
3.4
3.5

4
4.1
4.2
4.3
4.4
4.5

5

part i classic statistical id136

algorithms and id136
a regression example
hypothesis testing
notes

frequentist id136
frequentism in practice
frequentist optimality
notes and details

bayesian id136
two examples
uninformative prior distributions
flaws in frequentist id136
a bayesian/frequentist comparison list
notes and details

fisherian id136 and id113
likelihood and maximum likelihood
fisher information and the id113
conditional id136
permutation and randomization
notes and details

parametric models and exponential families

ix

xv
xviii
xix

1

3
4
8
11

12
14
18
20

22
24
28
30
33
36

38
38
41
45
49
51

53

x

5.1
5.2
5.3
5.4
5.5
5.6

6
6.1
6.2
6.3
6.4
6.5

7
7.1
7.2
7.3
7.4
7.5

8
8.1
8.2
8.3
8.4
8.5

contents

univariate families
the multivariate normal distribution
fisher   s information bound for multiparameter families
the multinomial distribution
exponential families
notes and details

part ii early computer-age methods

empirical bayes
robbins    formula
the missing-species problem
a medical example
indirect evidence 1
notes and details

james   stein estimation and ridge regression
the james   stein estimator
the baseball players
ridge regression
indirect evidence 2
notes and details

generalized linear models and regression trees
id28
generalized linear models
poisson regression
regression trees
notes and details

survival analysis and the em algorithm
life tables and hazard rates
censored data and the kaplan   meier estimate
the log-rank test
the proportional hazards model

9
9.1
9.2
9.3
9.4
9.5 missing data and the em algorithm
9.6

notes and details

the jackknife and the bootstrap

10
10.1 the jackknife estimate of standard error
10.2 the nonparametric bootstrap
10.3 resampling plans

54
55
59
61
64
69

73

75
75
78
84
88
88

91
91
94
97
102
104

108
109
116
120
124
128

131
131
134
139
143
146
150

155
156
159
162

contents

10.4 the parametric bootstrap
10.5
10.6 notes and details

in   uence functions and robust estimation

bootstrap con   dence intervals

11
11.1 neyman   s construction for one-parameter problems
11.2 the percentile method
11.3 bias-corrected con   dence intervals
11.4 second-order accuracy
11.5 bootstrap-t intervals
11.6 objective bayes intervals and the con   dence distribution
11.7 notes and details

cross-validation and cp estimates of prediction error

12
12.1 prediction rules
12.2 cross-validation
12.3 covariance penalties
12.4 training, validation, and ephemeral predictors
12.5 notes and details

objective bayes id136 and mcmc

13
13.1 objective prior distributions
13.2 conjugate prior distributions
13.3 model selection and the bayesian information criterion
13.4 id150 and mcmc
13.5 example: modeling population admixture
13.6 notes and details

14

postwar statistical id136 and methodology

part iii twenty-first-century topics

large-scale hypothesis testing and fdrs

15
15.1 large-scale testing
15.2 false-discovery rates
15.3 empirical bayes large-scale testing
15.4 local false-discovery rates
15.5 choice of the null distribution
15.6 relevance
15.7 notes and details

16

sparse modeling and the lasso

xi

169
174
177

181
181
185
190
192
195
198
204

208
208
213
218
227
230

233
234
237
243
251
256
261

264

269

271
272
275
278
282
286
290
294

298

xii

contents

16.1 forward stepwise regression
16.2 the lasso
16.3 fitting lasso models
16.4 least-angle regression
16.5 fitting generalized lasso models
16.6 post-selection id136 for the lasso
16.7 connections and extensions
16.8 notes and details

id79s and boosting

17
17.1 id79s
17.2 boosting with squared-error loss
17.3 gradient boosting
17.4 adaboost: the original boosting algorithm
17.5 connections and extensions
17.6 notes and details

neural networks and deep learning

18
18.1 neural networks and the handwritten digit problem
18.2 fitting a neural network
18.3 autoencoders
18.4 deep learning
18.5 learning a deep network
18.6 notes and details

support-vector machines and kernel methods

19
19.1 optimal separating hyperplane
19.2 soft-margin classi   er
19.3 id166 criterion as loss plus penalty
19.4 computations and the kernel trick
19.5 function fitting using kernels
19.6 example: string kernels for protein classi   cation
19.7 id166s: concluding remarks
19.8 kernel smoothing and local regression
19.9 notes and details

id136 after model selection
20
20.1 simultaneous con   dence intervals
20.2 accuracy after model selection
20.3 selection bias
20.4 combined bayes   frequentist estimation
20.5 notes and details

299
303
308
309
313
317
319
321

324
325
333
338
341
345
347

351
353
356
362
364
368
371

375
376
378
379
381
384
385
387
387
390

394
395
402
408
412
417

contents

empirical bayes estimation strategies

21
21.1 bayes deconvolution
21.2 g-modeling and estimation
21.3 likelihood, id173, and accuracy
21.4 two examples
21.5 generalized linear mixed models
21.6 deconvolution and f -modeling
21.7 notes and details

epilogue
references
author index
subject index

xiii

421
421
424
427
432
437
440
444

446
453
463
467

xiv

preface

statistical id136 is an unusually wide-ranging discipline, located as it is
at the triple-point of mathematics, empirical science, and philosophy. the
discipline can be said to date from 1763, with the publication of bayes   
rule (representing the philosophical side of the subject; the rule   s early ad-
vocates considered it an argument for the existence of god). the most re-
cent quarter of this 250-year history   from the 1950s to the present   is
the    computer age    of our book   s title, the time when computation, the tra-
ditional bottleneck of statistical applications, became faster and easier by a
factor of a million.

the book is an examination of how statistics has evolved over the past
sixty years   an aerial view of a vast subject, but seen from the height of a
small plane, not a jetliner or satellite. the individual chapters take up a se-
ries of in   uential topics   generalized linear models, survival analysis, the
jackknife and bootstrap, false-discovery rates, empirical bayes, mcmc,
neural nets, and a dozen more   describing for each the key methodologi-
cal developments and their inferential justi   cation.

needless to say, the role of electronic computation is central to our
story. this doesn   t mean that every advance was computer-related. a land
bridge had opened to a new continent but not all were eager to cross.
topics such as empirical bayes and james   stein estimation could have
emerged just as well under the constraints of mechanical computation. oth-
ers, like the bootstrap and proportional hazards, were pureborn children of
the computer age. almost all topics in twenty-   rst-century statistics are
now computer-dependent, but it will take our small plane a while to reach
the new millennium.

dictionary de   nitions of statistical id136 tend to equate it with the
entire discipline. this has become less satisfactory in the    big data    era of
immense computer-based processing algorithms. here we will attempt, not
always consistently, to separate the two aspects of the statistical enterprise:
algorithmic developments aimed at speci   c problem areas, for instance

xv

xvi

preface

id79s for prediction, as distinct from the inferential arguments
offered in their support.

very broadly speaking, algorithms are what statisticians do while infer-
ence says why they do them. a particularly energetic brand of the statisti-
cal enterprise has    ourished in the new century, data science, emphasizing
algorithmic thinking rather than its inferential justi   cation. the later chap-
ters of our book, where large-scale prediction algorithms such as boosting
and deep learning are examined, illustrate the data-science point of view.
(see the epilogue for a little more on the sometimes fraught statistics/data
science marriage.)

there are no such subjects as biological id136 or astronomical in-
ference or geological id136. why do we need    statistical id136   ?
the answer is simple: the natural sciences have nature to judge the ac-
curacy of their ideas. statistics operates one step back from nature, most
often interpreting the observations of natural scientists. without nature to
serve as a disinterested referee, we need a system of mathematical logic for
guidance and correction. statistical id136 is that system, distilled from
two and a half centuries of data-analytic experience.

the book proceeds historically, in three parts. the great themes of clas-
sical id136, bayesian, frequentist, and fisherian, reviewed in part i,
were set in place before the age of electronic computation. modern practice
has vastly extended their reach without changing the basic outlines. (an
analogy with classical and modern literature might be made.) part ii con-
cerns early computer-age developments, from the 1950s through the 1990s.
as a transitional period, this is the time when it is easiest to see the ef-
fects, or noneffects, of fast computation on the progress of statistical meth-
odology, both in its theory and practice. part iii,    twenty-first-century
topics,    brings the story up to the present. ours is a time of enormously
ambitious algorithms (   machine learning    being the somewhat disquieting
catchphrase). their justi   cation is the ongoing task of modern statistical
id136.

neither a catalog nor an encyclopedia, the book   s topics were chosen as
apt illustrations of the interplay between computational methodology and
inferential theory. some missing topics that might have served just as well
include time series, general estimating equations, causal id136, graph-
ical models, and experimental design. in any case, there is no implication
that the topics presented here are the only ones worthy of discussion.

also underrepresented are asymptotics and decision theory, the    math
stat    side of the    eld. our intention was to maintain a technical level of
discussion appropriate to masters   -level statisticians or    rst-year phd stu-

preface

xvii

dents. inevitably, some of the presentation drifts into more dif   cult waters,
more from the nature of the statistical ideas than the mathematics. readers
who    nd our aerial view circling too long over some topic shouldn   t hesi-
tate to move ahead in the book. for the most part, the chapters can be read
independently of each other (though there is a connecting overall theme).
this comment applies especially to nonstatisticians who have picked up
the book because of interest in some particular topic, say survival analysis
or boosting.

useful disciplines that serve a wide variety of demanding clients run
the risk of losing their center. statistics has managed, for the most part,
to maintain its philosophical cohesion despite a rising curve of outside de-
mand. the center of the    eld has in fact moved in the past sixty years, from
its traditional home in mathematics and logic toward a more computational
focus. our book traces that movement on a topic-by-topic basis. an answer
to the intriguing question    what happens next?    won   t be attempted here,
except for a few words in the epilogue, where the rise of data science is
discussed.

acknowledgments

we are indebted to cindy kirby for her skillful work in the preparation of
this book, and galit shmueli for her helpful comments on an earlier draft.
at cambridge university press, a huge thank you to steven holt for his ex-
cellent copy editing, clare dennison for guiding us through the production
phase, and to diana gillooly, our editor, for her unfailing support.

bradley efron
trevor hastie
department of statistics
stanford university
may 2016

xviii

notation

xix

throughout the book the numbered    sign indicates a technical note or
reference element which is elaborated on at the end of the chapter. there,
next to the number, the page number of the referenced location is given in
parenthesis. for example, lowess in the notes on page 11 was referenced
via a   1 on page 6. matrices such as     are represented in bold font, as
are certain vectors such as y, a data vector with n elements. most other
vectors, such as coef   cient vectors, are typically not bold. we use a dark
green typewriter font to indicate data set names such as prostate,
variable names such as prog from data sets, and r commands such as
glmnet or locfdr. no bibliographic references are given in the body of
the text; important references are given in the endnotes of each chapter.

part i

classic statistical id136

1

algorithms and id136

statistics is the science of learning from experience, particularly experi-
ence that arrives a little bit at a time: the successes and failures of a new
experimental drug, the uncertain measurements of an asteroid   s path to-
ward earth. it may seem surprising that any one theory can cover such an
amorphous target as    learning from experience.    in fact, there are two main
statistical theories, bayesianism and frequentism, whose connections and
disagreements animate many of the succeeding chapters.

first, however, we want to discuss a less philosophical, more operational
division of labor that applies to both theories: between the algorithmic and
inferential aspects of statistical analysis. the distinction begins with the
most basic, and most popular, statistical method, averaging. suppose we
have observed numbers x1; x2; : : : ; xn applying to some phenomenon of
interest, perhaps the automobile accident rates in the n d 50 states. the
mean

xi =n

(1.1)

nx d nx

id1

summarizes the results in a single number.

how accurate is that number? the textbook answer is given in terms of

the standard error,bse d

.xi (cid:0) nx/2   .n.n (cid:0) 1//

#1=2

" nx

id1

:

(1.2)

here averaging (1.1) is the algorithm, while the standard error provides an
id136 of the algorithm   s accuracy. it is a surprising, and crucial, aspect
of statistical theory that the same data that supplies an estimate can also
assess its accuracy.1

1    id136    concerns more than accuracy: speaking broadly, algorithms say what the

statistician does while id136 says why he or she does it.

3

4

of course,bse (1.2) is itself an algorithm, which could be (and is) subject

algorithms and id136

to further inferential analysis concerning its accuracy. the point is that
the algorithm comes    rst and the id136 follows at a second level of
statistical consideration. in practice this means that algorithmic invention
is a more free-wheeling and adventurous enterprise, with id136 playing
catch-up as it strives to assess the accuracy, good or bad, of some hot new
algorithmic methodology.

if the id136/algorithm race is a tortoise-and-hare affair, then modern
electronic computation has bred a bionic hare. there are two effects at work
here: computer-based technology allows scientists to collect enormous data
sets, orders of magnitude larger than those that classic statistical theory
was designed to deal with; huge data demands new methodology, and the
demand is being met by a burst of innovative computer-based statistical
algorithms. when one reads of    big data    in the news, it is usually these
algorithms playing the starring roles.

our book   s title, computer age statistical id136, emphasizes the tor-
toise   s side of the story. the past few decades have been a golden age of
statistical methodology. it hasn   t been, quite, a golden age for statistical
id136, but it has not been a dark age either. the ef   orescence of am-
bitious new algorithms has forced an evolution (though not a revolution)
in id136, the theories by which statisticians choose among competing
methods. the book traces the interplay between methodology and infer-
ence as it has developed since the 1950s, the beginning of our discipline   s
computer age. as a preview, we end this chapter with two examples illus-
trating the transition from classic to computer-age practice.

1.1 a regression example

figure 1.1 concerns a study of kidney function. data points .xi ; yi / have
been observed for n d 157 healthy volunteers, with xi the ith volunteer   s
age in years, and yi a composite measure    tot    of overall function. kid-
ney function generally declines with age, as evident in the downward scat-
ter of the points. the rate of decline is an important question in kidney
transplantation: in the past, potential donors past age 60 were prohibited,
though, given a shortage of donors, this is no longer enforced.

the solid line in figure 1.1 is a id75

y d o

  0 c o

  1x

(1.3)

   t to the data by least squares, that is by minimizing the sum of squared

1.1 a regression example

5

figure 1.1 kidney    tness tot vs age for 157 volunteers. the
line is a id75    t, showing   2 standard errors at
selected values of age.

deviations

nx
.yi (cid:0)   0 (cid:0)   1xi /2

id1

(1.4)

over all choices of .  0;   1/. the least squares algorithm, which dates back
to gauss and legendre in the early 1800s, gives o
  1 d
(cid:0)0:079 as the least squares estimates. we can read off of the    tted line
an estimated value of kidney    tness for any chosen age. the top line of
table 1.1 shows estimate 1.29 at age 20, down to (cid:0)3:43 at age 80.

  0 d 2:86 and o

how accurate are these estimates? this is where id136 comes in:
an extended version of formula (1.2), also going back to the 1800s, pro-
vides the standard errors, shown in line 2 of the table. the vertical bars in
figure 1.1 are    two standard errors, giving them about 95% chance of
containing the true expected value of tot at each age.
that 95% coverage depends on the validity of the id75 model
(1.3). we might instead try a quadratic regression y d o
  2x2,
or a cubic, etc., all of this being well within the reach of pre-computer
statistical theory.

  1x c o

  0 c o

*************************************************************************************************************************************************************2030405060708090   6   4   2024agetot6

algorithms and id136

table 1.1 regression analysis of the kidney data; (1) id75
estimates; (2) their standard errors; (3) lowess estimates; (4) their
bootstrap standard errors.

age

1. id75
2. std error

3. lowess
4. bootstrap std error

20

1.29
.21

1.66
.71

60

70

50

40

30
80
.50 (cid:0).28 (cid:0)1.07 (cid:0)1.86 (cid:0)2.64 (cid:0)3.43
.15
.42
.65 (cid:0).59 (cid:0)1.27 (cid:0)1.91 (cid:0)2.68 (cid:0)3.50
.70
.23

.15

.31

.19

.26

.34

.32

.37

.47

figure 1.2 local polynomial lowess(x,y,1/3)    t to the
kidney-   tness data, with   2 bootstrap standard deviations.

  1

a modern computer-based algorithm lowess produced the somewhat
bumpy regression curve in figure 1.2. the lowess    2 algorithm moves
its attention along the x-axis,    tting local polynomial curves of differing
degrees to nearby .x; y/ points. (the 1/3 in the call3 lowess(x,y,1/3)

2 here and throughout the book, the numbered    sign indicates a technical note or

reference element which is elaborated on at the end of the chapter.

3 here and in all our examples we are employing the language r, itself one of the key

developments in computer-based statistical methodology.

*************************************************************************************************************************************************************2030405060708090   6   4   2024agetot1.1 a regression example

7

determines the de   nition of local.) repeated passes over the x-axis re   ne
the    t, reducing the effects of occasional anomalous points. the    tted curve
in figure 1.2 is nearly linear at the right, but more complicated at the left
where points are more densely packed. it is    at between ages 25 and 35,
a potentially important difference from the uniform decline portrayed in
figure 1.1.

there is no formula such as (1.2) to infer the accuracy of the lowess
curve. instead, a computer-intensive inferential engine, the bootstrap, was
used to calculate the error bars in figure 1.2. a bootstrap data set is pro-
duced by resampling 157 pairs .xi ; yi / from the original 157 with replace-
ment, so perhaps .x1; y1/ might show up twice in the bootstrap sample,
.x2; y2/ might be missing, .x3; y3/ present once, etc. applying lowess
to the bootstrap sample generates a bootstrap replication of the original
calculation.

figure 1.3 25 bootstrap replications of lowess(x,y,1/3).

figure 1.3 shows the    rst 25 (of 250) bootstrap lowess replications
bouncing around the original curve from figure 1.2. the variability of the
replications at any one age, the bootstrap standard deviation, determined
the original curve   s accuracy. how and why the bootstrap works is dis-
cussed in chapter 10. it has the great virtue of assessing estimation accu-

2030405060708090   4   2024agetot8

algorithms and id136

racy for any algorithm, no matter how complicated. the price is a hundred-
or thousand-fold increase in computation, unthinkable in 1930, but routine
now.

the bottom two lines of table 1.1 show the lowess estimates and
their standard errors. we have paid a price for the increased    exibility of
lowess, its standard errors roughly doubling those for id75.

1.2 hypothesis testing

our second example concerns the march of methodology and id136
for hypothesis testing rather than estimation: 72 leukemia patients, 47 with
all (acute lymphoblastic leukemia) and 25 with aml (acute myeloid leuk-
emia, a worse prognosis) have each had genetic activity measured for a
panel of 7,128 genes. the histograms in figure 1.4 compare the genetic
activities in the two groups for gene 136.

figure 1.4 scores for gene 136, leukemia data. top all
(n d 47), bottom aml (n d 25). a two-sample t-statistic d 3:01
with p-value d :0036.

the aml group appears to show greater activity, the mean values being

all d 0:752 and aml d 0:950:

(1.5)

 all scores     mean .752  0.20.40.60.81.01.21.41.60246810aml scores     mean .950 0.20.40.60.81.01.21.41.602468101.2 hypothesis testing

9

is the perceived difference genuine, or perhaps, as people like to say,    a
statistical    uke   ? the classic answer to this question is via a two-sample
t-statistic,

t d aml (cid:0) allbsd

(1.6)

;

wherebsd is an estimate of the numerator   s standard deviation.4
dividing by bsd allows us (under gaussian assumptions discussed in
chapter 5) to compare the observed value of t with a standard    null    dis-
tribution, in this case a student   s t distribution with 70 degrees of freedom.
we obtain t d 3:01 from (1.6), which would classically be considered very
strong evidence that the apparent difference (1.5) is genuine; in standard
terminology,    with two-sided signi   cance level 0.0036.   

a small signi   cance level (or    p-value   ) is a statement of statistical sur-
prise: something very unusual has happened if in fact there is no difference
in gene 136 expression levels between all and aml patients. we are less
surprised by t d 3:01 if gene 136 is just one candidate out of thousands
that might have produced    interesting    results.
that is the case here. figure 1.5 shows the histogram of the two-sample
t-statistics for the panel of 7128 genes. now t d 3:01 looks less unusual;
400 other genes have t exceeding 3.01, about 5.6% of them.

this doesn   t mean that gene 136 is    signi   cant at the 0.056 level.    there

are two powerful complicating factors:

1 large numbers of candidates, 7128 here, will produce some large t-
values even if there is really no difference in genetic expression between
all and aml patients.

2 the histogram implies that in this study there is something wrong with
the theoretical null distribution (   student   s t with 70 degrees of free-
dom   ), the smooth curve in figure 1.5. it is much too narrow at the cen-
ter, where presumably most of the genes are reporting non-signi   cant
results.

we will see in chapter 15 that a low false-discovery rate, i.e., a low
chance of crying wolf over an innocuous gene, requires t exceeding 6.16
in the all/aml study. only 47 of the 7128 genes make the cut. false-
discovery-rate theory is an impressive advance in statistical id136, in-
corporating bayesian, frequentist, and empirical bayesian (chapter 6) el-

4 formally, a standard error is the standard deviation of a summary statistic, andbsd might
better be calledbse, but we will follow the distinction less than punctiliously here.

10

algorithms and id136

figure 1.5 two-sample t-statistics for 7128 genes, leukemia
data. the smooth curve is the theoretical null density for the
t-statistic.

ements. it was a necessary advance in a scienti   c world where computer-
based technology routinely presents thousands of comparisons to be eval-
uated at once.

there is one more thing to say about the algorithm/id136 statistical
cycle. important new algorithms often arise outside the world of profes-
sional statisticians: neural nets, support vector machines, and boosting are
three famous examples. none of this is surprising. new sources of data,
satellite imagery for example, or medical microarrays, inspire novel meth-
odology from the observing scientists. the early literature tends toward the
enthusiastic, with claims of enormous applicability and power.

in the second phase, statisticians try to locate the new metholodogy
within the framework of statistical theory. in other words, they carry out
the statistical id136 part of the cycle, placing the new methodology
within the known bayesian and frequentist limits of performance. (boost-
ing offers a nice example, chapter 17.) this is a healthy chain of events,
good both for the hybrid vigor of the statistics profession and for the further
progress of algorithmic technology.

 t statisticsfrequency   10   5051001002003004005006007003.011.3 notes

1.3 notes

11

legendre published the least squares algorithm in 1805, causing gauss
to state that he had been using the method in astronomical orbit-   tting
since 1795. given gauss    astonishing production of major mathematical
advances, this says something about the importance attached to the least
squares idea. chapter 8 includes its usual algebraic formulation, as well as
gauss    formula for the standard errors, line 2 of table 1.1.

our division between algorithms and id136 brings to mind tukey   s
exploratory/con   rmatory system. however the current algorithmic world
is often bolder in its claims than the word    exploratory    implies, while to
our minds    id136    conveys something richer than mere con   rmation.
  1 [p. 6] lowess was devised by william cleveland (cleveland, 1981) and
is available in the r statistical computing language. it is applied to the
kidney data in efron (2004). the kidney data originated in the nephrology
laboratory of dr. brian myers, stanford university, and is available from
this book   s web site.

2

frequentist id136

before the computer age there was the calculator age, and before    big data   
there were small data sets, often a few hundred numbers or fewer, labori-
ously collected by individual scientists working under restrictive experi-
mental constraints. precious data calls for maximally ef   cient statistical
analysis. a remarkably effective theory, feasible for execution on mechan-
ical desk calculators, was developed beginning in 1900 by pearson, fisher,
neyman, hotelling, and others, and grew to dominate twentieth-century
statistical practice. the theory, now referred to as classical, relied almost
entirely on frequentist inferential ideas. this chapter sketches a quick and
simpli   ed picture of frequentist id136, particularly as employed in clas-
sical applications.

we begin with another example from dr. myers    nephrology laboratory:
211 kidney patients have had their glomerular    ltration rates measured,
with the results shown in figure 2.1; gfr is an important indicator of kid-
ney function, with low values suggesting trouble. (it is a key component of
andbse d 0:95, typically reported as
tot in figure 1.1.) the mean and standard error (1.1)   (1.2) are nx d 54:25
(2.1)
  0:95 denotes a frequentist id136 for the accuracy of the estimate nx d
54:25, and suggests that we shouldn   t take the    .25    very seriously, even
the    4    being open to doubt. where the id136 comes from and what
exactly it means remains to be said.

54:25    0:95i

statistical id136 usually begins with the assumption that some prob-
ability model has produced the observed data x, in our case the vector of
n d 211 gfr measurements x d .x1; x2; : : : ; xn/. let x d .x1; x2; : : : ;
xn/ indicate n independent draws from a id203 distribution f , writ-
ten

(2.2)

f ! x ;

12

frequentist id136

13

figure 2.1 glomerular    ltration rates for 211 kidney patients;
mean 54.25, standard error .95.

f being the underlying distribution of possible gfr scores here. a realiza-
tion x d x of (2.2) has been observed, and the statistician wishes to infer
some property of the unknown distribution f .

suppose the desired property is the expectation of a single random draw

x from f , denoted

(2.3)

(which also equals the expectation of the average nx dp xi =n of random
  d ef fxg
vector (2.2)1). the obvious estimate of   is o
  d nx, the sample average. if
n were enormous, say 1010, we would expect o
  to nearly equal  , but oth-
erwise there is room for error. how much error is the inferential question.
the estimate o
  is calculated from x according to some known algorithm,
say
t .x/ in our example being the averaging function nx d p xi =n; o

  is a
1 the fact that eff nxg equals effxg is a crucial, though easily proved, probabilistic

o
  d t .x/;

(2.4)

result.

 gfrfrequency2040608010005101520253014

realization of

frequentist id136

o    d t .x /;

(2.5)
the output of t .(cid:1)/ applied to a theoretical sample x from f (2.2). we have
chosen t .x /, we hope, to make o    a good estimator of  , the desired prop-
erty of f .
we can now give a    rst de   nition of frequentist id136: the accu-
racy of an observed estimate o
  d t .x/ is the probabilistic accuracy of
o    d t .x / as an estimator of  . this may seem more a tautology than a
de   nition, but it contains a powerful idea: o
  is just a single number but o   
takes on a range of values whose spread can de   ne measures of accuracy.
bias and variance are familiar examples of frequentist id136. de   ne
(cid:22) to be the expectation of o    d t .x / under model (2.2),

(cid:22) d ef f o   g:

(2.6)

  of parameter   are

n
. o    (cid:0) (cid:22)/2o
then the bias and variance attributed to estimate o

bias d (cid:22) (cid:0)  

(2.7)
again, what keeps this from tautology is the attribution to the single num-
ber o
  of the probabilistic properties of o    following from model (2.2). if
all of this seems too obvious to worry about, the bayesian criticisms of
chapter 3 may come as a shock.

var d ef

and

:

frequentism is often de   ned with respect to    an in   nite sequence of
future trials.    we imagine hypothetical data sets x .1/; x .2/; x .3/; : : : gen-
erated by the same mechanism as x providing corresponding values o   .1/;
o   .2/, o   .3/; : : : as in (2.5). the frequentist principle is then to attribute for
o
  the accuracy properties of the ensemble of o    values.2 if the o   s have
empirical variance of, say, 0.04, then o
0:2 d p
  is claimed to have standard error
0:04, etc. this amounts to a more picturesque restatement of the

previous de   nition.

2.1 frequentism in practice

our working de   nition of frequentism is that the probabilistic properties
of a procedure of interest are derived and then applied verbatim to the
procedure   s output for the observed data. this has an obvious defect: it
requires calculating the properties of estimators o    d t .x / obtained from

2 in essence, frequentists ask themselves    what would i see if i reran the same situation

again (and again and again. . . )?   

2.1 frequentism in practice

15

the true distribution f , even though f is unknown. practical frequentism
uses a collection of more or less ingenious devices to circumvent the defect.
1. the plug-in principle. a simple formula relates the standard error of

nx dp xi =n to varf .x /, the variance of a single x drawn from f ,

se(cid:0) nx(cid:1) d   varf .x /=n  1=2:
cvarf dx

.xi (cid:0) nx/2 =.n (cid:0) 1/:

(2.8)
but having observed x d .x1; x2; : : : ; xn/ we can estimate varf .x / with-
out bias by
plugging formula (2.9) into (2.8) givesbse (1.2), the usual estimate for the
standard error of an average nx. in other words, the frequentist accuracy
estimate for nx is itself estimated from the observed data.3
  d t .x/ more complicated
2. taylor-series approximations.
than nx can often be related back to the plug-in formula by local linear
approximations, sometimes known as the    delta method.       for example,   1
o
  d nx2 has d
with bse as in (1.2). large sample calculations, as sample size n goes to

o
  =d nx d 2nx. thinking of 2nx as a constant gives

se(cid:0)nx2(cid:1) :d 2jnxjbse;

statistics o

(2.10)

(2.9)

in   nity, validate the delta method which, fortunately, often performs well
in small samples.
3. parametric families and maximum likelihood theory.
theoretical ex-
pressions for the standard error of a maximum likelihood estimate (id113)
are discussed in chapters 4 and 5, in the context of parametric families
of distributions. these combine fisherian theory, taylor-series approxima-
tions, and the plug-in principle in an easy-to-apply package.
4. simulation and the bootstrap. modern computation has opened up the
possibility of numerically implementing the    in   nite sequence of future
trials    de   nition, except for the in   nite part. an estimate of of f , perhaps
the id113, is found, and values o   .k/ d t .x .k// simulated from of for k d
1; 2; : : : ; b, say b d 1000. the empirical standard deviation of the o   s is
then the frequentist estimate of standard error for o
  d t .x/, and similarly
with other measures of accuracy.

this is a good description of the bootstrap, chapter 10. (notice that

3 the most familiar example is the observed proportion p of heads in n    ips of a coin
having true id203 (cid:25): the actual standard error is   (cid:25).1 (cid:0) (cid:25)/=n  1=2 but we can
only report the plug-in estimate   p.1 (cid:0) p/=n  1=2.

16

frequentist id136

table 2.1 three estimates of location for the gfr data, and their
estimated standard errors; last two standard errors using the bootstrap,
b d 1000.

estimate

standard error

mean
25% winsorized mean
median

54.25
52.61
52.24

.95
.78
.87

of for f , comes    rst rather than at the end of
here the plugging-in, of
the process.) the classical methods 1   3 above are restricted to estimates
o
  d t .x/ that are smoothly de   ned functions of various sample means.
simulation calculations remove this restriction. table 2.1 shows three    lo-
cation    estimates for the gfr data, the mean, the 25% winsorized mean,4
and the median, along with their standard errors, the last two computed
by the bootstrap. a happy feature of computer-age statistical id136 is
the tremendous expansion of useful and usable statistics t .x/ in the statis-
tician   s working toolbox, the lowess algorithm in figures 1.2 and 1.3
providing a nice example.
5. pivotal statistics. a pivotal statistic o
  d t .x/ is one whose distri-
bution does not depend upon the underlying id203 distribution f . in
such a case the theoretical distribution of o    d t .x / applies exactly to o
 ,
removing the need for devices 1   4 above. the classic example concerns
student   s two-sample t-test.

in a two-sample problem the statistician observes two sets of numbers,

x1 d .x11; x12; : : : ; x1n1 / x2 d .x21; x22; : : : ; x2n2 /;

(2.11)

and wishes to test the null hypothesis that they come from the same dis-
tribution (as opposed to, say, the second set tending toward larger values
than the    rst). it is assumed that the distribution f1 for x1 is normal, or
gaussian,

ind(cid:24)

x1i

n .(cid:22)1; (cid:27) 2/;

i d 1; 2; : : : ; n1;

(2.12)

the notation indicating n1 independent draws from a normal distribution5

4 all observations below the 25th percentile of the 211 observations are moved up to that
point, similarly those above the 75th percentile are moved down, and    nally the mean is
taken.

(cid:0)1=2 expf(cid:0)0:5 (cid:1) .x (cid:0) (cid:22)1/2=(cid:27) 2g.

5 each draw having id203 density .2(cid:25)(cid:27) 2/

2.1 frequentism in practice

with expectation (cid:22)1 and variance (cid:27) 2. likewise

ind(cid:24)

n .(cid:22)2; (cid:27) 2/
we wish to test the null hypothesis

x2i

i d 1; 2; : : : ; n2:

17

(2.13)

(2.14)
the obvious test statistic o
  d nx2 (cid:0) nx1, the difference of the means, has
distribution
o
  (cid:24)

c 1

(2.15)

h0 w (cid:22)1 d (cid:22)2:
(cid:16)
0; (cid:27) 2(cid:16) 1
" n1x
.x1i (cid:0) nx1/2 c n2x

.x2i (cid:0) nx2/2

n

n1

  
#,

n2

under h0. we could plug in the unbiased estimate of (cid:27) 2,

.n1 c n2 (cid:0) 2/;

(2.16)

o(cid:27) 2 d

1

1

but student provided a more elegant solution: instead of o
 1=2
using the two-sample t-statistic

wherebsd d o(cid:27)

(cid:16) 1

c 1

;

:

n1

n2

t d nx2 (cid:0) nx1bsd

 , we test h0

(2.17)

under h0, t is pivotal, having the same distribution (student   s t distribu-
tion with n1 c n2 (cid:0) 2 degrees of freedom), no matter what the value of the
   nuisance parameter    (cid:27).
for n1 c n2 (cid:0) 2 d 70, as in the leukemia example (1.5)   (1.6), student   s
distribution gives

prh0

(2.18)
the hypothesis test that rejects h0 if jtj exceeds 1.99 has id203 ex-
actly 0.05 of mistaken rejection. similarly,

f(cid:0)1:99   t   1:99g d 0:95:
nx2 (cid:0) nx1    1:99 (cid:1)bsd

(2.19)
is an exact 0.95 con   dence interval for the difference (cid:22)2 (cid:0) (cid:22)1, covering
the true value in 95% of repetitions of id203 model (2.12)   (2.13).6

6 occasionally, one sees frequentism de   ned in careerist terms, e.g.,    a statistician who
always rejects null hypotheses at the 95% level will over time make only 5% errors of
the    rst kind.    this is not a comforting criterion for the statistician   s clients, who are
interested in their own situations, not everyone else   s. here we are only assuming
hypothetical repetitions of the speci   c problem at hand.

18

frequentist id136

what might be called the strong de   nition of frequentism insists on exact
frequentist correctness under experimental repetitions. pivotality, unfortu-
nately, is unavailable in most statistical situations. our looser de   nition
of frequentism, supplemented by devices such as those above,7 presents a
more realistic picture of actual frequentist practice.

2.2 frequentist optimality

the popularity of frequentist methods re   ects their relatively modest math-
ematical modeling assumptions: only a id203 model f (more exactly
a family of probabilities, chapter 3) and an algorithm of choice t .x/. this
   exibility is also a defect in that the principle of frequentist correctness
doesn   t help with the choice of algorithm. should we use the sample mean
to estimate the location of the gfr distribution? maybe the 25% win-
sorized mean would be better, as table 2.1 suggests.

the years 1920   1935 saw the development of two key results on fre-
quentist optimality, that is,    nding the best choice of t .x/ given model f .
the    rst of these was fisher   s theory of id113
and the fisher information bound: in parametric id203 models of the
type discussed in chapter 4, the id113 is the optimum estimate in terms of
minimum (asymptotic) standard error.

in the same spirit, the neyman   pearson lemma provides an optimum
hypothesis-testing algorithm. this is perhaps the most elegant of frequen-
tist constructions. in its simplest formulation, the np lemma assumes we
are trying to decide between two possible id203 density functions for
the observed data x, a null hypothesis density f0.x/ and an alternative
density f1.x/. a testing rule t .x/ says which choice, 0 or 1, we will make
having observed data x. any such rule has two associated frequentist error
probabilities: choosing f1 when actually f0 generated x, and vice versa,

   d prf0
   d prf1
let l.x/ be the likelihood ratio,

ft .x/ d 1g ;
ft .x/ d 0g :

l.x/ d f1.x/=f0.x/

(2.20)

(2.21)

7 the list of devices is not complete. asymptotic calculations play a major role, as do

more elaborate combinations of pivotality and the plug-in principle; see the discussion
of approximate bootstrap con   dence intervals in chapter 11.

and de   ne the testing rule tc.x/ by

2.2 frequentist optimality

(
1 if log l.x/ (cid:21) c
0 if log l.x/ < c:

tc.x/ d

19

(2.22)

there is one such rule for each choice of the cutoff c. the neyman   pearson
lemma says that only rules of form (2.22) can be optimum; for any other
rule t .x/ there will be a rule tc.x/ having smaller errors of both kinds,8

  c <    and   c <   :

(2.23)

figure 2.2 neyman   pearson alpha   beta curve for f0 (cid:24)
f1 (cid:24)
cutoffs c d :8; :6; :4; : : : ;(cid:0):4.

n .0; 1/,
n .:5; 1/, and sample size n d 10. red dots correspond to

figure 2.2 graphs .  c;   c/ as a function of the cutoff c, for the case
where x d .x1; x2; : : : ; x10/ is obtained by independent sampling from a
normal distribution, n .0; 1/ for f0 versus n .0:5; 1/ for f1. the np lemma
says that any rule not of form (2.22) must have its .  ;   / point lying above
the curve.

8 here we are ignoring some minor de   nitional dif   culties that can occur if f0 and f1 are

discrete.

0.00.20.40.60.81.00.00.20.40.60.81.0ablllllllc = .4a  = .10,  b = .3820

frequentist id136

frequentist optimality theory, both for estimation and for testing, an-
chored statistical practice in the twentieth century. the larger data sets and
more complicated inferential questions of the current era have strained the
capabilities of that theory. computer-age statistical id136, as we will
see, often displays an unsettling ad hoc character. perhaps some contem-
porary fishers and neymans will provide us with a more capacious opti-
mality theory equal to the challenges of current practice, but for now that
is only a hope.

frequentism cannot claim to be a seaid113ss philosophy of statistical in-
ference. paradoxes and contradictions abound within its borders, as will
be shown in the next chapter. that being said, frequentist methods have
a natural appeal to working scientists, an impressive history of success-
ful application, and, as our list of    ve    devices    suggests, the capacity to
encourage clever methodology. the story that follows is not one of aban-
donment of frequentist thinking, but rather a broadening of connections
with other methods.

2.3 notes and details

the name    frequentism    seems to have been suggested by neyman as a
statistical analogue of richard von mises    frequentist theory of id203,
the connection being made explicit in his 1977 paper,    frequentist prob-
ability and frequentist statistics.       behaviorism    might have been a more
descriptive name9 since the theory revolves around the long-run behavior
of statistics t .x/, but in any case    frequentism    has stuck, replacing the
older (sometimes disparaging) term    objectivism.    neyman   s attempt at a
complete frequentist theory of statistical id136,    inductive behavior,   
is not much quoted today, but can claim to be an important in   uence on
wald   s development of decision theory.

r. a. fisher   s work on id113 is featured in
chapter 4. fisher, arguably the founder of frequentist optimality theory,
was not a pure frequentist himself, as discussed in chapter 4 and efron
(1998),    r. a. fisher in the 21st century.    (now that we are well into the
twenty-   rst century, the author   s talents as a prognosticator can be frequen-
tistically evaluated.)

  1 [p. 15] delta method. the delta method uses a    rst-order taylor series to
 . suppose o
o
 
  / (cid:25) s.  / c

o
  / of a statistic o
approximate the variance of a function s.
has mean/variance . ; (cid:27) 2/, and consider the approximation s.

9 that name is already spoken for in the psychology literature.

o
  (cid:0)   /. hence varfs.
0
s
and use an estimate for (cid:27) 2.

.  /.

2.3 notes and details
o
  /g (cid:25) js

.  /j2(cid:27) 2. we typically plug-in o

0

  for  ,

21

3

bayesian id136

the human mind is an id136 machine:    it   s getting windy, the sky is
darkening, i   d better bring my umbrella with me.    unfortunately, it   s not a
very dependable machine, especially when weighing complicated choices
against past experience. bayes    theorem is a surprisingly simple mathemat-
ical guide to accurate id136. the theorem (or    rule   ), now 250 years
old, marked the beginning of statistical id136 as a serious scienti   c sub-
ject. it has waxed and waned in in   uence over the centuries, now waxing
again in the service of computer-age applications.

bayesian id136, if not directly opposed to frequentism, is at least or-
thogonal. it reveals some worrisome    aws in the frequentist point of view,
while at the same time exposing itself to the criticism of dangerous overuse.
the struggle to combine the virtues of the two philosophies has become
more acute in an era of massively complicated data sets. much of what
follows in succeeding chapters concerns this struggle. here we will review
some basic bayesian ideas and the ways they impinge on frequentism.

the fundamental unit of statistical id136 both for frequentists and

for bayesians is a family of id203 densities

d  f(cid:22).x/i x 2

x ; (cid:22) 2 (cid:127)(cid:9)i

f

(3.1)

x, the observed data, is a point1 in the sample space x , while the unob-
served parameter (cid:22) is a point in the parameter space (cid:127). the statistician
observes x from f(cid:22).x/, and infers the value of (cid:22).

perhaps the most familiar case is the normal family

f(cid:22).x/ d 1p

2(cid:25)

(cid:0) 1
2 .x(cid:0)(cid:22)/2

e

(3.2)

1 both x and (cid:22) may be scalars, vectors, or more complicated objects. other names for the

generic    x    and    (cid:22)    occur in speci   c situations, for instance x for x in chapter 2. we
will also call f a    family of id203 distributions.   

22

bayesian id136

23

(more exactly, the one-dimensional normal translation family2 with vari-

ance 1), with both x and (cid:127) equaling r1, the entire real line .(cid:0)1;1/.

another central example is the poisson family
(cid:0)(cid:22)(cid:22)x=x  ;

f(cid:22).x/ d e

(3.3)

where x is the nonnegative integers f0; 1; 2; : : :g and (cid:127) is the nonnegative
real line .0;1/. (here the    density    (3.3) speci   es the atoms of id203
on the discrete points of x .)
id203 family f, the knowledge of a prior density

bayesian id136 requires one crucial assumption in addition to the

g.(cid:22)/;

(cid:22) 2 (cid:127)i

(3.4)

g.(cid:22)/ represents prior information concerning the parameter (cid:22), available to
the statistician before the observation of x. for instance, in an application
of the normal model (3.2), it could be known that (cid:22) is positive, while past
experience shows it never exceeding 10, in which case we might take g.(cid:22)/
to be the uniform density g.(cid:22)/ d 1=10 on the interval   0; 10  . exactly
what constitutes    prior knowledge    is a crucial question we will consider
in ongoing discussions of bayes    theorem.
bayes    theorem is a rule for combining the prior knowledge in g.(cid:22)/ with
the current evidence in x. let g.(cid:22)jx/ denote the posterior density of (cid:22), that
is, our update of the prior density g.(cid:22)/ after taking account of observation
x. bayes    rule provides a simple expression for g.(cid:22)jx/ in terms of g.(cid:22)/
and f.

bayes    rule: g.(cid:22)jx/ d g.(cid:22)/f(cid:22).x/=f .x/;

(cid:22) 2 (cid:127);

where f .x/ is the marginal density of x,

f .x/ dz

f(cid:22).x/g.(cid:22)/ d(cid:22):

(cid:127)

(3.5)

(3.6)

(the integral in (3.6) would be a sum if (cid:127) were discrete.) the rule is a
straightforward exercise in id155,3 and yet has far-reaching
and sometimes surprising consequences.

in bayes    formula (3.5), x is    xed at its observed value while (cid:22) varies
over (cid:127), just the opposite of frequentist calculations. we can emphasize this
2 standard notation is x (cid:24) n .(cid:22); (cid:27) 2/ for a normal distribution with expectation (cid:22) and
variance (cid:27) 2, so (3.2) has x (cid:24) n .(cid:22); 1/.
3 g.(cid:22)jx/ is the ratio of g.(cid:22)/f(cid:22).x/, the joint id203 of the pair .(cid:22); x/, and f .x/,
the marginal id203 of x.

24

bayesian id136

by rewriting (3.5) as

g.(cid:22)jx/ d cxlx.(cid:22)/g.(cid:22)/;

(3.7)

where lx.(cid:22)/ is the likelihood function, that is, f(cid:22).x/ with x    xed and (cid:22)
varying. having computed lx.(cid:22)/g.(cid:22)/, the constant cx can be determined
numerically from the requirement that g.(cid:22)jx/ integrate to 1, obviating the
calculation of f .x/ (3.6).

note multiplying the likelihood function by any    xed constant c0 has no
effect on (3.7) since c0 can be absorbed into cx. so for the poisson family
(3.3) we can take lx.(cid:22)/ d e
(cid:0)(cid:22)(cid:22)x, ignoring the x   factor, which acts as a
constant in bayes    rule. the luxury of ignoring factors depending only on
x often simpli   es bayesian calculations.

for any two points (cid:22)1 and (cid:22)2 in (cid:127), the ratio of posterior densities is, by

division in (3.5),

g.(cid:22)1jx/
g.(cid:22)2jx/

d g.(cid:22)1/
g.(cid:22)2/

f(cid:22)1 .x/
f(cid:22)2 .x/

(3.8)

(no longer involving the marginal density f .x/), that is,    the posterior odds
ratio is the prior odds ratio times the likelihood ratio,    a memorable restate-
ment of bayes    rule.

3.1 two examples

a simple but genuine example of bayes    rule in action is provided by the
story of the physicist   s twins: thanks to sonograms, a physicist found out
she was going to have twin boys.    what is the id203 my twins will
be identical, rather than fraternal?    she asked. the doctor answered that
one-third of twin births were identicals, and two-thirds fraternals.

in this situation (cid:22), the unknown parameter (or    state of nature   ) is either
identical or fraternal with prior id203 1/3 or 2/3; x, the possible
sonogram results for twin births, is either same sex or different sexes, and
x d same sex was observed. (we can ignore sex since that does not affect
the calculation.) a crucial fact is that identical twins are always same-sex
while fraternals have id203 0.5 of same or different, so same sex in
the sonogram is twice as likely if the twins are identical. applying bayes   

3.1 two examples

rule in ratio form (3.8) answers the physicist   s question:

g.identicalj same/
g.fraternalj same/

d g.identical/
g.fraternal/

d 1=3
2=3

(cid:1) 1
1=2

(cid:1) fidentical.same/
ffraternal.same/
d 1:

25

(3.9)

that is, the posterior odds are even, and the physicist   s twins have equal
probabilities 0.5 of being identical or fraternal.4 here the doctor   s prior
odds ratio, 2 to 1 in favor of fraternal, is balanced out by the sonogram   s
likelihood ratio of 2 to 1 in favor of identical.

figure 3.1 analyzing the twins problem.

there are only four possible combinations of parameter (cid:22) and outcome
x in the twins problem, labeled a, b, c, and d in figure 3.1. cell b has
id203 0 since identicals cannot be of different sexes. cells c and d
have equal probabilities because of the random sexes of fraternals. finally,
a c b must have total id203 1/3, and c c d total id203 2/3,
according to the doctor   s prior distribution. putting all this together, we
can    ll in the probabilities for all four cells, as shown. the physicist knows
she is in the    rst column of the table, where the conditional probabilities
of identical or fraternal are equal, just as provided by bayes    rule in (3.9).
presumably the doctor   s prior distribution came from some enormous
state or national database, say three million previous twin births, one mil-
lion identical pairs and two million fraternals. we deduce that cells a, c,
and d must have had one million entries each in the database, while cell
b was empty. bayes    rule can be thought of as a big book with one page

4 they turned out to be fraternal.

1	
   identical twins are: fraternal same sex different physicist sonogram shows: doctor 2/3 1/3 1/3 1/3 0 1/3 b a c d 26

bayesian id136

for each possible outcome x. (the book has only two pages in figure 3.1.)
the physicist turns to the page    same sex    and sees two million previous
twin births, half identical and half fraternal, correctly concluding that the
odds are equal in her situation.

given any prior distribution g.(cid:22)/ and any family of densities f(cid:22).x/,
bayes    rule will always provide a version of the big book. that doesn   t
mean that the book   s contents will always be equally convincing. the prior
for the twins problems was based on a large amount of relevant previous
experience. such experience is most often unavailable. modern bayesian
practice uses various strategies to construct an appropriate    prior    g.(cid:22)/
in the absence of prior experience, leaving many statisticians unconvinced
by the resulting bayesian id136s. our second example illustrates the
dif   culty.

table 3.1 scores from two tests taken by 22 students, mechanics and
vectors.

mechanics
vectors

mechanics
vectors

1

7
51

12

36
59

2

44
69

13

42
60

3

49
41

14

5
30

4

59
70

15

22
58

5

34
42

16

18
51

6

46
40

17

41
63

7

0
40

18

48
38

8

32
45

19

31
42

9

49
57

20

42
69

10

52
64

21

46
49

11

44
61

22

63
63

table 3.1 shows the scores on two tests, mechanics and vectors,
achieved by n d 22 students. the sample correlation coef   cient between
the two scores is o
o

," 22x

  d 0:498,

22x
.vi (cid:0) nv/2

  d 22x

.mi (cid:0) nm/.vi (cid:0) nv/

.mi (cid:0) nm/2

#1=2

; (3.10)

id1

id1

id1

with m and v short for mechanics and vectors, nm and nv their aver-
ages. we wish to assign a bayesian measure of posterior accuracy to the
true correlation coef   cient  ,    true    meaning the correlation for the hypo-
thetical population of all students, of which we observed only 22.
if we assume that the joint .m; v/ distribution is bivariate normal (as
discussed in chapter 5), then the density of o
  as a function of   has a
known form,  

  1

  d .n (cid:0) 2/.1 (cid:0)   2/.n(cid:0)1/=2(cid:16)

(cid:16) o

3.1 two examples

  2 .n(cid:0)4/=2

1 (cid:0) o

z 1

 

(cid:25)

f 

o
 
(3.11)
in terms of our general bayes notation, parameter (cid:22) is  , observation x is
o
 , and family f is given by (3.11), with both (cid:127) and x equaling the interval
  (cid:0)1; 1  . formula (3.11) looks formidable to the human eye but not to the
computer eye, which makes quick work of it.

0

27

 n(cid:0)1 :

(cid:16)
cosh w (cid:0)  

dw

figure 3.2 student scores data; posterior density of correlation  
for three possible priors.

in this case, as in the majority of scienti   c situations, we don   t have a
trove of relevant past experience ready to provide a prior g.  /. one expe-
dient, going back to laplace, is the    principle of insuf   cient reason,    that
is, we take   to be uniformly distributed over (cid:127),

g.  / d 1

2

for (cid:0) 1       1;

(3.12)

a       at prior.    the solid black curve in figure 3.2 shows the resulting poste-
rior density (3.5), which is just the likelihood f  .0:498/ plotted as a func-
tion of   (and scaled to have integral 1).

   0.20.00.20.40.60.81.00.00.51.01.52.02.5qg(q|q^)id113 .498flat priorjeffreystriangularl.093.75028

bayesian id136

jeffreys    prior,

gjeff.  / d 1=.1 (cid:0)   2/;

(3.13)

yields posterior density g. j o
  / shown by the dashed red curve. it suggests
somewhat bigger values for the unknown parameter  . formula (3.13)
arises from a theory of    uninformative priors    discussed in the next sec-
tion, an improvement on the principle of insuf   cient reason; (3.13) is an

improper density in thatr 1(cid:0)1 g.  / d  d 1, but it still provides proper pos-

terior densities when deployed in bayes    rule (3.5).
the dotted blue curve in figure 3.2 is posterior density g. j o
from the triangular-shaped prior

  / obtained

g.  / d 1 (cid:0) j j:

(3.14)

this is a primitive example of a shrinkage prior, one designed to favor
smaller values of  . its effect is seen in the leftward shift of the posterior
density. shrinkage priors will play a major role in our discussion of large-
scale estimation and testing problems, where we are hoping to    nd a few
large effects hidden among thousands of negligible ones.

3.2 uninformative prior distributions

given a convincing prior distribution, bayes    rule is easier to use and pro-
duces more satisfactory id136s than frequentist methods. the domi-
nance of frequentist practice re   ects the scarcity of useful prior information
in day-to-day scienti   c applications. but the bayesian impulse is strong,
and almost from its inception 250 years ago there have been proposals for
the construction of    priors    that permit the use of bayes    rule in the ab-
sence of relevant experience.

one approach, perhaps the most in   uential in current practice, is the
employment of uninformative priors.    uninformative    has a positive con-
notation here, implying that the use of such a prior in bayes    rule does not
tacitly bias the resulting id136. laplace   s principle of insuf   cient rea-
son, i.e., assigning uniform prior distributions to unknown parameters, is
an obvious attempt at this goal. its use went unchallenged for more than a
century, perhaps because of laplace   s in   uence more than its own virtues.
venn (of the venn diagram) in the 1860s, and fisher in the 1920s, attack-
ing the routine use of bayes    theorem, pointed out that laplace   s principle
could not be applied consistently. in the student correlation example, for
instance, a uniform prior distribution for   would not be uniform if we

changed parameters to (cid:13) d e ; posterior probabilities such as

3.2 uninformative prior distributions

n
  > 0j o

 

o d pr

n
(cid:13) > 1j o

 

o

pr

29

(3.15)

would depend on whether   or (cid:13) was taken to be uniform a priori. neither
choice then could be considered uninformative.

a more sophisticated version of laplace   s principle was put forward by
jeffreys beginning in the 1930s. it depends, interestingly enough, on the
frequentist notion of fisher information (chapter 4). for a one-parameter
family f(cid:22).x/, where the parameter space (cid:127) is an interval of the real line
r1, the fisher information is de   ned to be

 2)

(  @

@(cid:22)

i(cid:22) d e(cid:22)

log f(cid:22).x/

:

(3.16)

(for the poisson family (3.3), @=@(cid:22).log f(cid:22).x// d x=(cid:22)(cid:0)1 and i(cid:22) d 1=(cid:22).)

the jeffreys    prior gjeff.(cid:22)/ is by de   nition
i 1=2
(cid:22) :

gjeff.(cid:22)/ d

because 1=i(cid:22) equals, approximately, the variance (cid:27) 2
equivalent de   nition is

(3.17)
(cid:22) of the id113 o(cid:22), an

formula (3.17) does in fact transform correctly under parameter changes,
avoiding the venn   fisher criticism.  it is known that o
approximate standard deviation

  in family (3.11) has   2

gjeff.(cid:22)/ d 1=(cid:27)(cid:22):

(cid:27)  d c.1 (cid:0)   2/;

(3.18)

(3.19)

yielding jeffreys    prior (3.13) from (3.18), the constant factor c having no
effect on bayes    rule (3.5)   (3.6).

the red triangles in figure 3.2 indicate the    95% credible interval    [0.093,
z 0:750
0.750] for  , based on jeffreys    prior. that is, the posterior id203
0:093       0:750 equals 0.95,

gjeff(cid:16)

 j o

 

 

d  d 0:95;

(3.20)

0:093

with id203 0.025 for   < 0:093 or   > 0:750. it is not an accident that
this nearly equals the standard neyman 95% con   dence interval based on
o
  / (3.11). jeffreys    prior tends to induce this nice connection between
f  .
the bayesian and frequentist worlds, at least in one-parameter families.

multiparameter id203 families, chapter 4, make everything more

30

bayesian id136

dif   cult. suppose, for instance, the statistician observes 10 independent
versions of the normal model (3.2), with possibly different values of (cid:22),

ind(cid:24)

xi

n .(cid:22)i ; 1/

for i d 1; 2; : : : ; 10;

(3.21)

in standard notation. jeffreys    prior is    at for any one of the 10 problems,
which is reasonable for dealing with them separately, but the joint jeffreys   
prior

g.(cid:22)1; (cid:22)2; : : : ; (cid:22)10/ d constant;

(3.22)

also    at, can produce disastrous overall results, as discussed in chapter 13.
computer-age applications are often more like (3.21) than (3.11), except
with hundreds or thousands of cases rather than 10 to consider simultane-
ously. uninformative priors of many sorts, including jeffreys   , are highly
popular in current applications, as we will discuss. this leads to an inter-
play between bayesian and frequentist methodology, the latter intended to
control possible biases in the former, exemplifying our general theme of
computer-age statistical id136.

3.3 flaws in frequentist id136

bayesian statistics provides an internally consistent (   coherent   ) program
of id136. the same cannot be said of frequentism. the apocryphal story
of the meter reader makes the point: an engineer measures the voltages on
a batch of 12 tubes, using a voltmeter that is normally calibrated,

x (cid:24)

n .(cid:22); 1/;

(3.23)

x being any one measurement and (cid:22) the true batch voltage. the measure-
ments range from 82 to 99, with an average of nx d 92, which he reports
back as an unbiased estimate of (cid:22).  
the next day he discovers a glitch in his voltmeter such that any volt-
age exceeding 100 would have been reported as x d 100. his frequentist
statistician tells him that nx d 92 is no longer unbiased for the true expecta-
tion (cid:22) since (3.23) no longer completely describes the id203 family.
(the statistician says that 92 is a little too small.) the fact that the glitch
didn   t affect any of the actual measurements doesn   t let him off the hook;
nx from the actual
nx would not be unbiased for (cid:22) in future realizations of
id203 model.
a bayesian statistician comes to the meter reader   s rescue. for any prior
density g.(cid:22)/, the posterior density g.(cid:22)jx/ d g.(cid:22)/f(cid:22).x/=f .x/, where
x is the vector of 12 measurements, depends only on the data x actually

  3

3.3 flaws in frequentist id136

31

observed, and not on other potential data sets x that might have been
seen. the    at jeffreys    prior g.(cid:22)/ d constant yields posterior expectation
nx d 92 for (cid:22), irrespective of whether or not the glitch would have affected
readings above 100.

figure 3.3 z-values against null hypothesis (cid:22) d 0 for months 1
through 30.

a less contrived version of the same phenomenon is illustrated in fig-
ure 3.3. an ongoing experiment is being run. each month i an independent
normal variate is observed,

(3.24)
with the intention of testing the null hypothesis h0 w (cid:22) d 0 versus the
alternative (cid:22) > 0. the plotted points are test statistics

n .(cid:22); 1/;

(3.25)

xi (cid:24)

zi d ix
(cid:16)p

jd1

xj

zi (cid:24)

.p

i ;

 

a    z-value    based on all the data up to month i,

(3.26)
at month 30, the scheduled end of the experiment, z30 d 1:66, just ex-
ceeding 1.645, the upper 95% point for a n .0; 1/ distribution. victory!
the investigators get to claim    signi   cant    rejection of h0 at level 0.05.

i (cid:22); 1

n

:

llllllllllllllllllllllllllllll051015202530   1.5   1.0   0.50.00.51.01.52.0month iz value1.64532

bayesian id136

unfortunately, it turns out that the investigators broke protocol and peek-
ed at the data at month 20, in the hope of being able to stop an expensive
experiment early. this proved a vain hope, z20 d 0:79 not being anywhere
near signi   cance, so they continued on to month 30 as originally planned.
this means they effectively used the stopping rule    stop and declare signif-
icance if either z20 or z30 exceeds 1.645.    some computation shows that
this rule had id203 0.074, not 0.05, of rejecting h0 if it were true.
victory has turned into defeat according to the honored frequentist 0.05
criterion.
once again, the bayesian statistician is more lenient. the likelihood
function for the full data set x d .x1; x2; : : : ; x30/,
2 .xi(cid:0)(cid:22)/2
(cid:0) 1

lx.(cid:22)/ d 30y

(3.27)

e

;

id1

is the same irrespective of whether or not the experiment might have stopped
early. the stopping rule doesn   t affect the posterior distribution g.(cid:22)jx/,
which depends on x only through the likelihood (3.7).

figure 3.4 unbiased effect-size estimates for 6033 genes,
prostate cancer study. the estimate for gene 610 is x610 d 5:29.
what is its effect size?

the lenient nature of bayesian id136 can look less benign in multi-

 effect   size estimatesfrequency   4   20240100200300400gene 6105.293.4 a bayesian/frequentist comparison list

33

parameter settings. figure 3.4 concerns a prostate cancer study comparing
52 patients with 50 healthy controls. each man had his genetic activity
measured for a panel of n d 6033 genes. a statistic x was computed for
each gene,5 comparing the patients with controls, say  
i d 1; 2; : : : ; n;

(3.28)

xi (cid:24)

  4

n .(cid:22)i ; 1/

where (cid:22)i represents the true effect size for gene i. most of the genes, prob-
ably not being involved in prostate cancer, would be expected to have effect
sizes near 0, but the investigators hoped to spot a few large (cid:22)i values, either
positive or negative.
the histogram of the 6033 xi values does in fact reveal some large val-
ues, x610 d 5:29 being the winner. question: what estimate should we
give for (cid:22)610? even though x610 was individually unbiased for (cid:22)610, a fre-
quentist would (correctly) worry that focusing attention on the largest of
6033 values would produce an upward bias, and that our estimate should
downwardly correct 5.29.    selection bias,       regression to the mean,    and
   the winner   s curse    are three names for this phenomenon.

bayesian id136, surprisingly, is immune to selection bias.    irrespec-   5

tive of whether gene 610 was prespeci   ed for particular attention or only
came to attention as the    winner,    the bayes    estimate for (cid:22)610 given all
the data stays the same. this isn   t obvious, but follows from the fact that
any data-based selection process does not affect the likelihood function in
(3.7).

what does affect bayesian id136 is the prior g.(cid:22)/ for the full vector
(cid:22) of 6033 effect sizes. the    at prior, g.(cid:22)/ constant, results in the danger-
ous overestimate o(cid:22)610 d x610 d 5:29. a more appropriate uninformative
prior appears as part of the empirical bayes calculations of chapter 15
(and gives o(cid:22)610 d 4:11). the operative point here is that there is a price to
be paid for the desirable properties of bayesian id136. attention shifts
from choosing a good frequentist procedure to choosing an appropriate
prior distribution. this can be a formidable task in high-dimensional prob-
lems, the very kinds featured in computer-age id136.

3.4 a bayesian/frequentist comparison list

bayesians and frequentists start out on the same playing    eld, a family
of id203 distributions f(cid:22).x/ (3.1), but play the game in orthogonal

5 the statistic was the two-sample t-statistic (2.17) transformed to normality (3.28); see

the endnotes.

34

bayesian id136

directions, as indicated schematically in figure 3.5: bayesian id136
proceeds vertically, with x    xed, according to the posterior distribution
g.(cid:22)jx/, while frequentists reason horizontally, with (cid:22)    xed and x varying.
advantages and disadvantages accrue to both strategies, some of which are
compared next.

figure 3.5 bayesian id136 proceeds vertically, given x;
frequentist id136 proceeds horizontally, given (cid:22).

(cid:15) bayesian id136 requires a prior distribution g.(cid:22)/. when past experi-
ence provides g.(cid:22)/, as in the twins example, there is every good reason to
employ bayes    theorem. if not, techniques such as those of jeffreys still
permit the use of bayes    rule, but the results lack the full logical force
of the theorem; the bayesian   s right to ignore selection bias, for instance,
must then be treated with caution.
(cid:15) frequentism replaces the choice of a prior with the choice of a method,
or algorithm, t .x/, designed to answer the speci   c question at hand. this
adds an arbitrary element to the inferential process, and can lead to meter-
reader kinds of contradictions. optimal choice of t .x/ reduces arbitrary
behavior, but computer-age applications typically move outside the safe
waters of classical optimality theory, lending an ad-hoc character to fre-
quentist analyses.
(cid:15) modern data-analysis problems are often approached via a favored meth-

3.4 a bayesian/frequentist comparison list

35

odology, such as id28 or regression trees in the examples of
chapter 8. this plays into the methodological orientation of frequentism,
which is more    exible than bayes    rule in dealing with speci   c algorithms
(though one always hopes for a reasonable bayesian justi   cation for the
method at hand).
(cid:15) having chosen g.(cid:22)/, only a single id203 distribution g.(cid:22)jx/ is in
play for bayesians. frequentists, by contrast, must struggle to balance
the behavior of t .x/ over a family of possible distributions, since (cid:22) in
figure 3.5 is unknown. the growing popularity of bayesian applications
(usually begun with uninformative priors) re   ects their simplicity of ap-
plication and interpretation.
(cid:15) the simplicity argument cuts both ways. the bayesian essentially bets it
all on the choice of his or her prior being correct, or at least not harmful.
frequentism takes a more defensive posture, hoping to do well, or at least
not poorly, whatever (cid:22) might be.
(cid:15) a bayesian analysis answers all possible questions at once, for example,
estimating efgfrg or prfgfr < 40g or anything else relating to figure 2.1.
frequentism focuses on the problem at hand, requiring different estima-
tors for different questions. this is more work, but allows for more intense
inspection of particular problems. in situation (2.9) for example, estima-
tors of the form

x
.xi (cid:0) nx/2=.n (cid:0) c/

(3.29)

might be investigated for different choices of the constant c, hoping to
reduce expected mean-squared error.
(cid:15) the simplicity of the bayesian approach is especially appealing in dy-
namic contexts, where data arrives sequentially and updating one   s beliefs
is a natural practice. bayes    rule was used to devastating effect before the
2012 us presidential election, updating sequential polling results to cor-
rectly predict the outcome in all 50 states. bayes    theorem is an excellent
tool in general for combining statistical evidence from disparate sources,
the closest frequentist analog being id113.
(cid:15) in the absence of genuine prior information, a whiff of subjectivity6 hangs
over bayesian results, even those based on uninformative priors. classical
frequentism claimed for itself the high ground of scienti   c objectivity,
especially in contentious areas such as drug testing and approval, where
skeptics as well as friends hang on the statistical details.

figure 3.5 is soothingly misleading in its schematics: (cid:22) and x will

6 here we are not discussing the important subjectivist school of bayesian id136, of

savage, de finetti, and others, covered in chapter 13.

36

bayesian id136

typically be high-dimensional in the chapters that follow, sometimes very
high-dimensional, straining to the breaking point both the frequentist and
the bayesian paradigms. computer-age statistical id136 at its most
successful combines elements of the two philosophies, as for instance in
the empirical bayes methods of chapter 6, and the lasso in chapter 16.
there are two potent arrows in the statistician   s philosophical quiver, and
faced, say, with 1000 parameters and 1,000,000 data points, there   s no
need to go hunting armed with just one of them.

3.5 notes and details

thomas bayes, if transferred to modern times, might well be employed as
a successful professor of mathematics. actually, he was a mid-eighteenth-
century nonconformist english minister with substantial mathematical in-
terests. richard price, a leading    gure of letters, science, and politics, had
bayes    theorem published in the 1763 transactions of the royal society
(two years after bayes    death), his interest being partly theological, with
the rule somehow proving the existence of god. bellhouse   s (2004) biog-
raphy includes some of bayes    other mathematical accomplishments.

harold jeffreys was another part-time statistician, working from his day
job as the world   s premier geophysicist of the inter-war period (and    erce
opponent of the theory of continental drift). what we called uninformative
priors are also called noninformative or objective. jeffreys    brand of bayes-
ianism had a dubious reputation among bayesians in the period 1950   
1990, with preference going to subjective analysis of the type advocated
by savage and de finetti. the introduction of id115
methodology was the kind of technological innovation that changes philoso-
phies. mcmc (chapter 13), being very well suited to jeffreys-style anal-
ysis of big data problems, moved bayesian statistics out of the textbooks
and into the world of computer-age applications. berger (2006) makes a
spirited case for the objective bayes approach.

  1 [p. 26] correlation coef   cient density. formula (3.11) for the correlation
coef   cient density was r. a. fisher   s debut contribution to the statistics
literature. chapter 32 of johnson and kotz (1970b) gives several equivalent
forms. the constant c in (3.19) is often taken to be .n (cid:0) 3/
(cid:0)1=2, with n the
sample size.
ters from (cid:22) to q(cid:22) in a smoothly differentiable way. the new family q

  2 [p. 29] jeffreys    prior and transformations. suppose we change parame-
fq(cid:22).x/

3.5 notes and details

37

satis   es

log q

@

@ q(cid:22)

fq(cid:22).x/ d @(cid:22)
@ q(cid:22)

i(cid:22) (3.16) and qgjeff. q(cid:22)/ d        @(cid:22)

then q
@q(cid:22)
says that gjeff.(cid:22)/ transforms correctly to qgjeff. q(cid:22)/.

iq(cid:22) d (cid:16) @(cid:22)

 2

@q(cid:22)

@(cid:22)

@

log f(cid:22).x/:

(3.30)

       gjeff.(cid:22)/. but this just

  3 [p. 30] the meter-reader fable is taken from edwards    (1992) book likeli-
hood, where he credits john pratt. it nicely makes the point that frequentist
id136s, which are calibrated in terms of possible observed data sets x,
may be inappropriate for the actual observation x. this is the difference
between working in the horizontal and vertical directions of figure 3.5.

  4 [p. 33] two-sample t-statistic. applied to gene i   s data in the prostate
study, the two-sample t-statistic ti (2.17) has theoretical null hypothesis
distribution t100, a student   s t distribution with 100 degrees of freedom; xi
(cid:0)1.f100.ti //, where    and f100 are the cumulative distribu-
in (3.28) is   
tion functions of standard normal and t100 variables. section 7.4 of efron
(2010) motivates approximation (3.28).

  5 [p. 33] selection bias. senn (2008) discusses the immunity of bayesian
id136s to selection bias and other    paradoxes,    crediting phil dawid for
the original idea. the article catches the possible uneasiness of following
bayes    theorem too literally in applications.
the 22 students in table 3.1 were randomly selected from a larger data
set of 88 in mardia et al. (1979) (which gave o
  d 0:553). welch and
peers (1963) initiated the study of priors whose credible intervals, such
as   0:093; 0:750   in figure 3.2, match frequentist con   dence intervals. in
one-parameter problems, jeffreys    priors provide good matches, but not
ususally in multiparameter situations. in fact, no single multiparameter
prior can give good matches for all one-parameter subproblems, a source of
tension between bayesian and frequentist methods revisited in chapter 11.

4

fisherian id136 and maximum

likelihood estimation

sir ronald fisher was arguably the most in   uential anti-bayesian of all
time, but that did not make him a conventional frequentist. his key data-
analytic methods   analysis of variance, signi   cance testing, and maxi-
mum likelihood estimation   were almost always applied frequentistically.
their fisherian rationale, however, often drew on ideas neither bayesian
nor frequentist in nature, or sometimes the two in combination. fisher   s
work held a central place in twentieth-century applied statistics, and some
of it, particularly id113, has moved forcefully
into computer-age practice. this chapter   s brief review of fisherian meth-
odology sketches parts of its unique philosophical structure, while concen-
trating on those topics of greatest current importance.

4.1 likelihood and maximum likelihood

fisher   s seminal work on estimation focused on the likelihood function,
or more exactly its logarithm. for a family of id203 densities f(cid:22).x/
(3.1), the log likelihood function is

lx.(cid:22)/ d logff(cid:22).x/g;

(4.1)

the notation lx.(cid:22)/ emphasizing that the parameter vector (cid:22) is varying
while the observed data vector x is    xed. the maximum likelihood esti-
mate (id113) is the value of (cid:22) in parameter space (cid:127) that maximizes lx.(cid:22)/,

id113 w

o(cid:22) d arg max
(cid:22)2(cid:127)

flx.(cid:22)/g:

(4.2)
it can happen that o(cid:22) doesn   t exist or that there are multiple maximizers, but
here we will assume the usual case where o(cid:22) exists uniquely. more careful
references are provided in the endnotes.

de   nition (4.2) is extended to provide maximum likelihood estimates

38

4.1 likelihood and maximum likelihood

for a function   d t .(cid:22)/ of (cid:22) according to the simple plug-in rule

o
  d t . o(cid:22)/;

39

(4.3)

most often with   being a scalar parameter of particular interest, such as
the regression coef   cient of an important covariate in a linear model.

id113 came to dominate classical applied es-
timation practice. less dominant now, for reasons we will be investigating
in subsequent chapters, the id113 algorithm still has iconic status, being of-
ten the method of    rst choice in any novel situation. there are several good
reasons for its ubiquity.
1 the id113 algorithm is automatic: in theory, and almost in practice, a
single numerical algorithm produces o(cid:22) without further statistical input.
this contrasts with unbiased estimation, for instance, where each new
situation requires clever theoretical calculations.

2 the id113 enjoys excellent frequentist properties. in large-sample situa-
tions, maximum likelihood estimates tend to be nearly unbiased, with the
least possible variance. even in small samples, id113s are usually quite
ef   cient, within say a few percent of the best possible performance.

3 the id113 also has reasonable bayesian justi   cation. looking at bayes   

rule (3.7),

g.(cid:22)jx/ d cxg.(cid:22)/elx .(cid:22)/;

(4.4)
we see that o(cid:22) is the maximizer of the posterior density g.(cid:22)jx/ if the prior
g.(cid:22)/ is    at, that is, constant. because the id113 depends on the family
f only through the likelihood function, anomalies of the meter-reader
type are averted.
figure 4.1 displays two maximum likelihood estimates for the gfr data
of figure 2.1. here the data1 is the vector x d .x1; x2; : : : ; xn/, n d 211.
we assume that x was obtained as a random sample of size n from a density
f(cid:22).x/,

iid(cid:24) f(cid:22).x/

for i d 1; 2; : : : ; n;

xi

(4.5)
   iid    abbreviating    independent and identically distributed.    two families
are considered for the component density f(cid:22).x/, the normal, with (cid:22) d
. ; (cid:27) /,

f(cid:22).x/ d

1p
2(cid:25)(cid:27) 2

(cid:0) 1
2 . x(cid:0) 

(cid:27) /2

;

e

(4.6)

1 now x is what we have been calling    x    before, while we will henceforth use x as a

symbol for the individual components of x.

40

fisherian id136 and id113

figure 4.1 glomerular    ltration data of figure 2.1 and two
maximum-likelihood density estimates, normal (solid black), and
gamma (dashed blue).

and the gamma,2 with (cid:22) d .(cid:21); (cid:27); (cid:23)/,

f(cid:22).x/ d .x (cid:0) (cid:21)/(cid:23)(cid:0)1

(cid:0) x(cid:0)(cid:21)

(cid:27)

e

(for x (cid:21) (cid:21), 0 otherwise):

(4.7)

(4.8)

(4.9)

since

under iid sampling, we have

id1

(cid:27) (cid:23)  .(cid:23)/

f(cid:22).xi /

f(cid:22).x/ d ny
log f(cid:22).xi / d nx
hx

lx.(cid:22)/ d nx
  d .54:3; 13:7/ d nx;

id1

id1

lxi .(cid:22)/:

(cid:16) o

  ; o(cid:27)

maximum likelihood estimates were found by maximizing lx.(cid:22)/. for the
normal model (4.6),

(4.10)
2 the gamma distribution is usually de   ned with (cid:21) d 0 as the lower limit of x. here we
are allowing the lower limit (cid:21) to vary as a free parameter.

:

.xi (cid:0) nx/2 =n

i1=2 

 gfrfrequency20406080100051015202530normalgamma4.2 fisher information and the id113

41

there is no closed-form solution for gamma model (4.7), where numerical
maximization gave

(cid:16)o

(cid:21); o(cid:27) ; o(cid:23)

  d .21:4; 5:47; 6:0/:

(4.11)

the plotted curves in figure 4.1 are the two id113 densities f o(cid:22).x/. the
gamma model gives a better    t than the normal, but neither is really satis-
factory. (a more ambitious maximum likelihood    t appears in figure 5.7.)
most id113s require numerical minimization, as for the gamma model.
when introduced in the 1920s, maximum likelihood was criticized as com-
putationally dif   cult, invidious comparisons being made with the older
method of moments, which relied only on sample moments of various
kinds.

there is a downside to id113 that remained
nearly invisible in classical applications: it is dangerous to rely upon in
problems involving large numbers of parameters. if the parameter vector
(cid:22) has 1000 components, each component individually may be well esti-
mated by maximum likelihood, while the id113 o
  d t . o(cid:22)/ for a quantity of
particular interest can be grossly misleading.
for the prostate data of figure 3.4, model (4.6) gives id113 o(cid:22)i d xi for
each of the 6033 genes. this seems reasonable, but if we are interested in
the maximum coordinate value

  d t .(cid:22)/ d max

f(cid:22)ig;

(4.12)
the id113 is o
  d 5:29, almost certainly a    agrant overestimate.    regular-
ized    versions of id113 more suitable for high-
dimensional applications play an important role in succeeding chapters.

i

4.2 fisher information and the id113

fisher was not the    rst to suggest the maximum likelihood algorithm for
parameter estimation. his paradigm-shifting work concerned the favorable
inferential properties of the id113, and in particular its achievement of the
fisher information bound. only a brief heuristic review will be provided
here, with more careful derivations referenced in the endnotes.

we begin3 with a one-parameter family of densities
g ;

d ff  .x/;   2 (cid:127); x 2

x
3 the multiparameter case is considered in the next chapter.

f

(4.13)

42

fisherian id136 and id113

where (cid:127) is an interval of the real line, possibly in   nite, while the sam-
the continuous case, with the id203 of set a equalingr
ple space x may be multidimensional. (as in the poisson example (3.3),
f  .x/ can represent a discrete density, but for convenience we assume here
a f  .x/ dx,
etc.) the log likelihood function is lx.  / d log f  .x/ and the id113 o
  d
arg maxflx.  /g, with   replacing (cid:22) in (4.1)   (4.2) in the one-dimensional
case.

dots will indicate differentiation with respect to  , e.g., for the score

function

p
lx.  / d @

log f  .x/ d p

f  .x/=f  .x/:

the score function has expectation 0,

z

@ 

lx.  /f  .x/ dx dz

p

x

x

z
x
1 d 0;

f  .x/ dx

p
f  .x/ dx d @
@ 
d @
@ 

(4.14)

(4.15)

where we are assuming the regularity conditions necessary for differenti-
ating under the integral sign at the third step.

the fisher information i  is de   ned to be the variance of the score

function,

p
lx.  /2f  .x/ dx;

(4.16)

i  dz

x

the notation

p
lx.  / (cid:24) .0;i  /

(4.17)
indicating that p
lx.  / has mean 0 and variance i . the term    information    is
well chosen. the main result for id113, sketched
next, is that the id113 o
  has an approximately normal distribution with
mean   and variance 1=i ,

o
  p(cid:24)

n . ; 1=i  /;

(4.18)

and that no    nearly unbiased    estimator of   can do better. in other words,
bigger fisher information implies smaller variance for the id113.

the second derivative of the log likelihood function

r
lx.  / d @2

@  2

log f  .x/ d

r
f  .x/
f  .x/

(cid:0)

f  .x/
f  .x/

(4.19)

  p

!2

43

(4.20)

4.2 fisher information and the id113

has expectation

e 

(the r

nr

lx.  /

o d (cid:0)

i 

p

(4.21)

f  .x/=f  .x/ term having expectation 0 as in (4.15)). we can write

(cid:0)r
lx.  / (cid:24) .i  ;j  /;
where j  is the variance of r
lx.  /.
now suppose that x d .x1; x2; : : : ; xn/ is an iid sample from f  .x/, as
in (4.5), so that the total score function p
lx.  / d nx
lx.  /, as in (4.9), is
p
lxi .  /;
lx.  / d nx
  :d p
(cid:16) o
lx.  / c r

o
  / d 0. a    rst-order taylor series gives the approximation

  based on the full sample x satis   es the maximizing condition

the id113 o
p
lx.

(cid:0)r
lxi .  /:

and similarly

0 d p

(cid:16) o

  (cid:0)  

(4.22)

(4.23)

(4.24)

(cid:0)r

 

lx.  /

id1

id1

lx

 

;

or

o
 

:d   c

p
lx.  /=n
(cid:0)r

lx.  /=n

:

(4.25)

under reasonable regularity conditions, (4.17) and the central limit theo-
rem imply that

p
lx.  /=n p(cid:24)
while the law of large numbers has (cid:0)r
(4.21).

(4.26)
n .0;i  =n/;
lx.  /=n approaching the constant i 
putting all of this together, (4.25) produces fisher   s fundamental theo-

rem for the id113, that in large samples

o
  p(cid:24)

n . ; 1=.ni  // :

(4.27)

this is the same as result (4.18) since the total fisher information in an iid
sample (4.5) is ni , as can be seen by taking expectations in (4.23).

in the case of normal sampling,

iid(cid:24)

xi

n . ; (cid:27) 2/

for i d 1; 2; : : : ; n;

(4.28)

44

fisherian id136 and id113

2

(cid:27) 2

id1

this gives

log.2(cid:25)(cid:27) 2/:

.xi (cid:0)   /2

with (cid:27) 2 known, we compute the log likelihood
(cid:0) n
2

nx
lx.  / d (cid:0) 1
nx
.xi (cid:0)   /
lx.  / d n
id1
yielding the familiar result o
  d nx and, since i  d 1=(cid:27) 2,
o
  (cid:24)

p
lx.  / d 1

and (cid:0) r

(cid:27) 2

(cid:27) 2

n . ; (cid:27) 2=n/

from (4.27).

(4.29)

;

(4.30)

(4.31)

this brings us to an aspect of fisherian id136 neither bayesian nor
frequentist. fisher believed there was a    logic of inductive id136    that
would produce the correct answer to any statistical question, in the same
way ordinary logic solves deductive problems. his principal tactic was to
logically reduce a complicated inferential question to a simple form where
the solution should be obvious to all.
fisher   s favorite target for the obvious was (4.31), where a single scalar
observation o
  is normally distributed around the unknown parameter of
interest  , with known variance (cid:27) 2=n. then everyone should agree in the
absence of prior information that o
  is the best estimate of  , that   has
about 95% chance of lying in the interval o
fisher was astoundingly resourceful at reducing statistical problems to
the form (4.31). suf   ciency, ef   ciency, conditionality, and ancillarity were
all brought to bear, with the maximum likelihood approximation (4.27)
being the most in   uential example. fisher   s logical system is not in favor
these days, but its conclusions remain as staples of conventional statistical
practice.
suppose that q
  d t .x/ is any unbiased estimate of   based on an iid
sample x d .x1; x2; : : : ; xn/ from f  .x/. that is,

     1:96o(cid:27) =

p
n, etc.

then the cram  er   rao lower bound, described in the endnotes, says that
the variance of q

  exceeds the fisher information bound (4.27),  

  1

  d e ft .x/g:

n q

 

o (cid:21) 1=.ni  /:

var 

(4.32)

(4.33)

a loose interpretation is that the id113 has variance at least as small as
the best unbiased estimate of  . the id113 is generally not unbiased, but

4.3 conditional id136

45

p
its bias is small (of order 1=n, compared with standard deviation of order
n), making the comparison with unbiased estimates and the cram  er   
1=
rao bound appropriate.

4.3 conditional id136

a simple example gets across the idea of conditional id136: an i.i.d.
sample

xi

iid(cid:24)
(4.34)
n . ; 1/;
has produced estimate o
  d nx. the investigators originally disagreed on an
(
affordable sample size n and    ipped a fair coin to decide,

i d 1; 2; : : : ; n;

n d

25

100

id203 1/2
id203 1/2i

(4.35)

p

if you answered 1=

n d 25 won. question: what is the standard deviation of nx?
25 d 0:2 then you, like fisher, are an advocate
of conditional id136. the unconditional frequentist answer says that nx
could have been n . ; 1=100/ or n . ; 1=25/ with equal id203, yield-
ing standard deviation   .0:01 c 0:04/=2  1=2 d 0:158. some less obvious
(and less trivial) examples follow in this section, and in chapter 9, where
conditional id136 plays a central role.
the data for a typical regression problem consists of pairs .xi ; yi /, i d
1; 2; : : : ; n, where xi is a p-dimensional vector of covariates for the ith
subject and yi is a scalar response. in figure 1.1, xi is age and yi the
kidney    tness measure tot. let x be the n (cid:2) p matrix having xi as its ith
row, and y the vector of responses. a regression algorithm uses x and y
to construct a function rx;y .x/ predicting y for any value of x, as in (1.3),
where o
how accurate is rx;y .x/? this question is usually answered under the
assumption that x is    xed, not random: in other words, by conditioning
on the observed value of x. the standard errors in the second line of ta-
ble 1.1 are conditional in this sense; they are frequentist standard deviations
  0 c o
of o
  1x, assuming that the 157 values for age are    xed as observed.
(a correlation analysis between age and tot would not make this as-
sumption.)

  1 were obtained using least squares.

  0 and o

fisher argued for conditional id136 on two grounds.

46

fisherian id136 and id113

1 more relevant id136s. the conditional standard deviation in situ-
ation (4.35) seems obviously more relevant to the accuracy of the ob-
served o
  for estimating  . it is less obvious in the regression example,
though arguably still the case.

2 simpler id136s. conditional id136s are often simpler to exe-
cute and interpret. this is the case with regression, where the statistician
doesn   t have to worry about correlation relationships among the covari-
ates, and also with our next example, a fisherian classic.

table 4.1 shows the results of a randomized trial on 45 ulcer patients,
comparing new and old surgical treatments. was the new surgery signi   -
cantly better? fisher argued for carrying out the hypothesis test conditional
on the marginals of the table .16; 29; 21; 24/. with the marginals    xed, the
number y in the upper left cell determines the other three cells by subtrac-
tion. we need only test whether the number y d 9 is too big under the null
hypothesis of no treatment difference, instead of trying to test the numbers
in all four cells.4

table 4.1 forty-   ve ulcer patients randomly assigned to either new or
old surgery, with results evaluated as either success or failure.
was the new surgery signi   cantly better?

success

failure

new

old

9

7

16

12

17

29

21

24

45

an ancillary statistic (again, fisher   s terminology) is one that contains
no direct information by itself, but does determine the conditioning frame-
work for frequentist calculations. our three examples of ancillaries were
the sample size n, the covariate matrix x, and the table   s marginals.    con-
tains no information    is a contentious claim. more realistically, the two ad-
vantages of conditioning, relevance and simplicity, are thought to outweigh
the loss of information that comes from treating the ancillary statistic as
nonrandom. chapter 9 makes this case speci   cally for standard survival
analysis methods.

4 section 9.3 gives the details of such tests; in the surgery example, the difference was not

signi   cant.

4.3 conditional id136

47

our    nal example concerns the accuracy of a maximum likelihood esti-
mate o

 . rather than

(cid:0) ; 1  (cid:0)nio 

(cid:1)(cid:1) ;

o
  p(cid:24)

n

o
  p(cid:24)

the plug-in version of (4.27), fisher suggested using

n . ; 1=i.x// ;
where i.x/ is the observed fisher information

(cid:16) o

 

  d (cid:0) @2

lx.  /

@  2

        o 

i.x/ d (cid:0)r

lx

(4.36)

(4.37)

:

(4.38)

the expectation of i.x/ is ni , so in large samples the distribution (4.37)
converges to (4.36). before convergence, however, fisher suggested that
(4.37) gives a better idea of o
as a check, a simulation was run involving i.i.d. samples x of size n d

    s accuracy.

20 drawn from a cauchy density
f  .x/ d 1

1

:

(cid:25)

1 c .x (cid:0)   /2

  within each group was then calculated.

(4.39)
10,000 samples x of size n d 20 were drawn (with   d 0) and the ob-
served information bound 1=i.x/ computed for each. the 10,000 o
  values
were grouped according to deciles of 1=i.x/, and the observed empirical
variance of o
this amounts to calculating a somewhat crude estimate of the condi-
tional variance of the id113 o
 , given the observed information bound 1=i.x/.
figure 4.2 shows the results. we see that the conditional variance is close
to 1=i.x/, as fisher predicted. the conditioning effect is quite substan-
tial; the unconditional variance 1=ni  is 0.10 here, while the conditional
variance ranges from 0.05 to 0.20.
the observed fisher information i.x/ acts as an approximate ancillary,
enjoying both of the virtues claimed by fisher: it is more relevant than the
unconditional information nio , and it is usually easier to calculate. once
o
  has been found, i.x/ is obtained by numerical second differentiation.
unlike i , no id203 calculations are required.
there is a strong bayesian current    owing here. a narrow peak for the
log likelihood function, i.e., a large value of i.x/, also implies a narrow
posterior distribution for   given x. conditional id136, of which fig-
ure 4.2 is an evocative example, helps counter the central bayesian criti-
cism of frequentist id136: that the frequentist properties relate to data
sets possibly much different than the one actually observed. the maximum

48

fisherian id136 and id113

figure 4.2 conditional variance of id113 for cauchy samples of
size 20, plotted versus the observed information bound 1=i.x/.
observed information bounds are grouped by quantile intervals
for variance calculations (in percentages): (0   5), (5   15), : : : ,
(85   95), (95   100). the broken red horizontal line is the
unconditional variance 1=ni .

likelihood algorithm can be interpreted both vertically and horizontally in
figure 3.5, acting as a connection between the bayesian and frequentist
worlds.

the equivalent of result (4.37) for multiparameter families, section 5.3,

(cid:0)(cid:22); i.x/

(cid:0)1(cid:1) ;

o(cid:22) p(cid:24)

(4.40)
plays an important role in succeeding chapters, with (cid:0)i.x/ the p(cid:2)p matrix
of second derivatives

np

lx.(cid:22)/ d (cid:0) 

i.x/ d (cid:0)r

@2

@(cid:22)i @(cid:22)j

log f(cid:22).x/

:

o(cid:22)

(4.41)

(cid:21)

lllllllllll0.050.100.150.200.250.000.050.100.150.200.25observed information boundid113 variance4.4 permutation and randomization

49

4.4 permutation and randomization

fisherian methodology faced criticism for its overdependence on normal
sampling assumptions. consider the comparison between the 47 all and
25 aml patients in the gene 136 leukemia example of figure 1.4. the two-
sample t-statistic (1.6) had value 3.13, with two-sided signi   cance level
0.0025 according to a student-t null distribution with 70 degrees of free-
dom. all of this depended on the gaussian, or normal, assumptions (2.12)   
(2.13).

as an alternative signi   cance-level calculation, fisher suggested using
permutations of the 72 data points. the 72 values are randomly divided
into disjoint sets of size 47 and 25, and the two-sample t-statistic (2.17) is
recomputed. this is done some large number b times, yielding permuta-
(cid:3)
b. the two-sided permutation signi   cance level
tion t-values t
(cid:3)
for the original value t is then the proportion of the t
i values exceeding t
in absolute value,

(cid:3)
2 ; : : : ; t

(cid:3)
1 ; t

#fjt

(cid:3)

j (cid:21) jtjg =b:

i

(4.42)

figure 4.3 10,000 permutation t
for gene 136 in the leukemia data of figure 1.3. of these, 26
(cid:3)-values (red ticks) exceeded in absolute value the observed
t
t-statistic 3.01, giving permutation signi   cance level 0.0026.

(cid:3)-values for testing all vs aml,

   4   20240200400600800t* valuesfrequency||||||||||||||||||||||||||   3.013.01originalt   statisticfisherian id136 and id113
50
figure 4.3 shows the histogram of b d 10,000 t

(cid:3)
i values for the gene
136 data in figure 1.3: 26 of these exceeded t d 3:01 in absolute value,
yielding signi   cance level 0.0026 against the null hypothesis of no all/aml
difference, remarkably close to the normal-theory signi   cance level 0.0025.
(we were a little lucky here.)

why should we believe the permutation signi   cance level (4.42)? fisher
provided two arguments.
(cid:15) suppose we assume as a null hypothesis that the n d 72 observed mea-
surements x are an iid sample obtained from the same distribution f(cid:22).x/,

iid(cid:24) f(cid:22).x/

xi

for i d 1; 2; : : : ; n:

(4.43)

(there is no normal assumption here, say that f(cid:22).x/ is n . ; (cid:27) 2/.)
let o indicate the order statistic of x, i.e., the 72 numbers ordered
from smallest to largest, with their aml or all labels removed. then it
can be shown that all 72  =.47  25  / ways of obtaining x by dividing o
into disjoint subsets of sizes 47 and 25 are equally likely under null hy-
pothesis (4.43). a small value of the permutation signi   cance level (4.42)
indicates that the actual division of aml/all measurements was not ran-
dom, but rather resulted from negation of the null hypothesis (4.43). this
might be considered an example of fisher   s logic of inductive id136,
where the conclusion    should be obvious to all.    it is certainly an exam-
ple of conditional id136, now with conditioning used to avoid speci   c
assumptions about the sampling density f(cid:22).x/.
(cid:15) in experimental situations, fisher forcefully argued for randomization,
that is for randomly assigning the experimental units to the possible treat-
ment groups. most famously, in a clinical trial comparing drug a with
drug b, each patient should be randomly assigned to a or b.

randomization greatly strengthens the conclusions of a permutation
test. in the aml/all gene-136 situation, where randomization wasn   t fea-
sible, we wind up almost certain that the aml group has systematically
larger numbers, but cannot be certain that it is the different disease states
causing the difference. perhaps the aml patients are older, or heavier, or
have more of some other characteristic affecting gene 136. experimen-
tal randomization almost guarantees that age, weight, etc., will be well-
balanced between the treatment groups. fisher   s rct (randomized clini-
cal trial) was and is the gold standard for statistical id136 in medical
trials.
permutation testing is frequentistic: a statistician following the proce-
dure has 5% chance of rejecting a valid null hypothesis at level 0.05, etc.

4.5 notes and details

51

randomization id136 is somewhat different, amounting to a kind of
forced frequentism, with the statistician imposing his or her preferred prob-
ability mechanism upon the data. permutation methods are enjoying a healthy
computer-age revival, in contexts far beyond fisher   s original justi   cation
for the t-test, as we will see in chapter 15.

4.5 notes and details

on a linear scale that puts bayesian on the left and frequentist on the right,
fisherian id136 winds up somewhere in the middle. fisher rejected
bayesianism early on, but later criticized as    wooden    the hard-line fre-
quentism of the neyman   wald decision-theoretic school. efron (1998) lo-
cates fisher along the bayes   frequentist scale for several different criteria;
see in particular figure 1 of that paper.

bayesians, of course, believe there is only one true logic of inductive in-
ference. fisher disagreed. his most ambitious attempt to    enjoy the bayes-
ian omelette without breaking the bayesian eggs   5 was    ducial id136.
the simplest example concerns the normal translation model x (cid:24)
n . ; 1/,
where   (cid:0) x has a standard n .0; 1/ distribution, the    ducial distribution of
  given x then being n .x; 1/. among fisher   s many contributions,    du-
cial id136 was the only outright popular bust. nevertheless the idea has
popped up again in the current literature under the name    con   dence dis-
tribution;    see efron (1993) and xie and singh (2013). a brief discussion
appears in chapter 11.

  1 [p. 44] for an unbiased estimator q

lx.  /f  .x/ d x dz

p

z

t .x/

x

  d t .x/ (4.32), we have
z
x
  d 1:

p
f  .x/ d x d @
@ 
d @
@ 

t .x/

x

t .x/f  .x/ d x

(4.44)

here x is x n, the sample space of x d .x1; x2; : : : ; xn/, and we are as-
(4.44) givesr .t .x/ (cid:0)   /

suming the conditions necessary for differentiating under the integral sign;
lx.  / has expectation

p
lx.  /f  .x/ d x d 1 (since p

5 attributed to the important bayesian theorist l. j. savage.

fisherian id136 and id113

0), and then, applying the cauchy   schwarz inequality,

(cid:21)2
.t .x/ (cid:0)   /2 f  .x/d x

p
lx.  /f  .x/ d x

.t .x/ (cid:0)   /

  z

x

52

 z

x

or

(cid:21) z
o
n q

 

i  :

x

p
lx.  /2f  .x/ d x

(cid:21)

;

(4.45)

(4.46)

1   var 

this veri   es the cram  er   rao lower bound (4.33): the optimal variance for
an unbiased estimator is one over the fisher information.

optimality results are a sign of scienti   c maturity. fisher information
and its estimation bound mark the transition of statistics from a collection
of ad-hoc techniques to a coherent discipline. (we have lost some ground
recently, where, as discussed in chapter 1, ad-hoc algorithmic coinages
have outrun their inferential justi   cation.) fisher   s information bound was
a major mathematical innovation, closely related to and predating, heisen-
berg   s uncertainty principle and shannon   s information bound; see dembo
et al. (1991).

unbiased estimation has strong appeal in statistical applications, where
   biased,    its opposite, carries a hint of self-interested data manipulation.
in large-scale settings, such as the prostate study of figure 3.4, one can,
however, strongly argue for biased estimates. we saw this for gene 610,
where the usual unbiased estimate o(cid:22)610 d 5:29 is almost certainly too
large. biased estimation will play a major role in our subsequent chapters.
id113 is effectively unbiased in most situa-

tions. under repeated sampling, the expected mean squared error

(cid:26)(cid:16) o

 2(cid:27) d variance c bias2

mse d e

  (cid:0)  

(4.47)
has order-of-magnitude variance d o.1=n/ and bias2 d o.1=n2/, the
latter usually becoming negligible as sample size n increases. (important
exceptions, where bias is substantial, can occur if o
  d t . o(cid:22)/ when o(cid:22) is
high-dimensional, as in the james   stein situation of chapter 7.) section
10 of efron (1975) provides a detailed analysis.

section 9.2 of cox and hinkley (1974) gives a careful and wide-ranging
account of the id113 and fisher information. lehmann (1983) covers the
same ground, somewhat more technically, in his chapter 6.

5

parametric models and exponential families

we have been reviewing classic approaches to statistical id136   fre-
quentist, bayesian, and fisherian   with an eye toward examining their
strengths and limitations in modern applications. putting philosophical dif-
ferences aside, there is a common methodological theme in classical statis-
tics: a strong preference for low-dimensional parametric models; that is, for
modeling data-analysis problems using parametric families of id203
densities (3.1),

d  f(cid:22).x/i x 2

x ; (cid:22) 2 (cid:127)(cid:9) ;

f

(5.1)

where the dimension of parameter (cid:22) is small, perhaps no greater than 5
or 10 or 20. the inverted nomenclature    nonparametric    suggests the pre-
dominance of classical parametric methods.

two words explain the classic preference for parametric models: math-
ematical tractability. in a world of sliderules and slow mechanical arith-
metic, mathematical formulation, by necessity, becomes the computational
tool of choice. our new computation-rich environment has unplugged the
mathematical bottleneck, giving us a more realistic,    exible, and far-reach-
ing body of statistical techniques. but the classic parametric families still
play an important role in computer-age statistics, often assembled as small
parts of larger methodologies (as with the generalized linear models of
chapter 8). this chapter1 presents a brief review of the most widely used
parametric models, ending with an overview of exponential families, the
great connecting thread of classical theory and a player of continuing im-
portance in computer-age applications.

1 this chapter covers a large amount of technical material for use later, and may be

reviewed lightly at    rst reading.

53

54

parametric models

5.1 univariate families

univariate parametric families, in which the sample space x of observation
x is a subset of the real line r1, are the building blocks of most statistical
analyses. table 5.1 names and describes the    ve most familiar univariate
families: normal, poisson, binomial, gamma, and beta. (the chi-squared
distribution with n degrees of freedom (cid:31)2
n is also included since it is dis-

tributed as 2(cid:1) gam.n=2; 1/.) the normal distribution n .(cid:22); (cid:27) 2/ is a shifted
and scaled version of the n .0; 1/ distribution2 used in (3.27),

n .(cid:22); (cid:27) 2/ (cid:24) (cid:22) c (cid:27)n .0; 1/:

(5.2)

table 5.1 five familiar univariate densities, and their sample spaces x ,
parameter spaces (cid:127), and expectations and variances; chi-squared
distribution with n degrees of freedom is 2 gam.n=2; 1/.
name,
notation

expectation,

variance

density

x

(cid:127)

normal
n .(cid:22); (cid:27) 2/

poisson
poi.(cid:22)/

binomial
bi.n; (cid:25)/

gamma
gam.(cid:23); (cid:27) /

beta
be.(cid:23)1; (cid:23)2/

p

1

(cid:27)

2(cid:25)

2 . x(cid:0)(cid:22)
(cid:0) 1
(cid:27) /2

e

r1

(cid:22) 2 r1
(cid:27) 2 > 0

(cid:0)(cid:22)(cid:22)x

e

x  

f0; 1; : : :g

(cid:22) > 0

x  .n(cid:0)x/   (cid:25) x.1 (cid:0) (cid:25)/n(cid:0)x

n  

f0; 1; : : : ; ng 0 < (cid:25) < 1

x(cid:23)(cid:0)1e

(cid:0)x=(cid:27)
(cid:27) (cid:23)   .(cid:23)/

x (cid:21) 0

  .(cid:23)1/  .(cid:23)2/ x(cid:23)1(cid:0)1.1 (cid:0) x/(cid:23)2(cid:0)1 0   x   1
  .(cid:23)1c(cid:23)2/

(cid:23) > 0
(cid:27) > 0

(cid:23)1 > 0
(cid:23)2 > 0

(cid:22)
(cid:27) 2

(cid:22)
(cid:22)

n(cid:25)

n(cid:25).1 (cid:0) (cid:25)/

(cid:27) (cid:23)
(cid:27) 2(cid:23)

(cid:23)1=.(cid:23)1 c (cid:23)2/

.(cid:23)1c(cid:23)2/2.(cid:23)1c(cid:23)2c1/

(cid:23)1(cid:23)2

relationships abound among the table   s families. for instance, indepen-
dent gamma variables gam.(cid:23)1; (cid:27) / and gam.(cid:23)2; (cid:27) / yield a beta variate ac-
cording to

be.(cid:23)1; (cid:23)2/ (cid:24)

gam.(cid:23)1; (cid:27) /

gam.(cid:23)1; (cid:27) / c gam.(cid:23)2; (cid:27) /

:

(5.3)

the binomial and poisson are particularly close cousins. a bi.n; (cid:25)/ distri-
bution (the number of heads in n independent    ips of a coin with probabil-
2 the notation in (5.2) indicates that if x (cid:24) n .(cid:22); (cid:27) 2/ and y (cid:24) n .0; 1/ then x and
(cid:22) c (cid:27)y have the same distribution.

5.2 the multivariate normal distribution

55

figure 5.1 comparison of the binomial distribution bi.30; 0:2/
(black lines) with the poisson poi.6/ (red dots). in the legend we
show the mean and standard deviation for each distribution.

ity of heads (cid:25)) approaches a poi.n(cid:25)/ distribution,

bi.n; (cid:25)/ p(cid:24) poi.n(cid:25)/

(5.4)
as n grows large and (cid:25) small, the notation p(cid:24) indicating approximate equal-
ity of the two distributions. figure 5.1 shows the approximation already
working quite effectively for n d 30 and (cid:25) d 0:2.

the    ve families in table 5.1 have    ve different sample spaces, making
them appropriate in different situations. beta distributions, for example,
are natural candidates for modeling continuous data on the unit interval
  0; 1  . choices of the two parameters .(cid:23)1; (cid:23)2/ provide a variety of possible
shapes, as illustrated in figure 5.2. later we will discuss general exponen-
tial families, unavailable in classical theory, that greatly expand the catalog
of possible shapes.

5.2 the multivariate normal distribution

classical statistics produced a less rich catalog of multivariate distribu-
tions, ones where the sample space x exists in rp, p-dimensional eu-

0.000.050.100.150.20xf(x)llllllllllllllllll01234567891011121314151617lbinomial: (6, 2.19)poisson:  (6, 2.45)56

parametric models

figure 5.2 three beta densities, with .(cid:23)1; (cid:23)2/ indicated.

0

clidean space, p > 1. by far the greatest amount of attention focused on
the multivariate normal distribution.
a random vector x d .x1; x2; : : : ; xp/
mean vector

; normally distributed or not, has

(cid:22) d efxg d(cid:0)efx1g; efx2g; : : : ; efxpg(cid:1)0
0(cid:9) d(cid:0)e  .xi (cid:0) (cid:22)i /.xj (cid:0) (cid:22)j /(cid:9)(cid:1) :

and p (cid:2) p covariance matrix3

    d e  .x (cid:0) (cid:22)/.x (cid:0) (cid:22)/

(5.6)
0 of vectors u and v is the matrix having elements

(5.5)

(the outer product uv
ui vj .) we will use the convenient notation
x (cid:24) .(cid:22);    /

(5.7)
for (5.5) and (5.6), reducing to the familiar form x (cid:24) .(cid:22); (cid:27) 2/ in the uni-
variate case.

denoting the entries of     by (cid:27)ij , for i and j equaling 1; 2; : : : ; p, the

diagonal elements are variances,

(cid:27)i i d var.xi /:

(5.8)

3 the notation     d .(cid:27)ij / de   nes the ij th element of a matrix.

0.00.20.40.60.81.00.00.51.01.52.02.53.0xf(x)( n1,n2 )( 8, 4)( 2, 4)(.5,.5)5.2 the multivariate normal distribution

57

the off-diagonal elements relate to the correlations between the coordi-
nates of x,

cor.xi ; xj / d (cid:27)ijp

(cid:27)i i (cid:27)jj

:

(5.9)

the multivariate normal distribution extends the univariate de   nition
0 be a vector

n .(cid:22); (cid:27) 2/ in table 5.1. to begin with, let z d .z1; z2; : : : ; zp/
of p independent n .0; 1/ variates, with id203 density function

f .z/ d .2(cid:25)/

(cid:0) p
2 e

(cid:0) 1

2

i d .2(cid:25)/

(cid:0) p
2 e

(cid:0) 1
2 z

0

1 z2

z

(5.10)

pp

according to line 1 of table 5.1.
the multivariate normal family is obtained by linear transformations of
z: let (cid:22) be a p-dimensional vector and t a p (cid:2) p nonsingular matrix, and
de   ne the random vector

x d (cid:22) c t z:

following the usual rules of id203 transformations yields the density
of x,

f(cid:22);   .x/ d .2(cid:25)/

(cid:0)1.x(cid:0)(cid:22)/;
where     is the p (cid:2) p symmetric positive de   nite matrix

(cid:0) 1
2 .x(cid:0)(cid:22)/
0

e

   

(cid:0)p=2
j   j1=2

(5.11)

(5.12)

(5.13)

    d t t

0

and j   j its determinant;    f(cid:22);   .x/, the p-dimensional multivariate normal   1
distribution with mean (cid:22) and covariance    , is denoted

x (cid:24)

np.(cid:22);    /:

(5.14)
figure 5.3 illustrates the bivariate normal distribution with (cid:22) d .0; 0/
0
and     having (cid:27)11 d (cid:27)22 d 1 and (cid:27)12 d 0:5 (so cor.x1; x2/ d 0:5). the
bell-shaped mountain on the left is a plot of density (5.12). the right panel
shows a scatterplot of 2000 points drawn from this distribution. concentric
ellipses illustrate curves of constant density,

.x (cid:0) (cid:22)/
0

(cid:0)1.x (cid:0) (cid:22)/ d constant:

   

(5.15)

classical multivariate analysis was the study of the multivariate normal
distribution, both of its probabilistic and statistical properties. the notes
reference some important (and lengthy) multivariate texts. here we will
just recall a couple of results useful in the chapters to follow.

58

parametric models

figure 5.3 left: bivariate normal density, with var.x1/ d
var.x2/ d 1 and cor.x1; x2/ d 0:5. right: sample of 2000
.x1; x2/ pairs from this bivariate normal density.

  2

0

0

;

0 is partitioned into

suppose that x d .x1; x2; : : : ; xp/
x.1/ d .x1; x2; : : : ; xp1 /
and x.2/ d .xp1c1; xp1c2; : : : ; xp1cp2 /
  
!
p1 c p2 d p, with (cid:22) and     similarly partitioned,

 

!

    11    12

np

   21    22

(5.17)
(so    11 is p1 (cid:2) p1,    12 is p1 (cid:2) p2, etc.). then the conditional distribution
of x.2/ given x.1/ is itself normal,  
x.2/jx.1/ (cid:24)
11 .x.1/ (cid:0) (cid:22).1//;    22 (cid:0)    21   
(cid:0)1
if p1 d p2 d 1, then (5.18) reduces to

(cid:0)(cid:22).2/ c    21   

(cid:0)1
11    12

(cid:1) :

np2

(5.18)

 !

(cid:22).1/
(cid:22).2/

x.1/
x.2/

(5.16)

(cid:24)

;

x2jx1 (cid:24)

n

.x1 (cid:0) (cid:22)1/; (cid:27)22 (cid:0) (cid:27) 2

12
(cid:27)11

(5.19)

 
(cid:22)2 c (cid:27)12

(cid:27)11

 i

here (cid:27)12=(cid:27)11 is familiar as the id75 coef   cient of x2 as a func-
12=(cid:27)11(cid:27)22 equals cor.x1; x2/2, the squared proportion
tion of x1, while (cid:27) 2
r2 of the variance of x2 explained by x1. hence we can write the (unex-
plained) variance term in (5.19) as (cid:27)22.1 (cid:0) r2/.
bayesian statistics also makes good use of the normal family. it helps to
begin with the univariate case x (cid:24)
n .(cid:22); (cid:27) 2/, where now we assume that

x1x1x2x25.3 fisher   s information bound

59

the expectation vector itself has a normal prior distribution n .m; a/:

(cid:22) (cid:24)

n .m; a/

and xj(cid:22) (cid:24)

n .(cid:22); (cid:27) 2/:

(5.20)

bayes    theorem and some algebra show that the posterior distribution of (cid:22)
having observed x is normal,  

  3

 
m c a

 

(cid:22)jx (cid:24)

.x (cid:0) m /;

a(cid:27) 2
a c (cid:27) 2

n

a c (cid:27) 2

(5.21)
the posterior expectation o(cid:22)bayes d m c .a=.ac (cid:27) 2//.x(cid:0) m / is a shrink-
age estimator of (cid:22): if, say, a equals (cid:27) 2, then o(cid:22)bayes d m c .x (cid:0) m /=2
is shrunk half the way back from the unbiased estimate o(cid:22) d x toward the
prior mean m , while the posterior variance (cid:27) 2=2 of o(cid:22)bayes is only one-half
that of o(cid:22).

:

the multivariate version of the bayesian setup (5.20) is

(cid:22) (cid:24)

and xj(cid:22) (cid:24)

(5.22)
now with m and (cid:22) p-vectors, and a and     positive de   nite p(cid:2)p matrices.
as indicated in the notes, the posterior distribution of (cid:22) given x is then

np.(cid:22);    /;

np.m; a/

(cid:0)m c a.a c    /

(cid:22)jx (cid:24)

np

which reduces to (5.21) when p d 1.

(cid:0)1.x (cid:0) m /; a.a c    /

(5.23)

(cid:0)1   (cid:1) ;

5.3 fisher   s information bound for multiparameter families

the multivariate normal distribution plays its biggest role in applications
as a large-sample approximation for maximum likelihood estimates. we
suppose that the parametric family of densities ff(cid:22).x/g, normal or not, is
smoothly de   ned in terms of its p-dimensional parameter vector (cid:22). (in
terms of (5.1), (cid:127) is a subset of rp.)
the id113 de   nitions and results are direct analogues of the single-param-
eter calculations beginning at (4.14) in chapter 4. the score function p
lx.(cid:22)/
is now de   ned as the gradient of logff(cid:22).x/g,

 0

  log f(cid:22).x/(cid:9) d 
np

e(cid:22)

lx.(cid:22)/

: : : ;

@ log f(cid:22).x/

@(cid:22)i

o d 0 d .0; 0; 0; : : : ; 0/

0

; : : :

;

(5.24)

:

(5.25)

the p-vector of partial derivatives of log f(cid:22).x/ with respect to the coordi-
nates of (cid:22). it has mean zero,

p
lx.(cid:22)/ d r(cid:22)

parametric models

lx.(cid:22)/; using outer product notation,

60
by de   nition, the fisher information matrix i (cid:22) for (cid:22) is the p (cid:2) p covari-
ance matrix of p
np
i (cid:22) d e(cid:22)
(5.26)
the key result is that the id113 o(cid:22) d arg max(cid:22)ff(cid:22).x/g has an approxi-
mately normal distribution with covariance matrix i(cid:0)1
(cid:22) ,

(cid:26) @ log f(cid:22).x/

0o d 

@ log f(cid:22).x/

p
lx.(cid:22)/

(cid:27) 

lx.(cid:22)/

@(cid:22)j

@(cid:22)i

e(cid:22)

:

o(cid:22) p(cid:24)

np.(cid:22);i(cid:0)1

(cid:22) /:

(5.27)

approximation (5.27) is justi   ed by large-sample arguments, say with x
an iid sample in rp, .x1; x2; : : : ; xn/, n going to in   nity.
suppose the statistician is particularly interested in (cid:22)1, the    rst coordi-
nate of (cid:22). let (cid:22).2/ d .(cid:22)2; (cid:22)3; : : : ; (cid:22)p/ denote the other p (cid:0) 1 coordinates
of (cid:22), which are now    nuisance parameters    as far as the estimation of (cid:22)1
goes. according to (5.27), the id113 o(cid:22)1, which is the    rst coordinate of o(cid:22),
has

(cid:0)(cid:22)1; .i(cid:0)1

(cid:22) /11

(cid:1) ;

o(cid:22)1 p(cid:24)

n

(5.28)

where the notation indicates the upper leftmost entry of i(cid:0)1
(cid:22) .

we can partition the information matrix i (cid:22) into the two parts corre-

sponding to (cid:22)1 and (cid:22).2/,

 

i (cid:22) d 
(cid:22) /11 d(cid:0)

i(cid:22)11
i(cid:22)1.2/
i(cid:22).2/1 i (cid:22).22/

(5.29)
(cid:22).2/1 of dimension 1(cid:2).p(cid:0)1/ and i (cid:22).22/ .p(cid:0)1/(cid:2).p(cid:0)1/).
0
i
.i(cid:0)1

(cid:1)(cid:0)1

(5.30)

:

i(cid:22)11 (cid:0)

i(cid:22)1.2/i(cid:0)1

(cid:22).22/i(cid:22).2/1

(with i(cid:22)1.2/ d

  4

the endnotes show that  

the subtracted term on the right side of (5.30) is nonnegative, implying
that

.i(cid:0)1

(cid:22) /11 (cid:21)

(cid:0)1
i
(cid:22)11:

(5.31)

if (cid:22).2/ were known to the statistician, rather than requiring estimation,
then f(cid:22)1(cid:22).2/ .x/ would be a one-parameter family, with fisher information
i(cid:22)11 for estimating (cid:22)1, giving
o(cid:22)1 p(cid:24)

(5.32)

(cid:0)1
(cid:22)11/:

n .(cid:22)1;i

5.4 the multinomial distribution

61

comparing (5.28) with (5.32), (5.31) shows that the variance of the id113
o(cid:22)1 must always increase4 in the presence of nuisance parameters.  
maximum likelihood, and in fact any form of unbiased or nearly unbi-
ased estimation, pays a nuisance tax for the presence of    other    parameters.
modern applications often involve thousands of others; think of regression
   ts with too many predictors. in some circumstances, biased estimation
methods can reverse the situation, using the others to actually improve esti-
mation of a target parameter; see chapter 6 on empirical bayes techniques,
and chapter 16 on `1 regularized regression models.

  5

5.4 the multinomial distribution

second in the small catalog of well-known classic multivariate distribu-
tions is the multinomial. the multinomial applies to situations in which
the observations take on only a    nite number of discrete values, say l of
them. the 2(cid:2)2 ulcer surgery of table 4.1 is repeated in table 5.2, now with
the cells labeled 1; 2; 3; and 4. here there are l d 4 possible outcomes
for each patient: (new, success), (new, failure), (old, success),
(old, failure).

table 5.2 the ulcer study of table 4.1, now with the cells numbered 1
through 4 as shown.

success

failure

new

old

1

3

9

7

2

4

12

17

a number n of cases has been observed, n d 45 in table 5.2. let x d

.x1; x2; : : : ; xl/ be the vector of counts for the l possible outcomes,

xl d #fcases having outcome lg;

(5.33)
0 for the ulcer data. it is convenient to code the outcomes

x d .9; 12; 7; 17/
in terms of the coordinate vectors el of length l,
el d .0; 0; : : : ; 0; 1; 0; : : : ; 0/
0

;

(5.34)

with a 1 in the lth place.
4 unless i(cid:22)1.2/ is a vector of zeros, a condition that amounts to approximate
independence of o(cid:22)1 and o(cid:22).2/.

62

parametric models

figure 5.4 the simplex s3 is an equilateral triangle set at an
angle to the coordinate axes in r3.

(5.35)

(5.36)

the multinomial id203 model assumes that the n cases are inde-
pendent of each other, with each case having id203 (cid:25)l for outcome
el,

(cid:25)l d prfelg;

l d 1; 2; : : : ; l:

let

0

(cid:25) d .(cid:25)1; (cid:25)2; : : : ; (cid:25)l/
ly

n  

x1  x2   : : : xl  

ld1

f(cid:25) .x/ d

indicate the vector of probabilities. the count vector x then follows the
multinomial distribution,

denoted

(for n observations, l outcomes, id203 vector (cid:25)).

the parameter space (cid:127) for (cid:25) is the simplex sl,

x (cid:24) multl.n; (cid:25)/
lx

(
(cid:25) w (cid:25)l (cid:21) 0 and

ld1

)
(cid:25)l d 1

sl d

(cid:25) xl
l

;

(5.37)

(5.38)

:

(5.39)

figure 5.4 shows s3, an equilateral triangle sitting at an angle to the coordi-
nate axes e1; e2; and e3. the midpoint of the triangle (cid:25) d .1=3; 1=3; 1=3/

5.4 the multinomial distribution

63

corresponds to a multinomial distribution putting equal id203 on the
three possible outcomes.

figure 5.5 sample space x for x (cid:24) mult3.4; (cid:25)/; numbers

indicate .x1; x2; x3/.

the sample space x for x is the subset of nsl (the set of nonnegative
vectors summing to n) having integer components. figure 5.5 illustrates
the case n d 4 and l d 3, now with the triangle of figure 5.4 multiplied
by 4 and set    at on the page. the point 121 indicates x d .1; 2; 1/, with
id203 12 (cid:1) (cid:25)1(cid:25) 2
in the dichotomous case, l d 2, the multinomial distribution reduces
to the binomial, with .(cid:25)1; (cid:25)2/ equaling .(cid:25); 1 (cid:0) (cid:25)/ in line 3 of table 5.1,
and .x1; x2/ equaling .x; n (cid:0) x/. the mean vector and covariance matrix
of multl.n; (cid:25)/, for any value of l, are  

2 (cid:25)3 according to (5.37), etc.

x (cid:24)(cid:0)n(cid:25); n(cid:2)diag.(cid:25)/ (cid:0) (cid:25)(cid:25)

0(cid:3)(cid:1)

(5.40)
(diag.(cid:25)/ is the diagonal matrix with diagonal elements (cid:25)l), so var.xl / d
n(cid:25)l .1 (cid:0) (cid:25)l / and covariance .xl ; xj / d (cid:0)n(cid:25)l (cid:25)j ; (5.40) generalizes the
binomial mean and variance .n(cid:25); n(cid:25).1 (cid:0) (cid:25)//.

there is a useful relationship between the multinomial distribution and
the poisson. suppose s1; s2; : : : ; sl are independent poissons having pos-
sibly different parameters,

ind(cid:24) poi.(cid:22)l /;

sl

l d 1; 2; : : : ; l;

(5.41)

  6

or, more concisely,

with s d .s1; s2; : : : ; sl/

0 and (cid:22) d .(cid:22)1; (cid:22)2; : : : ; (cid:22)l/

(5.42)
0, the independence

s (cid:24) poi.(cid:22)/

103	
   202	
   301	
   004	
   400	
   211	
   121	
   112	
   310	
   220	
   130	
   040	
   031	
   022	
   013	
   being assumed in notation (5.42). then the conditional distribution of s

  7

parametric models

64

given the sum sc dp sl is multinomial,  
(cid:22)c dp (cid:22)l.

sjsc (cid:24) multl.sc; (cid:22)=(cid:22)c/;

(5.43)

going in the other direction, suppose n (cid:24) poi.n/. then the uncondi-

tional or marginal distribution of multl.n; (cid:25)/ is poisson,
if n (cid:24) poi.n/:

multl.n; (cid:25)/ (cid:24) poi.n(cid:25)/

(5.44)
calculations involving x (cid:24) multl.n; (cid:25)/ are sometimes complicated by
the multinomial   s correlations. the approximation x p(cid:24) poi.n(cid:25)/ removes
the correlations and is usually quite accurate if n is large.

there is one more important thing to say about the multinomial family: it
contains all distributions on a sample space x composed of l discrete cat-
egories. in this sense it is a model for nonparametric id136 on x . the
nonparametric bootstrap calculations of chapter 10 use the multinomial in
this way. nonparametrics, and the multinomial, have played a larger role
in the modern environment of large, dif   cult to model, data sets.

5.5 exponential families

classic parametric families dominated statistical theory and practice for a
century and more, with an enormous catalog of their individual properties   
means, variances, tail areas, etc.   being compiled. a surprise, though a
slowly emerging one beginning in the 1930s, was that all of them were
examples of a powerful general construction: exponential families. what
follows here is a brief introduction to the basic theory, with further devel-
opment to come in subsequent chapters.

to begin with, consider the poisson family, line 2 of table 5.1. the ratio

of poisson densities at two parameter values (cid:22) and (cid:22)0 is

  (cid:22)

 x

(cid:22)0

;

f(cid:22).x/
f(cid:22)0 .x/
which can be re-expressed as

d e

(cid:0).(cid:22)(cid:0)(cid:22)0/

f(cid:22).x/ d e  x(cid:0) .  /f(cid:22)0 .x/;

where we have de   ned

   d logf(cid:22)=(cid:22)0g

and  .  / d (cid:22)0.e   (cid:0) 1/:

looking at (5.46), we can describe the poisson family in three steps.

(5.45)

(5.46)

(5.47)

1x

e .  / d

5.5 exponential families

65

1 start with any one poisson distribution f(cid:22)0 .x/.
2 for any value of (cid:22) > 0 let    d logf(cid:22)=(cid:22)0g and calculate
for x d 0; 1; 2; : : : :

q
f(cid:22).x/ d e  xf(cid:22)0 .x/
3 finally, divide q
f(cid:22).x/ by exp. .  // to get the poisson density f(cid:22).x/.
in other words, we    tilt    f(cid:22)0 .x/ with the exponential factor e  x to get
q
f(cid:22).x/, and then renormalize q
f(cid:22).x/ to sum to 1. notice that (5.46) gives
exp.(cid:0) .  // as the renormalizing constant since

(5.48)

e  xf(cid:22)0 .x/:

(5.49)

0

figure 5.6 poisson densities for (cid:22) d 3; 6; 9; 12; 15; 18; heavy
green curve with dots for (cid:22) d 12.

figure 5.6 graphs the poisson density f(cid:22).x/ for (cid:22) d 3; 6; 9; 12; 15; 18.
each poisson density is a renormalized exponential tilt of any other poisson
density. so for instance f6.x/ is obtained from f12.x/ via the tilt e  x with
   d logf6=12g d (cid:0)0:693.5

5 alternate expressions for f(cid:22).x/ as an exponential family are available, for example
exp.  x (cid:0)  .  //f0.x/, where    d log (cid:22),  .  / d exp.  /, and f0.x/ d 1=x  . (it
isn   t necessary for f0.x/ to be a member of the family.)

0510152025300.000.050.100.150.20xf(x)llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllle .  / dz

x

 

.  1;   2/ d (cid:0) 1

66

parametric models

the poisson is a one-parameter exponential family, in that    and x in
expression (5.46) are one-dimensional. a p-parameter exponential family
has the form

f  .x/ d e  

0

y(cid:0) .  /f0.x/

(5.50)
where    and y are p-vectors and a is contained in rp. here    is the
   canonical    or    natural    parameter vector and y d t .x/ is the    suf   cient
statistic    vector. the normalizing function  .  /, which makes f  .x/ inte-
grate (or sum) to one, satis   es

for    2 a;

0

e  

yf0.x/ dx;

(5.51)

  8

and it can be shown that the parameter space a for which the integral is
   nite is a convex set    in rp. as an example, the gamma family on line 4
of table 5.1 is a two-parameter exponential family, with    and y d t .x/
given by

and

.y1; y2/ d .x; log x/ ;

; (cid:23)

;

(cid:27)

 .  / d (cid:23) log (cid:27) c log   .(cid:23)/

d (cid:0)  2 logf(cid:0)  1g c logf  .  2/g :

the parameter space a is f  1 < 0 and   2 > 0g.
why are we interested in exponential tilting rather than some other trans-
formational form? the answer has to do with repeated sampling. suppose
x d .x1; x2; : : : ; xn/ is an iid sample from a p-parameter exponential
family (5.50). then, letting yi d t .xi / denote the suf   cient vector corre-
sponding to xi,

(5.52)

(5.53)

(5.54)

f  .x/ d ny

0

yi(cid:0) .  /f0.xi /
e  
id1
d en.  
0 ny(cid:0) .  //f0.x/;

where ny dpn

1 yi =n. this is still a p-parameter exponential family, now
with natural parameter n  , suf   cient statistic ny, and normalizer n .  /.
no matter how large n may be, the statistician can still compress all the
inferential information into a p-dimensional statistic ny. only exponential
families enjoy this property.

even though they were discovered and developed in quite different con-
texts, and at quite different times, all of the distributions discussed in this

5.5 exponential families

67

chapter exist in exponential families. this isn   t quite the coincidence it
seems. mathematical tractability was the prized property of classic para-
metric distributions, and tractability was greatly facilitated by exponential
structure, even if that structure went unrecognized.

in one-parameter exponential families, the normalizer  .  / is also known
as the cumulant generating function. derivatives of  .  / yield the cumu-
lants of y,6 the    rst two giving the mean and variance  

  9

p .  / d e  fyg

r .  / d var  fyg:

and

similarly, in p-parametric families

and

p .  / d .: : : @ =@  j : : : /

0 d e  fyg

r .  / d  @2 .  /

  d cov  fyg:

@  j @  k

the p-dimensional expectation parameter, denoted

   d e  fyg;

(5.55)

(5.56)

(5.57)

(5.58)

is a one-to-one function of the natural parameter   . let v   indicate the
p (cid:2) p covariance matrix,

v   d cov  .y/:

then the p (cid:2) p derivative matrix of    with respect to    is

(5.59)

d  

d .@  j =@  k/ d v  ;

v

d  

(5.60)
this following from (5.56)   (5.57), the inverse mapping being d  =d   d
   . as a one-parameter example, the poisson in table 5.1 has    d log (cid:22),
(cid:0)1
   d (cid:22), y d x, and d  =d   d 1=.d  =d  / d (cid:22) d v  .
the maximum likelihood estimate for the expectation parameter    is
simply y (or ny under repeated sampling (5.54)), which makes it immediate
to calculate in most situations.   less immediate is the id113 for the natural   10
parameter   : the one-to-one mapping    d p .  / (5.56) has inverse    d
p 
(cid:0)1.  /, so

o   d p 

(cid:0)1.y/;

(5.61)
6 the simpli   ed dot notation leads to more compact expressions: p .  / d d .  /=d  
and r .  / d d 2 .  /=d  2.

parametric models

68
e.g., o   d log y for the poisson. the trouble is that p 
(cid:0)1.(cid:1)/ is usually un-
available in closed form. numerical approximation algorithms are neces-
sary to calculate o   in most cases.

all of the classic exponential families have closed-form expressions for
 .  / (and f  .x/), yielding pleasant formulas for the mean    and covar-
iance v  , (5.56)   (5.57). modern computational technology allows us to
work with general exponential families, designed for speci   c tasks, with-
out concern for mathematical tractability.

figure 5.7 a seven-parameter exponential family    t to the gfr
data of figure 2.1 (solid) compared with gamma    t of figure 4.1
(dashed).

as an example we again consider    tting the gfr data of figure 2.1.
for our exponential family of possible densities we take f0.x/   1, and
suf   cient statistic vector

y.x/ d .x; x2; : : : ; x7/;

0

(5.62)
y in (5.50) can represent all 7th-order polynomials in x, the gfr
so   
measurement.7 (stopping at power 2 gives the n .(cid:22); (cid:27) 2/ family, which we
already know    ts poorly from figure 4.1.) the heavy curve in figure 5.7
shows the id113    t fo  .x/ now following the gfr histogram quite closely.
chapter 10 discusses    lindsey   s method,    a simpli   ed algorithm for cal-
culating the id113 o  .

7 any intercept in the polynomial is absorbed into the  .  / term in (5.57).

 gfrfrequency20406080100051015202530gammaexponential family5.6 notes and details

69

a more exotic example concerns the generation of random graphs on a
   xed set of n nodes. each possible graph has a certain total number e of
edges, and t of triangles. a popular choice for generating such graphs is
the two-parameter exponential family having y d .e; t /, so that larger
values of   1 and   2 yield more connections.

5.6 notes and details

the notion of suf   cient statistics, ones that contain all available inferen-
tial information, was perhaps fisher   s happiest contribution to the classic
corpus. he noticed that in the exponential family form (5.50), the fact that
the parameter    interacts with the data x only through the factor exp.  
y/
makes y.x/ suf   cient for estimating   . in 1935   36, a trio of authors, work-
ing independently in different countries, pitman, darmois, and koopmans,
showed that exponential families are the only ones that enjoy    xed-dimen-
sional suf   cient statistics under repeated independent sampling. until the
late 1950s such distributions were called pitman   darmois   koopmans fam-
ilies, the long name suggesting infrequent usage.

0

generalized linear models, chapter 8, show the continuing impact of
suf   ciency on statistical practice. peter bickel has pointed out that data
compression, a lively topic in areas such as image transmission, is a mod-
ern, less stringent, version of suf   ciency.

our only nonexponential family so far was (4.39), the cauchy transla-
tional model. efron and hinkley (1978) analyze the cauchy family in terms
of curved exponential families, a generalization of model (5.50).

properties of classical distributions (lots of properties and lots of distri-
butions) are covered in johnson and kotz   s invaluable series of reference
books, 1969   1972. two classic multivariate analysis texts are anderson
(2003) and mardia et al. (1979).
(cid:0)1

(cid:0)1.x (cid:0) (cid:22)/ we have dz=dx d t

  1 [p. 57] formula (5.12). from z d t
2 jt
(cid:0) p

and
f(cid:22);   .x/ d f .z/jt
so (5.12) follows from t t

(cid:0)1j d .2(cid:25)/

2 .x(cid:0)(cid:22)/
(cid:0) 1
0
0 d     and jt j d j   j1=2.

  d

 (cid:0)   11 (cid:0)    12   

   11   12

  2 [p. 58] formula (5.18). let    d    
(cid:0)1 be partitioned as in (5.17). then
(cid:0)1
22    21

(cid:1)(cid:0)1
(5.64)
direct multiplication showing that       d i, the identity matrix. if     is

(cid:0)   22 (cid:0)    21   

(cid:0)1
22    21  11

(cid:0)1
11    12  22

(cid:0)1
11    12

  21   22

(cid:0)   

(cid:0)   

!

;

0

(cid:0)1

t

(cid:0)1.x(cid:0)(cid:22)/;

(5.63)

t

(cid:0)1je
(cid:1)(cid:0)1

parametric models
70
symmetric then   21 d   
12. by rede   ning x to be x (cid:0) (cid:22) we can set (cid:22).1/
0
and (cid:22).2/ equal to zero in (5.18). the quadratic form in the exponent of
(5.12) is

.2//  (cid:0)x.1/; x.2/
(cid:1) d x
(cid:0)x.2/ (cid:0)    21   

.1/  12x.2/ c x
0
(cid:1)
but, using (5.64), this matches the quadratic form from (5.18),

.2/  22x.2/ c 2x
0
(cid:1)0

(cid:0)x.2/ (cid:0)    21   

0
.1/  11x.1/:

0
.1/; x

(5.65)

(5.66)

(cid:0)1
11 x.1/

(cid:0)1
11 x.1/

  22

.x

0

except for an added term that does not involve x.2/. for a multivariate nor-
mal distribution, this is suf   cient to show that the conditional distribution
of x.2/ given x.1/ is indeed (5.18) (see   3).

  3 [p. 59] formulas (5.21) and (5.23). suppose that the continuous univariate

random variable z has density of the form

f .z/ d c0e

(cid:0) 1
2 q.z/;

where q.z/ d az2 c 2bz c c1;

(5.67)

a; b; c0 and c1 constants, a > 0. then, by    completing the square,   

f .z/ d c2e

2 a.z(cid:0) b
(cid:0) 1

a /2

;

(5.68)
and we see that z (cid:24)
n .b=a; 1=a/. the key point is that form (5.67) spec-
i   es z as normal, with mean and variance uniquely determined by a and
b. the multivariate version of this fact was used in the derivation of for-
mula (5.18).
by rede   ning (cid:22) and x as (cid:22) (cid:0) m and x (cid:0) m , we can take m d 0 in
(5.21). setting b d a=.a c (cid:27) 2/, density (5.21) for (cid:22)jx is of form (5.67),
with

q.(cid:22)/ d (cid:22)2

(cid:0) 2x(cid:22)
(cid:27) 2

c bx2
(cid:27) 2

(5.69)
but bayes    rule says that the density of (cid:22)jx is proportional to g.(cid:22)/f(cid:22).x/,
also of form (5.67), now with

b(cid:27) 2

:

q.(cid:22)/ d  1

 

c 1
(cid:27) 2

a

(cid:22)2 (cid:0) 2x(cid:22)

(cid:27) 2

c x2
(cid:27) 2

:

(5.70)

a little algebra shows that the quadratic and linear coef   cients of (cid:22) match
in (5.69)   (5.70), verifying (5.21).

we verify the multivariate result (5.23) using a different argument. the

2p vector .(cid:22); x/

0 has joint distribution

  m

 

 a

n

;

a

a a c    

m

  

:

(5.71)

5.6 notes and details

71

now we employ (5.18) and a little manipulation to get (5.23).

  4 [p. 60] formula (5.30). this is the matrix identity (5.64), now with    

equaling i(cid:22).
  5 [p. 61] multivariate gaussian and nuisance parameters. the cautionary
message here   that increasing the number of unknown nuisance parame-
ters decreases the accuracy of the estimate of interest   can be stated more
positively: if some nuisance parameters are actually known, then the id113
of the parameter of interest becomes more accurate. suppose, for example,
we wish to estimate (cid:22)1 from a sample of size n in a bivariate normal model
x (cid:24)
n2.(cid:22);    / (5.14). the id113 nx1 has variance (cid:27)11=n in notation (5.19).
but if (cid:22)2 is known then the id113 of (cid:22)1 becomes nx1 (cid:0) .(cid:27)12=(cid:27)22/.nx2 (cid:0) (cid:22)2/
p
with variance .(cid:27)11=n/ (cid:1) .1 (cid:0) (cid:26)2/, (cid:26) being the correlation (cid:27)12=
id1 xi, where the xi are iid observations
having prfxi d eig d (cid:25)l, as in (5.35). the mean and covariance of each
xi are

  6 [p. 63] formula (5.40). x d pn
efxig d lx

(cid:25)l el d (cid:25)

(cid:27)11(cid:27)22.

(5.72)

1

g dx

and

0

(cid:0) (cid:25)(cid:25)

0

covfxig d efxi x

0

g (cid:0) efxigefx

0

i

i

0

(cid:25)l el e
l

d diag.(cid:25)/ (cid:0) (cid:25)(cid:25)

formula (5.40) follows from efxg dp efxig and cov.x/ dp cov.xi /.
  7 [p. 64] formula (5.43). the densities of s (5.42) and sc dp sl are
f(cid:22).s / d ly

scc =sc  :
(cid:22)

(cid:0)(cid:22)l (cid:22)sl

(5.74)

(5.73)

(cid:0)(cid:22)c

e

:

l =sl   

ld1

the conditional density of s given sc is the ratio

and f(cid:22)c .sc/ d e
 
sc  ql

! ly

  (cid:22)l

(cid:22)c

1 sl   

ld1

 sl

;

(5.75)

f(cid:22).sjsc/ d

which is (5.43).

  8 [p. 66] formula (5.51) and the convexity of a. suppose   1 and   2 are any
two points in a, i.e., values of    having the integral in (5.51)    nite. for any
value of c in the interval   0; 1  , and any value of y, we have

0

1y c .1 (cid:0) c/e  

0

2y (cid:21) e  c  1c.1(cid:0)c/  2  

ce  

(5.76)
because of the convexity in c of the function on the right (veri   ed by show-
ing that its second derivative is positive). integrating both sides of (5.76)

y

0

parametric models

72
over x with respect to f0.x/ shows that the integral on the right must be
   nite: that is, c  1 c .1 (cid:0) c/  2 is in a, verifying a   s convexity.
  9 [p. 67] formula (5.55). in the univariate case, differentiating both sides of

(5.51) with respect to    gives

(5.77)
dividing by e .  / shows that p .  / d e  fyg. differentiating (5.77) again
gives

ye  yf0.x/ dxi

p .  /e .  / dz
(cid:0) r .  / c p .  /2(cid:1) e .  / dz

x

y2e  yf0.x/ dx;

(5.78)

x

or

(5.79)

r .  / d e  fy2g (cid:0) e  fyg2 d var  fyg:
y (cid:0)  .  /(cid:1) d y (cid:0) p .  / d y (cid:0) e  fy
(cid:0)  

0

successive derivatives of  .  / yield the higher cumulants of y, its skew-
ness, kurtosis, etc.

  10 [p. 67] id113 for   . the gradient with respect to    of log f  .y/ (5.50) is

(cid:3)g;
r  
(cid:3)
(cid:3) represents a hypothetical realization y.x
(5.56), where y
f  .(cid:1)/. we achieve the id113 o   at ro   d 0, or
(cid:3)g d y:

eo  fy

(5.81)
in other words the id113 o   is the value of    that makes the expectation
(cid:3)g match the observed y. thus (5.58) implies that the id113 of pa-
e  fy
rameter    is y.

/ drawn from

(5.80)

part ii

early computer-age methods

6

empirical bayes

the constraints of slow mechanical computation molded classical statistics
into a mathematically ingenious theory of sharply delimited scope. emerg-
ing after the second world war, electronic computation loosened the com-
putational stranglehold, allowing a more expansive and useful statistical
methodology.

some revolutions start slowly. the journals of the 1950s continued to
emphasize classical themes: pure mathematical development typically cen-
tered around the normal distribution. change came gradually, but by the
1990s a new statistical technology, computer enabled, was    rmly in place.
key developments from this period are described in the next several chap-
ters. the ideas, for the most part, would not startle a pre-war statistician,
but their computational demands, factors of 100 or 1000 times those of
classical methods, would. more factors of a thousand lay ahead, as will be
told in part iii, the story of statistics in the twenty-   rst century.

empirical bayes methodology, this chapter   s topic, has been a particu-
larly slow developer despite an early start in the 1940s. the roadblock here
was not so much the computational demands of the theory as a lack of ap-
propriate data sets. modern scienti   c equipment now provides ample grist
for the empirical bayes mill, as will be illustrated later in the chapter, and
more dramatically in chapters 15   21.

6.1 robbins    formula

table 6.1 shows one year of claims data for a european automobile insur-
ance company; 7840 of the 9461 policy holders made no claims during the
year, 1317 made a single claim, 239 made two claims each, etc., with ta-
ble 6.1 continuing to the one person who made seven claims. of course the
insurance company is concerned about the claims each policy holder will
make in the next year.

bayes    formula seems promising here. we suppose that xk, the number

75

76

empirical bayes

table 6.1 counts yx of number of claims x made in a single year by
9461 automobile insurance policy holders. robbins    formula (6.7)
estimates the number of claims expected in a succeeding year, for instance
0:168 for a customer in the x d 0 category. parametric maximum
likelihood analysis based on a gamma prior gives less noisy estimates.

claims x
counts yx
formula (6.7)
gamma id113

0

7840
.168
.164

1

1317
.363
.398

2

239
.527
.633

3

42
1.33
.87

4

14
1.43
1.10

5

4
6.00
1.34

6

4
1.75
1.57

7

1

of claims to be made in a single year by policy holder k, follows a poisson
distribution with parameter  k,

prfxk d xg d p k .x/ d e

(cid:0) k   x

(6.1)
for x d 0; 1; 2; 3; : : : ;  k is the expected value of xk. a good customer,
from the company   s point of view, has a small value of  k, though in any
one year his or her actual number of accidents xk will vary randomly ac-
cording to id203 density (6.1).

k =x  ;

suppose we knew the prior density g.  / for the customers      values.

then bayes    rule (3.5) would yield

ef jxg d

0  p  .x/g.  / d 
0 p  .x/g.  / d 

(6.2)

for the expected value of   of a customer observed to make x claims in a
single year. this would answer the insurance company   s question of what
number of claims x to expect the next year from the same customer, since
ef jxg is also efxjxg (  being the expectation of x).

formula (6.2) is just the ticket if the prior g.  / is known to the company,
but what if it is not? a clever rewriting of (6.2) provides a way forward.
using (6.1), (6.2) becomes

ef jxg d

0

(cid:2)e
(cid:0)    xc1=x  (cid:3) g.  / d 
r 1
(cid:0)    x=x  (cid:3) g.  / d 
(cid:2)e
r 1
(cid:2)e
(cid:0)    xc1=.x c 1/  (cid:3) g.  / d 
d .x c 1/r 1
(cid:0)    x=x  (cid:3) g.  / d 
(cid:2)e
r 1

0

0

0

(6.3)

:

r 1
r 1

the marginal density of x, integrating p  .x/ over the prior g.  /, is

6.1 robbins    formula

f .x/ dz 1

p  .x/g.  / d  dz 1

h

i

(cid:0)    x=x  

e

g.  / d :

(6.4)

77

0

0

comparing (6.3) with (6.4) gives robbins    formula,

ef jxg d .x c 1/f .x c 1/=f .x/:

(6.5)

the surprising and gratifying fact is that, even with no knowledge of the
prior density g.  /, the insurance company can estimate ef jxg (6.2) from
formula (6.5). the obvious estimate of the marginal density f .x/ is the
proportion of total counts in category x,

o

f .x/ d yx=n; with n dp
f .x c 1/   o

o
f .0/ d 7840=9461,
version of robbins    formula,
o

oef jxg d .x c 1/

(6.6)
o
f .1/ d 1317=9461, etc. this yields an empirical

x yx; the total count;

f .x/ d .x c 1/yxc1=yx;

(6.7)
the    nal expression not requiring n . table 6.1 gives oef j0g d 0:168:
customers who made zero claims in one year had expectation 0.168 of a
claim the next year; those with one claim had expectation 0.363, and so on.
robbins    formula came as a surprise1 to the statistical world of the
1950s: the expectation ef kjxkg for a single customer, unavailable without
the prior g.  /, somehow becomes available in the context of a large study.
the terminology empirical bayes is apt here: bayesian formula (6.5) for a
single subject is estimated empirically (i.e., frequentistically) from a col-
lection of similar cases. the crucial point, and the surprise, is that large
data sets of parallel situations carry within them their own bayesian in-
formation. large parallel data sets are a hallmark of twenty-   rst-century
scienti   c investigation, promoting the popularity of empirical bayes meth-
ods.

formula (6.7) goes awry at the right end of table 6.1, where it is destabi-
lized by small count numbers. a parametric approach gives more depend-
able results: now we assume that the prior density g.  / for the customers   
 k values has a gamma form (table 5.1)

g.  / d   (cid:23)(cid:0)1e

(cid:0) =(cid:27)

for   (cid:21) 0;

(6.8)
but with parameters (cid:23) and (cid:27) unknown. estimates .o(cid:23); o(cid:27) / are obtained by

(cid:27) (cid:23)  .(cid:23)/

;

1 perhaps it shouldn   t have; estimation methods similar to (6.7) were familiar in the

actuarial literature.

78

empirical bayes

maximum likelihood    tting to the counts yx, yielding a parametrically es-
timated marginal density  

  1

o
f .x/ d fo(cid:23);o(cid:27) .x/;
or equivalently oyx d nfo(cid:23);o(cid:27) .x/.

(6.9)

figure 6.1 auto accident data; log(counts) vs claims for 9461
auto insurance policies. the dashed line is a gamma id113    t.

the bottom row of table 6.1 gives parametric estimates eo(cid:23);o(cid:27)f jxg d
.x c 1/ oyxc1= oyx, which are seen to be less eccentric for large x. figure 6.1
compares (on the log scale) the raw counts yx with their parametric cousins
oyx.

6.2 the missing-species problem

the very    rst empirical bayes success story related to the butter   y data of
table 6.2. even in the midst of world war ii alexander corbet, a leading
naturalist, had been trapping butter   ies for two years in malaysia (then
malaya): 118 species were so rare that he had trapped only one specimen
each, 74 species had been trapped twice each, table 6.2 going on to show
that 44 species were trapped three times each, and so on. some of the more

012345670246810claimslog(counts)llllllll6.2 the missing-species problem

79

common species had appeared hundreds of times each, but of course corbet
was interested in the rarer specimens.

table 6.2 butter   y data; number y of species seen x times each in two
years of trapping; 118 species trapped just once, 74 trapped twice each,
etc.

x

y

x

y

1

118

13

6

2

74

14

12

3

44

15

6

4

24

16

9

5

29

17

9

6

22

18

6

7

20

19

10

8

19

20

10

9

20

21

11

10

15

22

5

11

12

23

3

12

14

24

3

corbet then asked a seemingly impossible question: if he trapped for one
additional year, how many new species would he expect to capture? the
question relates to the absent entry in table 6.2, x d 0, the species that
haven   t been seen yet. do we really have any evidence at all for answering
corbet? fortunately he asked the right man: r. a. fisher, who produced a
surprisingly satisfying solution for the    missing-species problem.   

suppose there are s species in all, seen or unseen, and that xk, the num-
ber of times species k is trapped in one time unit,2 follows a poisson dis-
tribution with parameter  k as in (6.1),

xk (cid:24) poi. k/;

for k d 1; 2; : : : ; s:

the entries in table 6.2 are

yx d #fxk d xg;

for x d 1; 2; : : : ; 24;

(6.10)

(6.11)

the number of species trapped exactly x times each.

now consider a further trapping period of t time units, t d 1=2 in cor-
bet   s question, and let xk.t / be the number of times species k is trapped in
the new period. fisher   s key assumption is that
xk.t / (cid:24) poi. kt /

(6.12)

independently of xk. that is, any one species is trapped independently over
time3 at a rate proportional to its parameter  k.

the id203 that species k is not seen in the initial trapping period

2 one time unit equals two years in corbet   s situation.
3 this is the de   nition of a poisson process.

80
but is seen in the new period, that is xk d 0 and xk.t / > 0, is

empirical bayes

so that e.t /, the expected number of new species seen in the new trapping
period, is

(6.13)

:

(6.14)

;

(cid:0) k t 
1 (cid:0) e
(cid:16)
1 (cid:0) e

(cid:0) k

e

(cid:0) k

(cid:16)
e.t / d sx
z 1
(cid:0) (cid:16)

kd1

e

(cid:0) k t 
(cid:0)  t 

it is convenient to write (6.14) as an integral,
1 (cid:0) e

e.t / d s

e

0

g.  / d ;

(6.15)

e

(cid:0)  t gives

z 1
expanding 1 (cid:0) e
e.t / d s

where g.  / is the    empirical density    putting id203 1=s on each of
the  k values. (later we will think of g.  / as a continuous prior density on
the possible  k values.)

(cid:0) (cid:2)  t (cid:0) .  t /2=2   c .  t /3=3   (cid:0) (cid:1)(cid:1)(cid:1)(cid:3) g.  / d :
ex d efyxg d sx
h

notice that the expected value ex of yx is the sum of the probabilities of
being seen exactly x times in the initial period,
(cid:0) k   x

z 1

(6.16)

k =x  

i

e

0

kd1
(cid:0)    x=x  

e

d s

g.  / d :

0

comparing (6.16) with (6.17) provides a surprising result,

e.t / d e1t (cid:0) e2t 2 c e3t 3 (cid:0) (cid:1)(cid:1)(cid:1) :

we don   t know the ex values but, as in robbins    formula, we can esti-

mate them by the yx values, yielding an answer to corbet   s question,

oe.t / d y1t (cid:0) y2t 2 c y3t 3 (cid:0) (cid:1)(cid:1)(cid:1) :

corbet speci   ed t d 1=2, so4

oe.1=2/ d 118.1=2/ (cid:0) 74.1=2/2 c 44.1=2/3 (cid:0) (cid:1)(cid:1)(cid:1)

(6.17)

(6.18)

(6.19)

(6.20)

d 45:2:

4 this may have been discouraging; there were no new trapping results reported.

6.2 the missing-species problem

81

table 6.3 expectation (6.19) and its standard error (6.21) for the number
of new species captured in t additional fractional units of trapping time.

t

e.t /

bsd.t /

0.0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1.0

0 11.10 20.96 29.79 37.79 45.2 52.1 58.9 65.6 71.6 75.0
8.95 11.2 13.4 15.7 17.9 20.1 22.4
0

2.24

4.48

6.71

  2

  3

formulas (6.18) and (6.19) do not require the butter   ies to arrive inde-
pendently. if we are willing to add the assumption that the xk   s are mutually
independent, we can calculate  

  24x

bsd.t / d

!1=2

as an approximate standard error for oe.t /. table 6.3 shows oe.t / andbsd.t /
for t d 0; 0:1; 0:2; : : : ; 1; in particular,

xd1

yxt 2x

(6.21)

oe.0:5/ d 45:2    11:2:

(6.22)

(cid:0)(cid:23)g  .(cid:13) (cid:23)/;

formula (6.19) becomes unstable for t > 1. this is our price for sub-
stituting the nonparametric estimates yx for ex in (6.18). fisher actually
answered corbet using a parametric empirical bayes model in which the
prior g.  / for the poisson parameters  k (6.12) was assumed to be of the
gamma form (6.8). it can be shown   that then e.t / (6.15) is given by

e.t / d e1 f1 (cid:0) .1 c (cid:13) t /

(6.23)
where (cid:13) d (cid:27)=.1 c (cid:27) /. taking oe1 d y1, id113
gave

o(cid:23) d 0:104 and

o(cid:27) d 89:79:

(6.24)
figure 6.2 shows that the parametric estimate of e.t / (6.23) using oe1,
o(cid:23), and o(cid:27) is just slightly greater than the nonparametric estimate (6.19) over
the range 0   t   1. fisher   s parametric estimate, however, gives reason-
able results for t > 1, oe.2/ d 123 for instance, for a future trapping period
of 2 units (4 years).    reasonable    does not necessarily mean dependable.
the gamma prior is a mathematical convenience, not a fact of nature; pro-
jections into the far future fall into the category of educated guessing.

the missing-species problem encompasses more than butter   ies. there
are 884,647 words in total in the recognized shakespearean canon, of which
14,376 are so rare they appear just once each, 4343 appear twice each, etc.,

82

empirical bayes

figure 6.2 butter   y data; expected number of new species in t
units of additional trapping time. nonparametric    t (solid)    1
standard deviation; gamma model (dashed).

table 6.4 shakespeare   s word counts; 14,376 distinct words appeared
once each in the canon, 4343 distinct words twice each, etc. the canon
has 884,647 words in total, counting repeats.

1
0c 14376
10c
305
20c
104
30c
73
40c
49
50c
25
60c
30
70c
13
80c
13
90c
4

2

4343
259
105
47
41
19
19
12
12
7

3

2292
242
99
56
30
28
21
10
11
6

4

1463
223
112
59
35
27
18
16
8
7

5

1043
187
93
53
37
31
15
18
10
10

6

837
181
74
45
21
19
10
11
11
10

7

638
179
83
34
41
19
15
8
7
15

8

519
130
76
49
30
22
14
15
12
7

9

430
127
72
45
28
23
11
12
9
7

10

364
128
63
52
19
14
16
7
8
5

as in table 6.4, which goes on to the    ve words appearing 100 times each.
all told, 31,534 distinct words appear (including those that appear more
than 100 times each), this being the observed size of shakespeare   s vocab-
ulary. but what of the words shakespeare knew but didn   t use? these are
the    missing species    in table 6.4.

0.00.20.40.60.81.0020406080time te^(t) gamma model  e^(2) = 123e^(4) = 176e^(8) = 2336.2 the missing-species problem

83

suppose another quantity of previously unknown shakespeare manu-
scripts was discovered, comprising 884647 (cid:1) t words (so t d 1 would rep-
resent a new canon just as large as the old one). how many previously
unseen distinct words would we expect to discover?

employing formulas (6.19) and (6.21) gives

11430    178

(6.25)
for the expected number of distinct new words if t d 1. this is a very con-
servative lower bound on how many words shakespeare knew but didn   t
use. we can imagine t rising toward in   nity, revealing ever more unseen
vocabulary. formula (6.19) fails for t > 1, and fisher   s gamma assump-
tion is just that, but more elaborate empirical bayes calculations give a    rm
lower bound of 35; 000c on shakespeare   s unseen vocabulary, exceeding
the visible portion!

missing mass is an easier version of the missing-species problem, in
which we only ask for the proportion of the total sum of  k values corre-
sponding to the species that went unseen in the original trapping period,

the numerator has expectation

(cid:30)x
m d x
z 1

unseen

 k

all

(cid:0) k d s

 e

0

 k:

(cid:0)  g.  / d e1

(x

)

 ke

x
 k dx

all

x

as in (6.17), while the expectation of the denominator is

efxsg d e

d efng;

(6.28)

xs

all

all

all

where n is the total number of butter   ies trapped. the obvious missing-
mass estimate is then

om d y1=n:

for the shakespeare data,

om d 14376=884647 d 0:016:

we have seen most of shakespeare   s vocabulary, as weighted by his usage,
though not by his vocabulary count.

all of this seems to live in the rare   ed world of mathematical abstrac-
tion, but in fact some previously unknown shakespearean work might have

(6.26)

(6.27)

(6.29)

(6.30)

84

empirical bayes

been discovered in 1985. a short poem,    shall i die?,    was found in the
archives of the bodleian library and, controversially, attributed to shake-
speare by some but not all experts.

the poem of 429 words provided a new    trapping period    of length only

t d 429=884647 d 4:85 (cid:1) 10

(cid:0)4;

and a prediction from (6.19) of

eftg d 6:97

(6.31)

(6.32)

new    species,    i.e., distinct words not appearing in the canon. in fact there
were nine such words in the poem. similar empirical bayes predictions
for the number of words appearing once each in the canon, twice each,
etc., showed reasonable agreement with the poem   s counts, but not enough
to sti   e doubters.    shall i die?    is currently grouped with other canonical
apocrypha by a majority of experts.

6.3 a medical example

the reader may have noticed that our examples so far have not been par-
ticularly computer intensive; all of the calculations could have been (and
originally were) done by hand.5 this section discusses a medical study
where the empirical bayes analysis is more elaborate.
cancer surgery sometimes involves the removal of surrounding lymph
nodes as well as the primary target at the site. figure 6.3 concerns n d 844
surgeries, each reporting
n d # nodes removed

and x d # nodes found positive;

(6.33)

   positive    meaning malignant. the ratios

pk d xk=nk;

k d 1; 2; : : : ; n;

(6.34)

are described in the histogram. a large proportion of them, 340=844 or
40%, were zero, the remainder spreading unevenly between zero and one.
the denominators nk ranged from 1 to 69, with a mean of 19 and standard
deviation of 11.

we suppose that each patient has some true id203 of a node being

5 not so collecting the data. corbet   s work was pre-computer but shakespeare   s word

counts were done electronically. twenty-   rst-century scienti   c technology excels at the
production of the large parallel-structured data sets conducive to empirical bayes
analysis.

6.3 a medical example

85

figure 6.3 nodes study; ratio p d x=n for 844 patients; n d
number of nodes removed, x d number positive.

positive, say id203  k for patient k, and that his or her nodal results
occur independently of each other, making xk binomial,

xk (cid:24) bi.nk;  k/:
this gives pk d xk=nk with mean and variance

pk (cid:24) . k;  k.1 (cid:0)  k/=nk/ ;

(6.35)

(6.36)

so that  k is estimated more accurately when nk is large.

a bayesian analysis would begin with the assumption of a prior density

g.  / for the  k values,

 k (cid:24) g.  /;

for k d 1; 2; : : : ; n d 844:

(6.37)

we don   t know g.  /, but the parallel nature of the nodes data set   844
similar cases   suggests an empirical bayes approach. as a    rst try for the
nodes study, we assume that logfg.  /g is a fourth-degree polynomial in  ,

logfg  .  /g d a0 c 4x

jd1

  j   ji

(6.38)

 p = x/nfrequency0.00.20.40.60.81.0020406080100*34086
g  .  / is determined by the parameter vector    d .  1;   2;   3;   4/ since,
given   , a0 can be calculated from the requirement that

empirical bayes

z 1

0

)

(
a0 c 4x

g  .  / d  d 1 dz 1
 
!
f  .xk/ dz 1
  xk .1 (cid:0)   /nk(cid:0)xk g  .  / d :

  j   j

exp

d :

0

1

nk
xk

0

for a given choice of   , let f  .xk/ be the marginal id203 of the

observed value xk for patient k,

(6.39)

(6.40)

the maximum likelihood estimate of    is the maximizer

( nx

kd1

o   d arg max

  

)

log f  .xk/

:

(6.41)

figure 6.4 estimated prior density g.  / for the nodes study;
59% of patients have     0:2, 7% have   (cid:21) 0:8.

figure 6.4 graphs go  .  /, the empirical bayes estimate for the prior dis-
tribution of the  k values. the huge spike at zero in figure 6.3 is now
reduced: prf k   0:01g d 0:12 compared with the 38% of the pk values

0.00.20.40.60.81.00.000.020.040.060.080.100.12qg^(q)    sd6.3 a medical example

87

z 1:00

go  .  / d  d 0:59 compared with

less than 0.01. small   values are still the rule though, for instance

z 0:20
go  .  / d  d 0:07: (6.42)
the vertical bars in figure 6.4 indicate    one standard error for the es-
timation of g.  /. the curve seems to have been estimated very accurately,
at least if we assume the adequacy of model (6.37). chapter 21 describes
the computations involved in figure 6.4.

0:80

0

the posterior distribution of  k given xk and nk is estimated according

to bayes    rule (3.5) to be

 
og. jxk; nk/ d go  .  /

!
  xk .1 (cid:0)   /nk(cid:0)xk

(cid:30)

fo  .xk/;

(6.43)

nk
xk

with fo  .xk/ from (6.40).

figure 6.5 empirical bayes posterior densities of   for three
patients, given x d number of positive nodes, n d number of
nodes.

figure 6.5 graphs og. jxk; nk/ for three choices of .xk; nk/: .7; 32/, .3; 6/,
and .17; 18/. if we take   (cid:21) 0:50 as indicating poor prognosis (and sug-
gesting more aggressive follow-up therapy), then the    rst patient is almost
surely on safe ground, the third patient almost surely needs more follow-up
therapy and the situation of the second is uncertain.

0.00.20.40.60.81.00246qg(q | x, n)x=7 n=32x=17 n=18x=3 n=60.588

empirical bayes

6.4 indirect evidence 1

a good de   nition of a statistical argument is one in which many small
pieces of evidence, often contradictory, are combined to produce an overall
conclusion. in the clinical trial of a new drug, for instance, we don   t expect
the drug to cure every patient, or the placebo to always fail, but eventually
perhaps we will obtain convincing evidence of the new drug   s ef   cacy.

the clinical trial is collecting direct statistical evidence, in which each
subject   s success or failure bears directly upon the question of interest. di-
rect evidence, interpreted by frequentist methods, was the dominant mode
of statistical application in the twentieth century, being strongly connected
to the idea of scienti   c objectivity.

bayesian id136 provides a theoretical basis for incorporating indi-
rect evidence, for example the doctor   s prior experience with twin sexes in
section 3.1. the assertion of a prior density g.  / amounts to a claim for
the relevance of past data to the case at hand.

empirical bayes removes the bayes scaffolding. in place of a reassuring
prior g.  /, the statistician must put his or her faith in the relevance of the
   other    cases in a large data set to the case of direct interest. for the second
patient in figure 6.5, the direct estimate of his   value is o
  d 3=6 d 0:50.
the empirical bayes estimate is a little less,

  og. jxk d 3; nk d 6/ d 0:446:

(6.44)

0

a small difference, but we will see bigger ones in succeeding chapters.

the changes in twenty-   rst-century statistics have largely been demand
driven, responding to the massive data sets enabled by modern scienti   c
equipment. philosophically, as opposed to methodologically, the biggest
change has been the increased acceptance of indirect evidence, especially
as seen in empirical bayes and objective (   uninformative   ) bayes appli-
cations. false-discovery rates, chapter 15, provide a particularly striking
shift from direct to indirect evidence in hypothesis testing. indirect evi-
dence in estimation is the subject of our next chapter.

6.5 notes and details

robbins (1956) introduced the term    empirical bayes    as well as rule (6.7)
as part of a general theory of empirical bayes estimation. 1956 was also the
publication year for good and toulmin   s solution (6.19) to the missing-
species problem. good went out of his way to credit his famous bletchley

  eb dz 1

o

6.5 notes and details

89

colleague alan turing for some of the ideas. the auto accident data is taken
from table 3.1 of carlin and louis (1996), who provide a more complete
discussion. empirical bayes estimates such as 11430 in (6.25) do not de-
pend on independence among the    species,    but accuracies such as   178
do; and similarly for the error bars in figures 6.2 and 6.4.

corbet   s enormous efforts illustrate the dif   culties of amassing large
data sets in pre-computer times. dependable data is still hard to come by,
but these days it is often the statistician   s job to pry it out of enormous
databases. efron and thisted (1976) apply formula (6.19) to the shake-
speare word counts, and then use id135 methods to bound
shakespeare   s unseen vocabulary from below at 35,000 words. (shake-
speare was actually less    wordy    than his contemporaries, marlow and
donne.)    shall i die,    the possibly shakespearean poem recovered in 1985,
is analyzed by a variety of empirical bayes techniques in thisted and efron
(1987). comparisons are made with other elizabethan authors, none of
whom seem likely candidates for authorship.

the shakespeare word counts are from spevack   s (1968) concordance.
(the    rst concordance was compiled by hand in the mid 1800s, listing
every word shakespeare wrote and where it appeared, a full life   s labor.)

the nodes example, figure 6.3, is taken from gholami et al. (2015).

  1 [p. 78] formula (6.9). for any positive numbers c and d we have

so combining gamma prior (6.8) with poisson density (6.1) gives marginal
density

z 1

0

  c(cid:0)1e

(cid:0) =d d  d d c  .c/;
r 1
0   (cid:23)cx(cid:0)1e
d (cid:13) (cid:23)cx  .(cid:23) c x/

(cid:0) =(cid:13) d 

(cid:27) (cid:23)  .(cid:23)/x  

;

(cid:27) (cid:23)  .(cid:23)/x  

f(cid:23);(cid:27) .x/ d

(6.45)

(6.46)

where (cid:13) d (cid:27)=.1 c (cid:27) /. assuming independence among the counts yx
(which is exactly true if the customers act independently of each other and
n , the total number of them, is itself poisson), the log likelihood function
for the accident data is

yx logff(cid:23);(cid:27) .x/g :

(6.47)

xmaxx

xd0

here xmax is some notional upper bound on the maximum possible number

empirical bayes

90
of accidents for a single customer; since yx d 0 for x > 7 the choice of
xmax is irrelevant. the values .o(cid:23); o(cid:27) / in (6.8) maximize (6.47).

  2 [p. 81] formula (6.21). if n dp yx, the total number trapped, is assumed

to be poisson, and if the n observed values xk are mutually independent,
then a useful property of the poisson distribution implies that the counts yx
are themselves approximately independent poisson variates
for x d 0; 1; 2; : : : ;

ind(cid:24) poi.ex/;

(6.48)

yx

in notation (6.17). formula (6.19) and varfyxg d ex then give

ext 2x:

(6.49)

n oe.t /

o dx

x(cid:21)1

var

substituting yx for ex produces (6.21). section 11.5 of efron (2010) shows
that (6.49) is an upper bound on varf oe.t /g if n is considered    xed rather
than poisson.
  3 [p. 81] formula (6.23). combining the case x d 1 in (6.17) with (6.15)

yields

e.t / d e1

(cid:2)r 1

0 e

(cid:0)  g.  / d  (cid:0)r 1
r 1

0  e

0 e

(cid:0)  g.  / d 

(cid:0) .1ct /g.  / d (cid:3)

:

(6.50)

substituting the gamma prior (6.8) for g.  /, and using (6.45) three times,
gives formula (6.23).

7

james   stein estimation and ridge

regression

if fisher had lived in the era of    apps,    id113
might have made him a billionaire. arguably the twentieth century   s most
in   uential piece of applied mathematics, maximum likelihood continues to
be a prime method of choice in the statistician   s toolkit. roughly speaking,
maximum likelihood provides nearly unbiased estimates of nearly mini-
mum variance, and does so in an automatic way.

that being said, id113 has shown itself to be
an inadequate and dangerous tool in many twenty-   rst-century applica-
tions. again speaking roughly, unbiasedness can be an unaffordable luxury
when there are hundreds or thousands of parameters to estimate at the same
time.

the james   stein estimator made this point dramatically in 1961, and
made it in the context of just a few unknown parameters, not hundreds or
thousands. it begins the story of shrinkage estimation, in which deliberate
biases are introduced to improve overall performance, at a possible danger
to individual estimates. chapters 7 and 21 will carry on the story in its
modern implementations.

7.1 the james   stein estimator

suppose we wish to estimate a single parameter (cid:22) from observation x in
the bayesian situation
(cid:22) (cid:24)

and xj(cid:22) (cid:24)

(7.1)

n .m; a/

n .(cid:22); 1/;

in which case (cid:22) has posterior distribution

(cid:22)jx (cid:24)

n .m c b.x (cid:0) m /; b/

(7.2)
as given in (5.21) (where we take (cid:27) 2 d 1 for convenience). the bayes
estimator of (cid:22),

  b d a=.a c 1/  

o(cid:22)bayes d m c b.x (cid:0) m /;

(7.3)

91

(7.4)

92

james   stein estimation and ridge regression

has expected squared error

e

compared with 1 for the id113 o(cid:22)id113 d x,

n(cid:0) o(cid:22)bayes (cid:0) (cid:22)(cid:1)2o d b;
n(cid:0) o(cid:22)id113 (cid:0) (cid:22)(cid:1)2o d 1:

(7.5)
if, say, a d 1 in (7.1) then b d 1=2 and o(cid:22)bayes has only half the risk of
the id113.

e

the same calculation applies to a situation where we have n indepen-

dent versions of (7.1), say

(cid:22) d .(cid:22)1; (cid:22)2; : : : ; (cid:22)n /

0

and x d .x1; x2; : : : ; xn /

0

;

(7.6)

with

(cid:22)i (cid:24)

and xij(cid:22)i (cid:24)

n .m; a/

(7.7)
independently for i d 1; 2; : : : ; n . (notice that the (cid:22)i differ from each
other, and that this situation is not the same as (5.22)   (5.23).) let o(cid:22)bayes
indicate the vector of individual bayes estimates o(cid:22)
d m cb.xi(cid:0)m /,
(7.8)

(cid:2)m d .m; m; : : : ; m /
0(cid:3) ;

o(cid:22)bayes d m c b.x (cid:0) m /;

n .(cid:22)i ; 1/;

bayes
i

and similarly

o(cid:22)id113 d x:

 2
using (7.4) the total squared error risk of o(cid:22)bayes is
(cid:0) (cid:22)i

n(cid:13)(cid:13) o(cid:22)bayes (cid:0) (cid:22)

( nx
(cid:16) o(cid:22)
(cid:13)(cid:13)2o d e
(cid:13)(cid:13)2o d n:
n(cid:13)(cid:13) o(cid:22)id113 (cid:0) (cid:22)

compared with

bayes
i

id1

e

e

)

d n (cid:1) b

(7.9)

(7.10)

again, o(cid:22)bayes has only b times the risk of o(cid:22)id113.
this is    ne if we know m and a (or equivalently m and b) in (7.1). if
not, we might try to estimate them from x d .x1; x2; : : : ; xn /. marginally,
(7.7) gives

then om d nx is an unbiased estimate of m . moreover,

ind(cid:24)

xi

n .m; a c 1/:
"
s d nx

id1

#

(7.11)

(7.12)

.xi (cid:0) nx/2

ob d 1 (cid:0) .n (cid:0) 3/=s

7.1 the james   stein estimator

93

  2

(cid:16)
xi (cid:0) om

 

unbiasedly estimates b, as long as n > 3.    the james   stein estimator is   1
the plug-in version of (7.3),

o(cid:22)js

d om c ob

for i d 1; 2; : : : ; n;

i

(7.13)
or equivalently o(cid:22)js d om c ob.x (cid:0) om /, with om d . om ; om ; : : : ; om /
0.
at this point the terminology    empirical bayes    seems especially apt:
bayesian model (7.7) leads to the bayes estimator (7.8), which itself is
estimated empirically (i.e., frequentistically) from all the data x, and then
applied to the individual cases. of course o(cid:22)js cannot perform as well as
the actual bayes    rule o(cid:22)bayes, but the increased risk is surprisingly modest.
the expected squared risk of o(cid:22)js under model (7.7) is  

n(cid:13)(cid:13) o(cid:22)js (cid:0) (cid:22)

(cid:13)(cid:13)2o d nb c 3.1 (cid:0) b/:

e

(7.14)
if, say, n d 20 and a d 1, then (7.14) equals 11.5, compared with true
bayes risk 10 from (7.9), much less than risk 20 for o(cid:22)id113.

a defender of maximum likelihood might respond that none of this is
surprising: bayesian model (7.7) speci   es the parameters (cid:22)i to be clustered
more or less closely around a central point m , while o(cid:22)id113 makes no such
assumption, and cannot be expected to perform as well. wrong! removing
the bayesian assumptions does not rescue o(cid:22)id113, as james and stein proved
in 1961:
james   stein theorem suppose that

xij(cid:22)i (cid:24)

(7.15)

independently for i d 1; 2; : : : ; n , with n (cid:21) 4. then

(cid:13)(cid:13)2o
n(cid:13)(cid:13) o(cid:22)js (cid:0) (cid:22)

n .(cid:22)i ; 1/

n(cid:13)(cid:13) o(cid:22)id113 (cid:0) (cid:22)

(cid:13)(cid:13)2o

< n d e

e

(7.16)
for all choices of (cid:22) 2
rn . (the expectations in (7.16) are with (cid:22)    xed
and x varying according to (7.15).)
in the language of decision theory, equation (7.16) says that o(cid:22)id113 is
inadmissible:    its total squared error risk exceeds that of o(cid:22)js no matter   3
what (cid:22) may be. this is a strong frequentist form of defeat for o(cid:22)id113, not
depending on bayesian assumptions.

the james   stein theorem came as a rude shock to the statistical world
of 1961. first of all, the defeat came on id113   s home    eld: normal observa-
tions with squared error loss. fisher   s    logic of inductive id136,    chap-
ter 4, claimed that o(cid:22)id113 d x was the obviously correct estimator in the uni-
variate case, an assumption tacitly carried forward to multiparameter linear

james   stein estimation and ridge regression

94
regression problems, where versions of o(cid:22)id113 were predominant. there are
still some good reasons for sticking with o(cid:22)id113 in low-dimensional prob-
lems, as discussed in section 7.4. but shrinkage estimation, as exempli   ed
by the james   stein rule, has become a necessity in the high-dimensional
situations of modern practice.

7.2 the baseball players

the james   stein theorem doesn   t say by how much o(cid:22)js beats o(cid:22)id113. if the
improvement were in   nitesimal nobody except theorists would be inter-
ested. in favorable situations the gains can in fact be substantial, as sug-
gested by (7.14). one such situation appears in table 7.1. the batting av-
erages1 of 18 major league players have been observed over the 1970 sea-
son. the column labeled id113 reports the player   s observed average over
his    rst 90 at bats; truth is the average over the remainder of the 1970
season (370 further at bats on average). we would like to predict truth
from the early-season observations.

the column labeled js in table 7.1 is from a version of the james   
stein estimator applied to the 18 id113 numbers. we suppose that each
player   s id113 value pi (his batting average in the    rst 90 tries) is a binomial
proportion,

pi (cid:24) bi.90; pi /=90:

(7.17)
here pi is his true average, how he would perform over an in   nite number
of tries; truthi is itself a binomial proportion, taken over an average of
370 more tries per player.

at this point there are two ways to proceed. the simplest uses a normal

approximation to (7.17),

pi p(cid:24)
0 is the binomial variance

where (cid:27) 2

n .pi ; (cid:27) 2
0 /;

(7.18)

d np.1 (cid:0) np/=90;
(cid:21)
d (cid:27)0 o(cid:22)js
p.pi (cid:0) np/2
1 (cid:0) .n (cid:0) 3/(cid:27) 2

0

i

(7.19)
with np d 0:254 the average of the pi values. letting xi d pi =(cid:27)0, applying
(7.13), and transforming back to opjs
i , gives james   stein estimates

(cid:27) 2
0

i

(7.20)
1 batting average d # hits =# at bats, that is, the success rate. for example, player 1 hits
successfully 31 times in his    rst 90 tries, for batting average 31=90 d 0:345. this data
is based on 1970 major league performances, but is partly arti   cial; see the endnotes.

.pi (cid:0) np/:

d np c 

opjs

7.2 the baseball players

95

table 7.1 eighteen baseball players; id113 is batting average in    rst 90 at
bats; truth is average in remainder of 1970 season; james   stein
estimator js is based on arcsin transformation of id113s. sum of squared
errors for predicting truth: id113 .0425, js .0218.

player

id113

js

truth

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

.345
.333
.322
.311
.289
.289
.278
.255
.244
.233
.233
.222
.222
.222
.211
.211
.200
.145

.283
.279
.276
.272
.265
.264
.261
.253
.249
.245
.245
.242
.241
.241
.238
.238
.234
.212

.298
.346
.222
.276
.263
.273
.303
.270
.230
.264
.264
.210
.256
.269
.316
.226
.285
.200

x

11.96
11.74
11.51
11.29
10.83
10.83
10.60
10.13
9.88
9.64
9.64
9.40
9.39
9.39
9.14
9.14
8.88
7.50

"  npi c 0:375

 1=2#

a second approach begins with the arcsin transformation

xi d 2.n c 0:5/1=2 sin

(cid:0)1

(7.21)
n d 90 (column labeled x in table 7.1), a classical device that produces
approximate normal deviates of variance 1,

n c 0:75

;

xi p(cid:24)

n .(cid:22)i ; 1/;

(7.22)

where (cid:22)i is transformation (7.21) applied to truthi. using (7.13) gives
o(cid:22)js
i , which is    nally inverted back to the binomial scale,

"

opjs

i

d 1
n

n c 0:75
n c 0:5

 sin o(cid:22)js

i

#
 2 (cid:0) 0:375

2

:

(7.23)

formulas (7.20) and (7.23) yielded nearly the same estimates for the
baseball players; the js column in table 7.1 is from (7.23). james and
stein   s theorem requires normality, but the james   stein estimator often

96

james   stein estimation and ridge regression

18x
.id113i(cid:0)truthi /2 d 0:0425 while

18x
works perfectly well in less ideal situations. that is the case in table 7.1:
.jsi(cid:0)truthi /2 d 0:0218:
(7.24)
in other words, the james   stein estimator reduced total predictive squared
error by about 50%.

id1

id1

figure 7.1 eighteen baseball players; top line id113, middle
james   stein, bottom true values. only 13 points are visible, since
there are ties.

the james   stein rule describes a shrinkage estimator, each id113 value
xi being shrunk by factor ob toward the grand mean om d nx (7.13). ( ob d
0:34 in (7.20).) figure 7.1 illustrates the shrinking process for the baseball
players.
to see why shrinking might make sense, let us return to the original
bayes model (7.8) and take m d 0 for simplicity, so that the xi are
marginally n .0; a c 1/ (7.11). even though each xi is unbiased for its
( nx
d na: (7.25)

parameter (cid:22)i, as a group they are    overdispersed,   

d n.a c 1/

( nx

compared with e

)

)

e

(cid:22)2
i

id1

x2
i

id1

the sum of squares of the id113s exceeds that of the true values by expected
amount n ; shrinkage improves group estimation by removing the excess.

0.150.200.250.300.35 llllllllllllllllllid113lllllllllllllllllljames   steinlllllllllllllllllltruebatting averages7.3 ridge regression

97

;

a

e

id1

bayes
i

bayes
i

a c 1

( nx

d bxi have

d nb 2.a c 1/ d na

in fact the james   stein rule overshrinks the data, as seen in the bottom
two lines of figure 7.1, a property it inherits from the underlying bayes
)
model: the bayes estimates o(cid:22)
 2
(7.26)
i / d na by factor a=.a c 1/. we could use the
bxi, which gives the correct expected
sum of squares na, but a larger expected sum of squared estimation errors

(cid:16) o(cid:22)
overshrinking e.p (cid:22)2
less extreme shrinking rule q(cid:22)i d p
efp. q(cid:22)i (cid:0) (cid:22)i /2jxg.
pothesis of no differences among the (cid:22)i values. (this gavep.pi (cid:0) np/2 d

null indicating that in a classical sense we have accepted the null hy-

the most extreme shrinkage rule would be    all the way,    that is, to

for i d 1; 2; : : : ; n;

o(cid:22)null

d nx

(7.27)

0:0266 for the baseball data (7.24).) the james   stein estimator is a data-
based rule for compromising between the null hypothesis of no differences
and the id113   s tacit assumption of no relationship at all among the (cid:22)i
values. in this sense it blurs the classical distinction between hypothesis
testing and estimation.

i

7.3 ridge regression

id75, perhaps the most widely used estimation technique, is
based on a version of o(cid:22)id113. in the usual notation, we observe an n-dimen-
sional vector y d .y1; y2; : : : ; yn/

0 from the linear model

y d x    c (cid:15):

(7.28)
here x is a known n(cid:2) p structure matrix,    is an unknown p-dimensional
parameter vector, while the noise vector (cid:15) d .(cid:15)1; (cid:15)2; : : : ; (cid:15)n/
0 has its com-
ponents uncorrelated and with constant variance (cid:27) 2,

(cid:15) (cid:24) .0; (cid:27) 2i/;

(7.29)
where i is the n (cid:2) n identity matrix. often (cid:15) is assumed to be multivariate
normal,

(cid:15) (cid:24)

nn.0; (cid:27) 2i/;

(7.30)

but that is not required for most of what follows.

james   stein estimation and ridge regression

98
the least squares estimate o
early 1800s, is the minimizer of the total sum of squared errors,

  , going back to gauss and legendre in the

  ky (cid:0) x   k2(cid:9) :

o
   d arg min

  

it is given by

o
   d s

(cid:0)1x
0
where s is the p (cid:2) p inner product matrix
xi

s d x

0

y;

o
   is unbiased for    and has covariance matrix (cid:27) 2s

(cid:0)1,

   (cid:24)(cid:0)  ; (cid:27) 2s

o

(cid:0)1(cid:1) :

(7.31)

(7.32)

(7.33)

(7.34)

  4

   is the id113 of   . before 1950 a great deal
(cid:0)1 could be feasibly

in the normal case (7.30) o
of effort went into designing matrices x such that s
calculated, which is now no longer a concern.
a great advantage of the linear model is that it reduces the number of
unknown parameters to p (or p c 1 including (cid:27) 2), no matter how large n
may be. in the kidney data example of section 1.1, n d 157 while p d 2.
in modern applications, however, p has grown larger and larger, sometimes
into the thousands or more, as we will see in part iii, causing statisticians
again to confront the limitations of high-dimensional unbiased estimation.
ridge regression is a shrinkage method designed to improve the estima-
tion of    in linear models. by transformations    we can standardize (7.28)
so that the columns of x each have mean 0 and sum of squares 1, that is,

si i d 1

for i d 1; 2; : : : ; p:

(7.35)

(this puts the regression coef   cients   1;   2; : : : ;   p on comparable scales.)
for convenience, we also assume ny d 0. a ridge regression estimate o
  .(cid:21)/
is de   ned, for (cid:21) (cid:21) 0, to be

y d .s c (cid:21)i/

(cid:0)1x
   while o

o
  .(cid:21)/ d .s c (cid:21)i/
(using (7.32)); o
  .(cid:21)/ is a shrunken version of o
  , the bigger (cid:21) the more
  .0/ d o
extreme the shrinkage: o
  .1/ equals the vector of zeros.
ridge regression effects can be quite dramatic. as an example, con-
sider the diabetes data, partially shown in table 7.2, in which 10 prediction
variables measured at baseline   age, sex, bmi (body mass index), map
(mean arterial blood pressure), and six blood serum measurements   have

(cid:0)1s

(7.36)

o
  

0

7.3 ridge regression

99

table 7.2 first 7 of n d 442 patients in the diabetes study; we wish to
predict disease progression at one year    prog    from the 10 baseline
measurements age, sex, . . . , glu.

age

sex

bmi

map

59
48
72
24
50
23
36
:::

1
0
1
0
0
0
1
:::

32.1
21.6
30.5
25.3
23.0
22.6
22.0
:::

101
87
93
84
101
89
90
:::

tc

157
183
156
198
192
139
160
:::

ldl

hdl

tch

ltg

glu

prog

93.2
103.2
93.6
131.4
125.4
64.8
99.6
:::

38
70
41
40
52
61
50
:::

4
3
4
5
4
2
3
:::

2.11
1.69
2.03
2.12
1.86
1.82
1.72
:::

87
69
85
89
80
68
82
:::

151
75
141
206
135
97
138
:::

been obtained for n d 442 patients. we wish to use the 10 variables to pre-
dict prog, a quantitative assessment of disease progression one year after
baseline. in this case x is the 442 (cid:2) 10 matrix of standardized predictor
variables, and y is prog with its mean subtracted off.

figure 7.2 ridge coef   cient trace for the standardized diabetes
data.

   5000500lb^(l)0.000.050.150.200.250.1llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllagesexbmimaptcldlhdltchltgglujames   stein estimation and ridge regression

100
table 7.3 ordinary least squares estimate o
  .0/ compared with ridge
regression estimate o
  .0:1/ with (cid:21) d 0:1. the columns sd(0) and sd(0.1)
are their estimated standard errors. (here (cid:27) was taken to be 54.1, the
usual ols estimate based on model (7.28).)

o
  .0:1/

sd(0)

sd(0.1)

o
  .0/
(cid:0)10.0

age
1.3
sex (cid:0)239.8 (cid:0)207.2
bmi
489.7
519.8
map
301.8
324.4
(cid:0)792.2
(cid:0)83.5
tc
(cid:0)70.8
ldl
476.7
101.0 (cid:0)188.7
hdl
tch
115.7
177.1
ltg
443.8
751.3
glu
67.6
86.7

59.7
61.2
66.5
65.3
416.2
338.6
212.3
161.3
171.7
65.9

52.7
53.2
56.3
55.7
43.6
52.4
58.4
70.8
58.4
56.6

figure 7.2 vertically plots the 10 coordinates of o
  .(cid:21)/ as the ridge pa-
rameter (cid:21) increases from 0 to 0.25. four of the coef   cients change rapidly
at    rst. table 7.3 compares o
  .0:1/.
positive coef   cients predict increased disease progression. notice that ldl,
the    bad cholesterol    measurement, goes from being a strongly positive
predictor in o
there is a bayesian rationale for ridge regression. assume that the noise

  .0/, that is the usual estimate o

  , with o

  .0:1/.

vector (cid:15) is normal as in (7.30), so that

   to a mildly negative one in o
(cid:0)  ; (cid:27) 2s
 

o
   (cid:24)

np

(cid:0)1(cid:1)
 

rather than just (7.34). then the bayesian prior

(7.37)

(7.38)

   (cid:24)

0;

(cid:27) 2
(cid:21)

i

np

n
  j o

o d .s c (cid:21)i/

(cid:0)1s

o
  ;

makes

e

  

(7.39)
  .(cid:21)/ (using (5.23) with m d 0,
(cid:0)1). ridge regression amounts to an

the same as the ridge regression estimate o
a d .(cid:27) 2=(cid:21)/i, and     d .s =(cid:27) 2/
increased prior belief that    lies near 0.
the last two columns of table 7.3 compare the standard deviations    of
   and o
o
  .0:1/. ridging has greatly reduced the variability of the estimated

  5

7.3 ridge regression

101

o(cid:22).(cid:21)/ d x

o
  .(cid:21)/;

regression coef   cients. this does not guarantee that the corresponding es-
timate of (cid:22) d x   ,

(7.40)
o
will be more accurate than the ordinary least squares estimate o(cid:22) d x
  .
we have (deliberately) introduced bias, and the squared bias term coun-
teracts some of the advantage of reduced variability. the cp calculations
of chapter 12 suggest that the two effects nearly offset each other for the
diabetes data. however, if interest centers on the coef   cients of   , then
ridging can be crucial, as table 7.3 emphasizes.
by current standards, p d 10 is a small number of predictors. data sets
with p in the thousands, and more, will show up in part iii. in such situa-
tions the scientist is often looking for a few interesting predictor variables
hidden in a sea of uninteresting ones: the prior belief is that most of the   i
values lie near zero. biasing the maximum likelihood estimates o
  i toward
zero then becomes a necessity.
o
  .(cid:21)/:

there is still another way to motivate the ridge regression estimator

o
  .(cid:21)/ d arg min

fky (cid:0) x   k2 c (cid:21)k  k2g:

0

  

(cid:0)1x

(7.41)
differentiating the term in brackets with respect to    shows that o
  .(cid:21)/ d
.s c (cid:21)i/
y as in (7.36). if (cid:21) d 0 then (7.41) describes the ordinary
least squares algorithm; (cid:21) > 0 penalizes choices of    having k  k large,
biasing o
various terminologies are used to describe algorithms such as (7.41): pe-
nalized least squares; penalized likelihood; maximized a-posteriori proba-
bility (map);  and, generically, id173 describes almost any method   6
that tamps down statistical variability in high-dimensional estimation or
prediction problems.

  .(cid:21)/ toward the origin.

a wide variety of penalty terms are in current use, the most in   uential

one involving the    `1 norm    k  k1 dpp

j  jj,

1

q
  .(cid:21)/ d arg min

fky (cid:0) x   k2 c (cid:21)k  k1g;

(7.42)

  

the so-called lasso estimator, chapter 16. despite the bayesian provenance,
most id173 research is carried out frequentistically, with various
penalty terms investigated for their probabilistic behavior regarding esti-
mation, prediction, and variable selection.
if we apply the james   stein rule to the normal model (7.37), we get a
different shrinkage rule   for o

  , say q
  js,

  7

102

james   stein estimation and ridge regression

# o

"

q
  js d

s

o
  

1 (cid:0) .p (cid:0) 2/(cid:27) 2
o
  
(cid:13)(cid:13)2o
n(cid:13)(cid:13) q(cid:22)js (cid:0) (cid:22)

(7.43)
q
  js be the corresponding estimator of (cid:22) d efyg in

  :

0

letting q(cid:22)js d x
(7.28), the james   stein theorem guarantees that

e

< p(cid:27) 2

(7.44)
no matter what    is, as long as p (cid:21) 3.2 there is no such guarantee for
ridge regression, and no foolproof way to choose the ridge parameter (cid:21).
on the other hand, q
  js does not stabilize the coordinate standard devia-
tions, as in the sd(0.1) column of table 7.3. the main point here is that at
present there is no optimality theory for shrinkage estimation. fisher pro-
vided an elegant theory for optimal unbiased estimation. it remains to be
seen whether biased estimation can be neatly codi   ed.

7.4 indirect evidence 2

there is a downside to shrinkage estimation, which we can examine by
returning to the baseball data of table 7.1. one thousand simulations were
run, each one generating simulated batting averages

(cid:3)

p
i

(cid:24) bi.90; truthi /=90

i d 1; 2; : : : ; 18:

(cid:3)

these gave corresponding james   stein (js) estimates (7.20), with (cid:27) 2
np
0

.1 (cid:0) np
(cid:3)
table 7.4 shows the root mean square error for the id113 and js estimates

/=90.

over 1000 simulations for each of the 18 players,

(cid:3)

ij

(cid:0) truthi /2

.p

and

. op

(cid:3) js

ij

(cid:0) truthi /2

loses to op

(7.46)
as foretold by the james   stein theorem, the js estimates are easy victors
in terms of total squared error (summing over all 18 players). however,
op
(cid:3) js
(cid:3)
i for 4 of the 18 players, losing badly in the case
of player 2.
(cid:3) js
for player 2 appear in figure 7.3. strikingly, all 1000 of the op
(cid:3) js
2j values lie

histograms comparing the 1000 simulations of p

i with those of op
(cid:3)

d p

(cid:3) id113

i

i

i

2 of course we are assumimg (cid:27) 2 is known in (7.43); if it is estimated, some of the

improvement erodes away.

351=2

241000x

jd1

(7.45)
d

351=2

:

241000x

jd1

7.4 indirect evidence 2

103

table 7.4 simulation study comparing root mean square errors for id113
and js estimators (7.20) as estimates of truth. total mean square errors
.0384 (id113) and .0235 (js). asterisks indicate four players for whom
rmsjs exceeded rmsid113; these have two largest and two smallest
truth values (player 2 is clemente). column rmsjs1 is for the limited
translation version of js that bounds shrinkage to within one standard
deviation of the id113.

player

truth

rmsid113

rmsjs

rmsjs1

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

.298
.346*
.222
.276
.263
.273
.303
.270
.230
.264
.264
.210*
.256
.269
.316*
.226
.285
.200*

.046
.049
.044
.048
.047
.046
.047
.049
.044
.047
.047
.043
.045
.048
.048
.045
.046
.043

.033
.077
.042
.015
.011
.014
.037
.012
.034
.011
.012
.053
.014
.012
.049
.038
.022
.062

.032
.056
.038
.023
.020
.021
.035
.022
.033
.021
.020
.044
.020
.021
.043
.036
.026
.048

(cid:3) js

below truth2 d 0:346. player 2 could have had a legitimate complaint if
the james   stein estimate were used to set his next year   s salary.
the four losing cases for op

are the players with the two largest and
two smallest values of the truth. shrinkage estimators work against cases
that are genuinely outstanding (in a positive or negative sense). player 2
was roberto clemente. a better informed bayesian, that is, a baseball fan,
would know that clemente had led the league in batting over the previ-
ous several years, and shouldn   t be thrown into a shrinkage pool with 17
ordinary hitters.

i

of course the james   stein estimates were more accurate for 14 of the
18 players. shrinkage estimation tends to produce better results in general,
at the possible expense of extreme cases. nobody cares much about cold
war batting averages, but if the context were the ef   cacies of 18 new anti-
cancer drugs the stakes would be higher.

104

james   stein estimation and ridge regression

figure 7.3 comparing id113 estimates (solid) with js estimates
(line) for clemente; 1000 simulations, 90 at bats each.

compromise methods are available. the rmsjs1 column of table 7.4
refers to a limited translation version of opjs
in which shrinkage is not al-
lowed to diverge more than one (cid:27)0 unit from opi; in formulaic terms,

i

d min  max(cid:0) opjs

opjs 1

i

i ; opi (cid:0) (cid:27)0

(cid:1) ; opi c (cid:27)0

(cid:9) :

(7.47)

this mitigates the clemente problem while still gaining most of the shrink-
age advantages.

the use of indirect evidence amounts to learning from the experience
of others, each batter learning from the 17 others in the baseball exam-
ples.    which others?    is a key question in applying computer-age methods.
chapter 15 returns to the question in the context of false-discovery rates.

7.5 notes and details

the bayesian motivation emphasized in chapters 6 and 7 is anachronistic:
originally the work emerged mainly from frequentist considerations and
was justi   ed frequentistically, as in robbins (1956). stein (1956) proved
the inadmissibility of o(cid:22)id113, the neat version of o(cid:22)js appearing in james
and stein (1961) (willard james was stein   s graduate student); o(cid:22)js is it-
self inadmissable, being everywhere improvable by changing ob in (7.13)

 p^frequency0.200.250.300.350.400.450.500.55050100150200250300350truth 0.346p^ id113p^ james   stein105
to max. ob; 0/. this in turn is inadmissable, but further gains tend to the
minuscule.

7.5 notes and details

in a series of papers in the early 1970s, efron and morris emphasized
the empirical bayes motivation of the james   stein rule, efron and morris
(1972) giving the limited translation version (7.47). the baseball data in its
original form appears in table 1.1 of efron (2010). here the original 45 at
bats recorded for each player have been arti   cially augmented by adding
45 binomial draws, bi.45; truthi / for player i. this gives a somewhat
less optimistic view of the james   stein rule   s performance.

   stein   s paradox in statistics,    efron and morris    title for their 1977 sci-
enti   c american article, catches the statistics world   s sense of discomfort
with the james   stein theorem. why should our estimate for player a go
up or down depending on the other players    performances? this is the
question of direct versus indirect evidence, raised again in the context of
hypothesis testing in chapter 15. unbiased estimation has great scienti   c
appeal, so the argument is by no means settled.

ridge regression was introduced into the statistics literature by hoerl
and kennard (1970). it appeared previously in the numerical analysis liter-
ature as tikhonov id173.
of freedom, z (cid:24) (cid:31)2

  1 [p. 93] formula (7.12). if z has a chi-squared distribution with (cid:23) degrees
(cid:23) (that is, z (cid:24) gam.(cid:23)=2; 2/ in table 5.1), it has density
f .z/ d z(cid:23)=2(cid:0)1e

for z (cid:21) 0;

(7.48)

(cid:0)z=2

yielding

(cid:26) 1

(cid:27) dz 1

e

z

0

(cid:0)z=2

z(cid:23)=2(cid:0)2e
2(cid:23)=2  .(cid:23)=2/

but standard results, starting from (7.11), show that s (cid:24) .a c 1/(cid:31)2
with (cid:23) d n (cid:0) 1 in (7.49),

n(cid:0)1.

2(cid:23)=2  .(cid:23)=2/

2(cid:23)=2

dz d 2(cid:23)=2(cid:0)1
(cid:26) n (cid:0) 3
(cid:27) d 1

s

a c 1

  .(cid:23)=2 (cid:0) 1/

  .(cid:23)=2/

d 1
(cid:23) (cid:0) 2

:

(7.49)

;

(7.50)

e

verifying (7.12).

  2 [p. 93] formula (7.14). first consider the simpler situation where m in
(7.11) is known to equal zero, in which case the james   stein estimator is
(7.51)

where s dpn
oc d 1 (cid:0) ob d .n (cid:0) 2/=s and c d 1 (cid:0) b d 1=.a c 1/:

d obxi
o(cid:22)js
i . for convenient notation let
1 x2

with ob d 1 (cid:0) .n (cid:0) 2/=s;

(7.52)

i

and, adding over the n coordinates,

james   stein estimation and ridge regression

106
the conditional distribution (cid:22)ijx (cid:24)

e

e

i

(cid:0) (cid:22)i

n .bxi ; b/ gives
i ;

(cid:1)2      x
n(cid:0) o(cid:22)js
o d b c . oc (cid:0) c /2x2
(cid:13)(cid:13)2      x
o d nb c . oc (cid:0) c /2s:
n(cid:13)(cid:13) o(cid:22)js (cid:0) (cid:22)
o d 2.1 (cid:0) b/;
n
. oc (cid:0) c /2s
n(cid:13)(cid:13) o(cid:22)js (cid:0) (cid:22)
(cid:13)(cid:13)2o d nb c 2.1 (cid:0) b/:

e

e

and so

the marginal distribution s (cid:24) .a c 1/(cid:31)2
calculation,

n and (7.49) yields, after a little

(7.53)

(7.54)

(7.55)

(7.56)

by orthogonal transformations, in situation (7.7), where m is not as-
sumed to be zero, o(cid:22)js can be represented as the sum of two parts: a js
estimate in n (cid:0) 1 dimensions but with m d 0 as in (7.51), and a id113
estimate of the remaining one coordinate. using (7.56) this gives

n(cid:13)(cid:13) o(cid:22)js (cid:0) (cid:22)

(cid:13)(cid:13)2o d .n (cid:0) 1/b c 2.1 (cid:0) b/ c 1

(7.57)

d nb c 3.1 (cid:0) b/;

e

which is (7.14).

  3 [p. 93] the james   stein theorem. stein (1981) derived a simpler proof of

the js theorem that appears in section 1.2 of efron (2010).

  4 [p. 98] transformations to form (7.35). the id75 model (7.28)
is equivariant under scale changes of the variables xj . what this means
is that the space of    ts using linear combinations of the xj is the same as
the space of linear combinations using scaled versions qxj d xj =sj , with
sj > 0. furthermore, the least squares    ts are the same, and the coef   cient
estimates map in the obvious way:

oq
  j d sj

ridge regression, we see that the penalty term k  k2 dp

not so for ridge regression. changing the scales of the columns of x
will generally lead to different    ts. using the penalty version (7.41) of
j treats all the
coef   cients as equals. this penalty is most natural if all the variables are
measured on the same scale. hence we typically use for sj the standard
deviation of variable xj , which leads to (7.35). furthermore, with ridge
regression we typically do not penalize the intercept. this can be achieved

o
  j .

j   2

107
by centering and scaling each of the variables, qxj d .xj (cid:0) 1nxj /=sj , where

7.5 notes and details

nxj d nx

xij =n and sj dhx

.xij (cid:0) nxj /2i1=2

id1

(7.58)
with 1 the n-vector of 1s. we now work with qx d . qx1; qx2; : : : ; qxp/ rather
than x, and the intercept is estimated separately as ny.
we calculate the covariance matrix of o
cov(cid:21) d (cid:27) 2.s c (cid:21)i/

  5 [p. 100] standard deviations in table 7.3. from the    rst equality in (7.36)

  .(cid:21)/ to be
(cid:0)1s .s c (cid:21)i/

(7.59)

(cid:0)1:

;

the entries sd(0.1) in table 7.3 are square roots of the diagonal elements
of cov(cid:21), substituting the ordinary least squares estimate o(cid:27) d 54:1 for (cid:27) 2.
  6 [p. 101] penalized likelihood and map. with (cid:27) 2    xed and known in the
nn.x   ; (cid:27) 2i/, minimizing ky (cid:0) x   k2 is the
normal linear model y (cid:24)
same as maximizing the log density function

log f   .y/ d (cid:0) 1

ky (cid:0) x   k2 c constant:

2

(7.60)
in this sense, the term (cid:21)k  k2 in (7.41) penalizes the likelihood log f   .y/
connected with    in proportion to the magnitude k  k2. under the prior
distribution (7.38), the log posterior density of    given y (the log of (3.5))
is

  ky (cid:0) x   k2 c (cid:21)k  k2(cid:9) ;

(7.61)

(cid:0) 1
2(cid:27) 2

plus a term that doesn   t depend on   . that makes the maximizer of (7.41)
also the maximizer of the posterior density of    given y, or the map.
  7 [p. 101] formula (7.43). let (cid:13) d .s 1=2=(cid:27) /   and o(cid:13) d .s 1=2=(cid:27) /
(7.37), where s 1=2 is a matrix square root of s , .s 1=2/2 d s . then

o
   in

o(cid:13) (cid:24)

and the m d 0 form of the james   stein rule (7.51) is

np.(cid:13); i/;
1 (cid:0) p (cid:0) 2
ko(cid:13)k2
transforming back to the    scale gives (7.43).

o(cid:13) js d 

(cid:21) o(cid:13) :

(7.62)

(7.63)

8

generalized linear models and regression

trees

indirect evidence is not the sole property of bayesians. regression models
are the frequentist method of choice for incorporating the experience of
   others.    as an example, figure 8.1 returns to the kidney    tness data of
section 1.1. a potential new donor, aged 55, has appeared, and we wish
to assess his kidney    tness without subjecting him to an arduous series of
medical tests. only one of the 157 previously tested volunteers was age
55, his tot score being (cid:0)0:01 (the upper large dot in figure 8.1). most
dtot d (cid:0)1:46. the former is the only direct evidence we have, while the
applied statisticians, though, would prefer to read off the height of the least
squares regression line at age d 55 (the green dot on the regression line),

figure 8.1 kidney data; a new volunteer donor is aged 55.
which prediction is preferred for his kidney function?

108

*************************************************************************************************************************************************************2030405060708090   6   4   2024agetotll558.1 id28

109

regression line lets us incorporate indirect evidence for age 55 from all 157
previous cases.

increasingly aggressive use of regression techniques is a hallmark of
modern statistical practice,    aggressive    applying to the number and type
of predictor variables, the coinage of new methodology, and the sheer size
of the target data sets. generalized linear models, this chapter   s main topic,
have been the most pervasively in   uential of the new methods. the chapter
ends with a brief review of regression trees, a completely different regres-
sion methodology that will play an important role in the prediction algo-
rithms of chapter 17.

8.1 id28

an experimental new anti-cancer drug called xilathon is under devel-
opment. before human testing can begin, animal studies are needed to de-
termine safe dosages. to this end, a bioassay or dose   response experiment
was carried out: 11 groups of n d 10 mice each were injected with in-
creasing amounts of xilathon, dosages coded1 1; 2; : : : ; 11.

let

yi d # mice dying in ith group:
the points in figure 8.2 show the proportion of deaths

pi d yi =10;

(8.1)

(8.2)

lethality generally increasing with dose. the counts yi are modeled as in-
dependent binomials,

ind(cid:24) bi.ni ; (cid:25)i /

for i d 1; 2; : : : ; n;

yi

(8.3)
n d 11 and all ni equaling 10 here; (cid:25)i is the true death rate in group
i, estimated unbiasedly by pi, the direct evidence for (cid:25)i. the regression
curve in figure 8.2 uses all the doses to give a better picture of the true
dose   response relation.

id28 is a specialized technique for regression analysis of

count or proportion data. the logit parameter (cid:21) is de   ned as

o

n (cid:25)

1 (cid:0) (cid:25)

(cid:21) d log

;

(8.4)

1 dose would usually be labeled on a log scale, each one, say, 50% larger than its

predecessor.

110

glms and regression trees

figure 8.2 dose   response study; groups of 10 mice exposed to
increasing doses of experimental drug. the points are the
observed proportions that died in each group. the    tted curve is
the maximum-likelihoood estimate of the linear logistic
regression model. the open circle on the curve is the ld50, the
estimated dose for 50% mortality.

with (cid:21) increasing from (cid:0)1 to 1 as (cid:25) increases from 0 to 1. a linear lo-
gistic regression dose   response analysis begins with binomial model (8.3),
and assumes that the logit is a linear function of dose,

(cid:26) (cid:25)i

1 (cid:0) (cid:25)i

(cid:27) d   0 c   1xi :

(cid:21)i d log

maximum likelihood gives estimates .o  0; o  1/, and    tted curve

since the inverse transformation of (8.4) is

we obtain from (8.6) the linear id28 curve

o
(cid:21).x/ d o  0 c o  1x:

(cid:25) d(cid:16)
o(cid:25).x/ d(cid:16)

1 c e

(cid:0)(cid:21) (cid:0)1
(cid:0).o  0co  1x/ (cid:0)1

1 c e

(8.5)

(8.6)

(8.7)

(8.8)

pictured in figure 8.2.

table 8.1 compares the standard deviation of the estimated regression

llllllllllldoseproportion of deaths12345678910110.000.250.500.751.00llld50 = 5.698.1 id28

111
table 8.1 standard deviation estimates for o(cid:25).x/ in figure 8.1. the    rst
row is for the linear id28    t (8.8); the second row is based
on the individual binomial estimates pi.

x

sd o(cid:25).x/
sd pi

1

2

3

4

5

6

7

8

9

10

11

.015
.045

.027
.066

.043
.094

.061
.126

.071
.152

.072
.157

.065
.138

.050
.106

.032
.076

.019
.052

.010
.035

curve (8.8) at x d 1; 2; : : : ; 11 (as discussed in the next section) with
the usual binomial standard deviation estimate   pi .1(cid:0) pi /=10  1=2 obtained
by considering the 11 doses separately.2 regression has reduced error by
better than 50%, the price being possible bias if model (8.5) goes seriously
wrong.

one advantage of the logit transformation is that (cid:21) isn   t restricted to the
range   0; 1  , so model (8.5) never verges on forbidden territory. a better
reason has to do with the exploitation of exponential family properties. we
can rewrite the density function for bi.n; y/ as

 

!

n

y

(cid:25) y.1 (cid:0) (cid:25)/n(cid:0)y d e(cid:21)y(cid:0)n .(cid:21)/

 

!

n

y

with (cid:21) the logit parameter (8.4) and

 .(cid:21)/ d logf1 c e(cid:21)gi

(8.9) is a one-parameter exponential family3 as described in section 5.5,
with (cid:21) the natural parameter, called    there.
let y d .y1; y2; : : : ; yn / denote the full data set, n d 11 in figure 8.2.
 
!
using (8.5), (8.9), and the independence of the yi gives the id203
density of y as a function of .  0;   1/,
e(cid:21)i yi(cid:0)ni  .(cid:21)i /
1 ni  .  0c  1xi / (cid:1) ny
(cid:0)pn

f  0;  1 .y/ d ny

d e  0s0c  1s1 (cid:1) e

(8.11)

 

!

ni
yi

id1

;

ni
yi

id1

2 for the separate-dose standard error, pi was taken equal to the    tted value from the

curve in figure 8.2.

3 it is not necessary for f(cid:22)0 .x/ in (5.46) on page 64 to be a id203 density function,

only that it not depend on the parameter (cid:22).

(8.9)

(8.10)

  1

112

where

glms and regression trees

s0 d nx

yi

id1

and s1 d nx

id1

xi yi :

(8.12)

formula (8.11) expresses f  0;  1 .y/ as the product of three factors,

f  0;  1 .y/ d g  0;  1 .s0; s1/h.  0;   1/j.y/;

(8.13)

only the    rst of which involves both the parameters and the data. this im-
plies that .s0; s1/ is a suf   cient statistic:   no matter how large n might be
(later we will have n in the thousands), just the two numbers .s0; s1/ con-
tain all of the experiment   s information. only the logistic parameterization
(8.4) makes this happen.4
a more intuitive picture of id28 depends on d.pi ; o(cid:25)i /, the
deviance between an observed proportion pi (8.2) and an estimate o(cid:25)i,

  c .1 (cid:0) pi / log

  1 (cid:0) pi

 (cid:21)

  pio(cid:25)i

d .pi ; o(cid:25)i / d 2ni

pi log

(8.14)
the deviance5 is zero if o(cid:25)i d pi, otherwise it increases as o(cid:25)i departs
further from pi.
the id28 id113 value .o  0; o  1/ also turns out to be the
choice of .  0;   1/ minimizing the total deviance between the n points pi
and their corresponding estimates o(cid:25)i d (cid:25)o  0;o  1 .xi / (8.8):

1 (cid:0) o(cid:25)i

:

 

.o  0; o  1/ d arg min

.  0;  1/

nx

id1

d .pi ; (cid:25)  0;  1 .xi // :

(8.15)

the solid line in figure 8.2 is the linear logistic curve coming closest to
the 11 points, when distance is measured by total deviance. in this way the
200-year-old notion of least squares is generalized to binomial regression,
as discussed in the next section. a more sophisticated notion of distance
between data and models is one of the accomplishments of modern statis-
tics.

table 8.2 reports on the data for a more structured id28
analysis. human muscle cell colonies were infused with mouse nuclei in
   ve different ratios, cultured over time periods ranging from one to    ve

4 where the name    id28    comes from is explained in the endnotes, along

with a description of its nonexponential family predecessor probit analysis.

5 deviance is analogous to squared error in ordinary regression theory, as discussed in
what follows. it is twice the    kullback   leibler distance,    the preferred name in the
information-theory literature.

8.1 id28

113

table 8.2 cell infusion data; human cell colonies infused with mouse
nuclei in    ve ratios over 1 to 5 days and observed to see whether they did
or did not thrive. green numbers are estimates o(cid:25)ij from the logistic
regression model. for example, 5 of 31 colonies in the lowest ratio/days
category thrived, with observed proportion 5=31 d 0:16, and logistic
regression estimate o(cid:25)11 d 0:11:

1

5/31
.11
15/77
.24

48/126

.38
29/92
.32
11/53
.18

2

3/28
.25
36/78
.45

68/116

.62
35/52
.56
20/52
.37

1

2

ratio 3

4

5

time
3

20/45
.42
43/71
.64

145/171

.77
57/85
.73
20/48
.55

4

24/47
.54
56/71
.74

98/119

.85
38/50
.81
40/55
.67

5

29/35
.75
66/74
.88

114/129

.93
72/77
.92
52/61
.84

days, and observed to see whether they thrived. for example, of the 126
colonies having the third ratio and shortest time period, 48 thrived.
let (cid:25)ij denote the true id203 of thriving for ratio i during time
period j , and (cid:21)ij its logit logf(cid:25)ij =.1 (cid:0) (cid:25)ij /g. a two-way additive logistic
regression was    t to the data,6

(cid:21)ij d (cid:22) c   i c   j ;

i d 1; 2; : : : ; 5; j d 1; 2; : : : ; 5:

(8.16)

the green numbers in table 8.2 show the maximum likelihood estimates

. 

(cid:0)(cid:16) o(cid:22)co  ic o  j

 (cid:21)

:

o(cid:25)ij d 1

1 c e

(8.17)

straintsp   i d p   j d 0 necessary to avoid de   nitional dif   culties)

model (8.16) has nine free parameters (taking into account the con-

compared with just two in the dose   response experiment. the count can
easily go much higher these days.
table 8.3 reports on a 57-variable id28 applied to the spam
data. a researcher (named george) labeled n d 4601 of his email mes-

6 using the statistical computing language r; see the endnotes.

114

glms and regression trees

table 8.3 id28 analysis of the spam data, model (8.17);
estimated regression coef   cients, standard errors, and z d estimate=se,
for 57 keyword predictors. the notation char$ means the relative
number of times $ appears, etc. the last three entries measure
characteristics such as length of capital-letter strings. the word george
is special, since the recipient of the email is named george, and the goal
here is to build a customized spam    lter.

intercept
make
address
all
3d
our
over
remove
internet
order
mail
receive
will
people
report
addresses
free
business
email
you
credit
your
font
000
money
hp
hpl
george
650

estimate
(cid:0)12.27
(cid:0).12
(cid:0).19
.06
3.14
.38
.24
.89
.23
.20
.08
(cid:0).05
(cid:0).12
(cid:0).02
.05
.32
.86
.43
.06
.14
.53
.29
.21
.79
.19
(cid:0)3.21
(cid:0).92
(cid:0)39.62
.24

se

1.99
.07
.09
.06
2.10
.07
.07
.13
.07
.08
.05
.06
.06
.07
.05
.19
.12
.10
.06
.06
.27
.06
.17
.16
.07
.52
.39
7.12
.11

z-value
(cid:0)6.16 lab
(cid:0)1.68 labs
(cid:0)2.10 telnet
1.03 857
1.49 data
5.52 415
3.53 85
6.85 technology
3.39 1999
2.58 parts
1.75 pm
(cid:0) .86 direct
(cid:0)1.87 cs
(cid:0) .35 meeting
1.06 original
1.70 project
7.13 re
4.26 edu
1.03 table
2.32 conference
1.95 char;
4.62 char(
1.24 char
4.76 char!
2.63 char$
(cid:0)6.14 char#
(cid:0)2.37 cap.ave
(cid:0)5.57 cap.long
2.24 cap.tot

estimate
(cid:0)1.48
(cid:0).15
(cid:0).07
.84
(cid:0).41
.22
(cid:0)1.09
.37
.02
(cid:0).13
(cid:0).38
(cid:0).11
(cid:0)16.27
(cid:0)2.06
(cid:0).28
(cid:0).98
(cid:0).80
(cid:0)1.33
(cid:0).18
(cid:0)1.15
(cid:0).31
(cid:0).05
(cid:0).07
.28
1.31
1.03
.38
1.78
.51

se

.89
.14
.19
1.08
.17
.53
.42
.12
.07
.09
.17
.13
9.61
.64
.18
.33
.16
.24
.13
.46
.11
.07
.09
.07
.17
.48
.60
.49
.14

sages as either spam or ham (nonspam7), say

(

yi d

1 if email i is spam
0 if email i is ham

z-value
(cid:0)1.66
(cid:0)1.05
(cid:0) .35
.78
(cid:0)2.37
.42
(cid:0)2.61
2.99
.26
(cid:0)1.41
(cid:0)2.26
(cid:0) .84
(cid:0)1.69
(cid:0)3.21
(cid:0)1.55
(cid:0)2.97
(cid:0)5.09
(cid:0)5.43
(cid:0)1.40
(cid:0)2.49
(cid:0)2.92
(cid:0) .75
(cid:0) .78
3.89
7.55
2.16
.64
3.62
3.75

(8.18)

7    ham    refers to    nonspam    or good email; this is a playful connection to the processed

(cid:21)i d   0 c 57x

8.1 id28

115
(40% of the messages were spam). the p d 57 predictor variables repre-
sent the most frequently used words and tokens in george   s corpus of email
(excluding trivial words such as articles), and are in fact the relative fre-
quencies of these chosen words in each email (standardized by the length
of the email). the goal of the study was to predict whether future emails
are spam or ham using these keywords; that is, to build a customized spam
   lter.

let xij denote the relative frequency of keyword j in email i, and (cid:25)i
represent the id203 that email i is spam. letting (cid:21)i be the logit trans-
form logf(cid:25)i =.1 (cid:0) (cid:25)i /g, we    t the additive logistic model

(8.19)
table 8.3 shows o  i for each word   for example, (cid:0)0:12 for make   as well
as the estimated standard error and the z-value: estimate=se.

  j xij :

jd1

it looks like certain words, such as free and your, are good spam
predictors. however, the table as a whole has an unstable appearance, with
occasional very large estimates o  i accompanied by very large standard de-
viations.8 the dangers of high-dimensional maximum likelihood estima-
tion are apparent here. some sort of shrinkage estimation is called for, as
discussed in chapter 16.

(cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)

regression analysis, either in its classical form or in modern formula-
tions, requires covariate information x to put the various cases into some
sort of geometrical relationship. given such information, regression is the
statistician   s most powerful tool for bringing    other    results to bear on a
case of primary interest: for instance, the age-55 volunteer in figure 8.1.

empirical bayes methods do not require covariate information but may
be improvable if it exists. if, for example, the player   s age were an impor-
tant covariate in the baseball example of table 7.1, we might    rst regress
the id113 values on age, and then shrink them toward the regression line
rather than toward the grand mean np as in (7.20). in this way, two different
sorts of indirect evidence would be brought to bear on the estimation of
each player   s ability.

spam that was fake ham during wwii, and has been adopted by the machine-learning
community.
8 the 4601 (cid:2) 57 x matrix .xij / was standardized, so disparate scalings are not the
cause of these discrepancies. some of the features have mostly    zero    observations,
which may account for their unstable estimation.

116

glms and regression trees

8.2 generalized linear models9

id28 is a special case of generalized linear models (glms),
a key 1970s methodology having both algorithmic and inferential in   u-
ence. glms extend ordinary id75, that is least squares curve-
   tting, to situations where the response variables are binomial, poisson,
gamma, beta, or in fact any exponential family form.
n
we begin with a one-parameter exponential family,
f(cid:21).y/ d e(cid:21)y(cid:0)(cid:13).(cid:21)/f0.y/; (cid:21) 2   

(8.20)

o

;

as in (5.46) (now with    and x replaced by (cid:21) and y, and  .  / replaced by
(cid:13).(cid:21)/, for clearer notation in what follows). here (cid:21) is the natural parameter
and y the suf   cient statistic, both being one-dimensional in usual applica-
tions; (cid:21) takes its values in an interval of the real line. each coordinate yi
of an observed data set y d .y1; y2; : : : ; yi ; : : : ; yn /
0 is assumed to come
from a member of family (8.20),

yi (cid:24) f(cid:21)i .(cid:1)/ independently for i d 1; 2; : : : ; n:

(8.21)

table 8.4 lists (cid:21) and y for the    rst four families in table 5.1, as well as
their deviance and normalizing functions.

by itself, model (8.21) requires n parameters (cid:21)1; (cid:21)2; : : : ; (cid:21)n , usually
too many for effective individual estimation. a key glm tactic is to specify
the (cid:21)s in terms of a id75 equation. let x be an n(cid:2)p    structure
0
matrix,    with ith row say x
i, and    an unknown vector of p parameters;
the n -vector (cid:21) d .(cid:21)1; (cid:21)2; : : : ; (cid:21)n /

0 is then speci   ed by

(cid:21) d x   :

(8.22)
in the dose   response experiment of figure 8.2 and model (8.5), x is n (cid:2) 2
with ith row .1; xi / and parameter vector    d .  0;   1/.
ny
the id203 density function f  .y/ of the data vector y is

pn
1 .(cid:21)i yi(cid:0)(cid:13).(cid:21)i //

f  .y/ d ny

f(cid:21)i .yi / d e

(8.23)

f0.yi /;

id1

id1

which can be written as

f  .y/ d e  

0

z(cid:0) .  /f0.y/;

(8.24)

9 some of the more technical points raised in this section are referred to in later chapters,

and can be scanned or omitted at    rst reading.

8.2 generalized linear models

117

table 8.4 exponential family form for    rst four cases in table 5.1;
natural parameter (cid:21), suf   cient statistic y, deviance (8.31) between family
members f1 and f2, d.f1; f2/, and normalizing function (cid:13).(cid:21)/.

1. normal

n .(cid:22); (cid:27) 2/,
(cid:27) 2 known

2. poisson
poi.(cid:22)/

3. binomial
bi.n; (cid:25)/

4. gamma

gam.(cid:23); (cid:27) /,
(cid:23) known

where

(cid:21)

(cid:22)=(cid:27) 2

y

x

log (cid:22)

x

log (cid:25)

1(cid:0)(cid:25) x 2n

h

(cid:0)1=(cid:27)

x

2(cid:23)

(cid:27)

i

d.f1; f2/

 2
  (cid:0) log (cid:22)2

(cid:16) (cid:22)1(cid:0)(cid:22)2
h(cid:16) (cid:22)2
c .1 (cid:0) (cid:25)1/ log 1(cid:0)(cid:25)1
1(cid:0)(cid:25)2
i

  (cid:0) log (cid:27)1

h(cid:16) (cid:27)1

(cid:0) 1

(cid:0) 1

(cid:22)1

(cid:22)1

(cid:27)2

(cid:27)2

(cid:13).(cid:21)/

(cid:27) 2(cid:21)2=2

i

e(cid:21)

n log.1 c e(cid:21)/

(cid:0)(cid:23) log.(cid:0)(cid:21)/

2(cid:22)1

(cid:25)1 log (cid:25)1
(cid:25)2

y and  .  / d nx

id1

z d x

0

0
i   /;

(cid:13).x

(8.25)

a p-parameter exponential family (5.50), with natural parameter vector   
and suf   cient statistic vector z. the main point is that all the information
from a p-parameter glm is summarized in the p-dimensional vector z,
no matter how large n may be, making it easier both to understand and to
analyze.

we have now reduced the n -parameter model (8.20)   (8.21) to the p-
parameter exponential family (8.24), with p usually much smaller than n ,
in this way avoiding the dif   culties of high-dimensional estimation. the
moments of the one-parameter constituents (8.20) determine the estimation
properties in model (8.22)   (8.24). let .(cid:22)(cid:21); (cid:27) 2
(cid:21)/ denote the expectation and
variance of univariate density f(cid:21).y/ (8.20),
y (cid:24) .(cid:22)(cid:21); (cid:27) 2
(cid:21)/;

(8.26)
(cid:21)/ d .e(cid:21); e(cid:21)/ for the poisson. the n -vector y obtained

for instance .(cid:22)(cid:21); (cid:27) 2
from glm (8.22) then has mean vector and covariance matrix

y (cid:24) .(cid:22).  /;    .  // ;

(8.27)

(8.29)

(8.30)

glms and regression trees

118
where (cid:22).  / is the vector with ith component (cid:22)(cid:21)i with (cid:21)i d x
0
i   , and    .  /
is the n (cid:2) n diagonal matrix having diagonal elements (cid:27) 2
.
the maximum likelihood estimate o   of the parameter vector    can be

(cid:21)i

shown to satisfy the simple equation  

0

  y (cid:0) (cid:22) .o  /   d 0:

x

for the normal case where yi (cid:24)
id75, (cid:22).o  / d x o   and (8.28) becomes x
the familiar solution

(8.28)
n .(cid:22)i ; (cid:27) 2/ in (8.21), that is, for ordinary
.y (cid:0) x o  / d 0, with

0

o   d .x

0

(cid:0)1x

0

yi

x /

otherwise, (cid:22).  / is a nonlinear function of   , and (8.28) must be solved
by numerical iteration. this is made easier by the fact that, for glms,
log f  .y/, the likelihood function we wish to maximize, is a concave func-
tion of   . the id113 o   has approximate expectation and covariance  

similar to the exact ols result o   (cid:24) .  ; (cid:27)

generalizing the binomial de   nition (8.14), the deviance between den-

sities f1.y/ and f2.y/ is de   ned to be

d.f1; f2/ d 2

dy;

(8.31)

o   p(cid:24) .  ;(cid:0)x
z

0

/;

   .  /x(cid:1)(cid:0)1
(cid:26) f1.y/

(cid:0)2.x

x /

0

f1.y/ log

(cid:27)

(cid:0)1/.  

f2.y/

y

the integral (or sum for discrete distributions) being over their common
sample space y. d.f1; f2/ is always nonnegative, equaling zero only if
f1 and f2 are the same; in general d.f1; f2/ does not equal d.f2; f1/.
deviance does not depend on how the two densities are named, for example
(8.14) having the same expression as the binomial entry in table 8.4.
in what follows it will sometimes be useful to label the family (8.20) by
its expectation parameter (cid:22) d e(cid:21)fyg rather than by the natural parameter
(cid:21):

f(cid:22).y/ d e(cid:21)y(cid:0)(cid:13).(cid:21)/f0.y/;

(8.32)

meaning the same thing as (8.20), only the names attached to the individ-
ual family members being changed. in this notation it is easy to show a
fundamental result sometimes known as
hoeffding   s lemma   
the maximum likelihood estimate of (cid:22) given y
is y itself, and the log likelihood log f(cid:22).y/ decreases from its maximum
log fy.y/ by an amount that depends on the deviance d.y; (cid:22)/,

f(cid:22).y/ d fy.y/e

(cid:0)d.y;(cid:22)/=2:

(8.33)

  2

  3

  4

  5

8.2 generalized linear models

119

;

returning to the glm framework (8.21)   (8.22), parameter vector   
gives (cid:21).  / d x   , which in turn gives the vector of expectation param-
eters

(cid:22).  / d .: : : (cid:22)i .  / : : : /
0
#

(8.34)
for instance (cid:22)i .  / d expf(cid:21)i .  /g for the poisson family. multiplying hoeff-
ding   s lemma (8.33) over the n cases y d .y1; y2; : : : ; yn /

" ny
f  .y/ d ny
minimizes the total deviancepn

(8.35)
this has an important consequence: the id113 o   is the choice of    that
1 d.yi ; (cid:22)i .  //. as in figure 8.2, glm
maximum likelihood    tting is    least total deviance    in the same way that
ordinary id75 is least sum of squares.
(cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)

f(cid:22)i .  /.yi / d

1 d.yi ;(cid:22)i .  //:

0 yields

(cid:0)pn

fyi .yi /

id1

id1

e

the inner circle of figure 8.3 represents normal theory, the preferred
venue of classical applied statistics. exact id136s   t-tests, f distribu-
tions, most of multivariate analysis   were feasible within the circle. out-
side the circle was a general theory based mainly on asymptotic (large-
sample) approximations involving taylor expansions and the central limit
theorem.

figure 8.3 three levels of statistical modeling.

a few useful exact results lay outside the normal theory circle, relating

 normal theory(exact calculations)exponential families(partly exact)general theory(asymptotics)figure 8.3. three levels of statistical modeling120

glms and regression trees

to a few special families: the binomial, poisson, gamma, beta, and others
less well known. exponential family theory, the second circle in figure 8.3,
uni   ed the special cases into a coherent whole. it has a    partly exact       a-
vor, with some ideal counterparts to normal theory   convex likelihood sur-
faces, least deviance regression   but with some approximations necessary,
as in (8.30). even the approximations, though, are often more convincing
than those of general theory, exponential families       xed-dimension suf   -
cient statistics making the asymptotics more transparent.

id28 has banished its predecessors (such as probit anal-
ysis) almost entirely from the    eld, and not only because of estimating
ef   ciencies and computational advantages (which are actually rather mod-
est), but also because it is seen as a clearer analogue to ordinary least
squares, our 200-year-old dependable standby. glm research development
has been mostly frequentist, but with a substantial admixture of likelihood-
based reasoning, and a hint of fisher   s    logic of inductive id136.   

helping the statistician choose between competing methodologies is the
job of statistical id136. in the case of generalized linear models the
choice has been made, at least partly, in terms of aesthetics as well as phi-
losophy.

8.3 poisson regression

the third most-used member of the glm family, after normal theory least
squares and id28, is poisson regression. n independent pois-
son variates are observed,

i d 1; 2; : : : ; n;
where (cid:21)i d log (cid:22)i is assumed to follow a linear model,

ind(cid:24) poi.(cid:22)i /;

yi

(8.36)

(cid:21).  / d x   ;

(8.37)
where x is a known n (cid:2) p structure matrix and    an unknown p-vector
i    for i d 1; 2; : : : ; n , where x
of regression coef   cients. that is, (cid:21)i d x
0
0
is the ith row of x.
in the chapters that follow we will see poisson regression come to the
rescue in what at    rst appear to be awkward data-analytic situations. here
we will settle for an example involving density estimation from a spatially
truncated sample.

i

  6

table 8.5 shows galaxy counts    from a small portion of the sky: 487
galaxies have had their redshifts r and apparent magnitudes m measured.

8.3 poisson regression

121

table 8.5 counts for a truncated sample of 487 galaxies, binned by
redshift and magnitude.

redshift (farther) (cid:0)!

1

1
3
3
1
1
3
2
4
1
1
1
0
0
0
0
0
0
0

2

6
2
2
1
3
2
0
1
0
1
0
1
0
3
0
1
1
1

3

6
3
3
4
2
4
2
1
0
0
0
0
3
1
1
0
0
0

4

3
4
3
3
3
5
4
4
2
2
0
1
1
1
1
0
0
0

5

1
0
3
4
3
3
5
7
2
2
1
1
1
0
1
0
0
0

6

4
5
2
3
4
6
4
3
2
2
1
0
0
0
0
0
0
0

7

6
7
9
2
5
4
2
3
1
0
0
0
0
0
0
0
0
0

8

8
6
9
3
7
3
3
1
2
0
0
0
0
0
0
0
0
0

9

8
6
6
8
6
2
3
2
0
0
0
0
0
0
0
0
0
0

10

20
7
3
9
7
2
0
0
0
0
0
0
0
0
0
0
0
0

11

10
5
5
4
3
5
1
1
0
1
1
0
0
0
0
0
0
0

12

7
7
4
3
4
1
2
1
1
0
1
0
0
0
0
0
0
0

13

16
6
5
4
0
0
0
0
2
0
0
0
0
0
0
0
0
0

14

15

9
8
2
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0

4
5
1
1
1
0
1
0
0
0
0
0
0
0
0
0
0
0

"

18
17
16
15
14
13
12
11
magnitude 10
9
8
7
6
5
4
3
2
1

(dimmer)

distance from earth is an increasing function of r, while apparent bright-
ness is a decreasing function10 of m. in this survey, counts were limited to
galaxies having

1:22   r   3:32

and 17:2   m   21:5;

(8.38)

the upper limit re   ecting the dif   culty of measuring very dim galaxies.

the range of log r has been divided into 15 equal intervals and likewise
18 equal intervals for m. table 8.5 gives the counts of the 487 galaxies in
the 18 (cid:2) 15 d 270 bins. (the lower right corner of the table is empty be-
cause distant galaxies always appear dim.) the multinomial/poisson con-
nection (5.44) helps motivate model (8.36), picturing the table as a multi-
nomial observation on 270 categories, in which the sample size n was
itself poisson.

we can imagine table 8.5 as a small portion of a much more extensive
table, hypothetically available if the data were not truncated. experience
suggests that we might then    t an appropriate bivariate normal density to
the data, as in figure 5.3. it seems like it might be awkward to    t part of a
bivariate normal density to truncated data, but poisson regression offers an
easy solution.

10 an object of the second magnitude is less bright than one of the    rst, and so on, a

classi   cation system owing to the greeks.

122

glms and regression trees

let r be the 270-vector listing the values of r in each bin of the table
(in column order), and likewise m for the 270 m values   for instance m d
.18; 17; : : : ; 1/ repeated 15 times   and de   ne the 270 (cid:2) 5 matrix x as

x d   r; m; r 2; rm; m2  ;

(8.39)

where r 2 is the vector whose components are the square of r   s, etc. the
log density of a bivariate normal distribution in .r; m/ is of the form   1r c
  2m c   3r 2 c   4rm c   5m2, agreeing with log (cid:22)i d x
0
i    as speci   ed
by (8.39). we can use a poisson glm, with yi the ith bin   s count, to es-
timate the portion of our hypothesized bivariate normal distribution in the
truncation region (8.38).

figure 8.4 left galaxy data; binned counts. right poisson glm
density estimate.

the left panel of figure 8.4 is a perspective picture of the raw counts
in table 8.5. on the right is the    tted density from the poisson regression.
irrespective of density estimation, poisson regression has done a useful job
of smoothing the raw bin counts.

contours of equal value of the    tted log density

o  0 c o  1r c o  2m c o  3r 2 c o  4rm c o  5m2

(8.40)

are shown in figure 8.5. one can imagine the contours as truncated por-
tions of ellipsoids, of the type shown in figure 5.3. the right panel of
figure 8.4 makes it clear that we are nowhere near the center of the hypo-
thetical bivariate normal density, which must lie well beyond our dimness
limit.

dimmerfarthercountdimmerfartherdensity8.3 poisson regression

123

figure 8.5 contour curves for poisson glm density estimate for
the galaxy data. the red dot shows the point of maximum density.

the poisson deviance residual z between an observed count y and a

   tted value o(cid:22) is

z d sign.y (cid:0) o(cid:22)/d.y; o(cid:22)/1=2;

(8.41)

tist glm theory says that s dp

with d the poisson deviance from table 8.4. zj k, the deviance residual
between the count yij in the ij th bin of table 8.5 and the    tted value o(cid:22)j k
from the poisson glm, was calculated for all 270 bins. standard frequen-
j k should be about 270 if the bivari-
ate normal model (8.39) is correct.11 actually the    t was poor: s d 610.
in practice we might try adding columns to x in (8.39), e.g., rm2 or
r 2m2, improving the    t where it was worst, near the boundaries of the ta-
ble. chapter 12 demonstrates some other examples of poisson density esti-
mation. in general, poisson glms reduce density estimation to regression
model    tting, a familiar and    exible inferential technology.

j k z2

11 this is a modern version of the classic chi-squared goodness-of-   t test.

   1.5   1.0   0.50.0   21   20   19   18   17fartherdimmer 0.5  1  1.5  2  2.5  3  3.5  4  4.5  5  5.5  6  6.5  7  7.5  8  8.5  9 l124

glms and regression trees

8.4 regression trees

the data set d for a regression problem typically consists of n pairs .xi ; yi /,

d d f.xi ; yi /; i d 1; 2; : : : ; ng ;

(8.42)

where xi is a vector of predictors, or    covariates,    taking its value in some
space x , and yi is the response, assumed to be univariate in what follows.
the regression algorithm, perhaps a poisson glm, inputs d and outputs
a rule rd .x/: for any value of x in x , rd .x/ produces an estimate oy for a

possible future value of y,

oy d rd .x/:

(8.43)

in the id28 example (8.8), rd .x/ is o(cid:25).x/.
there are three principal uses for the rule rd .x/.

1 for prediction: given a new observation of x, but not of its correspond-
ing y, we use oy d rd .x/ to predict y. in the spam example, the 57
keywords of an incoming message could be used to predict whether or
not it is spam.12 (see chapter 12.)
2 for estimation: the rule rd .x/ describes a    regression surface    os over
x ,
(8.44)
the right panel of figure 8.4 shows os for the galaxy example. os can be
thought of as estimating s, the true regression surface, often de   ned in
the form of conditional expectation,

os d frd .x/; x 2

g :

x

s d fefyjxg; x 2

g :

x

x

g.)

(8.45)
(in a dichotomous situation where y is coded as 0 or 1, s d fprfy d
1jxg; x 2
for estimation, but not necessarily for prediction, we want os to accu-
rately portray s. the right panel of figure 8.4 shows the estimated galaxy
density still increasing monotonically in dimmer at the top end of the
truncation region, but not so in farther, perhaps an important clue for
directing future search counts.13 the    at region in the kidney function re-
gression curve of figure 1.2 makes almost no difference to prediction, but
is of scienti   c interest if accurate.

12 prediction of dichotomous outcomes is often called    classi   cation.   
13 physicists call a regression-based search for new objects    bump hunting.   

8.4 regression trees

125

3 for explanation: the 10 predictors for the diabetes data of section 7.3,
age, sex, bmi,. . . , were selected by the researcher in the hope of ex-
plaining the etiology of diabetes progression. the relative contribution
of the different predictors to rd .x/ is then of interest. how the regression
surface is composed is of prime concern in this use, but not in use 1 or 2
above.

the three different uses of rd .x/ raise different inferential questions.
use 1 calls for estimates of prediction error. in a dichotomous situation
such as the spam study, we would want to know both error probabilities

prf oy d spamjy d hamg

and

prf oy d hamjy d spamg :

(8.46)

for estimation, the accuracy of rd .x/ as a function of x, perhaps in stan-
dard deviation terms,

sd.x/ d sd. oyjx/;

(8.47)
would tell how closely os approximates s. use 3, explanation, requires
more elaborate inferential tools, saying for example which of the regression
coef   cients   i in (8.19) can safely be set to zero.

figure 8.6 left a hypothetical regression tree based on two
predictors x1 and x2. right corresponding regression surface.

regression trees use a simple but intuitively appealing technique to form
a regression surface: recursive partitioning. the left panel of figure 8.6
illustrates the method for a hypothetical situation involving two predictor
variables, x1 and x2 (e.g., r and m in the galaxy example). at the top of

|t1t2t3t4r1r1r2r2r3r3r4r4r5r5x1x1x1x2x2x2x1   t1x2   t2x1   t3x2   t4126

glms and regression trees

the tree, the sample population of n cases has been split into two groups:
those with x1 equal to or less than value t1 go to the left, those with x1 >
t1 to the right. the leftward group is itself then divided into two groups
depending on whether or not x2   t2. the division stops there, leaving
two terminal nodes r1 and r2. on the tree   s right side, two other splits
give terminal nodes r3, r4, and r5.
a prediction value oyrj is attached to each terminal node rj . the predic-
tion oy applying to a new observation x d .x1; x2/ is calculated by starting
x at the top of the tree and following the splits downward until a terminal
node, and its attached prediction oyrj , is reached. the corresponding re-
gression surface os is shown in the right panel of figure 8.6 (here the oyrj
happen to be in ascending order).

various algorithmic rules are used to decide which variable to split and
which splitting value t to take at each step of the tree   s construction. here
is the most common method: suppose at step k of the algorithm, groupk of
nk cases remains to be split, those cases having mean and sum of squares

yi =nk

and s2
k

.yi (cid:0) mk/2:

(8.48)

mk d x

i2groupk

d x

i2groupk

dividing groupk into groupk;left and groupk;right produces means mk;left and
mk;right, and corresponding sums of squares s2
k;right. the algorithm
proceeds by choosing the splitting variable xk and the threshold tk to min-
imize

k;left and s2

c s2

k;right:

s2
k;left

(8.49)

  7

in other words, it splits groupk into two groups that are as different from
each other as possible.  

cross-validation estimates of prediction error, chapter 12, are used to
decide when the splitting process should stop. if groupk is not to be further
divided, it becomes terminal node rk, with prediction value oyrk
d mk.
none of this would be feasible without electronic computation, but even
quite large prediction problems can be short work for modern computers.
figure 8.7 shows a regression tree analysis14 of the spam data, ta-
ble 8.3. there are seven terminal nodes, labeled 0 or 1 for decision ham
or spam. the leftmost node, say r1, is a 0, and contains 2462 ham cases
and 275 spam (compared with 2788 and 1813 in the full data set). starting
at the top of the tree, r1 is reached if it has a low proportion of $ symbols

14 using the r program rpart, in classi   cation mode, employing a different splitting rule

than the version based on (8.49).

8.4 regression trees

127

figure 8.7 regression tree on the spam data; 0 d ham, 1 d
spam. error rates: ham 5.2%, spam 17.4%. captions indicate
leftward (ham) moves.

char$, a low proportion of the word remove, and a low proportion of
exclamation marks char!.

regression trees are easy to interpret (   too many dollar signs means
spam!   ) seemingly suiting them for use 3, explanation. unfortunately, they
are also easy to overinterpret, with a reputation for being unstable in prac-
tice. discontinuous regression surfaces os, as in figure 8.6, disqualify them
for use 2, estimation. their principal use in what follows will be as key
parts of prediction algorithms, use 1. the tree in figure 8.6 has apparent
error rates (8.46) of 5.2% and 17.4%. this can be much improved upon
by    id112    (bootstrap aggregation), chapters 17 and 20, and by other
computer-intensive techniques.

compared with generalized linear models, regression trees represent a
break from classical methodology that is more stark. first of all, they are
totally nonparametric; bigger but less structured data sets have promoted
nonparametrics in twenty-   rst-century statistics. regression trees are more
computer-intensive and less ef   cient than glms but, as will be seen in part
iii, the availability of massive data sets and modern computational equip-

|char$<    0.0826remove<    0.1513char!< 0.1335capruntot<    0.3757free< 0.7219hp>=   0.0894502462/2750129/3211/20133/189130/300063/7170/990figure 8.7 . regression tree, spam data: 0=nonspam,  1=spam,error rates: nonspam 5.2%,  spam 17.4%captions indicate leftward (nonspam) moves128

glms and regression trees

ment has diminished the appeal of ef   ciency in favor of easy assumption-
free application.

8.5 notes and details

computer-age algorithms depend for their utility on statistical computing
languages. after a period of evolution, the language s (becker et al., 1988)
and its open-source successor r (r core team, 2015), have come to dom-
inate applied practice.15 generalized linear models are available from a
single r command, e.g.,

glm(y(cid:24)x,family=binomial)

for id28 (chambers and hastie, 1993), and similarly for re-
gression trees and hundreds of other applications.

the classic version of bioassay, probit analysis, assumes that each test
animal has its own lethal dose level x, and that the population distribution
of x is normal,

prfx   xg d   .  0 c   1x/

(8.50)

for unknown parameters .  0;   1/ and standard normal cdf   . then the
number of animals dying at dose x is binomial bi.nx; (cid:25)x/ as in (8.3), with
(cid:25)x d   .  0 c   1x/, or

(cid:0)1.(cid:25)x/ d   0 c   1x:

  

(8.51)
replacing the standard normal cdf   .z/ with the logistic cdf 1=.1 c e
(cid:0)z/
(which resembles   ), changes (8.51) into id28 (8.5). the
usual goal of bioassay was to estimate    ld50,    the dose lethal to 50%
of the test population; it is indicated by the open circle in figure 8.2.

cox (1970), the classic text on id28, lists berkson (1944)
as an early practitioner. wedderburn (1974) is credited with generalized
linear models in mccullagh and nelder   s in   uential text of that name,    rst
edition 1983; birch (1964) developed an important and suggestive special
case of glm theory.

the twenty-   rst century has seen an ef   orescence of computer-based re-
gression techniques, as described extensively in hastie et al. (2009). the
discussion of regression trees here is taken from their section 9.2, including
our figure 8.6. they use the spam data as a central example; it is publicly

15 previous computer packages such as sas and spss continue to play a major role in

application areas such as the social sciences, biomedical statistics, and the
pharmaceutical industry.

8.5 notes and details

129

available at ftp.ics.uci.edu. breiman et al. (1984) propelled regres-
sion trees into wide use with their cart algorithm.
  1 [p. 112] suf   ciency as in (8.13). the fisher   neyman criterion says that if
f  .x/ d h  .s.x//g.x/, when g.(cid:1)/ does not depend on   , then s.x/ is
suf   cient for   .

  2 [p. 118] equation (8.28). from (8.24)   (8.25) we have the log likelihood

function

with suf   cient statistic z d x
ing with respect to   ,

0

l  .y/ d   

z (cid:0)  .  /

y and  .  / dpn

0

(8.52)

id1 (cid:13).x

0
i   /. differentiat-

0

y (cid:0) x

p
l  .y/ d z (cid:0) p .  / d x

0
where we have used d(cid:13)=d (cid:21) d (cid:22)(cid:21) (5.55), so p(cid:13) .x
(8.53) says p
matrix r

l  .y/ with respect to    is

l  .y/ d x

0

(cid:22).  /;

(8.53)

i   / d x
0

0
i (cid:22)i .  /. but

.y (cid:0) (cid:22).  //, verifying the id113 equation (8.28).

  3 [p. 118] concavity of the log likelihood. from (8.53), the second derivative

(5.57)   (5.59). but z d x

(cid:0) r .  / d (cid:0) cov  .z/;
0
y has
cov  .z/ d x

0

(8.55)
a positive de   nite p (cid:2) p matrix, verifying the concavity of l  .y/ (which in
fact applies to any exponential family, not only glms).

   .  /x ;

  4 [p. 118] formula (8.30). the suf   cient statistic z has mean vector and co-

variance matrix

z (cid:24) .  ; v  /;

(8.56)

   .  /x (8.55). using (5.60), the

with    d e  fzg (5.58) and v   d x
   rst-order taylor series for o   as a function of z is
   .z (cid:0)   /:
(cid:0)1

:d    c v

o  

0

(8.57)
(cid:0)2 rather
taken literally, (8.57) gives (8.30). in the ols formula, we have (cid:27)
than (cid:27) 2 since the natural parameter    for the normal entry in table 8.4 is
(cid:22)=(cid:27) 2.

  5 [p. 118] formula (8.33). this formula, attributed to hoeffding (1965), is a
key result in the interpretation of glm    tting. applying de   nition (8.31)

(8.54)

130

glms and regression trees

to family (8.32) gives

1

2

d.(cid:21)1; (cid:21)2/ d e(cid:21)1

f.(cid:21)1 (cid:0) (cid:21)2/y (cid:0)   (cid:13).(cid:21)1/ (cid:0) (cid:13).(cid:21)2/  g

d .(cid:21)1 (cid:0) (cid:21)2/(cid:22)1 (cid:0)   (cid:13).(cid:21)1/ (cid:0) (cid:13).(cid:21)2/   :

(8.58)

(cid:16)o

if (cid:21)1 is the id113 o
0 d d   log f(cid:21).y/  =d (cid:21) d y (cid:0) p(cid:13) .(cid:21)/ d y (cid:0) (cid:22)(cid:21)), giving16

(cid:21) then (cid:22)1 d y (from the maximum likelihood equation

  d(cid:16)o

(cid:21) (cid:0) (cid:21)

 

y (cid:0)h

(cid:16)o

  (cid:0) (cid:13).(cid:21)/
i

d

(cid:21); (cid:21)

(8.59)
for any choice of (cid:21). but the right-hand side of (8.59) is (cid:0) log  f(cid:21).y/=fy.y/  ,
verifying (8.33).

(cid:21)

(cid:13)

2

1

  6 [p. 120] table 8.5. the galaxy counts are from loh and spillar   s 1988

redshift survey, as discussed in efron and petrosian (1992).

  7 [p. 126] criteria (8.49). abbreviating    left    and    right    by l and r, we

have

d s2

kl

c s2

kr

s2
k

c nkl nkr

nk

.mkl (cid:0) mkr /2;

(8.60)

with nkl and nkr the subgroup sizes, showing that minimizing (8.49) is
the same as maximizing the last term in (8.60). intuitively, a good split is
one that makes the left and right groups as different as possible, the ideal
being all 0s on the left and all 1s on the right, making the terminal nodes
   pure.   

16 in some cases o(cid:21) is unde   ned; for example, when y d 0 for a poisson response,

o(cid:21) d log.y/ which is unde   ned. but, in (8.59), we assume that o(cid:21)y d 0. similarly for

binary y and the binomial family.

9

survival analysis and the em algorithm

survival analysis had its roots in governmental and actuarial statistics,
spanning centuries of use in assessing life expectancies, insurance rates,
and annuities. in the 20 years between 1955 and 1975, survival analysis
was adapted by statisticians for application to biomedical studies. three
of the most popular post-war statistical methodologies emerged during
this period: the kaplan   meier estimate, the log-rank test,1 and cox   s pro-
portional hazards model, the succession showing increased computational
demands along with increasingly sophisticated inferential justi   cation. a
connection with one of fisher   s ideas on id113
leads in the last section of this chapter to another statistical method that has
   gone platinum,    the em algorithm.

9.1 life tables and hazard rates

an insurance company   s life table appears in table 9.1, showing its number
of clients (that is, life insurance policy holders) by age, and the number of
deaths during the past year in each age group,2 for example    ve deaths
among the 312 clients aged 59. the column labeled os is of great interest
to the company   s actuaries, who have to set rates for new policy holders.
it is an estimate of survival id203: id203 0.893 of a person aged
30 (the beginning of the table) surviving past age 59, etc. os is calculated
according to an ancient but ingenious algorithm.

let x represent a typical lifetime, so

fi d prfx d ig

(9.1)

1 also known as the mantel   haenszel or cochran   mantel   haenszel test.
2 the insurance company is    ctitious but the deaths y are based on the true 2010 rates for

us men, per social security administration data.

131

y

y

n

n

oh

oh

age

age

survival analysis and the em algorithm

h d hazard rate y=n, os d

132
table 9.1 insurance company life table; at each age, n d number of
policy holders, y d number of deaths, o
survival id203 estimate (9.6).
os
1.000
1.000
1.000
1.000
1.000
.986
.986
.986
.986
.986
.986
.986
.986
.986
.986
.976
.969
.964
.964
.956
.948
.945
.940
.933
.927
.925
.916
.910
.908
.893

116
44
95
97
120
71
125
122
82
113
79
90
154
103
144
192
153
179
210
259
225
346
370
568
1081
1042
1094
597
359
312

os
.889
.871
.849
.830
.820
.820
.798
.785
.755
.745
.723
.704
.696
.689
.676
.648
.611
.611
.578
.528
.506
.481
.431
.385
.358
.321
.277
.224
.192
.168

.000
.000
.000
.000
.000
.014
.000
.000
.000
.000
.000
.000
.000
.000
.000
.010
.007
.006
.000
.008
.009
.003
.005
.007
.007
.002
.009
.007
.003
.016

.004
.020
.026
.022
.012
.000
.027
.016
.039
.013
.030
.026
.011
.011
.018
.041
.058
.000
.053
.087
.042
.048
.104
.107
.071
.103
.137
.191
.143
.127

231
245
196
180
170
114
185
127
127
158
100
155
92
90
110
122
138
46
75
69
95
124
67
112
113
116
124
110
63
79

30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
2
1
1
0
2
2
1
2
4
8
2
10
4
1
5

60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

1
5
5
4
2
0
5
2
5
2
3
4
1
1
2
5
8
0
4
6
4
6
7
12
8
12
17
21
9
10

is the id203 of dying at age i, and

si dx

j(cid:21)i

fj d prfx (cid:21) ig

(9.2)

is the id203 of surviving past age i (cid:0) 1. the hazard rate at age i is by

9.1 life tables and hazard rates

133

de   nition

sij d jy

hi d fi =si d prfx d ijx (cid:21) ig;

(9.3)

the id203 of dying at age i given survival past age i (cid:0) 1.
a crucial observation is that the id203 sij of surviving past age j
given survival past age i (cid:0) 1 is the product of surviving each intermediate
year,

.1 (cid:0) hk/ d prfx > jjx (cid:21) igi

kdi

(9.4)
   rst you have to survive year i, id203 1 (cid:0) hi; then year i c 1, proba-
bility 1 (cid:0) hic1, etc., up to year j , id203 1 (cid:0) hj . notice that si (9.2)
equals s1;i(cid:0)1.
os in table 9.1 is an estimate of sij for i d 30. first, each hi was
estimated as the binomial proportion of the number of deaths yi among the
ni clients,

o
hi d yi =ni ;
(cid:16)
1 (cid:0) o

os30;j d jy

hk

kd30

 

:

(9.5)

(9.6)

and then we set

the insurance company doesn   t have to wait 50 years to learn the proba-
bility of a 30-year-old living past 80 (estimated to be 0.506 in the table).
one year   s data suf   ces.3

hazard rates are more often described in terms of a continuous positive
random variable t (often called    time   ), having density function f .t / and
   reverse cdf,    or survival function,

s.t / dz 1

f .x/ dx d prft (cid:21) tg:

the hazard rate

t

h.t / d f .t /=s.t /

satis   es

:d prft 2 .t; t c dt /jt (cid:21) tg
for dt ! 0, in analogy with (9.3). the analog of (9.4) is  

h.t /dt

3 of course the estimates can go badly wrong if the hazard rates change over time.

(9.7)

(9.8)

(9.9)

  1

134

survival analysis and the em algorithm
prft (cid:21) t1jt (cid:21) t0g d exp

h.x/ dx

(cid:26)(cid:0)z t1

t0
so in particular the reverse cdf (9.7) is given by

(cid:27)

s.t / d exp

h.x/ dx

:

a one-sided exponential density
f .t / d .1=c/e

for t (cid:21) 0

has s.t / d expf(cid:0)t =cg and constant hazard rate

(cid:26)(cid:0)z t

0

(cid:0)t =c

h.t / d 1=c:

(cid:27)

(9.10)

(9.11)

(9.12)

(9.13)

the name    memoryless    is quite appropriate for density (9.12): having
survived to any time t, the id203 of surviving dt units more is always
the same, about 1 (cid:0) dt =c, no matter what t is. if human lifetimes were
exponential there wouldn   t be old or young people, only lucky or unlucky
ones.

9.2 censored data and the kaplan   meier estimate

table 9.2 reports the survival data from a randomized clinical trial run by
ncog (the northern california oncology group) comparing two treat-
ments for head and neck cancer: arm a, chemotherapy, versus arm b,
chemotherapy plus radiation. the response for each patient is survival time
in days. the c sign following some entries indicates censored data, that is,
survival times known only to exceed the reported value. these are patients
   lost to followup,    mostly because the ncog experiment ended with some
of the patients still alive.

this is what the experimenters hoped to see of course, but it compli-
cates the comparison. notice that there is more censoring in arm b. in
the absence of censoring we could run a simple two-sample test, maybe
wilcoxon   s test, to see whether the more aggressive treatment of arm b
was increasing the survival times. kaplan   meier curves provide a graph-
ical comparison that takes proper account of censoring. (the next section
describes an appropriate censored data two-sample test.) kaplan   meier
curves have become familiar friends to medical researchers, a lingua franca
for reporting clinical trial results.

life table methods are appropriate for censored data. table 9.3 puts the
arm a results into the same form as the insurance study of table 9.1, now

9.2 censored data and kaplan   meier

135

table 9.2 censored survival times in days, from two arms of the ncog
study of head/neck cancer.

7
108
149
218
405
1116+

37
133
195
528+
1331+

34
112
154
225
417
1146

84
140
209
547+
1557

arm a: chemotherapy

42
129
157
241
420
1226+

63
133
160
248
440
1349+

64
133
160
273
523
1412+

74+
139
165
277
523+
1417

83
140
173
279+
583

84
140
176
297
594

91
146
185+
319+
1101

arm b: chemotherapycradiation

92
146
249
613+
1642+

94
155
281
633
1771+

110
159
319
725
1776

112
169+
339
759+
1897+

119
173
432
817
2023+

127
179
469
1092+
2146+

130
194
519
1245+
2297+

with the time unit being months. of the 51 patients enrolled4 in arm a,
y1 d 1 was observed to die in the    rst month after treatment; this left 50 at
risk, y2 d 2 of whom died in the second month; y3 d 5 of the remaining
48 died in their third month after treatment, and one was lost to followup,
this being noted in the l column of the table, leaving n4 d 40 patients    at
risk    at the beginning of month 5, etc.
os here is calculated as in (9.6) except starting at time 1 instead of 30.
there is nothing wrong with this estimate, but binning the ncog survival
data by months is arbitrary. why not go down to days, as the data was
originally presented in table 9.2? a kaplan   meier survival curve is the
limit of life table survival estimates as the time unit goes to zero.

observations zi for censored data problems are of the form

zi d .ti ; di /;

(9.14)

where ti equals the observed survival time while di indicates whether or
not there was censoring,
di d

1 if death observed
0 if death not observed

(9.15)

(

4 the patients were enrolled at different calendar times, as they entered the study, but for

each patient    time zero    in the table is set at the beginning of his or her treatment.

136

survival analysis and the em algorithm

table 9.3 arm a of the ncog head/neck cancer study, binned by month;
n d number at risk, y d number of deaths, l d lost to followup, h d
hazard rate y=n; os d life table survival estimate.

month

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

n

51
50
48
42
40
32
25
24
21
19
16
15
15
15
12
11
11
11
9
9
7
7
7
7

y

1
2
5
2
8
7
0
3
2
2
0
0
0
3
1
0
0
1
0
2
0
0
0
0

l

0
0
1
0
0
0
1
0
0
1
1
0
0
0
0
0
0
1
0
0
0
0
0
0

h

.020
.040
.104
.048
.200
.219
.000
.125
.095
.105
.000
.000
.000
.200
.083
.000
.000
.091
.000
.222
.000
.000
.000
.000

os
.980
.941
.843
.803
.642
.502
.502
.439
.397
.355
.355
.355
.355
.284
.261
.261
.261
.237
.237
.184
.184
.184
.184
.184

month

n

y

25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

7
7
7
7
7
7
7
7
7
7
7
7
7
5
4
4
4
3
3
3
3
2
2

0
0
0
0
0
0
0
0
0
0
0
0
1
1
0
0
0
0
0
0
0
0
1

l

0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
1
0
0
0
1
0
1

h

.000
.000
.000
.000
.000
.000
.000
.000
.000
.000
.000
.000
.143
.200
.000
.000
.000
.000
.000
.000
.000
.000
.500

os
.184
.184
.184
.184
.184
.184
.184
.184
.184
.184
.184
.184
.158
.126
.126
.126
.126
.126
.126
.126
.126
.126
.063

(so di d 0 corresponds to a c in table 9.2). let

t.1/ < t.2/ < t.3/ < : : : < t.n/

(9.16)

  2

denote the ordered survival times,5 censored or not, with corresponding
indicator d.k/ for t.k/. the kaplan   meier estimate for survival id203
 d.k/
s.j / d prfx > t.j /g is then   the life table estimate

  n (cid:0) k

os.j / dy

(9.17)

:

n (cid:0) k c 1

k j

5 assuming no ties among the survival times, which is convenient but not crucial for what

follows.

9.2 censored data and kaplan   meier

137

os jumps downward at death times tj , and is constant between observed
deaths.

figure 9.1 ncog kaplan   meier survival curves; lower arm a
(chemotherapy only); upper arm b (chemotherapycradiation).
vertical lines indicate approximate 95% con   dence intervals.

the kaplan   meier curves for both arms of the ncog study are shown
in figure 9.1. arm b, the more aggressive treatment, looks better: its 50%
survival estimate occurs at 324 days, compared with 182 days for arm a.
the answer to the inferential question   is b really better than a or is this
just random variability?   is less clear-cut.
the accuracy of os.j / can be estimated from greenwood   s formula    for   3
its standard deviation (now back in life table notation),

(cid:16) os.j /

  d os.j /

sd

24x

k j

351=2

yk

nk.nk (cid:0) yk/

:

(9.18)

the vertical bars in figure 9.1 are approximate 95% con   dence limits for
the two curves based on greenwood   s formula. they overlap enough to cast
doubt on the superiority of arm b at any one choice of    days,    but the two-
sample test of the next section, which compares survival at all timepoints,
will provide more de   nitive evidence.

life tables and the kaplan   meier estimate seem like a textbook example
of frequentist id136 as described in chapter 2: a useful probabilistic

02004006008001000120014000.00.20.40.60.81.0dayssurvivalarm a: chemotherapy onlyarm b: chemotherapy + radiation  4

138

survival analysis and the em algorithm

result is derived (9.4), and then implemented by the plug-in principle (9.6).
there is more to the story though, as discussed below.

life table curves are nonparametric, in the sense that no particular re-
lationship is assumed between the hazard rates hi. a parametric approach
can greatly improve the curves    accuracy.    reverting to the life table form
of table 9.3, we assume that the death counts yk are independent binomi-
als,

ind(cid:24) bi.nk; hk/;

(9.19)
and that the logits (cid:21)k d logfhk=.1 (cid:0) hk/g satisfy some sort of regression
equation

yk

(9.20)
as in (8.22). a cubic regression for instance would set xk d .1; k; k2; k3/
0
for the kth row of x, with x 47 (cid:2) 4 for table 9.3.

(cid:21) d x   ;

figure 9.2 parametric hazard rate estimates for the ncog study.
arm a, black curve, has about 2.5 times higher hazard than
arm b for all times more than a year after treatment. standard
errors shown at 15 and 30 months.

the parametric hazard-rate estimates in figure 9.2 were instead based

on a    cubic-linear spline,   

xk d(cid:0)1; k; .k (cid:0) 11/2(cid:0); .k (cid:0) 11/3(cid:0)(cid:1)0

(9.21)
where .k (cid:0) 11/(cid:0) equals k (cid:0) 11 for k   11, and 0 for k (cid:21) 11. the vector

;

0102030400.000.050.100.15monthsdeaths per montharm a: chemotherapy onlyarm b: chemotherapy + radiation9.3 the log-rank test

139
(cid:21) d x    describes a curve that is cubic for k   11, linear for k (cid:21) 11,
.(cid:16)
and joined smoothly at 11. the id28 maximum likelihood
estimate o   produced hazard rate curves
o
1 c e
hk d 1

o   
as in (8.8). the black curve in figure 9.2 traces o
red curve is that for arm b,    t separately.

hk for arm a, while the

(9.22)

(cid:0)x

0

k

comparison in terms of hazard rates is more informative than the sur-
vival curves of figure 9.1. both arms show high initial hazards, peaking at
   ve months, and then a long slow decline.6 arm b hazard is always below
arm a, in a ratio of about 2.5 to 1 after the    rst year. approximate 95%
con   dence limits, obtained as in (8.30), don   t overlap, indicating superior-
ity of arm b at 15 and 30 months after treatment.

in addition to its frequentist justi   cation, survival analysis takes us into
the fisherian realm of conditional id136, section 4.3. the yk   s in model
(9.19) are considered conditionally on the nk   s, effectively treating the nk
values in table 9.3 as ancillaries, that is as    xed constants, by themselves
containing no statistical information about the unknown hazard rates. we
will examine this tactic more carefully in the next two sections.

9.3 the log-rank test

a randomized clinical trial, interpreted by a two-sample test, remains the
gold standard of medical experimentation. interpretation usually involves
student   s two-sample t-test or its nonparametric cousin wilcoxon   s test,
but neither of these is suitable for censored data. the log-rank test   
employs an ingenious extension of life tables for the nonparametric two-
sample comparison of censored survival data.

table 9.4 compares the results of the ncog study for the    rst six months7
after treatment. at the beginning8 of month 1 there were 45 patients    at
risk    in arm b, none of whom died, compared with 51 at risk and 1 death
in arm a. this left 45 at risk in arm b at the beginning of month 2, and
50 in arm a, with 1 and 2 deaths during the month respectively. (losses

  5

6 the cubic   linear spline (9.21) is designed to show more detail in the early months,

where there is more available patient data and where hazard rates usually change more
quickly.

7 a month is de   ned here as 365/12=30.4 days.
8 the    beginning of month 1    is each patient   s initial treatment time, at which all 45

patients ever enrolled in arm b were at risk, that is, available for observation.

140

survival analysis and the em algorithm

table 9.4 life table comparison for the    rst six months of the ncog
study. for example, at the beginning of the sixth month after treatment,
there were 33 remaining arm b patients, of whom 4 died during the
month, compared with 32 at risk and 7 dying in arm a. the conditional
expected number of deaths in arm a, assuming the null hypothesis of
equal hazard rates in both arms, was 5.42, using expression (9.24).

month

arm b

arm a

at risk died

at risk died

expected number
arm a deaths

1
2
3
4
5
6

45
45
44
43
38
33

0
1
1
5
5
4

51
50
48
42
40
32

1
2
5
2
8
7

.53
1.56
3.13
3.46
6.67
5.42

to followup were assumed to occur at the end of each month; there was 1
such at the end of month 3, reducing the number at risk in arm a to 42 for
month 4.)

the month 6 data is displayed in two-by-two tabular form in table 9.5,
showing the notation used in what follows: na for the number at risk in
arm a, nd for the number of deaths, etc.; y indicates the number of arm a
deaths. if the marginal totals na; nb ; nd ; and ns are given, then y deter-
mines the other three table entries by subtraction, so we are not losing any
information by focusing on y.

table 9.5 two-by-two display of month-6 data for the ncog study. e is
the expected number of arm a deaths assuming the null hypothesis of
equal hazard rates (last column of table 9.4).

arm a

arm b

died
y d 7
e d 5:42

4
d 11

nd

survived

25

29

ns d 54

na d 32
nb d 33
n d 65

consider the null hypothesis that the hazard rates (9.3) for month 6 are

9.3 the log-rank test

the same in arm a and arm b,

h0.6/ w ha6 d hb6:
under h0.6/, y has mean e and variance v ,

e d nand =n
v d nanb nd ns

  (cid:2)n2.n (cid:0) 1/(cid:3) ;

141

(9.23)

(9.24)

as calculated according to the hypergeometric distribution.   e d 5:42 and   6
v d 2:28 in table 9.5.

we can form a two-by-two table for each of the n d 47 months of the
ncog study, calculating yi ; ei, and vi for month i. the log-rank statistic
z is then de   ned to be  

  7

z d nx

id1

.yi (cid:0) ei /

!1=2

,  nx

id1

vi

:

(9.25)

the idea here is simple but clever. each month we test the null hypothesis
of equal hazard rates

h0.i / w hai d hbi :

(9.26)
the numerator yi (cid:0) ei has expectation 0 under h0.i /, but, if hai is greater
than hbi, that is, if treatment b is superior, then the numerator has a pos-
itive expectation. adding up the numerators gives us power to detect a
general superiority of treatment b over a, against the null hypothesis of
equal hazard rates, hai d hbi for all i.
for the ncog study, binned by months,
ei d 32:9;

vi d 16:0;

yi d 42;

nx

nx

nx

(9.27)

id1

id1

id1

giving log-rank test statistic

z d 2:27:

asymptotic calculations based on the central limit theorem suggest

(9.28)

(9.29)

z p(cid:24)

n .0; 1/

under the null hypothesis that the two treatments are equally effective, i.e.,
that hai d hbi for i d 1; 2; : : : ; n . in the usual interpretation, z d
2:27 is signi   cant at the one-sided 0.012 level, providing moderately strong
evidence in favor of treatment b.

an impressive amount of inferential guile goes into the log-rank test.

142

survival analysis and the em algorithm

1 working with hazard rates instead of densities or cdfs is essential for

survival data.

2 conditioning at each period on the numbers at risk, na and nb in ta-
ble 9.5,    nesses the dif   culties of censored data; censoring only changes
the at-risk numbers in future periods.

3 also conditioning on the number of deaths and survivals, nd and ns
in table 9.5, leaves only the univariate statistic y to interpret at each
period, which is easily done through the null hypothesis of equal hazard
rates (9.26).
4 adding the discrepancies yi (cid:0) ei in the numerator of (9.25) (rather than
say, adding the individual z values zi d .yi (cid:0) ei /=v 1=2
, or adding the
i values) accrues power for the natural alternative hypothesis    hai >
z2
hbi for all i,    while avoiding destabilization from small values of vi.

i

each of the four tactics had been used separately in classical applica-
tions. putting them together into the log-rank test was a major inferential
accomplishment, foreshadowing a still bigger step forward, the propor-
tional hazards model, our subject in the next section.

conditional id136 takes on an aggressive form in the log-rank test.
let di indicate all the data except yi available at the end of the ith period.
for month 6 in the ncog study, d6 includes all data for months 1   5 in
table 9.4, and the marginals na; nb ; nd ; and ns in table 9.5, but not the y
value for month 6. the key assumption is that, under the null hypothesis of
equal hazard rates (9.26),

yijdi

ind(cid:24) .ei ; vi /;

(9.30)

   ind    here meaning that the yi   s can be treated as independent quantities
with means and variances (9.24). in particular, we can add the variances
vi to get the denominator of (9.25). (a    partial likelihood    argument, de-
scribed in the endnotes, justi   es adding the variances.)
the purpose of all this fisherian conditioning is to simplify the infer-
ence: the conditional distribution yijdi depends only on the hazard rates
hai and hbi;    nuisance parameters,    relating to the survival times and cen-
soring mechanism of the data in table 9.2, are hidden away. there is a price
to pay in testing power, though usually a small one. the lost-to-followup
values l in table 9.3 have been ignored, even though they might contain
useful information, say if all the early losses occurred in one arm.

9.4 the proportional hazards model

143

9.4 the proportional hazards model

the kaplan   meier estimator is a one-sample device, dealing with data
coming from a single distribution. the log-rank test makes two-sample
comparisons. proportional hazards ups the ante to allow for a full regres-
sion analysis of censored data. now the individual data points zi are of the
form

zi d .ci ; ti ; di /;

(9.31)

where ti and di are observed survival time and censoring indicator, as in
(9.14)   (9.15), and ci is a known 1 (cid:2) p vector of covariates whose effect
on survival we wish to assess. both of the previous methods are included
here: for the log-rank test, ci indicates treatment, say ci equals 0 or 1 for
arm a or arm b, while ci is absent for kaplan   meier.
table 9.6 pediatric cancer data,    rst 20 of 1620 children. sex 1 d male,
2 d female; race 1 d white, 2 d nonwhite; age in years; entry d
calendar date of entry in days since july 1, 2001; far d home distance
from treatment center in miles; t d survival time in days; d d 1 if death
observed, 0 if not.

sex

race

age

entry

far

t

d

1
2
2
2
1
2
2
2
1
2
1
1
1
1
2
1
2
1
1
2

1
1
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2

2.50
10.00
18.17
3.92
11.83
11.17
5.17
10.58
1.17
6.83
13.92
5.17
2.50
.83
15.50
17.83
3.25
10.75
18.08
5.83

710
1866
2531
2210
875
1419
1264
670
1518
2101
1239
518
1849
2758
2004
986
1443
2807
1229
2727

108
38
100
100
78
0
28
120
73
104
0
117
99
38
12
65
58
42
23
23

325
1451
221
2158
760
168
2976
1833
131
2405
969
1894
193
1756
682
1835
2993
1616
1302
174

0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
1

144

survival analysis and the em algorithm

medical studies regularly produce data of form (9.31). an example, the
pediatric cancer data, is partially listed in table 9.6. the    rst 20 of n d
1620 cases are shown. there are    ve explanatory covariates (de   ned in the
table   s caption): sex, race, age at entry, calendar date of entry into
the study, and far, the distance of the child   s home from the treatment
center. the response variable t is survival in days from time of treatment
until death. happily, only 160 of the children were observed to die (d d
1). some left the study for various reasons, but most of the d d 0 cases
were those children still alive at the end of the study period. of particular
interest was the effect of far on survival. we wish to carry out a regression
analysis of this heavily censored data set.

the proportional hazards model assumes that the hazard rate hi .t / for

the ith individual (9.8) is

hi .t / d h0.t /ec

0
i    :

(9.32)

here h0.t / is a baseline hazard (which we need not specify) and    is an
unknown p-parameter vector we want to estimate. for concise notation,
let

model (9.32) says that individual i   s hazard is a constant nonnegative factor
 i times the baseline hazard. equivalently, from (9.11), the ith survival
function si .t / is a power of the baseline survival function s0.t /,

 i d ec

i   i
0

si .t / d s0.t / i :

(9.33)

(9.34)

larger values of  i lead to more quickly declining survival curves, i.e., to
worse survival (as in (9.11)).
let j be the number of observed deaths, j d 160 here, occurring at

times

t.1/ < t.2/ < : : : < t.j /;

(9.35)

again for convenience assuming no ties.9 just before time t.j / there is a
risk set of individuals still under observation, whose indices we denote by
rj ,

(9.36)

rj d fi w ti (cid:21) t.j /g:

let ij be the index of the individual observed to die at time t.j /. the

key to proportional hazards regression is the following result.

9 more precisely, assuming only one event, a death, occurred at t.j /, with none of the

other individuals being lost to followup at exact time t.j /.

9.4 the proportional hazards model

145

lemma    under the proportional hazards model (9.32), the conditional   8
id203, given the risk set rj , that individual i in rj is the one ob-
served to die at time t.j / is
prfij d ij

(cid:30) x

(9.37)

0
k    :

0
i   

ec

rjg d ec

k2

rj

to put it in words, given that one person dies at time t.j /, the id203
0
i   /, among the set of individuals
it is individual i is proportional to exp.c
at risk.

for the purpose of estimating the parameter vector    in model (9.32),

we multiply factors (9.37) to form the partial likelihood

l.  / d jy

jd1

0@e

0
ij

c

  

(cid:30) x

k2

rj

1a :

0
k   

ec

l.  / is then treated as an ordinary likelihood function, yielding an approx-
imately unbiased id113-like estimate

(9.38)

(9.39)

with an approximate covariance obtained from the second-derivative ma-
trix of l.  / d log l.  /,   as in section 4.3,

  9

o
   d arg max

fl.  /g ;

  

   p(cid:24)  

o

  ;

 i(cid:0)1 

h(cid:0)r

l

(cid:16) o

  

:

(9.40)

table 9.7 shows the proportional hazards analysis of the pediatric can-
cer data, with the covariates age, entry, and far standardized to have
mean 0 and standard deviation 1 for the 1620 cases.10 neither sex nor
race seems to make much difference. we see that age is a mildly signif-
icant factor, with older children doing better (i.e., the estimated regression
coef   cient is negative). however, the dramatic effects are date of entry
and far. individuals who entered the study later survived longer   perhaps
the treatment protocol was being improved   while children living farther
away from the treatment center did worse.

justi   cation of the partial likelihood calculations is similar to that for
the log-rank test, but there are some important differences, too: the pro-
portional hazards model is semiparametric (   semi    because we don   t have
to specify h0.t / in (9.32)), rather than nonparametric as before; and the

10 table 9.7 was obtained using the r program coxph.

146

survival analysis and the em algorithm

table 9.7 proportional hazards analysis of pediatric cancer data (age,
entry and far standardized). age signi   cantly negative, older children
doing better; entry very signi   cantly negative, showing hazard rate
declining with calendar date of entry; far very signi   cantly positive,
indicating worse results for children living farther away from the
treatment center. last two columns show limits of approximate 95%
con   dence intervals for exp.  /.

  

(cid:0).023
sex
race
.282
(cid:0).235
age
entry (cid:0).460
far
.296

sd

z-value
(cid:0).142
.160
.169
1.669
.088 (cid:0)2.664
.079 (cid:0)5.855
4.117
.072

p-value

exp.  /

lower upper

.887
.095
.008
.000
.000

.98
1.33
.79
.63
1.34

.71
.95
.67
.54
1.17

1.34
1.85
.94
.74
1.55

emphasis on likelihood has increased the fisherian nature of the id136,
moving it further away from pure frequentism. still more fisherian is the
emphasis on likelihood id136 in (9.38)   (9.40), rather than the direct
frequentist calculations of (9.24)   (9.25).

the conditioning argument here is less obvious than that for the kaplan   
meier estimate or the log-rank test. has its convenience possibly come at
too high a price? in fact it can be shown that id136 based on the partial
likelihood is highly ef   cient, assuming of course the correctness of the
proportional hazards model (9.32).

9.5 missing data and the em algorithm

censored data, the motivating factor for survival analysis, can be thought
of as a special case of a more general statistical topic, missing data. what   s
missing, in table 9.2 for example, are the actual survival times for the
c cases, which are known only to exceed the tabled values. if the data
were not missing, we could use standard statistical methods, for instance
wilcoxon   s test, to compare the two arms of the ncog study. the em algo-
rithm is an iterative technique for solving missing-data inferential problems
using only standard methods.
a missing-data situation is shown in figure 9.3: n d 40 points have
been independently sampled from a bivariate normal distribution (5.12),

9.5 missing data and the em algorithm

147

figure 9.3 forty points from a bivariate normal distribution, the
last 20 with x2 missing (circled).

means .(cid:22)1; (cid:22)2/, variances .(cid:27) 2

1 ; (cid:27) 2

2 /, and correlation (cid:26),

 

!

x1i
x2i

ind(cid:24)

n2

  

!

;

  (cid:27) 2

1

(cid:27)1(cid:27)2(cid:26)

(cid:22)1
(cid:22)2

(cid:27)1(cid:27)2(cid:26)

(cid:27) 2
2

 !

:

(9.41)

however, the second coordinates of the last 20 points have been lost. these
are represented by the circled points in figure 9.3, with their x2 values
arbitrarily set to 0.
we wish to    nd the maximum likelihood estimate of the parameter vec-
tor   d .(cid:22)1; (cid:22)2, (cid:27)1; (cid:27)2; (cid:26)/. the standard maximum likelihood estimates
o(cid:22)2 d 40x
" 40x
#1=2
.x2i (cid:0) o(cid:22)2/2 =40
#,

id1
.x1i (cid:0) o(cid:22)1/2 =40

o(cid:22)1 d 40x
" 40x

id1
.x1i (cid:0) o(cid:22)1/ .x2i (cid:0) o(cid:22)2/ =40

" 40x

id1
o(cid:26) d

#1=2

.o(cid:27)1o(cid:27)2/ ;

o(cid:27)1 d

o(cid:27)2 d

x2i =40;

x1i =40;

id1

;

;

id1

(9.42)

llllllllllllllllllllllllllllllllllllllll012345   0.50.00.51.01.52.0x1x2llllllllllllllllllll148

survival analysis and the em algorithm

are unavailable for (cid:22)2, (cid:27)2, and (cid:26) because of the missing data.
the em algorithm begins by    lling in the missing data in some way, say
by setting x2i d 0 for the 20 missing values, giving an arti   cially complete
data set data.0/. then it proceeds as follows.
(cid:15) the standard method (9.42) is applied to the    lled-in data.0/ to produce
o
1 ; o(cid:22).0/
  .0/ d . o(cid:22).0/
2 ; o(cid:26).0//; this is the m (   maximizing   ) step.11
(cid:15) each of the missing values is replaced by its conditional expectation
(assuming   d o
  .0/) given the nonmissing data; this is the e (   expecta-
tion   ) step. in our case the missing values x2i are replaced by

1 ; o(cid:27) .0/

2 ; o(cid:27) .0/

(cid:16)
x1i (cid:0) o(cid:22).0/

 

o(cid:22).0/

c o(cid:26).0/

o(cid:27) .0/
2o(cid:27) .0/

1

1

2

:

  .j /c1 (cid:0) o

  .j /k is suitably small.

(9.43)
(cid:15) the e and m steps are repeated, at the j th stage giving a new arti   cially
complete data set data.j / and an updated estimate o
  .j /. the iteration
stops when k o
table 9.8 shows the em algorithm at work on the bivariate normal ex-
ample of figure 9.3. in exponential families the algorithm is guaranteed to
converge to the id113 o
  based on just the observed data o; moreover, the
likelihood fo  .j / .o/ increases with every step j . (the convergence can be
sluggish, as it is here for o(cid:27)2 and o(cid:26).)
the em algorithm ultimately derives from the fake-data principle, a
property of id113 going back to fisher that can
only brie   y be summarized here.    let x d .o; u/ represent the    complete
data,    of which o is observed while u is unobserved or missing. write the
density for x as

f  .x/ d f  .o/f  .ujo/;

(9.44)

  .o/ be the id113 of   based just on o.

and let o
suppose we now generate simulations of u by sampling from the condi-
tional distribution fo  .o/.ujo/,

(cid:3)k (cid:24) fo  .o/.ujo/

u

for k d 1; 2; : : : ; k

(9.45)

(the stars indicating creation by the statistician and not by observation),
giving fake complete-data values x
(cid:3) d fx

(cid:3)k d .o; u
(cid:3)2; : : : ; x
(cid:3)1; x

(cid:3)k/. let
(cid:3)kg;

(9.46)

11 in this example, o(cid:22).0/

1

data
and o(cid:27) .0/

1

and, as in table 9.8, stay the same in subsequent steps of the algorithm.

are available as the complete-data estimates in (9.42),

  10

9.5 missing data and the em algorithm

149

table 9.8 em algorithm for estimating means, standard deviations, and
the correlation of the bivariate normal distribution that gave the data in
figure 9.3.

step

(cid:22)1

(cid:22)2

(cid:27)1

(cid:27)2

(cid:26)

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86
1.86

.463
.707
.843
.923
.971
1.002
1.023
1.036
1.045
1.051
1.055
1.058
1.060
1.061
1.062
1.063
1.064
1.064
1.064
1.064

1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08
1.08

.738
.622
.611
.636
.667
.694
.716
.731
.743
.751
.756
.760
.763
.765
.766
.767
.768
.768
.769
.769

.162
.394
.574
.679
.736
.769
.789
.801
.808
.813
.816
.819
.820
.821
.822
.822
.823
.823
.823
.823

 

 

1 f  .x

(cid:3) goes to o

(cid:3)k/ yields id113 o

whose notional likelihoodqk
(cid:3). it then turns out
that o
  .o/ as k goes to in   nity. in other words, maximum likeli-
hood estimation is self-consistent: generating arti   cial data from the id113
density fo  .o/.ujo/ doesn   t change the id113. moreover, any value o
  .0/ not
equal to the id113 o
  .o/ cannot be self-consistent: carrying through (9.45)   
(9.46) using fo  .0/ .ujo/ leads to hypothetical id113 o
  .1/ having fo  .1/ .o/ >
fo  .0/ .o/, etc., a more general version of the em algorithm.12

modern technology allows social scientists to collect huge data sets,
perhaps hundreds of responses for each of thousands or even millions of
individuals. inevitably, some entries of the individual responses will be
missing. imputation amounts to employing some version of the fake-data
principle to    ll in the missing values. imputation   s goal goes beyond    nd-
be replaced by .o; e .j /.ujo//, with e .j / indicating expectation with respect to o  .j /,

(cid:3)
12 simulation (9.45) is unnecessary in exponential families, where at each stage data

can

as in (9.43).

150

survival analysis and the em algorithm

  11

ing the id113, to the creation of graphs, con   dence intervals, histograms,
and more, using only convenient, standard complete-data methods.
finally, returning to survival analysis, the kaplan   meier estimate (9.17)
is itself self-consistent.    consider the arm a censored observation 74c
in table 9.2. we know that that patient   s survival time exceeded 74. sup-
pose we distribute his id203 mass (1=51 of the arm a sample) to the
right, in accordance with the conditional distribution for x > 74 de   ned
by the arm a kaplan   meier survival curve. it turns out that redistributing
all the censored cases does not change the original kaplan   meier survival
curve; kaplan   meier is self-consistent, leading to its identi   cation as the
   nonparametric id113    of a survival function.

9.6 notes and details

the progression from life tables, kaplan   meier curves, and the log-rank
test to proportional hazards regression was modest in its computational
demands, until the    nal step. kaplan   meier curves lie within the capabil-
ities of mechanical calculators. not so for proportional hazards, which is
emphatically a child of the computer age. as the algorithms grew more in-
tricate, their inferential justi   cation deepened in scope and sophistication.
this is a pattern we also saw in chapter 8, in the progression from bioassay
to id28 to generalized linear models, and will reappear as we
move from the jackknife to the bootstrap in chapter 10.

censoring is not the same as truncation. for the truncated galaxy data
of section 8.3, we learn of the existence of a galaxy only if it falls into
the observation region (8.38). the censored individuals in table 9.2 are
known to exist, but with imperfect knowledge of their lifetimes. there is a
version of the kaplan   meier curve applying to truncated data, which was
developed in the astronomy literature by lynden-bell (1971).

the methods of this chapter apply to data that is left-truncated as well
as right-censored. in a survival time study of a new hiv drug, for instance,
subject i might not enter the study until some time (cid:28)i after his or her initial
diagnosis, in which case ti would be left-truncated at (cid:28)i, as well as possibly
later right-censored. this only modi   es the composition of the various risk
sets. however, other missing-data situations, e.g., left- and right-censoring,
require more elaborate, less elegant, treatments.

  1 [p. 133] formula (9.10). let the interval   t0; t1   be partitioned into a large
number of subintervals of length dt, with tk the midpoint of subinterval k.

9.6 notes and details

as in (9.4), using (9.9),

prft (cid:21) t1jt (cid:21) t0g :dy

.1 (cid:0) h.ti / dt /

o
nx log.1 (cid:0) h.ti / dt /
o
n(cid:0)x

h.ti / dt

;

d exp
:d exp

151

(9.47)

which, as dt ! 0, goes to (9.10).

  2 [p. 136] kaplan   meier estimate. in the life table formula (9.6) (with k d
1), let the time unit be small enough to make each bin contain at most one
value t.k/ (9.16). then at t.k/,
o
h.k/ d d.k/

(9.48)

;

n (cid:0) k c 1

giving expression (9.17).

  3 [p. 137] greenwood   s formula (9.18). in the life table formulation of sec-

tion 9.1, (9.6) gives

from nk

o
hk

ind(cid:24) bi.nk; hk/ we get
n
n
log osj

var

var

log

log osj d jx
(cid:16)
1 (cid:0) o

log

1

:

hk

(cid:16)
 
1 (cid:0) o
 o :d jx

hk

1

hk

1 (cid:0) hk

1
nk

;

o d jx
d jx

1

1

(9.49)

(9.50)

var o
.1 (cid:0) hk/2

hk

n
log osj

o :d jx

where we have used the delta-method approximation varflog xg :d varfxg=
efxg2. plugging in hk d yk=nk yields

yk

1

:

var

nk.nk (cid:0) yk/

(9.51)
then the inverse approximation varfxg d efxg2 varflog xg gives green-
wood   s formula (9.18).
the censored data situation of section 9.2 does not enjoy independence
between the o
hk values. however, successive conditional independence, given
the nk values, is enough to verify the result, as in the partial likelihood cal-
culations below. note: the con   dence intervals in figure 9.1 were obtained

152

survival analysis and the em algorithm

by exponentiating the intervals,

log osj    1:96

h

n

log osj

var

oi1=2

:

(9.52)

  4 [p. 138] parametric life tables analysis. figure 9.2 and the analysis behind
it is developed in efron (1988), where it is called    partial logistic regres-
sion    in analogy with partial likelihood.

  5 [p. 139] the log-rank test. this chapter featured an all-star cast, includ-
ing four of the most referenced papers of the post-war era: kaplan and
meier (1958), cox (1972) on proportional hazards, dempster et al. (1977)
codifying and naming the em algorithm, and mantel and haenszel (1959)
on the log-rank test. (cox (1958) gives a careful, and early, analysis of
the mantel   haenszel idea.) the not very helpful name    log-rank    does
at least remind us that the test depends only on the ranks of the survival
times, and will give the same result if all the observed survival times ti are
monotonically transformed, say to exp.ti / or t 1=2
. it is often referred to as
the mantel   haenszel or cochran   mantel   haenszel test in older literature.
kaplan   meier and proportional hazards are also rank-based procedures.

i

  6 [p. 141] hypergeometric distribution. hypergeometric calculations, as for
table 9.5, are often stated as follows: n marbles are placed in an urn, na
labeled a and nb labeled b; nd marbles are drawn out at random; y is
the number of these labeled a. elementary (but not simple) calculations
then produce the conditional distribution of y given the table   s marginals
na; nb ; n; nd ; and ns,

 

! 

!(cid:30) 

!

n
nd

prfyjmarginalsg d

na
y

nb

nd (cid:0) y

(9.53)

for

max.na (cid:0) ns; 0/   y   min.nd ; na/;

and expressions (9.24) for the mean and variance. if na and nb go to in   n-
ity such that na=n ! pa and nb =n ! 1(cid:0) pa, then v ! nd pa.1(cid:0) pa/,
the variance of y (cid:24) bi.nd ; pa/.

  7 [p. 141] log-rank statistic z (9.25). why is .pn
nominator for z? let ui d yi (cid:0) ei in (9.30), so z   s numerator ispn

1 vi /1=2 the correct de-
1 ui,

with

uijdi (cid:24) .0; vi /

(9.54)

under the null hypothesis of equal hazard rates. this implies that, uncon-
ditionally, efuig d 0. for j < i, uj is a function of di (since yj and

153
ej are), so efuj uijdig d 0, and, again unconditionally, efuj uig d 0.
therefore, assuming equal hazard rates,

9.6 notes and details

!

d nx

u2
i

varfuig

  nx

1

e

ui

!2 d e
  nx
:d nx

1

vi :

1

1

(9.55)

the last approximation, replacing unconditional variances varfuig with
conditional variances vi, is justi   ed in crowley (1974), as is the asymp-
totic normality (9.29).
the in   nitesimal interval .t.j /; t.j / c d t / is hi .t.j // d t , so

rj , the id203 pi that death occurs in

  8 [p. 145] lemma (9.37). for i 2

0
i    d t;

(9.56)

pi d h0.t.j //ec
y

pi d pi

.1 (cid:0) pk/:

and the id203 of event ai that individual i dies while the others don   t
is

(9.57)
but the ai are disjoint events, so, given that [ai has occurred, the proba-
bility that it is individual i who died is
:d eci   

(cid:30) x

(cid:30)x

k2
rj(cid:0)i

(9.58)

eck    ;

pj

pi

this becoming exactly (9.37) as d t ! 0.

rj

k2

rj

  9 [p. 145] partial likelihood (9.40). cox (1975) introduced partial likelihood
as inferential justi   cation for the proportional hazards model, which had
been questioned in the literature. let dj indicate all the observable infor-
mation available just before time t.j /(9.35), including all the death or loss
times for individuals having ti < t.j /. (notice that dj determines the risk
set rj .) by successive conditioning we write the full likelihood f  .data/
as

f  .data/ d f  .d1/f  .i1j

d jy

jd1

r1/f  .d2jd1/f  .i2j
jy
rj /:

f  .ijj

jd1

f  .djjdj(cid:0)1/

r2/ : : :

(9.59)

letting   d .  ;   /, where    is a nuisance parameter vector having to do

154

survival analysis and the em algorithm

with the occurrence and timing of events between observed deaths,

24 jy

jd1

35 l.  /;

f  ;   .data/ d

f  ;   .djjdj(cid:0)1/

(9.60)

1

k

kd1

kx
 cz
  (cid:0) 1

2

where l.  / is the partial likelihood (9.38).
the proportional hazards model simply ignores the bracketed factor in
(9.60); l.  / d log l.  / is treated as a genuine likelihood, maximized to
give o
  , and assigned covariance matrix .(cid:0)r
(cid:0)1 as in section 4.3. efron
(1977) shows this tactic is highly ef   cient for the estimation of   .

o
  //

l.

  10 [p. 148] fake-data principle. for any two values of the parameters  1 and

 2 de   ne

l 1 . 2/ dz

this being the limit as k ! 1 of
l 1 . 2/ d lim
k!1

  log f 2 .o; u/   f 1 .ujo/ d u;

log f 2 .o; u

(cid:3)k/;

(9.61)

(9.62)

f 1 .o/

the fake-data log likelihood (9.46) under  2, if  1 were the true value of  .
using f  .o; u/ d f  .o/f  .ujo/, de   nition (9.61) gives
l 1 . 2/ (cid:0) l 1 . 1/ d log
f 1 .ujo/
d log

f 1 .ujo/
log
d .f 1 .ujo/; f 2 .ujo// ;

  f 2 .o/
  f 2 .o/

  f 2 .ujo/

(9.63)

 

f 1 .o/

with d the deviance (8.31), which is always positive unless ujo has the
same distribution under  1 and  2, which we will assume doesn   t happen.
suppose we begin the em algorithm at   d  1 and    nd the value  2
maximizing l 1 .  /. then l 1 . 2/ > l 1 . 1/ and d > 0 implies f 2 .o/ >
f 1 .o/ in (9.63); that is, we have increased the likelihood of the observed
data. now take  1 d o
  d arg max  f  .o/. then the right side of (9.63) is
  / > lo  . 2/ for any  2 not equaling  1 d o
o
negative, implying lo  .
 . putting
this together,13 successively computing  1;  2;  3; : : : by fake-data id113
calculations increases f  .o/ at every step, and the only stable point of the
algorithm is at   d o

  .o/.

  11 [p. 150] kaplan   meier self-consistency. this property was veri   ed in efron

(1967), where the name was coined.
13 generating the fake data is equivalent to the e step of the algorithm, the m step being

the maximization of l j .  /.

10

the jackknife and the bootstrap

bse d 0:040;

a central element of frequentist id136 is the standard error. an algo-
rithm has produced an estimate of a parameter of interest, for instance the
mean nx d 0:752 for the 47 all scores in the top panel of figure 1.4.
how accurate is the estimate? in this case, formula (1.2) for the standard
deviation1 of a sample mean gives estimated standard error

(10.1)
so one can   t take the third digit of nx d 0:752 very seriously, and even the
5 is dubious.

direct standard error formulas like (1.2) exist for various forms of aver-
aging, such as id75 (7.34), and for hardly anything else. tay-
lor series approximations (   device 2    of section 2.1) extend the formulas
to smooth functions of averages, as in (8.30). before computers, applied
statisticians needed to be taylor series experts in laboriously pursuing the
accuracy of even moderately complicated statistics.

the jackknife (1957) was a    rst step toward a computation-based, non-
formulaic approach to standard errors. the bootstrap (1979) went further
toward automating a wide variety of inferential calculations, including stan-
dard errors. besides sparing statisticians the exhaustion of tedious routine
calculations the jackknife and bootstrap opened the door for more com-
plicated estimation algorithms, which could be pursued with the assurance
that their accuracy would be easily assessed. this chapter focuses on stan-
dard errors, with more adventurous bootstrap ideas deferred to chapter 11.
we end with a brief discussion of accuracy estimation for robust statistics.

1 we will use the terms    standard error    and    standard deviation    interchangeably.

155

156

the jackknife and the bootstrap

10.1 the jackknife estimate of standard error

the basic applications of the jackknife apply to one-sample problems, where
the statistician has observed an independent and identically distributed (iid)
sample x d .x1; x2; : : : ; xn/
0 from an unknown id203 distribution f
on some space x ,

(10.2)
x can be anything: the real line, the plane, a function space.2 a real-valued
statistic o

  has been computed by applying some algorithm s.(cid:1)/ to x,

xi

for i d 1; 2; : : : ; n:

iid(cid:24) f

o
  d s.x/;
and we wish to assign a standard error to o
the standard deviation of o
let x.i / be the sample with xi removed,

  d s.x/ under sampling model (10.2).

 . that is, we wish to estimate

(10.3)

x.i / d .x1; x2; : : : ; xi(cid:0)1; xic1; : : : ; xn/
0

;

(10.4)

(10.5)

and denote the corresponding value of the statistic of interest as

o
 .i / d s.x.i //:
#1=2
 2

"

n

n (cid:0) 1

 .(cid:1)/ d nx

then the jackknife estimate of standard error for o
(cid:16) o
nx
  is
bsejack d
; with o
 .i / (cid:0) o
 .(cid:1)/
in the case where o
  is the mean nx of real values x1; x2; : : : ; xn (i.e., x
is an interval of the real line), o
be expressed as
o
 .i / d .nnx (cid:0) xi /=.n (cid:0) 1/:
 .(cid:1)/ d nx, o

 .(cid:1)/ d .nx (cid:0) xi /=.n (cid:0) 1/, and

 .i / is their average excluding xi, which can

o
 .i /=n:

(10.7)

(10.6)

1

1

equation (10.7) gives o
bsejack d

" nx

id1

 .i / (cid:0) o
.xi (cid:0) nx/2= .n.n (cid:0) 1//

#1=2

fudge factor .n(cid:0) 1/=n in de   nition (10.6) was inserted to makebsejack agree
exactly the same as the classic formula (1.2). this is no coincidence. the
with (1.2) when o
2 if x is an interval of the real line we might take f to be the usual cumulative

  is nx.

distribution function, but here we will just think of f as any full description of the
id203 distribution for an xi on x .

;

(10.8)

157

10.1 the jackknife estimate of standard error

the advantage ofbsejack is that de   nition (10.6) can be applied in an au-
tomatic way to any statistic o
  d s.x/. all that is needed is an algorithm
that computes s.(cid:1)/ for the deleted data sets x.i /. computer power is being
substituted for theoretical taylor series calculations. later we will see that
the underlying inferential ideas   plug-in estimation of frequentist standard
errors   haven   t changed, only their implementation.
as an example, consider the kidney function data set of section 1.1. here
the data consists of n d 157 points .xi ; yi /, with x d age and y d tot in
figure 1.1. (so the generic xi in (10.2) now represents the pair .xi ; yi /, and
f describes a distribution in the plane.) suppose we are interested in the
correlation between age and tot, estimated by the usual sample correlation
o
  d s.x/,

#1=2
s.x/ d nx
nx
.yi (cid:0) ny/2
.xi (cid:0) nx/2
applying (10.6) gavebsejack d 0:058 for the accuracy of o
computed to be o
  d (cid:0)0:572 for the kidney data.
case,bsetaylor d

 . nonpara-
metric bootstrap computations, section 10.2, also gave estimated standard
error 0.058. the classic taylor series formula looks quite formidable in this

," nx

.xi (cid:0) nx/.yi (cid:0) ny/

( o

; (10.9)

c 2 o(cid:22)22
o(cid:22)20 o(cid:22)02

(cid:0) 4 o(cid:22)13
o(cid:22)11 o(cid:22)02

(cid:0) 4 o(cid:22)31
o(cid:22)11 o(cid:22)20

  o(cid:22)40o(cid:22)2

c 4 o(cid:22)22
o(cid:22)2

  2
4n

id1

1

1

20

11

(cid:21))1=2

(10.10)

(10.11)

where

.xi (cid:0) nx/h.yi (cid:0) ny/k=n:

id1

need be assumed.

it gavebse d 0:057.
it is worth emphasizing some features of the jackknife formula (10.6).
(cid:15) it is nonparametric; no special form of the underlying distribution f
inputs the data set x and the function s.x/, and outputsbsejack.
(cid:15) it is completely automatic: a single master algorithm can be written that
(cid:15) the algorithm works with data sets of size n(cid:0)1, not n. there is a hidden
assumption of smooth behavior across sample sizes. this can be worri-
some for statistics like the sample median that have a different de   nition
for odd and even sample size.

02

c o(cid:22)04o(cid:22)2
o(cid:22)hk d nx

the jackknife and the bootstrap

158
(cid:15) the jackknife standard error is upwardly biased as an estimate of the
(cid:15) the connection of the jackknife formula (10.6) with taylor series meth-

true standard error.  

  1

ods is closer than it appears. we can write

bsejack d pn

i

1 d2
n2

(cid:21)1=2

where di d

;

p
 .i / (cid:0) o
o
 .(cid:1)/
n.n (cid:0) 1/

1=

:

(10.12)

as discussed in section 10.3, the di are approximate directional deriva-
tives, measures of how fast the statistic s.x/ is changing as we decrease
the weight on data point xi. so se2
jack is proportional to the sum of
squared derivatives of s.x/ in the n component directions. taylor series
expressions such as (10.10) amount to doing the derivatives by formula
rather than numerically.

figure 10.1 the lowess curve for the kidney data of
figure 1.2. vertical bars indicate   2 standard errors: jackknife
(10.6) blue dashed; bootstrap (10.16) red solid. the jackknife
greatly overestimates variability at age 25.

the principal weakness of the jackknife is its dependence on local deriva-
figure 1.2, can result in erratic behavior forbsejack. figure 10.1 illustrates
tives. unsmooth statistics s.x/, such as the kidney data lowess curve in
the point. the dashed blue vertical bars indicate   2 jackknife standard er-

   4   202agetot20253035404550556065707580852510.2 the nonparametric bootstrap

159

rors for the lowess curve evaluated at ages 20; 25; : : : ; 85. for the most
part these agree with the dependable bootstrap standard errors, solid red
bars, described in section 10.2. but things go awry at age 25, where the
local derivatives greatly overstate the sensitivity of the lowess curve to
global changes in the sample x.

10.2 the nonparametric bootstrap

from the point of view of the bootstrap, the jackknife was a halfway house
between classical methodology and a full-throated use of electronic com-
putation. (the term    computer-intensive statistics    was coined to describe
the bootstrap.) the frequentist standard error of an estimate o
  d s.x/ is,
ideally, the standard deviation we would observe by repeatedly sampling
new versions of x from f . this is impossible since f is unknown. instead,
the bootstrap (   ingenious device    number 4 in section 2.1) substitutes an
estimate of for f and then estimates the frequentist standard by direct sim-
ulation, a feasible tactic only since the advent of electronic computation.
the bootstrap estimate of standard error for a statistic o
  d s.x/ com-
puted from a random sample x d .x1; x2; : : : ; xn/ (10.2) begins with the
notion of a bootstrap sample

(cid:3) d .x

(cid:3)
1 ; x

(cid:3)
2 ; : : : ; x

(cid:3)
n /;

x

(10.13)
(cid:3)
where each x
i is drawn randomly with equal id203 and with replace-
ment from fx1; x2; : : : ; xng. each bootstrap sample provides a bootstrap
replication of the statistic of interest,3

(10.14)
some large number b of bootstrap samples are independently drawn
(b d 500 in figure 10.1). the corresponding bootstrap replications are
calculated, say

/:

(cid:3)b/

for b d 1; 2; : : : ; b:
(cid:3)b d s.x
the resulting bootstrap estimate of standard error for o
#1=2
standard deviation of the o
bseboot d
(cid:3)b (cid:0) o

(cid:3)(cid:1) 2.

" bx

; with o

(cid:3)b values,

.b (cid:0) 1/

(cid:16) o

 

 

 

 

(10.15)
  is the empirical

(cid:3)(cid:1) d bx

(cid:3)b  b:

o
 

o
 

(10.16)
(cid:3) is intended to avoid confusion with the original data x, which stays

3 the star notation x

   xed in bootstrap computations, and likewise o 

(cid:3) vis-a-vis o .

bd1

bd1

o
 

(cid:3) d s.x

(cid:3)

f

  :

160

iid(cid:0)! x

the jackknife and the bootstrap

motivation forbseboot begins by noting that o
  is obtained in two steps:
   rst x is generated by iid sampling from id203 distribution f , and
then o
  is calculated from x according to algorithm s.(cid:1)/,
s(cid:0)! o

(10.17)
we don   t know f , but we can estimate it by the empirical id203 dis-
tribution of that puts id203 1=n on each point xi (e.g., weight 1=157
(cid:3)
on each point .xi ; yi / in figure 1.2). notice that a bootstrap sample x
(10.13) is an iid sample drawn from of , since then each x
(cid:3) independently
has equal id203 of being any member of fx1; x2; : : : ; xng. it can be
shown that of maximizes the id203 of obtaining the observed sample
x under all possible choices of f in (10.2), i.e., it is the nonparametric
id113 of f .
bootstrap replications o
(cid:3) are obtained by a process analogous to (10.17),
of

in the real world (10.17) we only get to see the single value o
 , but the boot-
strap world (10.18) is more generous: we can generate as many bootstrap
replications o
(cid:3)b as we want, or have time for, and directly estimate their
suggests, correctly in most cases, thatbseboot approaches the true standard
of approaches f as n grows large
variability as in (10.16). the fact that
error of o
 .
the true standard deviation of o
 , i.e., its standard error, can be thought
of as a function of the id203 distribution f that generates the data,
say sd.f /. hypothetically, sd.f / inputs f and outputs the standard devi-
ation of o
 , which we can imagine being evaluated by independently run-
ning (10.17) some enormous number of times n , and then computing the
empirical standard deviation of the resulting o

iid(cid:0)! x

s(cid:0)! o

(10.18)

(cid:3)

(cid:3)

 

 

 

:

  values,
; with o

  .(cid:1)/ d nx

  .j /  n:

o

1

(10.19)

24 nx

jd1

(cid:16) o
  .j / (cid:0) o

sd.f / d

351=2
  .(cid:1)/ 2.
.n (cid:0) 1/
bseboot d sd. of /:

the bootstrap standard error of o

  is the plug-in estimate

(10.20)
more exactly, sd. of / is the ideal bootstrap estimate of standard error, what
we would get by letting the number of bootstrap replications b go to in-
   nity. in practice we have to stop at some    nite value of b, as discussed in
what follows.

10.2 the nonparametric bootstrap

161

and multisample versions will be taken up later.

as with the jackknife, there are several important points worth empha-

sizing aboutbseboot.
ten that inputs the data x and the function s.(cid:1)/, and outputsbseboot.
(cid:15) it is completely automatic. once again, a master algorithm can be writ-
(cid:15) we have described the one-sample nonparametric bootstrap. parametric
(cid:15) id64    shakes    the original data more violently than jackknif-
(cid:3) from x. the bootstrap is more
ing, producing nonlocal deviations of x
dependable than the jackknife for unsmooth statistics since it doesn   t
(cid:15) b d 200 is usually suf   cient    for evaluatingbseboot. larger values, 1000   2
depend on local derivatives.
or 2000, will be required for the bootstrap con   dence intervals of chap-
ter 11.
(cid:15) there is nothing special about standard errors. we could just as well
use the bootstrap replications to estimate the expected absolute error
efj o
(cid:15) fisher   s id113 formula (4.27) is applied in practice via

  (cid:0)  jg, or any other accuracy measure.

bse   sher d .nio  /

(cid:0)1=2;

that is, by plugging in o
  for   after a theoretical calculation of se. the
bootstrap operates in the same way at (10.20), though the plugging in is
done before rather than after the calculation. the connection with fishe-
rian theory is more obvious for the parametric bootstrap of section 10.4.

(10.21)

the jackknife is a completely frequentist device, both in its assumptions
and in its applications (standard errors and biases). the bootstrap is also
basically frequentist, but with a touch of the fisherian as in the relation
with (10.21). its versatility has led to applications in a variety of estima-
tion and prediction problems, with even some bayesian connections.   
unusual applications can also pop up for the jackknife; see the jackknife-
after-bootstrap comment in the chapter endnotes.  

from a classical point of view, the bootstrap is an incredible computa-
tional spendthrift. classical statistics was fashioned to minimize the hard
labor of mechanical computation. the bootstrap seems to go out of its way
to multiply it, by factors of b d 200 or 2000 or more. it is nice to re-
port that all this computational largesse can have surprising data analytic
payoffs.

the 22 students of table 3.1 actually each took    ve tests, mechanics,
vectors, algebra, analytics, and statistics. table 10.1 shows

  3

  4

162

the jackknife and the bootstrap

table 10.1 correlation matrix for the student score data. the eigenvalues
are 3.463, 0.660, 0.447, 0.234, and 0.197. the eigenratio statistic
o
  d 0:693, and its bootstrap standard error estimate is 0.075
(b d 2000).

mechanics vectors algebra analytics statistics

mechanics
vectors
algebra
analysis
statistics

1.00
.50
.76
.65
.54

.50
1.00
.59
.51
.38

.76
.59
1.00
.76
.67

.65
.51
.76
1.00
.74

.54
.38
.67
.74
1.00

(10.22)

the sample correlation matrix and also its eigenvalues. the    eigenratio   
statistic,

   dence interval calculations.) the jackknife (10.6) gave a bigger estimate,

o
  d largest eigenvalue=sum eigenvalues;
measures how closely the    ve scores can be predicted by a single linear
combination, essentially an iq score for each student: o
  d 0:693 here,
indicating strong predictive power for the iq score. how accurate is 0.693?
ror estimate (10.16)bseboot d 0:075. (this was 10 times more bootstraps
b d 2000 bootstrap replications (10.15) yielded bootstrap standard er-
than necessary forbseboot, but will be needed for chapter 11   s bootstrap con-
bsejack d 0:083.
     1:96bse for 95% coverage. these are based on an assump-
standard errors are usually used to suggest approximate con   dence in-
tervals, often o
tion of normality for o
 . the histogram of the 2000 bootstrap replications of
o
 , as seen in figure 10.2, disabuses belief in even approximate normality.
compared with classical methods, a massive amount of computation has
gone into the histogram, but this will pay off in chapter 11 with more ac-
curate con   dence limits. we can claim a double reward here for bootstrap
methods: much wider applicability and improved id136s. the bootstrap
histogram   invisible to classical statisticians   nicely illustrates the advan-
tages of computer-age statistical id136.

10.3 resampling plans

there is a second way to think about the jackknife and the bootstrap:
as algorithms that reweight, or resample, the original data vector x d

10.3 resampling plans

163

figure 10.2 histogram of b d 2000 bootstrap replications o
(cid:3)
for the eigenratio statistic (10.22) for the student score data. the
vertical black line is at o
  d :693. the long left tail shows that
normality is a dangerous assumption in this case.

 

0. at the price of a little more abstraction, resampling con-
0 is by de   nition a vector of

.x1; x2; : : : ; xn/
nects the two algorithms and suggests a class of other possibilities.
a resampling vector p d .p1; p2; : : : ; pn/
nonnegative weights summing to 1,

p d .p1; p2; : : : ; pn/

0

with pi (cid:21) 0 and

pi d 1:

(10.23)

nx

id1

that is, p is a member of the simplex sn (5.39). resampling plans operate
by holding the original data set x    xed, and seeing how the statistic of
interest o
we denote the value of o

  changes as the weight vector p varies across sn.

  for a vector putting weight pi on xi as

o
 

(cid:3) d s.p/;

(10.24)

the star notation now indicating any reweighting, not necessarily from boot-
strapping; o
  d s.x/ describes the behavior of o
mean s.x/ d nx, we have s.p/ d pn
  in the real world (10.17),
while o
(cid:3) d s.p/ describes it in the resampling world. for the sample
1 pi xi. the unbiased estimate of

 

 q^*frequency0.40.50.60.70.80.9050100150standard errorbootstrap .075jackknife .083164

variance s.x/ dpn

the jackknife and the bootstrap
i .xi (cid:0) nx/2=.n (cid:0) 1/ can be seen to have

24 nx

id1

  nx

id1

!235 :

s.p/ d n
n (cid:0) 1

(cid:0)

pi x2
i

pi xi

(10.25)

figure 10.3 resampling simplex for sample size n d 3. the
center point is p0 (10.26); the green circles are the jackknife
points p.i / (10.28); triples indicate bootstrap resampling numbers
.n1; n2; n3/ (10.29). the bootstrap probabilities are 6=27 for
p0, 1=27 for each corner point, and 3=27 for each of the six
starred points.

letting

p0 d .1; 1; : : : ; 1/
0

=n;

(10.26)

the resampling vector putting equal weight on each value xi, we require in
the de   nition of s.(cid:1)/ that

s.p0/ d s.x/ d o
the original estimate. the ith jackknife value o

  ;

(10.27)

 .i / (10.5) corresponds to

p0 p(1) p(2) p(3) (3,0,0) (2,1,0) (1,2,0) (0,3,0) (1,1,1) (2,0,1) (0,2,1) (1,0,2) (0,1,2) (0,0,3) 0.5 1.0 1.5 0.0     0.5     1.0     1.5 0.5 1.0 1.5 0.0     0.5 2.0 10.3 resampling plans

165

resampling vector

=.n (cid:0) 1/;

p.i / d .1; 1; : : : ; 1; 0; 1; : : : ; 1/
0

(10.28)
with 0 in the ith place. figure 10.3 illustrates the resampling simplex s3
applying to sample size n d 3, with the center point being p0 and the open
circles the three possible jackknife vectors p.i /.
with n d 3 sample points fx1; x2; x3g there are only 10 distinct boot-
strap vectors (10.13), also shown in figure 10.3. let

ni d #fx
the number of bootstrap draws in x
ure are .n1; n2; n3/, for example .1; 0; 2/ for x
twice.4 the bootstrap resampling vectors are of the form

(cid:3)
(10.29)
(cid:3) equaling xi. the triples in the    g-
(cid:3) having x1 once and x3

d xig;

j

(cid:3) d .n1; n2; : : : ; nn/
0

p

=n;

(10.30)

where the ni are nonnegative integers summing to n. according to de   -
nition (10.13) of bootstrap sampling, the vector n d .n1; n2; : : : ; nn/
0
follows a multinomial distribution (5.38) with n draws on n equally likely
categories,

n (cid:24) multn.n; p0/:

(10.31)

(10.32)

(10.33)

this gives bootstrap id203 (5.37)

n  

n1  n2   : : : nn  

1
nn

on p

(cid:3) (10.30).

figure 10.3 is misleading in that the jackknife vectors p.i / appear only
(cid:3). as n grows large
slightly closer to p0 than are the bootstrap vectors p
they are, in fact, an order of magnitude closer. subtracting (10.26) from
(10.28) gives euclidean distance

.p

kp.i / (cid:0) p0k d 1
 

ni (cid:24) bi

n.n (cid:0) 1/:
 

1

for the bootstrap, notice that ni in (10.29) has a binomial distribution,

(10.34)
4 a hidden assumption of de   nition (10.24) is that o  d s.x/ has the same value for any
permutation of x, so for instance s.x1; x3; x3/ d s.x3; x1; x3/ d s.1=3; 0; 2=3/.

n;

n

;

the jackknife and the bootstrap

166
with mean 1 and variance .n(cid:0) 1/=n. then p
d ni =n has mean and vari-
ance .1=n; .n (cid:0) 1/=n3/. adding over the n coordinates gives the expected
(cid:3),
root mean square distance for bootstrap vector p

(cid:3)

i

(cid:0)ekp

(cid:3) (cid:0) p0k2(cid:1)1=2 dp

.n (cid:0) 1/=n2;

p
n times further than (10.33).

an order of magnitude

the function s.p/ has approximate directional derivative

di d s.p.i // (cid:0) s.p0/
kp.i / (cid:0) p0k

(10.35)

(10.36)

(cid:16) o

(cid:3)(cid:1) 2

#1=2

" 10x

in the direction from p0 toward p.i / (measured along the dashed lines
in figure 10.3). di measures the slope of function s.p/ at p0, in the

direction of p.i /. formula (10.12) showsbsejack as proportional to the root
out thatbsejack equalsbseboot (except for the fudge factor .n(cid:0) 1/=n in (10.6)).

if s.p/ is a linear function of p, as it is for the sample mean, it turns

mean square of the slopes.

most statistics are not linear, and then the local jackknife resamples may
provide a poor approximation to the full resampling behavior of s.p/. this
was the case at one point in figure 10.1.
(cid:3), we can easily evaluate the

with only 10 possible resampling points p

(cid:3)(cid:1) d 10x

ideal bootstrap standard error estimate

;

 

 

 

pk

pk

o
 

o
 

kd1

kd1

(cid:3)k;

(10.37)

(cid:3)k (cid:0) o

bseboot d
with o
(cid:3)k d s.p k/ and pk the id203 from (10.32) (listed in fig-
!
 
ure 10.3). this rapidly becomes impractical. the number of distinct boot-
strap samples for n points turns out to be
2n (cid:0) 1

(10.38)
for n d 10 this is already 92,378, while n d 20 gives 6:9 (cid:2) 1010 distinct
(cid:3) at random, which is what al-
possible resamples. choosing b vectors p
gorithm (10.13)   (10.15) effectively is doing, makes the un-ideal bootstrap
standard error estimate (10.16) almost as accurate as (10.37) for b as small
as 200 or even less.

n

:

the luxury of examining the resampling surface provides a major advan-
tage to modern statisticians, both in id136 and methodology. a variety
of other resampling schemes have been proposed, a few of which follow.

10.3 resampling plans

167

the in   nitesimal jackknife

looking at figure 10.3 again, the vector

pi .(cid:15)/ d .1 (cid:0) (cid:15)/p0 c (cid:15)p.i / d p0 c (cid:15).p.i / (cid:0) p0/

(10.39)

lies proportion (cid:15) of the way from p0 to p.i /. then
s .pi .(cid:15)// (cid:0) s.p0/

qdi d lim
(cid:15)!0

(10.40)

exactly de   nes the direction derivative at p0 in the direction of p.i /. the
in   nitesimal jackknife estimate of standard error is

(cid:15)kp.i / (cid:0) p0k
!1=2

  n2

qd2

i

  nx

id1

bseij d

;

(10.41)

usually evaluated numerically by setting (cid:15) to some small value in (10.40)   
(10.41) (rather than (cid:15) d 1 in (10.12)). we will meet the in   nitesimal jack-
knife again in chapters 17 and 20.

multisample bootstrap

the median difference between the aml and the all scores in figure 1.4
is

mediff d 0:968 (cid:0) 0:733 d 0:235:

(10.42)

how accurate is 0.235? an appropriate form of id64 draws 25
times with replacement from the 25 aml patients, 47 times with replace-
ment from the 47 all patients, and computes mediff(cid:3) as the difference
between the medians of the two bootstrap samples. (drawing one boot-
strap sample of size 72 from all the patients would result in random sample
sizes for the aml(cid:3)
=all(cid:3) groups, adding inappropriate variability to the
frequentist standard error estimate.)
givebseboot d 0:074. the estimate (10.42) is 3.18bse units above zero, agree-
a histogram of b d 500 mediff(cid:3) values appears in figure 10.4. they

ing surprisingly well with the usual two-sample t-statistic 3.01 (based on
mean differences), and its permutation histogram figure 4.3. permutation
testing can be considered another form of resampling.

168

the jackknife and the bootstrap

figure 10.4 b d 500 bootstrap replications for the median
bseboot d 0:074. the observed value mediff d 0:235 (vertical
difference between the aml and all scores in figure 1.4, giving

black line) is more than 3 standard errors above zero.

moving blocks bootstrap

suppose x d .x1; x2; : : : ; xn/, instead of being an iid sample (10.2), is a
time series. that is, the x values occur in a meaningful order, perhaps with
nearby observations highly correlated with each other. let bm be the set of
contiguous blocks of length m, for example

b3 d f.x1; x2; x3/; .x2; x3; x4/; : : : ; .xn(cid:0)2; xn(cid:0)1; xn/g :

(10.43)

presumably, m is chosen large enough that correlations between xi and xj ,
jj (cid:0) ij > m, are neglible. the moving block bootstrap    rst selects n=m
(cid:3). having constructed b such samples,bseboot is calculated
blocks from bm, and assembles them in random order to construct a boot-
strap sample x
as in (10.15)   (10.16).

the bayesian bootstrap

let g1; g2; : : : ; gn be independent one-sided exponential variates (de-
noted gam(1,1) in table 5.1), each having density exp.(cid:0)x/ for x > 0.

 mediff*frequency0.00.10.20.30.40.501020304050607010.4 the parametric bootstrap

169

, nx

the bayesian bootstrap uses resampling vectors

p

it can be shown that p

(cid:3) d .g1; g2; : : : ; gn/
(10.44)
(cid:3) is then uniformly distributed over the resampling
simplex sn; for n d 3, uniformly distributed over the triangle in fig-

ure 10.3. prescription (10.44) is motivated by assuming a jeffreys-style
uninformative prior distribution (section 3.2) on the unknown distribution
f (10.2).

gi :

1

(cid:3) has mean vector and covariance matrix

distribution (10.44) for p

p

p0;

1

n c 1

(cid:3) (cid:24) 
(cid:3) (cid:24) 

p

p0;

1

n

0

(cid:1)(cid:21)
(cid:0)diag.p0/ (cid:0) p0p
(cid:1)(cid:21)
(cid:0)diag.p0/ (cid:0) p0p

0

;

0

0

:

(10.45)

(10.46)

this is almost identical to the mean and covariance of bootstrap resamples
(cid:3) (cid:24) multn.n, p0/=n,
p

(5.40). the bayesian bootstrap and the ordinary bootstrap tend to agree, at
least for smoothly de   ned statistics o
there was some bayesian disparagement of the bootstrap when it    rst
appeared because of its blatantly frequentist take on estimation accuracy.
and yet connections like (10.45)   (10.46) have continued to pop up, as we
will see in chapter 13.

(cid:3) d s.p

/.

(cid:3)

 

10.4 the parametric bootstrap

in our description (10.18) of bootstrap resampling,

of

iid(cid:0)! x

(cid:3) (cid:0)! o

(cid:3)

;

 

(10.47)
there is no need to insist that of be the nonparametric id113 of f . suppose
d  f(cid:22).x/; (cid:22) 2 (cid:127)(cid:9) :
we are willing to assume that the observed data vector x comes from a
parametric family f as in (5.1),
(10.48)
let o(cid:22) be the id113 of (cid:22). the bootstrap parametric resamples from f o(cid:22).(cid:1)/,
and proceeds as in (10.14)   (10.16) to calculatebseboot.
(10.49)

f o(cid:22) (cid:0)! x

(cid:3) (cid:0)! o

f

(cid:3)

 

;

the jackknife and the bootstrap

170
as an example, suppose that x d .x1; x2; : : : ; xn/ is an iid sample of
size n from a normal distribution,

iid(cid:24)

xi

n .(cid:22); 1/;

i d 1; 2; : : : ; n:

then o(cid:22) d nx, and a parametric bootstrap sample is x
where

(cid:3) d .x

(10.50)

(cid:3)
1 ; x

(cid:3)
2 ; : : : ; x

(cid:3)
n /,

i d 1; 2; : : : ; n:

(cid:3)

iid(cid:24)

n .nx; 1/;

x
i

(10.51)
more adventurously, if f were a family of time series models for x,
(cid:3)
algorithm (10.49) would still apply (now without any iid structure): x
would be a time series sampled from model f o(cid:22).(cid:1)/, and o
(cid:3) d s.x
/ the
(cid:3)b, b d 1; 2; : : : ; b, andbseboot from (10.16).
 
(cid:3)b would give
resampled statistic of interest. b independent realizations x
o
 

(cid:3)

figure 10.5 the gfr data of figure 5.7 (histogram). curves
show the id113    ts from polynomial poisson models, for degrees
of freedom df d 2; 3; : : : ; 7. the points on the curves show the
   ts computed at the centers x.j / of the bins, with the responses
being the counts in the bins. the dashes at the base of the plot
show the nine gfr values appearing in table 10.2.

as an example of parametric id64, figure 10.5 expands the
gfr investigation of figure 5.7. in addition to the seventh-degree polyno-
mial    t (5.62), we now show lower-degree polynomial    ts for 2, 3, 4, 5,

 gfrcounts20406080100051015202530lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllldf = 2df = 3,4,5,6df = 710.4 the parametric bootstrap

171
and 6 degrees of freedom; df d 2 obviously gives a poor    t; df d 3; 4; 5; 6
give nearly identical curves; df d 7 gives only a slightly better    t to the
raw data.

the plotted curves were obtained from the poisson regression method

used in section 8.3, which we refer to as    lindsey   s method   .
(cid:15) the x-axis was partitioned into k d 32 bins, with endpoints 13; 16; 19,

: : : ; 109, and centerpoints, say,

x. / d .x.1/; x.2/; : : : ; x.k//;
x.1/ d 14:5, x.2/ d 17:5, etc.
(cid:15) count vector y d .y1; y2; : : : ; yk/ was computed

yk d #fxi in binkg

(so y gives the heights of the bars in figure 10.5).

(cid:15) an independent poisson model was assumed for the counts,

(10.52)

(10.53)

ind(cid:24) poi.(cid:22)k/

for k d 1; 2; : : : ; k:

yk

(10.54)
(cid:15) the parametric model of degree    df    assumed that the (cid:22)k values were
described by an exponential polynomial of degree df in the x.k/ values,

  j xj

.k/:

(10.55)

(cid:15) the id113 o   d .
(cid:15) the plotted curves in figure 10.5 trace the id113 values o(cid:22)k,

o
  df/ in model (10.54)   (10.55) was found.5

o
  1; : : : ;

o
  0;

log.(cid:22)k/ d dfx

jd0

log. o(cid:22)k/ d dfx

jd0

o
  j xj

.k/:

(10.56)

k

y

(cid:3)

how accurate are the curves? parametric bootstraps were used to assess
their standard errors. that is, poisson resamples were generated according
to

for k d 1; 2; : : : ; k;

ind(cid:24) poi. o(cid:22)k/
(10.57)
and bootstrap id113 values o(cid:22)
(cid:3)
k calculated as above, but now based on count
(cid:3) rather than y. all of this was done b d 200 times, yielding
vector y
the results appear in table 10.2, showing bseboot for df d 2; 3; : : : ; 7
bootstrap standard errors (10.16).

5 a single r command, glm(y(cid:24)poly(x,df),family=poisson) accomplishes
this.

172

the jackknife and the bootstrap

table 10.2 bootstrap estimates of standard error for the gfr density.
poisson regression models (10.54)   (10.55), df d 2; 3; : : : ; 7, as in
figure 10.5; each b d 200 bootstrap replications; nonparametric
standard errors based on binomial bin counts.

degrees of freedom

gfr

20.5
29.5
38.5
47.5
56.5
65.5
74.5
83.5
92.5

2

.28
.65
1.05
1.47
1.57
1.15
.76
.40
.13

3

.07
.57
1.39
1.91
1.60
1.10
.61
.30
.20

4

.13
.57
1.33
2.12
1.79
1.07
.62
.40
.29

5

.13
.66
1.52
1.93
1.93
1.31
.68
.38
.29

6

.12
.74
1.72
2.15
1.87
1.34
.81
.49
.34

7

.05
1.11
1.73
2.39
2.28
1.27
.71
.68
.46

nonparametric
standard error

.00
1.72
2.77
4.25
4.35
1.72
1.72
1.72
.00

degrees of freedom evaluated at nine values of gfr. variability generally
increases with increasing df, as expected. choosing a    best    model is a
compromise between standard error and possible de   nitional bias as sug-
gested by figure 10.5, with perhaps df d 3 or 4, the winner.
if we kept increasing the degrees of freedom, eventually (at df d 32)
we would exactly match the bar heights yk in the histogram. at this point
the parametric bootstrap would merge into the nonparametric bootstrap.
   nonparametric    is another name for    very highly parameterized.    the
huge sample sizes associated with modern applications have encouraged
nonparametric methods, on the sometimes mistaken ground that estimation
ef   ciency is no longer of concern. it is costly here, as the    nonparametric   
column of table 10.2 shows.6

figure 10.6 returns to the student score eigenratio calculations of fig-
ure 10.2. the solid histogram shows 2000 parametric bootstrap replica-
tions (10.49), with f o(cid:22) the    ve-dimensional bivariate normal distribution

n5.nx; o   /. here nx and o    are the usual id113 estimates for the expectation
togram, with bseboot d 0:070 compared with the nonparametric estimate

vector and covariance matrix based on the 22    ve-component student score
vectors. it is narrower than the corresponding nonparametric bootstrap his-

6 these are the binomial standard errors   yk.n (cid:0) yk/=n  1=2, n d 211. the
nonparametric results look much more competitive when estimating cdf   s rather than
densities.

10.4 the parametric bootstrap

173

figure 10.6 eigenratio example, student score data. solid
histogram b d 2000 parametric bootstrap replications o
the    ve-dimensional normal id113; line histogram the 2000
nonparametric replications of figure 10.2. id113 o
  d :693 is
vertical red line.

 

(cid:3) from

0.075. (note the different histogram bin limits from figure 10.2, changing
the details of the nonparametric histogram.)

parametric families act as regularizers, smoothing out the raw data and
de-emphasizing outliers. in fact the student score data is not a good can-
didate for normal modeling, having at least one notable outlier,7 casting
doubt on the smaller estimate of standard error.
the classical statistician could only imagine a mathematical device that
given any statistic o
  d s.x/ would produce a formula for its standard er-
ror, as formula (1.2) does for nx. the electronic computer is such a device.
as harnessed by the bootstrap, it automatically produces a numerical esti-
mate of standard error (though not a formula), with no further cleverness
required. chapter 11 discusses a more ambitious substitution of computer
power for mathematical analysis: the bootstrap computation of con   dence
intervals.

7 as revealed by examining scatterplots of the    ve variates taken two at a time. fast and

painless plotting is another advantage for twenty-   rst-century data analysts.

 eigenratio*frequency0.40.50.60.70.80.9020406080100120bootstrap standard errorsnonparametric .075parametric .070174

the jackknife and the bootstrap

10.5 in   uence functions and robust estimation

the sample mean played a dominant role in classical statistics for reasons
heavily weighted toward mathematical tractibility. beginning in the 1960s,
an important counter-movement, robust estimation, aimed to improve upon
the statistical properties of the mean. a central element of that theory, the
in   uence function, is closely related to the jackknife and in   nitesimal jack-
knife estimates of standard error.

we will only consider the case where x , the sample space, is an interval
of the real line. the unknown id203 distribution f yielding the iid
sample x d .x1; x2; : : : ; xn/ in (10.2) is now the cdf of a density function
f .x/ on x . a parameter of interest, i.e., a function of f , is to be estimated
by the plug-in principle, o
of is the
empirical id203 distribution putting id203 1=n on each sample
point xi. for the mean,

  d t . of /, where, as in section 10.2,
  d t .f / dz
(cid:16) of
  d 1
nx
  dr xd of .x/.)
(in riemann   stieltjes notation,   dr xdf .x/ and o

xf .x/ dx and

o
  d t

(10.58)

id1

xi :

x

n

the in   uence function of t .f /, evaluated at point x in x , is de   ned to

be

if.x/ d lim
(cid:15)!0

t ..1 (cid:0) (cid:15)/f c (cid:15)  x/ (cid:0) t .f /

(cid:15)

;

(10.59)

where   x is the    one-point id203 distribution    putting id203 1
on x. in words, if.x/ measures the differential effect of modifying f by

putting additional id203 on x. for the mean   dr xf .x/dx we cal-

culate that

  5

if.x/ d x (cid:0)  :
a fundamental theorem   says that o
  d t . of / is approximately
nx
:d   c 1

if.xi /;

o
 

(10.60)

(10.61)

n

id1

with the approximation becoming exact as n goes to in   nity. this implies
that o
  (cid:0)   is, approximately, the mean of the n iid variates if.xi /, and that
the variance of o

  is approximately

varfif.x/g ;

(10.62)

n o

 

o :d 1

n

var

10.5 in   uence functions and robust estimation

175
varfif.x/g being the variance of if.x/ for any one draw of x from f . for
the sample mean, using (10.60) in (10.62) gives the familiar equality

varfnxg d 1

n

varfxg:

(10.63)

the sample mean suffers from an unbounded in   uence function (10.60),
which grows ever larger as x moves farther from  . this makes nx unstable
against heavy-tailed densities such as the cauchy (4.39). robust estimation
theory seeks estimators o
  of bounded in   uence, that do well against heavy-
tailed densities without giving up too much ef   ciency against light-tailed
densities such as the normal. of particular interest have been the trimmed
mean and its close cousin the winsorized mean.
d    or equivalently

let x.  / denote the 100  th percentile of distribution f , satisfying f .x.  //

   dz x.  /

(cid:0)1 f .x/ dx:

z x.1(cid:0)  /

(10.64)

the   th trimmed mean of f ,  trim.  /, is de   ned as

 trim.  / d 1

(10.65)
the mean of the central 1 (cid:0) 2   portion of f , trimming off the lower and
upper    portions. this is not the same as the   th winsorized mean  wins.  /,

xf .x/ dx;

1 (cid:0) 2  

x.  /

 wins.  / dz
8  <  :x.  /

x.1(cid:0)  /

x

w .x/ d

x

w .x/f .x/ dx;

(10.66)

if x   x.  /
if x.  /   x   x.1(cid:0)  /
if x (cid:21) x.1(cid:0)  /i

(10.67)

where

 trim.  / removes the outer portions of f , while  wins.  / moves them into
x.  / or x.1(cid:0)  /. in practice, empirical versions o
 wins.  / are used,
substituting the empirical density o
f , with id203 1=n at each xi, for
f .

 trim.  / and o

there turns out to be an interesting relationship between the two: the

in   uence function of  trim.  / is a function of  wins.  /,

if  .x/ d w .x/ (cid:0)  wins.  /

1 (cid:0) 2  

:

(10.68)

this is pictured in figure 10.7, where we have plotted empirical in   uence

176

the jackknife and the bootstrap

figure 10.7 empirical in   uence functions for the 47 leukemia
all scores of figure 1.4. the two dashed curves are if  .x/ for
the trimmed means (10.68), for    d 0:2 and    d 0:4. the solid
curve is if.x/ for the sample mean nx (10.60).

functions (plugging in of for f in de   nition (10.59)) relating to the 47
leukemia all scores of figure 1.4: if0:2.x/ and if0:4.x/ are plotted, along
with if0.x/ (10.60), that is, for the mean.

table 10.3 trimmed means and their bootstrap standard deviations for
the 47 leukemia all scores of figure 1.4; b d 1000 bootstrap
replications for each trim value. the last column gives empirical in   uence
function estimates of the standard error, which are also the in   nitesimal
jackknife estimates (10.41). these fail for the median.

trim

.0
.1
.2
.3
.4
.5

mean

median

trimmed bootstrap

mean

sd

.752
.729
.720
.725
.734
.733

.040
.038
.035
.044
.047
.053

(ifse)

(.040)
(.034)
(.034)
(.044)
(.054)

0.20.40.60.81.01.21.41.6   0.50.00.51.0allinfluence functionmeantrimmed mean a = 0. 2trimmed mean a = 0. 410.6 notes and details

177

the upper panel of figure 1.4 shows a moderately heavy right tail for
the all distribution. would it be more ef   cient to estimate the center of
vides an answer: bseboot (10.16) was calculated for nx and o
the distribution with a trimmed mean rather than nx? the bootstrap pro-
 trim.  /,    d
0:1; 0:2; 0:3; 0:4, and 0.5, the last being the sample median. it appears that
o
 trim.0:2/ is moderately better than nx. this brings up an important question
discussed in chapter 20: if we use something like table 10.3 to select an
estimator, how does the selection process affect the accuracy of the result-
ing estimate?

we might also use the square root of formula (10.62) to estimate the
standard errors of the various estimators, plugging in the empirical in   u-
ence function for if.x/. this turns out to be the same as using the in   nites-
imal jackknife (10.41). these appear in the last column of table 10.3. pre-
dictably, this approach fails for the sample median, whose in   uence func-
tion is a square wave, sharply discontinuous at the median  ,

if.x/ d   1   .2f .  // :

(10.69)

robust estimation offers a nice illustration of statistical progress in the
computer age. trimmed means go far back into the classical era. in   uence
functions are an insightful inferential tool for understanding the tradeoffs in
trimmed mean estimation. and    nally the bootstrap allows easy assessment
of the accuracy of robust estimation, including some more elaborate ones
not discussed here.

10.6 notes and details

quenouille (1956) introduced what is now called the jackknife estimate
of bias. tukey (1958) realized that quenouille-type calculations could be
repurposed for nonparametric standard-error estimation, inventing formula
(10.6) and naming it    the jackknife,    as a rough and ready tool. miller   s im-
portant 1964 paper,    a trustworthy jackknife,    asked when formula (10.6)
could be trusted. (not for the median.)

the bootstrap (efron, 1979) began as an attempt to better understand
the jackknife   s successes and failures. its name celebrates baron mun-
chausen   s success in pulling himself up by his own bootstraps from the
bottom of a lake. burgeoning computer power soon overcame the boot-
strap   s main drawback, prodigous amounts of calculation, propelling it into
general use. meanwhile, 1000c theoretical papers were published asking
when the bootstrap itself could be trusted. (most but not all of the time in
common practice).

178

the jackknife and the bootstrap

a main reference for the chapter is efron   s 1982 monograph the jack-
knife, the bootstrap and other resampling plans. its chapter 6 shows the
equality of three nonparametric standard error estimates: jaeckel   s (1972)
in   nitesimal jackknife (10.41); the empirical in   uence function estimate,
based on (10.62); and what is known as the nonparametric delta method.

bootstrap packages

various bootstrap packages in r are available on the cran contributed-
packages web site, bootstrap being an ambitious one. algorithm 10.1
shows a simple r program for nonparametric id64. aside from
bookkeeping, it   s only a few lines long.

algorithm 10.1 an r program for the nonparametric bootstrap.

boot <- function (x, b, func, ...){

# x is data vector or matrix (with each row a case)
# b is number of bootstrap replications
# func is r function that inputs a data vector or
# matrix and returns a numeric number or vector
# ... other arguments for func

x <- as.matrix(x)
n <- nrow(x)
f0=func(x,...) # get size of output
fmat <- matrix(0,length(f0),b)
for (b in 1:b) {

i=sample(1:n, n, replace = true)
fmat[,b] <- func(x[i, ],...)

}

drop(fmat)

}

  1 [p. 158] the jackknife standard error. the 1982 monograph also contains
efron and stein   s (1981) result on the bias of the jackknife variance esti-
mate, the square of formula (10.6): modulo certain sample size considera-
tions, the expectation of the jackknife variance estimate is biased upward
for the true variance.
for the sample mean nx, the jackknife yields exactly the usual variance
i .xi (cid:0) nx/2=.n.n (cid:0) 1//, while the ideal bootstrap estimate

estimate (1.2),p

(b ! 1) gives

nx
.xi (cid:0) nx/2=n2:

id1

(10.70)

10.6 notes and details

179

as with the jackknife, we could append a fudge factor to get perfect agree-
ment with (1.2), but there is no real gain in doing so.

  2 [p. 161] bootstrap sample sizes. letbseb indicate the bootstrap standard er-
ror estimate (10.16) based on b replications, andbse1 the    ideal bootstrap,   
creasing b past a certain point, becausebse1 is itself a statistic whose value
b ! 1. in any actual application, there are diminishing returns from in-
varies with the observed sample x (as in (10.70)), leaving an irreducible re-
mainder of randomness in any standard error estimate. section 6.4 of efron
and tibshirani (1993) shows that b d 200 will almost always be plenty
(for standard errors, but not for bootstrap con   dence intervals, chapter 11).
smaller numbers, 25 or even less, can still be quite useful in complicated
situations where resampling is expensive. an early complaint,    bootstrap
estimates are random,    is less often heard in an era of frequent and massive
simulations.

  3 [p. 161] the bayesian bootstrap. rubin (1981) suggested the bayesian
bootstrap (10.44). section 10.6 of efron (1982) used (10.45)   (10.46) as
an objective bayes justi   cation for what we will call the percentile-method
bootstrap con   dence intervals in chapter 12.

  4 [p. 161] jackknife-after-bootstrap. for the eigenratio example displayed in

just the original 2000 replications.

0:075. how accurate is this value? id64 the bootstrap seems like
too much work, perhaps 200 times 2000 resamples. it turns out, though,

figure 10.2, b d 2000 nonparametric bootstrap replications gavebseboot d
that we can use the jackknife to estimate the variability ofbseboot based on
now the deleted sample estimate in (10.6) isbseboot.i /. the key idea is
applying de   nition (10.16) to this subset givesbseboot.i /. for the estimate of
figure 10.2, the jackknife-after-bootstrap calculations gavebsejack d 0:022
for bseboot d 0:075. in other words, 0.075 isn   t very accurate, which is
to be expected for the standard error of a complicated statistic estimated
from only n d 22 observations. an in   nitesimal jackknife version of this
technique will play a major role in chapter 20.

(cid:3) (10.13), among the original 2000,
to consider those bootstrap samples x
that do not include the point xi. about 37% of the original b samples will
be in this subset. section 19.4 of efron and tibshirani (1993) shows that

  5 [p. 174] a fundamental theorem. tukey can justly be considered the found-
ing father of robust statistics, his 1960 paper being especially in   uential.
huber   s celebrated 1964 paper brought the subject into the realm of high-
concept mathematical statistics. robust statistics: the approach based on
in   uence functions, the 1986 book by hampel et al., conveys the breadth
of a subject only lightly scratched in our section 10.5. hampel (1974)

180

the jackknife and the bootstrap

introduced the in   uence function as a statistical tool. boos and ser   ing
(1980) veri   ed expression (10.62). qualitative notions of robustness, more
than speci   c theoretical results, have had a continuing in   uence on modern
data analysis.

11

bootstrap con   dence intervals

the jackknife and the bootstrap represent a different use of modern com-
puter power: rather than extending classical methodology   from ordinary
least squares to generalized linear models, for example   they extend the
reach of classical id136.

chapter 10 focused on standard errors. here we will take up a more am-
bitious inferential goal, the bootstrap automation of con   dence intervals.
the familiar standard intervals

o

     1:96bse;
  d 10 from a poisson model o

(11.1)

for approximate 95% coverage, are immensely useful in practice but often
the standard 95% interval .3:8; 16:2/ (usingbse d o
not very accurate. if we observe o
  (cid:24) poi.  /,
  1=2) is a mediocre ap-

proximation to the exact interval1

.5:1; 17:8/:

(11.2)

standard intervals (11.1) are symmetric around o
 , this being their main
weakness. poisson distributions grow more variable as   increases, which
is why interval (11.2) extends farther to the right of o
  d 10 than to the
left. correctly capturing such effects in an automatic way is the goal of
bootstrap con   dence interval theory.

11.1 neyman   s construction for one-parameter

the student score data of table 3.1 comprised n d 22 pairs,

problems

xi d .mi ; vi /;

i d 1; 2; : : : ; 22;

(11.3)

1 using the neyman construction of section 11.1, as explained there; see also table 11.2

in section 11.4.

181

bootstrap con   dence intervals

182
where mi and vi were student i   s scores on the    mechanics    and    vectors   
tests. the sample correlation coef   cient o
  between mi and vi was com-
puted to be

o
  d 0:498:

(11.4)

question: what can we infer about the true correlation   between m and v?
figure 3.2 displayed three possible bayesian answers. con   dence intervals
provide the frequentist solution, by far the most popular in applied practice.

figure 11.1 the solid curve is the normal correlation coef   cient
density fo  .r/ (3.11) for o
student score data; o
endpoints of the 95% con   dence interval for  , with
corresponding densities shown by dashed curves. these yield tail
areas 0.025 at o

  d 0:498, the id113 estimate for the
  .up/ d 0:751 are the

  .lo/ d 0:093 and o

  (11.6).

suppose,    rst, that we assume a bivariate normal model (5.12) for the
o
  / for sample corre-
pairs .mi ; vi /. in that case the id203 density f  .
lation o
  given true correlation   has known form (3.11). the solid curve in
figure 11.1 graphs f for   d 0:498, that is, for   set equal to the observed
value o
 . in more careful notation, the curve graphs fo  .r/ as a function of
the dummy variable2 r taking values in   (cid:0)1; 1  .
2 this is an example of a parametric bootstrap distribution (10.49), here with o(cid:22) being o .

   0.4   0.20.00.20.40.60.81.001234correlationdensity0.0930.7510.498l0.0250.02511.1 neyman   s construction

two other curves f  .r/ appear in figure 11.1: for   equaling

these were numerically calculated as the solutions to

o
o
  .lo/ d 0:093 and
  .up/ d 0:751:
z o 

fo  .lo/.r/ dr d 0:025 and

fo  .up/.r/ dr d 0:025:

(cid:0)1

z 1
o 
in words, o
above o
0.025 below o
 ;

  d 0:498, while o

  .lo/ is the smallest value of   putting id203 at least 0.025
  .up/ is the largest value with id203 at least

  2h o

o
  .up/

  .lo/;

i

183

(11.5)

(11.6)

(11.7)

is a 95% con   dence interval for the true correlation, statement (11.7) hold-
ing true with id203 0.95, for every possible value of  .

we have just described neyman   s construction of con   dence intervals
o
for one-parameter problems f  .
  /. (later we will consider the more dif   -
cult situation where there are    nuisance parameters    in addition to the pa-
rameter of interest  .) one of the jewels of classical frequentist id136,
it depends on a pivotal argument      ingenious device    number 5 of sec-
tion 2.1   to show that it produces genuine con   dence intervals, i.e., ones
that contain the true parameter value   at the claimed id203 level,
0.95 in figure 11.1. the argument appears in the chapter endnotes.  
for the poisson calculation (11.2) it was necessary to de   ne exactly what
   the smallest value of   putting id203 at least 0.025 above o
     meant.
o
  / at
this was done assuming that, for any  , half of the id203 f  .
o
  d 10 counted as    above,    and similarly for calculating the upper limit.

  1

transformation invariance

con   dence intervals enjoy the important and useful property of transfor-
mation invariance. in the poisson example (11.2), suppose our interest
shifts from parameter   to parameter (cid:30) d log  . the 95% exact inter-
val (11.2) for   then transforms to the exact 95% interval for (cid:30) simply by
taking logs of the endpoints,

.log.5:1/; log.17:8// d .1:63; 2:88/:

(11.8)

to state things generally, suppose we observe o
  from a family of densi-
o
o
  / for   of coverage level
  / and construct a con   dence interval c.
ties f  .

(cid:30) d m.  /

bootstrap con   dence intervals

184
   (   d 0:95 in our examples). now let parameter (cid:30) be a monotonic in-
creasing function of  , say

(11.9)

(m.  / d log   in (11.8)), and likewise o(cid:30) d m.
then c.
for (cid:30),

o
  / maps point by point into c(cid:30). o(cid:30)/, a level-   con   dence interval

o
  / for the point estimate.

(cid:30) d m.  / for   2

(11.10)
o
this just says that the event f  2
  /g is the same as the event f(cid:30) 2
c(cid:30). o(cid:30)/g, so if the former always occurs with id203    then so must the

c.

c

 

:

c(cid:30). o(cid:30)/ dn

(cid:16) o

 o

latter.

figure 11.2 the situation in figure 11.1 after transformation to
(cid:30) d m.  / according to (11.11). the curves are nearly n.(cid:30); (cid:27) 2/
with standard deviation (cid:27) d 1=

p
19 d 0:229.

transformation invariance has an historical resonance with the normal
o
correlation coef   cient. fisher   s derivation of f  .
  / (3.11) in 1915 was a
mathematical triumph, but a dif   cult one to exploit in an era of mechanical
computation. most ingeniously, fisher suggested instead working with the
transformed parameter (cid:30) d m.  / where

 

  1 c  

1 (cid:0)  

(cid:30) d m.  / d 1

2

log

;

(11.11)

   0.50.00.51.01.50.00.51.01.5fisher  s f transformdensity0.0930.9750.546l0.0250.025and likewise with statistic o(cid:30) d m.
imation,

11.2 the percentile method

185

o
  /. then, to a surprisingly good approx-

:

(11.12)

see figure 11.2, which shows neyman   s construction on the (cid:30) scale.

in other words, we are back in fisher   s favored situation (4.31), the sim-

ple normal translation problem, where

 

 

o(cid:30) p(cid:24)

n

(cid:30);

1

n (cid:0) 3

c(cid:30)(cid:16) o(cid:30)

  d o(cid:30)    1:96

1p
n (cid:0) 3

(11.13)

is the    obviously correct    95% con   dence interval3 for (cid:30), closely approx-
imating neyman   s construction. the endpoints of (11.13) are then trans-
formed back to the   scale according to the inverse transformation

  d e2(cid:30) (cid:0) 1
e2(cid:30) c 1
o
  / seen in figure 11.1, but without the in-

(11.14)

;

giving (almost) the interval c.
volved computations.

bayesian con   dence statements are inherently transformation invariant.
the fact that the neyman intervals are also invariant, unlike the standard
intervals (11.1), has made them more palatable to bayesian statisticians.
transformation invariance will play a major role in justifying the bootstrap
con   dence intervals introduced next.

11.2 the percentile method

our goal is to automate the calculation of con   dence intervals: given the
bootstrap distribution of a statistical estimator o
 , we want to automatically
produce an appropriate con   dence interval for the unseen parameter  . to
this end, a series of four increasingly accurate bootstrap con   dence interval
algorithms will be described.
     1:96bse for 95% coverage, withbse taken to be the bootstrap standard
error bseboot (10.16). the limitations of this approach become obvious in
o
figure 11.3, where the histogram shows b d 2000 nonparametric boot-
strap replications o
(cid:3) of the sample correlation coef   cient for the student

the    rst and simplest method is to use the standard interval (11.1),

 

3 this is an anachronism. fisher hated the term    con   dence interval    after it was later

coined by neyman for his comprehensive theory. he thought of (11.13) as an example
of the logic of inductive id136.

186

bootstrap con   dence intervals

figure 11.3 histogram of b d 2000 nonparametric bootstrap
replications o
(cid:3) for the student score sample correlation; the solid
curve is the ideal parametric bootstrap distribution fo  .r/ as in
figure 11.1. observed correlation o
  d 0:498. small triangles
show histogram   s 0.025 and 0.975 quantiles.

 

score data, obtained as in section 10.2. the standard intervals are justi   ed
by taking literally the asymptotic normality of o
 ,

o
  p(cid:24)

n . ; (cid:27) 2/;

(11.15)

(cid:27) the true standard error.

relation (11.15) will generally hold for large enough sample size n, but
we can see that for the student score data asymptotic normality has not
yet set in, with the histogram being notably long-tailed to the left. we can   t
expect good performance from the standard method in this case. (the para-
metric bootstrap distribution is just as nonnormal, as shown by the smooth
curve.)

o
 

(cid:3)1;

the percentile method uses the shape of the bootstrap distribution to
improve upon the standard intervals (11.1). having generated b bootstrap
replications o
(cid:3)b, either nonparametrically as in section 10.2
or parametrically as in section 10.4, we use the obvious percentiles of their
distribution to de   ne the percentile con   dence limits. the histogram in
figure 11.3 has its 0.025 and 0.975 percentiles equal to 0.118 and 0.758,

(cid:3)2; : : : ;

o
 

 

 bootstrap correlationsfrequency   0.4   0.20.00.20.40.60.81.00204060801000.4980.1180.758l11.2 the percentile method

187

and these are the endpoints of the central 95% nonparametric percentile
interval.

figure 11.4 a 95% central con   dence interval via the percentile
method, based on the 2000 nonparametric replications o
figure 11.3.

(cid:3) of

 

og.t /,

we can state things more precisely in terms of the bootstrap cdf

the proportion of bootstrap samples less than t,

n o

o.

(cid:3)b   t

og.t / d #
(11.16)
(cid:3).  / of the bootstrap distribution is given by the

b:

 

the   th percentile point o
inverse function of og,

 

o
 

(cid:3).  / d og

(cid:0)1.  /i

(11.17)
o
(cid:3).  / is the value putting proportion    of the bootstrap sample to its left.
the level-   upper endpoint of the percentile interval, say o
 
 %ile      , is by
de   nition

(cid:0)1.  /:
in this notation, the 95% central percentile interval is

(cid:3).  / d og

 

 %ile       d o
o
(cid:16) o

 %ile  :025  ;

 

o
 %ile  :975  

:

(11.19)

(11.18)

0.00.20.40.60.81.00.00.20.40.60.81.0q^*allllll.118.758.025.975g^(cid:16) o
(cid:16) o

 

 

188

bootstrap con   dence intervals

the construction is illustrated in figure 11.4.
the percentile intervals are transformation invariant. let (cid:30) d m.  / as
o
in (11.9), and likewise o(cid:30) d m.
  / (m.(cid:1)/ monotonically increasing), with
o
bootstrap replications o(cid:30)
(cid:3)b/ for b d 1; 2; : : : ; b. the bootstrap
(cid:3)b d m.
 
percentiles transform in the same way,
(cid:3).  / d m

(cid:3).  / 

(11.20)

o(cid:30)

;

so that, as in (11.18),

o(cid:30)%ile       d m
verifying transformation invariance.

 %ile      

;

(11.21)

(11.22)

in what sense does the percentile method improve upon the standard
intervals? one answer involves transformation invariance. suppose there
exists a monotone transformation (cid:30) d m.  / and o(cid:30) d m.

o
  / such that

o(cid:30) (cid:24)

n .(cid:30); (cid:27) 2/

(cid:16) o(cid:30); (cid:27) 2 

o(cid:30)

(cid:3) (cid:24)

for every  , with (cid:27) 2 constant. fisher   s transformation (11.11)   (11.12) al-
most accomplishes this for the normal correlation coef   cient.

it would then be true that parametric bootstrap replications would also

follow (11.22),

(11.23)
that is, the bootstrap cdf og(cid:30) would be normal with mean o(cid:30) and variance
(cid:27) 2. the   th percentile of og(cid:30) would equal

n

:

o(cid:30)%ile       d o(cid:30)

(cid:3).  / d o(cid:30) c z.  /(cid:27);

(11.24)

where z.  / denotes the   th percentile of a standard normal distribution,

z.  / d   
(z.:975/ d 1:96, z.:025/ d (cid:0)1:96, etc.).

(cid:0)1.  /

(11.25)

in other words, the percentile method would provide fisher   s    obviously

correct    intervals for (cid:30),

o(cid:30)    1:96(cid:27)

(11.26)

for 95% coverage for example. but, because of transformation invariance,
the percentile intervals for our original parameter   would also be exactly
correct.

some comments concerning the percentile method are pertinent.

  2

11.2 the percentile method

o
  /, it only assumes its existence.

189
(cid:15) the method does not require actually knowing the transformation to nor-
mality o(cid:30) d m.
(cid:15) if a transformation to form (11.22) exists, then the percentile intervals
are not only accurate, but also correct in the fisherian sense of giving
the logically appropriate id136.  
(cid:15) the justifying assumption for the standard intervals (11.15), o
  p(cid:24)
n . ,
(cid:27) 2/, becomes more accurate as the sample size n increases (usually
with (cid:27) decreasing as 1=
n), but the convergence can be slow in cases
like that of the normal correlation coef   cient. the broader assumption
(11.22), that m.
up convergence, irrespective of whether or not it holds exactly. sec-
tion 11.4 makes this point explicit, in terms of asymptotic rates of con-
vergence.
(cid:15) the standard method works    ne once it is applied on an appropriate
scale, as in figure 11.2. the trouble is that the method is not transforma-
tion invariant, leaving the statistician the job of    nding the correct scale.
the percentile method can be thought of as a transformation-invariant
version of the standard intervals, an    automatic fisher    that substitutes
massive computations for mathematical ingenuity.

p
n .m.  /; (cid:27) 2/ for some transformation m.(cid:1)/, speeds

o
  / p(cid:24)

(cid:15) the method requires bootstrap sample sizes   on the order of b d 2000.   3
(cid:15) the percentile method is not the last word in bootstrap con   dence in-
tervals. two improvements, the    bc    and    bca    methods, will be dis-
cussed in the next section. table 11.1 compares the various intervals as
applied to the student score correlation, o

  d 0:498.

table 11.1 bootstrap con   dence limits for student score correlation,
o
  d 0:498, n d 22. parametric exact limits from neyman   s construction
as in figure 11.1. the bc and bca methods are discussed in the next two
sections; .z0; a/, two constants required for bca, are .(cid:0)0:055; 0:005/
parametric, and .0:000; 0:006/ nonparametric.

parametric
.975
.025

nonparametric
.975
.025

1. standard
2. percentile
3. bc
4. bca

exact

.17
.11
.08
.08
.09

.83
.77
.75
.75
.75

.18
.13
.13
.12

.82
.76
.76
.76

the label    computer-intensive id136    seems especially apt as ap-

190

bootstrap con   dence intervals

plied to bootstrap con   dence intervals. neyman and fisher   s constructions
are expanded from a few special theoretically tractable cases to almost any
situation where the statistician has a repeatable algorithm. automation, the
replacement of mathematical formulas with wide-ranging computer algo-
rithms, will be a major theme of succeeding chapters.

 

 

 

11.3 bias-corrected con   dence intervals

(cid:3) (cid:24)

(cid:3)   o(cid:30)

o d 0:50
o d 0:50:

pr(cid:3)n o(cid:30)
pr(cid:3)n o
z o 
(cid:0)1 fo 
z :498

the ideal form (11.23) for the percentile method, o(cid:30)
o
that the transformation o(cid:30) d m.
  / yields an unbiased estimator of con-
stant variance. the improved methods of this section and the next take into
account the possibility of bias and changing variance. we begin with bias.
if o(cid:30) (cid:24)
o(cid:30)
n . o(cid:30); (cid:27) 2/ and
(cid:3) (cid:24)

n .(cid:30); (cid:27) 2/ for all (cid:30) d m.  /, as hypothesized in (11.22), then

n . o(cid:30); (cid:27) 2/, says

o
  /, (11.28)

(11.27)
(pr(cid:3) indicating bootstrap id203), in which case the monotonicity of
m.(cid:1)/ gives

that is, o
we can check that. for a parametric family of densities f  .

(11.29)
for the normal correlation coef   cient density (3.11), n d 22, numerical
integration gives

(cid:3)   o
(cid:3) is median unbiased4 for o
 , and likewise o
(cid:3) 
(cid:16) o
(cid:3) 
(cid:16) o
which is not far removed from 0.50, but far enough to have a small impact
on proper id136. it suggests that o
(cid:3) is biased upward relative to o
    
that   s why less than half of the bootstrap id203 lies below o
    and
by implication that o
  is upwardly biased for estimating  . accordingly,
con   dence intervals should be adjusted a little bit downward. the bias-
corrected percentile method (bc for short) is a data-based algorithm for
making such adjustments.

(cid:3) d 0:478;

(cid:3) d 0:50:

  for  .

implies

(11.28)

(11.30)

f:498

(cid:0)1

o
 

o
 

d

d

 

 

 

4 median unbiasedness, unlike the usual mean unbiasedness de   nition, has the advantage

of being transformation invariant.

11.3 bias-corrected con   dence intervals
(cid:3)2; : : : ;

191
having simulated b bootstrap replications o
(cid:3)b, paramet-
o.
ric or nonparametric, let p0 be the proportion of replications less than o
 ,
(11.31)

(cid:3)b   o

p0 d #

n o

(cid:3)1;

o
 

o
 

b

 

 

 

(an estimate of (11.29)), and de   ne the bias-correction value

z0 d   

(cid:0)1.p0/;

(11.32)
(cid:0)1 is the inverse function of the standard normal cdf. the bc

where   
level-   con   dence interval endpoint is de   ned to be

2z0 c z.  / i

  

(cid:0)1h
(cid:16)
o
 bc       d og
z.  / i d og
(cid:16)
(cid:0)1h

  

where og is the bootstrap cdf (11.16) and z.  / d   
(cid:0)1.  / (11.25).
if p0 d 0:50, the median unbiased situation, then z0 d 0 and

o
 bc       d og

(cid:0)1.  / d o

 %ile      ;

(11.34)

;

(11.33)

the percentile limit (11.18). otherwise, a bias correction is made. taking
p0 d 0:478 for the normal correlation example (the value we would get
from an in   nite number of parametric bootstrap replications) gives bias
correction value (cid:0)0:055. notice that the bc limits are indeed shifted down-
ward from the parametric percentile limits in table 11.1. nonparametric
id64 gave p0 about 0.50 in this case, making the bc limits nearly
the same as the percentile limits.
a more general transformation argument motivates the bc de   nition
(11.33). suppose there exists a monotone transformation (cid:30) d m.  / and
o(cid:30) d m.

o
  / such that for any  
o(cid:30) (cid:24)

n .(cid:30) (cid:0) z0(cid:27); (cid:27) 2/;

(11.35)

with z0 and (cid:27)    xed constants. then the bc endpoints are accurate, i.e.,
have the claimed coverage probabilities, and are also    obviously correct   
in the fisherian sense. see the chapter endnotes   for proof and discussion.   4
as before, the statistican does not need to know the transformation m.(cid:1)/
that leads to o(cid:30) (cid:24)
n .(cid:30) (cid:0) z0(cid:27); (cid:27) 2/, only that it exists. it is a broader target
than o(cid:30) (cid:24)
n .(cid:30); (cid:27) 2/ (11.22), making the bc method better justi   ed than
the percentile method, irrespective of whether or not such a transformation
exists. there is no extra computational burden: the bootstrap replications
f o
(cid:3)b; b d 1; 2; : : : ; bg, parametric or nonparametric, provide og (11.16)
and z0 (11.31)   (11.32), giving o
 

 bc       from (11.33).

192

bootstrap con   dence intervals

11.4 second-order accuracy
p
coverage errors of the standard con   dence intervals typically decrease at
n/ in the sample size n: having calculated o
 cz.  /o(cid:27)
order o.1=
for an iid sample x d .x1; x2; : : : ; xn/, we can expect the actual coverage
  p
id203 to be

 stan       d o

o :d    c c1

    o

(11.36)

 stan      

n

pr 

n;

where c1 depends on the problem at hand; (11.36) de   nes       rst-order accu-
racy.    it can connote painfully slow convergence to the nominal coverage
level   , requiring sample size 4n to cut the error in half.
a second-order accurate method, say o
o.1=n/,

 2nd      , makes errors of order only

n
    o

pr 

 2nd      

o :d    c c2=n:

(11.37)

the improvement is more than theoretical. in practical problems like that
of table 11.1, second-order accurate methods   bca, de   ned in the follow-
ing, is one such   often provide nearly the claimed coverage probabilities,
even in small-size samples.

neither the percentile method nor the bc method is second-order ac-
curate (although, as in table 11.1, they tend to be more accurate than the
standard intervals). the dif   culty for o
 bc       lies in the ideal form (11.35),
o
o(cid:30) (cid:24)
  / has constant standard
error (cid:27). instead, we now postulate the existence of a monotone transforma-
tion (cid:30) d m.  / and o(cid:30) d m.

n .(cid:30) (cid:0) z0(cid:27); (cid:27) 2/, where it is assumed o(cid:30) d m.

o(cid:30) (cid:24)

n .(cid:30) (cid:0) z0(cid:27)(cid:30); (cid:27) 2

(11.38)
here the    acceleration       a is a small constant describing how the standard
deviation of o(cid:30) varies with (cid:30). if a d 0 we are back in situation (11.34)5,
but if not, an amendment to the bc formula (11.33) is required.

(cid:30) /;

the bca method (   bias-corrected and accelerated   ) takes its level-  

o
  / less restrictive than (11.35),
(cid:27)(cid:30) d 1 c a(cid:30):

con   dence limit to be
o
 bca       d og

(cid:0)1

 

  

 
z0 c

 (cid:21)

z0 c z.  /

1 (cid:0) a.z0 c z.  //

:

(11.39)

a still more elaborate transformation argument shows that, if there exists
a monotone transformation (cid:30) d m.  / and constants z0 and a yielding
5 this assumes (cid:27)0 d 1 on the right side of (11.38), which can always be achieved by
further transforming (cid:30) to (cid:30)=(cid:27).

  5

11.4 second-order accuracy

193

(11.38), then the bca limits have their claimed coverage probabilities and,
moreover, are correct in the fisherian sense.
bca makes three corrections to the standard intervals (11.1): for non-
normality of o
  (through using the bootstrap percentiles rather than just the
bootstrap standard error); for bias (through the bias correction value z0);
and for nonconstant standard error (through a). notice that if a d 0 then
bca (11.39) reduces to bc (11.33). if z0 d 0 then bc reduces to the
percentile method (11.18); and if og, the bootstrap histogram, is normal,
then (11.18) reduces to the standard interval (11.1). all three of the correc-
tions, for nonnormality, bias, and acceleration, can have substantial effects
in practice and are necessary to achieve second-order accuracy. a great
deal of theoretical effort was devoted to verifying the second-order accu-
racy and bca intervals under reasonably general assumptions.6

  d 10; actual tail areas above and below

table 11.2 nominal 95% central con   dence intervals for poisson
parameter   having observed o
o
  d 10 de   ned as in figure 11.1 (atom of id203 split at 10). for
instance, lower standard limit 3.80 actually puts id203 0.004 above
10, rather than nominal value 0.025. bias correction value z0 (11.32) and
acceleration a (11.38) both equal 0.050.

nominal limits
.025
.975

tail areas

above below

1. standard
2. %ile
3. bc
4. bca

exact

3.80
4.18
4.41
5.02
5.08

16.20
16.73
17.10
17.96
17.82

.004
.007
.010
.023
.025

.055
.042
.036
.023
.025

the advantages of increased accuracy are not limited to large sample
sizes. table 11.2 returns to our original example of observing o
  d 10
from poisson model o
  (cid:24) poi.  /. according to neyman   s construction,
the 0.95 exact limits give tail areas 0.025 in both the above and below
directions, as in figure 11.1, and this is nearly matched by the bca limits.
however the standard limits are much too conservative at the left end and
anti-conservative at the right.

6 the mathematical side of statistics has also been affected by electronic computation,

where it is called upon to establish the properties of general-purpose computer
algorithms such as the bootstrap. asymptotic analysis in particular has been aggressively
developed, the veri   cation of second-order accuracy being a nice success story.

194

bootstrap con   dence intervals

table 11.3 95% nominal con   dence intervals for the parametric and
nonparametric eigenratio examples of figures 10.2 and 10.6.

1. standard
2. %ile
3. bc
4. bca

parametric
.975

.025

.829
.815
.828
.820

.556
.542
.523
.555
.z0 d (cid:0):029; a d :058/

nonparametric
.975

.025

.840
.818
.813
.828

.545
.517
.507
.523
.z0 d (cid:0):049; a d :051/

bootstrap con   dence limits continue to provide better id136s in the
vast majority of situations too complicated for exact analysis. one such
situation is examined in table 11.3. it relates to the eigenratio example
illustrated in figures 10.2   10.6. in this case the nonnormality and bias cor-
rections stretch the bootstrap intervals to the left, but the acceleration effect
pulls right, partially canceling out the net change from the standard inter-
vals.

the percentile and bc methods are completely automatic, and can be
applied whenever a suf   ciently large number of bootstrap replications are
available. the same cannot be said of bca. a drawback of the bca method
is that the acceleration a is not a function of the bootstrap distribution and
must be computed separately. often this is straightforward:
(cid:15) for one-parameter exponential families such as the poisson, a equals z0.
(cid:15) in one-sample nonparametric problems, a can be estimated from the
jackknife resamples o

 .i / (10.5),

pn
 pn

id1

id1

(cid:16) o
 .i / (cid:0) o
(cid:16) o
 .(cid:1)/
 i (cid:0) o
 .(cid:1)/

 3
 2(cid:21)1:5 :

oa d 1

6

(11.40)

(cid:15) the abc method computes a in multiparameter exponential families (5.54),

as does the resampling-based r algorithm accel.

con   dence intervals require the number of bootstrap replications b to
be on the order of 2000, rather than the 200 or fewer needed for standard
errors; the corrections made to the standard intervals are more delicate than
standard errors and require greater accuracy.

there is one more cautionary note to sound concerning nuisance param-
eters: biases can easily get out of hand when the parameter vector (cid:22) is

11.5 bootstrap-t intervals

195

high-dimensional. suppose we observe

xi

ind(cid:24)

and wish to set a con   dence interval for   dpn
1 x2
will be sharply biased upward if n is at all large. to be speci   c, if n d 10
and o

  d 20, we compute  

for i d 1; 2; : : : ; n;

  dpn

i . the id113 o

n .(cid:22)i ; 1/

(11.41)

1 (cid:22)2

i

  6

z0 d   

(cid:0)1.0:156/ d (cid:0)1:01:

(11.42)
 bc  :025   (11.33) equal a ludicrously small bootstrap per-

this makes7 o
centile,

og

(cid:0)1.0:000034/;

(11.43)

a warning sign against the bc or bca intervals, which work most depend-
ably for jz0j and jaj small, say   0:2.
a more general warning would be against blind trust in maximum likeli-
hood estimates in high dimensions. computing z0 is a wise precaution even
if it is not used for bc or bca purposes, in case it alerts one to dangerous
biases.

the standard method (11.1) (withbse estimated by the delta method) except

con   dence intervals for classical applications were most often based on

in a few especially simple situations such as the poisson. second-order ac-
curate intervals are very much a computer-age development, with both the
algorithms and the inferential theory presupposing high-speed electronic
computation.

11.5 bootstrap-t intervals

the initial breakthrough on exact con   dence intervals came in the form of
student   s t distribution in 1908. suppose we independently observe data
from two possibly different normal distributions, x d .x1; x2; : : : ; xnx /
and y d .y1; y2; : : : ; yny /,

iid(cid:24)

xi

n .(cid:22)x; (cid:27) 2/

and yi

iid(cid:24)

n .(cid:22)y; (cid:27) 2/;

and wish to form a 0.95 central con   dence interval for

  d (cid:22)y (cid:0) (cid:22)x:
o
  d ny (cid:0) nx;

the obvious estimate is

7 also o bca  :025  , a is zero in this model.

(11.44)

(11.45)

(11.46)

196

bootstrap con   dence intervals

but its distribution depends on the nuisance parameter (cid:27) 2.

student   s masterstroke was to base id136 about   on the pivotal

(11.47)

quantity

o

  (cid:0)  bse
t d
wherebse2 is an unbiased estimate of (cid:27) 2,
bse2 d  1

 pnx
1 .xi (cid:0) nx/2 cpny

c 1
ny

1 .yi (cid:0) ny/2

i

nx

represent the 100  th percentile of a tdf distribution yields

nx c ny (cid:0) 2
(11.48)
t then has the    student   s t distribution    with df d nx c ny (cid:0) 2 degrees of
freedom if (cid:22)x d (cid:22)y, no matter what (cid:27) 2 may be.
  (cid:0)bse (cid:1) t .1(cid:0)  /
letting t .  /
df
  d .:062; :314/:

as the upper level-   interval of a student   s t con   dence limit. applied to
the difference between the aml and all scores in figure 1.4, the central
0.95 student   s t interval for   d efamlg (cid:0) efallg was calculated to be
(11.50)

o
 t        d o

o
 t   :975  

(cid:16) o

(11.49)

 t   :025  ;

df

here nx d 47, ny d 25, and df d 70.
student   s theory depends on the normality assumptions of (11.44). the
bootstrap-t approach is to accept (or pretend) that t in (11.47) is pivotal,
but to estimate its distribution via bootstrap resampling. nonparametric
bootstrap samples are drawn separately from x and y,

x

(cid:3)
1 ; x

(cid:3) d .x

(cid:3)
nx
from which we calculate o

(cid:3)
2 ; : : : ; x

 

and y

/

(cid:3) andbse

(cid:3)

/;

(cid:3)
ny

(cid:3)
1 ; y

(cid:3)
2 ; : : : ; y

(cid:3) d .y
, (11.46) and (11.48), giving
(cid:3) (cid:0) o
o
 bse
 
(cid:3)

;

(11.51)

(11.52)

(cid:3) d

t

  playing the role of  , as appropriate in the bootstrap world. repli-
(cid:3).  / and cor-

(cid:3)b; b d 1; 2; : : : ; bg provide estimated percentiles t

with o
cations ft
responding con   dence limits
o
t        d o
(cid:3)
 

  (cid:0)bse (cid:1) t

(cid:3).1(cid:0)  /:

(11.53)

for the aml   all example, the t

(cid:3) distribution differed only slightly
from a t70 distribution; the resulting 0.95 interval was .0:072; 0:323/, nearly

11.5 bootstrap-t intervals

197

the same as (11.50), lending credence to the original normality assump-
tions.

figure 11.5 b d 2000 nonparametric replications of bootstrap-t
statistic for the student score correlation; small triangles show
0.025 and 0.975 percentile points. the histogram is sharply
skewed to the right; the solid curve is student   s t density for 21
degrees of freedom.

(cid:16)

returning to the student score correlation example of table 11.1, we can
apply bootstrap-t methods by still taking t d .
bse the approximate standard error .1 (cid:0) o
pivotal, but now with   the true correlation, o
p
  the sample correlation, and
19. figure 11.5 shows the
  /=bse
histogram of b d 2000 nonparametric bootstrap replications t
(cid:3) (cid:0)
o

  (cid:0)   /=bse to be notionally
(cid:3) d .

. these gave bootstrap percentiles

  2/=

o
 

o

(cid:3)

(cid:3).:975/  d .(cid:0)1:64; 2:59/

(cid:3).:025/; t

t

(11.54)
(which might be compared with .(cid:0)2:08; 2:08/ for a standard t21 distribu-
tion), and 0.95 interval .0:051; 0:781/ from (11.53), somewhat out of place
compared with the other entries in the right panel of table 11.1.

bootstrap-t intervals are not transformation invariant. this means they
can perform poorly or well depending on the scale of application. if per-
formed on fisher   s scale (11.11) they agree well with exact intervals for

 t* valuesfrequency050100150200t distributiondf = 21   3   2   101234   1.642.59bootstrap con   dence intervals

198

mula forbse.

the correlation coef   cient. a practical dif   culty is the requirement of a for-

nevertheless, the idea of estimating the actual distribution of a proposed
pivotal quantity has great appeal to the modern statistical spirit. calculat-
ing the percentiles of the original student t distribution was a multi-year
project in the early twentieth century. now we can afford to calculate our
own special    t table    for each new application. spending such computa-
tional wealth wisely, while not losing one   s inferential footing, is the cen-
tral task and goal of twenty-   rst-century statisticians.

11.6 objective bayes intervals and the con   dence

distribution

interval estimates are ubiquitous. they play a major role in the scienti   c
discourse of a hundred disciplines, from physics, astronomy, and biology
to medicine and the social sciences. neyman-style frequentist con   dence
intervals dominate the literature, but there have been in   uential bayesian
and fisherian developments as well, as discussed next.

g.  /, bayes    rule (3.5) produces the posterior density of  ,

given a one-parameter family of densities f  .
o
  /;

  / is the marginal densityr f  .

o
  / d g.  /f  .
  /=f .
o
  /g.  /d . the bayes 0.95 cred-

g. j o

where f .

(11.55)

o

o
  / and a prior density

  / spans the central 0.95 region of g. j o

  /, say

ible interval c. j o

  / d .a.

o
  /; b.

o
  //;

with

c. j o
z b.o  /

a.o  /

g. j o

  / d  d 0:95;

(11.56)

(11.57)

and with posterior id203 0.025 in each tail region.

con   dence intervals, of course, require no prior information, making
them eminently useful in day-to-day applied practice. the bayesian equiv-
alents are credible intervals based on uninformative priors, section 3.2.
   matching priors,    those whose credible intervals nearly match neyman
con   dence intervals, have been of particular interest. jeffreys    prior (3.17),

g.  / d

i 1=2

i  dz   @

;

 

@ 

(cid:21)2

o
  /

log f  .

o
  / d

o
  ;

f  .

(11.58)

11.6 objective bayes intervals

199

provides a generally accurate matching prior for one-parameter problems.
figure 3.2 illustrates this for the student score correlation, where the credi-
ble interval .0:093; 0:750/ is a near-exact match to the neyman 0.95 inter-
val of figure 11.1.
dif   culties begin with multiparameter families f(cid:22).x/ (5.1): we wish to
construct an interval estimate for a one-dimensional function   d t .(cid:22)/ of
the p-dimensional parameter vector (cid:22), and must somehow remove the ef-
fects of the p(cid:0) 1    nuisance parameters.    in a few rare situations, including
the normal theory correlation coef   cient, this can be done exactly. pivotal
methods do the job for student   s t construction. bootstrap con   dence inter-
vals greatly extend the reach of such methods, at a cost of greatly increased
computation.
bayesians get rid of nuisance parameters by integrating them out of the
posterior density g.(cid:22)jx/ d g.(cid:22)/f(cid:22).x/=f .x/ (3.6) (x now representing
all the data,    x    equaling .x; y/ for the student t setup (11.44)). that is,
we calculate8 the marginal density of   d t .(cid:22)/ given x, and call it h. jx/.
a credible interval for  , c. jx/, is then constructed as in (11.56)   (11.57),
with h. jx/ playing the role of g. j o
  /. this leaves us the knotty problem
of choosing an uninformative multidimensional prior g.(cid:22)/. we will return
to the question after    rst discussing    ducial methods, a uniquely fisherian
device.
interpretation of pivotality. we rewrite the student t pivotal t d .
(11.47) as

  (cid:0)bse (cid:1) t;
  d o
(11.59)
where t has a student   s t distribution with df degrees of freedom, t (cid:24)
  andbse were    xed at their calculated
tdf. having observed the data .x; y/ (11.44),    ducial theory assigns   the
distribution implied by (11.59), as if o
values while t was distributed as tdf. then o
   con   dence limit, is the 100  th percentile of     s    ducial distribution.

fiducial constructions begin with what seems like an obviously incorrect

 t        (11.49), the student t level-

  (cid:0)   /=bse

o

we seem to have achieved a bayesian posterior conclusion without any
prior assumptions.9 the historical development here is confused by fisher   s
refusal to accept neyman   s con   dence interval theory, as well as his dispar-
agement of bayesian ideas. as events worked out, all of fisher   s immense
prestige was not enough to save    ducial theory from the scrapheap of failed
statistical methods.

8 often a dif   cult calculation, as discussed in chapter 13.
9    enjoying the bayesian omelette without breaking the bayesian eggs,    in l. j. savage   s

words.

200

bootstrap con   dence intervals

  andbse exhaust the information about   available from the

and yet, in arthur koestler   s words,    the history of ideas is    lled with
barren truths and fertile errors.    fisher   s underlying rationale went some-
thing like this: o
data, after which there remains an irreducible component of randomness
described by t. this is an idea of substantial inferential appeal, and one
that can be rephrased in more general terms discussed next that bear on the
question of uninformative priors.
by de   nition, an upper con   dence limit o

 x       satis   es

n
    o

o d   

pr

 x      

n o
 x             o

pr

 x     c (cid:15)  

o d (cid:15):

(11.60)

(11.61)

(11.62)

(where now we have indicated the observed data x in the notation), and so

we can consider o
 x       as a one-to-one function between    in .0; 1/ and   a
point in its parameter space     (assuming that o
 x       is smoothly increasing
in   ). letting (cid:15) go to zero in (11.61) determines the con   dence density of
 , say qgx.  /,

qgx.  / d d  =d ;

the local derivative of id203 at location   for the unknown parameter,
the derivative being taken at   d o
integrating qgx.  / recovers    as a function of  . let  1 d o
 2 d o

 x    2   for any two values   1 <   2 in .0; 1/. then
d  d   2 (cid:0)   1

qgx.  / d  dz  2

z  2

 x    1   and

 x      .

d  

(11.63)

 1

d 

 1

d prf 1        2g;

as in (11.60). there is nothing controversial about (11.63) as long as we
remember that the random quantity in prf 1        2g is not   but rather
the interval . 1;  2/, which varies as a function of x. forgetting this leads to
the textbook error of attributing bayesian properties to frequentist results:
   there is 0.95 id203 that   is in its 0.95 con   dence interval,    etc.

this is exactly what the    ducial argument does.10 whether or not one
accepts (11.63), there is an immediate connection with matching priors.

10 fiducial and con   dence densities agree, as can be seen in the student t situation (11.59),

at least in the somewhat limited catalog of cases fisher thought appropriate for    ducial
calculations.

11.6 objective bayes intervals

201

suppose prior g.(cid:22)/ gives a perfect match to the con   dence interval system
o
 x      . then, by de   nition, its posterior density h. jx/ must satisfy

(cid:0)1 h. jx/ d  d    dz o x       
z o x       

(cid:0)1

qgx.  / d 

(11.64)
for 0 <    < 1. but this implies h. jx/ equals qgx.  / for all  . that is,
the con   dence density qgx.  / is the posterior density of   given x for any
matching prior.

figure 11.6 con   dence density (11.62) for poisson parameter  
having observed o
between 5.08 and 17.82, as in table 11.2, and areas 0.025 in each
tail.

  d 10. there is area 0.95 under the curve

figure 11.6 graphs the con   dence density for o
served o
function of   (11.62),

  (cid:24) poi.  / having ob-
  d 10. this was obtained by numerically differentiating    as a

   d prf10   poi.  /g ;

(11.65)
        including splitting the atom of id203 at 10. according to ta-
ble 11.2, qg10.  / has area 0.95 between 5.08 and 17.82, and area 0.025 in
each tail. whatever its provenance, the graph delivers a striking picture of
the uncertainty in the unknown value of  .

05101520250.000.020.040.060.080.100.120.14qconfidence density5.0817.82l10202

bootstrap con   dence intervals

bootstrap con   dence intervals provide easily computable con   dence den-
og.  / be the bootstrap cdf and og.  / its density function (ob-
sities. let
tained by differentiating a smoothed version of og.  / when og is based on
b bootstrap replications). the percentile con   dence limits o
(cid:0)1.  /
(11.17) have    d og.  /, giving

         d og

qgx.  / d og.  /:

(11.66)
(it is helpful to picture this in figure 11.4.) for the percentile method, the
bootstrap density is the con   dence density.
reweighting og.  /,

for the bca intervals (11.39), the con   dence density is obtained by

qgx.  / d cw.  /og.  /;

(11.67)

  7

where  

w.  / d '   z  =.1 c az  / (cid:0) z0  
.1 c az  /2'.z  c z0/

; with z  d   

(cid:0)1 og.  / (cid:0) z0:

(11.68)

here ' is the standard normal density,    its cdf, and c the constant that
makes qgx.  / integrate to 1. in the usual case where the bootstrap cdf is es-
timated from replications o
(cid:3)b, b d 1; 2; : : : ; b (either parametric or non-
parametric), the bca con   dence density is a reweighted version of og.  /.
de   ne

 

(cid:3)b , bx

(cid:16) o

 

(cid:3)i 

(cid:16) o

 

w

id1

wb d w

:

(11.69)

then the bca con   dence density is the discrete density putting weight wb
on o
(cid:3)b.
figure 11.7 returns to the student score data, n d 22 students,    ve scores

 

each, modeled normally as in figure 10.6,

iid(cid:24)

for i d 1; 2; : : : ; 22:

xi

(11.70)
this is a p d 20-dimensional parametric family: 5 expectations, 5 vari-
ances, 10 covariances. the parameter of interest was taken to be

n5.(cid:21);    /

  d maximum eigenvalue of    :

(11.71)
it had id113 o
  d 683, this being the maximum eigenvalue of the id113
sample covariance matrix o    (dividing each sum of squares by 22 rather
than 21).
b d 8000 parametric bootstrap replications11 o
(cid:3)b gave percentile and
11 b d 2000 would have been enough for most purposes, but b d 8000 gave a sharper

 

picture of the different curves.

11.6 objective bayes intervals

203

figure 11.7 con   dence densities for the maximum eigenvalue
parameter (11.71), using a multivariate normal model (11.70) for
the student score data. the dashed red curve is the percentile
method, solid black the bca (with .z0; a/ d .0:178; 0:093/). the
dotted blue curve is the bayes posterior density for  , using
jeffreys    prior (11.72).

bca con   dence densities as shown. in this case the weights wb (11.69)
increased with o
(cid:3)b, pushing the bca density to the right. also shown is the
bayes posterior density    for   starting from jeffreys    multiparameter prior   8
density

 

gjeff.(cid:22)/ d ji (cid:22)j1=2;

(11.72)
where i (cid:22) is the fisher information matrix (5.26). it isn   t truly uninforma-
tive here, moving its credible limits upward from the second-order accurate
bca con   dence limits. formula (11.72) is discussed further in chapter 13.
bayesian data analysis has the attractive property that, after examin-
ing the data, we can express our remaining uncertainty in the language
of id203. fiducial and con   dence densities provide something similar
for con   dence intervals, at least partially freeing the frequentist from the
interpretive limitations of neyman   s intervals.

500100015000200400600800q: maximum eigenvalueposterior densitybcajeffreyspercentile683l204

bootstrap con   dence intervals

11.7 notes and details

fisher   s theory of    ducial id136 (1930) preceded neyman   s approach,
formalized in (1937), which was presented as an attempt to put interval es-
timation on a    rm probabilistic basis, as opposed to the mysteries of    du-
cialism. the result was an elegant theory of exact and optimal intervals,
phrased in hard-edged frequentistic terms. readers familiar with the the-
ory will know that neyman   s construction   a favorite name in the physics
literature   as pictured in figure 11.1, requires some conditions on the fam-
o
ily of densities f  .
  / to yield optimal intervals, a suf   cient condition being
monotone likelihood ratios.

bootstrap con   dence intervals, efron (1979, 1987), are neither exact nor
optimal, but aim instead for wide applicability combined with near-exact
accuracy. second-order acuracy of bca intervals was established by hall
(1988). bca is emphatically a child of the computer age, routinely requir-
ing b d 2000 or more bootstrap replications per use. shortcut methods are
available. the    abc method    (diciccio and efron, 1992) needs only 1% as
much computation, at the expense of requiring smoothness properties for
  d t .(cid:22)/, and a less automatic coding of the exponential family setting for
individual situations. in other words, it is less convenient.
z   .:025/

denote the central 95% interval of density f  .

  1 [p. 183] neyman   s construction. for any given value of  , let .  .:025/;   .:975//

 

d

 

o
  d 0:025 and

(cid:16) o
(cid:0)1 f 
o
  / be the indicator function for o
1 if   .:025/ <
0 otherwise.

(cid:16) o

(

 

(cid:16) o

o
  /, satisfying

z   .:975/
(cid:0)1 f 
  2 .  .:025/;   .:975//,

d

 

o
  <   .:975/

o
  d 0:975i

and let i  .

 

i 
o
  / has a two-point id203 distribution,

by de   nition, i  .

  d
(cid:16) o
  d

 

(

i 

(11.73)

(11.74)

(11.75)

1 id203 0:95
0 id203 0:05:

o
  / a pivotal statistic, one whose distribution does not de-

this makes i  .
pend upon  .
neyman   s construction takes the con   dence interval c.
to observed value o

(cid:16) o

 

  dn

  w i 

(cid:16) o

 

  d 1
o

  to be
c

o
  / corresponding

:

(11.76)

205

(11.77)

then c.

11.7 notes and details

o
  / has the desired coverage property

n

i 

(cid:16) o

 

  d 1

o d 0:95

pr 

 o d pr 

(cid:16) o
n
  2
c
  .:025/ and o
  /, o
o

 

for any choice of the true parameter  . (for the normal theory correlation
density of f  .
  .:975/ are increasing functions of  . this
makes our previous construction (11.6) agree with (11.76).) the construc-
tion applies quite generally, as long as we are able to de   ne acceptance
regions of the sample space having the desired target id203 content
for every choice of  . this can be challenging in multiparameter families.
  2 [p. 189] fisherian correctness. fisher, arguing against the neyman para-
digm, pointed out that con   dence intervals could be accurate without being
correct: having observed xi
0.95 interval based on just the    rst 10 observations would provide exact
0.95 coverage while giving obviously incorrect id136s for  . if we can
reduce the situation to form (11.22), the percentile method intervals satisfy
fisher   s    logic of inductive id136    for correctness, as at (4.31).
  3 [p. 189] bootstrap sample sizes. why we need bootstrap sample sizes on
the order of b d 2000 for con   dence interval construction can be seen
in the estimation of the bias correction value z0 (11.32). the delta-method
standard error of z0 d   

n . ; 1/ for i d 1; 2; : : : ; 20, the standard

(cid:0)1.p0/ is calculated to be

iid(cid:24)

  p0.1 (cid:0) p0/

(cid:21)1=2

1

'.z0/

(11.78)
:d 0 this is
with '.z/ the standard normal density. with p0
about 1:25=b 1=2, equaling 0.028 at b d 2000, a none-too-small error for
use in the bc formula (11.33) or the bca formula (11.39).

  4 [p. 191] bca accuracy and correctness. the bca con   dence limit o

:d 0:5 and z0

 bca      

b

;

(11.39) is transformation invariant. de   ne

z0 c z.  /

z       d z0 c

;

so o
o
  /, and o(cid:30)
(cid:30) d m.  /, o(cid:30) d m.
(cid:0)1.  / d m   og
(cid:0)1.  /   since o(cid:30)
is   es
percentiles. therefore

 bca       d og
oh
o(cid:30)bca       d oh

1 (cid:0) a.z0 c z.  //

(cid:3) d m.r/, the bootstrap cdf

(11.79)
(cid:0)1f    z        g. for a monotone increasing transformation
oh of o(cid:30)
(cid:3) sat-
(cid:3).  // for the bootstrap
 
(cid:16) o
(cid:0)1   og.

(cid:0)1 f   .z      /g  d m

(cid:0)1 f   .z      /g d m

verifying transformation invariance. (notice that z0 d   

(11.80)
o
  /   equals

(cid:3).  / d m.

(cid:16) og

 bca      

o
 

;

bootstrap con   dence intervals

206
(cid:0)1   oh . o(cid:30)/   and is also transformation invariant, as is a, as discussed pre-
  
viously.)

exact con   dence intervals are transformation invariant, adding consider-
ably to their inferential appeal. for approximate intervals, transformation
invariance means that if we can demonstrate good behavior on any one
n
scale then it remains good on all scales. the model (11.38) to the (cid:30) scale
can be re-expressed as
1 c a o(cid:30)

o d f1 c a(cid:30)gf1 c a.z (cid:0) z0/g ;

(11.81)

where z is a standard normal variate, z (cid:24)
o(cid:13) d (cid:13) c u;

taking logarithms,

n .0; 1/.

(11.82)
where o(cid:13) d logf1 c a o(cid:30)g, (cid:13) d logf1 c a(cid:30)g, and u is the random variable
logf1 c a.z (cid:0) z0/g; (11.82) represents the simplest kind of translation
model, where the unknown value of (cid:13) rigidly shifts the distribution of u .
the obvious con   dence limit for (cid:13),

o(cid:13)        d o(cid:13) (cid:0) u .1(cid:0)  /;

 bc       (11.33).

(11.83)
where u .1(cid:0)  / is the 100.1 (cid:0)   /th percentile of u , is then accurate, and
also    correct,    according to fisher   s (admittedly vague) logic of inductive
id136. it is an algebraic exercise, given in section 3 of efron (1987),
to reverse the transformations   ! (cid:30) ! (cid:13) and recover o
 bca       (11.39).
setting a d 0 shows the accuracy and correctness of o
  5 [p. 192] the acceleration a. this a appears in (11.38) as d(cid:27)(cid:30)=d(cid:30), the
rate of change of o(cid:30)   s standard deviation as a function of its expectation.
in one-parameter exponential families it turns out that this is one-third of
d(cid:27)  =d ; that is, the transformation to normality (cid:30) d m.  / also decreases
the instability of the standard deviation, though not to zero.
the variance of the score function p
lx.  / determines the standard de-
viation of the id113 o
  (4.17)   (4.18). in one-parameter exponential fami-
lies, one-sixth the skewness of p
lx.  / gives a. the skewness connection can
be seen at work in estimate (11.40). in multivariate exponential families
(5.50), the skewness must be evaluated in the    least favorable    direction,
discussed further in chapter 13. the r algorithm accel (book web site)
(cid:3)b/ to estimate a. the per-
uses b parametric bootstrap replications .
centile and bc intervals require only the replications o
(cid:3)b, while bca also
requires knowledge of the underlying exponential family. see sections 4,
6, and 7 of efron (1987).

(cid:3)b;

o
  

o
 

 

207

11.7 notes and details

  d p x2
tral chi-square variable with noncentrality parameter   d p (cid:22)2
  6 [p. 195] equation (11.42). model (11.41) makes o
i a noncen-
i and n
degrees of freedom, written as o
 ;n. with o
  d 20 and n d 10, the
parametric bootstrap distribution is r (cid:24) (cid:31)2
20;10. numerical evaluation gives
prf(cid:31)2
efron (1985) concerns con   dence intervals for parameters   d t .(cid:22)/ in
model (11.41), where third-order accurate con   dence intervals can be cal-
culated. the acceleration a equals zero for such problems, making the bc
intervals second-order accurate. in practice, the bc intervals usually per-
form well, and are a reasonable choice if the accleration a is unavailable.

  20g d 0:156, leading to (11.42).

  (cid:24) (cid:31)2

20;10

  7 [p. 202] bca con   dence density (11.68). de   ne

(cid:0)1h og.  /

i (cid:0) z0 d

z  d   

so that

z.  / d z 

1 c az 

(cid:0) z0

z0 c z.  /

1 (cid:0) a(cid:0)z0 c z.  /(cid:1) ;
  z 

1 c az 

(cid:0) z0

 

:

(11.84)

(11.85)

here we are thinking of    and   as functionally related by   d o
differentiation yields

 bca      .

and    d   
 

(cid:16) z 
(cid:16) z 

(cid:0) z0
1caz 
.1 c az  /2
1caz 

 
.1 c az  /2'.z  c z0/

(cid:0) z0

;

d '

d '

d  
dz 

dz 
d 

(11.86)

og.  /;

which together give d  =d , verifying (11.68).

the name    con   dence density    seems to appear    rst in efron (1993),
though the idea is familiar in the    ducial literature. an ambitious frequen-
tist theory of con   dence distributions is developed in xie and singh (2013).
  8 [p. 203] jeffreys    prior. formula (11.72) is discussed further in chapter 13,
in the more general context of uninformative prior distributions. the the-
ory of matching priors was initiated by welch and peers (1963), another
important reference being tibshirani (1989).

12

cross-validation and cp estimates of

prediction error

prediction has become a major branch of twenty-   rst-century commerce.
questions of prediction arise naturally: how credit-worthy is a loan appli-
cant? is a new email message spam? how healthy is the kidney of a poten-
tial donor? two problems present themselves: how to construct an effective
prediction rule, and how to estimate the accuracy of its predictions. in the
language of chapter 1, the    rst problem is more algorithmic, the second
more inferential. chapters 16   19, on machine learning, concern predic-
tion rule construction. here we will focus on the second question: having
chosen a particular rule, how do we estimate its predictive accuracy?

two quite distinct approaches to prediction error assessment developed
in the 1970s. the    rst, depending on the classical technique of cross-
validation, was fully general and nonparametric. a narrower (but more
ef   cient) model-based approach was the second, emerging in the form of
mallows    cp estimate and the akaike information criterion (aic). both
theories will be discussed here, beginning with cross-validation, after a
brief overview of prediction rules.

12.1 prediction rules

prediction problems typically begin with a training set d consisting of n
pairs .xi ; yi /,

d d f.xi ; yi /; i d 1; 2; : : : ; ng ;

(12.1)

where xi is a vector of p predictors and yi a real-valued response. on the
basis of the training set, a prediction rule rd .x/ is constructed such that a

prediction oy is produced for any point x in the predictor   s sample space x ,

oy d rd .x/

for x 2

x :

(12.2)

208

(

1

oy0 d

if o(cid:25)0 (cid:21) 0:5
if o(cid:25)0 < 0:5:

12.1 prediction rules

209

the inferential task is to assess the accuracy of the rule   s predictions. (in
practice there are usually several competing rules under consideration and
the main question is determining which is best.)
in the spam data of section 8.1, xi comprised p d 57 keyword counts,
while yi (8.18) indicated whether or not message i was spam. the rule
rd .x/ in table 8.3 was an id113 id28    t. given a new mes-
sage   s count vector, say x0, rd .x0/ provided an estimated id203 o(cid:25)0 of
it being spam, which could be converted into a prediction oy0 according to

0

(12.3)
the diabetes data of table 7.2, section 7.3, involved the p d 10 pre-
dictors x d (age, sex, . . . , glu), obtained at baseline, and a response y
measuring disease progression one year later. given a new patient   s base-
line measurements x0, we would like to predict his or her progression y0.
table 7.3 suggests two possible prediction rules, ordinary least squares and
ridge regression using ridge parameter (cid:21) d 0:1, either of which will pro-
duce a prediction oy0. in this case we might assess prediction error in terms
of squared error, .y0 (cid:0) oy0/2.
in both of these examples, rd .x/ was a regression estimator suggested
by a id203 model. one of the charms of prediction is that the rule
rd .x/ need not be based on an explicit model. regression trees, as pictured
in figure 8.7, are widely used1 prediction algorithms that do not require
model speci   cations. prediction, perhaps because of its model-free nature,
is an area where algorithmic developments have run far ahead of their in-
ferential justi   cation.
quantifying the prediction error of a rule rd .x/ requires speci   cation of
the discrepancy d.y; oy/ between a prediction oy and the actual response y.
the two most common choices are squared error
d.y; oy/ d .y (cid:0) oy/2;

(12.4)

and classi   cation error

d.y; oy/ d

(

1 if y    oy
0 if y d oy;

(12.5)

when, as with the spam data, the response y is dichotomous. (prediction
of a dichotomous response is often called    classi   cation.   )

1 id79s, one of the most popular machine learning prediction algorithms, is an

elaboration of regression trees. see chapter 17.

  1

210

cross-validation and cp estimates

for the purpose of error estimation, we suppose that the pairs .xi ; yi / in
the training set d of (12.1) have been obtained by random sampling from

some id203 distribution f on .p c 1/-dimensional space rpc1,

iid(cid:24) f

for i d 1; 2; : : : ; n:

.xi ; yi /

(12.6)
the true error rate errd of rule rd .x/ is the expected discrepancy of oy0 d
rd .x0/ from y0 given a new pair .x0; y0/ drawn from f independently of
d,

errd d ef fd.y0; oy0/gi

(12.7)

d (and rd .(cid:1)/) is held    xed in expectation (12.7), only .x0; y0/ varying.
figure 12.1 concerns the supernova data, an example we will return to in
the next section.  absolute magnitudes yi have been measured for n d 39
relatively nearby type ia supernovas, with the data scaled such that

ind(cid:24)

i d 1; 2; : : : ; 39;

yi

(12.8)
is a reasonable model. for each supernova, a vector xi of p d 10 spectral
energies has been observed,

n .(cid:22)i ; 1/;

i d 1; 2; : : : ; 39:

xi d .xi1; xi 2; : : : ; xi10/;

(12.9)
table 12.1 shows .xi ; yi / for i d 1; 2; : : : ; 5. (the frequency measure-
ments have been standardized to have mean 0 and variance 1, while y has
been adjusted to have mean 0.)
on the basis of the training set d d f.xi ; yi /; i d 1; 2; : : : ; 39g, we
wish to construct a rule rd .x/ that, given the frequency vector x0 for a
newly observed type ia supernova, accurately predicts2 its absolute mag-
nitude y0. to this end, a lasso estimate q
  .(cid:21)/ was    t, with y in (7.42) the
vector .y1; y2; : : : ; y39/ and x the 39 (cid:2) 10 matrix having ith row xi; (cid:21)
was selected to minimize a cp estimate of prediction error, section 12.3,
yielding prediction rule

oy0 d x

0

0

q
  .(cid:21)/:

(12.10)

(so in this case constructing rd .x/ itself involves error rate estimation.)

2 type ia supernovas were used as    standard candles    in the discovery of dark energy and

the cosmological expansion of the universe, on the grounds that they have constant
absolute magnitude. this isn   t exactly true. our training set is unusual in that the 39
supernovas are close enough to earth to have y ascertained directly. this allows the
construction of a prediction rule based on the frequency vector x, which is observable
for distant supernovas, leading to improved calibration of the cosmological expansion.

12.1 prediction rules

211

figure 12.1 the supernova data; observed absolute magnitudes
yi (on log scale) plotted versus predictions oyi obtained from lasso
rule (12.10), for n d 39 nearby type ia supernovas. predictions
based on 10 spectral power measurements, 7 of which had
nonzero coef   cients in q

  .(cid:21)/.

the plotted points in figure 12.1 are . oyi ; yi / for i d 1; 2; : : : ; n d 39.
these gave apparent error

nx
.yi (cid:0) oyi /2 d 0:720:

err d 1

comparing this withp.yi (cid:0) ny/2=n d 3:91 yields an impressive-looking

(12.11)

id1

n

   r squared    value

r2 d 1 (cid:0) 0:720=3:91 d 0:816:

(12.12)

things aren   t really that good (see (12.23)). cross-validation and cp meth-
ods allow us to correct apparent errors for the fact that rd .x/ was chosen
to make the predictions oyi    t the data yi.
prediction and estimation are close cousins but they are not twins. as
discussed earlier, prediction is less model-dependent, which partly accounts
for the distinctions made in section 8.4. the prediction criterion err (12.7)

lllllllllllllllllllllllllllllllllllllll   4   20246   4   20246predicted magnitude y^iabsolute magnitude yiapparent mean squarederror = 0.72212

cross-validation and cp estimates

table 12.1 supernova data; 10 frequency measurements and response
variable    absolute magnitude    for the    rst 5 of n d 39 type ia
supernovas. in terms of notation (12.1), frequency measurements are x
and magnitude y.

sn5
sn3
sn4
sn2
sn1
(cid:0).08
(cid:0).84 (cid:0)1.89
.41
.26
(cid:0).81
(cid:0).80
(cid:0).93
(cid:0).46
1.02
(cid:0).13
(cid:0).21
1.14
2.41
.32
(cid:0).86 (cid:0)1.12
1.31
.77
.18
(cid:0).65
(cid:0).94
(cid:0).86
(cid:0).68
.68
(cid:0)1.27 (cid:0)1.53
(cid:0).35
.30
.72
(cid:0).82
.09 (cid:0)1.04
.62
.34
.56 (cid:0)1.53
(cid:0).43
.26 (cid:0)1.10
.62 (cid:0)1.49
.18 (cid:0)1.32
(cid:0).02
(cid:0).49 (cid:0)1.09
(cid:0).3
(cid:0).54 (cid:0)1.70
(cid:0):54
(cid:0):22
:95 (cid:0)3:75
2:12

x1
x2
x3
x4
x5
x6
x7
x8
x9
x10
mag

is an expectation over the .x; y/ space. this emphasizes good overall per-
formance, without much concern for behavior at individual points x in x .
shrinkage usually improves prediction. consider a bayesian model like
that of section 7.1,

(cid:22)i (cid:24)

n .0; a/

and xij(cid:22)i (cid:24)

n .(cid:22)i ; 1/

for i d 1; 2; : : : ; n:

the bayes shrinkage estimator, which is ideal for estimation,

o(cid:22)i d bxi ;

b d a=.a c 1/;

is also ideal for prediction. suppose that in addition to the observations
xi there are independent unobserved replicates, one for each of the n xi
values,

yi (cid:24)

n .(cid:22)i ; 1/

for i d 1; 2; : : : ; n;

that we wish to predict. the bayes predictor
oyi d bxi
)

has overall bayes prediction error

(

nx
.yi (cid:0) oyi /2

e

1

n

id1

d b c 1;

(12.13)

(12.14)

(12.15)

(12.16)

(12.17)

213
which cannot be improved upon. the id113 rule oyi d xi has bayes predic-
tion error 2, which is always worse than (12.17).

12.2 cross-validation

as far as prediction is concerned it pays to overshrink, as illustrated in
figure 7.1 for the james   stein version of situation (12.13). this is    ne for
prediction, but less    ne for estimation if we are concerned about extreme
cases; see table 7.4. prediction rules sacri   ce the extremes for the sake of
the middle, a particularly effective tactic in dichotomous situations (12.5),
where the cost of individual errors is bounded. the most successful ma-
chine learning prediction algorithms, discussed in chapters 16   19, carry
out a version of local bayesian shrinkage in selected regions of x .

12.2 cross-validation

having constructed a prediction rule rd .x/ on the basis of training set d,
we wish to know its prediction error err d ef fd.y0; oy0/g (12.7) for a
new case obtained independently of d. a    rst guess is the apparent error

nx

id1

err d 1

n

d.yi ; oyi /;

(12.18)

the average discrepancy in the training set between yi and its prediction
oyi d rd .xi /; err usually underestimates err since rd .x/ has been adjusted3
to    t the observed responses yi.

the ideal remedy, discussed in section 12.4, would be to have an inde-

pendent validation set (or test set) dval of nval additional cases,

(cid:9) :

dval d  .x0j ; y0j /; j d 1; 2; : : : ; nval
nvalx

d.y0j ; oy0j /;

oy0j d rd .x0j /:

cerrval d 1

this would provide an unbiased estimate of err,

(12.19)

(12.20)

nval

jd1

cross-validation attempts to mimiccerrval without the need for a valida-
tion set. de   ne d .i / to be the reduced training set in which pair .xi ; yi /
has been omitted, and let rd.i /.(cid:1)/ indicate the rule constructed on the basis
err dp

3 id75 using ordinary least squares    tting provides a classical illustration:
i .yi (cid:0) oyi /2=.n (cid:0) p/, where p is

i .yi (cid:0) oyi /2=n must be increased top

the degrees of freedom, to obtain an unbiased estimate of the noise variance (cid:27) 2.

214

cross-validation and cp estimates

of d .i /. the cross-validation estimate of prediction error is
oy.i / d rd.i /.xi /:

cerrcv d 1

d.yi ; oy.i //;

nx

id1

n

(12.21)

now .xi ; yi / is not involved in the construction of the prediction rule for

yi.cerrcv (12.21) is the    leave one out    version of cross-validation. a more
tions for the yi in group j . thencerrcv is evaluated as in (12.21). besides

common tactic is to leave out several pairs at a time: d is randomly parti-
tioned into j groups of size about n=j each; d .j /, the training set with
group j omitted, provides rule rd.j /.x/, which is used to provide predic-

reducing the number of rule constructions necessary, from n to j , group-
ing induces larger changes among the j training sets, improving the predic-
tive performance on rules rd .x/ that include discontinuities. (the argument
here is similar to that for the jackknife, section 10.1.)
cross-validation was applied to the supernova data pictured in figure 12.1.
the 39 cases were split, randomly, into j d 13 groups of three cases each.
this gave

(12.22)
(12.21), 62% larger than err d 0:72 (12.11). the r2 calculation (12.12)
now yields the smaller value

r2 d 1 (cid:0) 1:17=3:91 d 0:701:

(12.23)

cerrcv d 1:17;

we can apply cross-validation to the spam data of section 8.1, having
n d 4061 cases, p d 57 predictors, and dichotomous response y. for
this example, each of the 57 predictors was itself dichotomized to be either
0 or 1 depending on whether the original value xij equaled zero or not.
a id28, section 8.1, regressing yi on the 57 dichotomized
predictors, gave apparent classi   cation error (12.5)

i.e., 295 wrong predictions among the 4061 cases. cross-validation, with
j d 10 groups of size 460 or 461 each, increased this to

err d 0:064;
cerrcv d 0:069;

(12.24)

(12.25)

an increase of 8%.

glmnet is an automatic model building program that, among other
things, constructs a lasso sequence of id28 models, adding

12.2 cross-validation

215

figure 12.2 spam data. apparent error rate err (blue) and
cross-validated estimate (red) for a sequence of prediction rules
generated by glmnet. the degrees of freedom are the number of
nonzero regression coef   cients: df d 57 corresponds to ordinary
id28, which gave apparent err 0.064, cross-validated
rate 0.069. the minimum cross-validated error rate is 0.067.

variables one at a time in their order of apparent predictive power; see
chapter 16. the blue curve in figure 12.2 tracks the apparent error err
(12.18) as a function of the number of predictors employed. aside from nu-
merical artifacts, err is monotonically decreasing, declining to err d 0:064
glmnet produced prediction error estimatescerrcv for each of the suc-
for the full model that employs all 57 predictors, i.e., for the usual logistic
regression model, as in (12.24).

cessive models, shown by the red curve. these are a little noisy themselves,
but settle down between 4% and 8% above the corresponding err estimates.
the minimum value

cerrcv d 0:067

(12.26)

occurred for the model using 47 predictors.

the difference between (12.26) and (12.25) is too small to take seriously

given the noise in the cerrcv estimates. there is a more subtle objection:
the choice of    best    prediction rule based on comparative cerrcv estimates

is not itself cross-validated. each case .xi ; yi / is involved in choosing its

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll010203040500.000.050.100.150.200.25degrees of freedommisclassification error ratelllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllogisticregression216

own best prediction, socerrcv at the apparently optimum choice cannot be

cross-validation and cp estimates

taken entirely at face value.

nevertheless, perhaps the principal use of cross-validation lies in choos-
ing among competing prediction rules. whether or not this is fully justi   ed,
it is often the only game in town. that being said, minimum predictive er-
ror, no matter how effectuated, is a notably weaker selection principle than
minimum variance of estimation.

as an example, consider an iid normal sample

iid(cid:24)

xi

(12.27)
having mean nx and median mx. both are unbiased for estimating (cid:22), but nx is
much more ef   cient,

n .(cid:22); 1/;

i d 1; 2; : : : ; 25;

var.mx/= var.nx/

:d 1:57:

(12.28)

e  .x0 (cid:0) mx/2(cid:9)  e  .x0 (cid:0) nx/2(cid:9) d 1:02:

suppose we wish to predict a future observation x0 independently selected
from the same n .(cid:22); 1/ distribution. in this case there is very little advan-
tage to nx,
(12.29)
the noise in x0 (cid:24)
n .(cid:22); 1/ dominates its prediction error. perhaps the
proliferation of prediction algorithms to be seen in part iii re   ects how
weakly changes in strategy affect prediction error.
table 12.2 ratio of predictive errors ef.nx0 (cid:0) mx/2g=ef.nx0 (cid:0) nx/2g for nx0
the mean of an independent sample of size n0 from n .(cid:22); 1/; nx and mx are
the mean and median from xi (cid:24)

n .(cid:22); 1/ for i d 1; 2; : : : ; 25.

n0
ratio

1

1.02

10
1.16

100
1.46

1000 1
1.57
1.56

in this last example, suppose that our task was to predict the average

nx0 of n0 further draws from the n .(cid:22); 1/ distribution. table 12.2 shows

the ratio of predictive errors as a function of n0. the superiority of the
mean compared to the median reveals itself as n0 gets larger. in this super-
simpli   ed example, the difference between prediction and estimation lies
in predicting the average of one versus an in   nite number of future obser-
vations.

doescerrcv actually estimate errd as de   ned in (12.7)? it seems like the

answer must be yes, but there is some doubt expressed in the literature, for

12.2 cross-validation

217
reasons demonstrated in the following simulation: we take the true distri-
bution f in (12.6) to be the discrete distribution of that puts weight 1=39
on each of the 39 .xi ; yi / pairs of the supernova data.4 a random sample
with replacement of size 39 from of gives simulated data set d
(cid:3) and pre-
(cid:3), gives cerr
(cid:3) .(cid:1)/ based on the lasso/cp recipe used originally. the same
diction rule rd
(cid:3)
cross-validation procedure as before, applied to d
cv. because
this is a simulation, we can also compute the actual mean-squared error
(cid:3) .(cid:1)/ applied to the true distribution of ,
rate of rule rd

d .yi ; rd

(cid:3) .xi // :

(12.30)

39x

id1

err

(cid:3) d 1
39

with cross-validation estimatecerr
supernova data.cerr

figure 12.3 simulation experiment comparing true error err

(cid:3)
cv; 500 simulations based on the

;cerr

(cid:3)
cv and err are negatively correlated.
(cid:3)
figure 12.3 plots .err

(cid:3)
ble 12.3. cerr
cv/ for 500 simulations, using squared er-
ror discrepancy d.y; oy/ d .y (cid:0) oy/2. summary statistics are given in ta-
(cid:3)
cv has performed well overall, averaging 1.07, quite near the
true err 1.02, both estimates being 80% greater than the average appar-
ent error 0.57. however, the    gure shows something unsettling: there is a
4 simulation based on of is the same as nonparametric bootstrap analysis, chapter 10.

err*errcv*l218

cross-validation and cp estimates
(cid:3)
cv, and apparent

(cid:3)
table 12.3 true error err
error err(cid:3); 500 simulations based on supernova data. correlation (cid:0)0:175
(cid:3)
between err

, cross-validated errorcerr
err(cid:3) cerr

andcerr

(cid:3)
cv.

(cid:3)
cv
1.07
.34

err(cid:3)
.57
.16

mean
st dev

1.02
.27

negative correlation betweencerr

. large values ofcerr

(cid:3)
cv go with

(cid:3)
cv and err

(cid:3)

smaller values of the true prediction error, and vice versa.

our original de   nition of err,

errd d ef fd.y0; rd .x0//g ;

for rd

(cid:3) .(cid:1)/. ifcerr

(12.31)
took rd .(cid:1)/    xed as constructed from d, only .x0; y0/ (cid:24) f random. in other
words, errd was the expected prediction error for the speci   c rule rd .(cid:1)/, as
(cid:3)
as it is, all we can say is thatcerr
we would expect to see a positive
is err
correlation in figure 12.3.
(cid:3)
makes cross-validation a strongly frequentist device:cerrcv is estimating the
cv is estimating the expected predictive
error, where d as well as .x0; y0/ is random in de   nition (12.31). this
average prediction error of the algorithm producing rd .(cid:1)/, not of rd .(cid:1)/ itself.

(cid:3)
cv is tracking err

(cid:3)

12.3 covariance penalties

cross-validation does its work nonparametrically and without the need for
probabilistic modeling. covariance penalty procedures require id203
models, but within their ambit they provide less noisy estimates of predic-
tion error. some of the most prominent covariance penalty techniques will
be examined here, including mallows    cp, akaike   s information criterion
(aic), and stein   s unbiased risk estimate (sure).
the covariance penalty approach treats prediction error estimation in
a regression framework: the predictor vectors xi in the training set d d
f.xi ; yi /; i d 1; 2; : : : ; ng (12.1) are considered    xed at their observed
values, not random as in (12.6). an unknown vector (cid:22) of expectations
(cid:22)i d efyig has yielded the observed vector of responses y according to
some given id203 model, which to begin with we assume to have the

simple form

12.3 covariance penalties

y (cid:24) .(cid:22); (cid:27) 2i/i

219

(12.32)

that is, the yi are uncorrelated, with yi having unknown mean (cid:22)i and vari-
ance (cid:27) 2. we take (cid:27) 2 as known, though in practice it must usually be esti-
mated.
a regression rule r.(cid:1)/ has been used to produce an estimate of vector (cid:22),
(12.33)

o(cid:22) d r.y/:

(only y is included in the notation since the predictors xi are considered
   xed and known.) for instance we might take

o(cid:22) d r.y/ d x .x

0

(cid:0)1x

0

y;

x /

(12.34)
where x is the n (cid:2) p matrix having xi as the ith row, as suggested by the
id75 model (cid:22) d x   .
in covariance penalty calculations, the estimator o(cid:22) also functions as a
predictor. we wonder how accurate o(cid:22) d r.y/ will be in predicting a new
vector of observations y0 from model (12.32),

y0 (cid:24) .(cid:22); (cid:27) 2i/;

independent of y:

(12.35)

to begin with, prediction error will be assessed in terms of squared dis-
crepancy,

(12.36)
for component i, where e0 indicates expectation with y0i random but o(cid:22)i
held    xed. overall prediction error is the average5

erri d e0

  .y0i (cid:0) o(cid:22)i /2(cid:9)
nx

erri :

err(cid:1) d 1

id1
the apparent error for component i is

n

(12.37)

(12.38)

erri d .yi (cid:0) o(cid:22)i /2:

a simple but powerful lemma underlies the theory of covariance penalties.
lemma let e indicate expectation over both y in (12.32) and y0 in
(12.35). then

eferrig d eferrig c 2 cov. o(cid:22)i ; yi /;

(12.39)

5 err(cid:1) is sometimes called    insample error,    as opposed to    outsample error    err (12.7),

though in practice the two tend to behave similarly.

cross-validation and cp estimates

220
where the last term is the covariance between the ith components of o(cid:22) and
y,

cov. o(cid:22)i ; yi / d e f. o(cid:22)i (cid:0) (cid:22)i /.yi (cid:0) (cid:22)i /g :

(12.40)

i

(cid:0) 2(cid:15)i   i c   2

(note: (12.40) does not require ef o(cid:22)ig d (cid:22)i.)
proof letting (cid:15)i d yi (cid:0) (cid:22)i and   i d . o(cid:22)i (cid:0) (cid:22)i /, the elementary equality
.(cid:15)i (cid:0)   i /2 d (cid:15)2
.yi (cid:0) o(cid:22)i /2 d .yi (cid:0) (cid:22)i /2 (cid:0) 2. o(cid:22)i (cid:0) (cid:22)i /.yi (cid:0) (cid:22)i / c . o(cid:22)i (cid:0) (cid:22)i /2;
and likewise
.y0i (cid:0) o(cid:22)i /2 d .y0i (cid:0) (cid:22)i /2 (cid:0) 2. o(cid:22)i (cid:0) (cid:22)i /.y0i (cid:0) (cid:22)i /c . o(cid:22)i (cid:0) (cid:22)i /2: (12.42)
taking expectations, (12.41) gives

i becomes

(12.41)

eferrig d (cid:27) 2 (cid:0) 2 cov. o(cid:22)i ; yi / c e. o(cid:22)i (cid:0) (cid:22)i /2;

while (12.42) gives

eferrig d (cid:27) 2 c e. o(cid:22)i (cid:0) (cid:22)i /2;

(12.43)

(12.44)

the middle term on the right side of (12.42) equaling zero because of the
independence of y0i and o(cid:22)i. taking the difference between (12.44) and
(cid:4)
(12.43) veri   es the lemma.

note: the lemma remains valid if (cid:27) 2 varies with i.
the lemma says that, on average, the apparent error erri understimates
the true prediction error erri by the covariance penalty 2 cov. o(cid:22)i ; yi /. (this
makes intuitive sense since cov.(cid:22)i ; yi / measures the amount by which yi
in   uences its own prediction o(cid:22)i.) covariance penalty estimates of predic-
tion error take the formcerri d erri c2dcov. o(cid:22)i ; yi /;
wheredcov. o(cid:22)i ; yi / approximates cov.(cid:22)i ; yi /; overall prediction error (12.37)
cerr(cid:1) d errc 2
dcov. o(cid:22)i ; yi /;
where err dp erri =n as before.
the form ofdcov. o(cid:22)i ; yi / in (12.45) depends on the context assumed for

is estimated by

nx

(12.45)

(12.46)

id1

n

the prediction problem.

12.3 covariance penalties

221

(1)

suppose that o(cid:22) d r.y/ in (12.32)   (12.33) is linear,

(12.47)
where c is a known n -vector and m a known n (cid:2) n matrix. then the
covariance matrix between o(cid:22) and y is

o(cid:22) d c c my;

(12.48)

(12.49)

giving cov. o(cid:22)i ; yi / d (cid:27) 2mi i, mi i the ith diagonal element of m,

and, since err dp

cov. o(cid:22); y/ d (cid:27) 2m ;
cerri d erri c2(cid:27) 2mi i ;
i .yi (cid:0) o(cid:22)i /2=n ,
nx
cerr(cid:1) d 1
.yi (cid:0) o(cid:22)i /2 c 2(cid:27) 2

tr.m /:

(12.50)

formula (12.50) is mallows    cp estimate of prediction error. for ols
0 has tr.m / d p, the number of

x /

0

n

n

id1
estimation (12.34), m d x .x
nx
cerr(cid:1) d 1
predictors, so
.yi (cid:0) o(cid:22)i /2 c 2

(cid:0)1x

n

id1

y yielded err dp.yi (cid:0) o(cid:22)i /2=39 d 0:719. the covariance penalty, with

for the supernova data (12.8)   (12.9), the ols predictor o(cid:22) d x .x
(cid:0)1
0
n d 39, (cid:27) 2 d 1, and6 p d 10, was 0.513, giving cp estimate of predic-
tion error

x /

x

n

0

cerr(cid:1) d 0:719 c 0:513 d 1:23:

(12.52)

(cid:27) 2p:

(12.51)

for ols regression, the degrees of freedom p, the rank of matrix x in
(12.34), determines the covariance penalty .2=n /(cid:27) 2p in (12.51). compar-
ing this with (12.46) leads to a general de   nition of degrees of freedom df
for a regression rule o(cid:22) d r.y/,

df d .1=(cid:27) 2/

nx

id1

dcov. o(cid:22)i ; yi /:

(12.53)

this de   nition provides common ground for comparing different types of
regression rules. rules with larger df are more    exible and tend toward
better apparent    ts to the data, but require bigger covariance penalties for
fair comparison.
6 we are not counting the intercept as an 11th predictor since y and all the xi were

standardized to have mean 0, all our models assuming zero intercept.

  2

  3

222

cross-validation and cp estimates

(2)
for lasso estimation (7.42) and (12.10), it can be shown that for-
mula (12.51), with p equaling the number of nonzero regression coef   -
cients, holds to a good approximation.    the lasso rule used in figure 12.1
for the supernova data had p d 7; err was 0.720 for this rule, almost the
same as for the ols rule above, but the cp penalty is less, 2(cid:1)7=39 d 0:359,
giving

cerr(cid:1) d 0:720 c 0:359 d 1:08;
compared with 1.23 for ols. this estimate does not account for the data-
based selection of the choice p d 7, see item (4) below.
(3)

if we are willing to add multivariate normality to model (12.32),

(12.54)

y (cid:24)

np.(cid:22); (cid:27) 2i/;

(12.55)

we can drop the assumption of linearity (12.47). in this case it can be
shown that, for any differentiable estimator o(cid:22) d r.y/, the covariance in
formula (12.51) is given by  

cov. o(cid:22)i ; yi / d (cid:27) 2ef@ o(cid:22)i =@yig;

(12.56)
(cid:27) 2 times the partial derivative of o(cid:22)i with respect to yi. (another measure of
yi   s in   uence on its own prediction.) the sure formula (stein   s unbiased
risk estimator) is

;

(12.57)

with corresponding estimate for overall prediction error

cerri d erri c2(cid:27) 2 @ o(cid:22)i
nx
cerr(cid:1) d errc 2(cid:27) 2

@yi

@ o(cid:22)i

(12.58)
sure was applied to the rule o(cid:22) d lowess(x,y,1/3) for the kid-
ney    tness data of figure 1.2. the open circles in figure 12.4 plot the
component-wise degrees of freedom estimates7

id1

@yi

n

:

(obtained by numerical differentiation) versus agei. their sum

@ o(cid:22)i

@yi

;

i d 1; 2; : : : ; n d 157;
nx

@ o(cid:22)i

d 6:67

id1

@yi

(12.59)

(12.60)

7 notice that the factor (cid:27) 2 in (12.56) cancels out in (12.53).

12.3 covariance penalties

223

estimates the total degrees of freedom, as in (12.53), implying that
lowess(x,y,1/3) is about as    exible as a sixth-degree polynomial    t,
with df = 7.

figure 12.4 analysis of the lowess(x,y,1/3)    t to kidney
data of figure 1.2. open circles are sure coordinate-wise df
estimates @ o(cid:22)i =@yi, plotted versus agei, giving total degrees of
freedom 6.67. the solid curve tracks bootstrap coordinate-wise
estimates (12.65), with their sum giving total df d 6:81.

(4)
the parametric bootstrap8 of section 10.4 can be used to estimate
the covariances cov. o(cid:22)i ; yi / in the lemma (12.39). the data vector y is as-
sumed to be generated from a member f(cid:22).y/ of a given parametric family

d  f(cid:22).y/; (cid:22) 2 (cid:127)(cid:9) ;

f

(12.61)

yielding o(cid:22) d r.y/,

(12.62)
parametric bootstrap replications of y and o(cid:22) are obtained by analogy with

f(cid:22) ! y ! o(cid:22) d r.y/:

8 there is also a nonparametric bootstrap competitor to cross-validation, the    .632

estimate;    see the chapter endnote   4.

lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll20304050607080900.00.10.20.30.4agedf estimatedegrees of freedomsure = 6.67bootstrap = 6.81224

(12.62),9

cross-validation and cp estimates

(cid:3) ! o(cid:22)

(cid:3) d r.y

(cid:3)

/:

(12.63)

a large number b of replications then yield bootstrap estimates

f o(cid:22) ! y
bx
dcov. o(cid:22)i ; yi / d 1
. o(cid:22)
(cid:3)b

i

b

bd1

(cid:0) o(cid:22)

(cid:3)(cid:1)
i /.y

(cid:3)b

i

(cid:0) y

(cid:3)(cid:1)
i /;

(12.64)

b d 1000 parametric bootstrap replications . o(cid:22)
(cid:3)

the dot notation indicating averages over the b replications.
/ were obtained
from the normal model (12.55), taking o(cid:22) in (12.63) to be the estimate from
lowess(x,y,1/3) as in figure 1.2. a standard id75, of y
as a 12th-degree polynomial function of age, gave o(cid:27) 2 d 3:28. covariances
were computed as in (12.64), yielding coordinate-wise degrees of freedom
estimates (12.53),

; y

(cid:3)

dfi ddcov. o(cid:22)i ; yi /=o(cid:27) 2:

(12.65)

the solid curve in figure 12.4 plots dfi as a function of agei. these are
seen to be similar to but less noisy than the sure estimates. they totaled
6.81, nearly the same as (12.60). the overall covariance penalty term in

(12.46) equaled 0.284, increasingcerr(cid:1) by about 9% over err d 3:15.
the advantage of parametric bootstrap estimates (12.64) of covariance
penalties is their applicability to any prediction rule o(cid:22) d r.y/ no matter
how exotic. applied to the lasso estimates for the supernova data, b d
1000 replications yielded total df d 6:85 for the rule that always used
p d 7 predictors, compared with the theoretical approximation df d 7.
another 1000 replications, now letting o(cid:22)
/ choose the apparently
(cid:3) each time, increased the df estimate to 7.48, so the adaptive choice
best p
of p cost about 0.6 extra degrees of freedom. these calculations exem-
plify modern computer-intensive id136, carrying through error estima-
tion for complicated adaptive prediction rules on a totally automatic basis.
(5) covariance penalties can apply to measures of prediction error other
than squared error d.yi ; o(cid:22)i / d .yi (cid:0) o(cid:22)i /2. we will discuss two examples
of a general theory. first consider classi   cation, where yi equals 0 or 1 and
9 it isn   t necessary for the o(cid:22) in (12.63) to equal o(cid:22) d r.y/. the calculation (12.64) was
rerun taking o(cid:22) in (12.63) from lowess(x,y,1/6) (but with r.y/ still from
lowess(x,y,1/3)) with almost identical results. in general, one might take o(cid:22) in
(12.63) to be from a more    exible, less biased, estimator than r.y/.

(cid:3) d r.y

(cid:3)

12.3 covariance penalties
similarly the predictor o(cid:22)i, with dichotomous error
if yi    o(cid:22)i
if yi d o(cid:22)i ;

d.yi ; o(cid:22)i / d

(

1

0

225

(12.66)

as in (12.5).10 in this situation, the apparent error is the observed proportion
of prediction mistakes in the training set (12.1),
err d #fyi    o(cid:22)ig=n:

(12.67)

now the true prediction error for case i is

erri d pr0fy0i    o(cid:22)ig;

(12.68)
the id155 given o(cid:22)i that an independent replicate y0i of yi
will be incorrectly predicted. the lemma holds as stated in (12.39), leading
to the prediction error estimate

cerr(cid:1) d #fyi    o(cid:22)ig

n

c 2
n

nx

id1

cov. o(cid:22)i ; yi /:

(12.69)

some algebra yields
cov. o(cid:22)i ; yi / d (cid:22)i .1 (cid:0) (cid:22)i / .prf o(cid:22)i d 1jyi d 1g (cid:0) prf o(cid:22)1 d 1jyi d 0g/ ;
(12.70)
with (cid:22)i d prfyi d 1g, showing again the covariance penalty measuring
the self-in   uence of yi on its own prediction.
as a second example, suppose that the observations yi are obtained
from different members of a one-parameter exponential family f(cid:22).y/ d
expf(cid:21)y (cid:0) (cid:13).(cid:21)/gf0.y/ (8.32),
yi (cid:24) f(cid:22)i .yi /
z
  fyi .yi /

  fy.y /
  log(cid:0)fy .y/(cid:1) (cid:0) log(cid:0)f o(cid:22).y/(cid:1)(cid:9) :

according to (8.33), the apparent errorp d.yi ; o(cid:22)i / is then

for i d 1; 2; : : : ; n;
 

d.y; o(cid:22)/ d 2
nx

and that error is measured by the deviance (8.31),

  d 2

err d 2

fy.y / log

f o(cid:22).y /

(12.71)

(12.72)

log

d y:

y

n

id1

f o(cid:22)i .yi /

n

(12.73)

10 more generally, o(cid:25)i is some predictor of prfyi d 1g, and o(cid:22)i is the indicator function

i. o(cid:25)i (cid:21) 0:5/.

226

cross-validation and cp estimates

in this case the general theory gives overall covariance penalty

(cid:16)o

(cid:21)i ; o(cid:22)i

cov

 

nx

id1

penalty d 2

n

;

(12.74)

where o
(cid:21)i is the natural parameter in family (8.32) corresponding to o(cid:22)(cid:21)
(e.g., o
(cid:21)i d log o(cid:22)i for poisson observations). moreover, if o(cid:22) is obtained
as the id113 of (cid:22) in a generalized linear model with p degrees of freedom
(8.22),

penalty :d 2p

n

(12.75)

  log(cid:0)f o(cid:22).y/(cid:1) (cid:0) p(cid:9) c constant;

to a good approximation. the corresponding version of cerr(cid:1) (12.46) can
then be written ascerr(cid:1)
the constant .2=n / log.fy .y// not depending on o(cid:22).
the term in brackets is the akaike information criterion (aic): if the
statistician is comparing possible prediction rules r .j /.y/ for a given data
set y, the aic says to select the rule maximizing the penalized maximum
likelihood

:d (cid:0) 2
n

(12.76)

log(cid:0)f o(cid:22).j / .y/(cid:1) (cid:0) p.j /;

.

(12.77)
where o(cid:22).j / is rule j    s id113 and p.j / its degrees of freedom. comparison
with the smallest value ofcerr.j /(cid:1)
with (12.76) shows that for glms, the aic amounts to selecting the rule
is available then the error estimate cerrcv can be improved by bootstrap
smoothing.11 with the predictor vectors xi considered    xed as observed, a
parametric model generates the data set d d f.xi ; yi /; i d 1; : : : ; ng as
estimatecerrcv (12.21),
in (12.62), from which we calculate the prediction rule rd .(cid:1)/ and the error

cross-validation does not require a id203 model, but if such a model

(cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)

f(cid:22) ! d ! rd .(cid:1)/ !cerrcv:

(12.78)
substituting the estimated density f o(cid:22) for f(cid:22), as in (12.63), provides

11 perhaps better known as    id112;    see chapter 17.

227

(12.79)

12.4 training, validation, and ephemeral predictors

parametric bootstrap replicates ofcerrcv,
(cid:3) .(cid:1)/ !cerr
(cid:3) ! rd
bx
cerr

f o(cid:22) ! d

err d 1

(cid:3)b
cv :

(cid:3)
cv:

some large number b of replications can then be averaged to give the
smoothed estimate

b

bd1

err averages out the considerable noise incerrcv, often signi   cantly reduc-
left after excess randomness is squeezed out ofcerrcv (an example of    rao   

a surprising result, referenced in the endnotes, shows that err approxi-
mates the covariance penalty estimate err(cid:1). speaking broadly, err(cid:1) is what   s

ing its variability.12

(12.80)

blackwellization,    to use classical terminology). improvements can be quite
substantial.    covariance penalty estimates, when believable parametric   4
models are available, should be preferred to cross-validation.

12.4 training, validation, and ephemeral predictors

good practice suggests splitting the full set of observed predictor   response
pairs .x; y/ into a training set d of size n (12.1), and a validation set
dval, of size nval (12.19). the validation set is put into a vault while the
training set is used to develop an effective prediction rule rd .x/. finally,

dval is removed from the vault and used to calculatecerrval (12.20), an honest

estimate of the predictive error rate of rd.

this is a good idea, and seems foolproof, at least if one has enough data
to afford setting aside a substantial portion for a validation set during the
training process. nevertheless, there remains some peril of underestimating
the true error rate, arising from ephemeral predictors, those whose predic-
tive powers fade away over time. a contrived, but not completely fanciful,
example illustrates the danger.

the example takes the form of an imaginary microarray study involving

360 subjects, 180 patients and 180 healthy controls, coded
i d 1; 2; : : : ; 360:

yi d

1 patient
0 control;

(12.81)

(

12 a related tactic pertaining to grouped cross-validation is to repeat calculation (12.21) for

several different randomly selected splits into j groups, and then average the resulting

cerrcv estimates.

228

cross-validation and cp estimates

each subject is assessed on a microarray measuring the genetic activity of
p d 100 genes, these being the predictors

xi d .xi1; xi 2; xi 3; : : : ; xi100/

0

:

(12.82)

one subject per day is assessed, alternating patients and controls.

figure 12.5 orange bars indicate transient episodes, (12.84) and
the reverse, for imaginary medical study (12.81)   (12.82).

xij

ind(cid:24)

the measurements xij are independent of each other and of the yi   s,
for i d 1; 2; : : : ; 360 and j d 1; 2; : : : ; 100:
(12.83)
most of the (cid:22)ij equal zero, but each gene   s measurements can experience
   transient episodes    of two possible types: in type 1,

n .(cid:22)ij ; 1/

(
if yi d 1
(cid:0)2 if yi d 0;

2

(cid:22)ij d

(12.84)

while type 2 reverses signs. the episodes are about 30 days long, randomly
and independently located between days 1 and 360, with an average of two
episodes per gene. the orange bars in figure 12.5 indicate the episodes.
for the purpose of future diagnoses we wish to construct a prediction
rule oy d rd .x/. to this end we randomly divide the 360 subjects into a

subjectsgenes12.4 ephemeral predictors

229
training set d of size n d 300 and a validation set dval of size nval d
60. the popular    machine learning    prediction program id79s,
chapter 17, is applied. id79s forms rd .x/ by averaging the pre-
dictions of a large number of randomly subsampled regression trees (sec-
tion 8.4).

figure 12.6 test error (blue) and cross-validated training error
(black), for id79 prediction rules using the imaginary
medical study (12.81)   (12.82). top panel: training set randomly
selected 300 days, test set the remaining 60 days. bottom panel:
training set the    rst 300 days, test set the last 60 days.

the top panel of figure 12.6 shows the results, with blue points indi-
cating test-set error and black the (cross-validated) training-set error. both
converge to 15% as the number of id79 trees grows large. this
seems to con   rm an 85% success rate for prediction rule rd .x/.

one change has been made for the bottom panel: now the training set
is the data for days 1 through 300, and the test set days 301 through 360.

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll01002003004000.00.10.20.30.40.5training set random 300 days, test set the remainder# treesprediction errorllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll15%llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll01002003004000.00.10.20.30.40.5training days 1   300, test days 301   360# treesprediction errorllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll27%15%cross-validation and cp estimates

230

cerrval is now 27%, nearly double.

the cross-validated training-set prediction error still converges to 15%, but

tion.)

the reason isn   t hard to see. any predictive power must come from the
transient episodes, which lose ef   cacy outside of their limited span. in the
   rst example the test days are located among the training days, and inherit
their predictive accuracy from them. this mostly fails in the second setup,
where the test days are farther removed from the training days. (only the

orange bars crossing the 300-day line can help lower cerrval in this situa-
an obvious, but often ignored, dictum is thatcerrval is more believable if

the test set is further separated from the training set.    further    has a clear
meaning in studies with a time or location factor, but not necessarily in
general. for j -fold cross-validation, separation is improved by removing
contiguous blocks of n=j cases for each group, rather than by random

selection, but the amount of separation is still limited, making cerrcv less
believable than a suitably constructedcerrval.

the distinction between transient, ephemeral predictors and dependable
ones is sometimes phrased as the difference between correlation and cau-
sation. for prediction purposes, if not for scienti   c exegesis, we may be
happy to settle for correlations as long as they are persistent enough for
our purposes. we return to this question in chapter 15 in the discussion of
large-scale hypothesis testing.

  5

a notorious cautionary tale of fading correlations concerns google flu
trends,    a machine-learning algorithm for predicting in   uenza outbreaks.
introduced in 2008, the algorithm, based on counts of internet search terms,
outperformed traditional medical surveys in terms of speed and predictive
accuracy. four years later, however, the algorithm failed, badly overesti-
mating what turned out to be a nonexistent    u epidemic. perhaps one les-
son here is that the google algorithmists needed a validation set years   not
weeks or months   removed from the training data.

error rate estimation is mainly frequentist in nature, but the very large
data sets available from the internet have encouraged a disregard for infer-
ential justi   cation of any type. this can be dangerous. the heterogeneous
nature of    found    data makes statistical principles of analysis more, not
less, relevant.

12.5 notes and details

the evolution of prediction algorithms and their error estimates nicely il-
lustrates the in   uence of electronic computation on statistical theory and

12.5 notes and details

231

practice. the classical recipe for cross-validation recommended splitting
the full data set in two, doing variable selection, model choice, and data    t-
ting on the    rst half, and then testing the resulting procedure on the second
half. interest revived in 1974 with the independent publication of papers
by geisser and by stone, featuring leave-one-out cross-validation of pre-
dictive error rates.

a question of bias versus variance arises here. a rule based on only n=2
cases is less accurate than the actual rule based on all n . leave-one-out
cross-validation minimizes this type of bias, at the expense of increased
variability of error rate estimates for    jumpy    rules of a discontinuous
nature. current best practice is described in section 7.10 of hastie et al.
(2009), where j -fold cross-validation with j perhaps 10 is recommended,
possibly averaged over several random data splits.

nineteen seventy-three was another good year for error estimation, fea-
turing mallows    cp estimator and akaike   s information criterion. efron
(1986) extended cp methods to a general class of situations (see below),
established the connection with aic, and suggested id64 methods
for covariance penalties. the connection between cross-validation and co-
variance penalties was examined in efron (2004), where the rao   blackwell-
type relationship mentioned at the end of section 12.3 was demonstrated.
the sure criterion appeared in charles stein   s 1981 paper. ye (1998)
suggested the general degrees of freedom de   nition (12.53).

  1 [p. 210] standard candles and dark energy. adam riess, saul perlmutter,
and brian schmidt won the 2011 nobel prize in physics for discovering
increasing rates of expansion of the universe, attributed to an einsteinian
concept of dark energy. they measured cosmic distances using type ia
supernovas as    standard candles.    the type of analysis suggested by fig-
ure 12.1 is intended to improve the cosmological distance scale.

  2 [p. 222] data-based choice of a lasso estimate. the id173 param-
eter (cid:21) for a lasso estimator (7.42) controls the number of nonzero coef   -
cients of q
  .(cid:21)/, with larger (cid:21) yielding fewer nonzeros. efron et al. (2004)
cients. substituting this for p in (12.51) provides a quick version of cerr(cid:1).
and zou et al. (2007) showed that a good approximation for the degrees of
freedom df (12.53) of a lasso estimate is the number of its nonzero coef   -
this was minimized at df d 7 for the supernova example in figure 12.1
(12.54).

  3 [p. 222] stein   s unbiased risk estimate. the covariance formula (12.56) is
obtained directly from integration by parts. the computation is clear from

232
the one-dimensional version of (12.55), n d 1:

cross-validation and cp estimates

 
cov. o(cid:22); y/ dz 1
 
z 1
(cid:0)1
(cid:26) @ o(cid:22).y/
d (cid:27) 2
d (cid:27) 2e

1p
2(cid:25)(cid:27) 2
1p
2(cid:25)(cid:27) 2

(cid:27)

(cid:0)1

e

:

@y

(cid:21) o(cid:22).y/ dy
(cid:21) @ o(cid:22).y/

.y (cid:0) (cid:22)/
.y(cid:0)(cid:22)/2

dy

@y

(cid:0) 1

2

.y(cid:0)(cid:22)/2

(cid:27) 2

(cid:0) 1

2

e

(cid:27) 2

(12.85)

broad regularity conditions for sure are given in stein (1981).

  4 [p. 227] the .632 rule. bootstrap competitors to cross-validation are dis-
cussed in efron (1983) and efron and tibshirani (1997). the most success-
ful of these, the    .632 rule    is generally less variable than leave-one-out
(cid:3)b,
cross-validation. we suppose that nonparametric bootstrap data sets d
b d 1; 2; : : : ; b, have been formed, each by sampling with replacement
(cid:3)b produces
n times from the original n members of d (12.1). data set d
rule

(cid:3)b.x/ d rd

(cid:3)b .x/;

(12.86)

giving predictions

r

(cid:3)b

d r

(cid:3)b.xi /:

y

let i b
i

d 1 if pair .xi ; yi / is not in d

(12.87)
(cid:0)1 d
i will equal 1, the remaining 0.632 equaling 0.) the

(cid:3)b, and 0 if it is. (about e

0:368 of the n (cid:1) b i b
   out of bootstrap    estimate of prediction error is

i

cerrout d nx

bx

id1

jd1

i b
i d

 , nx

bx

(cid:16)
yi ; oy

(cid:3)b

i

i b
i ;

id1

jd1

the average discrepancy in the omitted cases.

37% of the cases each time. the .632 rule compensates for the upward bias

cerrout is similar to a grouped cross-validation estimate that omits about
incerrout by incorporating the downwardly biased apparent error (12.18),
cerrout has resurfaced in the popular id79s prediction algorithm,

cerr:632 d 0:632cerrout c 0:368 err :

chapter 17, where a closely related procedure gives the    out of bag    esti-
mate of err.

(12.89)

(12.88)

  5 [p. 230] google flu trends. harford   s 2014 article,    big data: a big mis-
take?,    concerns the enormous    found    data sets available in the internet
age, and the dangers of forgetting the principles of statistical id136 in
their analysis. google flu trends is his primary cautionary example.

13

objective bayes id136 and markov chain

monte carlo

from its very beginnings, bayesian id136 exerted a powerful in   uence
on statistical thinking. the notion of a single coherent methodology em-
ploying only the rules of id203 to go from assumption to conclusion
was and is immensely attractive. for 200 years, however, two impediments
stood between bayesian theory   s philosophical attraction and its practical
application.
1 in the absence of relevant past experience, the choice of a prior distribu-
tion introduces an unwanted subjective element into scienti   c id136.
2 bayes    rule (3.5) looks simple enough, but carrying out the numerical
calculation of a posterior distribution often involves intricate higher-
dimensional integrals.

the two impediments    t neatly into the dichotomy of chapter 1, the    rst
being inferential and the second algorithmic.1

a renewed cycle of bayesian enthusiasm took hold in the 1960s, at    rst
concerned mainly with coherent id136. building on work by bruno de
finetti and l. j. savage, a principled theory of subjective id203 was
constructed: the bayesian statistician, by the careful elicitation of prior
knowledge, utility, and belief, arrives at the correct subjective prior dis-
tribution for the problem at hand. subjective bayesianism is particularly
appropriate for individual decision making, say for the business executive
trying to choose the best investment in the face of uncertain information.

it is less appropriate for scienti   c id136, where the sometimes skep-
tical world of science puts a premium on objectivity. an answer came from
the school of objective bayes id136. following the approach of laplace
and jeffreys, as discussed in section 3.2, their goal was to fashion objec-
tive, or    uninformative,    prior distributions that in some sense were unbi-
ased in their effects upon the data analysis.

1 the exponential family material in this chapter provides technical support, but is not

required in detail for a general understanding of the main ideas.

233

234

objective bayes id136 and mcmc

in what came as a surprise to the bayes community, the objective school
has been the most successful in bringing bayesian ideas to bear on scien-
ti   c data analysis. of the 24 articles in the december 2014 issue of the
annals of applied statistics, 8 employed bayesian analysis, predominantly
based on objective priors.

this is where electronic computation enters the story. commencing in
the 1980s, dramatic steps forward were made in the numerical calculation
of high-dimensional bayes posterior distributions. markov chain monte
carlo (mcmc) is the generic name for modern posterior computation al-
gorithms. these proved particularly well suited for certain forms of objec-
tive bayes prior distributions.

taken together, objective priors and mcmc computations provide an
attractive package for the statistician faced with a complicated data analy-
sis situation. statistical id136 becomes almost automatic, at least com-
pared with the rigors of frequentist analysis. this chapter discusses both
parts of the package, the choice of prior and the subsequent computational
methods. criticisms arise, both from the frequentist viewpoint and that of
informative bayesian analysis, which are brought up here and also in chap-
ter 21.

13.1 objective prior distributions

a    at, or uniform, distribution over the space of possible parameter values
seems like the obvious choice for an uninformative prior distribution, and
has been so ever since laplace   s advocacy in the late eighteenth century.
for a    nite parameter space (cid:127), say

(cid:127) d f(cid:22).1/; (cid:22).2/; : : : ; (cid:22).k/g;

      at    has the obvious meaning

g   at.(cid:22)/ d 1

k

for all (cid:22) 2 (cid:127):

if k is in   nite, or if (cid:127) is continuous, we can still take

g   at.(cid:22)/ d constant:

(13.1)

(13.2)

(13.3)

bayes    rule (3.5) gives the same posterior distribution for any choice of the
constant,

g   at.(cid:22)jx/ d g   at.(cid:22)/f(cid:22).x/=f .x/; with

f(cid:22).x/g   at.(cid:22)/ d(cid:22):

(13.4)

f .x/ dz

(cid:127)

13.1 objective prior distributions

235
notice that g   at.(cid:22)/ cancels out of g   at.(cid:22)jx/. the fact that g   at.(cid:22)/ is    im-
proper,    that is, it integrates to in   nity, doesn   t affect the formal use of
bayes    rule in (13.4) as long as f .x/ is    nite.
notice also that g   at.(cid:22)jx/ amounts to taking the posterior density of
(cid:22) to be proportional to the likelihood function lx.(cid:22)/ d f(cid:22).x/ (with x
   xed and (cid:22) varying over (cid:127)). this brings us close to fisherian id136,
with its emphasis on the direct interpretation of likelihoods, but fisher was
adamant in his insistance that likelihood was not id203.

figure 13.1 the solid curve is    at-prior posterior density (13.4)
having observed x d 10 from poisson model x (cid:24) poi.(cid:22)/; it is
shifted about 0.5 units right from the con   dence density (dashed)
of figure 11.6. jeffreys    prior gives a posterior density (dotted)
nearly the same as the con   dence density.

the solid curve in figure 13.1 shows g   at.(cid:22)jx/ for the poisson situation

of table 11.2,

x (cid:24) poi.(cid:22)/;

(13.5)
with x d 10 observed; g   at.(cid:22)jx/ is shifted almost exactly 0.5 units right
of the con   dence density from figure 11.6. (        is (cid:22) itself in this case.)2
fisher   s withering criticism of    at-prior bayes id136 focused on its

2 the reader may wish to review chapter 11, particularly section 11.6, for these

constructions.

0510152025300.000.020.040.060.080.100.12qdensitiesconfidencedensityposterior density,flat prior10jeffreysobjective bayes id136 and mcmc

236
lack of transformation invariance. if we were interested in   d log.(cid:22)/
rather than (cid:22), g   at. jx/ would not be the transformation to the log scale of
g   at.(cid:22)jx/. jeffreys    prior, (3.17) or (11.72), which does transform correctly,
is

(13.6)
for x (cid:24) poi.(cid:22)/; gjeff.(cid:22)jx d 10/ is then a close match to the con   dence
density in figure 13.1.

(cid:22)

gjeff.(cid:22)/ d 1  p

coverage matching priors

  1

  2

a variety of improvements and variations on jeffreys    prior have been
suggested for use as general-purpose uninformative prior distributions, as
brie   y discussed in the chapter endnotes.    all share the drawback seen in
figure 11.7: the posterior distribution g.(cid:22)jx/ can have unintended effects
on the resulting id136s for a real-valued parameter of interest   d t .(cid:22)/.
this is unavoidable; it is mathematically impossible for any single prior to
be uninformative for every choice of   d t .(cid:22)/.

the label    uninformative    for a prior sometimes means    gives bayes
posterior intervals that closely match con   dence intervals.    perhaps sur-
prisingly, this de   nition has considerable resonance in the bayes commu-
nity. such priors can be constructed for any given scalar parameter of in-
terest   d t .(cid:22)/, for instance the maximum eigenvalue parameter of fig-
ure 11.7. in brief, the construction proceeds as follows.  
(cid:15) the p-dimensional parameter vector (cid:22) is transformed to a form that

makes   the    rst coordinate, say

where (cid:23) is a .p (cid:0) 1/-dimensioned nuisance parameter.
(cid:15) the transformation is chosen so that the fisher information matrix (11.72)
for . ; (cid:23)/ has the    diagonal    form 

(13.7)

(13.8)

(cid:22) ! . ; (cid:23)/;
 

i   
0
0

0

i (cid:23)(cid:23)

:

(this is always possible.)

(cid:15) finally, the prior for . ; (cid:23)/ is taken proportional to

(13.9)
where h.(cid:23)/ is an arbitrary .p (cid:0) 1/-dimensional density. in other words,

i 1=2
    h.(cid:23)/;

g. ; (cid:23)/ d

13.2 conjugate prior distributions

237

g. ; (cid:23)/ combines the one-dimensional jeffreys    prior (3.16) for   with
an arbitrary independent prior for the orthogonal nuisance parameter
vector (cid:23).

the main thing to notice about (13.9) is that g. ; (cid:23)/ represents different
priors on the original parameter vector (cid:22) for different functions   d t .(cid:22)/.
no single prior g.(cid:22)/ can be uninformative for all choices of the parameter
of interest  .

calculating g. ; (cid:23)/ can be dif   cult. one alternative is to go directly to
the bca con   dence density (11.68)   (11.69), which can be interpreted as
the posterior distribution from an uninformative prior (because its integrals
agree closely with con   dence interval endpoints).

coverage matching priors are not much used in practice, and in fact none
of the eight annals of applied statistics objective bayes papers mentioned
earlier were of type (13.9). a form of    almost uninformative    priors, the
conjugates, is more popular, mainly because of the simpler computation of
their posterior distributions.

13.2 conjugate prior distributions

a mathematically convenient class of prior distributions, the conjugate pri-
ors, applies to samples from an exponential family,3 section 5.5,

f(cid:22).x/ d e  x(cid:0) .  /f0.x/:

here we have indexed the family with the expectation parameter

(cid:22) d ef fxg;

rather than the canonical parameter   . on the right-hand side of (13.10),   
can be thought of as a one-to-one function of (cid:22) (the so-called    link func-
tion   ), e.g.,    d log.(cid:22)/ for the poisson family. the observed data is a
random sample x d .x1; x2; : : : ; xn/ from f(cid:22),
iid(cid:24) f(cid:22);

x1; x2; : : : ; xn

(13.12)

having density function

the average nx dp xi =n being suf   cient.

f(cid:22).x/ d en     nx(cid:0) .  /  f0.x/;

(13.13)

3 we will concentrate on one-parameter families, though the theory extends to the

multiparameter case. figure 13.2 relates to a two-parameter situation.

(13.10)

(13.11)

238

objective bayes id136 and mcmc

the family of conjugate priors for (cid:22), gn0;x0 .(cid:22)/, allows the statistician

to choose two parameters, n0 and x0,

gn0;x0 .(cid:22)/ d cen0  x0  (cid:0) .  /    v .(cid:22)/;

v .(cid:22)/ the variance of an x from f(cid:22),

v .(cid:22)/ d varf fxgi

(13.14)

(13.15)

c is the constant that makes gn0;x0 .(cid:22)/ integrate to 1 with respect to lebesgue
measure on the interval of possible (cid:22) values. the interpretation is that x0
represents the average of n0 hypothetical prior observations from f(cid:22).

the utility of conjugate priors is seen in the following theorem.

  3

theorem 13.1    de   ne

nc d n0 c n and

nx:
then the posterior density of (cid:22) given x d .x1; x2; : : : ; xn/ is

nc x0 c n
nc

nxc d n0

g.(cid:22)jx/ d gnc;nxc .(cid:22)/i

moreover, the posterior expectation of (cid:22) given x is
nx:

ef(cid:22)jxg d n0

nc x0 c n
nc

(13.16)

(13.17)

(13.18)

the intuitive interpretation is quite satisfying: we begin with a hypo-
thetical prior sample of size n0, suf   cient statistic x0; observe x, a sam-
ple of size n; and update our prior distribution gn0;x0 .(cid:22)/ to a distribution
gnc;nxc .(cid:22)/ of the same form. moreover, ef(cid:22)jxg equals the average of a
hypothetical sample with n0 copies of x0,

.x0; x0; : : : ; x0; x1; x2; : : : ; xn/:

(13.19)
iid(cid:24) poi.(cid:22)/, that is we have n i.i.d. observa-
tions from a poisson distribution, table 5.1. formula (13.14) gives conju-
gate prior   

as an example, suppose xi

  4

gn0;x0 .(cid:22)/ d c(cid:22)n0x0(cid:0)1e

(cid:0)n0(cid:22);

(13.20)

c not depending on (cid:22). so in the notation of table 5.1, gn0;x0 .(cid:22)/ is a gamma
distribution, gam.n0x0; 1=n0/. the posterior distribution is
g.(cid:22)jx/ d gnc;nxc .(cid:22)/ (cid:24) gam.nc nxc; 1=nc/

(cid:24) 1

nc gnc nxc ;

(13.21)

13.2 conjugate prior distributions

239

  5

where g(cid:23) indicates a standard gamma distribution,  

g(cid:23) d gam.(cid:23); 1/:

(13.22)

table 13.1 conjugate priors (13.14)   (13.16) for four familiar
one-parameter exponential families, using notation in table 5.1; the last
column shows the posterior distribution of (cid:22) given n observations xi,
starting from prior gn0;x0 .(cid:22)/. in line 4, g(cid:23) is the standard gamma
distribution gam.(cid:23); 1/, with (cid:22) the same as gamma parameter (cid:27) in
table 5.1. the chapter endnotes give the density of the inverse gamma
distribution 1=g(cid:23), and corresponding results for chi-squared variates.

name

1. normal

xi distribution
n .(cid:22); (cid:27) 2
1 /
((cid:27) 2
1 known)

2. poisson

poi.(cid:22)/

3. binomial

bi.1; (cid:22)/

4. gamma

(cid:22)g(cid:23) =(cid:23)
((cid:23) known)

g.(cid:22)jx/
n .nxc; (cid:27) 2

gn0;x0 .(cid:22)/

1 =n0/

n .x0; (cid:27) 2

1 =nc/
gam.nc nxc; 1=nc/
gam.n0x0; 1=n0/
be.n0x0; n0.1 (cid:0) x0// be.nc nxc; nc.1 (cid:0) nxc//

n0x0(cid:23)=gn0(cid:23)c1

nc nxc(cid:23)=gnc(cid:23)c1

table 13.1 describes the conjugate prior and posterior distributions for
four familiar one-parameter families. the binomial case, where (cid:22) is the
   success id203    (cid:25) in table 5.1, is particularly evocative: indepen-
i xi d nnx successes. prior
gn0;x0 .(cid:25)/ amounts to assuming proportion x0 d s0=n0 prior successes in
n0    ips. formula (13.18) becomes

dent coin    ips x1; x2; : : : ; xn give, say, s dp
ef(cid:25)jxg d s0 c s
n0 c n

(13.23)
for the posterior expectation of (cid:25). the choice .n0; x0/ d .2; 1=2/ for in-
stance gives bayesian estimate .sc 1/=.nc 2/ for (cid:25), pulling the id113 s=n
a little bit toward 1/2.

the size of n0, the number of hypothetical prior observations, deter-
mines how informative or uninformative the prior gn0;x0 .(cid:22)/ is. recent
objective bayes literature has favored choosing n0 small, n0 d 1 being
popular. the hope here is to employ a proper prior (one that has a    nite
integral), while still not injecting much unwarranted information into the
analysis. the choice of x0 is also by convention. one possibility is to set

objective bayes id136 and mcmc

240
x0 d nx, in which case the posterior expectation ef(cid:22)jxg (13.18) equals
the id113 nx. another possibility is choosing x0 equal to a    null    value, for
instance x0 d 0 for effect size estimation in (3.28).

table 13.2 vasoconstriction data; volume of air inspired in 39 cases, 19
without vasoconstriction (y d 0) and 20 with vasoconstriction (y d 1).

y d 0
98
60
98
74
104
78
104
78
113
78
88
118
120
90
123
95
95
137
98

y d 1
115
85
120
88
126
88
126
90
128
90
93
136
143
104
151
108
154
110
111
157

  6

as a miniature example of objective bayes id136, we consider the
vasoconstriction data  of table 13.2: n d 39 measurements of lung volume
have been obtained, 19 without vasoconstriction .y d 0/ and 20 with .y d
1/. here we will think of the yi as binomial variates,

following id28 model (8.5),

ind(cid:24) bi.1; (cid:25)i /;

yi

i d 1; 2; : : : ; 39;

  (cid:25)i

1 (cid:0) (cid:25)i

  d   0 c   1xi ;

log

(13.24)

(13.25)

with the xi as    xed covariates (the values in table 13.2).
letting xi d .1; xi /
nential family (8.24),

0, (13.24)   (13.25) results in a two-parameter expo-

i
0 o  (cid:0) .  /

  

h
f  .y/ d en
!0
nx

yi ;

xi yi

id1

having
o
   d 1

n

  nx

id1

nx

id1

n

and  .  / d 1

log.1 c e  

0

xi /:

f0.y/;

(13.26)

the id113 o   has approximate 2(cid:2) 2 covariance matrix ov as given in (8.30).

13.2 conjugate prior distributions

241

in figure 13.2, the posterior distributions are graphed in terms of

(cid:13) d ov

(cid:0)1=2.   (cid:0) o  /

(13.27)
rather than    or (cid:22), making the contours of equal density roughly circular
and centered at zero.

figure 13.2 vasoconstriction data; contours of equal posterior
density of (cid:13) (13.27) from four uninformative priors, as described
in the text. numbers indicate id203 content within contours;
light dashed contours from panel a,    at prior.

panel a of figure 13.2 illustrates the    at prior posterior density of (cid:13)
given the data y in model (13.24)   (13.25). the heavy lines are contours
of equal density, with the one labeled    0.9    containing 90% of the pos-
terior id203, etc. panel b shows the corresponding posterior density

a. flat priorg1g2 0.1  0.3  0.5  0.75  0.9  0.975  0.99  0.997  0.999  0.999    4   2024   4   2024lb. jeffreys' priorg1g2 0.1  0.3  0.5  0.75  0.9  0.975  0.99  0.997  0.999    4   2024   4   2024 0.1  0.5  0.9  0.99  0.999  0.999 lc. conjugate priorg1g2 0.1  0.3  0.5  0.75  0.9  0.975  0.99  0.997  0.999    4   2024   4   2024 0.1  0.5  0.9  0.99  0.999  0.999 ld. bootstrap distributiong1g2 0.1  0.3  0.5  0.75  0.9  0.975  0.99  0.997  0.997  0.999    4   2024   4   2024l 0.1  0.5  0.9  0.99  0.999  0.999 242

objective bayes id136 and mcmc

contours obtained from jeffreys    multiparameter prior (11.72), in this case

gjeff.  / d jv  j1=2;

(13.28)
v   the covariance matrix of o  , as calculated from (8.30). for comparison
purposes the light dashed curves show some of the    at prior contours from
panel a. the effect of gjeff.  / is to reduce the    at prior bulge toward the
upper left corner.

panel c relates to the conjugate prior4 g1;0.  /. besides reducing the    at

prior bulge, g1;0.  / pulls the contours slightly downward.
(13.25), with o   replacing   , gave resamples y
the contours of o(cid:13)
toward the left.

panel d shows the parametric bootstrap distribution: model (13.24)   
(cid:3) and id113 replications o  
(cid:3).
(cid:3) (cid:0) o  / considerably accentuate the bulge

(cid:3) d ov

(cid:0)1=2.o  

figure 13.3 posterior densities for (cid:13)1,    rst coordinate of (cid:13) in
(13.27), for the vasoconstriction data. dashed red curve: raw
(unweighted) distribution of b d 8000 parametric replications
from model (13.24)   (13.25); solid black curve: bca density
(11.68) (z0 d 0:123, a d 0:053); dotted blue curve: posterior
density using jeffreys multiparameter prior (11.72).

4 the role of nx in (13.13) is taken by o   in (13.26), so g1;0 has o   d 0, n0 d 1. this
makes g1;0.  / d expf(cid:0) .  /g. the factor v .(cid:22)/ in (13.14) is absent in the conjugate
prior for    (as opposed to (cid:22)).

   4   20240.000.010.020.030.04g1density*********************************************************************************bcaraw bootstrapjeffreys13.3 model selection and the bayesian information criterion 243

this doesn   t necessarily imply that a bootstrap analysis would give much
different answers than the three (quite similar) objective bayes results. for
any particular real-valued parameter of interest  , the raw bootstrap distri-
bution (equal weight on each replication) would be reweighted according to
the bca formula (11.68) in order to produce accurate con   dence intervals.
figure 13.3 compares the raw bootstrap distribution, the bca con   dence
density, and the posterior density obtained from jeffreys    prior, for   equal
to (cid:13)1, the    rst coordinate of (cid:13) in (13.27). the bca density is shifted to the
right of jeffreys   .

critique of objective bayes id136

despite its simplicity, or perhaps because of it, objective bayes procedures
are vulnerable to criticism from both ends of the statistical spectrum. from
the subjectivist point of view, objective bayes is only partially bayesian: it
employs bayes    theorem but without doing the hard work of determining a
convincing prior distribution. this introduces frequentist elements into its
practice   clearly so in the case of jeffreys    prior   along with frequentist
incoherencies.

for the frequentist, objective bayes analysis can seem dangerously un-
tethered from the usual standards of accuracy, having only tenuous large-
sample claims to legitimacy. this is more than a theoretical objection. the
practical advantages claimed for bayesian methods depend crucially on the
   ne structure of the prior. can we safely ignore stopping rules or selective
id136 (e.g., choosing the largest of many estimated parameters for spe-
cial attention) for a prior not based on some form of genuine experience?
in an era of large, complicated, and dif   cult data-analytic problems, ob-
jective bayes methods are answering a felt need for relatively straightfor-
ward paths to solution. granting their usefulness, it is still reasonable to
hope for better justi   cation,5 or at least for more careful comparisons with
competing methods as in figure 13.3.

13.3 model selection and the bayesian information criterion

data-based model selection has become a major theme of modern statisti-
cal id136. in the problem   s simplest form, the statistician observes data
x and wishes to choose between a smaller model m0 and a larger model

5 chapter 20 discusses the frequentist assessment of bayes and objective bayes estimates.

244

objective bayes id136 and mcmc

m1. the classic textbook example takes x d .x1; x2; : : : ; xn/

0 as an inde-

pendent normal sample,
iid(cid:24)

xi

n .(cid:22); 1/

for i d 1; 2; : : : ; n;

(13.29)

(13.30)

with m0 the null hypothesis (cid:22) d 0 and m1 the general two-sided alter-

native,

m0 w (cid:22) d 0; m1 w (cid:22)    0:

(we can include (cid:22) d 0 in m1 with no effect on what follows.) from a
frequentist viewpoint, choosing between m0 and m1 in (13.29)   (13.30)
amounts to running a hypothesis test of h0 w (cid:22) d 0, perhaps augmented
with a con   dence interval for (cid:22).

bayesian model selection aims for more: an evaluation of the posterior
probabilities of m0 and m1 given x. a full bayesian speci   cation re-
quires prior probabilities for the two models,

and (cid:25)1 d 1 (cid:0) (cid:25)0 d prf

m1g;

and conditional prior densities for (cid:22) within each model,
m1/:

and g1.(cid:22)/ d g.(cid:22)j

m0/

density for x, say

f0.x/ dz

f(cid:22).x/g0.(cid:22)/ d(cid:22) and f1.x/ dz

let f(cid:22).x/ be the density of x given (cid:22). each model induces a marginal

f(cid:22).x/g1.(cid:22)/ d(cid:22):

m0

m1

(13.33)

bayes    theorem, in its ratio form (3.8), then gives posterior probabilities

(cid:25)0.x/ d prf

m0jxg

and (cid:25)1.x/ d prf

m1jxg

(cid:25)0 d prf

m0g
g0.(cid:22)/ d g.(cid:22)j

satisfying

(cid:25)1.x/
(cid:25)0.x/

d (cid:25)1
(cid:25)0

b.x/;

where b.x/ is the bayes factor

b.x/ d f1.x/

f0.x/

;

(13.31)

(13.32)

(13.34)

(13.35)

(13.36)

leading to the elegant statement that the posterior odds ratio is the prior
odds ratio times the bayes factor.

all of this is of more theoretical than applied use. prior speci   cations
(13.31)   (13.32) are usually unavailable in practical settings (which is why

13.3 model selection and the bic

245

standard hypothesis testing is so popular). the objective bayes school has
concentrated on estimating the bayes factor b.x/, with the understanding
that the prior odds ratio (cid:25)1=(cid:25)0 in (13.35) would be roughly evaluated de-
pending on the speci   c circumstances   perhaps set to the laplace choice
(cid:25)1=(cid:25)0 d 1.

table 13.3 jeffreys    scale of evidence for the interpretation of bayes
factors.

bayes factor

< 1
1   3
3   20
20   150
> 150

evidence for m1
negative
barely worthwhile
positive
strong
very strong

jeffreys suggested a scale of evidence for interpreting bayes factors, re-

produced in table 13.3;    b.x/ d 10 for instance constitutes positive but   7
not strong evidence in favor of the bigger model. jeffreys    scale is a bayes-
ian version of fisher   s interpretive scale for the outcome of a hypothetic
test, with coverage value (one minus the signi   cance level) 0.95 famously
constituting    signi   cant    evidence against the null hypothesis. table 13.4
shows fisher   s scale, as commonly interpreted in the biomedical and social
sciences.

table 13.4 fisher   s scale of evidence against null hypothesis m0 and in
favor of m1, as a function of coverage level (1 minus the p-value).

coverage

(p-value)

.80
.90
.95
.975
.99
.995
.999

(.20)
(.10)
(.05)
(.025)
(.01)
(.005)
(.001)

evidence for m1
null
borderline
moderate
substantial
strong
very strong
overwhelming

even if we accept the reduction of model selection to assessing the
bayes factor b.x/ in (13.35), and even if we accept jeffreys    scale of in-
terpretation, this still leaves a crucial question: how to compute b.x/ in

  8

246

objective bayes id136 and mcmc

practice, without requiring informative choices of the priors g0 and g1 in
(13.32).

a popular objective bayes answer is provided by the bayesian informa-

tion criterion   (bic). for a given model m we de   ne
log.n/;

bic.m/ d log  f o(cid:22).x/(cid:9) (cid:0) p

(13.37)
where o(cid:22) is the id113, p the degrees of freedom (number of free parameters)
in m, and n the sample size. then the bic approximation to bayes factor
b.x/ (13.36) is

2

log bbic.x/ d bic.m1/ (cid:0) bic.m0/

d log  f o(cid:22)1 .x/=f o(cid:22)0 .x/(cid:9) (cid:0) p1 (cid:0) p0
w .x/ d 2 log  f o(cid:22)1 .x/=f o(cid:22)0 .x/(cid:9) ;

2

the subscripts indexing the id113s and degrees of freedom in m1 and m0.
this can be restated in somewhat more familiar terms. letting w .x/ be
wilks    likelihood ratio statistic,

log.n/;

(13.38)

(13.39)

we have

2

log bbic.x/ d 1

fw .x/ (cid:0) d log.n/g ;
with d d p1 (cid:0) p0: w .x/ approximately follows a (cid:31)2
d distribution under
model m0, e0fw .x/g :d d, implying bbic.x/ will tend to be less than
one, favoring m0 if it is true, ever more strongly as n increases.
we can apply bic selection to the vasoconstriction data of table 13.2,
taking m1 to be model (13.24)   (13.25), and m0 to be the submodel
having   1 d 0. in this case d d 1 in (13.40). direct calculation gives
w d 7:07 and

(13.40)

(13.41)
positive but not strong evidence against m0 according to jeffreys    scale.
by comparison, the usual frequentist z-value for testing   1 d 0 is 2.36,
coverage level 0.982, between substantial and strong evidence against m0
on fisher   s scale.
the bic was named in reference to akaike   s information criterion (aic),

bbic d 5:49;

aic.m/ d log  f o(cid:22).x/(cid:9) (cid:0) p;

(13.42)

which suggests, as in (12.73), basing model selection on the sign of

aic.m1/ (cid:0) aic.m0/ d 1

2

fw .x/ (cid:0) 2dg :

(13.43)

13.3 model selection and the bic

247

log b.x/ d 1

the bic penalty d log.n/ in (13.40) grows more severe than the aic
penalty 2d as n gets larger, increasingly favoring selection of m0 rather
than m1. the distinction is rooted in bayesian notions of coherent behav-
ior, as discussed in what follows.
where does the bic penalty term d log.n/ in (13.40) come from? a    rst
answer uses the simple normal model xi (cid:24)
n .(cid:22); 1/, (13.29)   (13.30). m0
has prior g0.(cid:22)/ d g.(cid:22)j
m0/ equal a delta function at zero. suppose we
take g1.(cid:22)/ d g.(cid:22)j
g1.(cid:22)/ (cid:24)

m1/ in (13.32) to be the gaussian conjugate prior

(13.44)
the discussion following (13.23) in section 13.2 suggests setting m d 0
and a d 1, corresponding to prior information equivalent to one of the n
actual observations. in this case we can calculate the actual bayes factor
b.x/,

n .m; a/:

(cid:26) n

(cid:27)
w .x/ (cid:0) log.n c 1/

n c 1

(13.45)
nearly equaling log bbic.x/ (d d 1), for large n. justi   cations of the bic
formula as an approximate bayes factor follow generalizations of this kind
of argument, as discussed in the chapter endnotes.

2

;

z p(cid:24)

n .0; 1/ under m0:

the difference between bic and frequentist hypothesis testing grows
more drastic for large n. suppose m0 is a regression model and m1 is m0
augmented with one additional covariate (so d d 1). let z be a standard
z-value for testing the hypothesis that m1 is no improvement over m0,
(13.46)
table 13.5 shows bbic.x/ as a function of z and n. at n d 15 fisher   s
and jeffreys    scales give roughly similar assessments of the evidence against
m0 (though jeffreys    nomenclature is more conservative). at the other end
of the table, at n d 10; 000, the id136s are contradictory: z d 3:29,
with p-value 0.001 and coverage level 0.999, is overwhelming evidence
for m1 on fisher   s scale, but barely worthwhile for jeffreys   . bayesian
coherency, the axiom that id136s should be consistent over related sit-
uations, lies behind the contradiction.
suppose n d 1 in the simple normal model (13.29)   (13.30). that is, we

observe only the single variable

and wish to decide between m0 w (cid:22) d 0 and m1 w (cid:22)    0. let g.1/
denote our m1 prior density (13.32) for this situation.

1 .(cid:22)/

(13.47)

x (cid:24)

n .(cid:22); 1/;

248

objective bayes id136 and mcmc

table 13.5 bic bayes factors corresponding to z-values for testing one
additional covariate; coverage value (1 minus the signi   cance level) of a
two-sided hypothesis test as interpreted by fisher   s scale of evidence,
right. jeffreys    scale of evidence, table 13.3, is in rough agreement with
fisher for n d 15, but favors the null much more strongly for larger
sample sizes.

n

cover z-value

15

50

250 1000 2500 5000 10000 fisher

.80
.90
.95
.975
.99
.995
.999

1.28
1.64
1.96
2.24
2.58
2.81
3.29

.32
.55
.97
1.74
3.90
7.27

.14
.59
.24
1.00
.43
1.76
.78
3.18
1.74
7.12
13.27
3.25
57.96 31.75 14.20

.07
.12
.22
.39
.87
1.63
7.10

.05
.08
.14
.25
.55
1.03
4.49

.03
.05
.10
.17
.39
.73
3.17

.02 null
.04 borderline
.07 moderate
.12 substantial
.28 strong
.51 very strong
2.24 overwhelming

(cid:16)

n(cid:22) gives
x.n/ (cid:24)

n

 

n.p xi =n/ and (cid:22).n/ d p

p

the case n > 1 in (13.29) is logically identical to (13.47). letting x.n/ d

(cid:22).n/; 1

;

(13.48)

(cid:0)(cid:22)  p

n(cid:1)  p

with (13.30) becoming m0 w (cid:22).n/ d 0 and m1 w (cid:22).n/    0. coherency
p
requires that (cid:22).n/ in (13.48) have the same m1 prior as (cid:22) in (13.47). since
(cid:22) d (cid:22).n/=
1 .(cid:22)/, the m1 prior for sample size n,
satis   es
(13.49)

n, this implies that g.n/
1 .(cid:22)/ d g.1/
g.n/
1
this being    sample size coherency.   
1 .(cid:22)/ farther
away from the null value (cid:22) d 0 at rate
0 .(cid:22)/
stays    xed. for any    xed value of the suf   cient statistic x.n/ (x.n/ being
p
   z    in table 13.5), this results in the bayes factor b.x.n// decreasing at
rate 1=
n; the frequentist/bayesian contradiction seen in table 13.5 goes
beyond the speci   cs of the bic algorithm.

the effect of (13.49) is to spread the m1 prior density g.n/

p
n, while the m0 prior g.n/

n;

(cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)
a general information criterion takes the form

gic.m/ d log f o(cid:22).x/ (cid:0) p cn;

(13.50)

13.3 model selection and the bic

249
where cn is any sequence of positive numbers; cn d log.n/=2 for bic
(13.37) and cn d 1 for aic (13.42). the difference

     gic.m1/ (cid:0) gic.m0/ d 1

(13.51)
d d p1(cid:0)p0, will be positive if w .x/ > 2cnd. for d d 1, as in table 13.5,
   will favor m1 if w .x/ (cid:21) 2cn, with approximate id203, if m0 is

.w .x/ (cid:0) 2cnd / ;

2

actually true,

(13.52)
this equals 0.157 for the aic choice cn d 1; for bic, n d 10; 000, it
equals 0.0024. the choice

1

prf(cid:31)2

(cid:21) 2cng:

cn d 1:92

(13.53)

m0g :d 0:05, agreeing with the usual frequentist 0.05
makes prf   > 0j
rejection level.
the bic is consistent: prf   > 0g goes to zero as n ! 1 if m0 is true.
this isn   t true of (13.53) for instance, where we will have prf   > 0g :d
0:05 no matter how large n may be, but consistency is seldom compelling
as a practical argument.
con   dence intervals help compensate for possible frequentist over   t-
ting. with z d 3:29 and n d 10; 000, the 95% con   dence interval for (cid:22)
in model m1 (13.30) is .0:013; 0:053/. whether or not such a small effect
is interesting depends on the scienti   c context. the fact that bic says    not
interesting    speaks to its inherent small-model bias.
the prostate cancer study data of section 3.3 provides a more challeng-
ing model selection problem. figure 3.4 shows the histogram of n d 6033
observations xi, each measuring the effects of one gene. the histogram has
49 bins, each of width 0.2, with centers cj ranging from (cid:0)4:4 to 5.2; yj ,
the height of the histogram at cj , is the number of xi in bin j ,

yj d #fxi 2 bin jg

for j d 1; 2; : : : ; 49:

(13.54)

we assume that the yj follow a poisson regression model as in sec-

tion 8.3,

ind(cid:24) poi.(cid:23)j /;

yj

j d 1; 2; : : : ; 49;

(13.55)

and wish to    t a log polynomial glm model to the (cid:23)j . the model selection
question is    what degree polynomial?    degree 2 corresponds to normal
densities, but the long tails seen in figure 3.4 suggest otherwise.
models of degree 2 through 8 are assessed in figure 13.4. four model
selection measures are compared: aic (13.42); bic (13.37) with n d 49,

250

objective bayes id136 and mcmc

figure 13.4 log polynomial models of degree 2 through 8
applied to the prostate study histogram of figure 3.4. model
selection criteria: aic (13.42); bic (13.37) with n d 49, number
of bins, or 6033, number of genes; gic (13.50) using classic
fisher hypothesis choice cn d 1:92. all four selected the
fourth-degree model as best.

the number of yj values (bins), and also n d 6033, the number of genes;
and gic (13.50), with cn d 1:92 (13.53), the choice based on classic fish-
erian hypothesis testing. (this is almost the same as bic n d 49, since
log.49/=2 d 1:95.) a fourth-degree polynomial model was the winner
under all four criteria.

the    untethered    criticism made against objective bayes methods in
general is particularly applicable to bic. the concept of    sample size   
is not well de   ned, as the prostate study example shows. sample size co-
herency (13.49), the rationale for bic   s strong bias toward smaller models,
is less convincing in the absence of priors based on genuine experience (es-
pecially if there is no prospect of the sample size changing). whatever its
vulnerabilities, bic model selection has nevertheless become a mainstay
of objective bayes model selection, not least because of its freedom from
the choice of bayesian priors.

2345678   120   100   80   60   40model polynomial degreeaic and bicbic 6033bic 49 and gicaic13.4 id150 and mcmc

251

13.4 id150 and mcmc

miraculously blessed with visions of the future, a bayesian statistician of
the 1970s would certainly be pleased with the prevalence of bayes method-
ology in twenty-   rst-century applications. but his pleasure might be tinged
with surprise that the applications were mostly of the objective,    uninfor-
mative    type, rather than taken from the elegant de finetti   savage school
of subjective id136.

the increase in bayesian applications, and the change in emphasis from
subjective to objective, had more to do with computation than philoso-
phy. better computers and algorithms facilitated the calculation of formerly
intractable bayes posterior distributions. technology determines practice,
and the powerful new algorithms encouraged bayesian analyses of large
and complicated models where subjective priors (or those based on actual
past experience) were hard to come by. add in the fact that the algorithms
worked most easily with simple    convenience    priors like the conjugates
of section 13.2, and the stage was set for an objective bayes renaissance.
at    rst glance it   s hard to see why bayesian computations should be
daunting. from parameter vector  , data x, density function f  .x/, and
prior density g. /, bayes    rule (3.5)   (3.6) directly produces the posterior
density

g. jx/ d g. /f  .x/=f .x/;

where f .x/ is the marginal density

f .x/ dz

the posterior id203 of any set a in the parameter space (cid:127) is then

pfajxg dz

g. /f  .x/ d  :

(cid:127)

(cid:30)z

g. /f  .x/ d  

g. /f  .x/ d  :

a

(cid:127)

this is easy to write down but usually dif   cult to evaluate if   is multidi-
mensional.
modern bayes methods attack the problem through the application of
computer power. even if we can   t integrate g. jx/, perhaps we can sample
from it. if so, a suf   ciently large sample, say

would provide estimates

  .1/;   .2/; : : : ;   .b/ (cid:24) g. jx/
n
o.
  .j / 2 a

opfajxg d #

b;

(13.56)

(13.57)

(13.58)

(13.59)

(13.60)

252

objective bayes id136 and mcmc

and similarly for posterior moments, correlations, etc. we would in this
way be employing the same general tactic as the bootstrap, applied now
for bayesian rather than frequentist purposes   toward the same goal as the
bootstrap, of freeing practical applications from the constraints of mathe-
matical tractability.

the two most popular computational methods,6 id150 and
id115 (mcmc), are based on markov chain algo-
rithms; that is, the posterior samples   .b/ are produced in sequence, each
one depending only on   .b(cid:0)1/ and not on its more distant predecessors. we
begin with id150.
the central idea of id150 is to reduce the generation of mul-
tidimensional vectors   d . 1;  2; : : : ;  k/ to a series of univariate calcu-
lations. let  .k/ denote   with component k removed, and g.k/ the condi-
tional density of  k given  .k/ and the data x,

 kj .k/; x (cid:24) g.k/

 kj .k/; x

(13.61)

(cid:16)

 

:

      .b(cid:0)1/

 

the algorithm begins at some arbitrary initial value   .0/. having computed
  .1/,   .2/, : : : ,   .b(cid:0)1/, the components of   .b/ are generated according to
conditional distributions (13.61),

(cid:24) g.k/

for k d 1; 2; : : : ; k:

.k/

 k

; x

  .b/
k

(13.62)
as an example, we take x to be the n d 20 observations for y d 1 in
the vasoconstriction data of table 13.2, and assume that these are a normal
sample,

xi

(13.63)
the suf   cient statistics for estimating the bivariate parameter   d .(cid:22); (cid:28) /
are the sample mean and variance

n .(cid:22); (cid:28) /;

i d 1; 2; : : : ; n d 20:

(cid:16)

iid(cid:24)

nx d nx

xi =n and t d nx

1

1

.xi (cid:0) nx/2=.n (cid:0) 1/;

having independent normal and gamma distributions,

nx (cid:24)

n .(cid:22); (cid:28)=n/

and t (cid:24) (cid:28) g(cid:23)=(cid:23);

with (cid:23) d n(cid:0)1

2 , the latter being gam.(cid:23); (cid:28)=(cid:23)/ in the notation of table 5.1.
6 the two methods are often referred to collectively as mcmc because of mathematical

connections, with    metropolis-hasting algorithm    referring to the second type of
procedure.

(13.64)

(13.65)

13.4 id150 and mcmc

253

(cid:28) (cid:24) k1(cid:28)1=gk1c1

for our bayes prior distribution we take the conjugates
n .(cid:22)0; (cid:28)=n0/:

(13.66)
1 / d
in terms of table 13.1, .x0; n0(cid:23)/ d .(cid:28)1; k1/ for the gamma, while .x0; (cid:27) 2
.(cid:22)0; (cid:28) / for the normal. (a simple speci   cation would take (cid:22) (cid:24)
n .(cid:22)0; (cid:28)1=n0/.)
multiplying the normal and gamma functional forms in table 5.1 yields

and (cid:22)j(cid:28) (cid:24)

density function

f(cid:22);(cid:28) .nx; t / d c(cid:28)

(cid:0).(cid:23)c 1

2 / exp

and prior density
g.(cid:22); (cid:28) / d c(cid:28)

(cid:0).k1c2:5/ exp

h
(cid:23)t c n

(cid:26)(cid:0) 1
(cid:26)(cid:0) 1
h
k1(cid:28)1 c n0

.nx (cid:0) (cid:22)/2i(cid:27)
.(cid:22) (cid:0) (cid:22)0/2i(cid:27)

2

(cid:28)

(cid:28)

2

(13.67)

;

(13.68)

c indicating positive constants that do not affect the posterior computations.
the posterior density cg.(cid:22); (cid:28) /f(cid:22);(cid:28) .nx; t / is then calculated to be

g.(cid:22); (cid:28)jnx; t / d c(cid:28)
where q d .k1(cid:28)1 c t / c nc

(cid:0).(cid:23)ck1c3/ expf(cid:0)q=(cid:28)g;
.(cid:22) (cid:0) n(cid:22)c/2 c n0n

2

2nc .(cid:22)0 (cid:0) nx/2:

(13.69)

  n(cid:22)c;

 

here nc d n0 c n and n(cid:22)c d .n0(cid:22)0 c nnx/=nc.
in order to make use of id150 we need to know the full con-
ditional distributions g.(cid:22)j(cid:28); nx; t / and g.(cid:28)j(cid:22); nx; t /, as in (13.62). (in this
case, k d 2,  1 d (cid:22), and  2 d (cid:28).) this is where the conjugate expressions
in table 13.1 come into play. inspection of density (13.69) shows that

n

(cid:28)
nc

and (cid:28)j(cid:22); nx; t (cid:24) q

(cid:22)j(cid:28); nx; t (cid:24)
(13.70)
b d 10; 000 gibbs samples   .b/ d .(cid:22).b/; (cid:28) .b// were generated starting
from   .0/ d .nx; t / d .116; 554/. the prior speci   cations were chosen to
be (presumably) uninformative or mildly informative,

g(cid:23)ck1c2

:

n0 d 1; (cid:22)0 d nx;

k1 d 1 or 9:5;

and (cid:28)1 d t:

(13.71)
(in which case n(cid:22)c d nx and q d .(cid:23) c k1/t c nc.(cid:22) (cid:0) nx/2. from
(cid:23) d .n (cid:0) 1/=2, we see that k1 corresponds to about 2k1 hypothetical prior
observations.) the resulting posterior distributions for (cid:28) are shown by the
histograms in figure 13.5.
as a point of frequentist comparison, b d 10; 000 parametric bootstrap

replications (which involve no prior assumptions),
o(cid:28) d t;

(cid:3) (cid:24) o(cid:28) g(cid:23)=(cid:23);

o(cid:28)

(13.72)

254

objective bayes id136 and mcmc

figure 13.5 posterior distributions for variance parameter (cid:28),
model (13.63)   (13.65), volume of air inspired for
vasoconstriction group y d 1 from table 13.2. solid teal
histogram: b d 10; 000 gibbs samples with k1 d 1; black line
histogram: b d 10; 000 samples with k1 d 9:5; red line
histogram: 10,000 parametric bootstrap samples (13.72) suggests
even the k1 d 1 prior has substantial posterior effect.

are seen to be noticeably more dispersed than even the k1 d 1 bayes
posterior distribution, the likely choice for an objective bayes analysis.
bayes techniques, even objective ones, have id173 effects that may
or may not be appropriate.
a similar, independent gibbs sample of size 10,000 was obtained for the
19 y d 0 vasoconstriction measurements in table 13.2, with speci   cations
as in (13.71), k d 1. let

(cid:16)

  .b/ d (cid:22).b/
(cid:28) .b/
1

1

 1=2
(cid:0) (cid:22).b/
c (cid:28) .b/

0

0

;

(13.73)

where .(cid:22).b/
y d 1 and y d 0 runs.

1 ; (cid:28) .b/

1 / and .(cid:22).b/

0 ; (cid:28) .b/

0 / denote the bth gibbs samples from the

figure 13.6 shows the posterior distribution of   . twenty-eight of the

 tfrequency200400600800100012000200400600800100012001400tk1=1k1=9.5parametricbootstrap13.4 id150 and mcmc

255

figure 13.6 b d10,000 gibbs samples for    bayes t-statistic   
(13.73) comparing y d 1 with y d 0 values for vasoconstriction
data.

b d10,000 values   .b/ were less than 0, giving a    bayesian t-test    estimate
(13.74)

pf   < 0jnx1; nx0; t1; t0g d 0:0028:

(the usual t-test yielded one-sided p-value 0.0047 against the null hy-
pothesis (cid:22)0 d (cid:22)1.) an appealing feature of id150 is that having
obtained   .1/;   .2/; : : : ;   .b/ (13.59) the posterior distribution of any pa-
rameter (cid:13) d t . / is obtained directly from the b values (cid:13) .b/ d t .  .b//.
id150 requires the ability to sample from the full conditional
distributions (13.61). a more general id115 method,
commonly referred to as mcmc, makes clearer the basic idea. suppose the
space of possible   values is    nite, say f .1/;  .2/; : : : ,  .m /g, and we
wish to simulate samples from a posterior distribution putting id203
p.i / on  .i /,

p d .p.1/; p.2/; : : : ; p.m // :

(13.75)

the mcmc algorithm begins with the choice of a    candidate    proba-
bility distribution q.i; j / for moving from  .i / to  .j /; in theory q.i; j /
can be almost anything, for instance q.i; j / d 1=.m (cid:0) 1/ for j    i. the
simulated samples   .b/ are obtained by a random walk: if   .b/ equals  .i /,

 dfrequency0.00.51.01.50100200300400500600pr(d<0)=0.0028objective bayes id136 and mcmc

256
then   .bc1/ equals  .j / with id2037
q.i; j / d q.i; j / (cid:1) min

(cid:26) p.j /q.j; i /

p.i /q.i; j /

(cid:27)

; 1

for j    i, while with id203

q.i; i / d 1 (cid:0)x

j  i

q.i; j /

(13.77)

  .bc1/ d   .b/ d  .i /. markov chain theory then says that, under quite
general conditions, the empirical distribution of the random walk values
  .b/ will approach the desired distribution p as b gets large.
a heuristic argument for why this happens begins by supposing that   .1/
was in fact generated by sampling from the target distribution p, prf  .1/ d
ig d p.i /, and then   .2/ was obtained according to transition probabilities
(13.76)   (13.77). a little algebra shows that (13.76) implies

the so-called balance equations. this results in

n

  .2/ d i

pr

p.i /q.i; j / d p.j /q.j; i /;

o d p.i /q.i; i / cx

p.j /q.j; i /

j  i

d p.i /

q.i; j / d p.i /:

mx

jd1

(13.76)

(13.78)

(13.79)

in other words, if   .1/ has distribution p then so will   .2/, and like-
wise   .3/;   .4/; : : : ; p is the equilibrium distribution of the markov chain
random walk de   ned by transition probabilities q. under reasonable con-
ditions,      .b/ must asymptotically attain distribution p no matter how   .1/
is initially selected.

  9

13.5 example: modeling population admixture

mcmc has had a big impact in statistical genetics, where bayesian mod-
eling is popular and useful for representing the complex evolutionary pro-
cesses. here we illustrate its use in demography and modeling admixture   
estimating the contributions from ancestral populations in an individual
7 in bayes applications, p.i / d g. .i /jx/ d g. .i //f .i /.x/=f .x/ (13.56).
however, f .x/ is not needed since it cancels out of (13.76), a considerable advantage
in complicated situations when f .x/ is often unavailable, and a prime reason for the
popularity of mcmc.

13.5 example: modeling population admixture

257

genome. for example, we might consider human ancestry, and for each
individual wish to estimate the proportion of their genome coming from
european, african, and asian origins. the procedure we describe
here is unsupervised   a type of soft id91   but we will see it can be
very informative with regard to such questions. we have a sample of n in-
dividuals, and we assume each arose from possible admixture among j
parent populations, each with their own characteristic vector of allele fre-
quencies. for us j d 3, and let qi 2
s3 denote a id203 vector for in-
dividual i representing the proportions of their heritage coming from pop-
ulations j 2 f1; 2; 3g (see section 5.4). we have genomic measurements
for each individual, in our case snps (single-nucleotide polymorphisms)
at each of m well-spaced loci, and hence can assume they are in linkage
equilibrium. at each snp we have a measurement that identi   es the two
alleles (one per chromosome), where each can be either the wild-type a or
the mutation a. that is, we have the genotype gi m at snp m for individual
i: a three-level factor with levels faa; aa; aag which we code as 0; 1; 2.
table 13.6 shows some examples.

table 13.6 a subset of the genotype data on 197 individuals, each with
genotype measurements at 100 snps. in this case the ethnicity is
known for each individual, one of japanese, african, european,
or african american. for example, individual na12239 has
genotype aa for snp1, na19247 has aa, and na20126 has aa.

subject

snp1

snp2

snp3

na10852
na12239
na19072
na19247
na20126
na18868
na19257
na19079
na19067
na19904

1
1
0
0
2
0
0
0
0
0

1
1
0
0
0
0
0
1
0
0

0
0
0
2
0
1
0
0
0
1

(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)
(cid:1)(cid:1)(cid:1)

snp97

snp98

snp99

snp100

1
1
0
0
2
0
0
0
0
0

1
1
0
0
0
0
0
1
0
0

0
0
0
0
0
0
0
0
0
0

0
0
0
2
0
1
0
0
0
1

let pj be the (unknown) m -vector of minor allele frequencies (propor-
tions actually) in population j . we have available a sample of n individ-
uals, and for each sample we have their genomic information measured at
each of the m loci. some of the individuals might appear to have pure an-
cestral origins, but many do not. our goal is to estimate qi ; i d 1; : : : ; n;
and pj ; j 2 f1; 2; 3g.

258

objective bayes id136 and mcmc

i m

i m ; x .2/

d 0 and x .2/

for this purpose it is useful to pose a generative model. we    rst create a
pair of variables xi m d .x .1/
i m / corresponding to each gi m, to which
we allocate the two alleles (in arbitrary order). for example, if gi m d 1
d 1 (or
(corresponding to aa), then we might set x .1/
vice versa). if gi m d 0 they are both 0, and if gi m d 2, they are both 1.
i m
let zi m 2 f1; 2; 3g2 represent the ancestral origin for individual i of each
of these allele copies xi m at locus m, again a two-vector with elements
zi m d .z.1/

i m /. then our generative model goes as follows.

i m ; z.2/
(cid:24) mult.1; qi /, independently at each m, for each copy c d 1; 2.
that is, we select the ancestral origin of each chromosome at locus m
according to the individual   s mixture proportions qi.
d j , for each copy c d 1; 2. what this
means is that, for each of the two ancestral picks at locus m (one for
each arm of the chromosome), we draw a binomial with the appropriate
allele frequency.

(cid:24) bi.1; pj m/ if z.c/

2 x .c/
i m

1 z.c/
i m

i m

to complete the bayesian speci   cation, we need to supply priors for the
qi and also for pj m. although one can get fancy here, we resort to the
recommended    at priors, which are
(cid:15) qi (cid:24) d.(cid:21); (cid:21); (cid:21)/, a    at three-component dirichlet, independently for
each subject i    and
  10 (cid:15) pj m (cid:24) d.(cid:13); (cid:13) / independently for each population j , and each locus m

(the beta distribution; see   10 in the end notes).

we use the least-informative values (cid:21) d (cid:13) d 1. in practice, these could
get updated as well, but for the purposes of this demonstration we leave
them    xed at these values.
let x be the n (cid:2) m (cid:2) 2 array of observed alleles for all n samples.
we wish to estimate the posterior distribution pr.p; qjx /, referring col-
lectively to all the elements of p and q.

for this purpose we use id150, which amounts to the following

sequence.

0 initialize z.0/; p .0/; q.0/.
1 sample z.b/ from the conditional distribution pr.zjx ; p .b(cid:0)1/; q.b(cid:0)1//.
2 sample p .b/; q.b/ from the conditional distribution pr.p; qjx ; z.b//.
gibbs is effective when one can sample ef   ciently from these conditional
distributions, which is the case here.

13.5 example: modeling population admixture

259

in step 2, we can sample p and q separately. it can be seen that for each

.j; m/ we should sample pj m from

pj mjx ; z (cid:24) d.(cid:21) c n.0/

j m; (cid:21) c n.1/
j m/;

where z d z.b/ and

n.0/
j m
n.1/
j m

d #f.i; c/ w x .c/
d #f.i; c/ w x .c/

i m

i m

d 0 and z.c/
d 1 and z.c/

i m

i m

d jg;
d jg:

(13.80)

(13.81)

this follows from the conjugacy of the two-component dirichlet (beta)
with the binomial distribution, table 13.1.
updating qi involves simulating from

qijx ; z (cid:24) d.(cid:13) c mi1; (cid:13) c mi 2; (cid:13) c mi 3/;

(13.82)

where mij is the number of allele copies in individual i that originated
(according to z d z.b/) in population j :

mij d #f.c; m/ w z.c/

i m

d jg:

(13.83)

figure 13.7 barycentric coordinate plot for the estimated
posterior means of the qi based on mcmc sampling.

step 1 can be performed by simulating z.c/

i m independently, for each i; m;

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllleuropeanjapaneseafricanafrican american260

objective bayes id136 and mcmc

and c from

pr.z.c/
i m

d jjx ; p; q/ d qij pr.x .c/

i m

jp; z.c/

d j /

i m

jp; z.c/

i m

d `/

`d1 qi ` pr.x .c/

i m

p3

:

(13.84)

the probabilities on the right refer back to our generative distribution de-
scribed earlier.

figure 13.7 shows a triangle plot that summarizes the result of running
the mcmc algorithm on our 197 subjects. we used a burn in of 1000
complete iterations, and then a further 2000 to estimate the distribution
of the parameters of interest, in this case the qi. each dot in the    gure
represents a three-component id203 vector, and is the posterior mean
of the sampled qi for each subject. the points are colored according to
the known ethnicity. although this algorithm is unsupervised, we see that
the ethnic groups cluster nicely in the corners of the simplex, and allow
us to identify these clusters. the african american group is spread
between the african and european clusters (with a little movement
toward the japanese).

(cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)

markov chain methods are versatile tools that have proved their value in

requiring some individual ingenuity with each application.

bayesian applications. there are some drawbacks.
(cid:15) the algorithms are not universal in the sense of maximum likelihood,
(cid:15) as a result, applications, especially of id150, have favored
a small set of convenient priors, mainly jeffreys and conjugates, that
simplify the calculations. this can cast doubt on the relevance of the
ing the convergence of estimates such as n  dp   .b/=b slow.
resulting bayes id136s.
(cid:15) successive realizations   .b/ are highly correlated with each other, mak-
(cid:15) the correlation makes it dif   cult to assign a standard error to n . actual
applications ignore an initial b0 of the   .b/ values (as a    burn-in    period)
and go on to large enough b such that estimates like n  appear to settle
down. however, neither the choice of b0 nor that of b may be clear.

objective bayes offers a paradigm of our book   s theme, the effect of
electronic computation on statistical id136: ingenious new algorithms
facilitated bayesian applications over a wide class of applied problems and,
in doing so, in   uenced the dominant philosophy of the whole area.

13.6 notes and details

13.6 notes and details

261

the books by savage (1954) and de finetti (1972), summarizing his ear-
lier work, served as foundational texts for the subjective bayesian school
of id136. highly in   uential, they championed a framework for bayes-
ian applications based on coherent behavior and the careful elucidation of
personal probabilities. a current leading text on bayesian methods, carlin
and louis (2000), does not reference either savage or de finetti. now jef-
freys (1961), again following earlier works, claims foundational status. the
change of direction has not gone without protest from the subjectivists   
see adrian smith   s discussion of o   hagan (1995)   but is nonetheless al-
most a complete rout.

metropolis et al. (1953), as part of nuclear weapons research, devel-
oped the    rst mcmc algorithm. a vigorous line of work on markov chain
methods for solving dif   cult id203 problems has continued to    our-
ish under such names as particle    ltering and sequential monte carlo; see
gerber and chopin (2015) and its enthusiastic discussion.

modeling population admixture (pritchard et al., 2000) is one of sev-
eral applications of hierarchical bayesian models and mcmc in genetics.
other applications include haplotype estimation and motif    nding, as well
as estimation of phylogenetic trees. the examples in this section were de-
veloped with the kind help of hua tang and david golan, both from the
stanford genetics department. hua suggested the example and provided
helpful guidance; david provided the data, and ran the mcmc algorithm
using the structure program in the pritchard lab.

  1 [p. 236] uninformative priors. a large catalog of possible uninformative
priors has been proposed, thoroughly surveyed by kass and wasserman
(1996). one approach is to use the likelihood from a small part of the data,
say just one or two data points out of n, as the prior, as with the    intrin-
sic priors    of berger and pericchi (1996), or o   hagan   s (1995)    fractional
bayes factors.    another approach is to minimize some mathematical mea-
sure of prior information, as with bernardo   s (1979)    reference priors    or
jaynes    (1968)    maximum id178    criterion. kass and wasserman list a
dozen more possibilities.

  2 [p. 236] coverage matching priors. welch and peers (1963) showed that,
for a multiparameter family f(cid:22).x/ and real-valued parameter of interest
  d t .(cid:22)/, there exist priors g.(cid:22)/ such that the bayes credible interval of
coverage    has frequentist coverage   co.1=n/, with n the sample size. in
other words, the credible intervals are    second-order accurate    con   dence
intervals. tibshirani (1989), building on stein   s (1985) work, produced the

262

objective bayes id136 and mcmc

nice formulation (13.9). stein   s paper developed the least-favorable fam-
ily, the one-parameter subfamily of f(cid:22).x/ that does not inappropriately in-
crease the amount of fisher information for estimating  . cox and reid   s
(1987) orthogonal parameters form (13.8) is formally equivalent to the
least favorable family construction.

least favorable family versions of reference priors and intrinsic priors
have been proposed to avoid the dif   culty with general-purpose uninfor-
mative priors seen in figure 11.7. they do so, but at the price of requiring
a different prior for each choice of   d t .(cid:22)/   which begins to sound more
frequentistic than bayesian.

  3 [p. 238] conjugate families theorem. theorem 13.1, (13.16)   (13.18), is
rigorously derived in diaconis and ylvisaker (1979). families other than
(13.14) have conjugate-like properties, but not the neat posterior expecta-
tion result (13.18).
using    d log.(cid:22)/,  .  / d (cid:22), and v .(cid:22)/ d (cid:22) for the poisson.
has density (cid:22)(cid:23)(cid:0)1e
(cid:0).(cid:23)c1/ e

  5 [p. 239] inverse gamma and chi-square distributions. a g(cid:23) variate (13.22)
(cid:0)(cid:22) =   .(cid:23)/. an inverse gamma variate 1=g(cid:23) has density

  4 [p. 238] poisson formula (13.20). this follows immediately from (13.14),

(cid:0)1=(cid:22)=   .(cid:23)/, so

(cid:22)

gn0;x0 .(cid:22)/ d c(cid:22)

(cid:0).n0x0c2/e

(cid:0)n0x0(cid:23)=(cid:22)

(13.85)

is the gamma conjugate density in table 13.1. the gamma results can be
restated in terms of chi-squared variates:
d (cid:22)

xi (cid:24) (cid:22)

(13.86)

(cid:31)2
m
m

gm=2
m=2

has conjugate prior

gn0;x0 .(cid:22)/ (cid:24) n0x0m=(cid:31)2

n0mc2;

(13.87)

an inverse chi-squared distribution.

  6 [p. 240] vasoconstriction data. efron and gous (2001) use this data to illus-
trate a theory connecting bayes factors with fisherian hypothesis testing.
it is part of a larger data set appearing in finney (1947), also discussed in
kass and raftery (1995).

  7 [p. 245] jeffreys    and fisher   s scales of evidence. jeffreys    scale as it ap-
pears in table 13.3 is taken from the slightly amended form in kass and
raftery (1995). efron and gous (2001) compare it with fisher   s scale for
the contradictory results of table 13.5. fisher and jeffreys worked in dif-
ferent scienti   c contexts   small-sample agricultural experiments versus

13.6 notes and details

263

hard-science geostatistics   which might explain jeffreys    more stringent
conception of what constitutes signi   cant evidence.

  8 [p. 246] the bayesian information criterion. the bic was proposed by
schwarz (1978). kass and wasserman (1996) provide an extended discus-
sion of the bic and model selection.    proofs    of (13.37) ultimately depend
on sample size coherency (13.49), as in efron and gous (2001). quotation
marks are used here to indicate the basically qualitative nature of bic: if
we think of the data points as being collected in pairs then n becomes n=2
in (13.38), etc., so it doesn   t pay to put too    ne a point on the criterion.

moreover, the convergence is geometric in the l1 normpjp.b/

  9 [p. 256] mcmc convergence. suppose we begin the mcmc random walk
(13.76)   (13.77) by choosing   .1/ according to some arbitrary starting dis-
tribution p.1/. let p.b/ be the distribution of   .b/, obtained after b steps of
the random walk. markov chain theory says that, under certain broad con-
ditions on q.i; j /, p.b/ will converge to the target distribution p (13.75).
(cid:0)pkj, suc-
cessive discrepancies eventually decreasing by a multiplicative factor. a
proof appears in tanner and wong (1987). unfortunately, the factor won   t
be known in most applications, and the actual convergence may be quite
slow.

k

  10 [p. 258] dirichlet distribution. the dirichlet is a multivariate generaliza-
tion of the beta distribution (section 5.1), typically used to represent prior
distributions for the multinomial distribution. for x d .x1; x2; : : : ; xk/
0,

j xj d 1, the d.(cid:23)/ density is de   ned as

with xj 2 .0; 1/,p
where b.(cid:23)/ dq

ky

jd1

f(cid:23).x/ d 1

j   .(cid:23)j /=   .p

j (cid:23)j /.

b.(cid:23)/

(cid:23)j(cid:0)1

x
j

;

(13.88)

14

statistical id136 and methodology in the

postwar era

the fundamentals of statistical id136   frequentist, bayesian, fisherian
   were set in place by the end of the    rst half of the twentieth century, as
discussed in part i of this book. the postwar era witnessed a massive ex-
pansion of statistical methodology, responding to the data-driven demands
of modern scienti   c technology. we are now at the end of part ii,    early
computer-age methods,    having surveyed the march of new statistical
algorithms and their inferential justi   cation from the 1950s through the
1990s.

this was a time of opportunity for the discipline of statistics, when the
speed of computation increased by a factor of a thousand, and then another
thousand. as we said before, a land bridge had opened to a new continent,
but not everyone was eager to cross. we saw a mixed picture: the computer
played a minor or negligible role in the development of some in   uential
topics such as empirical bayes, but was fundamental to others such as the
bootstrap.

fifteen major topics were examined in chapters 6 through 13. what fol-
lows is a short scorecard of their inferential af   nities, bayesian, frequentist,
or fisherian, as well as an assessment of the computer   s role in their devel-
opment. none of this is very precise, but the overall picture, illustrated in
figure 14.1, is evocative.

empirical bayes

robbins    original development of formula (6.5) was frequentistic, but most
statistical researchers were frequentists in the postwar era so that could be
expected. the obvious bayesian component of empirical bayes arguments
is balanced by their frequentist emphasis on (nearly) unbiased estimation
of bayesian estimators, as well as the restriction to using only current data
for id136. electronic computation played hardly any role in the theory   s
development (as indicated by blue coloring in the    gure). of course mod-

264

postwar id136 and methodology

265

figure 14.1 bayesian, frequentist, and fisherian in   uences, as
described in the text, on 15 major topics, 1950s through 1990s.
colors indicate the importance of electronic computation in their
development: red, crucial; violet, very important; green,
important; light blue, less important; blue, negligible.

ern empirical bayes applications are heavily computational, but that is the
case for most methods now.

james   stein and ridge regression

the frequentist roots of james   stein estimation are more de   nitive, es-
pecially given the force of the james   stein theorem (7.16). nevertheless,
the empirical bayes interpretation (7.13) lends james   stein some bayes-
ian credibility. electronic computation played no role in its development.
this was less true for ridge regression, colored light blue in the    gure,
where the matrix calculation (7.36) would have been daunting in the pre-
electronic age. the bayesian justi   cation (7.37)   (7.39) of ridge regression

 lllbayesianfrequentistfisherianlkaplan   meierllog   ranklglmlproportional hazards(partial likelihood)lbootstraplempiricalbayeslobjectivebayes(mcmc)ljackknifelcvljames   steinlregression treeslridgeregressionlbiclmissing data(em)laic   cp266

postwar id136 and methodology

carries more weight than for james   stein, given the absence of a strong
frequentist theorem.

generalized linear models

glm development began with a pronounced fisherian emphasis on like-
lihood1 modeling, but settled down to more or less standard frequentist
regression theory. a key operational feature, low-dimensional suf   cient
statistics, limited its computational demands, but glm theory could not
have developed before the age of electronic computers (as indicated by
green coloring).

regression trees

model building by means of regression trees is a computationally intensive
enterprise, indicated by its red color in figure 14.1. its justi   cation has
been mainly in terms of asymptotic frequentist properties.

survival analysis

the kaplan   meier estimate, log-rank test, and proportional hazards model
move from the frequentist pole of the diagram toward the fisherian pole
as the conditioning arguments in sections 9.2 through 9.4 become more
elaborate. the role of computation in their development increases in the
same order. kaplan   meier estimates can be done by hand (and were),
while it is impossible to contemplate proportional hazards analysis with-
out the computer. partial likelihood, the enabling argument for the theory,
is a quintessential fisherian device.

missing data and the em algorithm

the imputation of missing data has a bayesian    avor of indirect evidence,
but the    fake data    principle (9.44)   (9.46) has fisherian roots. fast compu-
tation was important to the method   s development, particularly so for the
em algorithm.

jackknife and bootstrap

the purpose of the jackknife was to calculate frequentist standard errors
and biases. electronic computation was of only minor importance in its

1 more explicitly, quasilikelihoods, an extension to a wider class of exponential family

models.

postwar id136 and methodology

267

development. by contrast, the bootstrap is the archetype for computer-
intensive statistical id136. it combines frequentism with fisherian de-
vices: plug-in estimation of accuracy estimates, as in (10.18)   (10.19), and
correctness arguments for bootstrap con   dence intervals, (11.79)   (11.83).

cross-validation

the renaissance of interest in cross-validation required fast computation,
especially for assessing modern computer-intensive prediction algorithms.
as pointed out in the text following figure (12.3), cross-validation is a
strongly frequentist procedure.

bic, aic, and cp

these three algorithms were designed to avoid computation, bic for bayes-
ian model selection, section (13.3), aic and cp for unbiased estimation
of frequentist prediction error, (12.76) and (12.50).

objective bayes and mcmc

in addition to their bayesian provenance, objective bayes methods have
some connection with    ducial ideas and the bootstrap, as discussed in sec-
tion 11.5. (an argument can be made that they are at least as frequentist as
they are bayesian   see the notes below   though that has not been acted
upon in coloring the    gure.) id150 and mcmc, the enabling al-
gorithms, epitomize modern computer-intensive id136.

notes

figure 14.1 is an updated version of figure 8 in efron (1998),    r. a. fisher
in the 21st century.    there the dif   culty of properly placing objective
bayes is confessed, with erich lehmann arguing for a more frequentist
(decision-theoretic) location:    in fact, the concept of uninformative prior
is philosophically close to wald   s least favorable distribution, and the two
often coincide.   

figure 14.1 shows a healthy mixture of philosophical and computational
tactics at work, with all three edges (but not the center) of the triangle in
play. all new points will be red (computer-intensive) as we move into the
twenty-   rst century in part iii. our triangle will have to struggle to accom-
modate some major developments based on machine learning, a philosoph-
ically atheistic approach to statistical id136.

part iii

twenty-first-century topics

15

large-scale hypothesis testing and

false-discovery rates

by the    nal decade of the twentieth century, electronic computation fully
dominated statistical practice. almost all applications, classical or other-
wise, were now performed on a suite of computer platforms: sas, spss,
minitab, matlab, s (later r), and others.

the trend accelerates when we enter the twenty-   rst century, as statis-
tical methodology struggles, most often successfully, to keep up with the
vastly expanding pace of scienti   c data production. this has been a two-
way game of pursuit, with statistical algorithms chasing ever larger data
sets, while inferential analysis labors to rationalize the algorithms.

part iii of our book concerns topics in twenty-   rst-century1 statistics.
the word    topics    is intended to signal selections made from a wide cat-
alog of possibilities. part ii was able to review a large portion (though
certainly not all) of the important developments during the postwar period.
now, deprived of the advantage of hindsight, our survey will be more illus-
trative than de   nitive.

for many statisticians, microarrays provided an introduction to large-
scale data analysis. these were revolutionary biomedical devices that en-
abled the assessment of individual activity for thousands of genes at once   
and, in doing so, raised the need to carry out thousands of simultaneous
hypothesis tests, done with the prospect of    nding only a few interesting
genes among a haystack of null cases. this chapter concerns large-scale
hypothesis testing and the false-discovery rate, the breakthrough in statis-
tical id136 it elicited.

1 actually what historians might call    the long twenty-   rst century    since we will begin

in 1995.

271

272

large-scale hypothesis testing and fdrs

15.1 large-scale testing

the prostate cancer data, figure 3.4, came from a microarray study of
n d 102 men, 52 prostate cancer patients and 50 normal controls. each
man   s gene expression levels were measured on a panel of n d 6033
genes, yielding a 6033 (cid:2) 102 matrix of measurements xij ,
xij d activity of ith gene for j th man:

(15.1)

for each gene, a two-sample t statistic (2.17) ti was computed com-
paring gene i   s expression levels for the 52 patients with those for the 50
controls. under the null hypothesis h0i that the patients    and the controls   
responses come from the same normal distribution of gene i expression
levels, ti will follow a standard student t distribution with 100 degrees of
freedom, t100. the transformation
zi d   

(cid:0)1 .f100.ti // ;
(15.2)
(cid:0)1 the inverse function of
where f100 is the cdf of a t100 distribution and   
a standard normal cdf, makes zi standard normal under the null hypothesis:

h0i w zi (cid:24)

n .0; 1/:

(15.3)

of course the investigators were hoping to spot some non-null genes,
ones for which the patients and controls respond differently. it can be
shown that a reasonable model for both null and non-null genes is2   

  1

zi (cid:24)

n .(cid:22)i ; 1/;

(15.4)
(cid:22)i being the effect size for gene i. null genes have (cid:22)i d 0, while the
investigators hoped to    nd genes with large positive or negative (cid:22)i effects.
figure 15.1 shows the histogram of the 6033 zi values. the red curve is
the scaled n .0; 1/ density that would apply if in fact all of the genes were
null, that is if all of the (cid:22)i equaled zero.3 we can see that the curve is a
little too high near the center and too low in the tails. good! even though
most of the genes appear null, the discrepancies from the curve suggest that
there are some non-null cases, the kind the investigators hoped to    nd.

large-scale testing refers exactly to this situation: having observed a
large number n of test statistics, how should we decide which if any of the
null hypotheses to reject? classical testing theory involved only a single
case, n d 1. a theory of multiple testing arose in the 1960s,    multiple   

2 this is model (3.28), with zi now replacing the notation xi .
3 it is ce

2(cid:25) with c chosen to make the area under the curve equal the area of

p

(cid:0)z2=2=
the histogram.

15.1 large-scale testing

273

figure 15.1 histogram of n d 6033 z-values, one for each gene
in the prostate cancer study. if all genes were null (15.3) the
histogram would track the red curve. for which genes can we
reject the null hypothesis?

meaning n between 2 and perhaps 20. the microarray era produced data
sets with n in the hundreds, thousands, and now even millions. this sounds
like piling dif   culty upon dif   culty, but in fact there are some inferential
advantages to the large-n framework, as we will see.

the most troubling fact about large-scale testing is how easy it is to be
fooled. running 100 separate hypothesis tests at signi   cance level 0.05
will produce about    ve    signi   cant    results even if each case is actually
null. the classical bonferroni bound avoids this fallacy by strengthening
the threshold of evidence required to declare an individual case signi   cant
(i.e., non-null). for an overall signi   cance level   , perhaps    d 0:05, with
n simultaneous tests, the bonferroni bound rejects the ith null hypothesis
h0i only if it attains individual signi   cance level   =n . for    d 0:05,
n d 6033, and h0i w zi (cid:24)
n .0; 1/, the one-sided bonferroni threshold
for signi   cance is (cid:0)  
(cid:0)1.0:05=n / d 4:31 (compared with 1.645 for n d
1). only four of the prostate study genes surpass this threshold.

classic hypothesis testing is usually phrased in terms of signi   cance lev-
els and p-values. if test statistic z has cdf f0.z/ under the null hypothesis

   4   20240100200300400500z   valuescounts274

then4

large-scale hypothesis testing and fdrs

p d 1 (cid:0) f0.z/

(15.5)

is the right-sided p-value, larger z giving smaller p-value.    signi   cance
level    refers to a prechosen threshold value, e.g.,    d 0:05. the null
hypothesis is    rejected at level       if we observe p     . table 13.4 on
page 245 (where    coverage level    means one minus the signi   cance level)
shows fisher   s scale for interpreting p-values.

a level-   test for a single null hypothesis h0 satis   es, by de   nition,

   d prfreject true h0g:

for a collection of n null hypotheses h0i, the family-wise error rate is the
id203 of making even one false rejection,

bonferroni   s procedure controls fwer at level   : let i0 be the indices of
the true h0i, having say n0 members. then

fwer d prfreject any true h0ig:
n
pi     

 9=;  x

8<:[

(cid:16)
pi     
    ;

pr

n

i0

i0

n

o

fwer d pr

d n0

  

n

(15.6)

(15.7)

(15.8)

  2

the top line following from boole   s inequality (which doesn   t require even
independence among the pi).
the bonferroni bound is quite conservative: for n d 6033 and    d
0:05 we reject only those cases having pi   8:3 (cid:1) 10
(cid:0)6. one can do only a
little better under the fwer constraint.    holm   s procedure,     which offers
modest improvement over bonferroni, goes as follows.
(cid:15) order the observed p-values from smallest to largest,

p.1/   p.2/   p.3/   : : :   p.i /   : : :   p.n /;

(15.9)

with h0.i / denoting the corresponding null hypotheses.
(cid:15) let i0 be the smallest index i such that

p.i / >   =.n (cid:0) i c 1/:

(15.10)

(cid:15) reject all null hypotheses h0.i / for i < i0 and accept all with i (cid:21) i0.
4 the left-sided p-value is p d f0.z/. we will avoid two-sided p-values in this
discussion.

15.2 false-discovery rates

275

it can be shown that holm   s procedure controls fwer at level   , while
being slightly more generous than bonferroni in declaring rejections.

15.2 false-discovery rates

the fwer criterion aims to control the id203 of making even one
false rejection among n simultaneous hypothesis tests. originally devel-
oped for small-scale testing, say n   20, fwer usually proved too con-
servative for scientists working with n in the thousands. a quite different
and more liberal criterion, false-discovery rate (fdr) control, has become
standard.

figure 15.2 a decision rule d has rejected r out of n null
hypotheses; a of these decisions were incorrect, i.e., they were
   false discoveries,    while b of them were    true discoveries.    the
false-discovery proportion fdp equals a=r.

figure 15.2 diagrams the outcome of a hypothetical decision rule d ap-
plied to the data for n simultaneous hypothesis-testing problems, n0 null
and n1 d n (cid:0) n0 non-null. an omniscient oracle has reported the rule   s
results: r null hypotheses have been rejected; a of these were cases of
false discovery, i.e., valid null hypotheses, for a    false-discovery propor-
tion    (fdp) of

fdp.d/ d a=r:

(15.11)
(we de   ne fdp d 0 if r d 0.) fdp is unobservable   without the oracle
we cannot see a   but under certain assumptions we can control its expec-
tation.

4	
   null actual non-null null n0 - a non-null a b n1 - b n - r r n n1 n0 decision 276

large-scale hypothesis testing and fdrs

de   ne

fdr.d/ d e ffdp.d/g :

(15.12)
a decision rule d controls fdr at level q, with q a prechosen value be-
tween 0 and 1, if
(15.13)

fdr.d/   q:

it might seem dif   cult to    nd such a rule, but in fact a quite simple but in-
genious recipe does the job. ordering the observed p-values from smallest
to largest as in (15.9), de   ne imax to be the largest index for which

p.i /   i

n

q;

(15.14)

  3

and let dq be the rule5 that rejects h0.i / for i   imax, accepting otherwise.

a proof of the following theorem is referenced in the chapter endnotes.  
theorem (benjamini   hochberg fdr control)
ing to valid null hypotheses are independent of each other, then

if the p-values correspond-

fdr.dq/ d (cid:25)0q   q;

where (cid:25)0 d n0=n:

(15.15)

in other words dq controls fdr at level (cid:25)0q. the null proportion (cid:25)0 is
unknown (though estimable), so the usual claim is that dq controls fdr at
level q. not much is sacri   ced: large-scale testing problems are most often
   shing expeditions in which most of the cases are null, putting (cid:25)0 near 1,
identi   cation of a few non-null cases being the goal. the choice q d 0:1
is typical practice.

the popularity of fdr control hinges on the fact that it is more generous
than fwer in declaring signi   cance.6 holm   s procedure (15.10) rejects
null hypothesis h0.i / if

p.i /   threshold(holm   s) d

  

n (cid:0) i c 1

;

(15.16)

while dq (15.13) has threshold

p.i /   threshold(dq) d q

n

i:

(15.17)

5 sometimes denoted    bhq    after its inventors benjamini and hochberg; see the chapter

endnotes.

6 the classic term    signi   cant    for a non-null identi   cation doesn   t seem quite right for
fdr control, especially given the bayesian connections of section 15.3, and we will
sometimes use    interesting    instead.

in the usual range of interest, large n and small i, the ratio

15.2 false-discovery rates

277

 
1 (cid:0) i (cid:0) 1

 

n

i

(15.18)

threshold(dq)
threshold(holm   s)

d q
  

increases almost linearly with i.

figure 15.3 ordered p-values p.i / d 1 (cid:0)   .z.i // plotted versus
i for the 50 largest z-values from the prostate data in
figure 15.1. the fdr control boundary (algorithm dq, q d 0:1)
rejects h0.i / for the 28 smallest values p.i /, while holm   s fwer
procedure (   d 0:1) rejects for only the 7 smallest values. (the
upward slope of holm   s boundary (15.16) is too small to see
here.)

figure 15.3 illustrates the comparison for the right tail of the prostate
data of figure 15.1, with pi d 1 (cid:0)   .zi / (15.3), (15.5), and    d q d
0:1. the fdr procedure rejects h0.i / for the 28 largest z-values (z.i / (cid:21)
3:33), while fwer control rejects only the 7 most extreme z-values (z.i / (cid:21)
4:14).

hypothesis testing has been a traditional stronghold of frequentist deci-
sion theory, with    type 1    error control being strictly enforced, very often
at the 0.05 level. it is surprising that a new control criterion, fdr, has
taken hold in large-scale testing situations. a critic, noting fdr   s relaxed
rejection standards in figure 15.3, might raise some pointed questions.

**************************************************010203040500e+005e   041e   03index ip   valueholm'sfdri = 7i = 28278

large-scale hypothesis testing and fdrs

1 is controlling a rate (i.e., fdr) as meaningful as controlling a probabil-

ity (of type 1 error)?

4 the fdr signi   cance for gene i0, say one with zi0

isn   t this unlikely in situations such as the prostate study?

2 how should q be chosen?
3 the control theorem depends on independence among the p-values.
d 3, depends on the
results of all the other genes: the more    other    zi values exceed 3, the
more interesting gene i0 becomes (since that increases i0   s index i in
the ordered list (15.9), making it more likely that pi0 lies below the dq
threshold (15.14)). does this make inferential sense?

a bayes/empirical bayes restatement of the dq algorithm helps answer
these questions, as discussed next.

15.3 empirical bayes large-scale testing

in practice, single-case hypothesis testing has been a frequentist preserve.
its methods demand little from the scientist   only the choice of a test
statistic and the calculation of its null distribution   while usually deliver-
ing a clear verdict. by contrast, bayesian model selection, whatever its in-
ferential virtues, raises the kinds of dif   cult modeling questions discussed
in section 13.3.

it then comes as a pleasant surprise that things are different for large-
scale testing: bayesian methods, at least in their empirical bayes manifes-
tation, no longer demand heroic modeling efforts, and can help untangle
the interpretation of simultaneous test results. this is particularly true for
the fdr control algorithm dq of the previous section.
a simple bayesian framework for simultaneous testing is provided by
the two-groups model: each of the n cases (the genes for the prostate
study) is either null with prior id203 (cid:25)0 or non-null with probabil-
ity (cid:25)1 d 1 (cid:0) (cid:25)0; the resulting observation z then has density either f0.z/
or f1.z/,

(cid:25)0 d prfnullg
(cid:25)1 d prfnon-nullg
p
for the prostate study, (cid:25)0 is nearly 1, and f0.z/ is the standard normal den-
sity (cid:30).z/ d exp.(cid:0)z2=2/=
2(cid:25) (15.3), while the non-null density remains
to be estimated.

f0.z/ density if null;
f1.z/ density if non-null:

(15.19)

let f0.z/ and f1.z/ be the cdf values corresponding to f0.z/ and f1.z/,

15.3 empirical bayes large-scale testing

279

with    survival curves   

s0.z/ d 1 (cid:0) f0.z/

and s1.z/ d 1 (cid:0) f1.z/;

(15.20)
s0.z0/ being the id203 that a null z-value exceeds z0, and similarly
for s1.z/. finally, de   ne s.z/ to be the mixture survival curve

the mixture density

determines s.z/,

s.z/ d (cid:25)0s0.z/ c (cid:25)1s1.z/:

f .z/ d (cid:25)0f0.z/ c (cid:25)1f1.z/

s.z0/ dz 1

z0

f .z/ dz:

(15.21)

(15.22)

(15.23)

suppose now that observation zi for case i is seen to exceed some thresh-
old value z0, perhaps z0 d 3. bayes    rule gives

fdr.z0/   prfcase i is nulljzi (cid:21) z0g

d (cid:25)0s0.z0/=s.z0/;

(15.24)
the correspondence with (3.5) on page 23 being (cid:25)0 d g.(cid:22)/, s0.z0/ d
f(cid:22).x/, and s.z0/ d f .x/. fdr is the    bayes false-discovery rate,    as con-
trasted with the frequentist quantity fdr (15.12).
in typical applications, s0.z0/ is assumed known7 (equaling 1 (cid:0)   .z0/
in the prostate study), and (cid:25)0 is assumed to be near 1. the denominator
s.z0/ in (15.24) is unknown, but   and this is the crucial point   it has an
obvious estimate in large-scale testing situations, namely

os .z0/ d n.z0/=n;

where n.z0/ d #fzi (cid:21) z0g:

(15.25)
(by the de   nition of the two-group model, each zi has marginal density
f .z/, making os .z0/ the usual empirical estimate of s.z0/ (15.23).) plug-
ging into (15.24) yields an empirical bayes estimate of the bayes false-
discovery rate

cfdr.z0/ d (cid:25)0s0.z0/   os .z0/:

(15.26)
the connection with fdr control is almost immediate. first of all, from
de   nitions (15.5) and (15.20) we have pi d s0.zi /; also for the ith from
the largest z-value we have os .z.i // d i=n (15.25). putting these together,
condition (15.14), p.i /   .i=n /q, becomes

s0.z.i //   os .z.i // (cid:1) q;

(15.27)

7 but see section 15.5.

280

large-scale hypothesis testing and fdrs

or s0.z.i //= os .z.i //   q, which can be written as
cfdr.z.i //   (cid:25)0q

(15.28)
(15.26). in other words, the dq algorithm, which rejects those null hy-
potheses having8 p.i /   .i=n /q, is in fact rejecting those cases for which
the empirical bayes posterior id203 of nullness is too small, as de-
   ned by (15.28). the bayesian nature of fdr control offers a clear advan-
tage to the investigating scientist, who gets a numerical assessment of the
id203 that he or she will be wasting time following up any one of the
selected cases.

we can now respond to the four questions at the end of the previous

section:

1 fdr control does relate to a id203   the bayes posterior probabil-

ity of nullness.
2 the choice of q for dq amounts to setting the maximum tolerable amount
of bayes risk of nullness9 (usually after taking (cid:25)0 d 1 in (15.28)).
s.z0/, makingcfdr.z0/ (15.26) nearly unbiased for fdr.z0/ (15.24). there
3 most often the zi, and hence the pi, will be correlated with each other.
even under correlation, however, os .z0/ in (15.25) is still unbiased for
s0.z0/ and cfdr.z0/.

is a price to be paid for correlation, which increases the variance of

4 in the bayes two-groups model (15.19), all of the non-null zi are i.i.d.
observations from the non-null density f1.z/, with survival curve s1.z/.
the number of null cases zi exceeding some threshold z0 has    xed ex-
pectation n (cid:25)0s0.z0/. therefore an increase in the number of observed
values zi exceeding z0 must come from a heavier right tail for f1.z/,
implying a greater posterior id203 of non-nullness fdr.z0/ (15.24).
this point is made more clearly in the local false-discovery framework
of the next section. it emphasizes the    learning from the experience of
others    aspect of empirical bayes id136, section 7.4. the question
of    which others?    is returned to in section 15.6.

figure 15.4 illustrates the two-group model (15.19). the n cases are

8 the algorithm, as stated just before the fdr control theorem (15.15), is actually a little

more liberal in allowing rejections.
9 for a case of particular interest, the calculation can be reversed: if the case has ordered
index i then, according to (15.14), the value q d npi = i puts it exactly on the boundary
of rejection, making this its q-value. the 50th largest z-value for the prostate data has
zi d 2:99, pi d 0:00139, and q-value 0.168, that being both the frequentist
boundary for rejection and the empirical bayes id203 of nullness.

15.3 empirical bayes large-scale testing

281

figure 15.4 a diagram of the two-groups model (15.19). here
the statistician observes values zi from a mixture density
f .z/ d (cid:25)0f0.z/ c (cid:25)1f1.z/ and decides to reject or accept the
null hypothesis h0i depending on whether zi exceeds or is less
than the threshold value z0.

(

randomly dispatched to the two arms in proportions (cid:25)0 and (cid:25)1, at which
point they produce z-values according to either f0.z/ or f1.z/. suppose
we are using a simple decision rule d that rejects the ith null hypothesis if
zi exceeds some threshold z0, and accepts otherwise,

w

d

reject h0i
accept h0i

if zi > z0
if zi   z0:

(15.29)

the oracle of figure 15.2 knows that n0.z0/ d a of the null case z-
values exceeded z0, and similarly n1.z0/ d b of the non-null cases, lead-
ing to

n.z0/ d n0.z0/ c n1.z0/ d r

total rejections. the false-discovery proportion (15.11) is

fdp d n0.z0/

n.z0/

but this is unobservable since we see only n.z0/.

the clever inferential strategy of false-discovery rate theory substitutes

the expectation of n0.z0/,

e fn0.z0/g d n (cid:25)0s0.z0/;

(15.32)

(15.30)

(15.31)

282

large-scale hypothesis testing and fdrs

d cfdr.z0/;

for n0.z0/ in (15.31), giving

dfdp d n (cid:25)0s0.z0/

d (cid:25)0s0.z0/
os .z0/

(15.33)

n.z0/

using (15.25) and (15.26). starting from the two-groups model, cfdr.z0/ is

an obvious empirical (i.e., frequentist) estimate of the bayesian id203
fdr.z0/, as well as of fdp.

if placed in the bayes   fisher   frequentist triangle of figure 14.1, false-
discovery rates would begin life near the frequentist corner but then mi-
grate at least part of the way toward the bayes corner. there are remark-
able parallels with the james   stein estimator of chapter 7. both theories
began with a striking frequentist theorem, which was then inferentially
rationalized in empirical bayes terms. both rely on the use of indirect
evidence   learning from the experience of others. the difference is that
james   stein estimation always aroused controversy, while fdr control
has been quickly welcomed into the pantheon of widely used methods.
this could re   ect a change in twenty-   rst-century attitudes or, perhaps,
only that the dq rule better conceals its bayesian aspects.

15.4 local false-discovery rates

tail-area statistics (p-values) were synonymous with classic one-at-a-time
hypothesis testing, and the dq algorithm carried over p-value interpreta-
tion to large-scale testing theory. but tail-area calculations are neither nec-
essary nor desirable from a bayesian viewpoint, where, having observed
test statistic zi equal to some value z0, we should be more interested in the
id203 of nullness given zi d z0 than given zi (cid:21) z0.
to this end we de   ne the local false-discovery rate
fdr.z0/ d prfcase i is nulljzi d z0g

(15.34)

as opposed to the tail-area false-discovery rate fdr.z0/ (15.24). the main
point of what follows is that reasonably accurate empirical bayes estimates
of fdr are available in large-scale testing problems.

as a    rst try, suppose that z0, a proposed region for rejecting null hy-

potheses, is a small interval centered at z0,

z0 d 

(cid:21)

z0 (cid:0) d

2

; z0 c d

2

;

(15.35)

with d perhaps 0.1. we can redraw figure 15.4, now with n0.z0/, n1.z0/,

15.4 local false-discovery rates

283
and n.z0/ the null, non-null, and total number of z-values in z0. the local
false-discovery proportion,

(15.36)
is unobservable, but we can replace n0.z0/ with n (cid:25)0f0.z0/d, its approx-
imate expectation as in (15.31)   (15.33), yielding the estimate10

fdp.z0/ d n0.z0/=n.z0/
cfdr.z0/ d n (cid:25)0f0.z0/d=n.z0/:

estimate (15.37) would be needlessly noisy in practice; z-value distri-
butions tend to be smooth, allowing the use of regression estimates for
fdr.z0/. bayes    theorem gives

(15.37)

fdr.z/ d (cid:25)0f0.z/=f .z/

(15.38)

in the two-groups model (15.19) (with (cid:22) in (3.5) now the indicator of null
or non-null states, and x now z). drawing a smooth curve o
f .z/ through
the histogram of the z-values yields the more ef   cient estimate

cfdr.z0/ d (cid:25)0f0.z0/=

o
f .z0/i

(15.39)

cfdr.z/   0:2

figure 15.5 shows cfdr.z/ for the prostate study data of figure 15.1,
the null proportion (cid:25)0 can be estimated   see section 15.5   or set equal to
1.
where o
f .z/ in (15.39) has been estimated as described below. the curve
hovers near 1 for the 93% of the cases having jzij   2, sensibly suggesting
that there is no involvement with prostate cancer for most genes. it declines
quickly for jzij (cid:21) 3, reaching the conventionally    interesting    threshold
(15.40)
for zi (cid:21) 3:34 and zi   (cid:0)3:40. this was attained for 27 genes in the right
tail and 25 in the left, these being reasonable candidates to    ag for follow-
up investigation.
the curve o
f .z/ used in (15.39) was obtained from a fourth-degree log
polynomial poisson regression    t to the histogram in figure 15.1, as in
figure 10.5 (10.52)   (10.56). log polynomials of degree 2 through 6 were
   t by maximum likelihood, giving total residual deviances (8.35) shown in
table 15.1. an enormous improvement in    t is seen in going from degree
3 to 4, but nothing signi   cant after that, with decreases less than the null
value 2 suggested by (12.75).

10 equation (15.37) makes argument (4) of the previous section clearer: having more

   other    z-values fall into z0 increases n.z0/, decreasingcfdr.z0/ and making it more
likely that zi d z0 represents a non-null case.

284

large-scale hypothesis testing and fdrs

figure 15.5 local false-discovery rate estimatecfdr.z/ (15.39)
the left, indicated by dashes, havecfdr.zi /   0:2; light dashed
curves are the left and right tail-area estimates cfdr.z/ (15.26).

for prostate study of figure 15.1; 27 genes on the right and 25 on

table 15.1 total residual deviances from log polynomial poisson
regressions of the prostate data, for polynomial degrees 2 through 6;
degree 4 is preferred.

degree
deviance

2

138.6

3

137.0

4

65.1

5

64.1

6

63.7

the points in figure 15.6 represent the log bin counts from the histogram
in figure 15.1 (excluding zero counts), with the solid curve showing the
4th-degree id113 polynomial    t. also shown is the standard normal log
density

log f0.z/ d (cid:0) 1

z2 c constant:

(15.41)
it    ts reasonably well for jzj < 2, emphasizing the null status of the gene
the cutoffcfdr.z/   0:2 for declaring a case interesting is not completely
majority.

arbitrary. de   nitions (15.38) and (15.22), and a little algebra, show that it

2

   4   20240.00.20.40.60.81.0z   valuefdr and fdrlocal fdr   3.403.3415.4 local false-discovery rates

285

figure 15.6 points are log bin counts for figure 15.1   s
histogram. the solid black curve is a fourth-degree

log-polynomial    t used to calculatecfdr.z/ in figure 15.5. the
dashed red curve, the log null density (15.41), provides a
reasonable    t for jzj   2.

is equivalent to

(15.42)
if we assume (cid:25)0 (cid:21) 0:90, as is reasonable in most large-scale testing situa-
tions, this makes the bayes factor f1.z/=f0.z/ quite large,

:

f1.z/
f0.z/

(cid:21) 4

(cid:25)0
(cid:25)1

(cid:21) 36;

f1.z/
f0.z/

(15.43)

   strong evidence    against the null hypothesis in jeffreys    scale, table 13.3.
there is a simple relation between the local and tail-area false-discovery

rates:  

fdr.z0/ d e ffdr.z/jz (cid:21) z0gi

  4

(15.44)

so fdr.z0/ is the average value of fdr.z/ for z greater than z0. in interesting
situations, fdr.z/ will be a decreasing function for large values of z, as on
the right side of figure 15.5, making fdr.z0/ < fdr.z0/. this accounts

   4   202460123456z   valuelog densityllllllllllllllllllllllllllllllllllllllllllllll4th degree logpolynomialn(0,1)  5

286

large-scale hypothesis testing and fdrs

for the conventional signi   cance cutoff cfdr.z/   0:1 being smaller than
cfdr.z/   0:2 (15.40).  
as with left-sided and right-sided tail-area cfdr estimates, sincecfdr.z/ ap-

the bayesian interpretation of local false-discovery rates carries with it
the advantages of bayesian coherency. we don   t have to change de   nitions

plies without change to both tails.11 also, we don   t need a separate theory
for    true-discovery rates,    since

tdr.z0/   1 (cid:0) fdr.z0/ d (cid:25)1f1.z0/=f .z0/

(15.45)

is the id155 that case i is non-null given zi d z0.

15.5 choice of the null distribution

the null distribution, f0.z/ in the two-groups model (15.19), plays a cru-
cial role in large-scale testing, just as it does in the classic single-case the-
ory. something different however happens in large-scale problems: with
thousands of z-values to examine at once, it can become clear that the con-
ventional theoretical null is inappropriate for the situation at hand. put more
positively, large-scale applications may allow us to empirically determine
a more realistic null distribution.
the police data of figure 15.7 illustrates what can happen. possi-
ble racial bias in pedestrian stops was assessed for n d 2749 new york
city police of   cers in 2006. each of   cer was assigned a score zi, large
positive scores suggesting racial bias. the zi values were summary scores
from a complicated id28 model intended to compensate for
differences in the time of day, location, and context of the stops. logistic
regression theory suggested the theoretical null distribution

h0i w zi (cid:24)

n .0; 1/

(15.46)

for the absence of racial bias.

the trouble is that the center of the z-value histogram in figure 15.7,
which should track the n .0; 1/ curve applying to the presumably large
fraction of null-case of   cers, is much too wide. (unlike the situation for the
prostate data in figure 15.1.) an id113    tting algorithm discussed below
produced the empirical null

h0i w zi (cid:24)

n .0:10; 1:402/

(15.47)

11 going further, z in the two-groups model could be multidimensional. then tail-area
false-discovery rates would be unavailable, but (15.38) would still legitimately de   ne
fdr.z/.

15.5 choice of the null distribution

287

figure 15.7 police data; histogram of z scores for n d 2749
new york city police of   cers, with large zi suggesting racial
bias. the center of the histogram is too wide compared with the
theoretical null distribution zi (cid:24)
n .0; 1/. an id113    t to central
data gave n .0:10; 1:402/ as empirical null.

there is a lot at stake here. based on the empirical null (15.47) only

the four circled points at the far right of figure 15.8; the    fth point had

as appropriate here. this is reinforced by a qq plot of the zi values shown
in figure 15.8, where we see most of the cases falling nicely along a
n .0:09; 1:422/ line, with just a few outliers at both extremes.

four of   cers reached the    probably racially biased    cutoffcfdr.zi /   0:2,
cfdr d 0:38 while all the others exceeded 0.80. the theoretical n .0; 1/
null was much more severe, assigningcfdr   0:2 to the 125 of   cers having
zi (cid:21) 2:50. one can imagine the difference in newspaper headlines.
from a classical point of view it seems heretical to question the theo-
retical null distribution, especially since there is no substitute available in
single-case testing. once alerted by data sets like the police study, however,
it is easy to list reasons for doubt:
(cid:15) asymptotics taylor series approximations go into theoretical null calcu-
lations such as (15.46), which can lead to inaccuracies, particularly in the
crucial tails of the null distribution.
(cid:15) correlations false-discovery rate methods are correct on the average,

z   valuesfrequency   6   4   20246050100150200n(0,1)n(0.1,1.402)288

large-scale hypothesis testing and fdrs

figure 15.8 qq plot of police data z scores; most scores closely
follow the n .0:09; 1:422/ line with a few outliers at either end.
the circled points are cases having local false-discovery estimate

cfdr.zi /   0:2, based on the empirical null. using the theoretical
n .0; 1/ null gives 216 cases withcfdr.zi /   0:2, 91 on the left and

125 on the right.

even with correlations among the n z-values. however, severe correlation
destabilizes the z-value histogram, which can become randomly wider or
narrower than theoretically predicted, undermining theoretical null results
for the data set at hand.  
  6 (cid:15) unobserved covariates the police study was observational: individual
encounters were not assigned at random to the various of   cers but simply
observed as they happened. observed covariates such as the time of day
and the neighborhood were included in the id28 model, but
one can never rule out the possibility of in   uential unobserved covariates.
(cid:15) effect size considerations the hypothesis-testing setup, where a large
fraction of the cases are truly null, may not be appropriate. an effect
size model, with (cid:22)i (cid:24) g.(cid:1)/ and zi (cid:24)
n .(cid:22)i ; 1/, might apply, with the
prior g.(cid:22)/ not having an atom at (cid:22) d 0. the nonatomic choice g.(cid:22)/ (cid:24)
n .0:10; 0:632/ provides a good    t to the qq plot in figure 15.8.

normal quantilessample quantileslllllllllintercept = 0.089slope = 1.42415.5 choice of the null distribution

289

empirical null estimation

f0.z/ (cid:24)

our point of view here is that the theoretical null (15.46), zi (cid:24)
n .0; 1/, is
not completely wrong but needs adjustment for the data set at hand. to this
end we assume the two-groups model (15.19), with f0.z/ normal but not
necessarily n .0; 1/, say

n .  0; (cid:27) 2
0 /:

(15.48)
in order to compute the local false-discovery rate fdr.z/ d (cid:25)0f0.z/=f .z/
we want to estimate the three numerator parameters .  0; (cid:27)0; (cid:25)0/, the mean
and standard deviation of the null density and the proportion of null cases.
(the denominator f .z/ is estimated as in section 15.4.)
our key assumptions (besides (15.48)) are that (cid:25)0 is large, say (cid:25)0 (cid:21)
0:90, and that most of the zi near 0 are null cases. the algorithm locfdr
  begins by selecting a set a0 near z d 0 in which it is assumed that all the   7
zi in a0 are null; in terms of the two-groups model, the assumption can be
stated as
(15.49)

f1.z/ d 0 for z 2

a0:

modest violations of (15.49), which are to be expected, produce small bi-
ases in the empirical null estimates. maximum likelihood based on the
number and values of the zi observed in a0 yield the empirical null es-
timates   .
applied to the police data, locfdr chose a0 d   (cid:0)1:8; 2:0   and pro-

o
  0; o(cid:27)0; o(cid:25)0/.

duced estimates

(cid:16)o

  0; o(cid:27)0; o(cid:25)0

  d .0:10; 1:40; 0:989/:

(15.50)

  8

two small simulation studies described in table 15.2 give some idea of the
variabilities and biases inherent in the locfdr estimation process.

the third method, somewhere between the theoretical and empirical null
estimates but closer to the former, relies on permutations. the vector z of
6033 z-values for the prostate data of figure 15.1 was obtained from a
study of 102 men, 52 cancer patients and 50 controls. randomly permuting
the men   s data, that is randomly choosing 50 of the 102 to be    controls    and
the remaining 52 to be    patients,    and then carrying through steps (15.1)   
(cid:3) in which any actual cancer/control differences have
(15.2) gives a vector z
(cid:3)
been suppressed. a histogram of the z
i values (perhaps combining sev-
eral permutations) provides the    permutation null.    here we are extending
fisher   s original permutation idea, section 4.4, to large-scale testing.

ten permutations of the prostate study data produced an almost perfect

290

large-scale hypothesis testing and fdrs

o
  0; o(cid:27)0; o(cid:25)0/ for two

table 15.2 means and standard deviations of .
simulation studies of empirical null estimation using locfdr. n d 5000
cases each trial with .  0; (cid:27)0; (cid:25)0/ as shown; 250 trials; two-groups model
(15.19) with non-null density f1.z/ equal to n .3; 1/ (left side) or
n .4:2; 1/ (right side).

  0
0
.015
.019

(cid:27)0
1.0
1.017
.017

(cid:25)0
.95
.962
.005

  0
.10
.114
.025

(cid:27)0
1.40
1.418
.029

(cid:25)0
.95
.958
.006

true
mean
st dev

n .0; 1/ permutation null. (this is as expected from the classic theory of
permutation t-tests.) permutation methods reliably overcome objection 1
to the theoretical null distribution, over-reliance on asymptotic approxima-
tions, but cannot cure objections 2, 3, and 4.  

  9

whatever the cause of disparity, the operational difference between the
theoretical and empirical null distribution is clear: with the latter, the sig-
ni   cance of an outlying case is judged relative to the dispersion of the
majority, not by a theoretical yardstick as with the former. this was per-
suasive for the police data, but the story isn   t one-sided. estimating the null

distribution adds substantially to the variability ofcfdr orcfdr. for situations

such as the prostate data, when the theoretical null looks nearly correct,12
it is reasonable to stick with it.

the very large data sets of twenty-   rst-century applications encourage
self-contained methodology that proceeds from just the data at hand using
a minimum of theoretical constructs. false-discovery rate empirical bayes
analysis of large-scale testing problems, with data-based estimation of o(cid:25)0,
o
f0, and o

f , comes close to the ideal in this sense.

15.6 relevance

false-discovery rates return us to the purview of indirect evidence, sec-
tions 6.4 and 7.4. our interest in any one gene in the prostate cancer study
depends on its own z score of course, but also on the other genes    scores   
   learning from the experience of others,    in the language used before.

the crucial question we have been avoiding is    which others?    our tacit
answer has been    all the cases that arrive in the same data set,    all the genes
12 the locfdr algorithm gave .o  0; o(cid:27)0; o(cid:25)0/ d .0:00; 1:06; 0:984/ for the prostate data.

15.6 relevance

291

in the prostate study, all the of   cers in the police study. why this can be a
dangerous tactic is shown in our    nal example.
a dti (diffusion tensor imaging) study compared six dyslexic children
with six normal controls. each dti scan recorded    uid    ows at n d15,443
   voxels,    i.e., at 15,443 three-dimensional brain coordinates. a score zi
comparing dyslexics with normal controls was calculated for each voxel i,
calibrated such that the theoretical null distribution of    no difference    was

h0i w zi (cid:24)

n .0; 1/

(15.51)

as at (15.3).

figure 15.9 histogram of z scores for the dti study, comparing
dyslexic versus normal control children at 15,443 brain locations.
a fdr analysis based on the empirical null distribution gave 149

voxels withcfdr.zi /   0:20, those having zi (cid:21) 3:17 (indicated by

red dashes).

figure 15.9 shows the histogram of all 15,443 zi values, normal-looking
near the center and with a heavy right tail; locfdr gave empirical null
parameters

(cid:16)o

  0; o(cid:27)0; o(cid:25)0

  d .(cid:0)0:12; 1:06; 0:984/;

the 149 voxels with zi (cid:21) 3:17 havingcfdr values   0:20. using the the-

(15.52)

 z   scorefrequency   4   2024020040060080010003.17292

large-scale hypothesis testing and fdrs

voxels with zi (cid:21) 3:07 havingcfdri   0:20.

oretical null (15.51) yielded only modestly different results, now the 177

figure 15.10 a plot of 15,443 zi scores from a dti study
(vertical axis) and voxel distances xi from the back of the brain
(horizontal axis). the starred points are the 149 voxels with

cfdr.zi /   0:20, which occur mostly for xi in the interval   50; 70  .

in figure 15.10 the voxel scores zi, graphed vertically, are plotted ver-
sus xi, the voxel   s distance from the back of the brain. waves of differing
response are apparent. larger values occur in the interval 50   x   70,
up. most of the 149 voxels havingcfdri   0:20 occur at the top of this wave.
where the entire z-value distribution   low, medium, and high   is pushed

figure 15.10 raises the problem of fair comparison. perhaps the 4,653
voxels with xi between 50 and 70 should be compared only with each other,
and not with all 15,443 cases. doing so gave

  d .0:23; 1:18; 0:970/;
only 66 voxels havingcfdri   0:20, those with zi (cid:21) 3:57.

  0; o(cid:27)0; o(cid:25)0

(cid:16)o

all of this is a question of relevance: which other voxels i are relevant
to the assessment of signi   cance for voxel i0? one might argue that this is
a question for the scientist who gathers the data and not for the statistical
analyst, but that is unlikely to be a fruitful avenue, at least not without

(15.53)

20406080   2024distance xz scores16%ile84%ilemedian*****************************************************************************************************************************************************15.6 relevance

293

a lot of back-and-forth collaboration. standard bayesian analysis solves
the problem by dictate: the assertion of a prior is also an assertion of its
relevance. empirical bayes situations expose the dangers lurking in such
assertions.

relevance was touched upon in section 7.4, where the limited transla-
tion rule (7.47) was designed to protect extreme cases from being shrunk
too far toward the bulk of ordinary ones. one could imagine having a    rel-
evance function    (cid:26).xi ; zi / that, given the covariate information xi and re-
sponse zi for casei, somehow adjusts an ensemble false-discovery rate es-
timate to correctly apply to the case of interest   but such a theory barely
exists.  

  10

summary

combine frequentist and bayesian thinking.

large-scale testing, particularly in its false-discovery rate implementation,
is not at all the same thing as the classic fisher   neyman   pearson theory:
(cid:15) frequentist single-case hypothesis testing depends on the theoretical
long-run behavior of samples from the theoretical null distribution. with
data available from say n d 5000 simultaneous tests, the statistician
has his or her own    long run    in hand, diminishing the importance of
theoretical modeling. in particular, the data may cast doubt on the the-
oretical null, providing a more appropriate empirical null distribution in
its place.
(cid:15) classic testing theory is purely frequentist, whereas false-discovery rates
on its own score zi, while cfdr.zi / or cfdr.zi / also depends on the ob-
(cid:15) in classic testing, the attained signi   cance level for case i depends only
(cid:15) applications of single-test theory usually hope for rejection of the null
hypothesis, a familiar prescription being 0.80 power at size 0.05. the
opposite is true for large-scale testing, where the usual goal is to ac-
cept most of the null hypotheses, leaving just a few interesting cases for
further study.
(cid:15) sharp null hypotheses such as (cid:22) d 0 are less important in large-scale
applications, where the statistician is happy to accept a hefty proportion
of uninterestingly small, but nonzero, effect sizes (cid:22)i.
(cid:15) false-discovery rate hypothesis testing involves a substantial amount of
estimation, blurring the line beteen the two main branches of statistical
id136.

served z-values for other cases.

294

large-scale hypothesis testing and fdrs

15.7 notes and details

the story of false-discovery rates illustrates how developments in scien-
ti   c technology (microarrays in this case) can in   uence the progress of
statistical id136. a substantial theory of simultaneous id136 was
developed between 1955 and 1995, mainly aimed at the frequentist control
of family-wise error rates in situations involving a small number of hypoth-
esis tests, maybe up to 20. good references are miller (1981) and westfall
and young (1993).

benjamini and hochberg   s seminal 1995 paper introduced false-discov-
ery rates at just the right time to catch the wave of large-scale data sets, now
involving thousands of simultaneous tests, generated by microarray appli-
cations. most of the material in this chapter is taken from efron (2010),
where the empirical bayes nature of fdr theory is emphasized. the po-
lice data is discussed and analyzed at length in ridgeway and macdonald
(2009).

  1 [p. 272] model (15.4). section 7.4 of efron (2010) discusses the following
result for the non-null distribution of z-values: a transformation such as
(15.2) that produces a z-value (i.e., a standard normal random variable z (cid:24)
n .0; 1/) under the null hypothesis gives, to a good approximation, z (cid:24)
n .(cid:22); (cid:27) 2
student   s t with 100 degrees of freedom, (cid:27) 2
(cid:22)

(cid:22)/ under reasonable alternatives. for the speci   c situation in (15.2),

:d 1 as in (15.4).

  2 [p. 274] holm   s procedure. methods of fwer control, including holm   s
procedure, are surveyed in chapter 3 of efron (2010). they display a large
amount of mathematical ingenuity, and provided the background against
which fdr theory developed.

  3 [p. 276] fdr control theorem. benjamini and hochberg   s striking control
theorem (15.15) was rederived by storey et al. (2004) using martingale
theory. the basic idea of false discoveries, as displayed in figure 15.2,
goes back to soric (1989).

  4 [p. 285] formula (15.44). integrating fdr.z/ d (cid:25)0f0.z/=f .z/ gives

e ffdr.z/jz (cid:21) z0g dz 1

,z 1

(cid:25)0f0.z/ dz

f .z/ dz

z0

d (cid:25)0s0.z0/=s.z0/ d fdr.z0/:

z0

(15.54)

  5 [p. 286] thresholds for fdr and fdr. suppose the survival curves s0.z/ and

s1.z/ (15.20) satisfy the    lehmann alternative    relationship

log s1.z/ d (cid:13) log s0.z/

(15.55)

15.7 notes and details

295

for large values of z, where (cid:13) is a positive constant less than 1. (this is a
reasonable condition for the non-null density f1.z/ to produce larger pos-
itive values of z than does the null density f0.z/.) differentiating (15.55)
gives

(cid:25)0
(cid:25)1

f0.z/
f1.z/

d 1
(cid:13)

(cid:25)0
(cid:25)1

s0.z/
s1.z/

(15.56)
after some rearrangement. but fdr.z/ d (cid:25)0f0.z/=.(cid:25)0f0.z/ c (cid:25)1f1.z// is
algebraically equivalent to

;

fdr.z/
1 (cid:0) fdr.z/

d (cid:25)0
(cid:25)1

f0.z/
f1.z/

;

(15.57)

and similarly for fdr.z/=.1 (cid:0) fdr.z//, yielding
fdr.z/
1 (cid:0) fdr.z/

fdr.z/
1 (cid:0) fdr.z/

d 1
(cid:13)

:

(15.58)

:d fdr.z/=(cid:13):

for large z, both fdr.z/ and fdr.z/ go to zero, giving the asymptotic rela-
tionship

fdr.z/

(15.59)
this motivates the suggested relative thresholdscfdr.zi /   0:20 compared
if (cid:13) d 1=2 for instance, fdr.z/ will be about twice fdr.z/ where z is large.
with cfdr.zi /   0:10.
  6 [p. 288] correlation effects. the poisson regression method used to esti-
mate o
f .z/ in figure 15.5 proceeds as if the components of the n -vector of
zi values z are independent. approximation (10.54), that the kth bin count
yk p(cid:24) poi.(cid:22)k/, requires independence. if not, it can be shown that var.yk/
increases above the poisson value (cid:22)k as

var.yk/

:d (cid:22)k c   2ck:

(15.60)

here ck is a    xed constant depending on f .z/, while   2 is the root mean
square correlation between all pairs zi and zj ,

24 nx

x

35,

  2 d

cov.zi ; zj /2

n.n (cid:0) 1/:

(15.61)

j  i

id1

estimates likecfdr.z/ in figure 15.5 remain nearly unbiased under correla-
tion, but their sampling variability increases as a function of   . chapters 7
and 8 of efron (2010) discuss correlation effects in detail.
often,    can be estimated. let x be the 6033 (cid:2) 50 matrix of gene ex-
pression levels measured for the control subject in the prostate study. rows

296

large-scale hypothesis testing and fdrs

i and j provide an unbiased estimate of cor.zi ; zj /2. modern computation
is suf   ciently fast to evaluate all n.n (cid:0) 1/=2 pairs (though that isn   t nec-
essary, sampling is faster) from which estimate o   is obtained. it equaled
0:016   0:001 for the control subjects, and 0:015   0:001 for the 6033(cid:2) 52
matrix of the cancer patients. correlation is not much of a worry for the
prostate study, but other microarray studies show much larger o   values.
sections 6.4 and 8.3 of efron (2010) discuss how correlations can under-
cut id136s based on the theoretical null even when it is correct for all
the null cases.

  7 [p. 289] the program locfdr. available from cran, this is an r pro-
gram that provides fdr and fdr estimates, using both the theoretical and
empirical null distributions.

(cid:16) z(cid:0)  0

 2(cid:30)q

  8 [p. 289] ml estimation of the empirical null. let a0 be the    zero set   
(15.49), z0 the set of zi observed to be in a0, i0 their indices, and n0 the
number of zi in a0. also de   ne
(cid:0) 1
(cid:30)  0;(cid:27)0 .z/ d e

p .  0; (cid:27)0/ dz
a0g according to (15.48)   (15.49).) then z0 has density
" 

and   d (cid:25)0p .  0; (cid:27)0/:
#

(so   d prfzi 2
and likelihood

(cid:30)  0;(cid:27)0 .z/ dz

(15.62)

2(cid:25)(cid:27) 2
0 ;

!

a0

(cid:27)0

2

#"y

f  0;(cid:27)0;(cid:25)0 .z0/ d

  n0 .1 (cid:0)   /n(cid:0)n0

n
n0

;

(15.63)

(cid:30)  0;(cid:27)0 .zi /

p  0;(cid:27)0

i0

the    rst factor being the binomial id203 of seeing n0 of the zi in
a0, and the second the id155 of those zi falling within
o
  0; o(cid:27)0/, while
a0. the second factor is numerically maximized to give .
o
  d n0=n is obtained from the    rst, and then o(cid:25)0 d o
o
  0; o(cid:27)0/. this is
a partial likelihood argument, as in section 9.4; locfdr centers a0 at the
median of the n zi values, with width about twice the interquartile range
estimate of (cid:27)0.

  =p .

  9 [p. 290] the permutation null. an impressive amount of theoretical effort
concerned the    permutation t-test   : in a single-test two-sample situation,
permuting the data and computing the t statistic gives, after a great many
repetitions, a histogram dependably close to that of the standard t distri-
bution; see hoeffding (1952). this was fisher   s justi   cation for using the
standard t-test on nonnormal data.

the argument cuts both ways. permutation methods tend to recreate the

15.7 notes and details

297

theoretical null, even in situations like that of figure 15.7 where it isn   t
appropriate. the dif   culties are discussed in section 6.5 of efron (2010).
  10 [p. 293] relevance theory. suppose that in the dti example shown in fig-
ure 15.10 we want to consider only voxels with x d 60 as relevant to an
observed zi with xi d 60. now there may not be enough relevant cases to
how the complete-data estimatescfdr.zi / orcfdr.zi / can be ef   ciently mod-
adequately estimate fdr.zi / or fdr.zi /. section 10.1 of efron (2010) shows

i   ed to conform to this situation.

16

sparse modeling and the lasso

the amount of data we are faced with keeps growing. from around the
late 1990s we started to see wide data sets, where the number of variables
far exceeds the number of observations. this was largely due to our in-
creasing ability to measure a large amount of information automatically. in
genomics, for example, we can use a high-throughput experiment to auto-
matically measure the expression of tens of thousands of genes in a sam-
ple in a short amount of time. similarly, sequencing equipment allows us
to genotype millions of snps (single-nucleotide polymorphisms) cheaply
and quickly. in document retrieval and modeling, we represent a document
by the presence or count of each word in the dictionary. this easily leads to
a feature vector with 20,000 components, one for each distinct vocabulary
word, although most would be zero for a small document. if we move to
bi-grams or higher, the feature space gets really large.

in even more modest situations, we can be faced with hundreds of vari-
ables. if these variables are to be predictors in a regression or logistic re-
gression model, we probably do not want to use them all. it is likely that a
subset will do the job well, and including all the redundant variables will
degrade our    t. hence we are often interested in identifying a good subset
of variables. note also that in these wide-data situations, even linear mod-
els are over-parametrized, so some form of reduction or id173 is
essential.

in this chapter we will discuss some of the popular methods for model
selection, starting with the time-tested and worthy forward-stepwise ap-
proach. we then look at the lasso, a popular modern method that does se-
lection and shrinkage via id76. the lars algorithm ties
these two approaches together, and leads to methods that can deliver paths
of solutions.

finally, we discuss some connections with other modern big- and wide-

data approaches, and mention some extensions.

298

16.1 forward stepwise regression

299

16.1 forward stepwise regression

stepwise procedures have been around for a very long time. they were
originally devised in times when data sets were quite modest in size, in
particular in terms of the number of variables. originally thought of as the
poor cousins of    best-subset    selection, they had the advantage of being
much cheaper to compute (and in fact possible to compute for large p). we
will review best-subset regression    rst.

i

0

suppose we have a set of n observations on a response yi and a vec-
d .xi1; xi 2; : : : ; xip/, and we plan to    t a linear
tor of p predictors x
regression model. the response could be quantitative, so we can think of
   tting a linear model by least squares. it could also be binary, leading to a
linear id28 model    t by maximum likelihood. although we
will focus on these two cases, the same ideas transfer exactly to other gen-
eralized linear models, the cox model, and so on. the idea is to build a
model using a subset of the variables; in fact the smallest subset that ade-
quately explains the variation in the response is what we are after, both for
id136 and for prediction purposes. suppose our id168 for    tting
the linear model is l (e.g. sum of squares, negative log-likelihood). the
method of best-subset regression is simple to describe, and is given in al-
gorithm 16.1. step 3 is easy to state, but requires a lot of computation. for

algorithm 16.1 best-subset regression.
1 start with m d 0 and the null model o 0.x/ d o
  0, estimated by the mean
of the yi.
2 at step m d 1, pick the single variable j that    ts the response best,
in terms of the loss l evaluated on the training data, in a univariate
regression o 1.x/ d o
3 for each subset size m 2 f2; 3; : : : ; mg (with m   min.n (cid:0) 1; p/)
identify the best subset am of size m when    tting a linear model
o m.x/ d o
o
  am with m of the p variables, in terms of the
loss l.
4 use some external data or other means to select the    best    amongst these

o
  j . set a1 d fjg.

  0 c x

  0 c x

0
am

0

j

m models.

p much larger than about 40 it becomes prohibitively expensive to perform
exactly   a so-called    n-p complete    problem because of its combinatorial
complexity (there are 2p subsets). note that the subsets need not be nested:

sparse modeling and the lasso

300
the best subset of size m d 3, say, need not include both or any of the
variables in the best subset of size m d 2.

in step 4 there are a number of methods for selecting m. originally the
cp criterion of chapter 12 was proposed for this purpose. here we will
favor k-fold cross-validation, since it is applicable to all the methods dis-
cussed in this chapter.

it is interesting to digress for a moment on how cross-validation works
here. we are using it to select the subset size m on the basis of prediction
performance (on future data). with k d 10, we divide the n training obser-
vations randomly into 10 equal size groups. leaving out say group k d 1,
we perform steps 1   3 on the 9=10ths, and for each of the chosen models,
we summarize the prediction performance on the group-1 data. we do this
k d 10 times, each time with group k left out. we then average the 10
performance measures for each m, and select the value of m correspond-
ing to the best performance. notice that for each m, the 10 models o m.x/
might involve different subsets of variables! this is not a concern, since we
are trying to    nd a good value of m for the method. having identi   ed om,
we rerun steps 1   3 on the entire training set, and deliver the chosen model
o  om.x/.
as hinted above, there are problems with best-subset regression. a pri-
mary issue is that it works exactly only for relatively small p. for example,
we cannot run it on the spam data with 57 variables (at least not in 2015 on
a macbook pro!). we may also think that even if we could do the compu-
tations, with such a large search space the variance of the procedure might
be too high.

am(cid:0)1 (cid:26)

as a result, more manageable stepwise procedures were invented. for-
ward stepwise regression, algorithm 16.2, is a simple modi   cation of best-
subset, with the modi   cation occurring in step 3. forward stepwise re-
gression produces a nested sequence of models ; : : : (cid:26)
am (cid:26)
amc1 : : :. it starts with the null model, here an intercept, and adds vari-
ables one at a time. even with large p, identifying the best variable to add
at each step is manageable, and can be distributed if clusters of machines
are available. most importantly, it is feasible for large p. figure 16.1 shows
the coef   cient pro   les for forward-stepwise id75 on the spam
training data. here there are 57 input variables (relative prevalence of par-
ticular words in the document), and an    of   cial    (train, test) split of (3065,
1536) observations. the response is coded as +1 if the email was spam,
else -1. the    gure caption gives the details. we saw the spam data earlier,
in table 8.3, figure 8.7 and figure 12.2.

fitting the entire forward-stepwise id75 path as in the    gure

16.1 forward stepwise regression

301

algorithm 16.2 forward stepwise regression.
1 start with m d 0 and the null model o 0.x/ d o
  0, estimated by the mean
of the yi.
2 at step m d 1, pick the single variable j that    ts the response best,
in terms of the loss l evaluated on the training data, in a univariate
regression o 1.x/ d o
3 for each subset size m 2 f2; 3; : : : ; mg (with m   min.n (cid:0) 1; p/)
identify the variable k that when augmented with am(cid:0)1 to form am,
leads to the model o m.x/ d o
o
  am that performs best in terms
of the loss l.
4 use some external data or other means to select the    best    amongst these

o
  j . set a1 d fjg.
  0 c x

  0 c x

0
am

0

j

m models.

(when n > p) has essentially the same cost as a single least squares    t on
all the variables. this is because the sequence of models can be updated
each time a variable is added.  however, this is a consequence of the linear   1
model and squared-error loss.

suppose instead we run a forward stepwise id28. here up-
dating does not work, and the entire    t has to be recomputed by maximum
likelihood each time a variable is added. identifying which variable to add
in step 3 in principle requires    tting an .m c 1/-variable model p (cid:0) m
times, and seeing which one reduces the deviance the most. in practice, we
can use score tests which are much cheaper to evaluate.    these amount   2
to using the quadratic approximation to the log-likelihood from the    nal
iteratively reweighted least-squares (irls) iteration for    tting the model
with m terms. the score test for a variable not in the model is equivalent
to testing for the inclusion of this variable in the weighted least-squares    t.
hence identifying the next variable is almost back to the previous cases,
requiring p (cid:0) m simple regression updates.    figure 16.2 shows the test   3
misclassi   cation error for forward-stepwise id75 and logistic
regression on the spam data, as a function of the number of steps. they
both level off at around 25 steps, and have a similar shape. however, the
id28 gives more accurate classi   cations.1

although forward-stepwise methods are possible for large p, they get
tedious for very large p (in the thousands), especially if the data could sup-

1 for this example we can halve the gap between the curves by optimizing the prediction

threshold for id75.

302

sparse modeling and the lasso

figure 16.1 forward stepwise id75 on the spam
data. each curve corresponds to a particular variable, and shows
the progression of its coef   cient as the model grows. these are
plotted against the training r2, and the vertical gray bars
correspond to each step. starting at the left at step 1, the    rst
selected variable explains r2 d 0:16; adding the second increases
r2 to 0:25, etc. what we see is that early steps have a big impact
on the r2, while later steps hardly have any at all. the vertical
black line corresponds to step 25 (see figure 16.2), and we see
that after that the step-wise improvements in r2 are negligible.

port a model with many variables. however, if the ideal active set is fairly
small, even with many thousands of variables forward-stepwise selection
is a viable option.

forward-stepwise selection delivers a sequence of models, as seen in
the previous    gures. one would generally want to select a single model,
and as discussed earlier, we often use cross-validation for this purpose.
figure 16.3 illustrates using stepwise id75 on the spam data.
here the sequence of models are    t using squared-error loss on the bi-
nary response variable. however, cross-validation scores each model for
misclassi   cation error, the ultimate goal of this modeling exercise. this
highlights one of the advantages of cross-validation in this context. a con-

0.00.10.20.30.40.50.6   0.20.00.20.40.60.8forward   stepwise regressionr2 on training datacoefficients16.2 the lasso

303

figure 16.2 forward-stepwise regression on the spam data.
shown is the misclassi   cation error on the test data, as a function
of the number of steps. the brown dots correspond to linear
regression, with the response coded as -1 and +1; a prediction
greater than zero is classi   ed as +1, one less than zero as -1. the
blue dots correspond to id28, which performs better.
we see that both curves essentially reach their minima after 25
steps.

venient (differentiable and smooth) id168 is used to    t the sequence
of models. however, we can use any performance measure to evaluate the
sequence of models; here misclassi   cation error is used. in terms of the
parameters of the linear model, misclassi   cation error would be a dif   cult
and discontinuous id168 to use for parameter estimation. all we
need to use it for here is pick the best model size. there appears to be little
bene   t in going beyond 25   30 terms.

16.2 the lasso

the stepwise model-selection methods of the previous section are useful
if we anticipate a model using a relatively small number of variables, even
if the pool of available variables is very large. if we expect a moderate
number of variables to play a role, these methods become cumbersome.

llllllllllllllllllllllllllllllllllllllllllllllllllllllllll01020304050600.00.10.20.30.4spam datasteptest misclassification errorllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllforward   stepwise id75forward   stepwise id28304

sparse modeling and the lasso

figure 16.3 ten-fold cross-validated misclassi   cation errors
(green) for forward-stepwise regression on the spam data, as a
function of the step number. since each error is an average of 10
numbers, we can compute a (crude) standard error; included in
the plot are pointwise standard-error bands. the brown curve is
the misclassi   cation error on the test data.

another black mark against forward-stepwise methods is that the sequence
of models is derived in a greedy fashion, without any claimed optimality.
the methods we describe here are derived from a more principled proce-
dure; indeed they solve a id76, as de   ned below.

1

n

minimize
  02r;   2rp

we will    rst present the lasso for squared-error loss, and then the more

i   /2 subject to k  k1   t;
0

general case later. consider the constrained id75 problem

where k  k1 dpp

nx
.yi (cid:0)   0 (cid:0) x
(16.1)
id1
j  jj, the `1 norm of the coef   cient vector. since both
jd1
the loss and the constraint are convex in   , this is a id76
problem, and it is known as the lasso. the constraint k  k1   t restricts the
coef   cients of the model by pulling them toward zero; this has the effect
of reducing their variance, and prevents over   tting. ridge regression is an
earlier great uncle of the lasso, and solves a similar problem to (16.1), ex-

llllllllllllllllllllllllllllllllllllllllllllllllllllllllll010203040500.00.10.20.30.4spam datasteptest and cv misclassification errorlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllltest error10   fold cv error16.2 the lasso

305

figure 16.4 an example with    2 r2 to illustrate the difference
between ridge regression and the lasso. in both plots, the red
contours correspond to the squared-error id168, with the
unrestricted least-squares estimate o
regions show the constraints, with the lasso on the left and ridge
on the right. the solution to the constrained problem corresponds
to the value of    where the expanding loss contours    rst touch the
constraint region. due to the shape of the lasso constraint, this
will often be at a corner (or an edge more generally), as here,
which means in this case that the minimizing    has   1 d 0. for
the ridge constraint, this is unlikely to happen.

   in the center. the blue

cept the constraint is k  k2   t; ridge regression bounds the quadratic `2
norm of the coef   cient vector. it also has the effect of pulling the coef   -
cients toward zero, in an apparently very similar way. ridge regression is
discussed in section 7.3.2 both the lasso and ridge regression are shrinkage
methods, in the spirit of the james   stein estimator of chapter 7.

a big difference, however, is that for the lasso, the solution typically has
many of the   j equal to zero, while for ridge they are all nonzero. hence
the lasso does variable selection and shrinkage, while ridge only shrinks.
figure 16.4 illustrates this for    2 r2. in higher dimensions, the `1 norm
has sharp edges and corners, which correspond to coef   cient estimates zero
in   .

since the constraint in the lasso treats all the coef   cients equally, it usu-
ally makes sense for all the elements of x to be in the same units. if not, we

2 here we use the    bound    form of ridge regression, while in section 7.3 we use the

   lagrange    form. they are equivalent, in that for every    lagrange    solution, there is a
corresponding bound solution.

  ^  ^2..  1  2  1  306

sparse modeling and the lasso

typically standardize the predictors beforehand so that each has variance
one.
two natural boundary values for t in (16.1) are t d 0 and t d 1.
the former corresponds to the constant model (the    t is the mean of the
yi,)3 and the latter corresponds to the unrestricted least-squares    t. in fact,
if n > p, and o
   is the least-squares estimate, then we can replace 1 by
k o
  k1, and any value of t (cid:21) k o
  k1 is a non-binding constraint.   figure 16.5

  4

figure 16.5 the lasso id75 id173 path on the
spam data. each curve corresponds to a particular variable, and
shows the progression of its coef   cient as the id173
bound t grows. these curves are plotted against the training r2
rather than t, to make the curves comparable with the
forward-stepwise curves in figure 16.1. some values of t are
indicated at the top. the vertical gray bars indicate changes in the
active set of nonzero coef   cients, typically an inclusion. here we
see clearly the role of the `1 penalty; as t is relaxed, coef   cients
become nonzero, but in a smoother fashion than in forward
stepwise.

shows the id173 path4 for the lasso id75 problem on

3 we typically do not restrict the intercept in the model.
4 also known as the homotopy path.

0.00.10.20.30.40.50.6   0.20.00.20.4lasso regressionr2 on training datacoefficients0.000.060.201.052.453.4716.2 the lasso

307

the spam data; that is, the solution path for all values of t. this can be com-
puted exactly, as we will see in section 16.4, because the coef   cient pro-
   les are piecewise linear in t. it is natural to compare this coef   cient pro   le
with the analogous one in figure 16.1 for forward-stepwise regression. be-
cause of the control of k o
  .t /k1, we don   t see the same range as in forward
stepwise, and observe somewhat smoother behavior. figure 16.6 contrasts

figure 16.6 lasso versus forward-stepwise regression on the
spam data. shown is the misclassi   cation error on the test data,
as a function of the number of variables in the model. linear
regression is coded brown, id28 blue; hollow dots
forward stepwise, solid dots lasso. in this case it appears stepwise
and lasso achieve the same performance, but lasso takes longer to
get there, because of the shrinkage.

the prediction performance on the spam data for lasso regularized models
(id75 and id28) versus forward-stepwise models.
the results are rather similar at the end of the path; here forward stepwise
can achieve classi   cation performance similar to that of lasso regularized
id28 with about half the terms. lasso id28 (and
indeed any likelihood-based linear model) is    t by penalized maximum

llllllllllllllllllllllllllllllllllllllllllllllllllllllllll010203040500.00.10.20.30.4spam datasteptest misclassification errorllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllforward   stepwise id75forward   stepwise id28lasso id75lasso id28sparse modeling and the lasso

308

likelihood:

minimize
  02r;   2rp

1

n

nx

id1

l.yi ;   0 c   

0

xi / subject to k  k1   t:

(16.2)

here l is the negative of the log-likelihood function for the response dis-
tribution.

16.3 fitting lasso models

the lasso objectives (16.1) or (16.2) are differentiable and convex in    and
  0, and the constraint is convex in   . hence solving these problems is a
id76 problem, for which standard packages are available.
it turns out these problems have special structure that can be exploited
to yield ef   cient algorithms for    tting the entire path of solutions as in
figures 16.1 and 16.5. we will start with problem (16.1), which we rewrite
in the more convenient lagrange form:

minimize

  2rp

1

2n

ky (cid:0) x   k2 c (cid:21)k  k1:

(16.3)

here we have centered y and the columns of x beforehand, and hence
the intercept has been omitted. the lagrange and constraint versions are
equivalent, in the sense that any solution o
  .(cid:21)/ to (16.3) with (cid:21) (cid:21) 0 corre-
sponds to a solution to (16.1) with t d k o
  .(cid:21)/k1. here large values of (cid:21) will
encourage solutions with small `1 norm coef   cient vectors, and vice-versa;
(cid:21) d 0 corresponds to the ordinary least squares    t.

0

o
  i c (cid:21)sj d 0;

the solution to (16.3) satis   es the subgradient condition
j d 1; : : : ; p;

hxj ; y (cid:0) x
o
  j /; j d 1; : : : ; p. this notation means sj d sign.

(cid:0) 1
(16.4)
n
o
where sj 2 sign.
  j /
if o
  j    0, and sj 2   (cid:0)1; 1   if o
  j d 0.) we use the inner-product notation
ha; bi d a
b in (16.4), which leads to more evocative expressions. these
subgradient conditions are the modern way of characterizing solutions to
problems of this kind, and are equivalent to the karush   kuhn   tucker op-
timality conditions. from these conditions we can immediately learn some
properties of a lasso solution.
(cid:15) 1

o
  ij d (cid:21) for all members of the active set; i.e., each of the
jhxj ; y (cid:0) x
n
variables in the model (with nonzero coef   cient) has the same covari-
ance with the residuals (in absolute value).

(cid:15) 1

16.4 least-angle regression

309
o
jhxk; y (cid:0) x
  ij   (cid:21) for all variables not in the active set (i.e. with
n
coef   cients zero).
these conditions are interesting and have a big impact on computation.
suppose we have the solution o
  .(cid:21)1/ at (cid:21)1, and we decrease (cid:21) by a small
amount to (cid:21)2 < (cid:21)1. the coef   cients and hence the residuals change, in
such a way that the covariances all remain tied at the smaller value (cid:21)2. if
in the process the active set has not changed, and nor have the signs of
their coef   cients, then we get an important consequence: o
  .(cid:21)/ is linear for
(cid:21) 2   (cid:21)2; (cid:21)1  . to see this, suppose a indexes the active set, which is the
same at (cid:21)1 and (cid:21)2, and let sa be the constant sign vector. then we have

0
0

a.y (cid:0) x
a.y (cid:0) x

x

x

o
  .(cid:21)1// d nsa(cid:21)1;
o
  .(cid:21)2// d nsa(cid:21)2:

by subtracting and solving we get

(cid:0)1sa;

o
  a.(cid:21)2/ (cid:0) o

0
axa/

  a.(cid:21)1/ d n.(cid:21)1 (cid:0) (cid:21)2/.x

(16.5)
and the remaining coef   cients (with indices not in a) are all zero. this
shows that the full coef   cient vector o
  .(cid:21)/ is linear for (cid:21) 2   (cid:21)2; (cid:21)1  . in fact,
the coef   cient pro   les for the lasso are continuous and piecewise linear
over the entire range of (cid:21), with knots occurring whenever the active set
changes, or the signs of the coef   cients change.
another consequence is that we can easily determine (cid:21)max, the smallest
value for (cid:21) such that the solution o
  .(cid:21)max/ d 0. from (16.4) this can be
jhxj ; yij.
seen to be (cid:21)max d maxj
these two facts plus a few more details enable us to compute the exact
solution path for the squared-error-loss lasso; that is the topic of the next
section.

1
n

16.4 least-angle regression
we have just seen that the lasso coef   cient pro   le o
  .(cid:21)/ is piecewise lin-
ear in (cid:21), and that the elements of the active set are tied in their absolute
o
covariance with the residuals. with r.(cid:21)/ d y (cid:0) x
  .(cid:21)/, the covariance be-
tween xj and the evolving residual is cj .(cid:21)/ d 1
jhxj ; r.(cid:21)/ij. hence these
also change in a piecewise linear fashion, with cj .(cid:21)/ d (cid:21) for j 2
a, and
cj .(cid:21)/   (cid:21) for j 62
a. this inspires the least-angle regression algorithm,
given in algorithm 16.3, which exploits this linearity to    t the entire lasso
id173 path.

n

310

sparse modeling and the lasso

algorithm 16.3 least-angle regression.

.x

0
a

0
a

xa/

(cid:0)1x

d fjg, and xa,

1 standardize the predictors to have mean zero and unit `2 norm. start
with the residual r0 d y (cid:0) ny,   0 d .  1;   2; : : : ;   p/ d 0.
2 find the predictor xj most correlated with r0; i.e., with largest value for
jhxj ; r0ij. call this value (cid:21)0, de   ne the active set a
1
n
the matrix consisting of this single variable.
3 for k d 1; 2; : : : ; k d min.n (cid:0) 1; p/ do:
(a) de   ne the least-squares direction    d 1
n(cid:21)k(cid:0)1

rk(cid:0)1, and
d   , and the remaining elements
de   ne the p-vector    such that   a
are zero.
(b) move the coef   cients    from   k(cid:0)1 in the direction    toward their
least-squares solution on xa:   .(cid:21)/ d   k(cid:0)1 c .(cid:21)k(cid:0)1 (cid:0) (cid:21)/   for
0 < (cid:21)   (cid:21)k(cid:0)1, keeping track of the evolving residuals r.(cid:21)/ d
y (cid:0) x   .(cid:21)/ d rk(cid:0)1 (cid:0) .(cid:21)k(cid:0)1 (cid:0) (cid:21)/xa  .
jhx`; r.(cid:21)/ij for `    

a, identify the largest value of
(cid:21) at which a variable    catches up    with the active set; if the variable
jhx`; r.(cid:21)/ij d (cid:21). this de   nes the next
has index `, that means 1
n
   knot    (cid:21)k.
[ `,   k d   .(cid:21)k/ d   k(cid:0)1 c .(cid:21)k(cid:0)1 (cid:0) (cid:21)k/  , and rk d
d
a
y (cid:0) x   k.

(c) keeping track of 1
n

(d) set a
4 return the sequence f(cid:21)k;   kgk
0 .

in step 3(a)    d .x

0
a

(cid:0)1sa as in (16.5). we can think of the lar al-

xa/

gorithm as a democratic version of forward-stepwise regression. in forward-
stepwise regression, we identify the variable that will improve the    t the
most, and then move all the coef   cients toward the new least-squares    t.
as described in endnotes   1 and   3, this is sometimes done by computing
the inner products of each (unadjusted) variable with the residual, and pick-
ing the largest in absolute value. in step 3 of algorithm 16.3, we move the
coef   cients for the variables in the active set a toward their least-squares
   t (keeping their inner products tied), but stop when a variable not in a
catches up in inner product. at that point, it is invited into the club, and the
process continues.

step 3(c) can be performed ef   ciently because of the linearity of the
evolving inner products; for each variable not in a, we can determine ex-
actly when (in (cid:21) time) it would catch up, and hence which catches up    rst
and when. since the path is piecewise linear, and we know the slopes, this

16.4 least-angle regression

311

figure 16.7 covariance evolution on the spam data. as
variables tie for maximal covariance, they become part of the
active set. these occasions are indicated by the vertical gray bars,
again plotted against the training r2 as in figure 16.5.

means we know the path exactly without further computation between (cid:21)k(cid:0)1
and the newly found (cid:21)k.

the name    least-angle regression    derives from the fact that in step 3(b)

the    tted vector evolves in the direction x    d xa  , and its inner product
xa   d sa. since all the columns

with each active vector is given by x
of x have unit norm, this means the angles between each active vector and
the evolving    tted vector are equal and hence minimal.

0
a

the main computational burden in algorithm 16.3 is in step 3(a), com-
puting the new direction, each time the active set is updated. however, this
is easily performed using standard updating of a qr decomposition, and
hence the computations for the entire path are of the same order as that of
a single least-squares    t using all the variables.

the vertical gray lines in figure 16.5 show when the active set changes.
we see the slopes change at each of these transitions. compare with the
corresponding figure 16.1 for forward-stepwise regression.

figure 16.7 shows the the decreasing covariance during the steps of the

0.00.10.20.30.40.50.60.00.10.20.30.4r2 on training datacovariance with residuals312

sparse modeling and the lasso

lar algorithm. as each variable joins the active set, the covariances be-
come tied. at the end of the path, the covariances are all zero, because this
is the unregularized ordinary least-squares solution.

it turns out that the lar algorithm is not quite the lasso path; variables
can drop out of the active set as the path evolves. this happens when a coef-
   cient curve passes through zero. the subgradient equations (16.4) imply
that the sign of each active coef   cient matches the sign of the gradient.
however, a simple addition to step 3(c) in algorithm 16.3 takes care of the
issue:

3(c)+ lasso modi   cation: if a nonzero coef   cient crosses zero before the
next variable enters, drop it from a and recompute the joint least-squares
direction    using the reduced set.

figure 16.5 was computed using the lars package in r, with the lasso
option set to accommodate step 3(c)+; in this instance there was no need for
dropping. dropping tends to occur when some of the variables are highly
correlated.

lasso and degrees of freedom

we see in figure 16.6 (left panel) that forward-stepwise regression is more
aggressive than the lasso, in that it brings down the training mse faster.
we can use the covariance formula for df from chapter 12 to quantify the
amount of    tting at each step.

in the right panel we show the results of a simulation for estimating the
df of forward-stepwise regression and the lasso for the spam data. recall
the covariance formula

cov.yi ; oyi /:

(16.6)

nx

id1

df d 1

(cid:27) 2

these covariances are of course with respect to the sampling distribution of
the yi, which we do not have access to since these are real data. so instead
we simulate from    tted values from the full least-squares    t, by adding
gaussian errors with the appropriate (estimated) standard deviation. (this
is the parametric bootstrap calculation (12.64).)

it turns out that each step of the lar algorithm spends one df, as is
evidenced by the brown curve in the right plot of figure 16.8. forward
stepwise spends more df in the earlier stages, and can be erratic.

under some technical conditions on the x matrix (that guarantee that

16.5 fitting generalized lasso models

313

figure 16.8 left: training mean-squared error (mse) on the
spam data, for forward-stepwise regression and the lasso, as a
function of the size of the active set. forward stepwise is more
aggressive than the lasso, in that it (over-)   ts the training data
more quickly. right: simulation showing the degrees of freedom
or df of forward-stepwise regression versus lasso. the lasso uses
one df per step, while forward stepwise is greedier and uses more,
especially in the early steps. since these df were computed using
5000 random simulated data sets, we include standard-error bands
on the estimates.

lar delivers the lasso path), one can show that the df is exactly one per

step. more generally, for the lasso, if we de   necdf .(cid:21)/ d j
of the active set at (cid:21)), we have that e  cdf .(cid:21)/   d df .(cid:21)/. in other words, the
a.(cid:21)/j (the size

size of the active set is an unbiased estimate of df.

ordinary least squares with a predetermined sequence of variables spends
one df per variable. intuitively forward stepwise spends more, because it
pays a price (in some extra df) for searching.    although the lasso does   5
search for the next variable, it does not    t the new model all the way, but
just until the next variable enters. at this point, one new df has been spent.

16.5 fitting generalized lasso models

so far we have focused on the lasso for squared-error loss, and exploited
the piecewise-linearity of its coef   cient pro   le to ef   ciently compute the
entire path. unfortunately this is not the case for most other id168s,

llllllllllllllllllllllllllllllllllllllllllllllllllllllllll010203040500.40.50.60.70.80.9spam training datasteptraining msellllllllllllllllllllllllllllllllllllllllllllllllllllllllllllforward   stepwiselasso010203040500102030405060stepdfllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllforward stepwiselasso314

sparse modeling and the lasso

"

so obtaining the coef   cient path is potentially more costly. as a case in
point, we will use id28 as an example; in this case in (16.2) l
represents the negative binomial log-likelihood. writing the loss explicitly
and using the lagrange form for the penalty, we wish to solve

nx

#
yi log (cid:22)i c .1 (cid:0) yi / log.1 (cid:0) (cid:22)i /

minimize
  02r;   2rp
here we assume the yi 2 f0; 1g and (cid:22)i are the    tted probabilities

id1

n

c (cid:21)k  k1: (16.7)

(cid:0)

1

(cid:22)i d e  0cx
1 c e  0cx

0
i   

:

0
i   

(16.8)

similar to (16.4), the solution satis   es the subgradient condition

1

hxj ; y (cid:0) (cid:22)i (cid:0) (cid:21)sj d 0;

j d 1; : : : ; p;

n

(16.9)
where sj 2 sign.  j /; j d 1; : : : ; p, and (cid:22)
0 d .(cid:22)1; : : : ; (cid:22)n/.5 how-
ever, the nonlinearity of (cid:22)i in   j results in piecewise nonlinear coef   cient
pro   les. instead we settle for a solution path on a suf   ciently    ne grid of
values for (cid:21). it is once again easy to see that the largest value of (cid:21) we need
consider is

(cid:21)max d max

jhxj ; y (cid:0) ny1ij;

j

(16.10)
since this is the smallest value of (cid:21) for which o
  0 d logit. ny/. a
reasonable sequence is 100 values (cid:21)1 > (cid:21)2 > : : : > (cid:21)100 equally spaced
on the log-scale from (cid:21)max down to (cid:15)(cid:21)max, where (cid:15) is some small fraction
such as 0:001.

   d 0, and o

an approach that has proven to be surprisingly ef   cient is path-wise

coordinate descent.
(cid:15) for each value (cid:21)k, solve the lasso problem for one   j only, holding all
the others    xed. cycle around until the estimates stabilize.
(cid:15) by starting at (cid:21)1, where all the parameters are zero, we use warm starts
in computing the solutions at the decreasing sequence of (cid:21) values. the
warm starts provide excellent initializations for the sequence of solutions
o
  .(cid:21)k/.
(cid:15) the active set grows slowly as (cid:21) decreases. computational hedges that
guess the active set prove to be particularly ef   cient. if the guess is good
(and correct), one iterates coordinate descent using only those variables,

pn
id1 yi d 1

n

pn

id1 (cid:22)i .

5 the equation for the intercept is 1
n

16.5 fitting generalized lasso models

315

until convergence. one more sweep through all the variables con   rms
the hunch.

the r package glmnet employs a proximal-newton strategy at each

value (cid:21)k.
1 compute a weighted least squares (quadratic) approximation to the log-
likelihood l at the current estimate for the solution vector o
  .(cid:21)k/; this
produces a working response and observation weights, as in a regular
glm.

2 solve the weighted least-squares lasso at (cid:21)k by coordinate descent, using

warm starts and active-set iterations.

nx

we now give some details, which illustrate why these particular strate-

gies are effective. consider the weighted least-squares problem

1

wi .zi (cid:0)   0 (cid:0) x

i   /2 c (cid:21)k  k1;
0

  j

minimize

(16.11)
p
with all but   j    xed at their current values. writing ri d zi (cid:0)   0 (cid:0)

`  j xi `  `, we can recast (16.11) as

id1

2n

wi .ri (cid:0) xij   j /2 c (cid:21)j  jj;

(16.12)

a one-dimensional problem. the subgradient equation is

wi xij .ri (cid:0) xij   j / (cid:0) (cid:21) (cid:1) sign.  j / d 0:

(16.13)

the simplest form of the solution occurs if each variable is standardized to
have weighted mean zero and variance one, and the weights sum to one; in
that case we have a two-step solution.

1 compute the weighted simple least-squares coef   cient

q

  j d hxj ; riw d nx
(
  j to produce o
2 soft-threshold q
  j :
o
  j d

id1

0
sign.

  j /.j q
q

if j q

  j < (cid:21)i
  jj (cid:0) (cid:21)/ otherwise:

(16.15)

wi xij ri :

(16.14)

nx

1

2n

id1

minimize

  j

nx

id1

1

n

316

sparse modeling and the lasso

without the standardization, the solution is almost as simple but less
intuitive.

hence each coordinate-descent update essentially requires an inner prod-
uct, followed by the soft thresholding operation. this is especially conve-
nient for xij that are stored in sparse-matrix format, since then the inner
products need only visit the nonzero values. if the coef   cient is zero be-
fore the step, and remains zero, one just moves on, otherwise the model is
updated.
moving from the solution at (cid:21)k (for which jhxj ; riwj d (cid:21)k for all the
nonzero coef   cients o
  j ), down to the smaller (cid:21)kc1, one might expect all
variables for which jhxj ; riwj (cid:21) (cid:21)kc1 would be natural candidates for the
new active set. the strong rules lower the bar somewhat, and include any
variables for which jhxj ; riwj (cid:21) (cid:21)kc1 (cid:0) .(cid:21)k (cid:0) (cid:21)kc1/; this tends to rarely
make mistakes, and still leads to considerable computational savings.

apart from variations in the id168, other penalties are of interest
as well. in particular, the elastic net penalty bridges the gap between the
lasso and ridge regression. that penalty is de   ned as
c   k  k1;

.1 (cid:0)   /k  k2

p  .  / d 1

(16.16)

2

2

where the factor 1=2 in the    rst term is for mathematical convenience.
when the predictors are excessively correlated, the lasso performs some-
what poorly, since it has dif   culty in choosing among the correlated cousins.
like ridge regression, the elastic net shrinks the coef   cients of correlated
variables toward each other, and tends to select correlated variables in
groups. in this case the co-ordinate descent update is almost as simple as
in (16.15)

0
sign. q  j /.j q  jj(cid:0)  (cid:21)/

1c.1(cid:0)  /(cid:21)

if j q
  j <   (cid:21)i
otherwise;

(16.17)

(

o
  j d

again assuming the observations have weighted variance equal to one. when
   d 0, the update corresponds to a coordinate update for ridge regression.
figure 16.9 compares lasso with forward-stepwise id28 on
the spam data, here using all binarized variables and their pairwise interac-
tions. this amounts to 3061 variables in all, once degenerate variables have
been excised. forward stepwise takes a long time to run, since it enters one
variable at a time, and after each one has been selected, a new glm must
be    t. the lasso path, as    t by glmnet, includes many new variables at
each step ((cid:21)k), and is extremely fast (6 s for the entire path). for very large

16.6 post-selection id136 for the lasso

317

figure 16.9 test misclassi   cation error for lasso versus
forward-stepwise id28 on the spam data, where we
consider pairwise interactions as well as main effects (3061
predictors in all). here the minimum error for lasso is 0:057
versus 0:064 for stepwise id28, and 0:071 for the
main-effects-only lasso id28 model. the stepwise
models went up to 134 variables before encountering convergence
issues, while the lasso had a largest active set of size 682.

and wide modern data sets (millions of examples and millions of variables),
the lasso path algorithm is feasible and attractive.

16.6 post-selection id136 for the lasso

this chapter is mostly about building interpretable models for prediction,
with little attention paid to id136; indeed, id136 is generally dif   cult
for adaptively selected models.

(cid:21), which ends up selecting a subset a of size j
a

suppose we have    t a lasso regression model with a particular value for
j d k of the p avail-
able variables. the question arises as to whether we can assign p-values
to these selected variables, and produce con   dence intervals for their co-
ef   cients. a recent burst of research activity has made progress on these
important problems. we give a very brief survey here, with references ap-

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0.00.20.40.60.81.00.00.10.20.30.4spam data with interactionspercentage null deviance explained on training datatest misclassification errorllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllforward   stepwise id28lasso id28318

sparse modeling and the lasso

  6

pearing in the notes.    we discuss post-selection id136 more generally
in chapter 20.

one question that arises is whether we are interested in making infer-
ences about the population regression parameters using the full set of p
predictors, or whether interest is restricted to the population regression pa-
rameters using only the subset a.
for the    rst case, it has been proposed that one can view the coef   cients
of the selected model as an ef   cient but biased estimate of the full popu-
lation coef   cient vector. the idea is to then debias this estimate, allowing
id136 for the full vector of coef   cients. of course, sharper id136
will be available for the stronger variables that were selected in the    rst
place.

figure 16.10 hiv data. id75 of drug resistance in
hiv-positive patients on seven sites, indicators of mutations at
particular genomic locations. these seven sites were selected
from a total of 30 candidates, using the lasso. the naive 95%
con   dence intervals (dark) use standard linear-regression
id136, ignoring the selection event. the light intervals are
95% con   dence intervals, using id75, but conditioned
on the selection event.

for the second case, the idea is to condition on the selection event(s)
and hence the set a itself, and then perform conditional id136 on the

   2   1012predictorcoefficients5s8s9s16s25s26s28naive intervalselection   adjusted interval16.7 connections and extensions

319

unrestricted (i.e. not lasso-shrunk) regression coef   cients of the response
on only the variables in a. for the case of a lasso with squared-error loss,
it turns out that the set of response vectors y 2 rn that would lead to a
particular subset a of variables in the active set form a convex polytope
in rn (if we condition on the signs of the coef   cients as well; ignoring
the signs leads to a    nite union of such polytopes). this, along with del-
icate gaussian conditioning arguments, leads to truncated gaussian and
t-distrubtions for parameters of interest.

figure 16.10 shows the results of using the lasso to select variables in
an hiv study. the outcome y is a measure of the resistence to an hiv-1
treatment (nucleoside reverse transcriptase inhibitor), and the 30 predictors
are indicators of whether mutations had occurred at particular genomic
sites. lasso regression with 10-fold cross-validation selected a value of
(cid:21) d 0:003 and the seven sites indicated in the    gure had nonzero coef   -
cients. the dark bars in the    gure indicate standard 95% con   dence inter-
vals for the coef   cients of the selected variables, using id75,
and ignoring the fact that the lasso was used to select the variables. three
variables are signi   cant, and two more nearly so. the lighter bars are con-
   dence intervals in a similar regression, but conditioned on the selection
event.   we see that they are generally wider, and only variable s25 remains   7
signi   cant.

16.7 connections and extensions

there are interesting connections between lasso models and other popular
approaches to the prediction problem. we will brie   y cover two of these
here, namely support-vector machines and boosting.

lasso id28 and the id166

we show in section 19.3 that ridged id28 has a lot in com-
mon with the linear support-vector machine. for separable data the limit
as (cid:21) # 0 in ridged id28 coincides with the id166. in addition
their id168s are somewhat similar. the same holds true for `1 regu-
larized id28 versus the `1 id166   their end-path limits are the
same. in fact, due to the similarity of the id168s, their solutions are
not too different elsewhere along the path. however, the end-path behavior
is a little more complex. they both converge to the `1 maximizing margin
separator   that is, the margin is measured with respect to the `1 distance
of points to the decision boundary, or maximum absolute coordinate.  

  8

320

sparse modeling and the lasso

lasso and boosting

in chapter 17 we discuss boosting, a general method for building a com-
plex prediction model using simple building components. in its simplest
form (regression) boosting amounts to the following simple iteration:
1 inititialize b d 0 and f 0.x/ wd 0.
2 for b d 1; 2; : : : ; b:
(a) compute the residuals ri d yi (cid:0) f .xi /; i d 1; : : : ; n;
(b)    t a small regression tree to the observations .xi ; ri /n
(c) update f b.x/ d f b(cid:0)1.x/ c (cid:15) (cid:1) gb.x/.
the    smallness    of the tree limits the interaction order of the model (e.g.
a tree with only two splits involves at most two variables). the number
of terms b and the shrinkage parameter (cid:15) are both tuning parameters that
control the rate of learning (and hence over   tting), and need to be set, for
example by cross-validation.

think of as estimating a function gb.x/; and

1, which we can

in words this algorithm performs a search in the space of trees for the one
most correlated with the residual, and then moves the    tted function f b
a small amount in that direction   a process known as forward-stagewise
   tting. one can paraphrase this simple algorithm in the context of linear
regression, where in step 2(b) the space of small trees is replaced by linear
functions.
1 inititialize   0 d 0, and standardize all the variables xj ; j d 1; : : : ; p.
2 for b d 1; 2; : : : ; b:
(a) compute the residuals r d y (cid:0) x   b;
(b)    nd the predictor xj most correlated with the residual vector r; and
c (cid:15) (cid:1) sj (sj being the sign of
d   b
(c) update   b to   bc1, where   bc1

j

j

the correlation), leaving all the other components alone.

for small (cid:15) the solution paths for this least-squares boosting and the lasso
are very similar. it is natural to consider the limiting case or in   nitesimal
forward stagewise    tting, which we will abbreviate ifs. one can imagine
a scenario where a number of variables are vying to win the competition
in step 2(b), and once they are tied their coef   cients move in concert as
they each get incremented. this was in fact the inspiration for the lar
algorithm 16.3, where a represents the set of tied variables, and    is the
relative number of turns they each have in getting their coef   cients up-
dated. it turns out that ifs is often but not always exactly the lasso; it can
instead be characterized as a type of monotone lasso.  

  9

16.8 notes and details

321

not only do these connections inspire new insights and algorithms for
the lasso, they also offer insights into boosting. we can think of boosting
as    tting a monotone lasso path in the high-dimensional space of variables
de   ned by all possible trees of a certain size.

extensions of the lasso

kd1

(cid:15) the group lasso penaltypk

the idea of using `1 id173 to induce sparsity has taken hold, and
variations of these ideas have spread like wild   re in applied statistical mod-
eling. along with advances in id76, hardly any branch of
applied statistics has been left untouched. we don   t go into detail here, but
refer the reader to the references in the endnotes. instead we will end this
section with a (non-exhaustive) list of such applications, which may entice
the reader to venture into this domain.

k kk2 applies to vectors  k of parame-
ters, and selects whole groups at a time. armed with these penalties, one
can derive lasso-like schemes for including multilevel factors in linear
models, as well as hierarchical schemes for including low-order interac-
tions.
(cid:15) the graphical lasso applies `1 penalties in the problem of edge selection
in dependence graphs.
(cid:15) sparse principal components employ `1 penalties to produce compo-
nents with many loadings zero. the same ideas are applied to discrimi-
nant analysis and canonical correlation analysis.
(cid:15) the nuclear norm of a matrix is the sum of its singular values   a lasso
penalty on matrices. nuclear-norm id173 is popular in matrix
completion for estimating missing entries in a matrix.

16.8 notes and details

classical regression theory aimed for an unbiased estimate of each predic-
tor variable   s effect. modern wide data sets, often with enormous numbers
of predictors p, make that an untenable goal. the methods described here,
by necessity, use shrinkage methods, biased estimation, and sparsity.

the lasso was introduced by tibshirani (1996), and has spawned a great
deal of research. the recent monograph by hastie et al. (2015) gives a
compact summary of some of the areas where the lasso and sparsity have
been applied. the regression version of boosting was given in hastie et al.
(2009, chapter 16), and inspired the least-angle regression algorithm (efron

322

sparse modeling and the lasso

et al., 2004)   a new and more democratic version of forward-stepwise re-
gression, as well as a fast algorithm for    tting the lasso. these authors
showed under some conditions that each step of the lar algorithm corre-
sponds to one df; zou et al. (2007) show that, with a    xed (cid:21), the size of
the active set is unbiased for the df for the lasso. hastie et al. (2009) also
view boosting as    tting a lasso id173 path in the high-dimensional
space of trees.

friedman et al. (2010) developed the pathwise coordinate-descent algo-
rithm for generalized lasso problems, and provide the glmnet package
for r (friedman et al., 2009). strong rules for lasso screening are due to
tibshirani et al. (2012). hastie et al. (2015, chapter 3) show the similarity
between the `1 id166 and lasso id28.

we now give some particular technical details on topics covered in the

chapter.

  1 [p. 301] forward-stepwise computations. building up the forward-stepwise
model can be seen as a guided gram   schmidt orthogonalization (qr de-
composition). after step r, all p (cid:0) r variables not in the model are orthog-
onal to the r in the model, and the latter are in qr form. then the next
variable to enter is the one most correlated with the residuals. this is the
one that will reduce the residual sum-of-squares the most, and one requires
p (cid:0) r n-vector inner products to identify it. the regression is then updated
trivially to accommodate the chosen one, which is then regressed out of the
p (cid:0) r (cid:0) 1 remaining variables.

  2 [p. 301] iteratively reweighted least squares (irls). generalized linear
models (chapter 8) are    t by maximum-likelihood, and since the log-likeli-
hood is differentiable and concave, typically a newton algorithm is used.
the newton algorithm can be recast as an iteratively reweighted linear re-
gression algorithm (mccullagh and nelder, 1989). at each iteration one
computes a working response variable zi, and a weight per observation wi
(both of which depend on the current parameter vector o
  ). then the new-
ton update for o
   is obtained by a weighted least-squares    t of the zi on the
xi with weights wi (hastie et al., 2009, section 4.4.1).
  3 [p. 301] forward-stepwise id28 computations. although the
current model is in the form of a weighted least-squares    t, the p (cid:0) r vari-
ables not in the model cannot be kept orthogonal to those in the model (the
weights keep changing!). however, since our current model will have per-
formed a weighted qr decomposition (say), this orthogonalization can be
obtained without too much cost. we will need p (cid:0) r multiplications of an
r (cid:2) n matrix with an n vector   o..p (cid:0) r/ (cid:1) r (cid:1) n computations. an even
simpler alternative for the selection is to use the size of the gradient of the

16.8 notes and details

323
log-likelihood, which simply requires an inner product jhy (cid:0) o(cid:22)r ; xjij for
each omitted variable xj (assuming all the variables are standardized to
unit variance).

  4 [p. 306] best `1 interpolant. if p > n, then another boundary solution
becomes interesting for the lasso. for t suf   ciently large, we will be able
to achieve a perfect    t to the data, and hence a zero residual. there will
be many such solutions, so it becomes interesting to    nd the perfect-   t so-
lution with smallest value of t: the minimum-`1-norm perfect-   t solution.
this requires solving a separate convex-optimization problem.

  5 [p. 313] more on df. when the search is easy in that a variable stands out as
far superior, lar takes a big step, and forward stepwise spends close to a
unit df. on the other hand, when there is close competition, the lar steps
are small, and a unit df is spent for little progress, while forward stepwise
can spend a fair bit more than a unit df (the price paid for searching). in
fact, the dfj curve for forward stepwise can exceed p for j < p (jansen
et al., 2015).

  6 [p. 318] post-selection id136. there has been a lot of activity around
post-selection id136 for lasso and related methods, all of it since 2012.
to a large extent this was inspired by the work of berk et al. (2013), but
more tailored to the particular selection process employed by the lasso. for
the debiasing approach we look to the work of zhang and zhang (2014),
van de geer et al. (2014) and javanmard and montanari (2014). the condi-
tional id136 approach began with lockhart et al. (2014), and then was
developed further in a series of papers (lee et al., 2016; taylor et al., 2015;
fithian et al., 2014), with many more in the pipeline.

  7 [p. 319] selective id136 software. the example in figure 16.10 was pro-
duced using the r package selectiveid136 (tibshirani et al.,
2016). thanks to rob tibshirani for providing this example.

  8 [p. 319] end-path behavior of ridge and lasso id28 for sep-
arable data. the details here are somewhat technical, and rely on dual
norms. details are given in hastie et al. (2015, section 3.6.1).

  9 [p. 320] lar and boosting. least-squares boosting moves the    winning   
coef   cient in the direction of the correlation of its variable with the resid-
ual. the direction    computed in step 3(a) of the lar algorithm may have
some components whose signs do not agree with their correlations, espe-
cially if the variables are very correlated. this can be    xed by a particular
nonnegative least-squares    t to yield an exact path algorithm for ifs; de-
tails can be found in efron et al. (2004).

17

id79s and boosting

in the modern world we are often faced with enormous data sets, both
in terms of the number of observations n and in terms of the number of
variables p. this is of course good news   we have always said the more
data we have, the better predictive models we can build. well, we are there
now   we have tons of data, and must    gure out how to use it.

although we can scale up our software to    t the collection of linear and
generalized linear models to these behemoths, they are often too modest
and can fall way short in terms of predictive power. a need arose for some
general purpose tools that could scale well to these bigger problems, and
exploit the large amount of data by    tting a much richer class of functions,
almost automatically. id79s and boosting are two relatively re-
cent innovations that    t the bill, and have become very popular as    out-the-
box    learning algorithms that enjoy good predictive performance. random
forests are somewhat more automatic than boosting, but can also suffer a
small performance hit as a consequence.

these two methods have something in common: they both represent the
   tted model by a sum of regression trees. we discuss trees in some detail
in chapter 8. a single regression tree is typically a rather weak prediction
model; it is rather amazing that an ensemble of trees leads to the state of
the art in black-box predictors!

we can broadly describe both these methods very simply.

id79 grow many deep regression trees to randomized versions
of the training data, and average them. here    randomized    is a wide-
ranging term, and includes bootstrap sampling and/or subsampling of
the observations, as well as subsampling of the variables.

boosting repeatedly grow shallow trees to the residuals, and hence build

up an additive model consisting of a sum of trees.

the basic mechanism in id79s is variance reduction by averag-
ing. each deep tree has a high variance, and the averaging brings the vari-

324

17.1 id79s

325

ance down. in boosting the basic mechanism is bias reduction, although
different    avors include some variance reduction as well. both methods
inherit all the good attributes of trees, most notable of which is variable
selection.

17.1 id79s

suppose we have the usual setup for a regression problem, with a training
set consisting of an n(cid:2) p data matrix x and an n-vector of responses y. a
tree (section 8.4)    ts a piecewise constant surface or.x/ over the domain x

by recursive partitioning. the model is built in a greedy fashion, each time
creating two daughter nodes from a terminal node by de   ning a binary split
using one of the available variables. the model can hence be represented
by a binary tree. part of the art in using regression trees is to know how
deep to grow the tree, or alternatively how much to prune it back. typi-
cally that is achieved using left-out data or cross-validation. figure 17.1
shows a tree    t to the spam training data. the splitting variables and split
points are indicated. each node is labeled as spam or ham (not spam;
see footnote 7 on page 115). the numbers beneath each node show mis-
classi   ed/total. the overall misclassi   cation error on the test data is 9:3%,
which compares poorly with the performance of the lasso (figure 16.9:
7:1% for linear lasso, 5:7% for lasso with interactions). the surface or.x/
here is clearly complex, and by its nature represents a rather high-order
interaction (the deepest branch is eight levels, and involves splits on eight
different variables). despite the promise to deliver interpretable models,
this bushy tree is not easy to interpret. nevertheless, trees have some desir-
able properties. the following lists some of the good and bad properties of
trees.

l trees automatically select variables; only variables used in de   ning splits

are in the model.

l tree-growing algorithms scale well to large n; growing a tree is a divide-

and-conquer operation.

l trees handle mixed features (quantitative/qualitative) seaid113ssly, and

can deal with missing data.

l small trees are easy to interpret.
m large trees are not easy to interpret.
m trees do not generally have good prediction performance.

trees are inherently high-variance function estimators, and the bushier
they are, the higher the variance. the early splits dictate the architecture of

326

id79s and boosting

figure 17.1 regression tree    t to the binary spam data, a bigger
version of figure 8.7. the initial trained tree was far bushier than
the one displayed; it was then optimally pruned using 10-fold
cross-validation.

the tree. on the other hand, deep bushy trees localize the training data (us-
ing the variables that matter) to a relatively small region around the target
point. this suggests low bias. the idea of id79s (and its predeces-
sor id112) is to grow many very bushy trees, and get rid of the variance
by averaging. in order to bene   t from averaging, the individual trees should
not be too correlated. this is achieved by injecting some randomness into
the tree-growing process. id79s achieve this in two ways.

600/1536280/1177180/1065 80/861 80/652 77/423 20/238 19/236  1/2 57/185 48/113 37/101  1/12  9/72  3/229  0/209100/204 36/123 16/94 14/89  3/5  9/29 16/81  9/112  6/109  0/3 48/359 26/337 19/110 18/109  0/1  7/227  0/22spamspamspamspamspamspamspamspamspamspamspamspamhamhamhamhamhamhamhamhamhamhamhamhamhamhamhamhamhamhamhamhamhamch$<0.0555remove<0.06ch!<0.191george<0.005hp<0.03capmax<10.5receive<0.125edu<0.045our<1.2capave<2.7505free<0.065business<0.145george<0.15hp<0.405capave<2.9071999<0.58ch$>0.0555remove>0.06ch!>0.191george>0.005hp>0.03capmax>10.5receive>0.125edu>0.045our>1.2capave>2.7505free>0.065business>0.145george>0.15hp>0.405capave>2.9071999>0.5817.1 id79s

327

1 bootstrap: each tree is grown to a bootstrap resampled training data set,

which makes them different and somewhat decorrelates them.

2 split-variable randomization: each time a split is to be performed, the
search for the split variable is limited to a random subset of m of the p
variables. typical values of m are

p or p=3.

p

when m d p, the randomization amounts to using only step 1, and was
an earlier ancestor of id79s called id112. in most examples the
second level of randomization pays dividends.

b.

algorithm 17.1 id79.
1 given training data set d d .x ; y/. fix m   p and the number of trees
2 for b d 1; 2; : : : ; b, do the following.
(a) create a bootstrap version of the training data d

(cid:3)
b , by randomly sam-
pling the n rows with replacement n times. the sample can be repre-
sented by the bootstrap frequency vector w

(b) grow a maximal-depth tree orb.x/ using the data in d
of the p features at random prior to making each split.

(cid:3)
b , sampling m

(cid:3)
b.

(c) save the tree, as well as the bootstrap sampling frequencies for each

of the training observations.

3 compute the random-forest    t at any prediction point x0 as the average

bx

bd1

orrf.x0/ d 1

b

orb.x0/:

4 compute the oobi error for each response observation yi in the training
data, by using the    t or .i /
, obtained by averaging only those orb.xi / for
which observation i was not in the bootstrap sample. the overall oob
error is the average of these oobi.

rf

algorithm 17.1 gives some of the details; some more are given in the

technical notes.  

the package randomforest in r sets as a default m d p
id79s are easy to use, since there is not much tuning needed.
p for clas-
si   cation trees, and m d p=3 for regression trees, but one can use other
values. with m d 1 the split variable is completely random, so all vari-
ables get a chance. this will decorrelate the trees the most, but can create
bias, somewhat similar to that in ridge regression. figure 17.2 shows the

  1

328

id79s and boosting

figure 17.2 test misclassi   cation error of id79s on the
spam data, as a function of the number of trees. the red curve
selects m d 7 of the p d 57 features at random as candidates for
the split variable, each time a split is made. the blue curve uses
m d 57, and hence amounts to id112. both id112 and
id79s outperform the lasso methods, and a single tree.

misclassi   cation performance of a id79 on the spam test data, as
a function of the number of trees averaged. we see that in this case, after
a relatively small number of trees (500), the error levels off. the number
b of trees averaged is not a real tuning parameter; as with the bootstrap
(chapters 10 and 11), we need a suf   cient number for the estimate to sta-
bilize, but cannot over   t by having too many.

id79s have been described as adaptive nearest-neighbor esti-
mators   adaptive in that they select predictors. a k-nearest-neighbor esti-
mate    nds the k training observations closest in feature space to the target
point x0, and averages their responses. each tree in the id79 drills
down by recursive partitioning to pure terminal nodes, often consisting of a
single observation. hence, when evaluating the prediction from each tree,
orb.x0/ d y` for some `, and for many of the trees this could be the same

0.000.020.040.060.08id79 on the spam datanumber of treestest error15001000150020002500id112id79single treelassolasso (interaction)17.1 id79s

329

`. from the whole collection of b trees, the number of distinct `s can be
fairly small. since the partitioning that reaches the terminal nodes involves
only a subset of the predictors, the neighborhoods so de   ned are adaptive.

out-of-bag error estimates

id79s deliver cross-validated error estimates at virtually no ex-
tra cost. the idea is similar to the bootstrap error estimates discussed in
chapter 10. the computation is described in step 4 of algorithm 17.1.
in making the prediction for observation pair .xi ; yi /, we average all the
random-forest trees orb.xi / for which that pair is not in the corresponding
bootstrap sample:

figure 17.3 out-of-bag misclassi   cation error estimate for the
spam data (blue) versus the test error (red), as a function of the
number of trees.

x

b w w

(cid:3)

b i

d0

or .i /
rf .xi / d 1

bi

orb.xi /;

(17.1)

where bi is the number of times observation i was not in the bootstrap
(cid:0)1b (cid:25) 0:37b). we then compute the oob
sample (with expected value e
nx
error estimate

erroob d 1

l  yi ; or .i /

rf .xi /  ;

(17.2)

n

id1

0.000.020.040.060.08number of treesmisclassification error15001000150020002500oob errortest error330

id79s and boosting

where l is the id168 of interest, such as misclassi   cation or squared-
error loss. if b is suf   ciently large (about three times the number needed
for the id79 to stabilize), we can see that the oob error estimate
is equivalent to leave-one-out cross-validation error.

standard errors

nx

  is given by

bvjack.

we can use very similar ideas to estimate the variance of a random-forest
prediction, using the jackknife variance estimator (see (10.6) in chapter 10).
if o
  is a statistic estimated using all n training observations, then the jack-
knife estimate of the variance of o
  / d n (cid:0) 1
o

 2
 .i / is the estimate using all but observation i, and o
 .(cid:1)/ d 1
 2

o
where o
 .i /.
the natural jackknife variance estimate for a random-forest prediction

at x0 is obtained by simply plugging into this formula:

(cid:16) o
 .i / (cid:0) o
 .(cid:1)/

bvjack.orrf.x0// d n (cid:0) 1

rf .x0/ (cid:0) orrf.x0/

(cid:16)or .i /

nx

p

(17.3)

(17.4)

id1

n

n

;

:

i

n

id1

this formula is derived under the b d 1 setting, in which case orrf.x0/ is
an expectation under bootstrap sampling, and hence is free of monte carlo
variability. this also makes the distinction clear: we are estimating the sam-
pling variability of a random-forest prediction orrf.x0/, as distinct from any
monte carlo variation. in practice b is    nite, and expression (17.4) will
have monte carlo bias and variance. all of the or .i /
rf .x0/ are based on b
bootstrap samples, and they are hence noisy versions of their expectations.
since the n quantities summed in (17.4) are squared, by jensen   s inequal-
ity we will have positive bias (and it turns out that this bias dominates the
monte carlo variance). hence one would want to use a much larger value
of b when estimating variances, than was used in the original random-
forest    t. alternatively, one can use the same b bootstrap samples as were
used to    t the id79, along with a bias-corrected version of the
jackknife variance estimate:  

bvu
jack.orrf.x0// dbvjack.orrf.x0// (cid:0) .e (cid:0) 1/

ov.x0/;

n

b

(17.5)

  2

17.1 id79s

331

figure 17.4 jackknife standard error estimates (with bias
correction) for the id203 estimates in the spam test data.
the points labeled red were misclassi   cations, and tend to
concentrate near the decision boundary (0.5).

where e d 2:718 : : :, and

ov.x0/ d 1

b

bx

bd1

.orb.x0/ (cid:0) orrf.x0//2 ;

(17.6)

the bootstrap estimate of the variance of a single random-forest tree. all
these quantities are easily computed from the output of a id79, so
they are immediately available. figure 17.4 shows the predicted probabil-
ities and their jackknife estimated standard errors for the spam test data.
the estimates near the decision boundary tend to have higher standard er-
rors.

variable-importance plots

a id79 is something of a black box, giving good predictions
but usually not much insight into the underlying surface it has    t. each
random-forest tree orb will have used a subset of the predictors as split-
ting variables, and each tree is likely to use overlapping but not necessarily

lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0.00.20.40.60.81.00.000.050.100.150.200.250.30id203 predictionstandard error estimate332

id79s and boosting

figure 17.5 variable-importance plots for id79s    t to
the spam data. on the left we have the m d 7 id79; due
to the split-variable randomization, it spreads the importance
among the variables. on the right is the m d 57 id79 or
id112, which focuses on a smaller subset of the variables.

identical subsets. one might conclude that any variable never used in any
of the trees is unlikely to be important, but we would like a method of
assessing the relative importance of variables that are included in the en-
semble. variable-importance plots    t this bill. whenever a variable is used
in a tree, the algorithm logs the decrease in the split-criterion due to this
split. these are accumulated over all the trees, for each variable, and sum-
marized as relative importance measures. figure 17.5 demonstrates this on
the spam data. we see that the m d 7 id79, by virtue of the
split-variable randomization, spreads the importance out much more than
id112, which always gets to pick the best variable for splitting. in this
sense small m has some similarity to ridge regression, which also tends to
share the coef   cients evenly among correlated variables.

!$removefreecapaveyourcapmaxhpcaptotmoneyyouourgeorge000edubusinesshpl1999internet(willallrereceiveemailmailover;meeting650addressorderlabspmpeoplecreditmake#technologydatafont85[labtelnetreportoriginalprojectconferenceaddressesdirect4158573dcspartstableid79 m = 7020406080100variable importance$!removehpcapavefreecaptotcapmaxgeorgeyoueduyourourbusinessmoneywill(reemail000internetreceivemailmeeting1999overpm;dataorderfontpeopleallmakeconference650reportaddresshploriginaltechnologylab3dlabs[#creditcs85telnetpartsproject857addressesdirect415tableid112 m = 57020406080100variable importance17.2 boosting with squared-error loss

333

17.2 boosting with squared-error loss

boosting was originally proposed as a means for improving the perfor-
mance of    weak learners    in binary classi   cation problems. this was achiev-
ed through resampling training points   giving more weight to those which
had been misclassi   ed   to produce a new classi   er that would boost the
performance in previously problematic areas of feature space. this pro-
cess is repeated, generating a stream of classi   ers, which are ultimately
combined through voting1 to produce the    nal classi   er. the prototypical
weak learner was a decision tree.

boosting has evolved since this earliest invention, and different    avors
are popular in statistics, computer science, and other areas of pattern recog-
nition and prediction. we focus on the version popular in statistics   gradient
boosting   and return to this early version later in the chapter. algorithm 17.2

algorithm 17.2 gradient boosting with squared-error loss.
shrinkage factor (cid:15) and the tree depth d. set the initial    t bg0   0, and
1 given a training sample d d .x ; y/. fix the number of steps b, the
the residual vector r d y.
2 for b d 1; 2; : : : ; b repeat:
(a) fit a regression tree qgb to the data .x ; r/, grown best-   rst to depth
d: this means the total number of splits are d, and each successive
(b) update the    tted model with a shrunken version of qgb:bgb dbgb(cid:0)1 c
split is made to that terminal node that yields the biggest reduction in
residual sum of squares.
ogb; with ogb d (cid:15) (cid:1) qgb:
3 return the sequence of    tted functionsbgb; b d 1; : : : ; b.
(c) update the residuals accordingly: ri d ri (cid:0) ogb.xi /; i d 1; : : : ; n:

gives the most basic version of gradient boosting, for squared-error loss.
this amounts to building a model by repeatedly    tting a regression tree
to the residuals. importantly, the tree is typically quite small, involving
a small number d of splits   it is indeed a weak learner. after each tree
has been grown to the residuals, it is shrunk down by a factor (cid:15) before
it is added to the current model; this is a means of slowing the learning
process. despite the obvious similarities with a id79, boosting is
different in a fundamental way. the trees in a id79 are identically
1 each classi   er ocb.x0/ predicts a class label, and the class with the most    votes    wins.

334

id79s and boosting

figure 17.6 test performance of a boosted regression-tree model
   t to the als training data, with n d 1197 and p d 369. shown
is the mean-squared error on the 625 designated test observations,
as a function of the number of trees. here the depth d d 4 and
(cid:15) d 0:02. boosting achieves a lower test mse than a random
forest. we see that as the number of trees b gets large, the test
error for boosting starts to increase   a consequence of
over   tting. the id79 does not over   t. the dotted blue
horizontal line shows the best performance of a linear model,    t
by the lasso. the differences are less dramatic than they appear,
since the vertical scale does not extend to zero.

distributed   the same (random) treatment is repeatedly applied to the same
data. with boosting, on the other hand, each tree is trying to amend errors
made by the ensemble of previously grown trees. the number of terms b
is important as well, because unlike id79s, a boosted regression
model can over   t if b is too large. hence there are three tuning parame-
ters, b, d and (cid:15), and each can change the performance of a boosted model,
sometimes considerably.

figure 17.6 shows the test performance of boosting on the als data.   
these data represent measurements on patients with amyotrophic lateral
sclerosis (lou gehrig   s disease). the goal is to predict the rate of pro-
gression of an als functional rating score (frs). there are 1197 training

  3

0.250.260.270.280.290.30number of treesmean   squared error1100200300400500boostid79lasso17.2 boosting with squared-error loss

335

measurements on 369 predictors and the response, with a corresponding
test set of size 625 observations.

as is often the case, boosting slightly outperforms a id79 here,
but at a price. careful tuning of boosting requires considerable extra work,
with time-costly rounds of cross-validation, whereas id79s are al-
most automatic. in the following sections we explore in more detail some
of the tuning parameters. the r package gbm implements gradient boost-
ing, with some added bells and whistles. by default it grows each new tree
on a 50% random sub-sample of the training data. apart from speeding up
the computations, this has a similar effect to id112, and results in some
variance reduction in the ensemble.

we can also compute a variable-importance plot, as we did for random
forests; this is displayed in figure 17.7 for the als data. only 267 of the
369 variables were ever used, with one variable onset.delta standing
out ahead of the others. this measures the amount of time that has elapsed
since the patient was    rst diagnosed with als, and hence a larger value
will indicate a slower progression rate.

tree depth and interaction order

tree depth d is an important parameter for gradient boosted models, and
the right choice will depend on the data at hand. here depth d d 4 appears
to be a good choice on the test data. without test data, we could use cross-
validation to make the selection. apart from a general complexity measure,
suppose we have a    tted boosted modelbgb .x/, using b trees. denote by
tree depth also controls the interaction order of the model.2 the easiest
case is with d d 1, where each tree consists of a single split (a stump).
d f1; 2; : : : ; bg the indices of the trees that made the single split
bj  
using variable j , for j d 1; : : : ; p. these bj are disjoint (some b` can be

b

2 a .k (cid:0) 1/th-order interaction is also known as a k-way interaction. hence an order-one
interaction model has two-way interactions, and an order-zero model is additive.

336

id79s and boosting

figure 17.7 variable importance plot for the als data. here 267
of the 369 variables were used in the ensemble. there are too
many variables for the labels to be visible, so this plot serves as a
visual guide. variable onset.delta has relative importance
100 (the lowest red bar), more than double the next two at around
40 (last.slope.weight and alsfrs.score.slope).
however, the importances drop off slowly, suggesting that the
model requires a signi   cant fraction of the variables.

empty), andsp

jd1 bj d

bd1

b. then we can write
ogb.x/
x

bgb .x/ d bx
d px
d px

b2
o
fj .xj /:

jd1

bj

jd1

ogb.x/

(17.7)

onset.deltalast.slope.weightalsfrs.score.slopelast.slope.bp.systolicmean.slope.svc.literssum.slope.alsfrs.scoremean.slope.weightlast.slope.fvc.litersmeansquares.alsfrs.scoresum.slope.fvc.literslast.alsfrs.scorefvc.liters.slopesum.bp.diastolicweight.slopemean.speechmax.slope.fvc.litersmean.slope.handwritingslope.bp.systolic.slopemean.slope.fvc.litersmin.slope.alsfrs.scoresd.fvc.litersmeansquares.climbing.stairssd.salivationlast.speechmin.slope.bp.systolicmean.alsfrs.scoremax.slope.salivationsum.slope.climbing.stairslast.fvc.literssum.fvc.litersmean.slope.alsfrs.scorebp.diastolic.slopelast.slope.handwritingmin.slope.fvc.litersspeech.slopesd.slope.alsfrs.scoremeansquares.slope.weightslope.handwriting.slopeslope.weight.slopesum.alsfrs.scoreslope.turning.slopelast.slope.swallowingsum.slope.speechsum.weightmax.fvc.literslast.svc.liters.datemax.bp.diastolicmin.alsfrs.scoremean.climbing.stairsmax.dressingmeansquares.bp.diastoliclast.weightsum.slope.weightmeansquares.resp.rateslope.fvc.liters.slopemean.slope.climbing.stairsswallowing.slopesum.slope.handwritinglast.slope.alsfrs.score.datemeansquares.dressingsd.bp.diastolicclimbing.stairs.slopeslope.alsfrs.score.slopelast.slope.svc.liters.datesum.handwritingmean.slope.speechsum.slope.dressingsd.bp.systolicmin.slope.cuttingmax.weightlast.slope.alsfrs.scoremean.fvc.litersslope.bp.diastolic.slopeslope.salivation.slopemeansquares.slope.dressingmin.slope.speechsd.slope.fvc.litersmax.alsfrs.scoresum.slope.bp.systolicmeansquares.slope.bp.diastolicsd.slope.bp.systolicslope.dressing.slopemin.slope.dressinglast.slope.climbing.stairsmax.slope.alsfrs.scoremax.slope.bp.systolicsd.dressingsum.climbing.stairssd.slope.weightslope.resp.rate.slopesd.resp.ratemean.slope.bp.systoliclast.slope.weight.datemax.heightlast.slope.svc.litersmin.bp.systolicsd.slope.turningsum.slope.salivationfirst.slope.fvc.liters.datelast.bp.diastolicsd.slope.svc.literssd.slope.dressingmeansquares.slope.fvc.litersmeansquares.speechmeansquares.fvc.literslast.alsfrs.score.datesd.slope.resp.ratemeansquares.slope.cuttingmin.slope.turningmin.fvc.litersslope.swallowing.slopelast.slope.bp.diastolicmax.slope.weightsd.slope.swallowinglast.slope.resp.rate.datemean.turningmean.bp.diastolicsum.dressingmeansquares.cuttingsum.resp.ratemeansquares.slope.turningbp.systolic.slopemean.slope.dressingsd.cuttingmean.slope.bp.diastolicsum.heightsalivation.slopemin.slope.weightfirst.slope.weight.datesum.slope.resp.ratemax.slope.swallowinglast.swallowingmean.slope.cuttingmax.slope.svc.litersmean.slope.turningmax.cuttinglast.turningmean.slope.resp.ratesum.bp.systolicmeansquares.slope.climbing.stairsfirst.slope.resp.rate.datesd.slope.salivationslope.cutting.slopelast.resp.rate.datesd.alsfrs.scoresd.slope.cuttingsite.of.onset.onset..bulbarfirst.slope.svc.liters.datemin.turningsd.slope.bp.diastolicmin.cuttingmax.slope.resp.rateagesum.slope.swallowingsum.swallowingsd.speechlast.dressingfirst.slope.alsfrs.score.datemean.slope.salivationmeansquares.handwritingmin.weightlast.bp.systolicmean.salivationmeansquares.slope.alsfrs.scoremin.slope.climbing.stairsmean.slope.swallowinglast.slope.fvc.liters.datesum.salivationmin.slope.salivationmean.dressingslope.climbing.stairs.slopemeansquares.slope.walkingmeansquares.slope.bp.systolicresp.rate.slopelast.slope.dressinglast.slope.resp.ratemax.slope.dressingsex.femalemin.swallowingmax.bp.systolicmin.bp.diastolicmeansquares.slope.handwritingmin.slope.bp.diastolicfirst.slope.bp.diastolic.datemean.handwritinglast.height.datesd.svc.literssd.slope.handwritingmean.slope.walkingmean.cuttingsum.slope.bp.diastoliclast.slope.salivationmin.slope.swallowinglast.fvc.liters.datewalking.slopesum.cuttingmean.swallowingsd.swallowingsum.speechmax.slope.climbing.stairshandwriting.slopemean.svc.litersmax.speechmeansquares.salivationmeansquares.slope.svc.literslast.slope.bp.diastolic.datefirst.resp.rate.datemeansquares.slope.salivationmean.resp.ratemax.slope.bp.diastolicmin.speechslope.speech.slopemean.weightsex.malemax.svc.literssum.turningmax.slope.turninglast.svc.litersmax.swallowingmeansquares.turningmax.handwritingmeansquares.swallowingsd.slope.climbing.stairsmin.climbing.stairssvc.liters.slopelast.cuttingmeansquares.bp.systoliclast.slope.turningmax.salivationlast.weight.datemeansquares.slope.resp.ratemeansquares.weightmeansquares.slope.speechmeansquares.slope.swallowingmax.walkinglast.handwritingnum.slope.weight.visitssum.slope.cuttinglast.resp.ratesd.weightsd.climbing.stairssum.slope.turningsum.walkingslope.walking.slopeno.height.datafirst.alsfrs.score.datemin.salivationmin.slope.resp.ratefirst.slope.bp.systolic.datelast.slope.walkingstudy.arm.placebofirst.slope.height.datemin.slope.handwritinglast.climbing.stairssd.handwritingsymptom.weaknessmax.slope.handwritinglast.slope.cuttingmax.turningmin.slope.svc.litersdressing.slopesd.slope.speechmothernum.slope.resp.rate.visitssymptom.atrophysymptom.swallowingcutting.slopenum.slope.bp.systolic.visitslessthan2.slope.bp.diastolicnum.slope.bp.diastolic.visitsno.slope.resp.rate.datalessthan2.slope.resp.rateno.slope.weight.datalessthan2.slope.weightslope.svc.liters.slopeno.slope.fvc.liters.datalessthan2.slope.fvc.litersnum.slope.fvc.liters.visitssd.slope.walkingsum.slope.walkingmin.slope.walkingmax.slope.walkingmax.slope.cuttinglast.slope.speechmax.slope.speechlessthan2.slope.alsfrs.scorenum.slope.alsfrs.score.visitsnum.bp.systolic.visitsmean.bp.systolicno.bp.diastolic.datalessthan2.bp.diastoliclast.bp.diastolic.datefirst.bp.diastolic.datenum.bp.diastolic.visitsno.resp.rate.datalessthan2.resp.ratenum.resp.rate.visitsmin.resp.ratemax.resp.ratesd.heightmeansquares.heightfirst.height.datenum.height.visitsmean.heightmin.heightlessthan2.weightfirst.weight.datenum.weight.visitsmeansquares.svc.literssum.svc.litersnum.svc.liters.visitsmin.svc.litersno.fvc.liters.datalessthan2.fvc.litersfirst.fvc.liters.datenum.fvc.liters.visitsmax.climbing.stairssd.walkingmeansquares.walkingmean.walkinglast.walkingmin.walkingturning.slopesd.turningmin.dressingmin.handwritinglast.salivationno.alsfrs.score.datalessthan2.alsfrs.scorenum.alsfrs.score.visitsstudy.arm.activeneurological.disease.stroke.hemorrhagicneurological.disease.stroke.ischemicneurological.disease.brain.tumorneurological.disease.alsneurological.disease.datneurological.disease.parkinson.s.diseaseneurological.disease.dementia.nosneurological.disease.stroke.nosneurological.disease.otherfamilybrothersisterdaughtersonuncle..paternal.uncle..maternal.unclegrandmother..maternal.grandmothergrandfather..maternal.fathercousinaunt..maternal.auntrace...otherrace...caucasianrace...black.african.americanrace...asiansite.of.onset.onset..limb.and.bulbarsite.of.onset.onset..limbsymptom..symptom.stiffnesssymptom.sensory_changessymptom.fasciculationssymptom.crampssymptom.gait_changessymptom.othersymptom.speech020406080100variable   importance plot for boosting on the  als data17.2 boosting with squared-error loss

337

figure 17.8 als test error for boosted models with different
depth parameters d, and all using the same shrinkage parameter
(cid:15) d 0:02. it appears that d d 1 is inferior to the rest, with d d 4
about the best. with d d 7, over   tting begins around 200 trees,
with d d 4 around 300, while neither of the other two show
evidence of over   tting by 500 trees.

hence boosted stumps    ts an additive model, but in a fully adaptive way.
it selects variables, and also selects how much action to devote to each
variable. we return to additive models in section 17.5. figure 17.9 shows
the three functions with highest relative importance. the    rst function con-
   rms that a longer time since diagnosis (more negative onset.delta)
predicts a slower decline. last.slope.weight is the difference in
body weight at the last two visits   again positive is good. likewise for
alsfrs.score.slope, which measures the local slope of the frs
score after the    rst two visits.
in a similar way, boosting with d d 2    ts a two-way interaction model;
each tree involves at most two variables. in general, boosting with d d k
leads to a .k (cid:0) 1/th-order interaction model. interaction order is perhaps a
more natural way to think of model complexity.

0.250.260.270.280.290.30number of treesmean   squared error1100200300400500depth1247338

id79s and boosting

figure 17.9 three of the    tted functions (17.7) for the als data,
in a boosted stumps model (d d 1), each centered to average zero
over the training data. in terms of the outcome, bigger is better
(slower decline in frs). the    rst function con   rms that a longer
time since diagnosis (more negative value of onset.delta)
predicts a slower decline. the variable last.slope.weight
is the difference in body weight at the last two visits   again
positive is good. likewise for alsfrs.score.slope, which
measures the local slope of the frs score after the    rst two visits.

shrinkage

the shrinkage parameter (cid:15) controls the rate at which boosting    ts   and
hence over   ts   the data. figure 17.10 demonstrates the effect of shrink-
age on the als data. the under-shrunk ensemble (red) quickly over   ts the
data, leading to poor validation error. the blue ensemble uses a shrink-
age parameter 20 times smaller, and reaches a lower validation error. the
downside of a very small shrinkage parameter is that it can take many trees
to adequately    t the data. on the other hand, the shrunken    ts are smoother,
take much longer to over   t, and hence are less sensitive to the stopping
point b.

17.3 gradient boosting

we now turn our attention to boosting models using other than square-error
loss. we focus on the family of generalized models generated by the expo-
nential family of response distributions (see chapter 8). the most popular
and relevant in this class is id28, where we are interested in
modeling (cid:22).x/ d pr.y d 1jx d x/ for a bernoulli response variable.

   2000   10000   0.3   0.2   0.10.00.10.2onset.deltafitted function   20   1001020   0.3   0.2   0.10.00.10.2last.slope.weightfitted function   10   6   4   2024   0.3   0.2   0.10.00.10.2alsfrs.score.slopefitted function17.3 gradient boosting

339

figure 17.10 boosted d d 3 models with different shrinkage
parameters,    t to a subset of the als data. the solid curves are
validation errors, the dashed curves training errors, with red for
(cid:15) d 0:5 and blue for (cid:15) d 0:02. with (cid:15) d 0:5, the training error
drops rapidly with the number of trees, but the validation error
starts to increase rapidly after an initial decrease. with (cid:15) d 0:02
(25 times smaller), the training error drops more slowly. the
validation error also drops more slowly, but reaches a lower
minimum (the horizontal dotted line) than the (cid:15) d 0:5 case. in
this case, the slower learning has paid off.

the idea is to    t a model of the form

(cid:21).x/ d gb .x/ d bx

bd1

gb.xi (cid:13)b/;

(17.8)

where (cid:21).x/ is the natural parameter in the conditional distribution of y jx d
x, and the gb.xi (cid:13)b/ are simple functions such as shallow trees. here we
have indexed each function by a parameter vector (cid:13)b; for trees these would
capture the identity of the split variables, their split values, and the con-
stants in the terminal nodes. in the case of the bernoulli response, we have

 pr.y d 1jx d x/

pr.y d 0jx d x/

 

(cid:21).x/ d log

;

(17.9)

0.00.10.20.30.4number of treesmean   squared error150100150200250  =0.02  =0.50trainvalidate340

id79s and boosting

the logit link function that relates the mean to the natural parameter. in gen-
eral, if (cid:22).x/ d e.y jx d x/ is the conditional mean, we have    (cid:22).x/   d
(cid:21).x/, where   is the monotone link function.

algorithm 17.3 outlines a general strategy for building a model by for-
ward stagewise    tting. l is the id168, such as the negative log-
likelihood for bernoulli responses, or squared-error for gaussian responses.
although we are thinking of trees for the simple functions g.xi (cid:13) /, the
ideas generalize. this algorithm is easier to state than to implement. for

algorithm 17.3 generalized boosting by forward-stagewise
fitting
1 de   ne the class of functions g.xi (cid:13) /. start with og0.x/ d 0, and set b
and the shrinkage parameter (cid:15) > 0.
2 for b d 1; : : : ; b repeat the following steps.
(a) solve

nx

(cid:16)
yi ;bgb(cid:0)1.xi / c g.xii (cid:13) /

 

l

(b) updatebgb.x/ dbgb(cid:0)1.x/ c ogb.x/; with ogb.x/ d (cid:15) (cid:1) g.xi o(cid:13)b/.
3 return the sequencebgb.x/; b d 1; : : : ; b.

id1

(cid:13)

o(cid:13)b d arg min

nx

squared-error loss, at each step we need to solve

minimize

.ri (cid:0) g.xii (cid:13) //2 ;

(17.10)

(cid:13)

id1

with ri d yi (cid:0)bgb(cid:0)1.xi /; i d 1; : : : ; n. if g.(cid:1)i (cid:13) / represents a depth-d tree,

(17.10) is still dif   cult to solve. but here we can resort to the usual greedy
heuristic, and grow a depth-d tree to the residuals by the usual top-down
splitting, as in step 2(a) of algorithm 17.2. hence in this case, we have
exactly the squared-error boosting algorithm 17.2. for more general loss
functions, we rely on one more heuristic for solving step 2(a), inspired by
id119. algorithm 17.4 gives the details. the idea is to perform
functional id119 on the id168, in the n-dimensional space
of the    tted vector. however, we want to be able to evaluate our new func-
tion everywhere, not just at the n original values xi. hence once the (neg-
ative) gradient vector has been computed, it is approximated by a depth-d
tree (which can be evaluated everywhere). taking a step of length (cid:15) down

17.4 adaboost: the original boosting algorithm

341

the gradient amounts to adding (cid:15) times the tree to the current function.   
gradient boosting is quite general, and can be used with any differentiable

  4

algorithm 17.4 gradient boosting
1 start with og0.x/ d 0, and set b and the shrinkage parameter (cid:15) > 0.
2 for b d 1; : : : ; b repeat the following steps.
(a) compute the pointwise negative gradient of the id168 at the

current    t:

        (cid:21)idbgb(cid:0)1.xi /
ri d (cid:0) @l.yi ; (cid:21)i /
nx

@(cid:21)i

minimize

(cid:13)

id1

.ri (cid:0) g.xii (cid:13) //2 :

; i d 1; : : : ; n:

(b) approximate the negative gradient by a depth-d tree by solving

(c) update ogb.x/ d ogb(cid:0)1.x/ c ogb.x/; with ogb.x/ d (cid:15) (cid:1) g.xi o(cid:13)b/.
3 return the sequence ogb.x/; b d 1; : : : ; b.

id168. the r package gbm implements algorithm 17.4 for a variety
of id168s, including squared-error, binomial (bernoulli), laplace
(`1 loss), multinomial, and others. included as well is the partial likelihood
for the cox proportional hazards model (chapter 9). figure 17.11 com-
pares the misclassi   cation error of boosting on the spam data, with that of
id79s and id112. since boosting has more tuning parameters, a
careful comparison must take these into account. using the mcnemar test
we would conclude that boosting and id79 are not signi   cantly
different from each other, but both outperform id112.

17.4 adaboost: the original boosting algorithm

the original proposal for boosting looked quite different from what we
have presented so far. adaboost was developed for the two-class classi   -
cation problem, where the response is coded as -1/1. the idea was to    t a
sequence of classi   ers to modi   ed versions of the training data, where the
modi   cations give more weight to misclassi   ed points. the    nal classi   -
cation is by weighted majority vote. the details are rather speci   c, and are
given in algorithm 17.5. here we distinguish a classi   er c.x/ 2 f(cid:0)1; 1g,
which returns a class label, rather than a id203. algorithm 17.5 gives

342

id79s and boosting

figure 17.11 test misclassi   cation for gradient boosting on the
spam data, compared with a id79 and id112.
although boosting appears to be better, it requires crossvaldiation
or some other means to estimate its tuning parameters, while the
id79 is essentially automatic.

the adaboost.m1 algorithm. although the classi   er in step 2(a) can be ar-
bitrary, it was intended for weak learners such as shallow trees. steps 2(c)   
(d) look mysterious. its easy to check that, with the reweighted points, the
classi   er ocb just learned would have weighted error 0.5, that of a coin    ip.
ues   1, the ensemblebgb.x/ takes values in r.
we also notice that, although the individual classi   ers ocb.x/ produce val-
ponential id168. the functions bgb.x/ output in step 3 of algo-

it turns out that the adaboost algorithm 17.5    ts a id28
model via a version of the general boosting algorithm 17.3, using an ex-

rithm 17.5 are estimates of (half) the logit function (cid:21).x/.

to show this, we    rst motivate the exponential loss, a somewhat unusual
choice, and show how it is linked to id28. for a -1/1 response
y and function f .x/, the exponential loss is de   ned as le .y; f .x// d
exp  (cid:0)yf .x/  . a simple calculation shows that the solution to the (condi-

0.000.020.040.060.08gradient boosting on the spam datanumber of treestest error15001000150020002500id112id79boosting (depth 4)17.4 adaboost: the original boosting algorithm

343

wi.

algorithm 17.5 adaboost
1 initialize the observation weights wi d 1=n; i d 1; : : : ; n.
2 for b d 1; : : : ; b repeat the following steps.
(a) fit a classi   er ocb.x/ to the training data, using observation weights
(b) compute the weighted misclassi   cation error for ocb:
pn
id1 wi i   yi    ocb.xi /  
id1 wi
(c) compute   b d log  .1 (cid:0) errb/=errb  .
(cid:1) exp .  b (cid:1) i   yi    cb.xi /  / ;
(d) update the weights wi   wi
3 output the sequence of functions bgb.x/ d pb
i
sponding classi   ersbcb.x/ d sign
, b d 1; : : : ; b.

i d
`d1   m oc`.x/ and corre-

errb dpn

hbgb.x/

1; : : : ; n.

:

tional) population minimization problem

(cid:0)yf .x/ j x  

e  e

minimize

f .x/

 pr.y d c1jx/

pr.y d (cid:0)1jx/

 

:

f .x/ d 1

2

log

(17.11)

(17.12)

is given by

inverting, we get

(cid:0)f .x/

e

ef .x/

pr.y d c1jx/ d

and pr.y d (cid:0)1jx/ d

e

e

(cid:0)f .x/ c ef .x/

(cid:0)f .x/ c ef .x/
;
(17.13)
a perfectly reasonable (and symmetric) model for a id203. the quan-
tity yf .x/ is known as the margin (see also chapter 19); if the margin
is positive, the classi   cation using cf .x/ d sign.f .x// is correct for y,
else it is incorrect if the margin is negative. the magnitude of yf .x/ is
proportional to the (signed) distance of x from the classi   cation boundary
(exactly for linear models, approximately otherwise). for -1/1 data, we can
also write the (negative) binomial log-likelihood in terms of the margin.

344

id79s and boosting

using (17.13) we have

lb .y; f .x// d (cid:0)fi.y d (cid:0)1/ log pr.y d (cid:0)1jx/

(cid:16)
c i.y d c1/ log pr.y d c1jx/g
1 c e

(cid:0)2yf .x/ 

:

d log

(17.14)

e(cid:2)log(cid:0)1 c e

(cid:0)2yf .x/(cid:1) j x(cid:3) also has population minimizer f .x/ equal to

half the logit (17.12).3 figure 17.12 compares the exponential id168
with this binomial loss. they both asymptote to zero in the right tail   the
area of correct classi   cation. in the left tail, the binomial loss asymptotes
to a linear function, much less severe than the exponential loss.

figure 17.12 exponential loss used in adaboost, versus the
binomial loss used in the usual id28. both estimate
the logit function. the exponential left tail, which punishes
misclassi   cations, is much more severe than the asymptotically
linear tail of the binomial.

the exponential loss simpli   es step 2(a) in the gradient boosting algo-

3 the half comes from the symmetric representation we use.

   3   2   101230123456yf(x)lossbinomialexponential  5

rithm 17.3.

(cid:16)
yi ;bgb(cid:0)1.xi / c g.xii (cid:13) /

le

nx

id1

17.5 connections and extensions

345

exp  (cid:0)yi .bgb(cid:0)1.xi / c g.xii (cid:13) //  
wi exp  (cid:0)yi g.xii (cid:13) /  

(17.15)

id1

  d nx
d nx
d nx

id1

wi le .yi ; g.xii (cid:13) // ;

with wi d exp  (cid:0)yibgb(cid:0)1.xi /  . this is just a weighted exponential loss with

the past history encapsulated in the observation weight wi (see step 2(a) in
algorithm 17.5). we give some more details in the chapter endnotes on
how this reduces to the adaboost algorithm.  

id1

the adaboost algorithm achieves an error rate on the spam data com-

parable to binomial gradient boosting.

17.5 connections and extensions

boosting is a general nonparametric function-   tting algorithm, and shares
attributes with a variety of existing methods. here we relate boosting to two
different approaches: generalized additive models and the lasso of chap-
ter 16.

generalized additive models

boosting    ts additive, low-order interaction models by a forward stage-
wise strategy. generalized additive models (gams) are a predecessor, a
semi-parametric approach toward nonlinear function    tting. a gam has
the form

fj .xj /;

(17.16)
where again (cid:21).x/ d    (cid:22).x/   is the natural parameter in an exponential
family. the attraction of a gam is that the components are interpretable
and can be visualized, and they can move us a big step up from a linear
model.

jd1

there are many ways to specify and    t additive models. for the fj , we
could use parametric functions (e.g. polynomials),    xed-knot regression
splines, or even linear functions for some terms. less parametric options

(cid:21).x/ d px

346

id79s and boosting

sj .y (cid:0)x

o
fj  

are smoothing splines and local regression (see section 19.8). in the case of
squared-error loss (the gaussian case), there is a natural set of back   tting
equations for    tting a gam:

of`/; j d 1; : : : ; p:

(17.17)

o
f`.xn`/  

o
f`.x1`/; : : : ; .

`  j
here of` d   
0 is the n-vector of    tted values for the
current estimate of function f`. hence the term in parentheses is a partial
residual, removing all the current function    ts from y except the one about
to be updated. sj is a smoothing operator derived from variable xj that
gets applied to this residual and delivers the next estimate for function f`.
back   tting starts with all the functions zero, and then cycles through these
equations for j d 1; 2; : : : ; p; 1; 2; : : : in a block-coordinate fashion, until
all the functions stabilize.

the    rst pass through all the variables is similar to the regression boost-
ing algorithm 17.2, where each new function takes the residuals from the
past    ts, and models them using a tree (for sj ). the difference is that
boosting never goes back and    xes up past functions, but    ts in a forward-
stagewise fashion, leaving all past functions alone. of course, with its adap-
tive    tting mechanism, boosting can select the same variables as used be-
fore, and thereby update that component of the    t. boosting with stumps
(single-split trees, see the discussion on tree depth on 335 in section 17.2)
can hence be seen as an adaptive way for    tting an additive model, that si-
multaneously performs variable selection and allows for different amounts
of smoothing for different variables.

boosting and the lasso

in section 16.7 we drew attention to the close connection between the
forward-stagewise    tting of boosting (with shrinkage ) and the lasso, via
in   nitesimal forward-stagewise regression. here we take this a step further,
by using the lasso as a post-processor for boosting (or id79s).

boosting with shrinkage does a good job in building a prediction model,
but at the end of the day can involve a lot of trees. because of the shrink-
age, many of these trees could be similar to each other. the idea here is
to use the lasso to select a subset of these trees, reweight them, and hence
produce a prediction model with far fewer trees and, one hopes, compa-
rable accuracy. suppose boosting has produced a sequence of    tted trees
ogb.x/; b d 1; : : : ; b. we then solve the lasso problem

17.6 notes and details

347

figure 17.13 post-processing of the trees produced by boosting
on the als data. shown is the test prediction error as a function
of the number of trees selected by the (nonnegative) lasso. we see
that the lasso can do as good a job with one-third the number of
trees, although selecting the correct number is critical.

"

nx

id1

bx

bd1

minimize

f  bgb

1

l

yi ;

#

bx

bd1

ogb.xi /  b

c (cid:21)

j  bj

(17.18)

for different values of (cid:21). this model selects some of the trees, and as-
signs differential weights to them. a reasonable variant is to insist that the
weights are nonnegative. figure 17.13 illustrates this approach on the als
data. here we could use one-third of the trees. often the savings are much
more dramatic.

17.6 notes and details

id79s and boosting live at the cutting edge of modern predic-
tion methodology. they    t models of breathtaking complexity compared
with classical id75, or even with standard glm modeling as
practiced in the late twentieth century (chapter 8). they are routinely used
as prediction engines in a wide variety of industrial and scienti   c appli-
cations. for the more cautious, they provide a terri   c benchmark for how
well a traditional parametrized model is performing: if the id79s

0.250.260.270.280.290.30number of treesmean   squared error1100200300400500depth 2 boostlasso post fit348

id79s and boosting

does much better, you probably have some work to do, by including some
important interactions and the like.

the regression and classi   cation trees discussed in chapter 8 (breiman
et al., 1984) took traditional models to a new level, with their ability to
adapt to the data, select variables, and so on. but their prediction per-
formance is somewhat lacking, and so they stood the risk of falling by
the wayside. with their new use as building blocks in id79s and
boosting, they have reasserted themselves as critical elements in the mod-
ern toolbox.

id79s and id112 were introduced by breiman (2001), and
boosting by schapire (1990) and freund and schapire (1996). there has
been much discussion on why boosting works (breiman, 1998; friedman
et al., 2000; schapire and freund, 2012); the statistical interpretation given
here can also be found in hastie et al. (2009), and led to the gradient boost-
ing algorithm (friedman, 2001). adaboost was    rst described in freund
and schapire (1997). hastie et al. (2009, chapter 15) is devoted to random
forests. for the examples in this chapter we used the randomforest
package in r (liaw and wiener, 2002), and for boosting the gbm (ridge-
way, 2005) package. the lasso post-processing idea is due to friedman and
popescu (2005), which we implemented using glmnet (friedman et al.,
2009). generalized additive models are described in hastie and tibshirani
(1990).

we now give some particular technical details on topics covered in the

chapter.

  1 [p. 327] averaging trees. a maximal-depth tree splits every node until it is
pure, meaning all the responses are the same. for very large n this might
be unreasonable; in practice, one can put a lower bound on the minimum
count in a terminal node. we are deliberately vague about the response type
in algorithm 17.1. if it is quantitative, we would    t a regression tree. if it
is binary or multilevel qualitative, we would    t a classi   cation tree. in this
case at the averaging stage, there are at least two strategies. the original
random-forest paper (breiman, 2001) proposed that each tree should make
a classi   cation, and then the ensemble uses a plurality vote. an alterna-
tive reasonable strategy is to average the class probabilities produced by
the trees; these procedures are identical if the trees are grown to maximal
depth.

  2 [p. 330] jackknife variance estimate. the jackknife estimate of variance
for a id79, and the bias-corrected version, is described in wager
et al. (2014). the jackknife formula (17.3) is applied to the b d 1 ver-

17.6 notes and details

349

sion of the id79, but of course is estimated by plugging in    nite
b versions of the quantities involved. replacing or .(cid:1)/
rf .x0/ by its expectation
orrf.x0/ is not the problem; its that each of the or .i /
rf .x0/ vary about their boot-
strap expectations, compounded by the square in expression (17.4). calcu-
lating the bias requires some technical derivations, which can be found in
that reference.

they also describe the in   nitesimal jackknife estimate of variance, given

(17.19)

(17.20)

by

withdcovi ddcov.w

(cid:3)

bvij.orrf.x0// d nx

dcov2

i ;

id1

bx

as discussed in chapter 20. it too has a bias-corrected version, given by

(cid:0) 1/.orb.x0/ (cid:0) orrf.x0//;

b

.w

(cid:3)
b i

bd1

; or(cid:3).x0// d 1
bvu
ij.orrf.x0// dbvij.orrf.x0// (cid:0) n

b

ov.x0/;

(17.21)

similar to (17.5).

  3 [p. 334] the als data. these data were kindly provided by lester mackey
and lilly fang, who won the dream challenge prediction prize in 2012
(kuffner et al., 2015). it includes some additional variables created by
them. their winning entry used bayesian trees, not too different from ran-
dom forests.

  4 [p. 341] gradient-boosting details. in friedman   s gradient-boosting algo-
rithm (hastie et al., 2009, chapter 10, for example), a further re   nement
is implemented. the tree in step 2(b) of algorithm 17.4 is used to de-
   ne the structure (split variables and splits), but the values in the terminal
nodes are left to be updated. we can think of partitioning the parameters
(cid:13) d .(cid:13)s; (cid:13)t /, and then represent the tree as g.xi (cid:13) / d t .xi (cid:13)s/
(cid:13)t. here
t .xi (cid:13)s/ is a vector of d c 1 binary basis functions that indicate the termi-
nal node reached by input x, and (cid:13)t are the d c 1 values of the terminal
nodes of the tree. we learn o(cid:13)s by approximating the gradient in step 2(b)
by a tree, and then (re-)learn the terminal-node parameters o(cid:13)t by solving
the optimization problem

0

(cid:16)
yi ; ogb(cid:0)1.xi / c t .xii o(cid:13)s/

0

(cid:13)t

 

l

nx

id1

minimize

(cid:13)t

:

(17.22)

solving (17.22) amounts to    tting a simple glm with an offset.

350

id79s and boosting

  5 [p. 345] adaboost and gradient boosting. hastie et al. (2009, chapter
10) derive adaboost as an instance of algorithm 17.3. one detail is that
the trees g.xi (cid:13) / are replaced by a simpli   ed scaled classi   er    (cid:1) c.xi (cid:13)
/.
hence, from (17.15), in step 2(a) of algorithm 17.3 we need to solve

0

wi exp  (cid:0)yi   c.xii (cid:13)

0

/  :

(17.23)

nx

id1

minimize

0

  ;(cid:13)

the derivation goes on to show that
(cid:15) minimizing (17.23) for any value of    > 0 can be achieved by    tting
/ to minimize the weighted misclassi   cation

0

a classi   cation tree c.xi o(cid:13)
nx
error

wi i   yi    c.xi ; (cid:13)

0

/  i

id1

(cid:15) given c.xi o(cid:13)
0
/,    is estimated as in step 2(c) of algorithm 17.5 (and is
non-negative);
(cid:15) the weight-update scheme in step 2(d) of algorithm 17.5 corresponds

exactly to the weights as computed in (17.15).

18

neural networks and deep learning

something happened in the mid 1980s that shook up the applied statistics
community. neural networks (nns) were introduced, and they marked a
shift of predictive modeling towards computer science and machine learn-
ing. a neural network is a highly parametrized model, inspired by the ar-
chitecture of the human brain, that was widely promoted as a universal
approximator   a machine that with enough data could learn any smooth
predictive relationship.

figure 18.1 neural network diagram with a single hidden layer.
the hidden layer derives transformations of the inputs   nonlinear
transformations of linear combinations   which are then used to
model the output.

cp4

figure 18.1 shows a simple example of a feed-forward neural network
diagram. there are four predictors or inputs xj ,    ve hidden units a` d
`d1 w.2/
g.w.1/
` a`/.
`0
the language associated with nns is colorful: memory units or neurons
automatically learn new features from the data through a process called

`j xj /, and a single output unit o d h.w.2/

jd1 w.1/

0

cp5

351

x1x2x3x4f(x)hiddenlayerl2inputlayerl1outputlayerl3352

neural networks

`j

supervised learning. each neuron al is connected to the input layer via a
gp
vector of parameters or weights fw.1/
1 (the .1/ refers to the    rst layer
and `j refers to the j th variable and `th unit). the intercept terms w.1/
`0
are called a bias, and the function g is a nonlinearity, such as the sigmoid
function g.t / d 1=.1 c e
(cid:0)t /. the idea was that each neuron will learn a
simple binary on/off function; the sigmoid function is a smooth and dif-
ferentiable compromise. the    nal or output layer also has weights, and
an output function h. for quantitative regression h is typically the identity
function, and for a binary response it is once again the sigmoid. note that
without the nonlinearity in the hidden layer, the neural network would re-
duce to a generalized linear model (chapter 8). typically neural networks
are    t by maximum likelihood, usually with a variety of forms of regular-
ization.

the knee-jerk response from statisticians was    what   s the big deal? a
neural network is just a nonlinear model, not too different from many other
generalizations of linear models.   

while this may be true, neural networks brought a new energy to the
   eld. they could be scaled up and generalized in a variety of ways: many
hidden units in a layer, multiple hidden layers, weight sharing, a variety
of colorful forms of id173, and innovative learning algorithms for
massive data sets. and most importantly, they were able to solve problems
on a scale far exceeding what the statistics community was used to. this
was part computing scale and expertise, part liberated thinking and cre-
ativity on the part of this computer science community. new journals were
devoted to the    eld,    and several popular annual conferences (initially at
ski resorts) attracted their denizens, and drew in members of the statistics
community.

after enjoying considerable popularity for a number of years, neural
networks were somewhat sidelined by new inventions in the mid 1990s,
such as boosting (chapter 17) and id166s (chapter 19). neural networks
were pass  e. but then they re-emerged with a vengeance after 2010   the
reincarnation now being called deep learning. this renewed enthusiasm is
a result of massive improvements in computer resources, some innovations,
and the ideal niche learning tasks such as image and video classi   cation,
and speech and text processing.

  1

18.1 neural networks and the handwritten digit problem

353

18.1 neural networks and the handwritten digit problem

neural networks really cut their baby teeth on an optical character recogni-
tion (ocr) task: automatic reading of handwritten digits, as in a zipcode.
figure 18.2 shows some examples, taken from the mnist corpus.    the   2
idea is to build a classi   er c.x/ 2 f0; 1; : : : ; 9g based on the input image
x 2 r28(cid:2)28, a 28 (cid:2) 28 grid of image intensities. in fact, as is often the
case, it is more useful to learn the id203 function pr.y d jjx/; j d
0; 1; 2; : : : ; 9; this is indeed the target for our neural network. figure 18.3

figure 18.2 examples of handwritten digits from the mnist
corpus. each digit is represented by a 28 (cid:2) 28 grayscale image,
derived from normalized binary images of different shapes and
sizes. the value stored for each pixel in an image is a nonnegative
eight-bit representation of the amount of gray present at that
location. the 784 pixels for each image are the predictors, and the
0   9 class labels the response. there are 60,000 training images in
the full data set, and 10,000 in the test set.

shows a neural network with three hidden layers, a successful con   gura-
tion for this digit classi   cation problem. in this case the output layer has
10 nodes, one for each of the possible class labels. we use this example
to walk the reader through some of the aspects of the con   guration of a
network, and    tting it to training data. since all of the layers are functions
of their previous layers, and    nally functions of the input vector x, the net-
work represents a somewhat complex function f .xi
w/, where w repre-
sents the entire collection of weights. armed with a suitable id168,
we could simply barge right in and throw it at our favorite optimizer. in the
early days this was not computationally feasible, especially when special

354

neural networks

figure 18.3 neural network diagram with three hidden layers
and multiple outputs, suitable for the mnist handwritten-digit
problem. the input layer has p d 784 units. such a network with
hidden layer sizes .1024; 1024; 2048/, and particular choices of
tuning parameters, achieves the state-of-the art error rate of
0:93% on the    of   cial    test data set. this network has close to
four million weights, and hence needs to be heavily regularized.

structure is imposed on the weight vectors. today there are fairly automatic
systems for setting up and    tting neural networks, and this view is not too
far from reality. they mostly use some form of id119, and rely
on an organization of parameters that leads to a manageable calculation of
the gradient.

the network in figure 18.3 is complex, so it is essential to establish a
convenient notation for referencing the different sets of parameters. we
continue with the notation established for the single-layer network, but
with some additional annotations to distinguish aspects of different layers.
from the    rst to the second layer we have

c px

`0

d w.1/
d g.2/.z.2/
` /:

jd1

z.2/
`

a.2/
`

w.1/

`j xj ;

(18.1)

(18.2)

x1x2x3...xpy0y1...y9hiddenlayerl4hiddenlayerl3hiddenlayerl2inputlayerl1outputlayerl5w(1)a(2)w(2)a(3)w(3)a(4)w(4)a(5)18.1 neural networks and the handwritten digit problem

355

we have separated the linear transformations z.2/
` of the xj from the nonlin-
ear transformation of these, and we allow for layer-speci   c nonlinear trans-
formations g.k/. more generally we have the transition from layer k (cid:0) 1 to
layer k:

c pk(cid:0)1x

jd1

`0

d w.k(cid:0)1/
d g.k/.z.k/
` /:

z.k/
`

a.k/
`

w.k(cid:0)1/

`j

a.k(cid:0)1/

j

;

(18.3)

(18.4)

in fact (18.3)   (18.4) can serve for the input layer (18.1)   (18.2) if we adopt
  x` and p1 d p, the number of input variables.
the notation that a.1/
hence each of the arrows in figure 18.3 is associated with a weight param-
eter.

`

it is simpler to adopt a vector notation

z.k/ d w .k(cid:0)1/a.k(cid:0)1/
a.k/ d g.k/.z.k//;

(18.5)
(18.6)
where w .k(cid:0)1/ represents the matrix of weights that go from layer lk(cid:0)1
to layer lk, a.k/ is the entire vector of activations at layer lk, and our
notation assumes that g.k/ operates elementwise on its vector argument.
we have also absorbed the bias parameters w.k(cid:0)1/
into the matrix w .k(cid:0)1/,
which assumes that we have augmented each of the activation vectors a.k/
with a constant element 1.

`0

sometimes the nonlinearities g.k/ at the inner layers are the same func-
tion, such as the function (cid:27) de   ned earlier. in section 18.5 we present a
network for natural color image classi   cation, where a number of different
id180 are used.
depending on the response, the    nal transformation g.k/ is usually spe-
cial. for m -class classi   cation, such as here with m d 10, one typically
uses the softmax function

g.k/.z.k/

m

i z.k// d

;

(18.7)

mpm

ez.k/
`d1 ez.k/

`

which computes a number (id203) between zero and one, and all m
of them sum to one.1

1 this is a symmetric version of the inverse link function used for multiclass logistic

regression.

356

neural networks

18.2 fitting a neural network

as we have seen, a neural network model is a complex, hierarchical func-
tion f .xi
w/ of the the feature vector x, and the collection of weights w.
for typical choices for the g.k/, this function will be differentiable. given
a training set fxi ; yign
1 and a id168 l  y; f .x/  , along familiar lines
we might seek to solve

)

l  yi ; f .xii

w/   c (cid:21)j.w/

;

(18.8)

(

nx

id1

1

n

minimize

w

where j.w/ is a nonnegative id173 term on the elements of w,
and (cid:21) (cid:21) 0 is a tuning parameter. (in practice there may be multiple reg-
ularization terms, each with their own (cid:21).) for example an early popular
penalty is the quadratic

n

k(cid:0)1x

pkx

pkc1x

kd1

jd1

`d1

o2

j.w/ d 1

2

w.k/
`j

;

(18.9)

as in ridge regression (7.41). also known as the weight-decay penalty, it
pulls the weights toward zero (typically the biases are not penalized). lasso
penalties (chapter 16) are also popular, as are mixtures of these (an elastic
net).

for binary classi   cation we could take l to be binomial deviance (8.14),
in which case the neural network amounts to a penalized logistic regres-
sion, section 8.1, albeit a highly parametrized and penalized one. loss
functions are usually convex in f , but not in the elements of w, so solving
(18.8) is dif   cult, and at best we seek good local optima. most methods
are based on some form of id119, with many associated bells
and whistles. we brie   y discuss some elements of the current practice in
   nding good solutions to (18.8).

computing the gradient: id26

the elements of w occur in layers, since f .xi

w/ is de   ned as a series
of compositions, starting from the input layer. computing the gradient is
also done most naturally in layers (the chain rule for differentiation; see
for example (18.10) in algorithm 18.1 below), and our notation makes this
easier to describe in a recursive fashion. we will consider computing the
derivative of l  y; f .xi
w   with respect to any of the elements of w, for a
generic input   output pair x; y; since the loss part of the objective is a sum,

18.2 fitting a neural network

357

`

the overall gradient will be the sum of these individual gradient elements
over the training pairs .xi ; yi /.

the intuition is as follows. given a training generic pair .x; y/, we    rst
make a forward pass through the network, which creates activations at each
of the nodes a.k/
in each of the layers, including the    nal output layer. we
would then like to compute an error term   .k/
that measures the responsibil-
ity of each node for the error in predicting the true output y. for the output
activations a.k/
these errors are easy: either residuals or generalized resid-
uals, depending on the id168. for activations at inner layers,   .k/
will be a weighted sum of the errors terms of nodes that use a.k/
as inputs.
the id26 algorithm 18.1 gives the details for computing the
gradient for a single input   output pair x; y. we leave it to the reader to
verify that this indeed implements the chain rule for differentiation.

`

`

`

`

algorithm 18.1 id26

at each of the layers l2; l3; : : : ; lk; i.e. compute f .xi

1 given a pair x; y, perform a    feedforward pass,    computing the activa-
tions a.k/
w/ at
x using the current w, saving each of the intermediary quantities along
the way.

`

2 for each output unit ` in layer lk, compute
d @l  y; f .x;w/  
d @l  y; f .xi

@z.k/

  .k/
`

`

w/  

pg.k/.z.k/

(18.10)
where pg denotes the derivative of g.z/ wrt z. for example for l.y; f / d
ky (cid:0) f k2
3 for layers k d k (cid:0) 1; k (cid:0) 2; : : : ; 2, and for each node ` in layer k, set

2, (18.10) becomes (cid:0).y` (cid:0) f`/ (cid:1) pg.k/.z.k/

@a.k/

/.

/;

1
2

`

`

0@pkc1x

jd1

`

1a pg.k/.z.k/

` /:

d

  .k/
`

j `   .kc1/
w.k/

j

(18.11)

4 the partial derivatives are given by
w/  

@l  y; f .xi
@w.k/
`j

d a.k/

j   .kc1/

`

:

(18.12)

one again matrix   vector notation simpli   es these expressions a bit:

358

neural networks

(18.10) becomes (for squared-error loss)

  .k/ d (cid:0).y (cid:0) a.k//    pg.k/.z.k//;
where    denotes the hadamard (elementwise) product;
(18.11) becomes

  .kc1/     pg.k/.z.k//i

0

  .k/ d(cid:16)

w .k/

(18.12) becomes

@l  y; f .xi

@w .k/

w/  

d   .kc1/a.k/

0

:

(18.13)

(18.14)

(18.15)

id26 was considered a breakthrough in the early days of
neural networks, since it made    tting a complex model computationally
manageable.

id119

algorithm 18.1 computes the gradient of the id168 at a single generic
pair .x; y/; with n training pairs the gradient of the    rst part of (18.8) is
given by

w  

:

(18.16)

nx

@l  yi ; f .xii

@w .k/

n

id1

  w .k/ d 1
(cid:16)

  w .k/ c (cid:21)w .k/ 

with the quadratic form (18.9) for the penalty, a gradient-descent update is

w .k/   w .k/ (cid:0)   

; k d 1; : : : ; k (cid:0) 1;

(18.17)

where    2 .0; 1   is the learning rate.

id119 requires starting values for all the weights w. zero is
not an option, because each layer is symmetric in the weights    owing to the
different neurons, hence we rely on starting values to break the symmetries.
typically one would use random starting weights, close to zero; random
uniform or gaussian weights are common.

there are a multitude of    tricks of the trade    in    tting or    learning    a
neural network, and many of them are connected with id119.
here we list some of these, without going into great detail.

stochastic id119

rather than process all the observations before making a gradient step, it
can be more ef   cient to process smaller batches at a time   even batches

18.2 fitting a neural network

359

figure 18.4 training and test misclassi   cation error as a
function of the number of epochs of training, for the mnist digit
classi   cation problem. the architecture for the network is shown
in figure 18.3. the network was    t using accelerated gradient
descent with adaptive rate control, a recti   ed linear activation
function, and dropout id173 (section 18.5). the
horizontal broken line shows the error rate of a id79
(section 17.1). a id28 model (section 8.1) achieves
only 0.072 (off the scale).

of size one! these batches can be sampled at random, or systematically
processed. for large data sets distributed on multiple computer cores, this
can be essential for reasons of ef   ciency. an epoch of training means that
all n training samples have been used in gradient steps, irrespective of how
they have been grouped (and hence how many gradient steps have been
made).

accelerated gradient methods

the idea here is to allow previous iterations to build up momentum and
in   uence the current iterations. the iterations have the form

vtc1 d (cid:22)vt (cid:0)   .  wt c (cid:21)wt /;
wtc1 d

wt c

vtc1;

(18.18)
(18.19)

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll020040060080010000.000.010.020.030.04epochsmisclassification errorlllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllltraintesttest     rfneural networks

360
using wt to represent the entire collection of weights at iteration t. vt is
a velocity vector that accumulates gradient information from previous iter-
ations, and is controlled by an additional momentum parameter (cid:22). when
correctly tuned, accelerated id119 can achieve much faster con-
vergence rates; however, tuning tends to be a dif   cult process, and is typi-
cally done adaptively.

rate annealing

  3

a variety of creative methods have been proposed to adapt the learning rate
to avoid jumping across good local minima. these tend to be a mixture of
principled approaches combined with ad-hoc adaptations that tend to work
well in practice.    figure 18.4 shows the performance of our neural net
on the mnist digit data. this achieves state-of-the art misclassi   cation
error rates on these data (just under 0.93% errors), and outperforms random
forests (2.8%) and a generalized linear model (7.2%). figure 18.5 shows
the 93 misclassi   ed digits.

figure 18.5 all 93 misclassi   ed digits in the mnist test set.
the true digit class is labeled in blue, the predicted in red.

42536082589789657246729449957157837987469306379323945320374961909194246153956165329535971249603791645085724613460397273287896180947270495338383989977107958505398549727272089727476356425018.2 fitting a neural network

361

other tuning parameters

apart from the many details associated with id119, there are sev-
eral other important structural and operational aspects of neural networks
that have to be speci   ed.

number of hidden layers, and their sizes

with a single hidden layer, the number of hidden units determines the num-
ber of parameters. in principle, one could treat this number as a tuning
parameter, which could be adjusted to avoid over   tting. the current col-
lective wisdom suggests it is better to have an abundant number of hidden
units, and control the model complexity instead by weight id173.
having deeper networks (more hidden layers) increases the complexity as
well. the correct number tends to be task speci   c; having two hidden lay-
ers with the digit recognition problem leads to competitive performance.

choice of nonlinearities

there are a number of id180 g.k/ in current use. apart from
the sigmoid function, which transforms its input to a values in .0; 1/, other
popular choices are

figure 18.6 id180. relu is a recti   ed linear
(unit).

tanh:

g.z/ d ez (cid:0) e
(cid:0)z
ez c e
(cid:0)z

;

   2   1012   1.0   0.50.00.51.0zg(z)sigmoidtanhreluleaky relu362
which delivers values in .(cid:0)1; 1/.

neural networks

recti   ed linear:

g.z/ d zc;

or the positive-part function. this has the advantage of making the gra-
dient computations cheaper to compute.

leaky recti   ed linear:

g  .z/ d zc (cid:0)   z(cid:0);

for    nonnegative and close to zero. the recti   ed linear tends to have    at
spots, because of the many zero activations; this is an attempt to avoid
these and the accompanying zero gradients.

choice of id173

typically this is a mixture of `2 and `1 id173, each of which re-
quires a tuning parameter. as in lasso and regression applications, the bias
terms (intercepts) are usually not regularized. the weight id173
is typically light, and serves several roles. the `2 reduces problems with
collinearity, the `1 can ignore irrelevant features, and both slow the rate of
over   tting, especially with deep (over-parametrized) networks.

early stopping

neural nets are typically over-parametrized, and hence are prone to over   t-
ting. originally early stopping was set up as the primary tuning parameter,
and the stopping time was determined using a held-out set of validation
data. in modern networks the id173 is tuned adaptively to avoid
over   tting, and hence it is less of a problem. for example, in figure 18.4
we see that the test misclassi   cation error has    attened out, and does not
rise again with increasing number of epochs.

18.3 autoencoders

an autoencoder is a special neural network for computing a type of non-
linear principal-component decomposition.

the linear principal component decomposition is a popular and effective
linear method for reducing a large set of correlated variables to a typically
smaller number of linear combinations that capture most of the variance in
the original set. hence, given a collection of n vectors xi 2 rp (assumed to
have mean zero), we produce a derived set of uncorrelated features zi 2 rq

18.3 autoencoders

363

0

(q   p, and typically smaller) via zi d v
xi. the columns of v are or-
thonormal, and are derived such that the    rst component of zi has maximal
variance, the second has the next largest variance and is uncorrelated with
the    rst, and so on. it is easy to show that the columns of v are the leading
q eigenvectors of the sample covariance matrix s d 1
n x

principal components can also be derived in terms of a best-approx-
imating linear subspace, and it is this version that leads to the nonlinear
generalization presented here. consider the optimization problem

x.

0

minimize
a2rp(cid:2)q ; f(cid:13)ign

2rq(cid:2)n

1

kxi (cid:0) a(cid:13)ik2
2;

(18.20)

nx

id1

for q < p. the subspace is de   ned by the column space of a, and for
each point xi we wish to locate its best approximation in the subspace (in
terms of euclidean distance). without loss of generality, we can assume a
has orthonormal columns, in which case o(cid:13)i d a
0
xi for each i (n separate
id75s). plugging in, (18.20) reduces to
kxi (cid:0) aa

(18.21)
a solution is given by oa d v , the matrix above of the    rst q principal-
component direction vectors computed from the xi. by analogy, a single-
layer autoencoder solves a nonlinear version of this problem:

nx

a2rp(cid:2)q ; a

xik2
2:

minimize

adiq

id1

0

0

minimize
w 2rq(cid:2)p

kxi (cid:0) w

0

g.w xi /k2
2;

(18.22)

nx

id1

for some nonlinear activation function g; see figure 18.7 (left panel). if g
is the identity function, these solutions coincide (with w d v

0).

figure 18.7 (right panel) represents the learned row of w as images,
when the autoencoder is    t to the mnist digit database. since autoen-
coders do not require a response (the class labels in this case), this decom-
position is unsupervised. it is often expensive to label images, for example,
while unlabeled images are abundant. autoencoders provide a means for
extracting potentially useful features from such data, which can then be
used with labeled data to train a classi   er. in fact, they are often used as
warm starts for the weights when    tting a supervised neural network.

once again there are a number of bells and whistles that make autoen-

coders more effective.

364

neural networks

figure 18.7 left: network representation of an autoencoder used
for unsupervised learning of nonlinear principal components. the
middle layer of hidden units creates a bottleneck, and learns
nonlinear representations of the inputs. the output layer is the
transpose of the input layer, so the network tries to reproduce the
input data using this restrictive representation. right: images
representing the estimated rows of w using the mnist database;
the images can be seen as    lters that detect local gradients in the
image pixels. in each image, most of the weights are zero, and the
nonzero weights are localized in the two-dimensional image
space.

(cid:15) `1 id173 applied to the rows of w lead to sparse weight vectors,
and hence local features, as was the case in our example.
(cid:15) denoising is a process where noise is added to the input layer (but not the
output), resulting in features that do not focus on isolated values, such
as pixels, but instead have some volume. we discuss denoising further in
section 18.5.
(cid:15) with id173, the bottleneck is not necessary, as in the    gure or in
principal components. in fact we can learn many more than p compo-
nents.
(cid:15) autoencoders can also have multiple layers, which are typically learned
sequentially. the activations learned in the    rst layer are treated as the
input (and output) features, and a model like (18.22) is    t to them.

18.4 deep learning

neural networks were reincarnated around 2010 with    deep learning    as a
   ashier name, largely a result of much faster and larger computing systems,
plus a few new ideas. they have been shown to be particularly successful

x1x2x3x4x5  x1  x2  x3  x4  x5inputlayerhiddenlayeroutputlayerwg(wx)w018.4 deep learning

365

in the dif   cult task of classifying natural images, using what is known as a
convolutional architecture. initially autoencoders were considered a crucial
aspect of deep learning, since unlabeled images are abundant. however,
as labeled corpora become more available, the word on the street is that
supervised learning is suf   cient.

figure 18.8 shows examples of natural images, each with a class label
such as beaver, sunflower, trout etc. there are 100 class labels in

figure 18.8 examples of natural images. the cifar-100
database consists of 100 color image classes, with 600 examples
in each class (500 train, 100 test). each image is 32 (cid:2) 32 (cid:2) 3 (red,
green, blue). here we display a randomly chosen image from each
class. the classes are organized by hierarchical structure, with 20
coarse levels and    ve subclasses within each. so, for example, the
   rst    ve images in the    rst column are aquatic mammals,
namely beaver, dolphin, otter, seal and whale.

366

neural networks

all, and 500 training images and 100 test images per class. the goal is to
build a classi   er to assign a label to an image. we present the essential
details of a deep-learning network for this task   one that achieves a re-
spectable classi   cation performance of 35% errors on the designated test
set.2 figure 18.9 shows a typical deep-learning architecture, with many

figure 18.9 architecture of a deep-learning network for the
cifar-100 image classi   cation task. the input layer and
hidden layers are all represented as images, except for the last
hidden layer, which is       attened    (vectorized). the input layer
consists of the p1 d 3 color (red, green, and blue) versions of an
input image (unlike earlier, here we use the pk to refer to the
number of images rather than the totality of pixels). each of these
color panes is 32 (cid:2) 32 pixels in dimension. the    rst hidden layer
computes a convolution using a bank of p2 distinct q (cid:2) q (cid:2) p1
learned    lters, producing an array of images of dimension
p2 (cid:2) 32 (cid:2) 32. the next pool layer reduces each non-overlapping
block of ` (cid:2) ` numbers in each pane of the    rst hidden layer to a
single number using a    max    operation. both q and ` are
typically small; each was 2 for us. these convolve and pool layers
are repeated here three times, with changing dimensions (in our
actual implementation, there are 13 layers in total). finally the
500 derived features are    attened, and a fully connected layer
maps them to the 100 classes via a    softmax    activation.

hidden layers. these consist of two special types of layers:    convolve    and
   pool.    we describe each in turn.

convolve layer

figure 18.10 illustrates a convolution layer, and some details are given in

2 classi   cation becomes increasingly dif   cult as the number of classes grows. with equal
representation in each class, the null or random error rate for k classes is
.k (cid:0) 1/=k; 50% for two classes, 99% for 100.

100323221650048convolvepoolconvolvepoolconvolvepoolconnect fully367
the caption. if an image x is represented by a k (cid:2) k matrix, and a    lter f

18.4 deep learning

figure 18.10 convolution layer for the input images. the input
image is split into its three color components. a single    lter is a
q (cid:2) q (cid:2) p1 array (here one q (cid:2) q for each of the p1 d 3 color
panes), and is used to compute an inner product with a
correspondingly sized subimage in each pane, and summed across
the p1 panes. we used q d 2, and small values are typical. this is
repeated over all (overlapping) q (cid:2) q subimages (with boundary
padding), and hence produces an image of the same dimension as
one of the input panes. this is the convolution operation. there
are p2 different versions of this    lter, and hence p2 new panes are
produced. each of the p2    lters has p1q2 weights, which are
learned via id26.

`d1

pq

qx with elements qxi; j dpq

is a q (cid:2) q matrix with q (cid:28) k, the convolved image is another k (cid:2) k matrix
0 (with edge padding to
achieve a full-sized k (cid:2) k output image). in our application we used 2 (cid:2) 2,
but other sizes such as 3 (cid:2) 3 are popular. it is most natural to represent
the structure in terms of these images as in figure 18.9, but they could all
be vectorized into a massive network diagram as in figures 18.1 and 18.3.
however, the weights would have special sparse structure, with most being
zero, and the nonzero values repeated (   weight sharing   ).

0d1 xic`; jc`

0 f`; `

`

++.........368

neural networks

pool layer

the pool layer corresponds to a kind of nonlinear activation. it reduces
each nonoverlapping block of r(cid:2)r pixels (r d 2 for us) to a single number
by computing their maximum. why maximum? the convolution    lters are
themselves small image patches, and are looking to identify similar patches
in the target image (in which case the inner product will be high). the max
operation introduces an element of local translation invariance. the pool
operation reduces the size of each image by a factor r in each dimension.
to compensate, the number of tiles in the next convolution layer is typically
increased accordingly. also, as these tiles get smaller, the effective weights
resulting from the convolution operator become denser. eventually the tiles
are the same size as the convolution    lter, and the layer becomes fully
connected.

18.5 learning a deep network

despite the additional structure imposed by the convolution layers, deep
networks are learned by id119. the gradients are computed by
id26 as before, but with special care taken to accommodate the
tied weights in the convolution    lters. however, a number of additional
tricks have been introduced that appear to improve the performance of
modern deep learning networks. these are mostly aimed at id173;
indeed, our 100-class image network has around 50 million parameters, so
id173 is essential to avoid over   tting. we brie   y discuss some of
these.

dropout

this is a form of id173 that is performed when learning a network,
typically at different rates at the different layers. it applies to all networks,
not just convolutional; in fact, it appears to work better when applied at the
deeper, denser layers. consider computing the activation z.k/
in layer k as
in (18.3) for a single observation during the feed-forward stage. the idea
is to randomly set each of the pk(cid:0)1 nodes a.k(cid:0)1/
to zero with id203
(cid:30), and in   ate the remaining ones by a factor 1=.1(cid:0) (cid:30)/. hence, for this ob-
servation, those nodes that survive have to stand in for those omitted. this
can be shown to be a form of ridge id173, and when done correctly
improves performance.    the fraction (cid:30) omitted is a tuning parameter, and
for convolutional networks it appears to be better to use different values at

`

j

  4

18.5 learning a deep network

369

different layers. in particular, as the layers become denser, (cid:30) is increased:
from 0 in the input layer to 0:5 in the    nal, fully connected layer.

input distortion

this is another form of id173 that is particularly suitable for tasks
like image classi   cation. the idea is to augment the training set with many
distorted copies of an input image (but of course the same label). these
distortions can be location shifts and other small af   ne transformations, but
also color and shading shifts that might appear in natural images. we show

figure 18.11 each column represents distorted versions of an
input image, including af   ne and color distortions. the input
images are padded on the boundary to increase the size, and
hence allow space for some of the distortions.

some distorted versions of input images in figure 18.11. the distortions are
such that a human would have no trouble identifying any of the distorted
images if they could identify the original.    this both enriches the training   5
data with hints, and also prevents over   tting to the original image. one
could also apply distortions to a test image, and then    poll    the results to
produce a    nal classi   cation.

con   guration

designing the correct architecture for a deep-learning network, along with
the various choices at each layer, appears to require experience and trial

370

neural networks

  6

and error. we summarize the third and    nal architecture which we built
for classifying the cifar-100 data set in algorithm 18.2.  in addition to
these size parameters for each layer, we must select the id180
and additional id173. in this case we used the leaky recti   ed linear
functions g  .z/ (section 18.2), with    increasing from 0:05 in layer 5 up to
0:5 in layer 13. in addition a type of `2 id173 was imposed on the
weights, restricting all incoming weight vectors to a node to have `2 norm
bounded by one. figure 18.12 shows both the progress of the optimization
objective (red) and the test misclassi   cation error (blue) as the gradient-
descent algorithm proceeds. the accelerated gradient method maintains a
memory, which we can see was restarted twice to get out of local minima.
our network achieved a test error rate of 35% on the 10,000 test images
(100 images per class). the best reported error rate we have seen is 25%,
so apparently we have some way to go!

figure 18.12 progress of the algorithm as a function of the
number of epochs. the accelerated gradient algorithm is
   restarted    every 100 epochs, meaning the long-term memory is
forgotten, and a new trail is begun, starting at the current solution.
the red curve shows the objective (negative penalized
log-likelihood on the training data). the blue curve shows test-set
misclassi   cation error. the vertical axis is on the log scale, so
zero cannot be included.

050100150200250300405060708090epochtest misclassification error3001900390063009200objectiveobjective costmisclassification error18.6 notes and details

371

algorithm 18.2 configuration parameters for deep-learning
network used on the cifar-100 data.
layer 1: 100 convolution maps each with 2 (cid:2) 2 (cid:2) 3 kernel (the 3 for three
colors). the input image is padded from 32 (cid:2) 32 to 40 (cid:2) 40 to accom-
modate input distortions.
layers 2 and 3: 100 convolution maps each 2 (cid:2) 2 (cid:2) 100. compositions of
convolutions are roughly equivalent to convolutions with a bigger band-
width, and the smaller ones have fewer parameters.
layer 4: max pool 2 (cid:2) 2 layer, pooling nonoverlapping 2 (cid:2) 2 blocks of
pixels, and hence reducing the images to size 20 (cid:2) 20.
layer 5: 300 convolution maps each 2 (cid:2) 2 (cid:2) 100, with dropout learning
with rate (cid:30)5 d 0:05.
layer 6: repeat of layer 5.
layer 7: max pool 2 (cid:2) 2 layer (down to 10 (cid:2) 10 images).
layer 8: 600 convolution maps each 2 (cid:2) 2 (cid:2) 300, with dropout rate (cid:30)8 d
0:10.
layer 9: 800 convolution maps each 2 (cid:2) 2 (cid:2) 600, with dropout rate (cid:30)9 d
0:10.
layer 10: max pool 2 (cid:2) 2 layer (down to 5 (cid:2) 5 images).
layer 11: 1600 convolution maps, each 1 (cid:2) 1 (cid:2) 800. this is a pixelwise
weighted sum across the 800 images from the previous layer.
layer 12: 2000 fully connected units, with dropout rate (cid:30)12 d 0:25.
layer 13: final 100 output units, with softmax activation, and dropout rate
(cid:30)13 d 0:5.

18.6 notes and details

the reader will notice that id203 models have disappeared from the
development here. neural nets are elaborate regression methods aimed
solely at prediction   not estimation or explanation in the language of sec-
tion 8.4. in place of parametric optimality criteria, the machine learning
community has focused on a set of speci   c prediction data sets, like the
digits mnist corpus and cifar-100, as benchmarks for measuring per-
formance.

there is a vast literature on neural networks, with hundreds of books and
thousands of papers. with the resurgence of deep learning, this literature is
again growing. two early statistical references on neural networks are rip-
ley (1996) and bishop (1995), and hastie et al. (2009) devote one chapter
to the topic. part of our description of id26 in section 18.2 was

372

neural networks

guided by andrew ng   s online stanford lecture notes (ng, 2015). bengio
et al. (2013) provide a useful review of autoencoders. lecun et al. (2015)
give a brief overview of deep learning, written by three pioneers of this
   eld: yann lecun, yoshua bengio and geoffrey hinton; we also bene-
   ted from reading ngiam et al. (2010). dropout learning (srivastava et al.,
2014) is a relatively new idea, and its connections with ridge regression
were most usefully described in wager et al. (2013). the most popular
version of accelerated id119 is due to nesterov (2013). learn-
ing with hints is due to abu-mostafa (1995). the material in sections 18.4
and 18.5 bene   ted greatly from discussions with rakesh achanta (achanta
and hastie, 2015), who produced some of the color images and diagrams,
and designed and    t the deep-learning network to the cifar-100 data.

  1 [p. 352] the neural information processing systems (nips) conferences
started in late fall 1987 in denver, colorado, and post-conference work-
shops were held at the nearby ski resort at vail. these are still very popular
today, although the venue has changed over the years. the nips proceed-
ings are refereed, and nips papers count as publications in most    elds,
especially computer science and engineering. although neural networks
were initially the main topic of the conferences, a modern nips conference
covers all the latest ideas in machine learning.

  2 [p. 353] mnist is a curated database of images of handwritten digits
(lecun and cortes, 2010). there are 60,000 training images, and 10,000
test images, each a 28 (cid:2) 28 grayscale image. these data have been used as
a testbed for many different learning algorithms, so the reported best error
rates might be optimistic.

  3 [p. 360] tuning parameters. typical neural network implementations have
dozens of tuning parameters, and many of these are associated with the    ne
tuning of the descent algorithm. we used the h2o.deeplearning func-
tion in the r package h2o to    t our model for the mnist data set. it has
around 20 such parameters, although most default to factory-tuned con-
stants that have been found to work well on many examples. arno candel
was very helpful in assisting us with the software.

  4 [p. 368] dropout and ridge regression. dropout was originally proposed in
srivastava et al. (2014), and reinterpreted in wager et al. (2013). dropout
was inspired by the random selection of variables at each tree split in a
id79 (section 17.1). consider a simple version of dropout for
the id75 problem with squared-error loss. we have an n (cid:2) p
regression matrix x, and a response n-vector y. for simplicity we assume
all variables have mean zero, so we can ignore intercepts. consider the

following random least-squares criterion:

18.6 notes and details

0@yi (cid:0) px

jd1

nx

id1

373

1a2

:

xij iij   j

here the iij are i.i.d variables 8i; j with

li .  / d 1

2

iij d(cid:26)
  @li .  /
(cid:21) d (cid:0)x
   d 

o

0 with id203 (cid:30);

1=.1 (cid:0) (cid:30)/ with id203 1 (cid:0) (cid:30);

(this particular form is used so that e  iij    d 1). using simple id203
it can be shown that the expected score equations can be written

e

(18.23)
with d d diagfkx1k2;kx2k2; : : : ;kxpk2g. hence the solution is given by

@  

0

y c x

0

d   d 0;

x    c (cid:30)
1 (cid:0) (cid:30)
 (cid:0)1

0

x c (cid:30)
1 (cid:0) (cid:30)

x

d

x

0

y;

(18.24)

a generalized ridge regression. if the variables are standardized, the term
d becomes a scalar, and the solution is identical to ridge regression. with
a nonlinear activation function, the interpretation changes slightly; see wa-
ger et al. (2013) for details.

  5 [p. 369] distortion and ridge regression. we again show in a simple ex-
ample that input distortion is similar to ridge regression. assume the same
setup as in the previous example, except a different randomized version of
the criterion:

ln .  / d 1

2

.xij c nij /  j

1a2

:

  @ln .  /

here we have added random noise to the prediction variables, and we as-
sume this noise is i.i.d .0; (cid:21)/. once again the expected score equations can
be written

y c x

0

x    c (cid:21)   d 0;

e

@  

(18.25)
ij / d (cid:21). once again
because of the independence of all the nij and e.n2
this leads to a ridge regression. so replacing each observation pair xi ; yi
by the collection fx
is a noisy version of xi, is
approximately equivalent to a ridge regression on the original data.

bd1, where each x

; yigb

(cid:3)b

(cid:3)b

i

i

id1

nx

0@yi (cid:0) px
(cid:21) d (cid:0)x

jd1

0

374

neural networks

  6 [p. 370] software for deep learning. our deep learning convolutional net-
work for the cifar-100 data was constructed and run by rakesh achanta
in theano, a python-based system (bastien et al., 2012; bergstra et al.,
2010). theano has a user-friendly language for specifying the host of
parameters for a deep-learning network, and uses symbolic differentiation
for computing the gradients needed in stochastic id119. in 2015
google announced an open-source version of their tensorflow software
for    tting deep networks.

19

support-vector machines and kernel

methods

while linear id28 has been the mainstay in biostatistics and
epidemiology, it has had a mixed reception in the machine-learning com-
munity. there the goal is often classi   cation accuracy, rather than statistical
one ifbpr.y d 1jx d x/ (cid:21) 0:5. id166s bypass the    rst step, and build a
id136. id28 builds a classi   er in two steps:    t a condi-
tional id203 model for pr.y d 1jx d x/, and then classify as a

classi   er directly.

another rather awkward issue with id28 is that it fails if
the training data are linearly separable! what this means is that, in the
feature space, one can separate the two classes by a linear boundary. in
cases such as this, maximum likelihood fails and some parameters march
off to in   nity. while this might have seemed an unlikely scenario to the
early users of id28, it becomes almost a certainty with mod-
ern wide genomics data. when p (cid:29) n (more features than observations),
we can typically always    nd a separating hyperplane. finding an optimal
separating hyperplane was in fact the launching point for id166s. as we
will see, they have more than this to offer, and in fact live comfortably
alongside id28.

id166s pursued an age-old approach in statistics, of enriching the feature
space through nonlinear transformations and basis expansions; a classical
example being augmenting a id75 with interaction terms. a
linear model in the enlarged space leads to a nonlinear model in the ambient
space. this is typically achieved via the    kernel trick,    which allows the
computations to be performed in the n-dimensional space for an arbitrary
number of predictors p. as the    eld matured, it became clear that in fact
this kernel trick amounted to estimation in a reproducing-kernel hilbert
space.

finally, we contrast the kernel approach in id166s with the nonparame-

teric regression techniques known as kernel smoothing.

375

376

id166s and kernel methods

19.1 optimal separating hyperplane

figure 19.1 shows a small sample of points in r2, each belonging to one of
two classes (blue or orange). numerically we would score these classes as
y d c1 for say blue, and y d (cid:0)1 for orange.1 we de   ne a two-class lin-
ear classi   er via a function f .x/ d   0 c x
  , with the convention that we
classify a point x0 as +1 if f .x0/ > 0, and as -1 if f .x0/ < 0 (on the fence
we    ip a coin). hence the classi   er itself is c.x/ d sign  f .x/  . the deci-

0

figure 19.1 left panel: data in two classes in r2. three potential
decision boundaries are shown; each separate the data perfectly.
right panel: the optimal separating hyperplane (a line in r2)
creates the biggest margin between the two classes.

sion boundary is the set fx j f .x/ d 0g. we see three different classi   ers
in the left panel of figure 19.1, and they all classify the points perfectly.
the optimal separating hyperplane is the linear classi   er that creates the
largest margin between the two classes, and is shown in the right panel
(it is also known as an optimal-margin classi   er). the underlying hope is
that, by making a big margin on the training data, it will also classify future
observations well.

some elementary geometry    shows that the (signed) euclidean distance

from a point x0 to the linear decision boundary de   ned by f is given by

  1

1k  k2

f .x0/:

with this in mind, for a separating hyperplane the quantity 1k  k2
1 in this chapter, the   1 scoring leads to convenient notation.

(19.1)

yi f .xi / is

   10123   10123x1x2llllllllllllllllllllllll   10123   10123x1x2llllllllllllllllllllllllllllllllllllllllllllllll19.1 optimal separating hyperplane

377

the distance of xi from the decision boundary.2 this leads to an optimiza-
tion problem for creating the optimal margin classi   er:

maximize

  0;   

m

subject to

1k  k2

yi .  0 c x

0

  / (cid:21) m; i d 1; : : : ; n:

a rescaling argument reduces this to the simpler form

k  k2

minimize
subject to yi .  0 c x

  0;   

0

  / (cid:21) 1; i d 1; : : : ; n:

this is a quadratic program, which can be solved by standard techniques
in id76.   one noteworthy property of the solution is that

  2

(19.2)

(19.3)

(19.4)

   dx

o

i2
s

o  i xi ;

s

where s is the support set. we can see in figure 19.1 that the margin
touches three points (vectors); in this case there are j
j d 3 support vec-
tors, and clearly the orientation of o
   is determined by them. however, we
still have to solve the optimization problem to identify the three points
i 2
in s, and their coef   cients   i ;
s. figure 19.2 shows an optimal-
margin classi   er    t to wide data, that is data where p (cid:29) n. these are
gene-expression measurements on p d 3571 genes measured on blood
samples from n d 72 leukemia patients (   rst seen in chapter 1). they
were classi   ed into two classes, 47 acute lymphoblastic leukemia (all)
and 25 myeloid leukemia (aml). in cases like this, we are typically guar-
anteed a separating hyperplane3. in this case 42 of the 72 points are support
points. one might be justi   ed in thinking that this solution is over   t to this
small amount of data. indeed, when broken into a training and test set, we
see that the test data encroaches well into the margin region, but in this
case none are misclassi   ed. such classi   ers are very popular in the wide-
data world of genomics, largely because they seem to work very well. they
offer a simple alternative to id28, in a situation where the lat-
ter fails. however, sometimes the solution is over   t, and a modi   cation is
called for. this same modi   cation takes care of nonseparable situations as
well.
2 since all the points are correctly classi   ed, the sign of f .xi / agrees with yi , hence this
quantity is always positive.
3 if n   p c 1 we can always    nd a separating hyperplane, unless there are exact feature
ties across the class barrier!

378

id166s and kernel methods

figure 19.2 left panel: optimal margin classi   er    t to
leukemia data. there are 72 observations from two
classes   47 all and 25 aml   and 3571 gene-expression
variables. of the 72 observations, 42 are support vectors, sitting
on the margin. the points are plotted against their    tted classi   er
function o
component of the data (chosen for display purposes, since it has
low correlation with the former). right panel: here the optimal
margin classi   er was    t to a random subset of 50 of the 72
observations, and then used to classify the remaining 22 (shown
in color). although these points fall on the wrong sides of their
respective margins, they are all correctly classi   ed.

f .x/, labeled id166 projection, and the    fth principal

19.2 soft-margin classi   er

figure 19.3 shows data in r2 that are not separable. the generalization to
a soft margin allows points to violate their margin. each of the violators
has a line segment connecting it to its margin, showing the extent of the
violation. the soft-margin classi   er solves

k  k2

  0;   

minimize
subject to yi .  0 c x
(cid:15)i (cid:21) 0; i d 1; : : : ; n; and

nx
i   / (cid:21) 1 (cid:0) (cid:15)i ;
0

(cid:15)i   b:

id1

(19.5)

here b is the budget for the total amount of overlap. once again, the solu-
tion has the form (19.4), except now the support set s includes any vectors
on the margin as well as those that violate the margin. the bigger b, the

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll   1.5   1.0   0.50.00.51.01.5   0.2   0.10.00.10.20.3leukemia: all dataid166 projectionpca 5 projectionllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll   1.5   1.0   0.50.00.51.0   0.2   0.10.00.10.20.3leukemia: train and testid166 projectionpca 5 projectionllllllllllllllllllllllllllllllllllllllllllllllllllllllllll19.3 id166 criterion as loss plus penalty

379

figure 19.3 for data that are not separable, such as here, the
soft-margin classi   er allows margin violations. the budget b for
the total measure of violation becomes a tuning parameter. the
bigger the budget, the wider the soft margin and the more support
points there are involved in the    t.

bigger the support set, and hence the more points that have a say in the
solution. hence bigger b means more stability and lower variance. in fact,
even for separable data, allowing margin violations via b lets us regularize
the solution by tuning b.

19.3 id166 criterion as loss plus penalty

it turns out that one can reformulate (19.5) and (19.3) in more traditional
terms as the minimization of a loss plus a penalty:

nx
  1 (cid:0) yi .  0 c x

i   /  c c (cid:21)k  k2
0
2:

  0;   

id1

minimize

(19.6)
here the hinge loss lh .y; f .x// d   1 (cid:0) yf .x/  c operates on the margin
quantity yf .x/, and is piecewise linear as in figure 19.4.  the same margin   3
quantity came up in boosting in section 17.4. the quantity   1 (cid:0) yi .  0 c
0
i   /  c is the cost for xi being on the wrong side of its margin (the cost
x
is zero if it   s on the correct side). the correspondence between (19.6) and
(19.5) is exact; large (cid:21) corresponds to large b, and this formulation makes
explicit the form of id173. for separable data, the optimal separat-
ing hyperplane solution (19.3) corresponds to the limiting minimum-norm
solution as (cid:21) # 0. one can show that the population minimizer of the

   2   101234   101234x1x2llllllllllllllllllllllllllllllllllllllllllllllllllllllllllll   2   101234   101234x1x2llllllllllllllllllllllllllllllllllllllllllllllllllllllllllll380

id166s and kernel methods

figure 19.4 the hinge loss penalizes observation margins yf .x/
less than c1 linearly, and is indifferent to margins greater than
c1. the negative binomial log-likelihood (deviance) has the
same asymptotes, but operates in a smoother fashion near the
elbow at yf .x/ d 1.

  4

hinge loss is in fact the bayes classi   er.4 this shows that the id166 is in
fact directly estimating the classi   er c.x/ 2 f(cid:0)1;c1g.  
the red curve in figure 19.4 is (half) the binomial deviance for logistic
regression (i.e. f .x/ d   0 c x
   is now modeling logit pr.y d c1jx d
x/). with y d   1, the deviance can also be written in terms of the margin,
nx
and the ridged id28 corresponding to (19.6) has the form

(cid:0)yi .  0cx

0

log  1 c e

0

i    /   c (cid:21)k  k2
2:

(19.7)

minimize

  0;   

id1

id28 is discussed in section 8.1, as well as sections 16.5 and
17.4. this form of the binomial deviance is derived in (17.13) on page 343.
these id168s have some features in common, as can be seen in the
   gure. the binomial loss asymptotes to zero for large positive margins, and
to a linear loss for large negative margins, matching the hinge loss in this
regard. the main difference is that the hinge has a sharp elbow at +1, while
the binomial bends smoothly. a consequence of this is that the binomial
solution involves all the data, via weights pi .1 (cid:0) pi / that fade smoothly
with distance from the decision boundary, as apposed to the binary nature

4 the bayes classi   er c.x/ for a two-class problem using equal costs for
misclassi   cation errors assigns x to the class for which pr.yjx/ is largest.

   3   2   101230.00.51.01.52.02.53.0yf(x)lossbinomialid16619.4 computations and the kernel trick

381

 pr.y d c1jx/

 

of support points. also, as seen in section 17.4 as well, the population
minimizer of the binomial deviance is the logit of the class id203

(cid:21).x/ d log

;

pr.y d (cid:0)1jx/

(19.8)
while that of the hinge loss is its sign c.x/ d sign  (cid:21).x/  . interestingly,
as (cid:21) # 0 the solution direction o
   to the ridged id28 prob-
lem (19.7) converges to that of the id166.  
these forms immediately suggest other generalizations of the linear
id166. in particular, we can replace the ridge penalty k  k2
2 by the sparsity-
inducing lasso penalty k  k1, which will set some coef   cients to zero and
hence perform feature selection. publicly available software (e.g. package
liblinear in r) is available for    tting such lasso-regularized support-
vector classi   ers.

  5

19.4 computations and the kernel trick

the form of the solution o
o  i xi for the optimal- and soft-margin
classi   er has some important consequences. for starters, we can write the
   tted function evaluated at a point x as
  0 c x

i2
s

0 o
  

o  ihx; xii;

(19.9)

   dp
f .x/ d o
o
d o

  0 cx

i2
s

where we have deliberately replaced the transpose notation with the more
suggestive inner product. furthermore, we show in (19.23) in section 19.9
that the lagrange dual involves the data only through the n2 pairwise inner
products hxi ; xji (the elements of the n(cid:2) n gram matrix xx
0). this means
that the computations for computing the id166 solution scale linearly with
p, although potentially cubic5 in n. with very large p (in the tens of thou-
sands and even millions as we will see), this can be convenient.

it turns out that all ridge-regularized linear models with wide data can

be reparametrized in this way. take ridge regression, for example:

  

minimize
   d .x

ky (cid:0) x   k2
x c (cid:21)ip/
(cid:0)1x

2

c (cid:21)k  k2
2:
0

this has solution o
y, and with p large requires
inversion of a p (cid:2) p matrix. however, it can be shown that o
0 o   d
5 in practice o.n2jsj/, and, with modern approximate solutions, much faster than that.

   d x

0

(19.10)

  6

  7

382

0 c (cid:21)in/

id166s and kernel methods

   has the same form as for the id166.  

pn
o  i xi, with o   d .xx
(cid:0)1y, which means the solution can
id1
be obtained in o.n2p/ rather than o.np2/ computations. again the gram
matrix has played a role, and o
we now imagine expanding the p-dimensional feature vector x into a
potentially much larger set h.x/ d   h1.x/; h2.x/; : : : ; hm.x/  ; for an ex-
ample to latch onto, think polynomial basis of total degree d. as long as we
have an ef   cient way to compute the inner products hh.x/; h.xj /i for any
x, we can compute the id166 solution in this enlarged space just as easily
as in the original. it turns out that convenient id81s exist that do
just that. for example kd .x; z/ d .1 c hx; zi/d creates a basis expansion
hd of polynomials of total degree d, and kd .x; z/ d hhd .x/; hd .z/i.  
the polynomial kernels are mainly useful as existence proofs; in practice
other more useful kernels are used. probably the most popular is the radial
kernel

k.x; z/ d e

(cid:0)(cid:13)kx(cid:0)zk2
2 :

(19.11)

this is a positive de   nite function, and can be thought of as computing an
inner product in some feature space. here the feature space is in principle
in   nite-dimensional, but of course effectively    nite.6 now one can think
of the representation (19.9) in a different light;

o  i k.x; xi /;

(19.12)

f .x/ d o  0 cx

o

i2
s

an expansion of radial basis functions, each centered on one of the train-
ing examples. figure 19.5 illustrates such an expansion in r1. using such
nonlinear kernels expands the scope of id166s considerably, allowing one
to    t classi   ers with nonlinear decision boundaries.

one may ask what objective is being optimized when we move to this
kernel representation. this is covered in the next section, but as a sneak
preview we present the criterion

"

nx

1 (cid:0) yj

 
  0 c nx

!#

c (cid:21)  

0

c

  0;   

k   ;

id1

jd1

(19.13)

  i k.xj ; xi /

minimize
where the n (cid:2) n matrix k has entries k.xj ; xi /.
as an illustrative example in r2 (so we can visualize the nonlinear
boundaries), we generated the data in figure 19.6. we show two id166
6 a bivariate function k.x; z/ (rp (cid:2) rp 7! r1) is positive-de   nite if, for every q,
every q (cid:2) q matrix k d fk.xi ; xj /g formed using distinct entries x1; x2; : : : ; xq is
positive de   nite. the feature space is de   ned in terms of the eigen-functions of the
kernel.

19.4 computations and the kernel trick

383

figure 19.5 radial basis functions in r1. the left panel shows a
collection of radial basis functions, each centered on one of the
seven observations. the right panel shows a function obtained
from a particular linear expansion of these basis functions.

solutions, both using a radial kernel. in the left panel, some margin errors
are committed, but the solution looks reasonable. however, with the    ex-
ibility of the enlarged feature space, by decreasing the budget b we can
typically over   t the training data, as is the case in the right panel. a sepa-
rate little blue island was created to accommodate the one blue point in a
sea of brown.

figure 19.6 simulated data in two classes in r2, with id166
classi   ers computed using the radial kernel (19.11). the left
panel uses a larger value of b than the right. the solid lines are
the decision boundaries in the original space (linear boundaries in
the expanded feature space). the dashed lines are the projected
margins in both cases.

   2   10120.00.51.01.5   2   1012   0.40.00.20.4radialbasisfunctionsf(x)k(x,xj)f(x)=  0+pj  jk(x,xj)xx   4   2024   4   2024x1x2llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll        llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll   4   2024   4   2024x1x2llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll                    lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll384

id166s and kernel methods

19.5 function fitting using kernels

the analysis in the previous section is heuristic   replacing inner products
by kernels that compute inner products in some (implicit) feature space.
indeed, this is how kernels were    rst introduced in the id166 world. there
is however a rich literature behind such approaches, which goes by the
name function    tting in reproducing-kernel hilbert spaces (rkhss). we
give a very brief overview here. one starts with a bivariate positive-de   nite
kernel k w rp (cid:2) rp ! r1, and we consider a space hk of functions
f w rp ! r1 generated by the kernel: f 2 spanfk.(cid:1); z/; z 2 rpg7 the
kernel also induces a norm on the space kf k
hk ,   which can be thought of
as a roughness measure.
we can now state a very general optimization problem for    tting a func-

tion to data, when restricted to this class;

  8

)

l.yi ;   0 c f .xi // c (cid:21)kf k2
hk

;

(19.14)

( nx

id1

minimize

f 2

hk

a search over a possibly in   nite-dimensional function space. here l is an
arbitrary id168. the    magic    of these spaces in the context of this
problem is that one can show that the solution is    nite-dimensional:

f .x/ d nx

o

o  i k.x; xi /;

id1

(19.15)
a linear basis expansion with basis functions ki .x/ d k.x; xi / anchored
at each of the observed    vectors    xi in the training data. moreover, using
the    reproducing    property of the kernel in this space, one can show that
the penalty reduces to
k o
f k2
hk

(19.16)
here k is the n(cid:2) n gram matrix of evaluations of the kernel, equivalent to
the xx

0 matrix for the linear case.

o  i o  j k.xi ; xj / d o  

d nx

nx

k o  :

jd1

id1

0

hence the abstract problem (19.14) reduces to the generalized ridge

problem

minimize

  2rn

8<: nx

id1

0@yi ;   0 c nx

jd1

l

1a c (cid:21)  

0

k   

9=; :

  i k.xi ; xj /

(19.17)

7 here kz d k.(cid:1); z/ is considered a function of the    rst argument, and the second
argument is a parameter.

19.6 example: string kernels for protein classi   cation

385

indeed, if l is the hinge loss as in (19.6), this is the equivalent    loss plus
penalty    criterion being    t by the kernel id166. alternatively, if l is the bi-
nomial deviance loss as in (19.7), this would    t a kernel version of logistic
regression. hence most    tting methods can be generalized to accommodate
kernels.

this formalization opens the door to a wide variety of applications, de-
pending on the id81 used. alternatively, as long as we can com-
pute suitable similarities between objects, we can build sophisticated clas-
si   ers and other models for making predictions about other attributes of
the objects.8 in the next section we consider a particular example.

19.6 example: string kernels for protein classi   cation

one of the important problems in computational biology is to classify pro-
teins into functional and structural classes based on their sequence simi-
larities. protein molecules can be thought of as strings of amino acids, and
differ in terms of length and composition. in the example we consider, the
lengths vary between 75 and 160 amino-acid molecules, each of which can
be one of 20 different types, labeled using the letters of the alphabet.

here follow two protein examples x1 and x2, of length 110 and 153

respectively:

iptsalvketlallsthrtllianetlripvpvhknhqlcteeifqgigtlesqtvqggtv
erlfknlslikkyidgqkkkcgeerrrvnqfldylqeflgvmntewi

phrrdlcsrsiwlarkirsdltaltesyvkhqglwselteaerlqenlqayrtfhvlla
rlledqqvhftptegdfhqaihtlllqvaafayqieelmilleykiprneadgmlfekk
lwglkvlqelsqwtvrsihdlrfisshqtgip

we treat the proteins x as documents consisting of letters, with a dictio-
nary of size 20. our feature vector hm.x/ will consist of the counts for all
m-grams in the protein   that is, distinct sequences of consecutive letters of
length m. as an illustration, we use m d 3, which results in 203 d8,000
possible sub-sequences; hence h3.x/ will be a vector of length 8,000, with
each element the number of times that particular sub-sequence occurs in
the protein x. in our example, the sub-sequence lqe occurs once in the
lqe.x2/ d 2.
   rst, and twice in the second protein, so h3
the number of possible sequences of length m is 20m, which can be very

lqe.x1/ d 1 and h3

8 as long as the similarities behave like inner products; i.e. they form positive

semi-de   nite matrices.

386

id166s and kernel methods

large for moderate m. also the vast majority of the sub-sequences do not
match the strings in our training set, which means hm.x/ will be sparse. it
turns out that we can compute the n(cid:2)n inner product matrix or string kernel
km.x1; x2/ d hhm.x1/; hm.x2/i ef   ciently using tree structures, without
actually computing the individual vectors.    armed with the kernel, we

  9

figure 19.7 roc curves for two classi   ers    t to the protein data.
the roc curves were computed using 10-fold cross-validation,
and trace the trade-off between false-positive and true-positive
error rates as the classi   er threshold is varied. the area under the
curve (auc) summarizes the overall performance of each
classi   er. here the id166 is slightly superior to kernel logistic
regression.

can now use it to    t a regularized id166 or id28 model, as
outlined in the previous section. the data consist of 1708 proteins in two
classes   negative (1663) and positive (45). we    t both the kernel id166
and kernel id28 models. for both methods, cross-validation
suggested a very small value for (cid:21). figure 19.7 shows the roc trade-off
curve for each, using 10-fold cross-validation. here the id166 outperforms
id28.

protein classificationfalse-positive ratetrue-positive rate0.00.20.40.60.81.00.00.20.40.60.81.0aucid166  0.84klr  0.7819.7 id166s: concluding remarks

387

19.7 id166s: concluding remarks

id166s have been wildly successful, and are one of the    must have    tools in
any machine-learning toolbox. they have been extended to cover many dif-
ferent scenarios, other than two-class classi   cation, with some awkward-
ness in cases. the extension to nonlinear function-   tting via kernels (in-
spiring the    machine    in the name) generated a mini industry. kernels are
parametrized, learned from data, with special problem-speci   c structure,
and so on.

on the other hand, we know that    tting high-dimensional nonlinear
functions is intrinsically dif   cult (the    curse of dimensionality   ), and id166s
are not immune. the quadratic penalty implicit in kernel methodology
means all features are included in the model, and hence sparsity is gen-
erally not an option. why then this unbridled enthusiasm? classi   ers are
far less sensitive to bias   variance tradeoffs, and id166s are mostly popular
for their classi   cation performance. the ability to de   ne a kernel for mea-
suring similarities between abstract objects, and then train a classi   er, is a
novelty added by these approaches that was missed in the past.

19.8 kernel smoothing and local regression

the phrase    kernel methodology    might mean something a little different
to statisticians trained in the 1970   90 period. kernel smoothing represents
a broad range of tools for performing non- and semi-parametric regres-
sion. figure 19.8 shows a gaussian kernel smooth    t to some arti   cial data
fxi ; yign
1. it computes at each point x0 a weighted average of the y-values
of neighboring points, with weights given by the height of the kernel. in its
simplest form, this estimate can be written as

f .x0/ d nx

o

id1

yi k(cid:13) .x0; xi /;

(19.18)

where k(cid:13) .x0; xi / represents the radial kernel with width parameter (cid:13).9
notice the similarity to (19.15); here the o  i d yi, and the complexity of
the model is controlled by (cid:13). despite this similarity, and the use of the
same kernel, these methodologies are rather different.

the focus here is on local estimation, and the kernel does the local-
izing. expression (19.18) is almost a weighted average   almost because

9 here k(cid:13) .x; (cid:22)/ is the normalized gaussian density with mean (cid:22) and variance 1=(cid:13).

388

id166s and kernel methods

figure 19.8 a gaussian kernel smooth of simulated data. the
points come from the blue curve with added random errors. the
kernel smoother    ts a weighted mean of the observations, with
the weighting kernel centered at the target point, x0 in this case.
the points shaded orange contribute to the    t at x0. as x0 moves
across the domain, the smoother traces out the green curve. the
width of the kernel is a tuning parameter. we have depicted the
gaussian weighting kernel in this    gure for illustration; in fact its
vertical coordinates are all positive and integrate to one.

pn
id1 k(cid:13) .x0; xi / (cid:25) 1. in fact, the nadaraya   watson estimator is more ex-
plicit:

fn w .x0/ dpn
pn

o

id1 yi k(cid:13) .x0; xi /
id1 k(cid:13) .x0; xi /

:

(19.19)

although figure 19.8 is one-dimensional, the same formulation applies to
x in higher dimensions.

weighting kernels other than the gaussian are typically favored; in par-

ticular, near-neighbor kernels with compact support. for example, the tricube
kernel used by the lowess smoother in r is de   ned as follows:
1 de   ne di d kx0 (cid:0) xik2; i d 1; : : : ; n, and let d.m/ be the mth smallest
(the distance of the mth nearest neighbor to x0). let ui d di =d.m/; i d
1; : : : ; n.

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0.00.20.40.60.81.0   1.0   0.50.00.51.01.5gaussian kernelxylllllllllllllllllllllllllllllllllllllllllllllllllx02 the tricube kernel is given by

19.8 kernel smoothing and local regression

( (cid:0)1 (cid:0) u3

i

(cid:1)3

0

if ui   1;
otherwise,

ks.x0; xi / d

389

(19.20)

where s d m=n, the span of the kernel. near-neighbor kernels such as
this adapt naturally to the local density of the xi; wider in low-density
regions, narrower in high-density regions. a tricube kernel is illustrated
in figure 19.9.

figure 19.9 local regression    t to the simulated data. at each
point x0, we    t a locally weighted linear least-squares model, and
use the    tted value to estimate o
flr.x0/. here we use the tricube
kernel (19.20), with a span of 25%. the orange points are in the
weighting neighborhood, and we see the orange linear    t
computed by kernel weighted least squares. the green dot is the
   tted value at x0 from this local linear    t.

weighted means suffer from boundary bias   we can see in figure 19.8 that
the estimate appears biased upwards at both boundaries. the reason is that,
for example on the left, the estimate for the function on the boundary aver-
ages points always to the right, and since the function is locally increasing,
there is an upward bias. local id75 is a natural generalization
that    xes such problems. at each point x0 we solve the following weighted

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll0.00.20.40.60.81.0   1.0   0.50.00.51.01.5local regression (tricube)xylllllllllllllllllllllllllllx0390

id166s and kernel methods

least-squares problem

o
  0.x0/;

.

nx
o
  .x0// d arg min
id1
o
  0.x0/ c x0
  .x0/. one can show that, to    rst order,

ks.x0; xi /.yi (cid:0)   0 (cid:0) xi   /2:

(19.21)

  0;  

flr.x0/ d o

then o
o
flr.x0/ removes the boundary bias exactly.  

  10

figure 19.9 illustrates the procedure on our simulated data, using the
tricube kernel with a span of 25% of the data. in practice, the width of the
kernel (the span here) has to be selected by some means; typically we use
cross-validation.

local regression works in any dimension; that is, we can    t two- or
higher-dimensional surfaces using exactly the same technique. here the
ability to remove boundary bias really pays off, since the boundaries can
be complex. these are referred to as memory-based methods, since there
is no    tted model. we have to save all the training data, and recompute the
local    t every time we make a prediction.

like kernel id166s and their relatives, kernel smoothing and local regres-
sion break down in high dimensions. here the near neighborhoods become
so wide that they are no longer local.

19.9 notes and details

in the late 1980s and early 1990s, machine-learning research was largely
driven by prediction problems, and the neural-network community at at&t
bell laboratories was amongst the leaders. the problem of the day was
the us post-of   ce handwritten zip-code ocr challenge   a 10-class im-
age classi   cation problem. vladimir vapnik was part of this team, and
along with colleagues invented a more direct approach to classi   cation, the
support-vector machine. this started with the seminal paper by boser et al.
(1992), which introduced the optimal margin classi   er (optimal separating
hyperplane); see also vapnik (1996). the ideas took off quite rapidly, at-
tracting a large cohort of researchers, and evolved into the more general
class of    kernel    methods   that is, models framed in reproducing-kernel
hilbert spaces. a good general reference is sch  olkopf and smola (2001).
x c   0 de-
   ne a linear decision boundary fx j f .x/ d 0g in rp (an af   ne set of co-
dimension one). the unit vector normal to the boundary is   =k  k2, where
k (cid:1) k2 denotes the `2 or euclidean norm. how should one compute the dis-
tance from a point x to this boundary? if x0 is any point on the boundary

  1 [p. 376] geometry of separating hyperplanes. let f .x/ d   

0

19.9 notes and details

391

(i.e. f .x0/ d 0), we can project x (cid:0) x0 onto the normal, giving us

  

0

.x (cid:0) x0/
k  k2

d 1k  k2

f .x/;

)

ing to (19.3) can be written as

   c nx

as claimed in (19.1). note that this is the signed distance, since f .x/ will
be positive or negative depending on what side of the boundary it lies on.
  2 [p. 377] the    support    in id166. the lagrange primal problem correspond-

0

1

  0;   

(
id1 (cid:13)i yi xi andpn
( nx

(cid:13)i   1 (cid:0) yi .  0 c x

0
i   /  

;

2

  

id1

minimize

   dpn

(19.22)
where (cid:13)i (cid:21) 0 are the lagrange multipliers. on differentiating we    nd that
id1 yi (cid:13)i d 0. with   i d yi (cid:13)i, we get (19.4), and
note that the positivity constraint on (cid:13)i will lead to some of the   i being
nx
zero. plugging into (19.22) we obtain the lagrange dual problem

nx

maximize

f(cid:13)ign

1

(cid:13)i (cid:0) 1

id1

2

id1

jd1

(cid:13)i (cid:13)j yi yj x

9=;

(19.23)

subject to (cid:13)i (cid:21) 0;

yi (cid:13)i d 0:

0
i xj

nx

id1

  3 [p. 379] the id166 id168. the constraint in (19.5) can be succinctly

captured via the expression

nx
  1 (cid:0) yi .  0 c x

id1

i   /  c   b:
0

(19.24)

we only require a (positive) (cid:15)i if our margin is less than 1, and we get
charged for the sum of these (cid:15)i. we now use a lagrange multiplier to en-
force the constraint, leading to
c (cid:13)

nx
  1 (cid:0) yi .  0 c x

minimize

k  k2

(19.25)

0
i   /  c:

2

  0;   

id1

multiplying by (cid:21) d 1=(cid:13) gives us (19.6).

  4 [p. 380] the id166 estimates a classi   er. the following derivation is due to

wahba et al. (2000). consider

ey jxdx f  1 (cid:0) yf .x/  cg :

minimize

f .x/

(19.26)

id166s and kernel methods

392
dropping the dependence on x, the objective can be written as pc  1 (cid:0)
f   cc p(cid:0)  1c f   c, where pc d pr.y d c1jx d x/, and p(cid:0) d pr.y d
(cid:0)1jx d x/ d 1 (cid:0) pc. from this we see that

f d(cid:26) c1 if pc > 1

(cid:0)1 if p(cid:0) < 1
2
2 :

(19.27)

  =k o

  5 [p. 381] id166 and ridged id28. rosset et al. (2004) show
that the limiting solution as (cid:21) # 0 to (19.7) for separable data coincides
with that of the id166, in the sense that o
  k2 converges to the same
quantity for the id166. however, because of the required id172
for id28, the id166 solution is preferable. on the other hand,
for overlapped situations, the logistic-regression solution has some advan-
tages, since its target is the logit of the class probabilities.
  6 [p. 382] the kernel trick. the trick here is to observe that from the score
.y (cid:0) x   / c (cid:21)   d 0, which means we can write
equations we have (cid:0)x
o
   d x
   for some   . we now plug this into the score equations, and
some simple manipulation gives the result. a similar result holds for ridged
id28, and in fact any linear model with a ridge penalty on the
coef   cients (hastie and tibshirani, 2004).
  7 [p. 382] polynomial kernels. consider k2.x; z/ d .1 c hx; zi/2, for x

0

0

(and z) in r2. expanding we get

k2.x; z/ d 1 c 2x1z1 c 2x2z2 c 2x1x2z1z2 c x2
1 z2

1

c x2
2 z2
2 :

this corresponds to hh2.x/; h2.z/i with

p

p

p

h2.x/ d .1;

2x1;

2x2;

2x1x2; x2

1 ; x2

2 /:

the same is true for p > 2 and for degree d > 2.

  8 [p. 384] reproducing kernel hilbert spaces. suppose k has eigen expan-
id1 (cid:13)i < 1. then

sion k.x; z/ dp1

id1 (cid:13)i (cid:30)i .x/(cid:30)i .z/, with (cid:13)i (cid:21) 0 andp1
hk if f .x/ dp1

we say f 2

1x

id1 ci (cid:30)i .x/, with
< 1:

 

c2
i
(cid:13)i

id1

kf k2
hk

(19.28)

often kf k
hk behaves like a roughness penalty, in that it penalizes unlikely
members in the span of k.(cid:1); z/ (assuming that these correspond to    rough   
functions). if f has some high loadings cj on functions (cid:30)j with small
eigenvalues (cid:13)j (i.e. not prominent members of the span), the norm becomes
large. smoothing splines and their generalizations correspond to function
   tting in a rkhs (wahba, 1990).

19.9 notes and details

393

  9 [p. 386] this methodology and the data we use in our example come from

leslie et al. (2003).

  10 [p. 390] local regression and bias reduction. by expanding the unknown
true f .x/ in a    rst-order taylor expansion about the target point x0, one
can show that e

o
flr.x0/ (cid:25) f .x0/ (hastie and loader, 1993).

20

id136 after model selection

the classical theory of model selection focused on    f tests    performed
within gaussian regression models. id136 after model selection (for in-
stance, assessing the accuracy of a    tted regression curve) was typically
done ignoring the model selection process. this was a matter of neces-
sity: the combination of discrete model selection and continuous regression
analysis was too awkward for simple mathematical description. electronic
computation has opened the door to a more honest analysis of estimation
accuracy, one that takes account of the variability induced by data-based
model selection.

figure 20.1 displays the cholesterol data, an example we will use
for illustration in what follows: cholestyramine, a proposed cholesterol-
lowering drug, was administered to n d 164 men for an average of seven
years each. the response variable di was the ith man   s decrease in choles-
terol level over the course of the experiment. also measured was ci, his
compliance or the proportion of the intended dose actually taken, ranging
from 1 for perfect compliers to zero for the four men who took none at all.
here the 164 ci values have been transformed to approximately follow a
standard normal distribution,

ci p(cid:24)

n .0; 1/:

(20.1)

we wish to predict cholesterol decrease from compliance. polynomial
regression models, with di a j th-order polynomial in ci, were considered,
for degrees j d 1; 2; 3; 4; 5, or 6. the cp criterion (12.51) was applied
and selected a cubic model, j d 3, as best. the curve in figure 20.1 is the
ols (ordinary least squares) cubic regression curve    t to the cholesterol
data set

f.ci ; di /; i d 1; 2; : : : ; 164g :

(20.2)

we are interested in answering the following question: how accurate is the

394

20.1 simultaneous con   dence intervals

395

figure 20.1 cholesterol data: cholesterol decrease plotted
versus adjusted compliance for 164 men taking
cholestyramine. the green curve is ols cubic regression,
with    cubic    selected by the cp criterion. how accurate is the
   tted curve?

   tted curve, taking account of cp selection as well as ols estimation?
(see section 20.2 for an answer.)

currently, there is no overarching theory for id136 after model selec-
tion. this chapter, more modestly, presents a short series of vignettes that
illustrate promising analyses of individual situations. see also section 16.6
for a brief report on progress in post-selection id136 for the lasso.

20.1 simultaneous con   dence intervals

in the early 1950s, just before the beginnings of the computer revolution,
substantial progress was made on the problem of setting simultaneous con-
   dence intervals.    simultaneous    here means that there exists a catalog of
parameters of possible interest,

c d f 1;  2; : : : ;  jg;

(20.3)

and we wish to set a con   dence interval for each of them with some    xed
id203, typically 0.95, that all of the intervals will contain their respec-
tive parameters.

********************************************************************************************************************************************************************   2   1012   20020406080100adjusted compliancecholesterol decreaseid136 after model selection

396
as a    rst example, we return to the diabetes data of section 7.3: n d
442 diabetes patients each have had p d 10 medical variables measured at
baseline, with the goal of predicting prog, disease progression one year
later. let x be the 442 (cid:2) 10 matrix with ith row x
0
i the 10 measurements
for patient i; x has been standardized so that each of its columns has mean
0 and sum of squares 1. also let y be the 442-vector of centered prog
measurements (that is, subtracting off the mean of the prog values).

ordinary least squares applied to the normal linear model,

(20.4)

(20.5)

(20.6)

(20.7)

y (cid:24)

nn.x   ; (cid:27) 2i/;

o
   d .x

0

(cid:0)1x

0

y;

x /

o
   (cid:24)

np.  ; (cid:27) 2v /;

v d .x

0

(cid:0)1;

x /

yields id113

satisfying

as at (7.34).

nent of   , is

the 95% student-t con   dence interval (11.49) for   j , the j th compo-

o
  j    o(cid:27) v 1=2

jj

t :975
q

;

where o(cid:27) d 54:2 is the usual unbiased estimate of (cid:27),

o(cid:27) 2 d ky (cid:0) x

o
  k2=q;

q d n (cid:0) p d 432;

q

(20.8)
d 1:97 is the 0.975 quantile of a student-t distribution with q
and t :975
degrees of freedom.
the catalog c in (20.3) is now f  1;   2; : : : ;   10g. the individual inter-
vals (20.7), shown in table 20.1, each have 95% coverage, but they are not
simultaneous: there is a greater than 5% chance that at least one of the   j
values lies outside its claimed interval.

valid 95% simultaneous intervals for the 10 parameters appear on the

right side of table 20.1. these are the scheff  e intervals

o
  j    o(cid:27) v 1=2
(20.9)
jj k.  /
p;q;
p;q equals 4.30 for p d 10, q d
discussed next. the crucial constant k.  /
432, and    d 0:95. that makes the scheff  e intervals wider than the t
intervals (20.7) by a factor of 2.19. one expects to pay an extra price for
simultaneous coverage, but a factor greater than two induces sticker shock.

scheff  e   s method depends on the pivotal quantity

q d(cid:16) o

 0

(cid:0)1(cid:16) o

   (cid:0)   

v

   (cid:0)   

 .o(cid:27) 2;

(20.10)

20.1 simultaneous con   dence intervals

397

table 20.1 maximum likelihood estimates o
variables (20.6); separate 95% student-t con   dence limits, also
simultaneous 95% scheff  e intervals. the scheff  e intervals are wider by a
factor of 2.19.

   for 10 diabetes predictor

student-t

scheff  e

o
  
(cid:0)0.5

lower upper
lower upper
(cid:0)6.1
(cid:0)12.7
age
5.1
(cid:0)5.7
sex (cid:0)11.4 (cid:0)17.1
(cid:0)24.0
bmi
31.0
24.8
18.5
11.1
map
15.4
9.3
21.6
2.1
(cid:0)37.7 (cid:0)76.7
1.2 (cid:0)123.0
tc
(cid:0)9.0
(cid:0)46.7
ldl
54.4
22.7
(cid:0)38.7
4.8 (cid:0)15.1
hdl
24.7
(cid:0)24.6
(cid:0)6.7
tch
23.5
8.4
ltg
51.9
35.8
0.6
19.7
(cid:0)3.0
(cid:0)10.3
glu
3.2
9.4

11.8
1.1
38.4
28.8
47.6
92.1
48.3
41.5
71.0
16.7

which under model (20.4) has a scaled    f distribution,   1

p;q is the   th quantile of a pfp;q distribution then prfq   k.  /2

if k.  /2
yields

q (cid:24) pfp;q:
 

(cid:0)1(cid:16)
   (cid:0) o

  

 0

   (cid:0) o

  

(cid:16)

8  <  :

pr

v

o(cid:27) 2

9>=>; d   

  k.  /2

p;q

(20.11)
p;q g d   

(20.12)

for any choice of    and (cid:27) in model (20.4). having observed o
   and o(cid:27),
(20.12) de   nes an elliptical con   dence region e for the parameter vector
  .
suppose we are interested in a particular linear combination of the coor-

dinates of   , say

  c d c

0

  ;

(20.13)

1 fp;q is distributed as .(cid:31)2

p=p/=.(cid:31)2

q=q/, the two chi-squared variates being

independent. calculating the percentiles of fp;q was a major project of the pre-war
period.

398

id136 after model selection

figure 20.2 ellipsoid of possible vectors    de   ned by (20.12)
determines con   dence intervals for   c d c
   according to the
   bounding hyperplane    construction illustrated. the red line
shows the con   dence interval for   c if c is a unit vector,
v c d 1.
0
c

0

  c 2 

where c is a    xed p-dimensional vector. if    exists in e then we must have
(20.14)

0
which turns out   to be the interval centered at o

  /; max
  2
e

min
  2
e

  /

.c

.c

0

  1

0 o
  ,

(20.15)

  c 2 o

  c    o(cid:27) .c

0

(cid:21)
  c d c
v c/1=2k.  /
p;q:

;

(this agrees with (20.9) where c is the j th coordinate vector .0; : : : ; 0; 1; 0,
: : : ; 0/

0.) the construction is illustrated in figure 20.2.

np.  ; (cid:27) 2v / independently of o(cid:27) 2 (cid:24) (cid:27) 2(cid:31)2
theorem (scheff  e)
then with id203    the con   dence statement (20.15) for   c d c
be simultaneously true for all choices of the vector c.

0

q=q,
   will

if o
   (cid:24)

0

here we can think of    model selection    as the choice of the linear com-
bination of interest  c d c
  . scheff  e   s theorem allows    data snooping   :
the statistician can examine the data and then choose which  c (or many
 c   s) to estimate, without invalidating the resulting con   dence intervals.
an important application has the o
  j    s as independent estimates of ef   -
cacy for competing treatments   perhaps different experimental drugs for
the same target disease:

o
  j

ind(cid:24)

n .  j ; (cid:27) 2=nj /;

for j d 1; 2; : : : ; j;

(20.16)

 lcb^20.1 simultaneous con   dence intervals

399

the nj being known sample sizes. in this case the catalog c might comprise
all pairwise differences   i (cid:0)   j , as the statistician tries to determine which
treatments are better or worse than the others.
the fact that scheff  e   s limits apply to all possible linear combinations
0
   is a blessing and a curse, the curse being their very large width, as seen
c
in table 20.1. narrower simultaneous limits   are possible if we restrict the   2
catalog c , for instance to just the pairwise differences   i (cid:0)   j .
a serious objection, along fisherian lines, is that the scheff  e con   dence
limits are accurate without being correct. that is, the intervals have the
claimed overall frequentist coverage id203, but may be misleading
when applied to individual cases. suppose for instance that (cid:27) 2=nj d 1 for
j d 1; 2; : : : ; j in (20.16) and that we observe o
  1 d 10, with j o
  jj < 2 for
all the others. even if we looked at the data before singling out o
  1 for at-
tention, the usual student-t interval (20.7) seems more appropriate than its
much longer scheff  e version (20.9). this point is made more convincingly
in our next vignette.

(cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)

a familiar but pernicious abuse of model selection concerns multiple
hypothesis testing. suppose we observe n independent normal variates zi,
each with its own effect size (cid:22)i,

for i d 1; 2; : : : ; n;
and, as in section 15.1, we wish to test the null hypotheses

n .(cid:22)i ; 1/

ind(cid:24)

zi

(20.17)

(20.18)

h0i w (cid:22)i d 0:

being alert to the pitfalls of simultaneous testing, we employ a false-discov-
ery rate control algorithm (15.14), which rejects r of the n null hypothe-
ses, say for cases i1; i2; : : : ; ir. (r equaled 28 in the example of fig-
ure 15.3.)

so far so good. the    familiar abuse    comes in then setting the usual

con   dence intervals

(cid:22)i 2 o(cid:22)i    1:96

(20.19)

(95% coverage) for the r selected cases. this ignores the model selection
process: the data-based selection of the r cases must be taken into account
in making legitimate id136s, even if r is only 1 so multiplicity is not a
concern.

this problem is addressed by the theory of false-coverage control. sup-
pose algorithm a sets con   dence intervals for r of the n cases, of which

400

id136 after model selection

r are actually false coverages, i.e., ones not containing the true effect size
(cid:22)i. the false-coverage rate (fcr) of a is the expected proportion of non-
coverages
(20.20)

fcr.a/ d efr=rg;

the expectation being with respect to model (20.17). the goal, as with the
fdr theory of section 15.2, is to construct algorithm a to control fcr
below some    xed value q.
the byq algorithm2 controls fcr below level q in three easy steps,

beginning with model (20.17).

1 let pi be the p-value corresponding to zi,
pi d   .zi /

(20.21)

for left-sided signi   cance testing, and order the p.i / values in ascending
order,

p.1/   p.2/   p.3/   : : :   p.n /:

(20.22)
2 calculate r d maxfi w p.i /   i (cid:1) q=ng, and (as in the bhq algorithm
(15.14)   (15.15)) declare the r corresponding null hypotheses false.

(cid:22)i 2 zi    z.  r/;
(cid:0)1.  /).

3 for each of the r cases, construct the con   dence interval
where   r d 1 (cid:0) rq=n

(z.  / d   
theorem 20.1 under model (20.17), byq has fcr   q; moreover, none
of the intervals (20.23) contain (cid:22)i d 0.
a simulated example of byq was run according to these speci   cations:

(20.23)

n d 10,000;
(cid:22)i d 0
n .(cid:0)3; 1/

q d 0:05;

zi (cid:24)
for i d 1; 2; : : : ; 9000;
for i d 9001; : : : ; 10,000:

n .(cid:22)i ; 1/

(cid:22)i (cid:24)

(20.24)

in this situation we have 9000 null cases and 1000 non-null cases (all but 2
of which had (cid:22)i < 0).

because this is a simulation, we can plot the pairs .zi ; (cid:22)i / to assess the
byq algorithm   s performance. this is done in figure 20.3 for the 1000
non-null cases (the green points). byq declared r d 565 cases non-null,
those having zi   (cid:0)2:77 (the circled points); 14 of the 565 declarations

2 short for    benjamini   yekutieli;    see the chapter endnotes.

20.1 simultaneous con   dence intervals

401

figure 20.3 simulation experiment (20.24) with n d10,000
cases, of which 1000 are non-null; the green points .zi ; (cid:22)i / are
these non-null cases. the fdr control algorithm bhq (q d 0:05)
declared the 565 circled cases having zi   (cid:0)2:77 to be non-null,
of which the 14 red points were actually null. the heavy black
lines show byq 95% con   dence intervals for the 565 cases, only
17 of which failed to contain (cid:22)i. actual bayes posterior 95%
intervals for non-null cases (20.26), dotted lines, have half the
width and slope of byq limits.

were actually null cases (the red circled points), giving false-discovery pro-
portion 14=565 d 0:025. the heavy black lines trace the byq con   dence
limits (20.23) as a function of z   (cid:0)2:77.

the    rst thing to notice is that fcr control has indeed been achieved:
only 17 of the declared cases lie outside their limits (the 14 nulls and 3
non-nulls), for a false-coverage rate of 17=565 d 0:030, safely less than
q d 0:05. the second thing, however, is that the byq limits provide a
misleading idea of the location of (cid:22)i given zi: they are much too wide and
slope too low, especially for more negative zi values.

in this situation we can describe precisely the posterior distribution of

(cid:22)i given zi for the non-null cases,
(cid:22)ijzi (cid:24)

n

 

  zi (cid:0) 3

;

1

2

2

;

(20.25)

   8   6   4   20   10   8   6   4   20observed zmllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllby.loby.up   2.77llllllllllllllbayes.lobayes.upid136 after model selection

402
this following from (cid:22)i (cid:24)
(5.20)   (5.21). the bayes credible 95% limits

n .(cid:0)3; 1/, zij(cid:22)i (cid:24)
(cid:22)i 2 zi (cid:0) 3
   1p
2

2

1:96

n .(cid:22)i ; 1/, and bayes    rule

(20.26)

are indicated by the dotted lines in figure 20.3. they are half as wide as
the byq limits, and have slope 1=2 rather than 1.

in practice, of course, we would only see the zi, not the (cid:22)i, making
(20.26) unavailable to us. we return to this example in chapter 21, where
empirical bayes methods will be seen to provide a good approximation to
the bayes limits. (see figure 31.5.)

as with scheff  e   s method, the byq intervals can be accused of being
accurate but not correct.    correct    here has a bayesian/fisherian    avor
that is hard to pin down, except perhaps in large-scale applications, where
empirical bayes analyses can suggest appropriate id136s.

20.2 accuracy after model selection

the cubic regression curve for the cholesterol data seen in figure 20.1
was selected according to the cp criterion of section 12.3. polynomial
regression models, predicting cholesterol decrease di in terms of powers
(   degrees   ) of adjusted compliance ci, were    t by ordinary least squares
for degrees 0; 1; 2; : : : ; 6. table 20.2 shows cp estimates (12.51) being
minimized at degree 3.

table 20.2 cp table for cholesterol data of figure 20.1, comparing ols
polynomial models of degrees 0 through 6. the cubic model, degree d 3,
is the minimizer (80,000 subtracted from the cp values for easier
comparison; assumes (cid:27) d 22:0).

degree

0
1
2
3
4
5
6

cp
71887
1132
1412
667
1591
1811
2758

we wish to assess the accuracy of the    tted curve, taking account of both
the cp model selection method and the ols    tting process. the bootstrap

20.2 accuracy after model selection

403

is a natural candidate for the job. here we will employ the nonparamet-
ric bootstrap of section 10.2 (rather than the parametric bootstrap of sec-
tion 10.4, though this would be no more dif   cult to carry out).
the cholesterol data set (20.2) comprises n d 164 pairs xi d
(cid:3) (10.13) consists of 164 pairs
.ci ; di /; a nonparametric bootstrap sample x
chosen at random and with replacement from the original 164. let t .x/ be
the curve obtained by applying the cp/ols algorithm to the original data
(cid:3); and for a given
set x and likewise t .x
point c on the compliance scale let

/ for the algorithm applied to x

(cid:3)

(cid:3)

o
 
c

d t .c; x

(cid:3)

/

(20.27)

be the value of t .x

(cid:3)

/ evaluated at compliance d c.

figure 20.4 a histogram of 4000 nonparametric bootstrap
replications for polynomial regression estimates of cholesterol
decreases d at adjusted compliance c d (cid:0)2. blue histogram,
adaptive estimator o
(cid:3)
c (20.27), using full cp/ols algorithm for
 
each bootstrap data set; line histogram, using ols only with
degree 3 for each bootstrap data set. bootstrap standard errors are
5.98 and 3.97.

 cholesterol decrease q^   2*frequency   20   10010200100200300400fixed degree (3)adaptive degree1.27id136 after model selection
404
b d 4000 nonparametric bootstrap replications t .x
/ were generated.3
figure 20.4 shows the histogram of the 4000 o
c replications for c d (cid:0)2:0.
(cid:3)
it is labeled    adaptive    to indicate that cp model selection, as well as ols
(cid:3). this is as opposed to the       xed   
   tting, was carred out anew for each x
histogram, where there was no cp selection, cubic ols regression always
being used.

(cid:3)

 

figure 20.5 bootstrap standard-error estimates of o
(cid:0)2:2   c   2. solid black curve, adaptive estimator (20.27)
using full cp/ols model selection estimate; red dashed curve,
using ols only with polynomial degree    xed at 3;
blue dotted curve,    bagged estimator    using bootstrap smoothing
(20.28). average standard-error ratios: adaptive/   xed d 1:43,
adaptive/smoothed d 1:14.

 c, for

the bootstrap estimate of standard error (10.16) obtained from the adap-
tive values o
(cid:3)
c was 5.98, compared with 3.97 for the    xed values.4 in this
 
case, accounting for model selection (   adaptation   ) adds more than 50% to
the standard error estimates. the same comparison was made at all values

3 ten times more than needed for assessing standard errors, but helpful for the

comparisons that follow.

4 the latter is not the usual ols assessment, following (8.30), that would be appropriate

for a parametric bootstrap comparison. rather, it   s the nonparametric one-sample
bootstrap assessment, resampling pairs .xi ; yi / as individual sample points.

   2   101201234567adjusted compliance cstandard errors of q^cfixedadaptivesmoothed20.2 accuracy after model selection

405

of the adjusted compliance c. figure 20.5 graphs the results: the adaptive
standard errors averaged 43% greater than the    xed values. the standard
we ignored model selection in assessingbse.
95% con   dence intervals o

 c   bse (cid:1) 1:96 would be roughly 43% too short if

figure 20.6    adaptive    histogram of figure 20.4 now split into
19% of 4000 bootstrap replications where cp selected linear
(cid:3) d 1
(cid:3) d 1) as best, versus 81% having m
(cid:3)
> 1. m
regression (m
(cid:3)
cases are shifted about 10 units downward. (the m
> 1 cases
resemble the       xed    histogram in figure 20.4.) histograms are
scaled to have equal areas.

having an honest assessment of standard error doesn   t mean that t .c; x/
(20.27) is a good estimator. model selection can induce an unpleasant
   jumpiness    in an estimator, as the original data vector x crosses de   ni-
tional boundaries. this happened in our example: for 19% of the 4000
(cid:3) d 1,
(cid:3), the cp algorithm selected id75, m
bootstrap samples x
as best, and in these cases o
(cid:3)(cid:0)2:0 tended toward smaller values. figure 20.6
(cid:3) d 1 histogram shifted about 10 units down from the m
(cid:3)
shows the m
histogram (which now resembles the       xed    histogram in figure 20.4).

> 1

 

discontinuous estimators such as t .c; x/ can   t be bayesian, bayes pos-
terior expectations being continuous. they can also suffer frequentist dif   -
culties,    including excess variability and overly long con   dence intervals.   3

 cholesterol decrease q^   2*frequency   20   10010200204060801.27adaptivem* = 1adaptivem* > 1fixed m = 3406

id136 after model selection

id112, or bootstrap smoothing, is a tactic for improving a discontinuous
estimation rule by averaging (as in (12.80) and chapter 17).
replications ft .x
average

suppose t .x/ is any estimator for which we have obtained bootstrap
(cid:3)b/, b d 1; 2; : : : ; bg. the bagged version of t .x/ is the

bx

bd1

s.x/ d 1

b

(cid:3)b/:

t .x

(20.28)

the letter s here stands for    smooth.    small changes in x, even ones that
move across a model selection de   nitional boundary, produce only small
changes in the bootstrap average s.x/.

averaging over the 4000 bootstrap replications of t .c; x

/ (20.27) gave
a bagged estimate sc.x/ for each value of c. id112 reduced the standard
errors of the cp/ols estimates t .c; x/ by about 12%, as indicated by the
green dotted curve in figure 20.5.

t .c; x

where did the green dotted curve come from? all 4000 bootstrap values
(cid:3)b/ were needed to produce the single value sc.x/. it seems as if

we would need to bootstrap the bootstrap in order to computebse  sc.x/  .

fortunately, a more economical calculation is possible, one that requires
only the original b bootstrap computations for t .c; x/.

(cid:3)

de   ne

nbj d #ftimes xj occurs in x

(20.29)
for b d 1; 2; : : : ; b and j d 1; 2; : : : ; n. for instance n4000;7 d 3 says
that data point x7 occurred three times in nonparametric bootstrap sample
x4000. the b by n matrix fnbjg completely describes the b bootstrap
samples. also denote

(cid:3)bg;

and let covj indicate the covariance in the bootstrap sample between nbj
and t

(cid:3)b,

t

(cid:3)b/

(cid:3)b d t .x
bx
.nbj (cid:0) n(cid:1)j /.t
(cid:3)b (cid:0) t
p

bd1

(cid:3)(cid:1)

/;

covj d 1

b

(20.30)

(20.31)

p

where dots denote averaging over b: n(cid:1)j d 1
theorem 20.2    the in   nitesimal jackknife estimate of standard error

b nbj and t

(cid:3)(cid:1) d 1

b t

(cid:3)b.

b

b

  4

20.2 accuracy after model selection

407

(10.41) for the bagged estimate (20.28) is

bseij   sc.x/   d

0@ nx

jd1

1a1=2

cov2
j

:

(20.32)

effort.

keeping track of nbj as we generate the bootstrap replications t

us to compute covj and bse  sc.x/   without any additional computational
figure 20.5, the ratio ofbseij  sc.x/  =bseboot  t .c; x/   averaging 0.88. in fact,
corollary the ratiobseij  sc.x/  =bseboot  t .c; x/   is always   1.

we expect averaging to reduce variability, and this is seen to hold true in

we have the following general result.

(cid:3)b allows

the savings due to id112 increase with the nonlinearity of t .x

/ as
a function of the counts nbj (or, in the language of section 10.3, in the
nonlinearity of s.p/ as a function of p). model-selection estimators such
as the cp/ols rule tend toward greater nonlinearity and bigger savings.

(cid:3)

table 20.3 proportion of 4000 nonparametric bootstrap replications of
cp/ols algorithm that selected degrees m d 1; 2; : : : ; 6; also
in   nitesimal jackknife standard deviations for proportions (20.32), which
mostly exceed the estimates themselves.

proportion

bsdij

m d 1
.19
.24

2

.12
.20

3

.35
.24

4

.07
.13

5

.20
.26

6

.06
.06

the    rst line of table 20.3 shows the proportions in which the various
degrees were selected in the 4000 cholesterol bootstrap replications, 19%
for linear, 12% for quadratic, 35% for cubic, etc. with b d 4000, the
proportions seem very accurate, the binomial standard error for 0.19 being
just .0:19 (cid:1) 0:81=4000/1=2 d 0:006, for instance.
(cid:3)b (20.30) indicate whether
theorem 20.2 suggests otherwise. now let t

the bth bootstrap sample x

(

(cid:3) made the cp choice m
(cid:3)b d

(cid:3)b d 1
(cid:3)b > 1:

1 if m
0 if m

(cid:3) d 1,

t

(20.33)
(cid:3)b; b d 1; 2; : : : ; bg is the observed proportion

the bagged value of ft

408

0.19. applying the id112 theorem yieldedbseij d 0:24, as seen in the

id136 after model selection

second line of the table, with similarly huge standard errors for the other
proportions.
the binomial standard errors are internal, saying how quickly the boot-
strap resampling process is converging to its ultimate value as b ! 1.
the in   nitesimal jackknife estimates are external: if we collected a new
set of 164 data pairs .ci ; di / (20.2) the new proportion table might look
completely different than the top line of table 20.3.

frequentist statistics has the advantage of being applicable to any algo-
rithmic procedure, for instance to our cp/ols estimator. this has great
appeal in an era of enormous data sets and fast computation. the draw-
back, compared with bayesian statistics, is that we have no guarantee that
our chosen algorithm is best in any way. classical statistics developed a
theory of best for a catalog of comparatively simple estimation and testing
problems. in this sense, modern inferential theory has not yet caught up
with modern problems such as data-based model selection, though tech-
niques such as model averaging (e.g., id112) suggest promising steps
forward.

20.3 selection bias

many a sports fan has been victimized by selection bias. your team does
wonderfully well and tops the league standings. but the next year, with
the same players and the same opponents, you   re back in the pack. this
is the winner   s curse, a more picturesque name for selection bias, the ten-
dency of unusually good (or bad) comparative performances not to repeat
themselves.

modern scienti   c technology allows the simultaneous investigation of
hundreds or thousands of candidate situations, with the goal of choosing
the top performers for subsequent study. this is a setup for the heartbreak
of selection bias. an apt example is offered by the prostate study data of
section 15.1, where we observe statistics zi measuring patient   control dif-
ferences for n d 6033 genes,

zi (cid:24)

n .(cid:22)i ; 1/;

i d 1; 2; : : : ; n:

(20.34)

here (cid:22)i is the effect size for gene i, the true difference between the patient
and control populations.
genes with large positive or negative values of (cid:22)i would be promising
targets for further investigation. gene number 610, with z610 d 5:29, at-

20.3 selection bias

409

tained the biggest z-value; (20.34) says that z610 is unbiased for (cid:22)610. can
we believe the obvious estimate o(cid:22)610 d 5:29?
   no    is the correct selection bias answer. gene 610 has won a contest for
bigness among 6033 contenders. in addition to being good (having a large
value of (cid:22)) it has almost certainly been lucky, with the noise in (20.34)
pushing z610 in the positive direction   or else it would not have won the
contest. this is the essence of selection bias.

false-discovery rate theory, chapter 15, provided a way to correct for
selection bias in simultaneous hypothesis testing. this was extended to
false-coverage rates in section 20.1. our next vignette concerns the re-
alistic estimation of effect sizes (cid:22)i in the face of selection bias.
we begin by assuming that an effect size (cid:22) has been obtained from a
prior density g.(cid:22)/ (which might include discrete atoms) and then z (cid:24)
n .(cid:22); (cid:27) 2/ observed,

(cid:22) (cid:24) g.(cid:1)/

and zj(cid:22) (cid:24)

n .(cid:22); (cid:27) 2/

(20.35)

((cid:27) 2 is assumed known for this discussion). the marginal density of z is

f .z/ dz 1

 
 (cid:0) 1
(cid:0)1 g.(cid:22)/(cid:30)(cid:27) .z (cid:0) (cid:22)/ d(cid:22);

(cid:0)1=2 exp

z2
(cid:27) 2

2

where (cid:30)(cid:27) .z/ d .2(cid:25)(cid:27) 2/

(20.36)

:

tweedie   s formula  is an intriguing expression for the bayes expectation   5

of (cid:22) given z.

theorem 20.3
observed z is

in model (20.35), the posterior expectation of (cid:22) having

0

.z/ d d

ef(cid:22)jzg d z c (cid:27) 2l

0

dz

.z/

with l

log f .z/:

(20.37)
the especially convenient feature of tweedie   s formula is that ef(cid:22)jzg
is expressed directly in terms of the marginal density f .z/. this is a setup
for empirical bayes estimation. we don   t know g.(cid:22)/, but in large-scale
situations we can estimate the marginal density f .z/ from the observa-
tions z d .z1; z2; : : : ; zn /, perhaps by poisson regression as in table 15.1,
yielding

oef(cid:22)ijzig d zi c (cid:27) 2o
0
(20.38)
the solid curve in figure 20.7 shows oef(cid:22)jzg for the prostate study data,

.z/ d d

with o
0

log o

f .z/:

.zi /

dz

l

l

410

id136 after model selection

figure 20.7 the solid curve is tweedie   s estimate oef(cid:22)jzg
local false-discovery ratecfdr.z/ from figure 15.5 (red scale on
right). at z d 3:5, oef(cid:22)jzg d 1:96 andcfdr.z/ d 0:15. for gene
(20.38) for the prostate study data. the dashed line shows the
610, with z610 d 5:29, tweedie   s estimate is 4.03.

with (cid:27) 2 d 1 and o
jzij   2, agreeing with the local false-discovery rate curvecfdr.z/ of fig-
f .z/ obtained using fourth-degree log polynomial re-
gression as in section 15.4. the curve has ef(cid:22)jzg hovering near zero for
cfdr.z/ d 0:15. so even though zi d 3:5 has a one-sided p-value of 0.0002,
ure 15.5 that says these are mostly null genes.
oef(cid:22)jzg increases for z > 2, equaling 1.96 for z d 3:5. at that point
with 6033 genes to consider at once, it still is not a sure thing that gene i
is non-null. about 85% of the genes with zi near 3.5 will be non-null,
and these will have effect sizes averaging about 2.31 (d 1:96=0:85). all of
this nicely illustrates the combination of frequentist and bayesian id136
possible in large-scale studies, and also the combination of estimation and
hypothesis-testing ideas in play.

if the prior density g.(cid:22)/ in (20.35) is assumed to be normal, tweedie   s
formula (20.38) gives (almost) the james   stein estimator (7.13). the cor-
responding curve in figure 20.7 in that case would be a straight line pass-
ing through the origin at slope 0.22. like the james   stein estimator, ridge
regression, and the lasso of chapter 16, tweedie   s formula is a shrink-
age estimator. for z610 d 5:29, the most extreme observation, it gave

   4   2024   2024z   valuee^( m | z)lllz = 3.51.96.1500.20.40.60.81 fdrtweediefdr411
o(cid:22)629 d 4:03, shrinking the maximum likelihood estimate more than one (cid:27)
unit toward the origin.

20.3 selection bias

bayes estimators are immune to selection bias, as discussed in sections
3.3 and 3.4. this offers some hope that tweedie   s empirical bayes esti-
mates might be a realistic cure for the winners    curse. a small simulation
experiment was run as a test.
(cid:15) a hundred data sets z, each of length n d 1000, were generated accord-

ing to a combination of exponential and normal sampling,

ind(cid:24) e

(cid:0)(cid:22)

(cid:22)i

.(cid:22) > 0/

and

zij(cid:22)i

ind(cid:24)

n .(cid:22)i ; 1/;

(20.39)

l.z/ was computed as in section 15.4, now using a natural

for i d 1; 2; : : : ; 1000.
(cid:15) for each z, o
spline model with    ve degrees of freedom.
(cid:15) this gave tweedie   s estimates
o(cid:22)i d zi c o
0

.zi /;

l

i d 1; 2; : : : ; 1000;

(20.40)

for that data set z.
(cid:15) for each data set z, the 20 largest zi values and the corresponding o(cid:22)i and
(cid:22)i values were recorded, yielding the

uncorrected differences
and corrected differences

zi (cid:0) (cid:22)i
o(cid:22)i (cid:0) (cid:22)i ;

(20.41)

the hope being that empirical bayes shrinkage would correct the selection
bias in the zi values.
(cid:15) figure 20.8 shows the 2000 (100 data sets, 20 top cases each) uncorrected
and corrected differences. selection bias is quite obvious, with the uncor-
rected differences shifted one unit to the right of zero. in this case at least,
the empirical bayes corrections have worked well, the corrected differ-
ences being nicely centered at zero. bias correction often adds variance,
but in this case it hasn   t.

finally, it is worth saying that the    empirical    part of empirical bayes is
less the estimation of bayesian rules from the aggregate data than the appli-
cation of such rules to individual cases. for the prostate data we began with
no de   nite prior opinions but arrived at strong (i.e., not    uninformative   )
bayesian conclusions for, say, (cid:22)610 in the prostate study.

412

id136 after model selection

figure 20.8 corrected and uncorrected differences for 20 top
cases in each of 100 simulations (20.39)   (20.41). tweedie
corrections effectively counteracted selection bias.

20.4 combined bayes   frequentist estimation

as mentioned previously, bayes estimates are, at least theoretically, im-
mune from selection bias. let z d .z1; z2; : : : , zn / represent the prostate
study data of the previous section, with parameter vector (cid:22) d .(cid:22)1; (cid:22)2; : : : ;
(cid:22)n /. bayes    rule (3.5)

g.(cid:22)jz/ d g.(cid:22)/f(cid:22).z/=f .z/

(20.42)

yields the posterior density of (cid:22) given z. a data-based model selection
rule such as    estimate the (cid:22)i corresponding to the largest observation zi   
has no effect on the likelihood function f(cid:22).z/ (with z    xed) or on g.(cid:22)jz/.
having chosen a prior g.(cid:22)/, our posterior estimate of (cid:22)610 is unaffected
by the fact that z610 d 5:29 happens to be largest.
this same argument applies just as well to any data-based model selec-
tion procedure, for instance a preliminary screening of possible variables
to include in a regression analysis   the cp choice of a cubic regression in
figure 20.1 having no effect on its bayes posterior accuracy.

there is a catch: the chosen prior g.(cid:22)/ must apply to the entire param-
eter vector (cid:22) and not just the part we are interested in (e.g., (cid:22)610). this is

 differencesfrequency   4   2024020406080100120140uncorrecteddifferencescorrecteddifferences20.4 combined bayes   frequentist estimation

413

feasible in one-parameter situations like the stopping rule example of fig-
ure 3.3. it becomes dif   cult and possibly dangerous in higher dimensions.
empirical bayes methods such as tweedie   s rule can be thought of as al-
lowing the data vector z to assist in the choice of a high-dimensional prior,
an effective collaboration between bayesian and frequentist methodology.
our chapter   s    nal vignette concerns another bayes   frequentist estima-
d ff  .x/g
tion technique. dropping the boldface notation, suppose that f
is a multi-dimensional family of densities (5.1) (now with    playing the
role of (cid:22)), and that we are interested in estimating a particular parameter
  d t .  /. a prior g.  / has been chosen, yielding posterior expectation

o
  d e ft .  /jxg :

(20.43)

how accurate is o
 ? the usual answer would be calculated from the pos-
terior distribution of   given x. this is obviously the correct answer if g.  /
is based on genuine prior experience. most often though, and especially in
high-dimensional problems, the prior re   ects mathematical convenience
and a desire to be uninformative, as in chapter 13. there is a danger of
circular reasoning in using a self-selected prior distribution to calculate the
accuracy of its own estimator.
an alternate approach, discussed next, is to calculate the frequentist ac-
curacy of o
 ; that is, even though (20.43) is a bayes estimate, we consider
o
  simply as a function of x, and compute its frequentist variability. the
next theorem leads to a computationally ef   cient way of doing so. (the
bayes and frequentist standard errors for o
  operate in conceptually orthog-
onal directions as pictured in figure 3.5. here we are supposing that the
prior g.(cid:1)/ is unavailable or uncertain, forcing more attention on frequentist
calculations.)

for convenience, we will take the family f to be a p-parameter expo-

nential family (5.50),

f  .x/ d e  

0

x(cid:0) .  /f0.x/;

(20.44)
now with    being the parameter vector called (cid:22) above. the p (cid:2) p covari-
ance matrix of x (5.59) is denoted

v   d cov  .x/:

(20.45)
let covx indicate the posterior covariance given x between   d t .  /, the
parameter of interest, and   ,

covx d covf  ; t .  /jxg ;

(20.46)

  6

n o

id136 after model selection

o d(cid:0)cov

414
a p (cid:2) 1 vector. covx leads directly to a frequentist estimate of accuracy for
o
 .
theorem 20.4    the delta method estimate of standard error for o
  d
eft .  /jxg (10.41) isbsedelta
0
x vo   covx
where vo   is v   evaluated at the id113 o  .
bsedeltaf o
the theorem allows us to calculate the frequentist accuracy estimate
 g with hardly any additional computational effort beyond that re-
quired for o
  itself. suppose we have used an mcmc or id150
algorithm, section 13.4, to generate a sample from the bayes posterior dis-
tribution of    given x,

(cid:1)1=2

(20.47)

 

;

t

  .1/;   .2/; : : : ;   .b/:
(cid:16)
  .b/ 
these yield the usual estimate for eft .  /jxg,
bx
o
  d 1
t .b/ (cid:0) t .(cid:1)/ 
(cid:16)
  .b/ (cid:0)   .(cid:1)/ (cid:16)
bx
b t .b/=b, and   .(cid:1)/ dp

they also give a similar expression for covf  ; t .  /jxg,

t .b/ d t .  .b//, t .(cid:1)/ dp
can calculate5bsedelta.

o
  / (20.47).

covx d 1

bd1

bd1

b

b

:

(20.48)

(20.49)

;

(20.50)

b   .b/=b, from which we

for an example of theorem 20.4 in action we consider the diabetes
i the ith row of x, the 442 (cid:2) 10 matrix of
0
data of section 20.1, with x
prediction, so xi is the vector of 10 predictors for patient i. the response
vector y of progression scores has now been rescaled to have (cid:27) 2 d 1 in
the normal regression model,6

y (cid:24)

nn.x   ; i/:
the prior distribution g.  / was taken to be
(cid:0)(cid:21)k  k1 ;

g.  / d ce

(20.51)

(20.52)

obtained from parametric bootstrap resampling   taking the empirical covariance matrix

5 vo   may be known theoretically, calculated by numerical differentiation in (5.57), or
of bootstrap replications o  
(cid:3)
i .
6 by dividing the original data vector y by its estimated standard error from the linear
model efyg d x   .

20.4 combined bayes   frequentist estimation

415
with (cid:21) d 0:37 and c the constant that makes g.  / integrate to 1. this is
the    bayesian lasso prior,     so called because of its connection to the lasso,   7
(7.42) and (16.1). (the lasso plays no part in what follows).
posterior distribution g.  jy/. let

an mcmc algorithm generated b d10,000 samples (20.48) from the

b

bd1

0
i   ;

(20.54)

(20.53)

0
x
i   :

(cid:16) o

it has bayes posterior standard error

the (unknown) expectation of the ith patient   s response yi. the bayes pos-
terior expectation of  i is

 i d x
bx
o
 i d 1
"
(cid:16)
  d
bx
which we can compare withbsedelta.
bd1
o
 i /, the frequentist standard error (20.47).
figure 20.9 shows the 10,000 mcmc replications o
0
  .b/
i    for pa-
tient i d 322. the point estimate o
i
 i equaled 2.41, with bayes and frequen-
bsebayes d 0:203 and bsedelta d 0:186:
tist standard error estimates
the frequentist standard error is 9% smaller in this case;bsedelta was less
thanbsebayes for all 442 patients, the difference averaging a modest 5%.

bsebayes

i   .b/ (cid:0) o
0

things can work out differently. suppose we are interested in the poste-

#1=2

 2

d x

(20.55)

(20.56)

 i

 i

b

x

1

;

(

(cid:16)
c;   .b/  d

rior cdf of  332 given y. for any given value of c let
322  .b/   c
0
0
332  .b/ > c;
(cid:16)
c;   .b/ 

cdf.c/ d 1

bx

if x
if x

so

1

0

t

(20.58)
is our mcmc assessment of prf 322   cjyg. the solid curve in fig-
ure 20.10 graphs cdf.c/.

bd1

b

t

if we believe prior (20.52) then the curve exactly represents the posterior
distribution of  322 given y (except for the simulation error due to stopping
at b d10,000 replications). whether or not we believe the prior we can use

(20.57)

416

id136 after model selection

figure 20.9 a histogram of 10,000 mcmc replications for
posterior distribution of  322, expected progression for patient
322 in the diabetes study; model (20.51) and prior (20.52).
the bayes posterior expectation is 2.41. frequentist standard
error (20.47) for o
posterior standard error (20.55).

 322 d 2:41 was 9% smaller than bayes

theorem 20.4, with t .b/ d t .c;   .b// in (20.50), to evaluate the frequentist
the dashed vertical red lines show cdf.c/ plus or minus onebsedelta unit.
accuracy of the curve.
the standard errors are disturbingly large, for instance 0:687    0:325 at
c d 2:5. the central 90% credible interval for  322 (the c-values between
cdf.c/ 0.05 and 0.95),

.2:08; 2:73/

(20.59)

has frequentist standard errors about 0.185 for each endpoint   28% of the
interval   s length.

if we believe prior (20.52) then .2:08; 2:73/ is an (almost) exact 90%
credible interval for  322, and moreover is immune to any selection bias
involved in our focus on  322. if not, the large frequentist standard errors
are a reminder that calculation (20.59) might turn out much differently in
a new version of the diabetes study, even ignoring selection bias.

to return to our main theme, bayesian calculations encourage a disre-
gard for model selection effects. this can be dangerous in objective bayes

 mcmc q322 valuesfrequency2.02.53.001002003004005006002.41standard errorsbayes posterior .205frequentist .18620.5 notes and details

417

figure 20.10 the solid curve is the posterior cdf of  322. vertical
red bars indicate    one frequentist standard error, as obtained
from theorem 20.4. black triangles are endpoints of the 0.90
central credible interval.

settings where one can   t rely on genuine prior experience. theorem 20.4
serves as a frequentist checkpoint, offering some reassurance as in fig-
ure 20.9, or sounding a warning as in figure 20.10.

20.5 notes and details

optimality theories   statements of best possible results   are marks of ma-
turity in applied mathematics. classical statistics achieved two such theo-
ries: for unbiased or asymptotically unbiased estimation, and for hypothe-
sis testing. most of this book and all of this chapter venture beyond these
safe havens. how far from best are the cp/ols bootstrap smoothed esti-
mates of section 20.2? at this time we can   t answer such questions, though
we can offer appealing methodologies in their pursuit, a few of which have
been highlighted here.

the cholestyramine example comes from efron and feldman (1991)
where it is discussed at length. data for a control group is also analyzed
there.

  1 [p. 398] scheff  e intervals. scheff  e   s 1953 paper came at the beginning

2.02.22.42.62.80.00.20.40.60.81.0c   valuepr(q322 < c)418

id136 after model selection

of a period of healthy development in simultaneous id136 techniques,
mostly in classical normal theory frameworks. miller (1981) gives a clear
and thorough summary. the 1980s followed with a more computer-intensive
approach, nicely developed in westfall and young   s 1993 book, leading up
to benjamini and hochberg   s 1995 false-discovery rate paper (chapter 15
here), and benjamini and yekutieli   s (2005) false-coverage rate algorithm.
scheff  e   s construction (20.15) is derived by transforming (20.6) to the
case v d i using the inverse square root of matrix v ,
(cid:0)1=2  

(20.60)
(cid:0)1), which makes the ellipsoid of figure 20.2 into a circle.
(.v
then q d ko(cid:13) (cid:0) (cid:13)k2=o(cid:27) 2 in (20.10), and for a linear combination (cid:13)d d d
0
it is straightforward to see that prfq   k.  /2

p;q g d    amounts to

   and (cid:13) d v

(cid:0)1=2/2 d v

o(cid:13) d v

(cid:0)1=2 o

(cid:13)

(cid:13)d 2 o(cid:13)d    o(cid:27) kdk k.  /

p;q

(20.61)

for all choices of d, the geometry of figure 20.2 now being transparent.
changing coordinates back to o
   d v 1=2 o(cid:13),    d v 1=2(cid:13), and c d v 1=2d
yields (20.15).

  2 [p. 399] restricting the catalog c . suppose that all the sample sizes nj in
(20.16) take the same value n, and that we wish to set simultaneous con-
   dence intervals for all pairwise differences   i (cid:0)   j . tukey   s studentized
range pivotal quantity (1952, unpublished)

      (cid:16) o

  i (cid:0) o

  j

  (cid:0) .  i (cid:0)   j /

      

o(cid:27)

t d max
i  j

(20.62)

has a distribution not depending on (cid:27) or   . this implies that

  i (cid:0)   j 2 o

  i (cid:0) o

  j    o(cid:27)p

(20.63)
p
is a set of simultaneous level-   con   dence intervals for all pairwise dif-
ferences   i (cid:0)   j , where t .  / is the   th quantile of t . (the factor 1=
n
comes from o

  j (cid:24)

t .  /

n

n .  j ; (cid:27) 2=n/ in (20.16).)

p
table 20.4 half-width of tukey studentized range simultaneous 95%
con   dence intervals for pairwise differences   i (cid:0)   j (in units of o(cid:27) =
n)
for p d 2; 3; : : : ; 6 and n d 20; compared with scheff  e intervals (20.15).

p

2

tukey
scheff  e

2.95
3.74

3

3.58
4.31

4

3.96
4.79

5

4.23
5.21

6

4.44
5.58

20.5 notes and details

419

reducing the catalog c from all linear combinations c

   to only pair-
wise differences shortens the simultaneous intervals. table 20.4 shows the
comparison between the tukey and scheff  e 95% intervals for p d 2; 3;
: : : ; 6 and n d 20.

0

calculating t .  / was a substantial project in the early 1980s. berk et al.
(2013) now carry out the analogous computations for general catalogs of
linear constraints. they discuss at length the inferential basis of such pro-
cedures.

  3 [p. 405] discontinuous estimators. looking at figure 20.6 suggests that a
con   dence interval for  (cid:0)2:0 t .c; x/ will move far left for data sets x where
cp selects id75 (m d 1) as best. this kind of    jumpy    behav-
ior lengthens the intervals needed to attain a desired coverage level. more
seriously, intervals for m d 1 may give misleading id136s, another ex-
ample of    accurate but incorrect    behavior. id112 (20.28), in addition to
reducing interval length, improves inferential correctness, as discussed in
efron (2014a).

  4 [p. 406] theorem 20.2 and its corollary. theorem 20.2 is proved in sec-
tion 3 of efron (2014a), with a parametric bootstrap version appearing in
section 4. the corollary is a projection result illustrated in figure 4 of
that paper: let l.n / be the n-dimensional subspace of b-dimensional eu-
clidean space spanned by the columns of the b (cid:2) n matrix .nbj / (20.29)
and t

(cid:3) the b-vector with components t

(cid:3)b (cid:0) t

bseij.s/  bseboot.t / d(cid:13)(cid:13)ot

(cid:3)(cid:13)(cid:13)  kt

(cid:3)(cid:1); then
(cid:3)k;

(cid:3) is the projection of t

where ot
if o
will be substantially less than 1.

(cid:3) into l.n /. in the language of section 10.3,
(cid:3) d s.p/ is very nonlinear as a function of p, then the ratio in (20.64)
  5 [p. 409] tweedie   s formula. for convenience, take (cid:27) 2 d 1 in (20.35).

 

(20.64)

bayes    rule (3.5) can then be arranged to give
g.(cid:22)jz/ d e(cid:22)z(cid:0) .z/g.(cid:22)/e
(cid:0) 1

2 (cid:22)2  p

2(cid:25)

with

 .z/ d 1

2

z c log f .z/:

this is a one-parameter exponential family (5.46) having natural parameter
   equal to z. differentiating   as in (5.55) gives

ef(cid:22)jzg d d 

dz

d z c d

dz

log f .z/;

(20.67)

(20.65)

(20.66)

id136 after model selection

420
which is tweedie   s formula (20.37) when (cid:27) 2 d 1. the formula    rst ap-
pears in robbins (1956), who credits it to a personal communication from
m. k. tweedie. efron (2011) discusses general exponential family versions
of tweedie   s formula, and its application to selection bias situations.

  6 [p. 414] theorem 20.4. the delta method standard error approximation for

a statistic t .x/ is bsedelta dh

.rt .x//

0 ov .rt .x//

;

(20.68)
where rt .x/ is the gradient vector .@t =@xj / and ov is an estimate of the
covariance matrix of x. other names include the    taylor series method,   
as in (2.10), and    propagation of errors    in the physical sciences literature.
the proof of theorem 20.4 in section 2 of efron (2015) consists of show-
ing that covx d rt .x/ when t .x/ d eft .  /jxg. standard deviations are
only a    rst step in assessing the frequentist accuracy of t .x/. the paper
goes on to show how theorem 20.4 can be improved to give con   dence
intervals, correcting the impression in figure 20.10 that cdf.c/ can range
outside   0; 1  .

i1=2

  7 [p. 415] bayesian lasso. applying bayes    rule (3.5) with density (20.51)

log g.  jy/ d (cid:0)(cid:26)ky (cid:0) x   k2

2

(cid:27)

c (cid:21)k  k1

;

(20.69)

and prior (20.52) gives

as discussed in tibshirani (2006). comparison with (7.42) shows that the
maximizing value of    (the    map    estimate) agrees with the lasso esti-
mate. park and casella (2008) named the    bayesian lasso    and suggested
an appropriate mcmc algorithm. their choice (cid:21) d 0:37 was based on
marginal maximum likelihood calculations, giving their analysis an empir-
ical bayes aspect ignored in their and our analyses.

21

empirical bayes estimation strategies

classic statistical id136 was focused on the analysis of individual cases:
a single estimate, a single hypothesis test. the interpretation of direct evi-
dence bearing on the case of interest   the number of successes and failures
of a new drug in a clinical trial as a familiar example   dominated statistical
practice.

the story of modern statistics very much involves indirect evidence,
   learning from the experience of others    in the language of sections 7.4
and 15.3, carried out in both frequentist and bayesian settings. the computer-
intensive prediction algorithms described in chapters 16   19 use regression
theory, the frequentist   s favored technique, to mine indirect evidence on a
massive scale. false-discovery rate theory, chapter 15, collects indirect ev-
idence for hypothesis testing by means of bayes    theorem as implemented
through empirical bayes estimation.

empirical bayes methodology has been less studied than bayesian or
frequentist theory. as with the james   stein estimator (7.13), it can seem to
be little more than plugging obvious frequentist estimates into bayes esti-
mation rules. this conceals a subtle and dif   cult task: learning the equiva-
lent of a bayesian prior distribution from ongoing statistical observations.
our    nal chapter concerns the empirical bayes learning process, both as an
exercise in applied deconvolution and as a relatively new form of statistical
id136. this puts us back where we began in chapter 1, examining the
two faces of statistical analysis, the algorithmic and the inferential.

21.1 bayes deconvolution

a familiar formulation of empirical bayes id136 begins by assuming
that an unknown prior density g.  /, our object of interest, has produced a
random sample of real-valued variates    1;    2; : : : ;    n ,
i d 1; 2; : : : ; n:

iid(cid:24) g.  /;

(21.1)

   i

421

empirical bayes estimation strategies

422
(the    density    g.(cid:1)/ may include discrete atoms of id203.) the    i are
unobservable, but each yields an observable random variable xi according
to a known family of density functions

ind(cid:24) pi .xij   i /:

xi

(21.2)
from the observed sample x1; x2; : : : ; xn we wish to estimate the prior
density g.  /.
a famous example has pi .xij   i / the poisson family,

xi (cid:24) poi.   i /;

xi (cid:24)

(21.3)
as in robbins    formula, section 6.1. still more familiar is the normal model
(3.28),

(21.4)
often with (cid:27) 2 d 1. a binomial model was used in the medical example of
section 6.3,

n .   i ; (cid:27) 2/;

xi (cid:24) bi.ni ;    i /:

(21.5)
there the ni differ from case to case, accounting for the need for the    rst
subscript i in pi .xij   i / (21.2).
let fi .xi / denote the marginal density of xi obtained from (21.1)   

(21.2),

pi .xij i /g. i / d i ;

(21.6)

fi .xi / dz

t

the integral being over the space t of possible     values. the statistician
has only the marginal observations available,

ind(cid:24) fi .(cid:1)/;

xi

i d 1; 2; : : : ; n;

(21.7)

from which he or she wishes to estimate the density g.(cid:1)/ in (21.6).

in the normal model (21.4), fi is the convolution of the unknown g.  /

with a known normal density, denoted
f d g (cid:3)

(21.8)
(now fi not depending on i). estimating g using a sample x1; x2; : : : ; xn
from f is a problem in deconvolution. in general we might call the estima-
tion of g in model (21.1)   (21.2) the    bayes deconvolution problem.   

n .0; (cid:27) 2/

an arti   cial example appears in figure 21.1, where g.  / is a mixture
distribution: seven-eighths n .0; 0:52/ and one-eighth uniform over the in-
terval   (cid:0)3; 3  . a normal sampling model xi
n .   i ; 1/ is assumed, yield-
ing f by convolution as in (21.8). the convolution process makes f wider

ind(cid:24)

21.1 bayes deconvolution

423

figure 21.1 an arti   cial example of the bayes deconvolution
problem. the solid curve is g.  /, the prior density of     (21.1);
the dashed curve is the density of an observation x from marginal
distribution f d g (cid:3)
n .0; 1/ (21.8). we wish to estimate g.  / on
the basis of a random sample x1; x2; : : : ; xn from f .x/.

and smoother than g, as illustrated in the    gure. having observed a ran-
dom sample from f , we wish to estimate the deconvolute g, which begins
to look dif   cult in the    gure   s example.

deconvolution has a well-deserved reputation for dif   culty. it is the
classic ill-posed problem: because of the convolution process (21.6), large
changes in g.  / are smoothed out, often yielding only small changes in
f .x/. deconvolution operates in the other direction, with small changes in
the estimation of f disturbingly magni   ed on the g scale. nevertheless,
modern computation, modern theory, and most of all modern sample sizes,
together can make empirical deconvolution a practical reality.
why would we want to estimate g.  /? in the prostate data example
(3.28) (where     is called (cid:22)) we might wish to know prf    d 0g, the proba-
bility of a null gene, ones whose effect size is zero; or perhaps prfj   j (cid:21) 2g,
the proportion of genes that are substantially non-null. or we might want to
estimate bayesian posterior expectations like ef   jx d xg in figure 20.7,
or posterior densities as in figure 6.5.

two main strategies have developed for carrying out empirical bayes
estimation: modeling on the   scale, called g-modeling here, and modeling

   4   20240.000.050.100.15q and xg(q) and f(x)f(x)g(q)424

empirical bayes estimation strategies

on the x scale, called f -modeling. we begin in the next section with g-
modeling.

21.2 g-modeling and estimation

there has been a substantial amount of work on the asymptotic accuracy
of estimates og.  / in the empirical bayes model (21.1)   (21.2), most often
in the normal sampling framework (21.4). the results are discouraging,
with the rate of convergence of og.  / to g.  / as slow as .log n /
(cid:0)1. in our
terminology, much of this work has been carried out in a nonparametric g-
modeling framework, allowing the unknown prior density g.  / to be virtu-
ally anything at all. more optimistic results are possible if the g-modeling
is pursued parametrically, that is, by restricting g.  / to lie within some
parametric family of possibilities.

we assume, for the sake of simpler exposition, that the space t of pos-

sible     values is    nite and discrete, say

(21.9)
the prior density g.  / is now represented by a vector g d .g1; g2; : : : ; gm/
with components

t

0,

gj d pr      d  .j /

(cid:9) :

d   .1/;  .2/; : : : ;  .m/
(cid:9)

for j d 1; 2; : : : ; m:

a p-parameter exponential family (5.50) for g can be written as

g d g.  / d eq  (cid:0) .  /;

(21.11)
where the p-vector    is the natural parameter and q is a known m (cid:2) p
structure matrix. notation (21.11) means that the j th component of g.  /
is

0
j the j th row of q; the function  .  / is the normalizer that makes

with q
g.  / sum to 1,

gj .  / d eq

j   (cid:0) .  /;
0

0@ mx

jd1

1a :

 .  / d log

0
j   

eq

(21.10)

(21.12)

(21.13)

in the nodes example of figure 6.4, the set of possible     values was
d f0:01; 0:02; : : : ; 0:99g, and q was a    fth-degree polynomial matrix,
t
(21.14)

q d poly(t ,5)

21.2 g-modeling and estimation

425

de   ne

none of this is necessary, but it simpli   es the exposition.

in r notation, indicating a    ve-parameter exponential family for g, (6.38)   
(6.39).
in the development that follows we will assume that the kernel pi .(cid:1)j(cid:1)/ in
(21.2) does not depend on i, i.e., that xi has the same family of conditional
distributions p.xij   i / for all i, as in the poisson and normal situations
(21.3) and (21.4), but not the binomial case (21.5). and moreover we as-
sume that the sample space x for the xi observations is    nite and discrete,
say
(21.15)

x

d  x.1/; x.2/; : : : ; x.n/
(cid:9) :
pkj d pr  xi d x.k/j   i d  .j /

(cid:9) ;

(21.16)
for k d 1; 2; : : : ; n and j d 1; 2; : : : ; m, and the corresponding n (cid:2) m
matrix

p d .pkj /;
(21.17)
having kth row pk d .pk1; pk2; : : : ; pkm/
0. the convolution-type for-
mula (21.6) for the marginal density f .x/ now reduces to an inner product,

  xi d x.k/

(cid:9) dpm

jd1 pkj gj .  /

(21.18)
in fact we can write the entire marginal density f .  / d .f1.  /; f2.  /; : : : ,

0 in terms of id127,

fn.  //

fk.  / d pr  
d p
0
kg.  /:

the vector of counts y d .y1; y2; : : : ; yn/, with

f .  / d pg.  /:

yk d #  xi d x.k/

(cid:9) ;

is a suf   cient statistic in the iid situation. it has a multinomial distribution
(5.38),

y (cid:24) multn.n; f .  //;

indicating n independent draws for a density f .  / on n categories.

all of this provides a concise description of the g-modeling id203

model:
   ! g.  / d eq  (cid:0) .  / ! f .  / d pg.  / ! y (cid:24) multn.n; f .  //:
(21.22)

(21.19)

(21.20)

(21.21)

426

empirical bayes estimation strategies

the inferential task goes in the reverse direction,

y ! o   ! f .o  / ! g.o  / d eqo  (cid:0) .o  /:

(21.23)

figure 21.2 a schematic diagram of empirical bayes estimation,
as explained in the text. sn is the n-dimensional simplex,
containing the p-parameter family f of allowable id203
distributions f .  /. the vector of observed proportions y=n
yields id113 f .o  /, which is then deconvolved to obtain estimate
g.o  /.

a schematic diagram of the estimation process appears in figure 21.2.

(cid:15) the vector of observed proportions y=n is a point in sn, the simplex
(cid:15) the parametric family of allowable f vectors (21.19)

(5.39) of all possible id203 vectors f on n categories; y=n is the
usual nonparametric estimate of f .

d ff .  /;    2 ag;

f

(21.24)
indicated by the red curve, is a curved p-dimensional surface in sn. here
a is the space of allowable vectors    in family (21.11).
(cid:15) the nonparametric estimate y=n is    projected    down to the parametric
estimate f .o  /; if we are using id113 estimation, f .o  / will be the closest
point in f to y=n measured according to a deviance metric, as in (8.35).
(cid:15) finally, f .o  / is mapped back to the estimate g.o  /, by inverting map-
ping (21.19). (inversion is not actually necessary with g-modeling since,
having found o  , g.o  / is obtained directly from (21.11); the inversion
step is more dif   cult for f -modeling, section 21.6.)

21.3 likelihood, id173, and accuracy

427

the id113 process for g-modeling is discussed
in more detail in the next section, where formulas for its accuracy will be
developed.

21.3 likelihood, id173, and accuracy1

parametric g-modeling, as in (21.11), allows us to work in low-dimensional
parametric families   just    ve parameters for the nodes example (21.14)   
where classic maximum likelihood methods can be more con   dently ap-
plied. even here though, some id173 will be necessary for stable
estimation, as discussed in what follows.

the g-model id203 mechanism (21.22) yields a log likelihood for

the multinomial vector y of counts as a function of   , say ly .  /;

kd1

fk.  /yk

yk log fk.  /:

ly .  / d log
its score function p
h d 1; 2; : : : ; p, determines the id113 o   according to p
p (cid:2) p matrix of second derivatives r
fisher information matrix (5.26)

ly .  /, the vector of partial derivatives @ly .  /=@  h for
ly .o  / d 0. the
ly .  / d .@2ly .  /=@  h@  l / gives the

(21.25)

kd1

the exponential family model (21.11) yields simple expressions for p
and i.  /. de   ne

ly .  /

(21.26)

ly .  /g:

i.  / d ef(cid:0)r
  pkj

wkj d gj .  /

 

(cid:0) 1

fk.  /

  ny

!

d nx

and the corresponding m-vector

wk.  / d .wk1.  /; wk2.  /; : : : ; wkm.  //
0

lemma 21.1 the score function p

ly .  / under model (21.22) is

(21.27)

:

(21.28)

p
ly .  / d qwc.  /;

wk.  /yk

(21.29)

where wc.  / d nx

kd1

and q is the m (cid:2) p structure matrix in (21.11).

1 the technical lemmas in this section are not essential to following the subsequent

discussion.

empirical bayes estimation strategies

428
lemma 21.2 the fisher information matrix i.  /, evaluated at    d o  ,
is

i.o  / d q
0

wk.o  /nfk.o  /wk.o  /
0

q;

(21.30)

)

( nx

kd1

1 yk is the sample size in the empirical bayes model (21.1)   

where n dpn

(21.2).

see the chapter endnotes    for a brief discussion of lemmas 21.1 and
21.2. i.o  /
(cid:0)1 is the usual maximum likelihood estimate of the covariance
matrix of o  , but we will use a regularized version of the id113 that is less
variable.
in the examples that follow, o   was found by numerical maximization.2
even though g.  / is an exponential family, the marginal density f .  / in
(21.22) is not. as a result, some care is needed in avoiding local maxima of
ly .  /. these tend to occur at    corner    values of   , where one of its compo-
nents goes to in   nity. a small amount of id173 pulls o   away from
the corners, decreasing its variance at the possible expense of increased
bias.

instead of maximizing ly .  / we maximize a penalized likelihood

m.  / d ly .  / (cid:0) s.  /;

(21.31)

where s.  / is a positive penalty function. our examples use

s.  / d c0k  k d c0

(21.32)
(with c0 equal 1), which prevents the maximizer o   of m.  / from venturing
too far into corners.

hd1

  2
h

the following lemma is discussed in the chapter endnotes.

lemma 21.3   the maximizer o   of m.  / has approximate bias vector and
covariance matrix

bias.o  / d (cid:0) .i.o  / c rs.o  //
and var.o  / d .i.o  / c rs.o  //

(cid:0)1 ps.o  /
(cid:0)1 i.o  / .i.o  / c rs.o  //

(cid:0)1 ;

(21.33)

  px

!1=2

where i.o  / is given in (21.30).

with s.  /   0 (no id173) the bias is zero and var.o  / d i.o  /

(cid:0)1,

2 using the nonlinear maximizer nlm in r.

  1

  2

21.3 likelihood, id173, and accuracy

429

the usual id113 approximations: including s.  / reduces variance while in-
troducing bias.
for s.  / d c0k  k we calculate

ps.  / d c0  =k  k

rs.  / d c0k  k

0
i (cid:0)     
k  k2

and

(21.34)
with i the p (cid:2) p identity matrix. adding the penalty s.  / in (21.31) pulls
the id113 of    toward zero and the id113 of g.  / toward a    at distribution
over t . looking at var.o  / in (21.33), a measure of the id173 effect

;

 

 

is

tr.rs.o  //= tr.i.o  //;

(21.35)

most often we will be more interested in the accuracy of og d g.o  / than

which was never more than a few percent in our examples.
in that of o   itself. letting

d.o  / d diag.g.o  // (cid:0) g.o  /g.o  /
0

;

the m (cid:2) p derivative matrix .@gj =@  h/ is

@g=@   d d.  /q;

(21.36)

(21.37)

with q the structure matrix in (21.11). the usual    rst-order delta-method
calculations then give the following theorem.
theorem 21.4 the penalized maximum likelihood estimate og d g.o  /
has estimated bias vector and covariance matrix
bias. og/ d d.o  /qbias.o  /
and var. og/ d d.o  /qvar.o  /q
0

d.o  /

(21.38)

with bias.o  / and var.o  / as in (21.33).3

the many approximations going into theorem 21.4 can be short-circuited
by means of the parametric bootstrap, section 10.4. starting from o   and
f .o  / d pg.o  /, we resample the count vector
(cid:3) (cid:24) multn.n; f .o  //;
(cid:3) based on y

and calculate4 the penalized id113 o  

(cid:3), yielding og

(cid:3) d g.o  

(21.39)

/.

(cid:3)

y

3 note that the bias treats model (21.11) as the true prior, and arises as a result of the
penalization.
4 convergence of the nlm search process is speeded up by starting from o  .

(cid:3)b gives bias and covariance estimates

430
b replications og

empirical bayes estimation strategies
(cid:3)1; og
dbias d og
and cvar d bx
(cid:3)(cid:1) dpb

(cid:3)2; : : : ; og
(cid:3)(cid:1) (cid:0) og
. og

/  .b (cid:0) 1/;

(cid:3)b (cid:0) og

(cid:3)b (cid:0) og

bd1
(cid:3)b=b.

/. og

og

(cid:3)(cid:1)

(cid:3)(cid:1)

1

and og

(21.40)

table 21.1 comparison of delta method (21.38) and bootstrap (21.40)
standard errors and biases for the nodes study estimate of g in
figure 6.4. all columns except the    rst multiplied by 100.

standard error

bias

 

.01
.12
.23
.34
.45
.56
.67
.78
.89
.99

g.  / delta

12.048
1.045
.381
.779
1.119
.534
.264
.224
.321
.576

.887
.131
.058
.096
.121
.102
.047
.056
.054
.164

delta

.056
.025

boot
boot
.967 (cid:0).518 (cid:0).592
.071
.139
.065
.033
.095 (cid:0).011 (cid:0).013
.117 (cid:0).040 (cid:0).049
.027
.100
.019
.051
.027
.023
.053
.020
.018
.009
.048
.013
.169 (cid:0).008
.008

table 21.1 compares the delta method of theorem 20.4 with the para-
metric bootstrap (b d 1000 replications) for the surgical nodes example
of section 6.3. both the standard errors   square roots of the diagonal el-
ements of var. og/   and biases are well approximated by the delta method
formulas (21.38). the delta method also performed reasonably well on the
two examples of the next section.

it did less well on the arti   cial example of figure 21.1, where

g.  / d 1

i  (cid:0)3;3  .  /

8

6

c 7
8

1p
2(cid:25)(cid:27) 2

(cid:0) 1

2

  2
(cid:27) 2

e

.(cid:27) d 0:5/

(21.41)

(1/8 uniform on   (cid:0)3; 3   and 7/8 n .0; 0:52/). the vertical bars in fig-
ure 21.3 indicate    one standard error obtained from the parametric boot-
d f(cid:0)3;(cid:0)2:8; : : : ; 3g for the sample space of    , and as-
strap, taking t
suming a natural spline model in (21.11) with    ve degrees of freedom,

g.  / d eq  (cid:0) .  /;

q d ns(t ,df=5):

(21.42)

21.3 likelihood, id173, and accuracy

431

figure 21.3 the red curve is g.  / for the arti   cial example of
figure 21.1. vertical bars are    one standard error for g-model
estimate g.o  /; speci   cations (21.41)   (21.42), sample size
n d 1000 observations xi (cid:24)
n .   i ; 1/, using parametric
bootstrap (21.40), b d 500. the light dashed line follows
bootstrap means og

(cid:3)
j . some de   nitional bias is apparent.

the sampling model was xi (cid:24)
n .   i ; 1/ for i d 1; 2; : : : ; n d 1000. in
this case the delta method standard errors were about 25% too small.
the light dashed curve in figure 21.3 traces ng.  /, the average of the
b d 500 bootstrap replications g
(cid:3)b. there is noticeable bias, compared
with g.  /. the reason is simple: the exponential family (21.42) for g.  /
does not include g.  / (21.41). in fact, ng.  / is (nearly) the closest mem-
ber of the exponential family to g.  /. this kind of de   nitional bias is a
disadvantage of parametric g-modeling.

(cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)      (cid:1)(cid:1)

our g-modeling examples, and those of the next section, bring together
a variety of themes from modern statistical practice: classical maximum
likelihood theory, exponential family modeling, id173, bootstrap
methods, large data sets of parallel structure, indirect evidence, and a com-
bination of bayesian and frequentist thinking, all of this enabled by mas-
sive computer power. taken together they paint an attractive picture of the
range of inferential methodology in the twenty-   rst century.

   3   2   101230.000.050.100.15qg(q)432

empirical bayes estimation strategies

21.4 two examples

we now reconsider two previous data sets from a g-modeling point of
view. the    rst is the arti   cial microarray-type example (20.24) comprising
n d10,000 independent observations

0

(21.43)

(cid:22)i (cid:24)

ind(cid:24)

zi

with

n .(cid:22)i ; 1/;

i d 1; 2; : : : ; n d 10,000;

for i d 1; 2; : : : ; 9000
for i d 9001; : : : ; 10,000:

(
n .(cid:0)3; 1/
(cid:22)i 2 .zi (cid:0) 3/=2    1:96  p

2:

(21.44)
figure 20.3 displays the points .zi ; (cid:22)i / for i d 9001; : : : ; 10; 000, illus-
trating the bayes posterior 95% conditional intervals (20.26),

these required knowing the bayes prior distribution (cid:22)i (cid:24)
n .(cid:0)3; 1/. we
would like to recover intervals (21.45) using just the observed data zi, i d
1; 2; : : : ; 10; 000, without knowledge of the prior.

(21.45)

figure 21.4 histogram of observed sample of n d 10,000
values zi from simulations (21.43)   (21.44).

a histogram of the 10,000 z-values is shown in figure 21.4; g-modeling
(21.9)   (21.11) was applied to them (now with (cid:22) playing the role of          

 z-valuesfrequency   8   6   4   20240200400600800||^^21.4 two examples
433
d .(cid:0)6;(cid:0)5:75; : : : ; 3/. q was composed of a
and z being    x   ), taking t
delta function at (cid:22) d 0 and a    fth-degree polynomial basis for the nonzero
(cid:22), again a family of spike-and-slab priors. the penalized id113 og (21.31),
(21.32), c0 d 1, estimated the id203 of (cid:22) d 0 as

og.0/ d 0:891    0:006

(21.46)

(using (21.38), which also provided bias estimate 0.001).

figure 21.5 purple curves show g-modeling estimates of
conditional 95% credible intervals for (cid:22) given z in arti   cial
microarray example (21.43)   (21.44). they are a close match to
the actual bayes intervals, dotted lines; cf. figure 20.3.

the estimated posterior density of (cid:22) given z is
og.(cid:22)jz/ d cz og.(cid:22)/(cid:30).z (cid:0) (cid:22)/;
 
(cid:16)

(21.47)
(cid:30).(cid:1)/ the standard normal density and cz the constant required for og.(cid:22)jz/
to integrate to 1. let q.  /.z/ denote the   th quantile of og.(cid:22)jz/. the purple
curves in figure 21.5 trace the estimated 95% credible intervals

q.:025/.z/; q.:975/.z/

:

(21.48)

they are a close match to the actual credible intervals (21.45).

the solid black curve in figure 21.6 shows og.(cid:22)/ for (cid:22)    0 (the    slab   
portion of the estimated prior). as an estimate of the actual slab density

   8   6   4   20   10   8   6   4   20observed zmllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllby.loby.up   2.77llllllllllllllbayes.lobayes.upeb.loeb.up434

empirical bayes estimation strategies

figure 21.6 the heavy black curve is the g-modeling estimate of
g.(cid:22)/ for (cid:22)    0 in the arti   cial microarray example, suppressing
the atom at zero, og.0/ d 0:891. it is only a rough estimate of the
actual nonzero density n .(cid:0)3; 1/.
n .(cid:0)3; 1/ it is only roughly accurate, but apparently still accurate

(cid:22) (cid:24)
enough to yield the reasonably good posterior intervals seen in figure 21.5.
the fundamental impediment to deconvolution   that large changes in g.  /
produce only small changes in f .x/   can sometimes operate in the statis-
tician   s favor, when only a rough knowledge of g suf   ces for applied pur-
poses.
our second example concerns the prostate study data, last seen in
figure 15.1: n d 102 men, 52 cancer patients and 50 normal controls, each
have had their genetic activities measured on a microarray of n d 6033
genes; genei yields a test statistic zi comparing patients with controls,

zi (cid:24)

n .(cid:22)i ; (cid:27) 2
0 /;

(21.49)

with (cid:22)i the gene   s effect size. (here we will take the variance (cid:27) 2
parameter to be estimated, rather than assuming (cid:27) 2
0
density g.(cid:22)/ for the effects?

0 as a
d 1.) what is the prior

the local false-discovery rate program locfdr, section 15.5, was ap-
plied to the 6033 zi values, as shown in figure 21.7. locfdr is an    f -
modeling    method, where id203 models are proposed directly for

   6   4   20240.000.020.040.060.080.10qdensitylatom.891n(   3,1)21.4 two examples

435

figure 21.7 the green curve is a six-parameter poisson
regression estimate    t to counts of the observed zi values for the
prostate data. the dashed curve is the empirical null (15.48),
zi (cid:24)
n .0:00; 1:062/. the f -modeling program locfdr
estimated null id203 prf(cid:22) d 0g d 0:984. genes with
z-values lying beyond the red triangles have estimated fdr values
less than 0.20.

(cid:16)o

the marginal density f .(cid:1)/ rather than for the prior density g.(cid:1)/; see sec-
tion (21.6). here we can compare locfdr   s results with those from g-
modeling. the former gave5
  0; o(cid:27)0; o(cid:25)0

  d .0:00; 1:06; 0:984/

(21.50)
in the notation of (15.50); that is, it estimated the null distribution as (cid:22) (cid:24)
n .0; 1:062/, with id203 o(cid:25)0 d 0:984 of a gene being null ((cid:22) d 0).
only 22 genes were estimated to have local fdr values less than 0.20, the
9 with zi   (cid:0)3:71 and the 12 with zi (cid:21) 3:81. (these are more pessimistic
results than in figure 15.5, where we used the theoretical null n .0; 1/
rather than the empirical null n .0; 1:062/.)
the g-modeling approach (21.11) was applied to the prostate study
data, assuming zi (cid:24)
0 /, (cid:27)0 d 1:06 as suggested by (21.50). the

n .(cid:22)i ; (cid:27) 2

5 using a six-parameter poisson regression    t to the zi values, of the type employed in

section 10.4.

   4   20240100200300400 z-valuescountsempirical bayes estimation strategies

436
structure matrix q in (21.11) had a delta function at (cid:22) d 0 and a    ve-
parameter natural spline basis for (cid:22)    0; t
d .(cid:0)3:6;(cid:0)3:4; : : : ; 3:6/ for
the discretized     space (21.9). this gave a penalized id113 og having null
id203

og.0/ d 0:946    0:011:

(21.51)

figure 21.8 the g-modeling estimate for the non-null density
og.(cid:22)/, (cid:22)    0, for the prostate study data, also indicating the
null atom og.0/ d 0:946. about 2% of the genes are estimated to
have effect sizes j(cid:22)ij (cid:21) 2. the red bars show    one standard
error as computed from theorem 21.4 (page 429).

the non-null distribution, og.(cid:22)/ for (cid:22)    0, appears in figure 21.8, where
it is seen to be modestly unimodal around (cid:22) d 0. dashed red bars indicate
   one standard error for the og. .j // estimates obtained from theorem 21.4
(page 429). the accuracy is not very good. it is better for larger regions of
the     space, for examplebprfj j (cid:21) 2g d 0:020    0:0014:

(21.52)

here g-modeling estimated less prior null id203, 0.946 compared
with 0.984 from f -modeling, but then attributed much of the non-null
id203 to small values of j(cid:22)ij.
taking (21.52) literally suggests 121 (d 0:020 (cid:1) 6033) genes with true

   4   20240.00000.00050.00100.00150.00200.00250.0030qg(q)||lnull atom0.94621.5 generalized linear mixed models

437

false-discovery ratebprf(cid:22) d 0jzg from g-modeling. for large
figure 21.9 the black curve is the empirical bayes estimated
values of jzj it nearly matches the locfdr f -modeling estimate
fdr.z/, red curve.

effect sizes j(cid:22)ij (cid:21) 2. that doesn   t mean we can say with certainty which
121. figure 21.9 compares the g-modeling empirical bayes false-discovery
rate

as in (21.47), with the f -modeling estimatecfdr.z/ produced by locfdr.

(21.53)

;

where it counts, in the tails, they are nearly the same.

bprf(cid:22) d 0jzg d cz og.0/(cid:30)

 

  z (cid:0) (cid:22)o(cid:27)0

21.5 generalized linear mixed models

the g-modeling theory can be extended to the situation where each ob-
servation xi is accompanied by an observed vector of covariates ci, say
of dimension d. we return to the generalized linear model setup of sec-
tion 8.2, where each xi has a one-parameter exponential family density
indexed by its own natural parameter (cid:21)i,

f(cid:21)i .xi / d expf(cid:21)i xi (cid:0) (cid:13).(cid:21)i /gf0.xi /

(21.54)

in notation (8.20).

   4   20240.00.20.40.60.81.0z-valuefdr(z)438

empirical bayes estimation strategies

our key assumption is that each (cid:21)i is the sum of a deterministic compo-

nent, depending on the covariates ci, and a random term    i,

(cid:21)i d    i c c

0
i   :

(21.55)
here    i is an unobserved realization from g.  / d expfq   (cid:0)  .  /g
(21.11) and    is an unknown d-dimensional parameter. if    d 0 then
(21.55) is a g-model as before,6 while if all the    i d 0 then it is a stan-
dard glm (8.20)   (8.22). taken together, (21.55) represents a generalized
linear mixed model (glmm). the likelihood and accuracy calculations of
section 21.3 extend to glmms, as referenced in the endnotes, but here we
will only discuss a glmm analysis of the nodes study of section 6.3.

in addition to ni the number of nodes removed and xi the number

found positive (6.33), a vector of four covariates

ci d .agei, sexi, smokei, progi /

(21.56)
was observed for each patient: a standardized version of age in years; sex
being 0 for female or 1 for male; smoke being 0 for no or 1 for yes to long-
term smoking; and prog being a post-operative prognosis score with large
values more favorable.
glmm model (21.55) was applied to the nodes data. now (cid:21)i was the
logit log  (cid:25)i =.1 (cid:0) (cid:25)i /  , where

xi (cid:24) bi.ni ; (cid:25)i /

(21.57)
as in table 8.4, i.e., (cid:25)i is the id203 that any one node from patient
i is positive. to make the correspondence with the analysis in section 6.3
exact, we used a variant of (21.55)

(cid:21)i d logit.   i / c c

0
i   :

(21.58)
now with    d 0,    i is exactly the binomial id203 (cid:25)i for the ith
case. maximum likelihood estimates were calculated for    in (21.11)   
d .0:01; 0:02; : : : ; 0:99/ and q d poly(t ,5) (21.14)   and
with t
   in (21.58). the id113 prior g.o  / was almost the same as that estimated
without covariates in figure 6.4.
  k=bsek. sex
table 21.2 shows the id113 values .
(from a parametric bootstrap simulation), and the z-values o
looks like it has a signi   cant effect, with males tending toward larger values
of (cid:25)i, that is, a greater number of positive nodes. the big effect though is
prog, larger values of prog indicating smaller values of (cid:25)i.
6 here the setup is more speci   c; f is exponential family, and    i is on the

o
  4/, their standard errors

o
  1;

o
  2;

o
  3;

natural-parameter scale.

21.5 generalized linear mixed models
o
  4/ for glmm

table 21.2 maximum likelihood estimates .
analysis of the nodes data, and standard errors from a parametric
bootstrap simulation; large values of progi predict low values of (cid:25)i.

o
  1;

o
  2;

o
  3;

439

age
(cid:0).078
.066
(cid:0)1.18

sex

.192
.070
2.74

smoke

prog
.089 (cid:0).698
.077
.063
1.41
9.07

id113
boot st err
z-value

figure 21.10 distribution of (cid:25)i, individual probabilities of a
positive node, for best and worst levels of factor prog; from
glmm analysis of nodes data.

figure 21.10 displays the distribution of (cid:25)i d 1=  1cexp.(cid:0)(cid:21)i /   implied
by the glmm model for the best and worst values of prog (setting age,
sex, and smoke to their average values and letting     have distribution
g.o  /). the implied distribution is concentrated near (cid:25) d 0 for the best-
level prog, while it is roughly uniform over   0; 1   for the worst level.

the random effects we have called    i are sometimes called frailties: a
composite of unmeasured individual factors lumped together as an index
of disease susceptibility. taken together, figures 6.4 and 21.10 show sub-
stantial frailty and covariate effects both at work in the nodes data. in

0.00.20.40.60.81.00.000.050.100.15id203 positive nodedensityworst prognosisbest prognosis440

empirical bayes estimation strategies

the language of section 6.1, we have amassed    indirect evidence    for each
patient, using both bayesian and frequentist methods.

21.6 deconvolution and f -modeling

empirical bayes applications have traditionally been dominated by f -
modeling   not the g-modeling approach of the previous sections   where
id203 models for the marginal density f .x/, usually exponential fam-
ilies, are    t directly to the observed sample x1; x2; : : : ; xn . we have seen
several examples: robbins    estimator in table 6.1 (particularly the bottom
line), locfdr   s poisson regression estimates in figures 15.6 and 21.7, and
tweedie   s estimate in figure 20.7.

both the advantages and the disadvantages of f -modeling can be seen in
the inferential diagram of figure 21.2. for f -modeling the red curve now
can represent an exponential family ff .  /g, whose concave log likelihood
function greatly simpli   es the calculation of f .o  / from y=n . this comes
at a price: the deconvolution step, from f .o  / to a prior distribution g.o  /,
is problematical, as discussed below.

this is only a problem if we want to know g. the traditional applications
of f -modeling apply to problems where the desired answer can be phrased
directly in terms of f . this was the case for robbins    formula (6.5), the
local false-discovery rate (15.38), and tweedie   s formula (20.37).

nevertheless, f -modeling methodology for the estimation of the prior
g.  / does exist, an elegant example being the fourier method described
next. a function f .x/ and its fourier transform (cid:30).t / are related by

(cid:30).t / dz 1

(cid:0)1 f .x/ei tx dx and f .x/ d 1

z 1
for the normal case where xi d    i c zi with zi (cid:24)
transform of f .x/ is a multiple of that for g.  /,
(cid:0)t 2=2;

(cid:30)f .t / d (cid:30)g .t /e

2(cid:25)

(cid:0)i tx dt:

(cid:0)1 (cid:30).t /e

(21.59)
n .0; 1/, the fourier

(21.60)

so, on the transform scale, estimating g from f amounts to removing the
factor exp.t 2=2/.
the fourier method begins with the empirical density n
f .x/ that puts
id203 1=n on each observed value xi, and then proceeds in three
steps.
1 n
f .x/ is smoothed using the    sinc    kernel,  

  3

q
f .x/ d 1

n (cid:21)

21.6 deconvolution and f -modeling

nx

id1

sinc

 

  xi (cid:0) x
q
f , say q(cid:30).t /, is calculated.

(cid:21)

;

sinc.x/ d sin.x/

x

441

:

(21.61)

2 the fourier transform of
3 finally, og.  / is taken to be the inverse fourier transform of q(cid:30).t /et 2=2,
this last step eliminating the unwanted factor e
a pleasantly surprising aspect of the fourier method is that og.  / can be

(cid:0)t 2=2 in (21.60).

expressed directly as a kernel estimate,

nx
where the kernel k(cid:21).(cid:1)/ is

og.  / d 1

id1

n

k(cid:21).xi (cid:0)   / dz 1
z 1=(cid:21)

(cid:0)1 k(cid:21).x (cid:0)   /

n
f .x/ dx;

(21.62)

0

(cid:25)

et 2=2 cos.tx/ dt:

k(cid:21).x/ d 1
large values of (cid:21) smooth n
og.  / at the expense of increased bias.
despite its compelling rationale, there are two drawbacks to the fourier
method. first of all, it applies only to situations xi d    i c zi where xi is
   i plus iid noise. more seriously, the bias/variance trade-off in the choice
of (cid:21) can be quite unfavorable.

f .x/ more in (21.61), reducing the variance of

(21.63)

this is illustrated in figure 21.11 for the arti   cial example of figure 21.1.
the black curve is the standard deviation of the g-modeling estimate of
g.  / for   in   (cid:0)3; 3  , under speci   cations (21.41)   (21.42). the red curve
graphs the standard deviation of the f -modeling estimate (21.62), with
(cid:21) d 1=3, a value that produced roughly the same amount of bias as the g-
modeling estimate (seen in figure 21.3). the ratio of red to black standard
deviations averages more than 20 over the range of  .

this comparison is at least partly unfair: g-modeling is parametric while
the fourier method is almost nonparametric in its assumptions about f .x/
or g.  /. it can be greatly improved by beginning the three-step algorithm
with a parametric estimate o
f .x/ rather than n
f .x/. the blue dotted curve in
figure 21.11 does this with o
f .x/ a poisson regression on the data x1; x2;
: : : ; xn    as in figure 10.5 but here using a natural spline basis ns(df=5)
   giving the estimate

(cid:0)1 k(cid:21).x (cid:0)   /

o
f .x/ dx:

(21.64)

og.  / dz 1

442

empirical bayes estimation strategies

figure 21.11 standard deviations of estimated prior density og.  /
for the arti   cial example of figure 21.1, based on n d 1000
observations xi (cid:24)
n .   i ; 1/; black curve using g-modeling
under speci   cations (21.41)   (21.42); red curve nonparametric
f -modeling (21.62), (cid:21) d 1=3; blue curve parametric f -modeling
(21.64), with o
structure matrix having    ve degrees of freedom.

f .x/ estimated from poisson regression with a

we see a substantial decrease in standard deviation, though still not attain-
ing g-modeling rates.

as commented before, the great majority of empirical bayes applica-
tions have been of the robbins/fdr/tweedie variety, where f -modeling
is the natural choice. g-modeling comes into its own for situations like
the nodes data analysis of figures 6.4 and 6.5, where we really want
an estimate of the prior g.  /. twenty-   rst-century science is producing
more such data sets, an impetus for the further development of g-modeling
strategies.
table 21.3 concerns the g-modeling estimation of ex d ef   jx d xg,

ex dz

t

(cid:30)z

t

 g.  /f  .x/ d 

g.  /f  .x/ d 

(21.65)

for the arti   cial example, under the same speci   cations as in figure 21.11.
samples of size n d 1000 of xi (cid:24)
n .   i ; 1/ were drawn from model
(21.41)   (21.42), yielding id113 og.  / and estimates oex for x between (cid:0)4

   3   2   101230.000.010.020.030.040.05qsd g^(q)g   modelparametricf   modelnon   parametricf   model21.6 deconvolution and f -modeling

443

table 21.3 standard deviation of oef   jxg computed from parametric
bootstrap simulations of og.  /. the g-modeling is as in figure 21.11, with
n d 1000 observations xi (cid:24)
each simulation. the column    info    is the implied empirical bayes
information for estimating ef   jxg obtained from one    other   
observation xi.

n .   i ; 1/ from the arti   cial example for

x ef   jxg
(cid:0)2:00
(cid:0)1:06
(cid:0):44
(cid:0):13
.13
.44
1.06
2.00

(cid:0)3:5
(cid:0)2:5
(cid:0)1:5
(cid:0):5
.5
1.5
2.5
3.5

sd. oe/
.10
.10
.05
.03
.04
.05
.10
.16

info

.11
.11
.47
.89
.80
.44
.10
.04

and 4. one thousand such estimates oex were generated, averaging almost
exactly ex, with standard deviations as shown. accuracy is reasonably
good, the coef   cient of variation sd. oex/=ex being about 0.05 for large
values of jxj. (estimate (21.65) is a favorable case: results are worse for
other conditional estimates   such as ef   2jx d xg.)
theorem 21.4 (page 429) implies that, for large values of the sample
size n , the variance of oex decreases as 1=n , say

  4

var

n oex
.(cid:16)
n (cid:1) var
ix d 1

o :d cx=n:
n oex

o 

(21.66)

by analogy with the fisher information bound (5.27), we can de   ne the
empirical bayes information for estimating ex in one observation to be

;

(21.67)

(cid:0)1
x =n .

so that varf oexg :d i
empirical bayes id136 leads us directly into the world of indirect
evidence, learning from the experience of others as in sections 6.4 and
7.4. so, if xi d 2:5, each     other    observation xj provides 0.10 units of
information for learning ef   jxi d 2:5g (compared with the usual fisher
d 1 for the direct estimation of    i from xi). this
information value i
is a favorable case, as mentioned, and ix is often much smaller. the main
point, perhaps, is that assuming a bayes prior is not a casual matter, and

444

empirical bayes estimation strategies

can amount to the assumption of an enormous amount of relevant other
information.

21.7 notes and details

empirical bayes and james   stein estimation, chapters 6 and 7, exploded
onto the statistics scene almost simultaneously in the 1950s. they repre-
sented a genuinely new branch of statistical id136, unlike the computer-
based extensions of classical methodology reviewed in previous chapters.
their development as practical tools has been comparatively slow. the
pace has quickened in the twenty-   rst century, with false-discovery rates,
chapter 15, as a major step forward. a practical empirical bayes method-
ology for use beyond traditional f -modeling venues such as fdr is the goal
of the g-modeling approach.

  1 [p. 428] lemmas 21.1 and 21.2. the derivations of lemmas 21.1 and 21.2
are straightforward but somewhat involved exercises in differential calcu-
lus, carried out in remark b of efron (2016). here we will present just
p
fk.  / d
a sample of the calculations. from (21.18), the gradient vector
.@fk.  /=@  l / with respect to    is

p
fk.  / d pg.  /
0
where pg.  / is the m (cid:2) p derivative matrix

pk;

pg.  / d .@gj .  /=@  l / d dq;

(21.68)

(21.69)

with d as in (21.36), the last equality following, after some work, by dif-
ferentiation of log g.  / d q   (cid:0) (cid:30).  /.
let lk d log fk (now suppressing    from the notation). the gradient
with respect to    of lk is then
p
lk d p

fk=fk d q
0

dpk=fk:

(21.70)

the vector dpk=fk has components

.gj pkj (cid:0) gj fk/=fk d wkj

(21.71)

pk d fk. this gives p
0pn
0
(21.27), using g
the independent score functions p
score p
ly .  / d q
o d pm.o  /

  2 [p. 428] lemma 2. the penalized id113 o   satis   es

1 ykwk.  /, which is lemma 21.1.

:d pm.  0/ c rm.  0/.o   (cid:0)   0/;

lk d q
0

wk.  / (21.28). adding up
lk over the full sample yields the overall

(21.72)

21.7 notes and details

(cid:0)1 pm.  0/

(cid:16)(cid:0)r

:d .(cid:0) rm.  0//

 (cid:0)1(cid:16)p
where   0 is the true value of   , or
o   (cid:0)   0
standard id113 theory shows that the random variable p
and covariance fisher information matrix i.  0/, while (cid:0)r
ically approximates i.  0/. substituting in (21.73),
(cid:0)1z;

:d .i.  0/ c rs.  0//

ly .  0/ c rs.  0/

o   (cid:0)   0

445

 

ly .  0/ (cid:0) ps.  0/

:

(21.73)
ly .  0/ has mean 0
ly .  0/ asymptot-

(21.74)
where z has mean (cid:0)ps.  0/ and covariance i.  0/. this gives bias.o  / and
var.o  / as in lemma 2. note that the bias is with respect to a true parametric
model (21.11), and is a consequence of the penalization.
  3 [p. 440] the sinc kernel. the fourier transform (cid:30)s.t / of the scaled sinc
function s.x/ d sin.x=(cid:21)/=.(cid:25)x/ is the indicator of the interval   (cid:0)1=(cid:21); 1=(cid:21)  ,
while that of
1 exp.i txj /. formula (21.61) is the convo-
lution n

f (cid:3) s, so q

f .x/ is .1=n /pn
24 1
nx
f has the product transform
(cid:30) qf .t / d

35 i  (cid:0)1=(cid:21);1=(cid:21)  .t /:

(21.75)

ei txj

n

n

jd1

the effect of the sinc convolution is to censor the high-frequency (large t)
n
f or (cid:30) nf . larger (cid:21) yields more censoring. formula (21.63)
components of
has upper limits 1=(cid:21) because of (cid:30)s.t /. all of this is due to stefanski and
carroll (1990). smoothers other than the sinc kernel have been suggested
in the literature, but without substantial improvements on deconvolution
performance.
  4 [p. 443] conditional expectation (21.65). efron (2014b) considers estimat-
ing ef   2jx d xg and other such conditional expectations, both for f -
modeling and for g-modeling. ef   jx d xg is by far the easiest case, as
might be expected from the simple form of tweedie   s estimate (20.37).

epilogue

something important changed in the world of statistics in the new millen-
nium. twentieth-century statistics, even after the heated expansion of its
late period, could still be contained within the classic bayesian   frequentist   
fisherian inferential triangle (figure 14.1). this is not so in the twenty-   rst
century. some of the topics discussed in part iii   false-discovery rates,
post-selection id136, empirical bayes modeling, the lasso      t within
the triangle but others seem to have escaped, heading south from the fre-
quentist corner, perhaps in the direction of computer science.

the escapees were the large-scale prediction algorithms of chapters 17   
19: neural nets, deep learning, boosting, id79s, and support-vector
machines. notably missing from their development were parametric prob-
ability models, the building blocks of classical id136. prediction algo-
rithms are the media stars of the big-data era. it is worth asking why they
have taken center stage and what it means for the future of the statistics
discipline.

the why is easy enough: prediction is commercially valuable. modern
equipment has enabled the collection of mountainous data troves, which
the    data miners    can then burrow into, extracting valuable information.
moreover, prediction is the simplest use of regression theory (section 8.4).
it can be carried out successfully without id203 models, perhaps with
the assistance of nonparametric analysis tools such as cross-validation, per-
mutations, and the bootstrap.

a great amount of ingenuity and experimentation has gone into the
development of modern prediction algorithms, with statisticians playing
an important but not dominant role.1 there is no shortage of impressive
success stories. in the absence of optimality criteria, either frequentist or
bayesian, the prediction community grades algorithmic excellence on per-

1 all papers mentioned in this section have their complete references in the bibliography.

footnotes will identify papers not fully speci   ed in the text.

446

epilogue

447

formance within a catalog of often-visited examples such as the spam and
digits data sets of chapters 17 and 18.2 meanwhile,    traditional statistics   
   id203 models, optimality criteria, bayes priors, asymptotics   has
continued successfully along on a parallel track. pessimistically or opti-
mistically, one can consider this as a bipolar disorder of the    eld or as a
healthy duality that is bound to improve both branches. there are histori-
cal and intellectual arguments favoring the optimists    side of the story.

the    rst thing to say is that the current situation is not entirely unprece-
dented. by the end of the nineteenth century there was available an im-
pressive inventory of statistical methods   bayes    theorem, least squares,
correlation, regression, the multivariate normal distribution   but these ex-
isted more as individual algorithms than as a uni   ed discipline. statistics
as a distinct intellectual enterprise was not yet well-formed.

a small but crucial step forward was taken in 1914 when the astrophysi-
cist arthur eddington3 claimed that mean absolute deviation was superior
to the familiar root mean square estimate for the standard deviation from a
normal sample. fisher in 1919 showed that this was wrong, and moreover,
in a clear mathematical sense, the root mean square was the best possible
estimate. eddington conceded the point while fisher went on to develop
the theory of suf   ciency and optimal estimation.4

   optimal    is the key word here. before fisher, statisticians didn   t really
understand estimation. the same can be said now about prediction. despite
their impressive performance on a raft of test problems, it might still be
possible to do much better than neural nets, deep learning, id79s,
and boosting   or perhaps they are coming close to some as-yet unknown
theoretical minimum.

it is the job of statistical id136 to connect    dangling algorithms    to
the central core of well-understood methodology. the connection process
is already underway. section 17.4 showed how adaboost, the original
machine learning algorithm, could be restated as a close cousin of logis-
tic regression. purely empirical approaches like the common task frame-
work are ultimately unsatisfying without some form of principled justi-
   cation. our optimistic scenario has the big-data/data-science prediction
world rejoining the mainstream of statistical id136, to the bene   t of
both branches.

2 this empirical approach to optimality is sometimes codi   ed as the common task

framework (liberman, 2015 and donoho, 2015).

3 eddington became world-famous for his 1919 empirical veri   cation of einstein   s

relativity theory.

4 see stigler (2006) for the full story.

448

epilogue

development of the statistics discipline since the end of the nine-
teenth century, as discussed in the text.

whether or not we can predict the future of statistics, we can at least
examine the past to see how we   ve gotten where we are. the next    gure
does so in terms of a new triangle diagram, this time with the poles la-
beled applications, mathematics, and computation.    mathematics    here
is shorthand for the mathematical/logical justi   cation of statistical meth-
ods.    computation    stands for the empirical/numerical approach.

statistics is a branch of applied mathematics, and is ultimately judged
by how well it serves the world of applications. mathematical logic, `a
la fisher, has been the traditional vehicle for the development and under-
standing of statistical methods. computation, slow and dif   cult before the
1950s, was only a bottleneck, but now has emerged as a competitor to (or
perhaps a seven-league boots enabler of) mathematical analysis. at any
one time the discipline   s energy and excitement is directed unequally to-
ward the three poles. the    gure attempts, in admittedly crude fashion, to
track the changes in direction over the past 100c years.

 lllmathematicscomputationapplicationsl19th century1900190819251933193719501962197219791995200020012016b2016aepilogue

449

the tour begins at the end of the nineteenth century. mathematicians of
the caliber of gauss and laplace had contributed to the available method-
ology, but the subsequent development was almost entirely applications-
driven. quetelet5 was especially in   uential, applying the gauss   laplace
formulation to census data and his    average man.    a modern reader will
search almost in vain for any mathematical symbology in nineteenth-century
statistics journals.

1900

karl pearson   s chi-square paper was a bold step into the new century, ap-
plying a new mathematical tool, matrix theory, in the service of statisti-
cal methodology. he and weldon went on to found biometrika in 1901,
the    rst recognizably modern statistics journal. pearson   s paper, and bio-
metrika, launched the statistics discipline on a    fty-year march toward the
mathematics pole of the triangle.

student   s t statistic was a crucial    rst result in small-sample    exact    infer-
ence, and a major in   uence on fisher   s thinking.

1908

1925

fisher   s great estimation paper   a more coherent version of its 1922 pre-
decessor. it introduced a host of fundamental ideas, including suf   ciency,
ef   ciency, fisher information, maximum likelihood theory, and the notion
of optimal estimation. optimality is a mark of maturity in mathematics,
making 1925 the year statistical id136 went from a collection of inge-
nious techniques to a coherent discipline.

1933

this represents neyman and pearson   s paper on optimal hypothesis test-
ing. a logical completion of fisher   s program, it nevertheless aroused his
strong antipathy. this was partly personal, but also re   ected fisher   s con-
cern that mathematization was squeezing intuitive correctness out of statis-
tical thinking (section 4.2).

1937

neyman   s seminal paper on con   dence intervals. his sophisticated mathe-
matical treatment of statistical id136 was a harbinger of decision theory.

5 adolphe quetelet was a tireless organizer, helping found the royal statistical society in

1834, with the american statistical association following in 1839.

450

epilogue

1950

the publication of wald   s statistical decision functions. decision theory
completed the full mathematization of statistical id136. this date can
also stand for savage   s and de finetti   s decision-theoretic formulation of
bayesian id136. we are as far as possible from the applications corner
of the triangle now, and it is fair to describe the 1950s as a nadir of the
in   uence of the statistics discipline on scienti   c applications.

1962

the arrival of electronic computation in the mid 1950s began the process
of stirring statistics out of its inward-gazing preoccupation with mathe-
matical structure. tukey   s paper    the future of data analysis    argued for
a more application- and computation-oriented discipline. mosteller and
tukey later suggested changing the    eld   s name to data analysis, a pre-
scient hint of today   s data science.

1972

cox   s proportional hazards paper. immensely useful in its own right, it sig-
naled a growing interest in biostatistical applications and particularly sur-
vival analysis, which was to assert its scienti   c importance in the analysis
of aids epidemic data.

the bootstrap, and later the widespread use of mcmc: electronic compu-
tation used for the extension of classic statistical id136.

1979

1995

this stands for false-discovery rates and, a year later, the lasso.6 both are
computer-intensive algorithms,    rmly rooted in the ethos of statistical in-
ference. they lead, however, in different directions, as indicated by the
split in the diagram.

microarray technology inspires enormous interest in large-scale id136,
both in theory and as applied to the analysis of microbiological data.

2000

6 benjamini and hochberg (1995) and tibshirani (1996).

epilogue

2001

451

id79s; it joins boosting7 and the resurgence of neural nets in the
ranks of machine learning prediction algorithms.

2016a

data science: a more popular successor to tukey and mosteller   s    data
analysis,    at one extreme it seems to represent a statistics discipline with-
out parametric id203 models or formal id136. the data science
association de   nes a practitioner as one who    . . . uses scienti   c methods
to liberate and create meaning from raw data.    in practice the emphasis is
on the algorithmic processing of large data sets for the extraction of useful
information, with the prediction algorithms as exemplars.

2016b

this represents the traditional line of statistical thinking, of the kind that
could be located within figure 14.1, but now energized with a renewed
focus on applications. of particular applied interest are biology and ge-
netics. genome-wide association studies (gwas) show a different face of
big data. prediction is important here,8 but not suf   cient for the scienti   c
understanding of disease.

a cohesive inferential theory was forged in the    rst half of the twenti-
eth century, but unity came at the price of an inwardly focused discipline,
of reduced practical utility. in the century   s second half, electronic com-
putation unleashed a vast expansion of useful   and much used   statistical
methodology. expansion accelerated at the turn of the millennium, further
increasing the reach of statistical thinking, but now at the price of intellec-
tual cohesion.

it is tempting but risky to speculate on the future of statistics. what
will the mathematics   applications   computation diagram look like, say
25 years from now? the appetite for statistical analysis seems to be always
increasing, both from science and from society in general. data science
has blossomed in response, but so has the traditional wing of the    eld. the
data-analytic initiatives represented in the diagram by 2016a and 2016b are
in actuality not isolated points but the centers of overlapping distributions.

7 breiman (1996) for id79s, freund and schapire (1997) for boosting.
8    personalized medicine    in which an individual   s genome predicts his or her optimal

treatment has attracted grail-like attention.

452

epilogue

a hopeful scenario for the future is one of an increasing overlap that puts
data science on a solid footing while leading to a broader general formula-
tion of statistical id136.

references

abu-mostafa, y. 1995. hints. neural computation, 7, 639   671.
achanta, r., and hastie, t. 2015. telugu ocr framework using deep learning. tech.

rept. statistics department, stanford university.

akaike, h. 1973. id205 and an extension of the maximum likelihood prin-
ciple. pages 267   281 of: second international symposium on id205
(tsahkadsor, 1971). akad  emiai kiad  o, budapest.

anderson, t. w. 2003. an introduction to multivariate statistical analysis. third edn.

wiley series in id203 and statistics. wiley-interscience.

bastien, f., lamblin, p., pascanu, r., bergstra, j., goodfellow, i. j., bergeron, a.,
bouchard, n., and bengio, y. 2012. theano: new features and speed improvements.
deep learning and unsupervised id171 nips 2012 workshop.

becker, r., chambers, j., and wilks, a. 1988. the new s language: a programming
environment for data analysis and graphics. paci   c grove, ca: wadsworth and
brooks/cole.

bellhouse, d. r. 2004. the reverend thomas bayes, frs: a biography to celebrate the
tercentenary of his birth. statist. sci., 19(1), 3   43. with comments and a rejoinder
by the author.

bengio, y., courville, a., and vincent, p. 2013. representation learning: a review and
new perspectives. ieee transactions on pattern analysis and machine intelligence,
35(8), 1798   1828.

benjamini, y., and hochberg, y. 1995. controlling the false discovery rate: a practical
and powerful approach to multiple testing. j. roy. statist. soc. ser. b, 57(1), 289   
300.

benjamini, y., and yekutieli, d. 2005. false discovery rate-adjusted multiple con   -

dence intervals for selected parameters. j. amer. statist. assoc., 100(469), 71   93.

berger, j. o. 2006. the case for objective bayesian analysis. bayesian anal., 1(3),

385   402 (electronic).

berger, j. o., and pericchi, l. r. 1996. the intrinsic bayes factor for model selection

and prediction. j. amer. statist. assoc., 91(433), 109   122.

bergstra, j., breuleux, o., bastien, f., lamblin, p., pascanu, r., desjardins, g., turian,
j., warde-farley, d., and bengio, y. 2010 (june). theano: a cpu and gpu math
expression compiler. in: proceedings of the python for scienti   c computing con-
ference (scipy).

berk, r., brown, l., buja, a., zhang, k., and zhao, l. 2013. valid post-selection

id136. ann. statist., 41(2), 802   837.

453

454

references

berkson, j. 1944. application of the logistic function to bio-assay. j. amer. statist.

assoc., 39(227), 357   365.

bernardo, j. m. 1979. reference posterior distributions for bayesian id136. j. roy.
birch, m. w. 1964. the detection of partial association. i. the 2(cid:2)2 case. j. roy. statist.

statist. soc. ser. b, 41(2), 113   147. with discussion.

soc. ser. b, 26(2), 313   324.

bishop, c. 1995. neural networks for pattern recognition. clarendon press, oxford.
boos, d. d., and ser   ing, r. j. 1980. a note on differentials and the clt and lil for
statistical functions, with application to m -estimates. ann. statist., 8(3), 618   624.
boser, b., guyon, i., and vapnik, v. 1992. a training algorithm for optimal margin

classi   ers. in: proceedings of colt ii.

breiman, l. 1996. id112 predictors. mach. learn., 24(2), 123   140.
breiman, l. 1998. arcing classi   ers (with discussion). annals of statistics, 26, 801   

849.

breiman, l. 2001. id79s. machine learning, 45, 5   32.
breiman, l., friedman, j., olshen, r. a., and stone, c. j. 1984. classi   cation and
regression trees. wadsworth statistics/id203 series. wadsworth advanced
books and software.

carlin, b. p., and louis, t. a. 1996. bayes and empirical bayes methods for data
analysis. monographs on statistics and applied id203, vol. 69. chapman &
hall.

carlin, b. p., and louis, t. a. 2000. bayes and empirical bayes methods for data

analysis. 2 edn. texts in statistical science. chapman & hall/crc.

chambers, j. m., and hastie, t. j. (eds). 1993. statistical models in s. chapman &

hall computer science series. chapman & hall.

cleveland, w. s. 1981. lowess: a program for smoothing scatterplots by robust

locally weighted regression. amer. statist., 35(1), 54.

cox, d. r. 1958. the regression analysis of binary sequences. j. roy. statist. soc. ser.

b, 20, 215   242.

cox, d. r. 1970. the analysis of binary data. methuen   s monographs on applied

id203 and statistics. methuen & co.

cox, d. r. 1972. regression models and life-tables. j. roy. statist. soc. ser. b, 34(2),

187   220.

cox, d. r. 1975. partial likelihood. biometrika, 62(2), 269   276.
cox, d. r., and hinkley, d. v. 1974. theoretical statistics. chapman & hall.
cox, d. r., and reid, n. 1987. parameter orthogonality and approximate conditional

id136. j. roy. statist. soc. ser. b, 49(1), 1   39. with a discussion.

crowley, j. 1974. asymptotic normality of a new nonparametric statistic for use in

organ transplant studies. j. amer. statist. assoc., 69(348), 1006   1011.

de finetti, b. 1972. id203, induction and statistics. the art of guessing. john

wiley & sons, london-new york-sydney.

dembo, a., cover, t. m., and thomas, j. a. 1991. information-theoretic inequalities.

ieee trans. inform. theory, 37(6), 1501   1518.

dempster, a. p., laird, n. m., and rubin, d. b. 1977. maximum likelihood from

incomplete data via the em algorithm. j. roy. statist. soc. ser. b, 39(1), 1   38.

diaconis, p., and ylvisaker, d. 1979. conjugate priors for exponential families. ann.

statist., 7(2), 269   281.

references

455

diciccio, t., and efron, b. 1992. more accurate con   dence intervals in exponential

families. biometrika, 79(2), 231   245.

donoho, d. l. 2015. 50 years of data science. r-bloggers. www.r-bloggers.

com/50-years-of-data-science-by-david-donoho/.

edwards, a. w. f. 1992. likelihood. expanded edn. johns hopkins university press.

revised reprint of the 1972 original.

efron, b. 1967. the two sample problem with censored data. pages 831   853 of: proc.
5th berkeley symp. math. statist. and prob., vol. 4. university of california press.
efron, b. 1975. de   ning the curvature of a statistical problem (with applications to
second order ef   ciency). ann. statist., 3(6), 1189   1242. with discussion and a
reply by the author.

efron, b. 1977. the ef   ciency of cox   s likelihood function for censored data. j. amer.

statist. assoc., 72(359), 557   565.

efron, b. 1979. bootstrap methods: another look at the jackknife. ann. statist., 7(1),

1   26.

efron, b. 1982. the jackknife, the bootstrap and other resampling plans. cbms-nsf
regional conference series in applied mathematics, vol. 38. society for industrial
and applied mathematics (siam).

efron, b. 1983. estimating the error rate of a prediction rule: improvement on cross-

validation. j. amer. statist. assoc., 78(382), 316   331.

efron, b. 1985. bootstrap con   dence intervals for a class of parametric problems.

biometrika, 72(1), 45   58.

efron, b. 1986. how biased is the apparent error rate of a prediction rule? j. amer.

statist. assoc., 81(394), 461   470.

efron, b. 1987. better bootstrap con   dence intervals. j. amer. statist. assoc., 82(397),

171   200. with comments and a rejoinder by the author.

efron, b. 1988. id28, survival analysis, and the kaplan   meier curve. j.

amer. statist. assoc., 83(402), 414   425.

efron, b. 1993.

bayes and likelihood calculations from con   dence intervals.

biometrika, 80(1), 3   26.

efron, b. 1998. r. a. fisher in the 21st century (invited paper presented at the 1996
r. a. fisher lecture). statist. sci., 13(2), 95   122. with comments and a rejoinder
by the author.

efron, b. 2004. the estimation of prediction error: covariance penalties and cross-
validation. j. amer. statist. assoc., 99(467), 619   642. with comments and a rejoin-
der by the author.

efron, b. 2010. large-scale id136: empirical bayes methods for estimation, test-
ing, and prediction. institute of mathematical statistics monographs, vol. 1. cam-
bridge university press.

efron, b. 2011. tweedie   s formula and selection bias. j. amer. statist. assoc., 106(496),

1602   1614.

efron, b. 2014a. estimation and accuracy after model selection. j. amer. statist. assoc.,

109(507), 991   1007.

efron, b. 2014b. two modeling strategies for empirical bayes estimation. statist. sci.,

29(2), 285   301.

efron, b. 2015. frequentist accuracy of bayesian estimates. j. roy. statist. soc. ser. b,

77(3), 617   646.

456

references

efron, b. 2016. empirical bayes deconvolution estimates. biometrika, 103(1), 1   20.
efron, b., and feldman, d. 1991. compliance as an explanatory variable in clinical

trials. j. amer. statist. assoc., 86(413), 9   17.

efron, b., and gous, a. 2001. scales of evidence for model selection: fisher versus
jeffreys. pages 208   256 of: model selection. ims lecture notes monograph series,
vol. 38. beachwood, oh: institute of mathematics and statististics. with discussion
and a rejoinder by the authors.

efron, b., and hinkley, d. v. 1978. assessing the accuracy of the maximum likelihood
estimator: observed versus expected fisher information. biometrika, 65(3), 457   
487. with comments and a reply by the authors.

efron, b., and morris, c. 1972. limiting the risk of bayes and empirical bayes estima-

tors. ii. the empirical bayes case. j. amer. statist. assoc., 67, 130   139.

efron, b., and morris, c. 1977. stein   s paradox in statistics. scienti   c american,

236(5), 119   127.

efron, b., and petrosian, v. 1992. a simple test of independence for truncated data

with applications to redshift surveys. astrophys. j., 399(nov), 345   352.

efron, b., and stein, c. 1981. the jackknife estimate of variance. ann. statist., 9(3),

586   596.

efron, b., and thisted, r. 1976. estimating the number of unseen species: how many

words did shakespeare know? biometrika, 63(3), 435   447.

efron, b., and tibshirani, r. 1993. an introduction to the bootstrap. monographs on

statistics and applied id203, vol. 57. chapman & hall.

efron, b., and tibshirani, r. 1997. improvements on cross-validation: the .632+ boot-

strap method. j. amer. statist. assoc., 92(438), 548   560.

efron, b., hastie, t., johnstone, i., and tibshirani, r. 2004. least angle regression. an-
nals of statistics, 32(2), 407   499. (with discussion, and a rejoinder by the authors).
finney, d. j. 1947. the estimation from individual records of the relationship between

dose and quantal response. biometrika, 34(3/4), 320   334.

fisher, r. a. 1915. frequency distribution of the values of the correlation coef   cient in

samples from an inde   nitely large population. biometrika, 10(4), 507   521.

fisher, r. a. 1925. theory of statistical estimation. math. proc. cambridge phil. soc.,

22(7), 700   725.
fisher, r. a. 1930.

inverse id203. math. proc. cambridge phil. soc., 26(10),

528   535.

fisher, r. a., corbet, a., and williams, c. 1943. the relation between the number of
species and the number of individuals in a random sample of an animal population.
j. anim. ecol., 12, 42   58.

fithian, w., sun, d., and taylor, j. 2014. optimal id136 after model selection.

arxiv e-prints, oct.

freund, y., and schapire, r. 1996. experiments with a new boosting algorithm. pages
148   156 of: machine learning: proceedings of the thirteenth international con-
ference. morgan kauffman, san francisco.

freund, y., and schapire, r. 1997. a decision-theoretic generalization of online learn-
ing and an application to boosting. journal of computer and system sciences, 55,
119   139.

friedman, j. 2001. greedy function approximation: a gradient boosting machine. an-

nals of statistics, 29(5), 1189   1232.

references

457

friedman, j., and popescu, b. 2005. predictive learning via rule ensembles. tech.

rept. stanford university.

friedman, j., hastie, t., and tibshirani, r. 2000. additive id28: a statis-

tical view of boosting (with discussion). annals of statistics, 28, 337   307.

friedman, j., hastie, t., and tibshirani, r. 2009. glmnet: lasso and elastic-net regu-

larized generalized linear models. r package version 1.1-4.

friedman, j., hastie, t., and tibshirani, r. 2010. id173 paths for generalized

linear models via coordinate descent. journal of statistical software, 33(1), 1   22.

geisser, s. 1974. a predictive approach to the random effect model. biometrika, 61,

101   107.

gerber, m., and chopin, n. 2015. sequential quasi monte carlo. j. roy. statist. soc.

b, 77(3), 509   580. with discussion, doi: 10.1111/rssb.12104.

gholami, s., janson, l., worhunsky, d. j., tran, t. b., squires, malcolm, i., jin, l. x.,
spolverato, g., votanopoulos, k. i., schmidt, c., weber, s. m., bloomston, m., cho,
c. s., levine, e. a., fields, r. c., pawlik, t. m., maithel, s. k., efron, b., norton,
j. a., and poultsides, g. a. 2015. number of lymph nodes removed and survival after
gastric cancer resection: an analysis from the us gastric cancer collaborative. j.
amer. coll. surg., 221(2), 291   299.

good, i., and toulmin, g. 1956. the number of new species, and the increase in popu-

lation coverage, when a sample is increased. biometrika, 43, 45   63.

hall, p. 1988. theoretical comparison of bootstrap con   dence intervals. ann. statist.,

16(3), 927   985. with discussion and a reply by the author.

hampel, f. r. 1974. the in   uence curve and its role in robust estimation. j. amer.

statist. assoc., 69, 383   393.

hampel, f. r., ronchetti, e. m., rousseeuw, p. j., and stahel, w. a. 1986. robust
statistics: the approach based on in   uence functions. wiley series in id203
and mathematical statistics. john wiley & sons.

harford, t. 2014. big data: a big mistake? signi   cance, 11(5), 14   19.
hastie, t., and loader, c. 1993. local regression: automatic kernel carpentry (with

discussion). statistical science, 8, 120   143.

hastie, t., and tibshirani, r. 1990. generalized additive models. chapman and hall.
hastie, t., and tibshirani, r. 2004. ef   cient quadratic id173 for expression

arrays. biostatistics, 5(3), 329   340.

hastie, t., tibshirani, r., and friedman, j. 2009. the elements of statistical learning.
data mining, id136, and prediction. second edn. springer series in statistics.
springer.

hastie, t., tibshirani, r., and wainwright, m. 2015. statistical learning with sparsity:

the lasso and generalizations. chapman and hall, crc press.

hoeffding, w. 1952. the large-sample power of tests based on permutations of obser-

vations. ann. math. statist., 23, 169   192.

hoeffding, w. 1965. asymptotically optimal tests for multinomial distributions. ann.

math. statist., 36(2), 369   408.

hoerl, a. e., and kennard, r. w. 1970. ridge regression: biased estimation for nonor-

thogonal problems. technometrics, 12(1), 55   67.

huber, p. j. 1964. robust estimation of a location parameter. ann. math. statist., 35,

73   101.

458

references

jaeckel, l. a. 1972. estimating regression coef   cients by minimizing the dispersion of

the residuals. ann. math. statist., 43, 1449   1458.

james, w., and stein, c. 1961. estimation with quadratic loss. pages 361   379 of:
proc. 4th berkeley symposium on mathematical statistics and id203, vol. i.
university of california press.

jansen, l., fithian, w., and hastie, t. 2015. effective degrees of freedom: a    awed

metaphor. biometrika, 102(2), 479   485.

javanmard, a., and montanari, a. 2014. con   dence intervals and hypothesis testing

for high-dimensional regression. j. of machine learning res., 15, 2869   2909.

jaynes, e. 1968. prior probabilities. ieee trans. syst. sci. cybernet., 4(3), 227   241.
jeffreys, h. 1961. theory of id203. third ed. clarendon press.
johnson, n. l., and kotz, s. 1969. distributions in statistics: discrete distributions.

houghton mif   in co.

johnson, n. l., and kotz, s. 1970a. distributions in statistics. continuous univariate

distributions. 1. houghton mif   in co.

johnson, n. l., and kotz, s. 1970b. distributions in statistics. continuous univariate

distributions. 2. houghton mif   in co.

johnson, n. l., and kotz, s. 1972. distributions in statistics: continuous multivariate

distributions. john wiley & sons.

kaplan, e. l., and meier, p. 1958. nonparametric estimation from incomplete obser-

vations. j. amer. statist. assoc., 53(282), 457   481.

kass, r. e., and raftery, a. e. 1995. bayes factors. j. amer. statist. assoc., 90(430),

773   795.

kass, r. e., and wasserman, l. 1996. the selection of prior distributions by formal

rules. j. amer. statist. assoc., 91(435), 1343   1370.

kuffner, r., zach, n., norel, r., hawe, j., schoenfeld, d., wang, l., li, g., fang,
l., mackey, l., hardiman, o., cudkowicz, m., sherman, a., ertaylan, g., grosse-
wentrup, m., hothorn, t., van ligtenberg, j., macke, j. h., meyer, t., scholkopf,
b., tran, l., vaughan, r., stolovitzky, g., and leitner, m. l. 2015. crowdsourced
analysis of clinical trial data to predict amyotrophic lateral sclerosis progression. nat
biotech, 33(1), 51   57.

lecun, y., and cortes, c. 2010.

mnist handwritten digit database.

http://yann.lecun.com/exdb/mnist/.

lecun, y., bengio, y., and hinton, g. 2015. deep learning. nature, 521(7553), 436   

444.

lee, j., sun, d., sun, y., and taylor, j. 2016. exact post-selection id136, with

application to the lasso. annals of statistics, 44(3), 907   927.

lehmann, e. l. 1983. theory of point estimation. wiley series in id203 and

mathematical statistics. john wiley & sons.

leslie, c., eskin, e., cohen, a., weston, j., and noble, w. s. 2003. mismatch string

kernels for discriminative pretein classi   cation. bioinformatics, 1, 1   10.

liaw, a., and wiener, m. 2002. classi   cation and regression by randomforest. r

news, 2(3), 18   22.

liberman, m. 2015 (april).    reproducible research and the common task method   .
simons foundation frontiers of data science lecture, april 1, 2015; video avail-
able.

references

459

lockhart, r., taylor, j., tibshirani, r., and tibshirani, r. 2014. a signi   cance test for
the lasso. annals of statistics, 42(2), 413   468. with discussion and a rejoinder by
the authors.

lynden-bell, d. 1971. a method for allowing for known observational selection in
small samples applied to 3cr quasars. mon. not. roy. astron. soc., 155(1), 95   18.

mallows, c. l. 1973. some comments on cp. technometrics, 15(4), 661   675.
mantel, n., and haenszel, w. 1959. statistical aspects of the analysis of data from

retrospective studies of disease. j. natl. cancer inst., 22(4), 719   748.

mardia, k. v., kent, j. t., and bibby, j. m. 1979. multivariate analysis. academic

press.

mccullagh, p., and nelder, j. 1983. generalized linear models. monographs on statis-

tics and applied id203. chapman & hall.

mccullagh, p., and nelder, j. 1989. generalized linear models. second edn. mono-

graphs on statistics and applied id203. chapman & hall.

metropolis, n., rosenbluth, a. w., rosenbluth, m. n., teller, a. h., and teller, e.
1953. equation of state calculations by fast computing machines. j. chem. phys.,
21(6), 1087   1092.

miller, jr, r. g. 1964. a trustworthy jackknife. ann. math. statist, 35, 1594   1605.
miller, jr, r. g. 1981. simultaneous statistical id136. second edn. springer series

in statistics. new york: springer-verlag.

nesterov, y. 2013. gradient methods for minimizing composite functions. mathemati-

cal programming, 140(1), 125   161.

neyman, j. 1937. outline of a theory of statistical estimation based on the classical

theory of id203. phil. trans. roy. soc., 236(767), 333   380.

neyman, j. 1977. frequentist id203 and frequentist statistics. synthese, 36(1),

97   131.

neyman, j., and pearson, e. s. 1933. on the problem of the most ef   cient tests of

statistical hypotheses. phil. trans. roy. soc. a, 231(694-706), 289   337.

ng, a. 2015. neural networks. http://deeplearning.stanford.edu/

wiki/index.php/neural_networks. lecture notes.

ngiam, j., chen, z., chia, d., koh, p. w., le, q. v., and ng, a. 2010. tiled convo-
lutional neural networks. pages 1279   1287 of: lafferty, j., williams, c., shawe-
taylor, j., zemel, r., and culotta, a. (eds), advances in neural information pro-
cessing systems 23. curran associates, inc.

o   hagan, a. 1995. fractional bayes factors for model comparison. j. roy. statist. soc.

ser. b, 57(1), 99   138. with discussion and a reply by the author.

park, t., and casella, g. 2008. the bayesian lasso. j. amer. statist. assoc., 103(482),

681   686.

pearson, k. 1900. on the criterion that a given system of deviations from the probable in
the case of a correlated system of variables is such that it can be reasonably supposed
to have arisen from random sampling. phil. mag., 50(302), 157   175.

pritchard, j., stephens, m., and donnelly, p. 2000. id136 of population structure

using multilocus genotype data. genetics, 155(june), 945   959.

quenouille, m. h. 1956. notes on bias in estimation. biometrika, 43, 353   360.
r core team. 2015. r: a language and environment for statistical computing. r

foundation for statistical computing, vienna, austria.

460

references

ridgeway, g. 2005. generalized boosted models: a guide to the gbm package. avail-

able online.

ridgeway, g., and macdonald, j. m. 2009. doubly robust internal benchmarking and
false discovery rates for detecting racial bias in police stops. j. amer. statist. assoc.,
104(486), 661   668.

ripley, b. d. 1996. pattern recognition and neural networks. cambridge university

press.

robbins, h. 1956. an empirical bayes approach to statistics. pages 157   163 of: proc.
3rd berkeley symposium on mathematical statistics and id203, vol. i. univer-
sity of california press.

rosset, s., zhu, j., and hastie, t. 2004. margin maximizing id168s. in: thrun,
s., saul, l., and sch  olkopf, b. (eds), advances in neural information processing
systems 16. mit press.

rubin, d. b. 1981. the bayesian bootstrap. ann. statist., 9(1), 130   134.
savage, l. j. 1954. the foundations of statistics. john wiley & sons; chapman &

hill.

schapire, r. 1990. the strength of weak learnability. machine learning, 5(2), 197   

227.

schapire, r., and freund, y. 2012. boosting: foundations and algorithms. mit press.
scheff  e, h. 1953. a method for judging all contrasts in the analysis of variance.

biometrika, 40(1-2), 87   110.

sch  olkopf, b., and smola, a. 2001. learning with kernels: support vector ma-
chines, id173, optimization, and beyond (adaptive computation and ma-
chine learning). mit press.

schwarz, g. 1978. estimating the dimension of a model. ann. statist., 6(2), 461   464.
senn, s. 2008. a note concerning a selection    paradox    of dawid   s. amer. statist.,

62(3), 206   210.

soric, b. 1989. statistical    discoveries    and effect-size estimation. j. amer. statist.

assoc., 84(406), 608   610.

spevack, m. 1968. a complete and systematic concordance to the works of shake-

speare. vol. 1   6. georg olms verlag.

srivastava, n., hinton, g., krizhevsky, a., sutskever, i., and salakhutdinov, r. 2014.
dropout: a simple way to prevent neural networks from over   tting. j. of machine
learning res., 15, 1929   1958.

stefanski, l., and carroll, r. j. 1990. deconvoluting kernel density estimators. statis-

tics, 21(2), 169   184.

stein, c. 1956. inadmissibility of the usual estimator for the mean of a multivariate nor-
mal distribution. pages 197   206 of: proc. 3rd berkeley symposium on mathematical
statististics and id203, vol. i. university of california press.

stein, c. 1981. estimation of the mean of a multivariate normal distribution. ann.

statist., 9(6), 1135   1151.

stein, c. 1985. on the coverage id203 of con   dence sets based on a prior distribu-
tion. pages 485   514 of: sequential methods in statistics. banach center publication,
vol. 16. pwn, warsaw.

stigler, s. m. 2006. how ronald fisher became a mathematical statistician. math. sci.

hum. math. soc. sci., 176(176), 23   30.

references

461

stone, m. 1974. cross-validatory choice and assessment of statistical predictions. j.

roy. statist. soc. b, 36, 111   147. with discussion and a reply by the author.

storey, j. d., taylor, j., and siegmund, d. 2004. strong control, conservative point
estimation and simultaneous conservative consistency of false discovery rates: a
uni   ed approach. j. roy. statist. soc. b, 66(1), 187   205.

tanner, m. a., and wong, w. h. 1987. the calculation of posterior distributions by
data augmentation. j. amer. statist. assoc., 82(398), 528   550. with discussion and
a reply by the authors.

taylor, j., loftus, j., and tibshirani, r. 2015. tests in adaptive regression via the kac-

rice formula. annals of statistics, 44(2), 743   770.

thisted, r., and efron, b. 1987. did shakespeare write a newly-discovered poem?

biometrika, 74(3), 445   455.

tibshirani, r. 1989. noninformative priors for one parameter of many. biometrika,

76(3), 604   608.

tibshirani, r. 1996. regression shrinkage and selection via the lasso. j. roy. statist.

soc. b, 58(1), 267   288.

tibshirani, r. 2006. a simple method for assessing sample sizes in microarray experi-

ments. bmc bioinformatics, 7(mar), 106.

tibshirani, r., bien, j., friedman, j., hastie, t., simon, n., taylor, j., and tibshirani, r.
2012. strong rules for discarding predictors in lasso-type problems. j. roy. statist.
soc. b, 74.

tibshirani, r., tibshirani, r., taylor, j., loftus, j., and reid, s. 2016. selectiveinfer-

ence: tools for post-selection id136. r package version 1.1.3.

tukey, j. w. 1958.    bias and con   dence in not-quite large samples    in abstracts of

papers. ann. math. statist., 29(2), 614.

tukey, j. w. 1960. a survey of sampling from contaminated distributions. pages
448   485 of: contributions to id203 and statistics: essays in honor of harold
hotelling (i. olkin, et. al, ed.). stanford university press.

tukey, j. w. 1962. the future of data analysis. ann. math. statist., 33, 1   67.
tukey, j. w. 1977. exploratory data analysis. behavioral science series. addison-

wesley.

van de geer, s., b  uhlmann, p., ritov, y., and dezeure, r. 2014. on asymptotically op-
timal con   dence regions and tests for high-dimensional models. annals of statistics,
42(3), 1166   1202.

vapnik, v. 1996. the nature of statistical learning theory. springer.
wager, s., wang, s., and liang, p. s. 2013. dropout training as adaptive id173.
pages 351   359 of: burges, c., bottou, l., welling, m., ghahramani, z., and wein-
berger, k. (eds), advances in neural information processing systems 26. curran
associates, inc.

wager, s., hastie, t., and efron, b. 2014. con   dence intervals for id79s: the
jacknife and the in   ntesimal jacknife. j. of machine learning res., 15, 1625   1651.

wahba, g. 1990. spline models for observational data. siam.
wahba, g., lin, y., and zhang, h. 2000. gacv for support vector machines. pages
297   311 of: smola, a., bartlett, p., sch  olkopf, b., and schuurmans, d. (eds), ad-
vances in large margin classi   ers. mit press.

wald, a. 1950. statistical decision functions. john wiley & sons; chapman & hall.

462

references

wedderburn, r. w. m. 1974. quasi-likelihood functions, generalized linear models,

and the gauss   id77. biometrika, 61(3), 439   447.

welch, b. l., and peers, h. w. 1963. on formulae for con   dence points based on

integrals of weighted likelihoods. j. roy. statist. soc. b, 25, 318   329.

westfall, p., and young, s. 1993. resampling-based multiple testing: examples and
methods for p-value adjustment. wiley series in id203 and statistics. wiley-
interscience.

xie, m., and singh, k. 2013. con   dence distribution, the frequentist distribution esti-

mator of a parameter: a review. int. statist. rev., 81(1), 3   39. with discussion.

ye, j. 1998. on measuring and correcting the effects of data mining and model selec-

tion. j. amer. statist. assoc., 93(441), 120   131.

zhang, c.-h., and zhang, s. 2014. con   dence intervals for low-dimensional parame-

ters with high-dimensional data. j. roy. statist. soc. b, 76(1), 217   242.

zou, h., hastie, t., and tibshirani, r. 2007. on the    degrees of freedom    of the lasso.

ann. statist., 35(5), 2173   2192.

author index

abu-mostafa, y. 372, 453
achanta, r. 372, 453
akaike, h. 231, 453
anderson, t. w. 69, 453
bastien, f. 374, 453
becker, r. 128, 453
bellhouse, d. r. 36, 453
bengio, y. 372, 374, 453, 458
benjamini, y. 294, 418, 450, 453
berger, j. o. 36, 261, 453
bergeron, a. 374, 453
bergstra, j. 374, 453
berk, r. 323, 419, 453
berkson, j. 128, 454
bernardo, j. m. 261, 454
bibby, j. m. 37, 69, 459
bien, j. 322, 461
birch, m. w. 128, 454
bishop, c. 371, 454
bloomston, m. 89, 457
boos, d. d. 180, 454
boser, b. 390, 454
bouchard, n. 374, 453
breiman, l. 129, 348, 451, 454
breuleux, o. 374, 453
brown, l. 323, 419, 453
b  uhlmann, p. 323, 461
buja, a. 323, 419, 453
carlin, b. p. 89, 261, 454
carroll, r. j. 445, 460
casella, g. 420, 459
chambers, j. 128, 453
chen, z. 372, 459
chia, d. 372, 459
cho, c. s. 89, 457
chopin, n. 261, 457
cleveland, w. s. 11, 454
cohen, a. 393, 458

corbet, a. 456
cortes, c. 372, 458
courville, a. 372, 453
cover, t. m. 52, 454
cox, d. r. 52, 128, 152, 153, 262, 454
crowley, j. 153, 454
cudkowicz, m. 349, 458
de finetti, b. 261, 454
dembo, a. 52, 454
dempster, a. p. 152, 454
desjardins, g. 374, 453
dezeure, r. 323, 461
diaconis, p. 262, 454
diciccio, t. 204, 455
donnelly, p. 261, 459
donoho, d. l. 447, 455
edwards, a. w. f. 37, 455
efron, b. 11, 20, 37, 51, 52, 69, 89, 90,

105, 106, 130, 152, 154, 177   179,
204, 206, 207, 231, 232, 262, 263,
267, 294   297, 322, 323, 348, 417,
419, 420, 444, 445, 455   457, 461

ertaylan, g. 349, 458
eskin, e. 393, 458
fang, l. 349, 458
feldman, d. 417, 456
fields, r. c. 89, 457
finney, d. j. 262, 456
fisher, r. a. 184, 204, 449, 456
fithian, w. 323, 456, 458
freund, y. 348, 451, 456, 460
friedman, j. 128, 129, 231, 321, 322,
348   350, 371, 454, 456, 457, 461

geisser, s. 231, 457
gerber, m. 261, 457
gholami, s. 89, 457
good, i. 88, 457

463

464

author index

goodfellow, i. j. 374, 453
gous, a. 262, 263, 456
grosse-wentrup, m. 349, 458
guyon, i. 390, 454
haenszel, w. 152, 459
hall, p. 204, 457
hampel, f. r. 179, 457
hardiman, o. 349, 458
harford, t. 232, 457
hastie, t. 128, 231, 321   323, 348   350,

371, 372, 392, 393, 453, 456   458,
460   462

hawe, j. 349, 458
hinkley, d. v. 52, 69, 454, 456
hinton, g. 372, 458, 460
hochberg, y. 294, 418, 450, 453
hoeffding, w. 129, 296, 457
hoerl, a. e. 105, 457
hothorn, t. 349, 458
huber, p. j. 179, 457
jaeckel, l. a. 178, 458
james, w. 104, 458
jansen, l. 323, 458
janson, l. 89, 457
javanmard, a. 323, 458
jaynes, e. 261, 458
jeffreys, h. 261, 458
jin, l. x. 89, 457
johnson, n. l. 36, 458
johnstone, i. 231, 322, 323, 456
kaplan, e. l. 152, 458
kass, r. e. 261   263, 458
kennard, r. w. 105, 457
kent, j. t. 37, 69, 459
koh, p. w. 372, 459
kotz, s. 36, 458
krizhevsky, a. 372, 460
kuffner, r. 349, 458
laird, n. m. 152, 454
lamblin, p. 374, 453
le, q. v. 372, 459
lecun, y. 372, 458
lee, j. 323, 458
lehmann, e. l. 52, 458
leitner, m. l. 349, 458
leslie, c. 393, 458
levine, e. a. 89, 457
li, g. 349, 458
liang, p. s. 372, 373, 461
liaw, a. 348, 458

liberman, m. 447, 458
lin, y. 391, 461
loader, c. 393, 457
lockhart, r. 323, 459
loftus, j. 323, 461
louis, t. a. 89, 261, 454
lynden-bell, d. 150, 459
macdonald, j. m. 294, 460
macke, j. h. 349, 458
mackey, l. 349, 458
maithel, s. k. 89, 457
mallows, c. l. 231, 459
mantel, n. 152, 459
mardia, k. v. 37, 69, 459
mccullagh, p. 128, 322, 459
meier, p. 152, 458
metropolis, n. 261, 459
meyer, t. 349, 458
miller, r. g., jr 177, 294, 418, 459
montanari, a. 323, 458
morris, c. 105, 456
nelder, j. 128, 322, 459
nesterov, y. 372, 459
neyman, j. 20, 204, 449, 459
ng, a. 372, 459
ngiam, j. 372, 459
noble, w. s. 393, 458
norel, r. 349, 458
norton, j. a. 89, 457
o   hagan, a. 261, 459
olshen, r. a. 129, 348, 454
park, t. 420, 459
pascanu, r. 374, 453
pawlik, t. m. 89, 457
pearson, e. s. 449, 459
pearson, k. 449, 459
peers, h. w. 37, 207, 261, 462
pericchi, l. r. 261, 453
petrosian, v. 130, 456
popescu, b. 348, 457
poultsides, g. a. 89, 457
pritchard, j. 261, 459
quenouille, m. h. 177, 459
r core team 128, 459
raftery, a. e. 262, 458
reid, n. 262, 454
reid, s. 323, 461
ridgeway, g. 294, 348, 460
ripley, b. d. 371, 460
ritov, y. 323, 461

author index

465

robbins, h. 88, 104, 420, 460
ronchetti, e. m. 179, 457
rosenbluth, a. w. 261, 459
rosenbluth, m. n. 261, 459
rosset, s. 392, 460
rousseeuw, p. j. 179, 457
rubin, d. b. 152, 179, 454, 460
salakhutdinov, r. 372, 460
savage, l. j. 261, 460
schapire, r. 348, 451, 456, 460
scheff  e, h. 417, 460
schmidt, c. 89, 457
schoenfeld, d. 349, 458
sch  olkopf, b. 390, 460
schwarz, g. 263, 460
senn, s. 37, 460
ser   ing, r. j. 180, 454
sherman, a. 349, 458
siegmund, d. 294, 461
simon, n. 322, 461
singh, k. 51, 207, 462
smola, a. 390, 460
soric, b. 294, 460
spevack, m. 89, 460
spolverato, g. 89, 457
squires, i., malcolm 89, 457
srivastava, n. 372, 460
stahel, w. a. 179, 457
stefanski, l. 445, 460
stein, c. 104, 106, 178, 232, 261, 456,

458, 460

stephens, m. 261, 459
stigler, s. m. 447, 460
stolovitzky, g. 349, 458
stone, c. j. 129, 348, 454
stone, m. 231, 461
storey, j. d. 294, 461
sun, d. 323, 456, 458
sun, y. 323, 458
sutskever, i. 372, 460
tanner, m. a. 263, 461
taylor, j. 294, 322, 323, 456, 458, 459,

461

teller, a. h. 261, 459
teller, e. 261, 459
thisted, r. 89, 456, 461
thomas, j. a. 52, 454

tibshirani, r. 128, 179, 207, 231, 232,

261, 321   323, 348   350, 371, 392,
420, 450, 456, 457, 459, 461, 462

toulmin, g. 88, 457
tran, l. 349, 458
tran, t. b. 89, 457
tukey, j. w. 11, 177, 179, 450, 461
turian, j. 374, 453
van de geer, s. 323, 461
van ligtenberg, j. 349, 458
vapnik, v. 390, 454, 461
vaughan, r. 349, 458
vincent, p. 372, 453
votanopoulos, k. i. 89, 457
wager, s. 348, 372, 373, 461
wahba, g. 391, 392, 461
wainwright, m. 321   323, 457
wald, a. 450, 461
wang, l. 349, 458
wang, s. 372, 373, 461
warde-farley, d. 374, 453
wasserman, l. 261, 263, 458
weber, s. m. 89, 457
wedderburn, r. w. m. 128, 462
welch, b. l. 37, 207, 261, 462
westfall, p. 294, 418, 462
weston, j. 393, 458
wiener, m. 348, 458
wilks, a. 128, 453
williams, c. 456
wong, w. h. 263, 461
worhunsky, d. j. 89, 457
xie, m. 51, 207, 462
ye, j. 231, 462
yekutieli, d. 418, 453
ylvisaker, d. 262, 454
young, s. 294, 418, 462
zach, n. 349, 458
zhang, c.-h. 323, 462
zhang, h. 391, 461
zhang, k. 323, 419, 453
zhang, s. 323, 462
zhao, l. 323, 419, 453
zhu, j. 392, 460
zou, h. 231, 322, 462

subject index

abc method, 194, 204
accelerated id119, 359
acceleration, 192, 206
accuracy, 14

after model selection, 402   408

accurate but not correct, 402
activation function, 355, 361
leaky recti   ed linear, 362
recti   ed linear, 362
relu, 362
tanh, 362

active set, 302, 308
adaboost algorithm, 341   345, 447
adaboost.m1, 342
adaptation, 404
adaptive estimator, 404
adaptive rate control, 359
additive model, 324

adaptive, 346

adjusted compliance, 404
admixture modeling, 256   260
aic, see akaike information criterion
akaike information criterion, 208, 218,

226, 231, 246, 267

allele frequency, 257
american statistical association, 449
ancillary, 44, 46, 139
apparent error, 211, 213, 219
arcsin transformation, 95
arthur eddington, 447
asymptotics, xvi, 119, 120
autoencoder, 362   364
back   tting, 346
id26, 356   358
bagged estimate, 404, 406
id112, 226, 327, 406, 408, 419
balance equations, 256
barycentric plot, 259

basis expansion, 375
bayes

deconvolution, 421   424
factor, 244, 285
false-discovery rate, 279
posterior distribution, 254
posterior id203, 280
shrinkage, 212
t-statistic, 255
theorem, 22

id136, 22   37
information criterion, 246
lasso, 420
lasso prior, 415
model selection, 244
trees, 349

bayes   frequentist estimation, 412   417
bayesian

bayesian information criterion, 267
bayesianism, 3
bca

accuracy and correctness, 205
con   dence density, 202, 207, 237, 242,

243

interval, 202
method, 192

benjamini and hochberg, 276
benjamini   yekutieli, 400
bernoulli, 338
best-approximating linear subspace, 363
best-subset selection, 299
beta

distribution, 54, 239

bhq, 276
bias, 14, 352
bias-corrected, 330

and accelerated, see bca method
con   dence intervals, 190   191
percentile method, 190

467

468

subject index

bias-correction value, 191
biased estimation, 321
bic, see bayesian information criterion
big-data era, xv, 446
binomial, 109, 117

coherent behavior, 261
common task framework, 447
compliance, 394
computational bottleneck, 128
computer age, xv
computer-intensive, 127

distribution, 54, 117, 239
log-likelihood, 380
standard deviation, 111

bioassay, 109
biometrika, 449
bivariate normal, 182
bonferroni bound, 273
boole   s inequality, 274
boosting, 320, 324, 333   350
bootstrap, 7, 155   180, 266, 327

baron munchausen, 177
bayesian, 168, 179
cdf, 187
con   dence intervals, 181   207
ideal estimate, 160, 179
jackknife after, 179
moving blocks, 168
multisample, 167
nonparametric, 159   162, 217
out of bootstrap, 232
packages, 178
parametric, 169   173, 223, 312, 429
probabilities, 164
replication, 159
sample, 159
sample size, 179, 205
smoothing, 226, 404, 406
t, 196
t intervals, 195   198

bound form, 305
bounding hyperplane, 398
burn-in, 260
byq algorithm, 400
causal id136, xvi
censored

data, 134   139
not truncated, 150

centering, 107
central limit theorem, 119
chain rule for differentiation, 356
classic statistical id136, 3   73
classi   cation, 124, 209
classi   cation accuracy, 375
classi   cation error, 209
classi   cation tree, 348
cochran   mantel   haenszel test, 131

id76, 304, 308, 321, 323,

conditional id136, 45   48, 139, 142

id136, 189, 267
statistics, 159
conditional, 58
conditional distribution

full, 253

lasso, 318

conditionality, 44
con   dence

density, 200, 201, 235
distribution, 198   203
interval, 17
region, 397

conjugate, 253, 259

prior, 238
priors, 237

377

   lters, 368
layer, 367

convolution, 422, 445

corrected differences, 411
correlation effects, 295
covariance

formula, 312
penalty, 218   226

coverage, 181
coverage level, 274
coverage matching prior, 236   237
cox model, see proportional hazards

model

395, 403

cp, 217, 218, 221, 231, 267, 300, 394,

cram  er   rao lower bound, 44
credible interval, 198, 417
cross-validation, 208   232, 267, 335

10-fold, 326
estimate, 214
k-fold, 300
leave one out, 214, 231

cumulant generating function, 67
curse of dimensionality, 387
dark energy, 210, 231
data analysis, 450
data science, xvii, 450, 451

subject index

469

data sets

als, 334
aml, see leukemia
baseball, 94
butterfly, 78
cell infusion, 112
cholesterol, 395, 402, 403
cifar-100, 365
diabetes, 98, 209, 396, 414, 416
dose-response, 109
galaxy, 120
handwritten digits

(mnist), 353

head/neck cancer, 135
human ancestry, 257
insurance, 131
kidney function, 157, 222
leukemia, 176, 196, 377
ncog, 134
nodes, 424, 427, 430, 438, 439, 442
pediatric cancer, 143
police, 287
prostate, 249, 272, 289, 408, 410,

423, 434   436

protein classification, 385
shakespear, 81
spam, 113, 127, 209, 215, 300   302,

student score, 173, 181, 186,

supernova, 210, 212, 217, 221, 224
vasoconstriction, 240, 241,

325

202, 203

246, 252

data snooping, 398
de finetti, b., 35, 36, 251, 450
de finetti   savage school, 251
debias, 318
decision rule, 275
decision theory, xvi
deconvolution, 422
deep learning, 351   374
de   nitional bias, 431
degrees of freedom, 221, 231, 312   313
delta method, 15, 414, 420
deviance, 112, 118, 119, 301
deviance residual, 123
diffusion tensor imaging, 291
direct evidence, 105, 109, 421
directional derivatives, 158
distribution

beta, 54, 239

binomial, 54, 117, 239
gamma, 54, 117, 239
gaussian, 54
normal, 54, 117, 239
poisson, 54, 117, 239

divide-and-conquer algorithm, 325
document retrieval, 298
dose   response, 109
dropout learning, 368, 372
dti, see diffusion tensor imaging
early computer-age, xvi, 75   268
early stopping, 362
effect size, 272, 288, 399, 408
ef   ciency, 44, 120
eigenratio, 162, 173, 194
elastic net, 316, 356
ellipsoid, 398
em algorithm, 146   150

missing data, 266

empirical bayes, 75   90, 93, 264
estimation strategies, 421   445
information, 443
large-scale testing, 278   282

empirical null, 286

estimation, 289   290
maximum-likelihood estimation, 296
empirical id203 distribution, 160
ensemble, 324, 334
ephemeral predictors, 227
epoch, 359
equilibrium distribution, 256
equivariant, 106
exact id136s, 119
expectation parameter, 118
experimental design, xvi
exponential family, 53   72, 225

p-parameter, 117, 413, 424
curved, 69
one-parameter, 116

f distribution, 397
f tests, 394
f -modeling, 424, 434, 440   444
fake-data principle, 148, 154, 266
false coverage
control, 399

false discovery, 275

control, 399
control theorem, 294
proportion, 275
rate, 271   297
false-discovery

470

subject index

rate, 9

family of id203 densities, 64
family-wise error rate, 274
fdr, see false-discovery rate
feed-forward, 351
fiducial, 267

constructions, 199
density, 200
id136, 51

fisher, 79
fisher information, 29, 41, 59

bound, 41
matrix, 236, 427

fisherian correctness, 205
fisherian id136, 38   52, 235
fixed-knot regression splines, 345
flat prior, 235
forward pass, 357
forward-stagewise, 346

   tting, 320

forward-stepwise, 298   303

computations, 322
id28, 322
regression, 300

frailties, 439
frequentism, 3, 12   22, 30, 35, 51, 146,

fourier

method, 440
transform, 440

267

frequentist, 413

id136, 12   21
strongly, 218

fully connected layer, 368
functional id119, 340
fwer, see family-wise error rate
g-modeling, 423
gamma, 117

distribution, 54, 117, 239

general estimating equations, xvi
general information criterion, 248
generalized

linear mixed model, 437   440
linear model, 108   123, 266
ridge problem, 384

genome, 257
genome-wide association studies, 451
id150, 251   260, 267, 414
glm, see generalized linear model
glmm, see generalized linear mixed

model

google    u trends, 230, 232
gradient boosting, 338   341
id119, 354, 356
gram matrix, 381
gram-schmidt orthogonalization, 322
graphical lasso, 321
id114, xvi
greenwood   s formula, 137, 151
group lasso, 321
hadamard product, 358
handwritten digits, 353
haplotype estimation, 261
hazard rate, 131   134

parametric estimate, 138
hidden layer, 351, 352, 354
high-order interaction, 325
hinge loss, 380
hints

learning with, 369

hoeffding   s lemma, 118
holm   s procedure, 274, 294
homotopy path, 306
hypergeometric distribution, 141, 152
imputation, 149
inadmissible, 93
indirect evidence, 102, 109, 266, 290,

421, 440, 443

inductive id136, 120
id136, 3
id136 after model selection, 394   420
inferential triangle, 446
in   nitesimal forward stagewise, 320
in   nitesimal jackknife, 167

estimate, 406
standard deviations, 407
in   uence function, 174   177

empirical, 175

in   uenza outbreaks, 230
input distortion, 369, 373
input layer, 355
insample error, 219
inverse chi-squared, 262
inverse gamma, 239, 262
irls, see iteratively reweighted least

iteratively reweighted least squares, 301,

squares

322

jackknife, 155   180, 266, 330

estimate of standard error, 156
standard error, 178

subject index

471

estimation, 91   107, 282, 305, 410
ridge regression, 265

james   stein

jeffreys

prior, 237

jeffreys   

prior, 28   30, 36, 198, 203, 236
prior, multiparameter, 242
scale, 285

jumpiness of estimator, 405
kaplan   meier, 131, 134, 136, 137

estimate, 134   139, 266

karush   kuhn   tucker optimality

conditions, 308

kernel

function, 382
id28, 386
method, 375   393
id166, 386
trick, 375, 381   383, 392

kernel smoothing, 375, 387   390
knots, 309
kullback   leibler distance, 112
`1 id173, 321
lagrange

dual, 381
form, 305, 308
multiplier, 391

large-scale

hypothesis testing, 271   297
testing, 272   275

large-scale prediction algorithms, 446
lasso, 101, 210, 217, 222, 231, 298   323

modi   cation, 312
path, 312
penalty, 356

learning from the experience of others,

104, 280, 290, 421, 443

learning rate, 358
least squares, 98, 112, 299
least-angle regression, 309   313, 321
least-favorable family, 262
left-truncated, 150
lehmann alternative, 294
life table, 131   134
likelihood function, 38

concavity, 118

limited-translation rule, 293
lindsey   s method, 68, 171
linearly separable, 375
link function, 237, 340

local false-discovery rate, 280, 282   286
local regression, 387   390, 393
local translation invariance, 368
log polynomial regression, 410
log-rank statistic, 152
log-rank test, 131, 139   142, 152, 266
logic of inductive id136, 185, 205
id28, 109   115, 139, 214,

299, 375

multiclass, 355

logit, 109
loss plus penalty, 385
machine learning, 208, 267, 375
mallows    cp, see cp
mantel   haenzel test, 131
map, 101
map estimate, 420
margin, 376
marginal density, 409, 422
id115, see mcmc
markov chain theory, 256
martingale theory, 294
matching prior, 198, 200
matlab, 271
matrix completion, 321
max pool layer, 366
maximized a-posteriori id203, see

map

maximum likelihood, 299
id113, 38   52
mcmc, 234, 251   260, 267, 414
mcnemar test, 341
mean absolute deviation, 447
median unbiased, 190
memory-based methods, 390
meter reader, 30
meter-reader, 37
microarrays, 227, 271
minitab, 271
misclassi   cation error, 302
missing data, 146   150, 325

em algorithm, 266

missing-species problem, 78   84
mixed features, 325
mixture density, 279
model averaging, 408
model selection, 243   250, 398

criteria, 250

monotone lasso, 320
monotonic increasing function, 184
multinomial

472

subject index

distribution, 61   64, 425
from poisson, 63
multiple testing, 272
multivariate

analysis, 119
normal, 55   59

id165, 385
n-p complete, 299
nadaraya   watson estimator, 388
natural parameter, 116
natural spline model, 430
ncog, see northern california

oncology group

nested models, 299
neural information processing systems,

neural network, 351   374

adaptive tuning, 360
number of hidden layers, 361

neurons, 351
neyman   s construction, 181, 183, 193,

372

204

neyman   pearson, 18, 19, 293
non-null, 272
noncentral chi-square variable, 207
nonlinear transformations, 375
nonlinearity, 361
nonparameteric

regression, 375

nonparametric, 53, 127

id113, 150, 160
percentile interval, 187

normal

correlation coef   cient, 182
distribution, 54, 117, 239
multivariate, 55   59
regression model, 414
theory, 119

134

nuclear norm, 321
nuisance parameters, 142, 199
objective bayes, 36, 267

id136, 233   263
intervals, 198   203
prior distribution, 234   237

northern california oncology group,

ocr, see id42
offset, 349
ols

algorithm, 403
estimation, 395

predictor, 221

one-sample nonparametric bootstrap,

161

one-sample problems, 156
oob, see out-of-bag error
id42, 353
optimal separating hyperplane, 375   377
optimal-margin classi   er, 376
optimality, 18
oracle, 275
orthogonal parameters, 262
out-of-bag error, 232, 327, 329   330
out-the-box learning algorithm, 324
output layer, 352
outsample error, 219
over parametrized, 298
over   tting, 304
overshrinks, 97
p-value, 9, 282
package/program
gbm, 335, 348
glmnet, 214, 315, 322, 348
h2o, 372
lars, 312, 320
liblinear, 381
locfdr, 289   291, 296, 437
lowess, 6, 222, 388
nlm, 428
randomforest, 327, 348
selectiveid136, 323

pairwise inner products, 381
parameter space, 22, 29, 54, 62, 66
parametric bootstrap, 242
parametric family, 169
parametric models, 53   72
partial likelihood, 142, 145, 151, 153,

266, 341

partial id28, 152
partial residual, 346
path-wise coordinate descent, 314
penalized

least squares, 101
likelihood, 101, 428
id28, 356
maximum likelihood, 226, 307

percentile method, 185   190

central interval, 187

permutation null, 289, 296
permutation test, 49   51
phylogenetic tree, 261
piecewise

subject index

473

linear, 313
nonlinear, 314

pivotal

argument, 183
quantity, 196, 198
statistic, 16
.632 rule, 232
poisson, 117, 193

distribution, 54, 117, 239
regression, 120   123, 249, 284, 295,

435

poisson regression, 171
polynomial kernel, 382, 392
positive-de   nite function, 382
post-selection id136, 317, 394   420
posterior density, 235, 238
posterior distribution, 416
postwar era, 264
prediction

errors, 216
rule, 208   213

predictors, 124, 208
principal components, 362
prior distribution, 234   243

beta, 239
conjugate, 237   243
coverage matching, 236   237
gamma, 239
normal, 239
objective bayes, 234
proper, 239

probit analysis, 112, 120, 128
propagation of errors, 420
proper prior, 239
proportional hazards model, 131,

142   146, 266

proximal-newton, 315
q-value, 280
qq plot, 287
qr decomposition, 311, 322
quadratic program, 377
quasilikelihood, 266
quetelet, adolphe, 449
r, 178, 271
id79, 209, 229, 324   332,

sampling variance, 330
standard error, 330   331

randomization, 49   51
rao   blackwell, 227, 231
rate annealing, 360
recti   ed linear, 359
regression, 109
regression rule, 219
regression to the mean, 33
regression tree, 124   128, 266, 348
id173, 101, 173, 298, 379, 428

path, 306

relevance, 290   293
relevance function, 293
relevance theory, 297
reproducing kernel hilbert space, 375,

384, 392

resampling, 162
plans, 162   169
simplex, 164, 169
vector, 163

residual deviance, 283
response, 124, 208
ridge regression, 97   102, 209, 304, 327,

332, 372, 381
james   stein, 265

ridge id173, 368
id28, 392

right-censored, 150
risk set, 144
rkhs, see reproducing-kernel hilbert

space

robbins    formula, 75, 77, 422, 440
robust estimation, 174   177
royal statistical society, 449
s language, 271
sample correlation coef   cient, 182
sample size coherency, 248
sampling distribution, 312
sas, 271
savage, l. j., 35, 36, 51, 199, 233, 251,

450

scale of evidence

fisher, 245
jeffreys, 245

scheff  e

adaptive nearest-neighbor estimator,

leave-one-out cross-validated error,

347   350

328

329

monte carlo variance, 330

interval, 396, 397, 417
theorem, 398

score function, 42
score tests, 301
second-order accuracy, 192   195

474

subject index

selection bias, 33, 408   411
self-consistent, 149
separating hyperplane, 375

geometry, 390

seven-league boots, 448
shrinkage, 115, 316, 338

estimator, 59, 91, 94, 96, 410

sigmoid function, 352
signi   cance level, 274
simulation, 155   207
simultaneous con   dence intervals,

395   399

simultaneous id136, 294, 418
sinc kernel, 440, 445
single-nucleotide polymorphism, see

snp

smoothing operator, 346
snp, 257
soft margin classi   er, 378   379
soft-threshold, 315
softmax, 355
spam    lter, 115
sparse

models, 298   323
principal components, 321

sparse matrix, 316
sparsity, 321
split-variable randomization, 327, 332
spss, 271
squared error, 209
standard candles, 210, 231
standard error, 155

external, 408
internal, 408

standard interval, 181
stein   s

paradox, 105
unbiased risk estimate, 218, 231

stepwise selection, 299
stochastic id119, 358
stopping rule, 32, 413
stopping rules, 243
string kernel, 385, 386
strong rules, 316, 322
structure, 261
structure matrix, 97, 424
student t

con   dence interval, 396
distribution, 196, 272
statistic, 449

two-sample, 8, 272

studentized range, 418
subgradient

condition, 308
equation, 312, 315

subjective prior distribution, 233
subjective id203, 233
subjectivism, 35, 233, 243, 261
suf   ciency, 44
suf   cient

statistic, 66, 112, 116
vector, 66

supervised learning, 352
support

set, 377, 378
vector, 377
vector classi   ers, 381
vector machine, 319, 375   393

sure, see stein   s unbiased risk estimate
survival analysis, 131   154, 266
survival curve, 137, 279
id166

lagrange dual, 391
lagrange primal, 391
id168, 391

taylor series, 157, 420
theoretical null, 286
tied weights, 368
time series, xvi
training set, 208
transformation invariance, 183   185, 236
transient episodes, 228
trees

averaging, 348
best-   rst, 333
depth, 335
terminal node, 126

tricube kernel, 388, 389
trimmed mean, 175
triple-point, xv
true error rate, 210
true-discovery rates, 286
tukey, j. w., 418, 450
tukey, j. w., 418
tweedie   s formula, 409, 419, 440
twenty-   rst-century methods, xvi,

271   446

two-groups model, 278
uncorrected differences, 411
uninformative prior, 28, 169, 233, 261
universal approximator, 351
unlabeled images, 365

subject index

475

unobserved covariates, 288
validation set, 213
vapnik, v., 390
variable-importance plot, 331   332, 336
variance, 14
variance reduction, 324
velocity vector, 360
voting, 333
warm starts, 314, 363
weak learner, 333, 342
weight

decay, 356
id173, 361, 362
sharing, 352, 367

weighted exponential loss, 345
weighted least squares, 315
weighted majority vote, 341
weights, 352
wide data, 298, 321
wilks    likelihood ratio statistic, 246
winner   s curse, 33, 408
winsorized mean, 175
working response, 315, 322
z.  /, 188
zero set, 296

