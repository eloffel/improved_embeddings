   #[1]analytics vidhya    feed [2]analytics vidhya    comments feed
   [3]analytics vidhya    flashtext     a library faster than regular
   expressions for nlp tasks comments feed [4]alternate [5]alternate

   iframe: [6]//googletagmanager.com/ns.html?id=gtm-mpsm42v

   [7]new certified ai & ml blackbelt program (beginner to master) -
   enroll today @ launch offer (coupon: blackbelt10)

   (button) search______________
     * [8]learn
          + [9]blog archive
               o [10]machine learning
               o [11]deep learning
               o [12]career
               o [13]stories
          + [14]datahack radio
          + [15]infographics
          + [16]training
          + [17]learning paths
               o [18]sas business analyst
               o [19]learn data science on r
               o [20]data science in python
               o [21]data science in weka
               o [22]data visualization with tableau
               o [23]data visualization with qlikview
               o [24]interactive data stories with d3.js
          + [25]glossary
     * [26]engage
          + [27]discuss
          + [28]events
          + [29]datahack summit 2018
          + [30]datahack summit 2017
          + [31]student datafest
          + [32]write for us
     * [33]compete
          + [34]hackathons
     * [35]get hired
          + [36]jobs
     * [37]courses
          + [38]id161 using deep learning
          + [39]natural language processing using python
          + [40]introduction to data science
          + [41]microsoft excel
          + [42]more courses
     * [43]contact

     *
     *
     *
     *

     * [44]home
     * [45]blog archive
     * [46]trainings
     * [47]discuss
     * [48]datahack
     * [49]jobs
     * [50]corporate

     *

   [51]analytics vidhya - learn everything about analytics

learn everything about analytics

   [52][black-belt-2.gif]
   [53][black-belt-2.gif]
   [54][black-belt-2.gif]
   (button) search______________

   [55]analytics vidhya - learn everything about analytics
     * [56]learn
          + [57]blog archive
               o [58]machine learning
               o [59]deep learning
               o [60]career
               o [61]stories
          + [62]datahack radio
          + [63]infographics
          + [64]training
          + [65]learning paths
               o [66]sas business analyst
               o [67]learn data science on r
               o [68]data science in python
               o [69]data science in weka
               o [70]data visualization with tableau
               o [71]data visualization with qlikview
               o [72]interactive data stories with d3.js
          + [73]glossary
     * [74]engage
          + [75]discuss
          + [76]events
          + [77]datahack summit 2018
          + [78]datahack summit 2017
          + [79]student datafest
          + [80]write for us
     * [81]compete
          + [82]hackathons
     * [83]get hired
          + [84]jobs
     * [85]courses
          + [86]id161 using deep learning
          + [87]natural language processing using python
          + [88]introduction to data science
          + [89]microsoft excel
          + [90]more courses
     * [91]contact

   [92]home [93]nlp [94]flashtext     a library faster than regular
   expressions for nlp tasks

   [95]nlp[96]python

flashtext     a library faster than id157 for nlp tasks

   [97]nss, november 24, 2017

introduction

   people like me working in the field of natural language processing
   almost always come across the task of replacing words in a text. the
   reasons behind replacing the words may be different. some of them are.
    1.    would   ve    and    would have    represent the same thing. so changing
       all the occurrences of    would   ve    to    would have    is one such task.
    2. changing all case variations to a single form i.e python, python,
       python, python etc. to python
    3. changing all the synonyms of a word to a common word i.e happy,
       joyous, delightful etc to happy

   now, if the number of words to replace and the corpus of text is not
   huge i.e within thousands, then id157 have always been my
   solution. but as i started working on bigger and bigger datasets with
   tens of thousands of documents and sometimes millions, i noticed that
   performing the above tasks started taking days. in today   s fast-moving
   world, this is not the amount of time one would want to invest in a
   very simple but important task. so earlier, it would come down to
   optimizing the number of words necessary to be changed and time
   required to replace these words.

   but in the early november, i found flashtext     a super blazingly fast
   library that reduces days of replacement computation time to minutes.


table of contents

    1. what is flashtext?
       1. flashtext vs regular expression performance
    2. how is flashtext so fast?
    3. when to use flashtext?
    4. installing flashtext
    5. code     searching for words in a text document
    6. code     replacing words in a text document
       1. replacing a single word with another word.
       2. replacing multiple words with a single word.
    7. end notes


1. what is flashtext?

   flashtext is a python library created specifically for the purpose of
   searching and replacing words in a document. now, the way flashtext
   works is that it requires a word or a list of words and a string. the
   words which flashtext calls keywords are then searched or replaced in
   the string.

   let us check out in detail about flashtext working. when keywords are
   passed to flashtext for searching or replacing, they are stored as a
   trie data structure which is very efficient at retrieval tasks. below
   is an example of how a trie data structure looks like.


   above is a trie data structure for the words (their, there, answer,
   any, and bye).

   now, in case of searching the keywords, flashtext will return the
   keywords that are present in the string. in case of replacing,
   flashtext will create a new string with the keywords replaced. both
   these operations happen over a single pass. now it is important to
   understand the concept of the single pass.

   an example of single pass replacement looks like this-

   string =    spamham sha   
   replace    spam    with    eggs    and    sha    with    md5   

   now let   s see how does the string look like with and without a single
   pass.

   single-pass
   string =    eggsham md5   

   without single-pass
   string =    eggmd5m md5   

   above, you can see the difference between the single pass and without
   the single pass.

2. how is flashtext so fast?

   now, we have an overview of how flashtext works. it is imperative that
   we understand     what is that flashtext has which id157
   don   t? after all, id157 are mostly considered the
   one-stop solution for string manipulation in terms of both speed and
   variety of manipulations that can be done. this can be better
   understood with the help of an example by the author of the flashtext
   package himself.

   suppose, there is a string called sample =     this is a sample sentence   
   and a collection of words called keywords = {sample, sameer, pony,
   time}. now, if we are to perform searching of the keywords in the
   sample,  there are 2 ways of doing it.

   method 1:

   for each word in
   keywords:
      line 1
   check if word exists in
   sample                                                        line 2

   now the above method has a loop which will run n times, where n is the
   number of words in the keywords.  also, there will be significant time
   consumption in line 2 which checks whether a particular word is present
   in a string or not.

   method 2:

   for each word in
   sample:
        line 1
   check if word exists in the keywords
   dictionary                            line 2

   now, the loop in this method will run m times, where m is the number of
   words in the sample. the major advantage is the execution time of line
   2. checking a key in a dictionary is a significantly faster process
   than checking for a word in a string.

   flashtext uses method 2 for faster searching and replacing and is
   inspired by the aho-corasick algorithm and trie data structure. let   s
   have a look at the way it works:

   first, a trie dictionary is created from the keywords which looks like
   below.

   start and eot  represent the word boundaries such as space, new_line
   etc. the idea is that words which have word boundaries on both ends
   should only match. so, pam will not match to pamella. now let   s see how
   we can perform searching,

   since we have our keywords dictionary with us. we pass in the input
   string sample. now, the comparison will look like below.

   is <start>this<eot>in the keywords
   dictionary?                                       no
   is <start>is<eot>in the keywords
   dictionary?                                            no
   is <start>a<eot>in the keywords
   dictionary?                                            no
   is <start>sample<eot>in the keywords
   dictionary?                                  yes
   is <start>sentence<eot>in the keywords
   dictionary?                               no

   visually it looks like below.

   an important thing to keep in mind is that checking for a word in the
   dictionary happens at a character level. so for example, while checking
   for the word    is   , it will search for <start>   i   . since    i    does not
   exist anywhere after <start> in the keywords trie dictionary, therefore
   the entire word is skipped. this character level matching and skipping
   are what gives flashtext its speed.


3. when do you use flashtext?

   pretty much every time since it is super fast. below is the image of
   the benchmarking done by flashtext for searching and replacing against
   id157.

   searching

   [1*_wjtfrdsnlkgnbr4vj4xqw.png]

   looking at the image, it looks like when the number of keywords to be
   searched is below 500 then, id157 provide a little edge
   over flashtext. but as soon as number of keywords cross 500, flashtext
   surpasses regular expression performance by a wide margin.

   conclusion: use flashtext when you have to search for a large number of
   keywords, preferably more than 500.

   replacing

   [1*doxuzk_byvvvnf7o3jiqsw.png]

   while id157 presented stiff competition to flashtext in
   the sub 500 keyword domain for searching, when it comes to replacing
   flashtext beats id157 hands down. while there is a linear
   increase in time as the number of keywords increase, flashtext stays
   constant.

   conclusion: flashtext is any day better than id157 for
   replacing keywords in a document.

   these are the codes for benchmarking of [98]searching and [99]replacing
   by the author.

   there are still a few caveats of using flashtext. as of now, flashtext
   does not support partial word matching or special characters matching.
   for that, id157 are the best.


4. installing flashtext

   installing flashtext is as easy as any other package. in command
   prompt/ terminal, type:

   pip install flashtext


5. searching for words in a text document

   below is the code to find keywords in a document.

   from flashtext import keywordprocessor
   document = """batman is a fictional superhero appearing in american
   comic books published by dc comics. the character was created by artist
   bob kane and writer bill finger,[4][5] and first appeared in detective
   comics #27 (1939). originally named the "bat-man", the character is
   also referred to by such epithets as the caped crusader, the dark
   knight, and the world's greatest detective.[6]

   batman's secret identity is bruce wayne, a wealthy american playboy,
   philanthropist, and owner of wayne enterprises. after witnessing the
   murder of his parents dr. thomas wayne and martha wayne as a child, he
   swore vengeance against criminals, an oath tempered by a sense of
   justice. bruce wayne trains himself physically and intellectually and
   crafts a bat-inspired persona to fight crime.[7]

   batman operates in the fictional gotham city with assistance from
   various supporting characters, including his butler alfred, police
   commissioner gordon, and vigilante allies such as robin. unlike most
   superheroes, batman does not possess any superpowers; rather, he relies
   on his genius intellect, physical prowess, martial arts abilities,
   detective skills, science and technology, vast wealth, intimidation,
   and indomitable will. a large assortment of villains make up batman's
   rogues gallery, including his archenemy, the joker.

   the character became popular soon after his introduction in 1939 and
   gained his own comic book title, batman, the following year. as the
   decades went on, differing interpretations of the character emerged.
   the late 1960s batman television series used a camp aesthetic, which
   continued to be associated with the character for years after the show
   ended. various creators worked to return the character to his dark
   roots, culminating in 1986 with the dark knight returns by frank
   miller. the success of warner bros.' live-action batman feature films
   have helped maintain the character's prominence in mainstream
   culture.[8]

   an american cultural icon, batman has garnered enormous popularity and
   is among the most identifiable comic book characters. batman has been
   licensed and adapted into a variety of media, from radio to television
   and film, and appears on various merchandise sold around the world,
   such as toys and video games. the character has also intrigued
   psychiatrists, with many trying to understand his psyche. in 2015,
   fansided ranked batman as number one on their list of "50 greatest
   super heroes in comic book history".[9] kevin conroy, bruce greenwood,
   peter weller, anthony ruivivar, jason o'mara, and will arnett, among
   others, have provided the character's voice for animated adaptations.
   batman has been depicted in both film and television by lewis wilson,
   robert lowery, adam west, michael keaton, val kilmer, george clooney,
   christian bale, and ben affleck. """

   # searching for a single word in the document
   processor = keywordprocessor()
   processor.add_keyword('batman')
   found = processor.extract_keywords(document)
   print(found)

   output:
['batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman']

# searching for more than one word
processor.add_keywords_from_list(['batman','robert'])
found = processor.extract_keywords(document)
print(found)

output:


['batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'batman',
 'robert']

# searching for synonymns using a dictionary
processor.add_keywords_from_dict({'batman':['batman','bruce wayne']})
found = processor.extract_keywords(document)

# listing the location of found keywords along with the keywords
processor.add_keywords_from_dict({'batman':['batman','bruce wayne']})
found = processor.extract_keywords(document, span_info=true)
print(found)

output:


[('batman', 0, 6),
 ('batman', 379, 385),
 ('batman', 407, 418),
 ('batman', 663, 674),
 ('batman', 774, 780),
 ('batman', 989, 995),
 ('batman', 1245, 1251),
 ('batman', 1409, 1415),
 ('batman', 1528, 1534),
 ('batman', 1834, 1840),
 ('batman', 1957, 1963),
 ('batman', 2055, 2061),
 ('batman', 2356, 2362),
 ('batman', 2617, 2623)]


6. replacing words in a text document

   # replacing all occurences of word 'batman'(case insensitive) with
   bruce wayne
   processor = keywordprocessor(case_sensitive = false)
   processor.add_keywords('batman','bruce wayne')
   found = processor.replace_keywords(document)
   print(found)

   output:

      bruce wayne is a fictional superhero appearing in american comic books
   published by dc comics. the character was created by artist bob kane
   and writer bill finger,[4][5] and first appeared in detective comics
   #27 (1939). originally named the    bat-man   , the character is also
   referred to by such epithets as the caped crusader, the dark knight,
   and the world\   s greatest detective.[6]\n\nbruce wayne\   s secret
   identity is bruce wayne, a wealthy american playboy, philanthropist,
   and owner of wayne enterprises. after witnessing the murder of his
   parents dr. thomas wayne and martha wayne as a child, he swore
   vengeance against criminals, an oath tempered by a sense of justice.
   bruce wayne trains himself physically and intellectually and crafts a
   bat-inspired persona to fight crime.[7]\n\nbruce wayne operates in the
   fictional gotham city with assistance from various supporting
   characters, including his butler alfred, police commissioner gordon,
   and vigilante allies such as robin. unlike most superheroes, bruce
   wayne does not possess any superpowers; rather, he relies on his genius
   intellect, physical prowess, martial arts abilities, detective skills,
   science and technology, vast wealth, intimidation, and indomitable
   will. a large assortment of villains make up bruce wayne\   s rogues
   gallery, including his archenemy, the joker.\n\nthe character became
   popular soon after his introduction in 1939 and gained his own comic
   book title, bruce wayne, the following year. as the decades went on,
   differing interpretations of the character emerged. the late 1960s
   bruce wayne television series used a camp aesthetic, which continued to
   be associated with the character for years after the show ended.
   various creators worked to return the character to his dark roots,
   culminating in 1986 with the dark knight returns by frank miller. the
   success of warner bros.\    live-action bruce wayne feature films have
   helped maintain the character\   s prominence in mainstream
   culture.[8]\n\nan american cultural icon, bruce wayne has garnered
   enormous popularity and is among the most identifiable comic book
   characters. bruce wayne has been licensed and adapted into a variety of
   media, from radio to television and film, and appears on various
   merchandise sold around the world, such as toys and video games. the
   character has also intrigued psychiatrists, with many trying to
   understand his psyche. in 2015, fansided ranked bruce wayne as number
   one on their list of    50 greatest super heroes in comic book
   history   .[9] kevin conroy, bruce greenwood, peter weller, anthony
   ruivivar, jason o\   mara, and will arnett, among others, have provided
   the character\   s voice for animated adaptations. bruce wayne has been
   depicted in both film and television by lewis wilson, robert lowery,
   adam west, michael keaton, val kilmer, george clooney, christian bale,
   an   

7. end notes

   so this was all about flashtext     an efficient library for searching
   and replacing of keywords in millions of document. if you are into the
   nlp field and it is your day to day job of dealing with this kind of
   problem of text cleaning and modification then, i would really suggest
   you try the library once. the source for the library is present
   [100]here for any reference.

   if you try out this amazing library, do let me know in the comments
   below!

[101]learn, [102]engage, [103]compete, and [104]get hired!

   you can also read this article on analytics vidhya's android app
   [105]get it on google play

share this:

     * [106]click to share on linkedin (opens in new window)
     * [107]click to share on facebook (opens in new window)
     * [108]click to share on twitter (opens in new window)
     * [109]click to share on pocket (opens in new window)
     * [110]click to share on reddit (opens in new window)
     *

like this:

   like loading...

related articles

   [ins: :ins]

   tags : [111]flashtext, [112]natural language processing, [113]nlp,
   [114]regex
   next article

introductory guide to information retrieval using knn and kdtree

   previous article

a step towards reproducible data science : docker for data science workflows

[115]nss

   i am a perpetual, quick learner and keen to explore the realm of data
   analytics and science. i am deeply excited about the times we live in
   and the rate at which data is being generated and being transformed as
   an asset. i am well versed with a few tools for dealing with data and
   also in the process of learning some other tools and knowledge required
   to exploit data.
     *

   this article is quite old and you might not get a prompt response from
   the author. we request you to post this comment on analytics vidhya's
   [116]discussion portal to get your queries resolved

15 comments

     * mohammad amir says:
       [117]november 24, 2017 at 11:21 pm
       hello neeraj,
       very nice piece of information. it is definitely worth a try and
       the best part of this article was the benchmarking(something on
       which other articles miss out) against other trivial approaches.
       [118]reply
     * amit says:
       [119]november 25, 2017 at 10:35 am
       this is just amazing. i am working on the same task of replacing
       words and finding it difficult, developed rules to achieve the task
       ( i am using levenshtein distance, association from tm, some custom
       rules) . but, still the performance is not as desired. will try
       this one too. just wondering, ,does this package exist on r too?
       [120]reply
     * ankit says:
       [121]november 25, 2017 at 10:42 am
       hi nss,
       doubt: i installed pip install flashtext on my system command
       prompt, it is impoting there on my cmd prompt but still i cannot
       access this in anaconda (jupyter or spyder).
       so what to do?
       do i need to run conda command after running pip command always?
       [122]reply
          + nss says:
            [123]november 25, 2017 at 11:52 am
            it seems like either you are using different python version in
            command prompt and jupyter or you are running jupyter in a
            different environment. to check, please copy the below command
            to both inside python shell in command prompt and jupyter
            notebook. output of the commands should match.
            import sys
            sys.executable
            [124]reply
     * ankit says:
       [125]november 25, 2017 at 12:23 pm
       hi nss,
       thanks. useful.
       yes,
       jupyter env is appdata\local\continuum\anaconda3\python.exe
       anothe rone
       appdata\local\programs\python\python35\python.exe
       1. so, is it recommended , that i should set anaconda. version as
       my local syste python vesion or vice-versa?
       2. conda also worked for flashtext, is conda just a replacement of
       pip ? any more difference?
       thanks again..
       [126]reply
          + nss says:
            [127]november 27, 2017 at 11:27 am
            hi ankit,
            glad that was of help.
            1. not necessary, depends on your needs. i prefer keeping them
            same for the sake of sanity.
            2. conda is not not a replacement of pip. there are still
            things that conda cannot do but pip can. but for a normal
            user, conda should suffice.
            [128]reply
     * praneeth says:
       [129]november 27, 2017 at 12:37 pm
       thanks for introducing to    flashtext   ..
       [130]reply
     * bruno says:
       [131]november 27, 2017 at 10:30 pm
       do you know a library like that for    r   ?
       [132]reply
          + nss says:
            [133]december 1, 2017 at 12:37 pm
            right now there isn   t one.
            [134]reply
     * gaurav780 says:
       [135]november 28, 2017 at 8:11 am
       very useful nss. i had been looking out for such thing since long.
       [136]reply
     * saurabh bobde says:
       [137]november 28, 2017 at 11:55 am
       good read. understanding how flashtext achieves the performance and
       the benchmarking is good factual evidence.
       thanks for sharing.
       [138]reply
     * sam ranade says:
       [139]december 1, 2017 at 9:38 pm
       there is a typo in this blog (i think)
       the package api has attribute
       add_keyword() not add_keywords()
       for the processor object
       [140]reply
          + nss says:
            [141]december 7, 2017 at 12:10 pm
            thanks for pointing out. it has been corrected.
            [142]reply
     * harshitgarg says:
       [143]december 24, 2017 at 11:22 am
       good and short explanation. thanks
       [144]reply
     * tirtha says:
       [145]june 17, 2018 at 1:18 am
       very efficient method for string operations like searching and
       replacing.
       good use trie-datastructure and aho-corasick algo.
       good work
       [146]reply

   [ins: :ins]

top analytics vidhya users

   rank                  name                  points
   1    [1.jpg?date=2019-04-06] [147]srk       3924
   2    [2.jpg?date=2019-04-06] [148]mark12    3510
   3    [3.jpg?date=2019-04-06] [149]nilabha   3261
   4    [4.jpg?date=2019-04-06] [150]nitish007 3237
   5    [5.jpg?date=2019-04-06] [151]tezdhar   3082
   [152]more user rankings
   [ins: :ins]
   [ins: :ins]

popular posts

     * [153]24 ultimate data science projects to boost your knowledge and
       skills (& can be accessed freely)
     * [154]understanding support vector machine algorithm from examples
       (along with code)
     * [155]essentials of machine learning algorithms (with python and r
       codes)
     * [156]a complete tutorial to learn data science with python from
       scratch
     * [157]7 types of regression techniques you should know!
     * [158]6 easy steps to learn naive bayes algorithm (with codes in
       python and r)
     * [159]a simple introduction to anova (with applications in excel)
     * [160]stock prices prediction using machine learning and deep
       learning techniques (with python codes)

   [ins: :ins]

recent posts

   [161]top 5 machine learning github repositories and reddit discussions
   from march 2019

[162]top 5 machine learning github repositories and reddit discussions from
march 2019

   april 4, 2019

   [163]id161 tutorial: a step-by-step introduction to image
   segmentation techniques (part 1)

[164]id161 tutorial: a step-by-step introduction to image
segmentation techniques (part 1)

   april 1, 2019

   [165]nuts and bolts of id23: introduction to temporal
   difference (td) learning

[166]nuts and bolts of id23: introduction to temporal
difference (td) learning

   march 28, 2019

   [167]16 opencv functions to start your id161 journey (with
   python code)

[168]16 opencv functions to start your id161 journey (with python
code)

   march 25, 2019

   [169][ds-finhack.jpg]

   [170][hikeathon.png]

   [av-white.d14465ee4af2.png]

analytics vidhya

     * [171]about us
     * [172]our team
     * [173]career
     * [174]contact us
     * [175]write for us

   [176]about us
   [177]   
   [178]our team
   [179]   
   [180]careers
   [181]   
   [182]contact us

data scientists

     * [183]blog
     * [184]hackathon
     * [185]discussions
     * [186]apply jobs
     * [187]leaderboard

companies

     * [188]post jobs
     * [189]trainings
     * [190]hiring hackathons
     * [191]advertising
     * [192]reach us

   don't have an account? [193]sign up here.

join our community :

   [194]46336 [195]followers
   [196]20224 [197]followers
   [198]followers
   [199]7513 [200]followers
   ____________________ >

      copyright 2013-2019 analytics vidhya.
     * [201]privacy policy
     * [202]terms of use
     * [203]refund policy

   don't have an account? [204]sign up here

   iframe: [205]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [206](button) join now

   subscribe!

   iframe: [207]likes-master

   %d bloggers like this:

   [loading.gif]
   ____________________

   ____________________

   ____________________
   [button input] (not implemented)_________________

   download resource

join the nextgen data science ecosystem

     * learn: get access to some of the best courses on data science
       created by us
     * engage: interact with thousands of data science professionals
       across the globe!
     * compete: compete in our hackathons and win exciting prizes
     * get hired: get information of jobs in data science community and
       build your profile

   [208](button) join now

   subscribe!

references

   visible links
   1. https://www.analyticsvidhya.com/feed/
   2. https://www.analyticsvidhya.com/comments/feed/
   3. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/feed/
   4. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
   5. https://www.analyticsvidhya.com/wp-json/oembed/1.0/embed?url=https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/&format=xml
   6. https://googletagmanager.com/ns.html?id=gtm-mpsm42v
   7. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=flashstrip
   8. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
   9. https://www.analyticsvidhya.com/blog-archive/
  10. https://www.analyticsvidhya.com/blog/category/machine-learning/
  11. https://www.analyticsvidhya.com/blog/category/deep-learning/
  12. https://www.analyticsvidhya.com/blog/category/career/
  13. https://www.analyticsvidhya.com/blog/category/stories/
  14. https://www.analyticsvidhya.com/blog/category/podcast/
  15. https://www.analyticsvidhya.com/blog/category/infographics/
  16. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  17. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  18. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  19. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  20. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  21. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  22. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  23. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  24. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  25. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  26. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  27. https://discuss.analyticsvidhya.com/
  28. https://www.analyticsvidhya.com/blog/category/events/
  29. https://www.analyticsvidhya.com/datahack-summit-2018/
  30. https://www.analyticsvidhya.com/datahacksummit/
  31. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  32. http://www.analyticsvidhya.com/about-me/write/
  33. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  34. https://datahack.analyticsvidhya.com/contest/all
  35. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  36. https://www.analyticsvidhya.com/jobs/
  37. https://courses.analyticsvidhya.com/
  38. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  39. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  40. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  41. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  42. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  43. https://www.analyticsvidhya.com/contact/
  44. https://www.analyticsvidhya.com/
  45. https://www.analyticsvidhya.com/blog-archive/
  46. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  47. https://discuss.analyticsvidhya.com/
  48. https://datahack.analyticsvidhya.com/
  49. https://www.analyticsvidhya.com/jobs/
  50. https://www.analyticsvidhya.com/corporate/
  51. https://www.analyticsvidhya.com/blog/
  52. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  53. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  54. https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=avtopbanner&utm_medium=display
  55. https://www.analyticsvidhya.com/blog/
  56. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  57. https://www.analyticsvidhya.com/blog-archive/
  58. https://www.analyticsvidhya.com/blog/category/machine-learning/
  59. https://www.analyticsvidhya.com/blog/category/deep-learning/
  60. https://www.analyticsvidhya.com/blog/category/career/
  61. https://www.analyticsvidhya.com/blog/category/stories/
  62. https://www.analyticsvidhya.com/blog/category/podcast/
  63. https://www.analyticsvidhya.com/blog/category/infographics/
  64. https://courses.analyticsvidhya.com/?utm_source=home_blog_navbar
  65. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/
  66. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-business-analyst-sas/
  67. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-r-data-science/
  68. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/learning-path-data-science-python/
  69. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/weka-gui-learn-machine-learning/
  70. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/tableau-learning-path/
  71. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/qlikview-learning-path/
  72. https://www.analyticsvidhya.com/learning-paths-data-science-business-analytics-business-intelligence-big-data/newbie-d3-js-expert-complete-path-create-interactive-visualization-d3-js/
  73. https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/
  74. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  75. https://discuss.analyticsvidhya.com/
  76. https://www.analyticsvidhya.com/blog/category/events/
  77. https://www.analyticsvidhya.com/datahack-summit-2018/
  78. https://www.analyticsvidhya.com/datahacksummit/
  79. https://www.analyticsvidhya.com/student-datafest-2018/?utm_source=homepage_menu
  80. http://www.analyticsvidhya.com/about-me/write/
  81. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  82. https://datahack.analyticsvidhya.com/contest/all
  83. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  84. https://www.analyticsvidhya.com/jobs/
  85. https://courses.analyticsvidhya.com/
  86. https://courses.analyticsvidhya.com/courses/computer-vision-using-deep-learning/?utm_source=blog-navbar&utm_medium=web
  87. https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog-navbar&utm_medium=web
  88. https://courses.analyticsvidhya.com/courses/introduction-to-data-science-2/?utm_source=blog-navbar&utm_medium=web
  89. https://courses.analyticsvidhya.com/courses/microsoft-excel-beginners-to-advanced/?utm_source=blog-navbar&utm_medium=web
  90. https://courses.analyticsvidhya.com/collections/?utm_source=blog-navbar&utm_medium=web
  91. https://www.analyticsvidhya.com/contact/
  92. https://www.analyticsvidhya.com/
  93. https://www.analyticsvidhya.com/blog/category/nlp/
  94. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/
  95. https://www.analyticsvidhya.com/blog/category/nlp/
  96. https://www.analyticsvidhya.com/blog/category/python-2/
  97. https://www.analyticsvidhya.com/blog/author/nss/
  98. https://gist.github.com/vi3k6i5/604eefd92866d081cfa19f862224e4a0
  99. https://gist.github.com/vi3k6i5/dc3335ee46ab9f650b19885e8ade6c7a
 100. https://github.com/vi3k6i5/flashtext
 101. https://www.analyticsvidhya.com/blog
 102. https://discuss.analyticsvidhya.com/
 103. https://datahack.analyticsvidhya.com/
 104. https://www.analyticsvidhya.com/jobs/#/user/
 105. https://play.google.com/store/apps/details?id=com.analyticsvidhya.android&utm_source=blog_article&utm_campaign=blog&pcampaignid=mkt-other-global-all-co-prtnr-py-partbadge-mar2515-1
 106. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/?share=linkedin
 107. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/?share=facebook
 108. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/?share=twitter
 109. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/?share=pocket
 110. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/?share=reddit
 111. https://www.analyticsvidhya.com/blog/tag/flashtext/
 112. https://www.analyticsvidhya.com/blog/tag/natural-language-processing/
 113. https://www.analyticsvidhya.com/blog/tag/nlp/
 114. https://www.analyticsvidhya.com/blog/tag/regex/
 115. https://www.analyticsvidhya.com/blog/author/nss/
 116. https://discuss.analyticsvidhya.com/
 117. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144609
 118. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144609
 119. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144668
 120. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144668
 121. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144669
 122. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144669
 123. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144681
 124. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144681
 125. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144689
 126. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-144689
 127. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145025
 128. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145025
 129. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145040
 130. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145040
 131. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145168
 132. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145168
 133. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145768
 134. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145768
 135. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145242
 136. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145242
 137. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145271
 138. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145271
 139. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145822
 140. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-145822
 141. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-146596
 142. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-146596
 143. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-149294
 144. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-149294
 145. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-153840
 146. https://www.analyticsvidhya.com/blog/2017/11/flashtext-a-library-faster-than-regular-expressions/#comment-153840
 147. https://datahack.analyticsvidhya.com/user/profile/srk
 148. https://datahack.analyticsvidhya.com/user/profile/mark12
 149. https://datahack.analyticsvidhya.com/user/profile/nilabha
 150. https://datahack.analyticsvidhya.com/user/profile/nitish007
 151. https://datahack.analyticsvidhya.com/user/profile/tezdhar
 152. https://datahack.analyticsvidhya.com/top-competitor/?utm_source=blog-navbar&utm_medium=web
 153. https://www.analyticsvidhya.com/blog/2018/05/24-ultimate-data-science-projects-to-boost-your-knowledge-and-skills/
 154. https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/
 155. https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/
 156. https://www.analyticsvidhya.com/blog/2016/01/complete-tutorial-learn-data-science-python-scratch-2/
 157. https://www.analyticsvidhya.com/blog/2015/08/comprehensive-guide-regression/
 158. https://www.analyticsvidhya.com/blog/2017/09/naive-bayes-explained/
 159. https://www.analyticsvidhya.com/blog/2018/01/anova-analysis-of-variance/
 160. https://www.analyticsvidhya.com/blog/2018/10/predicting-stock-price-machine-learningnd-deep-learning-techniques-python/
 161. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 162. https://www.analyticsvidhya.com/blog/2019/04/top-5-machine-learning-github-reddit/
 163. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 164. https://www.analyticsvidhya.com/blog/2019/04/introduction-image-segmentation-techniques-python/
 165. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 166. https://www.analyticsvidhya.com/blog/2019/03/reinforcement-learning-temporal-difference-learning/
 167. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 168. https://www.analyticsvidhya.com/blog/2019/03/opencv-functions-computer-vision-python/
 169. https://datahack.analyticsvidhya.com/contest/ltfs-datascience-finhack-an-online-hackathon/?utm_source=sticky_banner1&utm_medium=display
 170. https://datahack.analyticsvidhya.com/contest/hikeathon/?utm_source=sticky_banner2&utm_medium=display
 171. http://www.analyticsvidhya.com/about-me/
 172. https://www.analyticsvidhya.com/about-me/team/
 173. https://www.analyticsvidhya.com/career-analytics-vidhya/
 174. https://www.analyticsvidhya.com/contact/
 175. https://www.analyticsvidhya.com/about-me/write/
 176. http://www.analyticsvidhya.com/about-me/
 177. https://www.analyticsvidhya.com/about-me/team/
 178. https://www.analyticsvidhya.com/about-me/team/
 179. https://www.analyticsvidhya.com/about-me/team/
 180. https://www.analyticsvidhya.com/career-analytics-vidhya/
 181. https://www.analyticsvidhya.com/about-me/team/
 182. https://www.analyticsvidhya.com/contact/
 183. https://www.analyticsvidhya.com/blog
 184. https://datahack.analyticsvidhya.com/
 185. https://discuss.analyticsvidhya.com/
 186. https://www.analyticsvidhya.com/jobs/
 187. https://datahack.analyticsvidhya.com/users/
 188. https://www.analyticsvidhya.com/corporate/
 189. https://trainings.analyticsvidhya.com/
 190. https://datahack.analyticsvidhya.com/
 191. https://www.analyticsvidhya.com/contact/
 192. https://www.analyticsvidhya.com/contact/
 193. https://datahack.analyticsvidhya.com/signup/
 194. https://www.facebook.com/analyticsvidhya/
 195. https://www.facebook.com/analyticsvidhya/
 196. https://twitter.com/analyticsvidhya
 197. https://twitter.com/analyticsvidhya
 198. https://plus.google.com/+analyticsvidhya
 199. https://in.linkedin.com/company/analytics-vidhya
 200. https://in.linkedin.com/company/analytics-vidhya
 201. https://www.analyticsvidhya.com/privacy-policy/
 202. https://www.analyticsvidhya.com/terms/
 203. https://www.analyticsvidhya.com/refund-policy/
 204. https://id.analyticsvidhya.com/accounts/signup/
 205. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 206. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web
 207. https://widgets.wp.com/likes/master.html?ver=201914#ver=201914
 208. https://id.analyticsvidhya.com/accounts/login/?next=https://www.analyticsvidhya.com/blog/&utm_source=blog-subscribe&utm_medium=web

   hidden links:
 210. https://www.facebook.com/analyticsvidhya
 211. https://twitter.com/analyticsvidhya
 212. https://plus.google.com/+analyticsvidhya/posts
 213. https://in.linkedin.com/company/analytics-vidhya
 214. https://www.analyticsvidhya.com/blog/2017/11/information-retrieval-using-kdtree/
 215. https://www.analyticsvidhya.com/blog/2017/11/reproducible-data-science-docker-for-data-science/
 216. https://www.analyticsvidhya.com/blog/author/nss/
 217. https://in.linkedin.com/in/neeraj-singh-sarwan-a84b6965
 218. http://www.edvancer.in/certified-data-scientist-with-python-course?utm_source=av&utm_medium=avads&utm_campaign=avadsnonfc&utm_content=pythonavad
 219. https://www.facebook.com/analyticsvidhya/
 220. https://twitter.com/analyticsvidhya
 221. https://plus.google.com/+analyticsvidhya
 222. https://plus.google.com/+analyticsvidhya
 223. https://in.linkedin.com/company/analytics-vidhya
 224. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 225. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 226. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 227. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 228. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 229. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 230. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 231. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 232. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 233. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 234. javascript:void(0);
 235. javascript:void(0);
 236. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 237. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 238. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 239. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 240. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 241. https://www.addtoany.com/add_to/facebook?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 242. https://www.addtoany.com/add_to/twitter?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 243. https://www.addtoany.com/add_to/linkedin?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 244. https://www.addtoany.com/add_to/flipboard?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 245. https://www.addtoany.com/add_to/whatsapp?linkurl=https%3a%2f%2fwww.analyticsvidhya.com%2fblog%2f2017%2f11%2fflashtext-a-library-faster-than-regular-expressions%2f&linkname=flashtext%20-%20a%20library%20faster%20than%20regular%20expressions%20for%20nlp%20tasks
 246. javascript:void(0);
 247. javascript:void(0);
