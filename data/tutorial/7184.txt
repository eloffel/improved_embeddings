   #[1]github [2]recent commits to tensorpack:master

   [3]skip to content

   (button)

     * why github?
       [4]features    
          + [5]code review
          + [6]project management
          + [7]integrations
          + [8]actions
          + [9]team management
          + [10]social coding
          + [11]documentation
          + [12]code hosting
          + [13]customer stories    
          + [14]security    
     * [15]enterprise
     * explore
          + [16]explore github    

learn & contribute
          + [17]topics
          + [18]collections
          + [19]trending
          + [20]learning lab
          + [21]open source guides

connect with others
          + [22]events
          + [23]community forum
          + [24]github education
     * [25]marketplace
     * pricing
       [26]plans    
          + [27]compare plans
          + [28]contact sales
          + [29]nonprofit    
          + [30]education    

   ____________________
     * in this repository all github    
       jump to    

     * no suggested jump to results

     * in this repository all github    
       jump to    
     * in this repository all github    
       jump to    

   [31]sign in [32]sign up

     * [33]watch [34]193
     * [35]star [36]3,924
     * [37]fork [38]1,223

[39]tensorpack/[40]tensorpack

   [41]code [42]issues 10 [43]pull requests 1 [44]insights
   branch: master
   (button) create new file [45]find file [46]history
   [47]tensorpack/[48]examples/a3c-gym/
   [49]@ppwwyyxx
   [50]ppwwyyxx [51]placeholder->tensorspec refactor
   latest commit [52]ba679ab mar 18, 2019
   [53]permalink
   type name latest commit message commit time
   [54]..
   failed to load latest commit information.
   [55]readme.md [56]update docs about launch_train_with_config
   ([57]#1087[58]) feb 20, 2019
   [59]atari_wrapper.py
   [60]common.py
   [61]simulator.py
   [62]train-atari.py

readme.md

a3c code and models for atari games in gym

   multi-gpu version of the a3c algorithm in [63]asynchronous methods for
   deep id23.

   results of the code trained on 47 different atari games were uploaded
   to openai gym and available for download. most of them were the best
   reproducible results on gym. however openai has later removed the
   leaderboard from their site.

to train on an atari game:

   ./train-atari.py --env breakout-v0 --gpu 0

   in each iteration it trains on a batch of 128 new states. the speed is
   about 20 iterations/s (2.5k images/s) on 1 v100 gpu plus 12+ cpu cores.
   note that the network architecture is larger than what's used in the
   original paper.

   the pretrained models are all trained with 4 gpus for about 2 days. but
   on simple games like breakout, you can get decent performance within
   several hours. for example, it takes only 2 hours on a v100 to reach
   400 average score on breakout.

   some practicical notes:
    1. prefer python 3; windows not supported.
    2. training with a significant slower speed (e.g. on cpu) will result
       in very bad score, probably because of the slightly off-policy
       implementation.
    3. occasionally, processes may not get terminated completely. if
       you're using linux, install [64]python-prctl to prevent this.

to test a model:

   download models from [65]model zoo.

   watch the agent play: ./train-atari.py --task play --env breakout-v0
   --load breakout-v0.npz

   dump some videos: ./train-atari.py --task dump_video --load
   breakout-v0.npz --env breakout-v0 --output output_dir --episode 3

   this table lists available pretrained models and scores (average over
   100 episodes), with their submission links. the old submission site is
   not maintained any more so the links might become invalid any time.
   [66]airraid(2727) [67]alien (2611) [68]amidar(1376) [69]assault(3397)
   [70]asterix(407432) [71]asteroids(1965) [72]atlantis(217186)
   [73]bankheist(1274)
   [74]battlezone(29210) [75]beamrider(5972) [76]berzerk(2289)
   [77]breakout (667)
   [78]carnival(5211) [79]centipede(2909) [80]choppercommand(6031)
   [81]crazyclimber(105297)
   [82]demonattack(33992) [83]doubledunk(23) [84]elevatoraction(11377)
   [85]fishingderby(34)
   [86]frostbite(6824) [87]gopher(22595) [88]gravitar(2144)
   [89]icehockey(19)
   [90]jamesbond(640) [91]journeyescape(-407) [92]kangaroo(6540)
   [93]krull(6100)
   [94]kungfumaster(34767) [95]mspacman(5738) [96]namethisgame(15321)
   [97]phoenix(75312)
   [98]pong(21) [99]pooyan(5607) [100]qbert(20182) [101]riverraid(14185)
   [102]roadrunner(60615) [103]robotank(60) [104]seaquest(46890)
   spaceinvaders(3454)
   [105]stargunner(93480) [106]tennis(23) tutankham(275)
   [107]upndown(92163)
   [108]videopinball(140156) [109]wizardofwor(3824) [110]zaxxon(32894)

   all models above are trained with the -v0 variant of atari games. note
   that this variant is quite different from deepmind papers, so the
   scores are not directly comparable. the most notable differences are:
     * each action is randomly repeated 2~4 times.
     * inputs are rgb instead of greyscale.
     * an episode is limited to 60000 steps.
     * lost of live is not end of episode.

   also see the [111]id25 implementation in tensorpack

     *    2019 github, inc.
     * [112]terms
     * [113]privacy
     * [114]security
     * [115]status
     * [116]help

     * [117]contact github
     * [118]pricing
     * [119]api
     * [120]training
     * [121]blog
     * [122]about

   (button) you can   t perform that action at this time.

   you signed in with another tab or window. [123]reload to refresh your
   session. you signed out in another tab or window. [124]reload to
   refresh your session.

   (button)

references

   visible links
   1. https://github.com/opensearch.xml
   2. https://github.com/tensorpack/tensorpack/commits/master.atom
   3. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym#start-of-content
   4. https://github.com/features
   5. https://github.com/features/code-review/
   6. https://github.com/features/project-management/
   7. https://github.com/features/integrations
   8. https://github.com/features/actions
   9. https://github.com/features#team-management
  10. https://github.com/features#social-coding
  11. https://github.com/features#documentation
  12. https://github.com/features#code-hosting
  13. https://github.com/customer-stories
  14. https://github.com/security
  15. https://github.com/enterprise
  16. https://github.com/explore
  17. https://github.com/topics
  18. https://github.com/collections
  19. https://github.com/trending
  20. https://lab.github.com/
  21. https://opensource.guide/
  22. https://github.com/events
  23. https://github.community/
  24. https://education.github.com/
  25. https://github.com/marketplace
  26. https://github.com/pricing
  27. https://github.com/pricing#feature-comparison
  28. https://enterprise.github.com/contact
  29. https://github.com/nonprofit
  30. https://education.github.com/
  31. https://github.com/login?return_to=/tensorpack/tensorpack/tree/master/examples/a3c-gym
  32. https://github.com/join
  33. https://github.com/login?return_to=/tensorpack/tensorpack
  34. https://github.com/tensorpack/tensorpack/watchers
  35. https://github.com/login?return_to=/tensorpack/tensorpack
  36. https://github.com/tensorpack/tensorpack/stargazers
  37. https://github.com/login?return_to=/tensorpack/tensorpack
  38. https://github.com/tensorpack/tensorpack/network/members
  39. https://github.com/tensorpack
  40. https://github.com/tensorpack/tensorpack
  41. https://github.com/tensorpack/tensorpack
  42. https://github.com/tensorpack/tensorpack/issues
  43. https://github.com/tensorpack/tensorpack/pulls
  44. https://github.com/tensorpack/tensorpack/pulse
  45. https://github.com/tensorpack/tensorpack/find/master
  46. https://github.com/tensorpack/tensorpack/commits/master/examples/a3c-gym
  47. https://github.com/tensorpack/tensorpack
  48. https://github.com/tensorpack/tensorpack/tree/master/examples
  49. https://github.com/ppwwyyxx
  50. https://github.com/tensorpack/tensorpack/commits?author=ppwwyyxx
  51. https://github.com/tensorpack/tensorpack/commit/ba679ab1fba2f4e2e73f74e1e792b85a4ac86486
  52. https://github.com/tensorpack/tensorpack/commit/ba679ab1fba2f4e2e73f74e1e792b85a4ac86486
  53. https://github.com/tensorpack/tensorpack/tree/d04c8444d4571ccfb8a872ce71acdbcfb39fcdfe/examples/a3c-gym
  54. https://github.com/tensorpack/tensorpack/tree/master/examples
  55. https://github.com/tensorpack/tensorpack/blob/master/examples/a3c-gym/readme.md
  56. https://github.com/tensorpack/tensorpack/commit/d0e410ad3fc2fe9bd2289cfe79cee4e0a4ab5399
  57. https://github.com/tensorpack/tensorpack/issues/1087
  58. https://github.com/tensorpack/tensorpack/commit/d0e410ad3fc2fe9bd2289cfe79cee4e0a4ab5399
  59. https://github.com/tensorpack/tensorpack/blob/master/examples/a3c-gym/atari_wrapper.py
  60. https://github.com/tensorpack/tensorpack/blob/master/examples/a3c-gym/common.py
  61. https://github.com/tensorpack/tensorpack/blob/master/examples/a3c-gym/simulator.py
  62. https://github.com/tensorpack/tensorpack/blob/master/examples/a3c-gym/train-atari.py
  63. http://arxiv.org/abs/1602.01783
  64. https://pypi.org/project/python-prctl/
  65. http://models.tensorpack.com/openaigym/
  66. https://gym.openai.com/evaluations/eval_zienk5mxsgomvgeuxrzduw
  67. https://gym.openai.com/evaluations/eval_8nr1ivjtqksit6en4xsma
  68. https://gym.openai.com/evaluations/eval_hweazbhttygpcialv9upha
  69. https://gym.openai.com/evaluations/eval_tcihwy5qrsdfvucsbbv6q
  70. https://gym.openai.com/evaluations/eval_mees2c58qfkm5gspcjrfca
  71. https://gym.openai.com/evaluations/eval_8ehksrl4rzuzeq9aolza
  72. https://gym.openai.com/evaluations/eval_z1b3d7a1qcaqk1hpo1rg
  73. https://gym.openai.com/evaluations/eval_hifoaxftiullpd38bjnow
  74. https://gym.openai.com/evaluations/eval_solit2br1qmfoc0asjf6q
  75. https://gym.openai.com/evaluations/eval_kuoyumrjqjixwl0spg0ica
  76. https://gym.openai.com/evaluations/eval_yri0xqbwry62nzwildn5ia
  77. https://gym.openai.com/evaluations/eval_nikain4nsueeivwqigvdra
  78. https://gym.openai.com/evaluations/eval_xjsolo2lswah1wheox5vw
  79. https://gym.openai.com/evaluations/eval_mc1kp5e6r42rfdjemlzkig
  80. https://gym.openai.com/evaluations/eval_tyvkyh7wqierikgevvacuw
  81. https://gym.openai.com/evaluations/eval_bkebg0qwsgom6a0i0wdhsw
  82. https://gym.openai.com/evaluations/eval_tt21vvarckyzwfcg1kw
  83. https://gym.openai.com/evaluations/eval_fi1gpf4tlcuf29kcctpq
  84. https://gym.openai.com/evaluations/eval_sqeaoumvr0icrivx2xprzg
  85. https://gym.openai.com/evaluations/eval_pplcnfxstvaayribodos0g
  86. https://gym.openai.com/evaluations/eval_qtc3takfsgwwko9q9im4ha
  87. https://gym.openai.com/evaluations/eval_kvcpr1ygqkezrl2vicaq
  88. https://gym.openai.com/evaluations/eval_qudrldvmtpk9hf5juazr0w
  89. https://gym.openai.com/evaluations/eval_8owctwwgs7outtgrwbpqkq
  90. https://gym.openai.com/evaluations/eval_mlf7xpi8tw66pnjp73jsma
  91. https://gym.openai.com/evaluations/eval_s9nquxlrsu7s5x21ay6aa
  92. https://gym.openai.com/evaluations/eval_tnjilb8ftqopfvinnpxoq
  93. https://gym.openai.com/evaluations/eval_dfos2wzhth6sn1fups9ha
  94. https://gym.openai.com/evaluations/eval_vnwdshytrc0mhfiybeuyg
  95. https://gym.openai.com/evaluations/eval_kpl9bsss4gxsyb9huefew
  96. https://gym.openai.com/evaluations/eval_lzqfv706sdomtr4zziwisg
  97. https://gym.openai.com/evaluations/eval_uzuruib3rrkumvjixvezya
  98. https://gym.openai.com/evaluations/eval_8l7sv59nsw6ggbbp3n4g6w
  99. https://gym.openai.com/evaluations/eval_uxfvi34msaunttjzck8n0a
 100. https://gym.openai.com/evaluations/eval_s8xdrbbyq1ewlud5jtqyiq
 101. https://gym.openai.com/evaluations/eval_ou4x3dktfm4uaxy6ciaxg
 102. https://gym.openai.com/evaluations/eval_winkqtwxt9ipydhoxbhg
 103. https://gym.openai.com/evaluations/eval_gr5c0ld3qacldpqrgdzbiw
 104. https://gym.openai.com/evaluations/eval_pjjgc9poqjk4iuvw8nxlbw
 105. https://gym.openai.com/evaluations/eval_jb5cojxfss2ctq7dxk8iag
 106. https://gym.openai.com/evaluations/eval_gdjjd0mms1ylm1t0hdqi4g
 107. https://gym.openai.com/evaluations/eval_kmkvmjkxqfsed20wfumdia
 108. https://gym.openai.com/evaluations/eval_pwwznhvfr2cxjyvespft1g
 109. https://gym.openai.com/evaluations/eval_1ogqhphpqhmzemiyrrrp0a
 110. https://gym.openai.com/evaluations/eval_tiq102ewtrhroyve2rgfg
 111. https://github.com/tensorpack/tensorpack/blob/master/examples/deepqnetwork
 112. https://github.com/site/terms
 113. https://github.com/site/privacy
 114. https://github.com/security
 115. https://githubstatus.com/
 116. https://help.github.com/
 117. https://github.com/contact
 118. https://github.com/pricing
 119. https://developer.github.com/
 120. https://training.github.com/
 121. https://github.blog/
 122. https://github.com/about
 123. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym
 124. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym

   hidden links:
 126. https://github.com/
 127. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym
 128. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym
 129. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym
 130. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym#a3c-code-and-models-for-atari-games-in-gym
 131. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym#to-train-on-an-atari-game
 132. https://github.com/tensorpack/tensorpack/tree/master/examples/a3c-gym#to-test-a-model
 133. https://github.com/
