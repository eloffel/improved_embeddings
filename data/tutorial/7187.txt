   #[1]publisher [2]medium [3]alternate

   [4]homepage
   [5]homepage
   [6]sign in[7]get started

   [8]#wecocreate
     * [9]mission
     * [10]solutions
     * [11]bots
     * [12]ai research
     * [13]the week!
     * [14]join the team
     * [15]botsupply.ai
     __________________________________________________________________

running capsulenet on tensorflow

   [16]go to the profile of rahul kumar
   [17]rahul kumar (button) blockedunblock (button) followfollowing
   nov 27, 2017
   [1*fdrakwbmf_sbvlne2v9whg.png]
   geoffrey hinton in his lecture

   so now we all know that id22 (by geoffrey hinton) is
   shaking up the ai space and literature states that it will push the
   limits of convolutional neural network (id98) to the next level. there
   are lot of medium posts, articles and research papers available that
   discuss about the theory and how it is better than traditional id98   s.
   so i am not going to cover that part, instead i would try to implement
   the cpnet on tensorflow using google   s amazing internal tool called
   [18]colaboratory.
     __________________________________________________________________

   few links you can follow to understand the theory part of cpnet:
     * [19]geoffrey hinton talk    what is wrong with convolutional neural
       nets ?   
     * [20]id22 are shaking up ai
     * [21]dynamic routing between capsules
     __________________________________________________________________

   let   s code the network.

   before starting, you can follow my colab notebook and execute the
   following code.

     colab url : [22]https://goo.gl/43jvju

   now we will clone the repository and install the dependencies. then we
   will take the mnist dataset from the repository and move it out to the
   parent directory.
!git clone [23]https://github.com/bourdakos1/capsule-networks.git
!pip install -r capsule-networks/requirements.txt
!touch capsule-networks/__init__.py
!mv capsule-networks capsule
!mv capsule/data/ ./data/
! ls

   let   s import all the modules.
import os
import tensorflow as tf
from tqdm import tqdm
from capsule.config import id18
from capsule.utils import load_mnist
from capsule.capsnet import capsnet

   initialise the capsule network
capsnet = capsnet(is_training=id18.is_training)

   this is how capsule network (cpnet) looks like on tensorboard graph.
   [1*hrft-mwpt-q_624daxcmyg.png]

   training the capsule network
tf.logging.info('graph loaded')
sv = tf.train.supervisor(graph=capsnet.graph,
                             logdir=id18.logdir,
                             save_model_secs=0)
path = id18.results + '/accuracy.csv'
if not os.path.exists(id18.results):
    os.mkdir(id18.results)
elif os.path.exists(path):
    os.remove(path)
fd_results = open(path, 'w')
fd_results.write('step,test_acc\n')

   and creating tf session and running the epochs.
   by default the model will be trained for 50 epochs at a batch size of
   128. you are always welcome to change the config and try new
   combinations of hyper parameters.
with sv.managed_session() as sess:
    num_batch = int(60000 / id18.batch_size)
    num_test_batch = 10000 // id18.batch_size
    tex, tey = load_mnist(id18.dataset, false)
    for epoch in range(id18.epoch):
        if sv.should_stop():
            break
        for step in tqdm(range(num_batch), total=num_batch, ncols=70, leave=fals
e, unit='b'):
            global_step = sess.run(capsnet.global_step)
            sess.run(capsnet.train_op)
if step % id18.train_sum_freq == 0:
                _, summary_str = sess.run([capsnet.train_op, capsnet.train_summa
ry])
                sv.summary_writer.add_summary(summary_str, global_step)
if (global_step + 1) % id18.test_sum_freq == 0:
                test_acc = 0
                for i in range(num_test_batch):
                    start = i * id18.batch_size
                    end = start + id18.batch_size
                    test_acc += sess.run(capsnet.batch_accuracy, {capsnet.x: tex
[start:end], capsnet.labels: tey[start:end]})
                test_acc = test_acc / (id18.batch_size * num_test_batch)
                fd_results.write(str(global_step + 1) + ',' + str(test_acc) + '\
n')
                fd_results.flush()
if epoch % id18.save_freq == 0:
            sv.saver.save(sess, id18.logdir + '/model_epoch_%04d_step_%02d' % (ep
och, global_step))
fd_results.close()
tf.logging.info('training done')

   [1*xaxauzrf7tdnm_xuxbrlpa.png]
   training process

     for running 50 epochs of capsule network it took me around 6 hours
     on nvidia titanxp card.
     but after successful training i was able to achieve 0.0038874 total
     loss which is incredible.          

   [1*vlhzgexoqqovxe-hpxgyoa.png]
   total loss plot
     __________________________________________________________________

download my trained capsule model

     cpnet model url : [24]https://goo.gl/dn7ss3

     you never know until you try it

   if you liked this article, my notebook and models, please applause     and
   share with others!

   for any queries , reach out to me via [25]linkedin , [26]twitter or
   email me on rahul@botsupply.ai.

     * [27]machine learning
     * [28]artificial intelligence
     * [29]deep learning
     * [30]tensorflow

   (button)
   (button)
   (button) 700 claps
   (button) (button) (button) 4 (button) (button)

     (button) blockedunblock (button) followfollowing
   [31]go to the profile of rahul kumar

[32]rahul kumar

   i   m a deeplearning enthusiast, an independent researcher and technology
   explorer. chief ai scientist @ botsupply.ai | jatana.ai

     (button) follow
   [33]#wecocreate

[34]#wecocreate

   organizations partner with our network of ai scientists, bot engineers
   and creatives to co-create ai & bots

     * (button)
       (button) 700
     * (button)
     *
     *

   [35]#wecocreate
   never miss a story from #wecocreate, when you sign up for medium.
   [36]learn more
   never miss a story from #wecocreate
   (button) get updatesget updates

references

   visible links
   1. https://plus.google.com/103654360130207659246
   2. https://medium.com/osd.xml
   3. android-app://com.medium.reader/https/medium.com/p/1099f5c67189
   4. https://medium.com/
   5. https://medium.com/
   6. https://medium.com/m/signin?redirect=https://medium.com/botsupply/running-capsulenet-on-tensorflow-1099f5c67189&source=--------------------------nav_reg&operation=login
   7. https://medium.com/m/signin?redirect=https://medium.com/botsupply/running-capsulenet-on-tensorflow-1099f5c67189&source=--------------------------nav_reg&operation=register
   8. https://medium.com/botsupply?source=logo-lo_dc69cl1uumaq---8a5c79a9c9e6
   9. https://medium.com/botsupply/mission/home
  10. https://medium.com/botsupply/solutions/home
  11. https://medium.com/botsupply/bots/home
  12. https://medium.com/botsupply/airesearch/home
  13. https://medium.com/botsupply/theweek/home
  14. https://medium.com/botsupply/jointheteam/home
  15. http://www.botsupply.ai/
  16. https://medium.com/@hellorahulk?source=post_header_lockup
  17. https://medium.com/@hellorahulk
  18. https://colab.research.google.com/
  19. https://www.youtube.com/watch?v=rtawfwuvnle
  20. https://hackernoon.com/capsule-networks-are-shaking-up-ai-heres-how-to-use-them-c233a0971952
  21. https://arxiv.org/pdf/1710.09829v1.pdf
  22. https://goo.gl/43jvju
  23. https://github.com/bourdakos1/capsule-networks.git
  24. https://goo.gl/dn7ss3
  25. https://www.linkedin.com/in/hellorahulk
  26. https://twitter.com/hellorahulk
  27. https://medium.com/tag/machine-learning?source=post
  28. https://medium.com/tag/artificial-intelligence?source=post
  29. https://medium.com/tag/deep-learning?source=post
  30. https://medium.com/tag/tensorflow?source=post
  31. https://medium.com/@hellorahulk?source=footer_card
  32. https://medium.com/@hellorahulk
  33. https://medium.com/botsupply?source=footer_card
  34. https://medium.com/botsupply?source=footer_card
  35. https://medium.com/botsupply
  36. https://medium.com/@medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg

   hidden links:
  38. https://medium.com/p/1099f5c67189/share/twitter
  39. https://medium.com/p/1099f5c67189/share/facebook
  40. https://medium.com/p/1099f5c67189/share/twitter
  41. https://medium.com/p/1099f5c67189/share/facebook
