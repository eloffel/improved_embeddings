dynamic deep learning 
a paradigm shift in ai research and tools

soumith chintala 
facebook ai research

overview

today's ai

    active research & 

future ai

tools for ai 

keeping up with change

today's ai

densecap by justin johnson & group  

https://github.com/jcjohnson/densecap

today's ai

future ai

tools for ai 

today's ai

deepmask by pedro pinhero & group

today's ai

future ai

tools for ai 

today's ai
machine translation

today's ai

future ai

tools for ai 

today's ai

text classi   cation (id31 etc.) 

text embeddings 
graph embeddings 
machine translation 

ads ranking

today's ai

future ai

tools for ai 

today's ai

train model

data

model

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

objective

today's ai

future ai

tools for ai 

today's ai

train model

data

model

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

objective

deploy & use

new 
data

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

prediction

today's ai

future ai

tools for ai 

today's ai

static datasets + static model structure
train model
objective

c
o
n
v
2
d

r
e
l
u

b
a
t
c
h
n
o
r
m

data

deploy & use

new 
data

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

prediction

today's ai

future ai

tools for ai 

today's ai

static datasets + static model structure
train model
objective

c
o
n
v
2
d

r
e
l
u

b
a
t
c
h
n
o
r
m

data

o   ine learning

deploy & use

new 
data

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

prediction

today's ai

future ai

tools for ai 

current ai research / future ai
self-driving cars

today's ai

future ai

tools for ai 

current ai research / future ai
agents trained in many environments

cars

video games

internet

today's ai

future ai

tools for ai 

current ai research / future ai
dynamic neural networks

self-adding new memory or layers 

changing evaluation path based on inputs

today's ai

future ai

tools for ai 

current ai research / future ai

live 
data

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

prediction

continued online learning

today's ai

future ai

tools for ai 

current ai research / future ai

sample-1

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

r

e

l

u

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

conv2d

batchnorm

b

atc

h

n

o
r

m

c

o

n

v

2

d

conv2d

batchnorm

relu

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

c

o

n

v

2

d

b

a

t

c

h

n

o

r

m

relu

r

e

l

u

prediction

data-dependent change in model structure

today's ai

future ai

tools for ai 

current ai research / future ai

sample-2

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

n

o
r

m

c

o

n

v

2

d

conv2d

batchnorm

relu

r

e

l

u

b

atc

h

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

r

e

l

u

b

a
t
c

h

n

o
r

m

c

conv2d

batchnorm

relu

o

n

v

2

d

prediction

data-dependent change in model structure

today's ai

future ai

tools for ai 

current ai research / future ai

sample

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

r
e
l
u

r
e
l
u

r
e
l
u

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

r
e
l
u

r
e
l
u

r
e
l
u

prediction

change in model-capacity at runtime

today's ai

future ai

tools for ai 

current ai research / future ai

sample

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

r
e
l
u

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

r
e
l
u

r
e
l
u

r
e
l
u

r
e
l
u

r
e
l
u

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

c
o
n
v
2
d

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

b
a
t
c
h
n
o
r
m

r
e
l
u

r
e
l
u

r
e
l
u

r
e
l
u

r
e
l
u

prediction

change in model-capacity at runtime

today's ai

future ai

tools for ai 

a next-gen framework for ai 

   interop with many dynamic environments 
- connecting to car sensors should be as easy as training on a dataset 
- connect to environments such as openai universe 
   dynamic neural networks 
- change behavior and structure of neural network at runtime 
   minimal abstractions 
- more complex ai systems means harder to debug without a simple api

today's ai

future ai

tools for ai 

tools for ai research and deployment
many machine learning tools and deep learning frameworks

today's ai

future ai

tools for ai 

tools for ai research and deployment

static graph frameworks

dynamic graph frameworks

today's ai

future ai

tools for ai 

dynamic graph frameworks

   model is constructed on the    y at runtime 
   change behavior, structure of model 
   imperative style of programming

today's ai

future ai

tools for ai 

pytorch autograd
from torch.autograd import variable 

pytorch autograd
from torch.autograd import variable 
x = variable(torch.randn(1, 10)) 
prev_h = variable(torch.randn(1, 20)) 
w_h = variable(torch.randn(20, 20)) 
w_x = variable(torch.randn(20, 10)) 

pytorch autograd
from torch.autograd import variable 
x = variable(torch.randn(1, 10)) 
prev_h = variable(torch.randn(1, 20)) 
w_h = variable(torch.randn(20, 20)) 
w_x = variable(torch.randn(20, 10)) 
i2h = torch.mm(w_x, x.t()) 
h2h = torch.mm(w_h, prev_h.t())

mm

mm

pytorch autograd
from torch.autograd import variable 
x = variable(torch.randn(1, 10)) 
prev_h = variable(torch.randn(1, 20)) 
w_h = variable(torch.randn(20, 20)) 
w_x = variable(torch.randn(20, 10)) 
i2h = torch.mm(w_x, x.t()) 
h2h = torch.mm(w_h, prev_h.t()) 
next_h = i2h + h2h

mm

mm

pytorch autograd
from torch.autograd import variable 
x = variable(torch.randn(1, 10)) 
prev_h = variable(torch.randn(1, 20)) 
w_h = variable(torch.randn(20, 20)) 
w_x = variable(torch.randn(20, 10)) 
i2h = torch.mm(w_x, x.t()) 
h2h = torch.mm(w_h, prev_h.t()) 
next_h = i2h + h2h

mm

mm

add

pytorch autograd
from torch.autograd import variable 
x = variable(torch.randn(1, 10)) 
prev_h = variable(torch.randn(1, 20)) 
w_h = variable(torch.randn(20, 20)) 
w_x = variable(torch.randn(20, 10)) 
i2h = torch.mm(w_x, x.t()) 
h2h = torch.mm(w_h, prev_h.t()) 
next_h = i2h + h2h 
next_h = next_h.tanh()

mm

mm

add

tanh

pytorch autograd
from torch.autograd import variable 
x = variable(torch.randn(1, 10)) 
prev_h = variable(torch.randn(1, 20)) 
w_h = variable(torch.randn(20, 20)) 
w_x = variable(torch.randn(20, 10)) 
i2h = torch.mm(w_x, x.t()) 
h2h = torch.mm(w_h, prev_h.t()) 
next_h = i2h + h2h 
next_h = next_h.tanh() 
next_h.backward(torch.ones(1, 20))

mm

mm

add

tanh

with     from

http://pytorch.org 
released jan 18th 
20,000+ downloads 
200+ community repos 
3000+ user posts 

